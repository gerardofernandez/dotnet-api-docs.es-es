<Type Name="Exception" FullName="System.Exception">
  <Metadata><Meta Name="ms.openlocfilehash" Value="32456a5d5f1f43059c002bacf13fda738938008f" /><Meta Name="ms.sourcegitcommit" Value="9802d4c6745a8ae514b26f144fb3969265b224ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/22/2018" /><Meta Name="ms.locfileid" Value="53750548" /></Metadata><TypeSignature Language="C#" Value="public class Exception : System.Runtime.InteropServices._Exception, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit Exception extends System.Object implements class System.Runtime.InteropServices._Exception, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Exception" />
  <TypeSignature Language="VB.NET" Value="Public Class Exception&#xA;Implements _Exception, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Exception : System::Runtime::InteropServices::_Exception, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Exception = class&#xA;    interface ISerializable&#xA;    interface _Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Exception</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Exception))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9a546-101">Representa los errores que se producen durante la ejecución de una aplicación.</span><span class="sxs-lookup"><span data-stu-id="9a546-101">Represents errors that occur during application execution.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-102">Esta clase es la clase base para todas las excepciones.</span><span class="sxs-lookup"><span data-stu-id="9a546-102">This class is the base class for all exceptions.</span></span> <span data-ttu-id="9a546-103">Cuando se produce un error, el sistema o la aplicación se está ejecutando lo notifica iniciando una excepción que contiene información sobre el error.</span><span class="sxs-lookup"><span data-stu-id="9a546-103">When an error occurs, either the system or the currently executing application reports it by throwing an exception that contains information about the error.</span></span> <span data-ttu-id="9a546-104">Una vez que se produce una excepción, se controla por la aplicación o el controlador de excepción predeterminado.</span><span class="sxs-lookup"><span data-stu-id="9a546-104">After an exception is thrown, it is handled by the application or by the default exception handler.</span></span>  
  
 <span data-ttu-id="9a546-105">En esta sección:</span><span class="sxs-lookup"><span data-stu-id="9a546-105">In this section:</span></span>  
  
 <span data-ttu-id="9a546-106">[Errores y excepciones](#Errors) </span><span class="sxs-lookup"><span data-stu-id="9a546-106">[Errors and exceptions](#Errors) </span></span>  
 <span data-ttu-id="9a546-107">[Bloques try/catch](#TryCatch) </span><span class="sxs-lookup"><span data-stu-id="9a546-107">[Try/catch blocks](#TryCatch) </span></span>  
 <span data-ttu-id="9a546-108">[Características del tipo de excepción](#Features) </span><span class="sxs-lookup"><span data-stu-id="9a546-108">[Exception type features](#Features) </span></span>  
 <span data-ttu-id="9a546-109">[Propiedades de la clase de excepción](#Properties) </span><span class="sxs-lookup"><span data-stu-id="9a546-109">[Exception class properties](#Properties) </span></span>  
 <span data-ttu-id="9a546-110">[Consideraciones de rendimiento](#Performance) </span><span class="sxs-lookup"><span data-stu-id="9a546-110">[Performance considerations](#Performance) </span></span>  
 <span data-ttu-id="9a546-111">[Volver a producir una excepción](#Rethrow) </span><span class="sxs-lookup"><span data-stu-id="9a546-111">[Re-throwing an exception](#Rethrow) </span></span>  
 <span data-ttu-id="9a546-112">[Elección de excepciones estándar](#Standard) </span><span class="sxs-lookup"><span data-stu-id="9a546-112">[Choosing standard exceptions](#Standard) </span></span>  
 [<span data-ttu-id="9a546-113">Implementación de excepciones personalizadas</span><span class="sxs-lookup"><span data-stu-id="9a546-113">Implementing custom exceptions</span></span>](#Custom)  
  
<a name="Errors"></a>   
## <a name="errors-and-exceptions"></a><span data-ttu-id="9a546-114">Errores y excepciones</span><span class="sxs-lookup"><span data-stu-id="9a546-114">Errors and exceptions</span></span>  
 <span data-ttu-id="9a546-115">Pueden producirse errores de tiempo de ejecución para una variedad de motivos.</span><span class="sxs-lookup"><span data-stu-id="9a546-115">Run-time errors can occur for a variety of reasons.</span></span> <span data-ttu-id="9a546-116">Sin embargo, no todos los errores deben controlarse como excepciones en el código.</span><span class="sxs-lookup"><span data-stu-id="9a546-116">However, not all errors should be handled as exceptions in your code.</span></span> <span data-ttu-id="9a546-117">Estas son algunas categorías de errores que pueden producirse en tiempo de ejecución y de forma apropiada para responder a ellos.</span><span class="sxs-lookup"><span data-stu-id="9a546-117">Here are some categories of errors that can occur at run time and the appropriate ways to respond to them.</span></span>  
  
-   <span data-ttu-id="9a546-118">**Errores de uso.**</span><span class="sxs-lookup"><span data-stu-id="9a546-118">**Usage errors.**</span></span> <span data-ttu-id="9a546-119">Un error de uso representa un error en la lógica del programa que puede dar lugar a una excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-119">A usage error represents an error in program logic that can result in an exception.</span></span> <span data-ttu-id="9a546-120">Sin embargo, se debe solucionar el error modificando el código defectuoso, pero no a través del control de excepciones.</span><span class="sxs-lookup"><span data-stu-id="9a546-120">However, the error should be addressed not through exception handling but by modifying the faulty code.</span></span> <span data-ttu-id="9a546-121">Por ejemplo, la invalidación de la <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> método en el ejemplo siguiente se da por supuesto que el `obj` argumento siempre debe ser distinto de null.</span><span class="sxs-lookup"><span data-stu-id="9a546-121">For example, the override of the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method in the following example assumes that the `obj` argument must always be non-null.</span></span>  
  
     [!code-csharp[System.Exception.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors1.cs#4)]
     [!code-vb[System.Exception.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors1.vb#4)]  
  
     <span data-ttu-id="9a546-122">El <xref:System.NullReferenceException> excepción que se produce cuando `obj` es `null` eliminar se puede modificar el código fuente para comprobar explícitamente null antes de llamar a la <xref:System.Object.Equals%2A?displayProperty=nameWithType> invalidación y, a continuación, volver a compilar.</span><span class="sxs-lookup"><span data-stu-id="9a546-122">The <xref:System.NullReferenceException> exception that results when `obj` is `null` can be eliminated by modifying the source code to explicitly test for null before calling the <xref:System.Object.Equals%2A?displayProperty=nameWithType> override and then re-compiling.</span></span> <span data-ttu-id="9a546-123">El ejemplo siguiente contiene el código fuente corregidos que controla un `null` argumento.</span><span class="sxs-lookup"><span data-stu-id="9a546-123">The following example contains the corrected source code that handles a `null` argument.</span></span>  
  
     [!code-csharp[System.Exception.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/usageerrors2.cs#5)]
     [!code-vb[System.Exception.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/usageerrors2.vb#5)]  
  
     <span data-ttu-id="9a546-124">En lugar de usar el control de excepciones para errores de uso, puede usar el <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> método para identificar los errores de uso en las compilaciones de depuración y el <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> compilaciones de método para identificar los errores de uso de debug y release.</span><span class="sxs-lookup"><span data-stu-id="9a546-124">Instead of using exception handling for usage errors, you can use the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method to identify usage errors in debug builds, and the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method to identify usage errors in both debug and release builds.</span></span> <span data-ttu-id="9a546-125">Para obtener más información, consulte [aserciones en el código administrado](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="9a546-125">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
-   <span data-ttu-id="9a546-126">**Errores del programa.**</span><span class="sxs-lookup"><span data-stu-id="9a546-126">**Program errors.**</span></span> <span data-ttu-id="9a546-127">Un error de programa es un error de tiempo de ejecución que no necesariamente se puede evitar al escribir código libre de errores.</span><span class="sxs-lookup"><span data-stu-id="9a546-127">A program error is a run-time error that cannot necessarily be avoided by writing bug-free code.</span></span>  
  
     <span data-ttu-id="9a546-128">En algunos casos, un error en un programa puede reflejar una condición de error esperado o rutina.</span><span class="sxs-lookup"><span data-stu-id="9a546-128">In some cases, a program error may reflect an expected or routine error condition.</span></span> <span data-ttu-id="9a546-129">En este caso, desea evitar el uso de control de excepciones para tratar el error del programa y en su lugar, vuelva a intentar la operación.</span><span class="sxs-lookup"><span data-stu-id="9a546-129">In this case, you may want to avoid using exception handling to deal with the program error and instead retry the operation.</span></span> <span data-ttu-id="9a546-130">Por ejemplo, si se espera que el usuario escriba una fecha en un formato determinado, puede analizar la cadena de fecha mediante una llamada a la <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> método, que devuelve un <xref:System.Boolean> valor que indica si la operación de análisis se realizó correctamente, en lugar de usar el <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>método, que produce una <xref:System.FormatException> excepción si no se puede convertir la cadena de fecha a un <xref:System.DateTime> valor.</span><span class="sxs-lookup"><span data-stu-id="9a546-130">For example, if the user is expected to input a date in a particular format, you can parse the date string by calling the <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> method, which returns a <xref:System.Boolean> value that indicates whether the parse operation succeeded, instead of using the <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> method, which throws a <xref:System.FormatException> exception if the date string cannot be converted to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="9a546-131">De forma similar, si un usuario intenta abrir un archivo que no existe, puede llamar primero a la <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> método para comprobar si el archivo existe y, si no es así, preguntar al usuario si desea crearla.</span><span class="sxs-lookup"><span data-stu-id="9a546-131">Similarly, if a user tries to open a file that does not exist, you can first call the <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> method to check whether the file exists and, if it does not, prompt the user whether he or she wants to create it.</span></span>  
  
     <span data-ttu-id="9a546-132">En otros casos, un error de programa refleja una condición de error inesperados que puede controlarse en el código.</span><span class="sxs-lookup"><span data-stu-id="9a546-132">In other cases, a program error reflects an unexpected error condition that can be handled in your code.</span></span> <span data-ttu-id="9a546-133">Por ejemplo, incluso si ha comprobado para asegurarse de que existe un archivo, se puede eliminar antes de que se puede abrir o esté dañado.</span><span class="sxs-lookup"><span data-stu-id="9a546-133">For example, even if you've checked to ensure that a file exists, it may be deleted before you can open it, or it may be corrupted.</span></span> <span data-ttu-id="9a546-134">En ese caso, al intentar abrir el archivo creando un <xref:System.IO.StreamReader> objeto o llamar a la <xref:System.IO.File.Open%2A> método puede producir un <xref:System.IO.FileNotFoundException> excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-134">In that case, trying to open the file by instantiating a <xref:System.IO.StreamReader> object or calling the <xref:System.IO.File.Open%2A> method may throw a <xref:System.IO.FileNotFoundException> exception.</span></span> <span data-ttu-id="9a546-135">En estos casos, debe usar el control de excepciones para recuperarse del error.</span><span class="sxs-lookup"><span data-stu-id="9a546-135">In these cases, you should use exception handling to recover from the error.</span></span>  
  
-   <span data-ttu-id="9a546-136">**Errores del sistema.**</span><span class="sxs-lookup"><span data-stu-id="9a546-136">**System failures.**</span></span> <span data-ttu-id="9a546-137">Un error del sistema es un error de tiempo de ejecución que no se puede controlar mediante programación de forma significativa.</span><span class="sxs-lookup"><span data-stu-id="9a546-137">A system failure is a run-time error that cannot be handled programmatically in a meaningful way.</span></span> <span data-ttu-id="9a546-138">Por ejemplo, cualquier método puede producir un <xref:System.OutOfMemoryException> excepción si common language runtime no puede asignar memoria adicional.</span><span class="sxs-lookup"><span data-stu-id="9a546-138">For example, any method can throw an <xref:System.OutOfMemoryException> exception if the common language runtime is unable to allocate additional memory.</span></span> <span data-ttu-id="9a546-139">Normalmente, los errores del sistema no se controlan mediante el uso de control de excepciones.</span><span class="sxs-lookup"><span data-stu-id="9a546-139">Ordinarily, system failures are not handled by using exception handling.</span></span> <span data-ttu-id="9a546-140">En su lugar, es posible que pueda usar como un evento <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> y llamar a la <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> método para registrar información de excepción y notificar al usuario del error antes de que termine la aplicación.</span><span class="sxs-lookup"><span data-stu-id="9a546-140">Instead, you may be able to use an event such as <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> and call the <xref:System.Environment.FailFast%2A?displayProperty=nameWithType> method to log exception information and notify the user of the failure before the application terminates.</span></span>  
  
<a name="TryCatch"></a>   
## <a name="trycatch-blocks"></a><span data-ttu-id="9a546-141">Bloques try/catch</span><span class="sxs-lookup"><span data-stu-id="9a546-141">Try/catch blocks</span></span>  
 <span data-ttu-id="9a546-142">Common language runtime proporciona un modelo de control de excepciones que se basa en la representación de excepciones como objetos y la separación de código de programa y el código en el control de excepciones `try` bloques y `catch` bloques.</span><span class="sxs-lookup"><span data-stu-id="9a546-142">The common language runtime provides an exception handling model that is based on the representation of exceptions as objects, and the separation of program code and exception handling code into `try` blocks and `catch` blocks.</span></span> <span data-ttu-id="9a546-143">Puede haber uno o más `catch` bloquea, cada una diseñada para controlar un tipo concreto de excepción o un bloque está diseñado para detectar una excepción más específica que otro bloque.</span><span class="sxs-lookup"><span data-stu-id="9a546-143">There can be one or more `catch` blocks, each designed to handle a particular type of exception, or one block designed to catch a more specific exception than another block.</span></span>  
  
 <span data-ttu-id="9a546-144">Si una aplicación controla las excepciones que se producen durante la ejecución de un bloque de código de la aplicación, el código debe colocarse dentro de un `try` instrucción y se llama a un `try` bloque.</span><span class="sxs-lookup"><span data-stu-id="9a546-144">If an application handles exceptions that occur during the execution of a block of application code, the code must be placed within a `try` statement and is called a `try` block.</span></span> <span data-ttu-id="9a546-145">Código de la aplicación que controla las excepciones producidas por un `try` bloque se coloca dentro de un `catch` instrucción y se llama a un `catch` bloque.</span><span class="sxs-lookup"><span data-stu-id="9a546-145">Application code that handles exceptions thrown by a `try` block is placed within a `catch` statement and is called a `catch` block.</span></span> <span data-ttu-id="9a546-146">Cero o más `catch` bloques están asociados con un `try` bloque y cada `catch` bloque incluye un filtro de tipo que determina los tipos de excepciones que controla.</span><span class="sxs-lookup"><span data-stu-id="9a546-146">Zero or more `catch` blocks are associated with a `try` block, and each `catch` block includes a type filter that determines the types of exceptions it handles.</span></span>  
  
 <span data-ttu-id="9a546-147">Cuando se produce una excepción en un `try` bloque, el sistema busca asociado `catch` bloques en el orden que aparecen en el código de aplicación, hasta que encuentra un `catch` bloque que controla la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-147">When an exception occurs in a `try` block, the system searches the associated `catch` blocks in the order they appear in application code, until it locates a `catch` block that handles the exception.</span></span> <span data-ttu-id="9a546-148">Un `catch` bloque controla una excepción de tipo `T` si el filtro de tipo del bloque catch especifica `T` o cualquier tipo que `T` deriva.</span><span class="sxs-lookup"><span data-stu-id="9a546-148">A `catch` block handles an exception of type `T` if the type filter of the catch block specifies `T` or any type that `T` derives from.</span></span> <span data-ttu-id="9a546-149">El sistema detiene la búsqueda después de que encuentra el primer `catch` bloque que controla la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-149">The system stops searching after it finds the first `catch` block that handles the exception.</span></span> <span data-ttu-id="9a546-150">Por este motivo, en el código de aplicación, un `catch` bloque que controla un tipo debe especificarse antes un `catch` bloque que controla sus tipos base, como se muestra en el ejemplo siguiente de esta sección.</span><span class="sxs-lookup"><span data-stu-id="9a546-150">For this reason, in application code, a `catch` block that handles a type must be specified before a `catch` block that handles its base types, as demonstrated in the example that follows this section.</span></span> <span data-ttu-id="9a546-151">Un bloque catch que controla `System.Exception` se especifica por última vez.</span><span class="sxs-lookup"><span data-stu-id="9a546-151">A catch block that handles `System.Exception` is specified last.</span></span>  
  
 <span data-ttu-id="9a546-152">Si ninguna de la `catch` bloques asociados con el actual `try` bloque controlar la excepción y la actual `try` bloque está anidado dentro de otros `try` bloquea en la llamada actual, el `catch` bloques asociados con el siguiente envolvente `try` se busca en bloque.</span><span class="sxs-lookup"><span data-stu-id="9a546-152">If none of the `catch` blocks associated with the current `try` block handle the exception, and the current `try` block is nested within other `try` blocks in the current call, the `catch` blocks associated with the next enclosing `try` block are searched.</span></span> <span data-ttu-id="9a546-153">Si no hay ningún `catch` se encuentra el bloque de la excepción, el sistema busca en los niveles de anidamiento anteriores en la llamada actual.</span><span class="sxs-lookup"><span data-stu-id="9a546-153">If no `catch` block for the exception is found, the system searches previous nesting levels in the current call.</span></span> <span data-ttu-id="9a546-154">Si no hay ningún `catch` bloquear para la excepción que se encuentra en la llamada actual, la excepción se pasa a la pila de llamadas y el marco de pila anterior se busca un `catch` bloque que controla la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-154">If no `catch` block for the exception is found in the current call, the exception is passed up the call stack, and the previous stack frame is searched for a `catch` block that handles the exception.</span></span> <span data-ttu-id="9a546-155">La búsqueda de la pila de llamadas continúa hasta que se controla la excepción o hasta que no hay más marcos en la pila de llamadas.</span><span class="sxs-lookup"><span data-stu-id="9a546-155">The search of the call stack continues until the exception is handled or until no more frames exist on the call stack.</span></span> <span data-ttu-id="9a546-156">Si se alcanza la parte superior de la pila de llamadas sin buscar una `catch` bloque que controla la excepción, el controlador de excepciones predeterminado controla la excepción y la aplicación finaliza.</span><span class="sxs-lookup"><span data-stu-id="9a546-156">If the top of the call stack is reached without finding a `catch` block that handles the exception, the default exception handler handles it and the application terminates.</span></span>  
  
<a name="Features"></a>   
## <a name="exception-type-features"></a><span data-ttu-id="9a546-157">Características del tipo de excepción</span><span class="sxs-lookup"><span data-stu-id="9a546-157">Exception type features</span></span>  
 <span data-ttu-id="9a546-158">Tipos de excepción admiten las siguientes características:</span><span class="sxs-lookup"><span data-stu-id="9a546-158">Exception types support the following features:</span></span>  
  
-   <span data-ttu-id="9a546-159">Texto legible que describe el error.</span><span class="sxs-lookup"><span data-stu-id="9a546-159">Human-readable text that describes the error.</span></span> <span data-ttu-id="9a546-160">Cuando se produce una excepción, el tiempo de ejecución hace que un mensaje de texto disponible para informar al usuario de la naturaleza del error y sugerir la acción para resolver el problema.</span><span class="sxs-lookup"><span data-stu-id="9a546-160">When an exception occurs, the runtime makes a text message available to inform the user of the nature of the error and to suggest action to resolve the problem.</span></span> <span data-ttu-id="9a546-161">Este mensaje de texto se guarda en el <xref:System.Exception.Message%2A> propiedad del objeto de excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-161">This text message is held in the <xref:System.Exception.Message%2A> property of the exception object.</span></span> <span data-ttu-id="9a546-162">Durante la creación del objeto de excepción, puede pasar una cadena de texto al constructor para describir los detalles de esa excepción concreta.</span><span class="sxs-lookup"><span data-stu-id="9a546-162">During the creation of the exception object, you can pass a text string to the constructor to describe the details of that particular exception.</span></span> <span data-ttu-id="9a546-163">Si se proporciona ningún argumento de mensaje de error al constructor, se utiliza el mensaje de error predeterminado.</span><span class="sxs-lookup"><span data-stu-id="9a546-163">If no error message argument is supplied to the constructor, the default error message is used.</span></span> <span data-ttu-id="9a546-164">Para obtener más información, vea la propiedad <xref:System.Exception.Message%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a546-164">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="9a546-165">El estado de la pila de llamadas cuando se produjo la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-165">The state of the call stack when the exception was thrown.</span></span> <span data-ttu-id="9a546-166">El <xref:System.Exception.StackTrace%2A> propiedad lleva un seguimiento de pila que puede usarse para determinar dónde se produce el error en el código.</span><span class="sxs-lookup"><span data-stu-id="9a546-166">The <xref:System.Exception.StackTrace%2A> property carries a stack trace that can be used to determine where the error occurs in the code.</span></span> <span data-ttu-id="9a546-167">El seguimiento de pila enumera todos los métodos llamados y los números de línea en el archivo de código fuente donde se realizan las llamadas.</span><span class="sxs-lookup"><span data-stu-id="9a546-167">The stack trace lists all the called methods and the line numbers in the source file where the calls are made.</span></span>  
  
<a name="Properties"></a>   
## <a name="exception-class-properties"></a><span data-ttu-id="9a546-168">Propiedades de la clase de excepción</span><span class="sxs-lookup"><span data-stu-id="9a546-168">Exception class properties</span></span>  
 <span data-ttu-id="9a546-169">El <xref:System.Exception> clase incluye una serie de propiedades que ayudan a identificar la ubicación del código, el tipo, el archivo de ayuda y el motivo de la excepción: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, y <xref:System.Exception.Data%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a546-169">The <xref:System.Exception> class includes a number of properties that help identify the code location, the type, the help file, and the reason for the exception: <xref:System.Exception.StackTrace%2A>, <xref:System.Exception.InnerException%2A>, <xref:System.Exception.Message%2A>, <xref:System.Exception.HelpLink%2A>, <xref:System.Exception.HResult%2A>, <xref:System.Exception.Source%2A>, <xref:System.Exception.TargetSite%2A>, and <xref:System.Exception.Data%2A>.</span></span>  
  
 <span data-ttu-id="9a546-170">Cuando existe una relación causal entre dos o más excepciones, la <xref:System.Exception.InnerException%2A> propiedad mantiene esta información.</span><span class="sxs-lookup"><span data-stu-id="9a546-170">When a causal relationship exists between two or more exceptions, the <xref:System.Exception.InnerException%2A> property maintains this information.</span></span> <span data-ttu-id="9a546-171">La excepción externa se produce como respuesta a esta excepción interna.</span><span class="sxs-lookup"><span data-stu-id="9a546-171">The outer exception is thrown in response to this inner exception.</span></span> <span data-ttu-id="9a546-172">El código que controla la excepción externa puede usar la información de la excepción interna anterior para controlar el error más adecuadamente.</span><span class="sxs-lookup"><span data-stu-id="9a546-172">The code that handles the outer exception can use the information from the earlier inner exception to handle the error more appropriately.</span></span> <span data-ttu-id="9a546-173">Información complementaria acerca de la excepción que se puede almacenar como una colección de pares clave/valor en el <xref:System.Exception.Data%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a546-173">Supplementary information about the exception can be stored as a collection of key/value pairs in the <xref:System.Exception.Data%2A> property.</span></span>  
  
 <span data-ttu-id="9a546-174">La cadena de mensaje de error que se pasa al constructor durante la creación del objeto de excepción se debe traducir y se pueden proporcionar desde un archivo de recursos mediante el uso de la <xref:System.Resources.ResourceManager> clase.</span><span class="sxs-lookup"><span data-stu-id="9a546-174">The error message string that is passed to the constructor during the creation of the exception object should be localized and can be supplied from a resource file by using the <xref:System.Resources.ResourceManager> class.</span></span> <span data-ttu-id="9a546-175">Para obtener más información acerca de los recursos localizados, consulte el [crear ensamblados satélite](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) y [empaquetar e implementar recursos](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) temas.</span><span class="sxs-lookup"><span data-stu-id="9a546-175">For more information about localized resources, see the [Creating Satellite Assemblies](~/docs/framework/resources/creating-satellite-assemblies-for-desktop-apps.md) and [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md) topics.</span></span>  
  
 <span data-ttu-id="9a546-176">Para proporcionar al usuario con una amplia información sobre por qué se produjo la excepción, el <xref:System.Exception.HelpLink%2A> propiedad puede contener una dirección URL (o URN) a un archivo de ayuda.</span><span class="sxs-lookup"><span data-stu-id="9a546-176">To provide the user with extensive information about why the exception occurred, the <xref:System.Exception.HelpLink%2A> property can hold a URL (or URN) to a help file.</span></span>  
  
 <span data-ttu-id="9a546-177">La <xref:System.Exception> clase utiliza HRESULT COR_E_EXCEPTION, que tiene el valor 0 x 80131500.</span><span class="sxs-lookup"><span data-stu-id="9a546-177">The <xref:System.Exception> class uses the HRESULT COR_E_EXCEPTION, which has the value 0x80131500.</span></span>  
  
 <span data-ttu-id="9a546-178">Para obtener una lista de valores de propiedad iniciales de una instancia de la <xref:System.Exception> de clases, vea el <xref:System.Exception.%23ctor%2A> constructores.</span><span class="sxs-lookup"><span data-stu-id="9a546-178">For a list of initial property values for an instance of the <xref:System.Exception> class, see the <xref:System.Exception.%23ctor%2A> constructors.</span></span>  
  
<a name="Performance"></a>   
## <a name="performance-considerations"></a><span data-ttu-id="9a546-179">Consideraciones sobre el rendimiento</span><span class="sxs-lookup"><span data-stu-id="9a546-179">Performance considerations</span></span>  
 <span data-ttu-id="9a546-180">Iniciar o controlar una excepción consume una cantidad significativa de tiempo de ejecución y los recursos del sistema.</span><span class="sxs-lookup"><span data-stu-id="9a546-180">Throwing or handling an exception consumes a significant amount of system resources and execution time.</span></span> <span data-ttu-id="9a546-181">Producir excepciones sólo para controlar condiciones verdaderamente extraordinarias, no para controlar eventos previsibles o control de flujo.</span><span class="sxs-lookup"><span data-stu-id="9a546-181">Throw exceptions only to handle truly extraordinary conditions, not to handle predictable events or flow control.</span></span> <span data-ttu-id="9a546-182">Por ejemplo, en algunos casos, como cuando está desarrollando una biblioteca de clases, es razonable producir una excepción si un argumento de método no es válido porque se espera que el método se llama con los parámetros válidos.</span><span class="sxs-lookup"><span data-stu-id="9a546-182">For example, in some cases, such as when you're developing a class library, it's reasonable to throw an exception if a method argument is invalid, because you expect your method to be called with valid parameters.</span></span> <span data-ttu-id="9a546-183">Un argumento de método no válida, si no es el resultado de un error de uso, significa que ha sucedido algo extraordinario.</span><span class="sxs-lookup"><span data-stu-id="9a546-183">An invalid method argument, if it is not the result of a usage error, means that something extraordinary has occurred.</span></span> <span data-ttu-id="9a546-184">Por el contrario, no producen una excepción si la entrada del usuario no es válida, porque pueden esperar los usuarios escriban en ocasiones los datos no válidos.</span><span class="sxs-lookup"><span data-stu-id="9a546-184">Conversely, do not throw an exception if user input is invalid, because you can expect users to occasionally enter invalid data.</span></span> <span data-ttu-id="9a546-185">En su lugar, proporcionan un mecanismo de reintento para que los usuarios pueden escribir una entrada válida.</span><span class="sxs-lookup"><span data-stu-id="9a546-185">Instead, provide a retry mechanism so users can enter valid input.</span></span> <span data-ttu-id="9a546-186">Tampoco debe usar excepciones para controlar los errores de uso.</span><span class="sxs-lookup"><span data-stu-id="9a546-186">Nor should you use exceptions to handle usage errors.</span></span> <span data-ttu-id="9a546-187">En su lugar, use [aserciones](/visualstudio/debugger/assertions-in-managed-code) para identificar y corregir errores de uso.</span><span class="sxs-lookup"><span data-stu-id="9a546-187">Instead, use [assertions](/visualstudio/debugger/assertions-in-managed-code) to identify and correct usage errors.</span></span>  
  
 <span data-ttu-id="9a546-188">Además, no producen una excepción cuando un código de retorno es suficiente; un código de retorno no se convierten en una excepción; debe pasarse una excepción omitirla y, a continuación, continuar el procesamiento.</span><span class="sxs-lookup"><span data-stu-id="9a546-188">In addition, do not throw an exception when a return code is sufficient; do not convert a return code to an exception; and do not routinely catch an exception, ignore it, and then continue processing.</span></span>  
  
<a name="Rethrow"></a>   
## <a name="re-throwing-an-exception"></a><span data-ttu-id="9a546-189">Volver a iniciar una excepción</span><span class="sxs-lookup"><span data-stu-id="9a546-189">Re-throwing an exception</span></span>  
 <span data-ttu-id="9a546-190">En muchos casos, basta con un controlador de excepciones desea pasar la excepción al autor de la llamada.</span><span class="sxs-lookup"><span data-stu-id="9a546-190">In many cases, an exception handler simply wants to pass the exception on to the caller.</span></span> <span data-ttu-id="9a546-191">Esto suele ocurrir en:</span><span class="sxs-lookup"><span data-stu-id="9a546-191">This most often occurs in:</span></span>  
  
-   <span data-ttu-id="9a546-192">Una biblioteca de clases que a su vez encapsula las llamadas a métodos en la biblioteca de clases de .NET Framework u otras bibliotecas de clase.</span><span class="sxs-lookup"><span data-stu-id="9a546-192">A class library that in turn wraps calls to methods in the .NET Framework class library or other class libraries.</span></span>  
  
-   <span data-ttu-id="9a546-193">Una aplicación o biblioteca que se encuentra una excepción grave.</span><span class="sxs-lookup"><span data-stu-id="9a546-193">An application or library that encounters a fatal exception.</span></span> <span data-ttu-id="9a546-194">El controlador de excepciones puede registrar la excepción y, a continuación, volver a producir la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-194">The exception handler can log the exception and then re-throw the exception.</span></span>  
  
 <span data-ttu-id="9a546-195">La manera recomendada para volver a iniciar una excepción es simplemente utilizar el [throw](~/docs/csharp/language-reference/keywords/throw.md) instrucción en C# y el [Throw](~/docs/visual-basic/language-reference/statements/throw-statement.md) instrucción en Visual Basic, sin incluir una expresión.</span><span class="sxs-lookup"><span data-stu-id="9a546-195">The recommended way to re-throw an exception is to simply use the [throw](~/docs/csharp/language-reference/keywords/throw.md) statement in C# and the [Throw](~/docs/visual-basic/language-reference/statements/throw-statement.md) statement in Visual Basic without including an expression.</span></span> <span data-ttu-id="9a546-196">Esto garantiza que toda información de pila de llamadas se conserva cuando la excepción se propaga al llamador.</span><span class="sxs-lookup"><span data-stu-id="9a546-196">This ensures that all call stack information is preserved when the exception is propagated to the caller.</span></span> <span data-ttu-id="9a546-197">Esto se ilustra en el siguiente ejemplo:</span><span class="sxs-lookup"><span data-stu-id="9a546-197">The following example illustrates this.</span></span> <span data-ttu-id="9a546-198">Un método de extensión de la cadena, `FindOccurrences`, incluye una o varias de las llamadas a <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> sin validar sus argumentos con antelación.</span><span class="sxs-lookup"><span data-stu-id="9a546-198">A string extension method, `FindOccurrences`, wraps one or more calls to <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> without validating its arguments beforehand.</span></span>  
  
 [!code-csharp[System.Exception.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#6)]
 [!code-vb[System.Exception.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#6)]  
  
 <span data-ttu-id="9a546-199">A continuación, llama a un llamador `FindOccurrences` dos veces.</span><span class="sxs-lookup"><span data-stu-id="9a546-199">A caller then calls `FindOccurrences` twice.</span></span> <span data-ttu-id="9a546-200">En la segunda llamada a `FindOccurrences`, las fases de llamador un `null` como la cadena de búsqueda, qué casos la <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> método inicie una <xref:System.ArgumentNullException> excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-200">In the second call to `FindOccurrences`, the caller passes a `null` as the search string, which cases the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method to throw an <xref:System.ArgumentNullException> exception.</span></span> <span data-ttu-id="9a546-201">Esta excepción se controla mediante el `FindOccurrences` método y devuelta al llamador.</span><span class="sxs-lookup"><span data-stu-id="9a546-201">This exception is handled by the `FindOccurrences` method and passed back to the caller.</span></span> <span data-ttu-id="9a546-202">Puesto que se utiliza la instrucción throw sin ninguna expresión, el resultado del ejemplo muestra que se conserva la pila de llamadas.</span><span class="sxs-lookup"><span data-stu-id="9a546-202">Because the throw statement is used with no expression, the output from the example shows that the call stack is preserved.</span></span>  
  
 [!code-csharp[System.Exception.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow1.cs#7)]
 [!code-vb[System.Exception.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow1.vb#7)]  
  
 <span data-ttu-id="9a546-203">En cambio, si la excepción se vuelve a producir usando el</span><span class="sxs-lookup"><span data-stu-id="9a546-203">In contrast, if the exception is re-thrown by using the</span></span>  
  
```csharp  
throw e  
```  
  
```vb  
Throw e  
```  
  
 <span data-ttu-id="9a546-204">no se conserva la instrucción, la pila de llamadas completa y, en el ejemplo se generaría la siguiente salida:</span><span class="sxs-lookup"><span data-stu-id="9a546-204">statement, the full call stack is not preserved, and the example would generate the following output:</span></span>  
  
```Output  
  
'a' occurs at the following character positions: 4, 7, 15  
  
An exception (ArgumentNullException) occurred.  
Message:  
   Value cannot be null.  
Parameter name: value  
  
Stack Trace:  
      at Library.FindOccurrences(String s, String f)  
   at Example.Main()  
  
```  
  
 <span data-ttu-id="9a546-205">Una alternativa ligeramente más complicada es para iniciar una nueva excepción y para conservar la información de pila de llamadas de la excepción original en una excepción interna.</span><span class="sxs-lookup"><span data-stu-id="9a546-205">A slightly more cumbersome alternative is to throw a new exception, and to preserve the original exception's call stack information in an inner exception.</span></span> <span data-ttu-id="9a546-206">El llamador, a continuación, puede usar la nueva excepción <xref:System.Exception.InnerException%2A> propiedad para recuperar el marco de pila y otra información sobre la excepción original.</span><span class="sxs-lookup"><span data-stu-id="9a546-206">The caller can then use the new exception's <xref:System.Exception.InnerException%2A> property to retrieve stack frame and other information about the original exception.</span></span> <span data-ttu-id="9a546-207">En este caso, la instrucción throw es:</span><span class="sxs-lookup"><span data-stu-id="9a546-207">In this case, the throw statement is:</span></span>  
  
 [!code-csharp[System.Exception.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#8)]
 [!code-vb[System.Exception.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#8)]  
  
 <span data-ttu-id="9a546-208">El código de usuario que controla la excepción tiene que saber que el <xref:System.Exception.InnerException%2A> propiedad contiene información sobre la excepción original, como se muestra en el siguiente controlador de excepciones.</span><span class="sxs-lookup"><span data-stu-id="9a546-208">The user code that handles the exception has to know that the <xref:System.Exception.InnerException%2A> property contains information about the original exception, as the following exception handler illustrates.</span></span>  
  
 [!code-csharp[System.Exception.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/rethrow3.cs#9)]
 [!code-vb[System.Exception.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/rethrow3.vb#9)]  
  
<a name="Standard"></a>   
## <a name="choosing-standard-exceptions"></a><span data-ttu-id="9a546-209">Elección de excepciones estándar</span><span class="sxs-lookup"><span data-stu-id="9a546-209">Choosing standard exceptions</span></span>  
 <span data-ttu-id="9a546-210">Cuando tiene que producir una excepción, a menudo puede utilizar un tipo de excepción existente en .NET Framework en lugar de implementar una excepción personalizada.</span><span class="sxs-lookup"><span data-stu-id="9a546-210">When you have to throw an exception, you can often use an existing exception type in the .NET Framework instead of implementing a custom exception.</span></span> <span data-ttu-id="9a546-211">Debe usar un tipo de excepción estándar en estas dos condiciones:</span><span class="sxs-lookup"><span data-stu-id="9a546-211">You should use a standard exception type under these two conditions:</span></span>  
  
-   <span data-ttu-id="9a546-212">Se produce una excepción producida por un error de uso (es decir, un error en la lógica del programa realizada por el desarrollador que está llamando a su método).</span><span class="sxs-lookup"><span data-stu-id="9a546-212">You are throwing an exception that is caused by a usage error (that is, by an error in program logic made by the developer who is calling your method).</span></span> <span data-ttu-id="9a546-213">Normalmente, se iniciaba una excepción como <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, o <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="9a546-213">Typically, you would throw an exception such as <xref:System.ArgumentException>, <xref:System.ArgumentNullException>, <xref:System.InvalidOperationException>, or <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="9a546-214">La cadena se proporciona al constructor del objeto de excepción al crear instancias del objeto de excepción deben describir el error para que el desarrollador puede corregirlo.</span><span class="sxs-lookup"><span data-stu-id="9a546-214">The string you supply to the exception object's constructor when instantiating the exception object should describe the error so that the developer can fix it.</span></span> <span data-ttu-id="9a546-215">Para obtener más información, vea la propiedad <xref:System.Exception.Message%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a546-215">For more information, see the <xref:System.Exception.Message%2A> property.</span></span>  
  
-   <span data-ttu-id="9a546-216">Controla un error que se pueda comunicar al autor de llamada con una excepción de .NET Framework existente.</span><span class="sxs-lookup"><span data-stu-id="9a546-216">You are handling an error that can be communicated to the caller with an existing .NET Framework exception.</span></span> <span data-ttu-id="9a546-217">Debe iniciar la excepción más derivada posibles.</span><span class="sxs-lookup"><span data-stu-id="9a546-217">You should throw the most derived exception possible.</span></span> <span data-ttu-id="9a546-218">Por ejemplo, si un método requiere un argumento sea un miembro válido de un tipo de enumeración, se debe producir una <xref:System.ComponentModel.InvalidEnumArgumentException> (clase derivada de la mayoría) en lugar de un <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="9a546-218">For example, if a method requires an argument to be a valid member of an enumeration type, you should throw an <xref:System.ComponentModel.InvalidEnumArgumentException> (the most derived class) rather than an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="9a546-219">En la tabla siguiente se enumera los tipos de excepción comunes y las condiciones en las que se iniciaba.</span><span class="sxs-lookup"><span data-stu-id="9a546-219">The following table lists common exception types and the conditions under which you would throw them.</span></span>  
  
|<span data-ttu-id="9a546-220">Excepción</span><span class="sxs-lookup"><span data-stu-id="9a546-220">Exception</span></span>|<span data-ttu-id="9a546-221">Condición</span><span class="sxs-lookup"><span data-stu-id="9a546-221">Condition</span></span>|  
|---------------|---------------|  
|<xref:System.ArgumentException>|<span data-ttu-id="9a546-222">Un argumento distinto de null que se pasa a un método no es válido.</span><span class="sxs-lookup"><span data-stu-id="9a546-222">A non-null argument that is passed to a method is invalid.</span></span>|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="9a546-223">Es un argumento que se pasa a un método `null`.</span><span class="sxs-lookup"><span data-stu-id="9a546-223">An argument that is passed to a method is `null`.</span></span>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="9a546-224">Un argumento está fuera del intervalo de valores válidos.</span><span class="sxs-lookup"><span data-stu-id="9a546-224">An argument is outside the range of valid values.</span></span>|  
|<xref:System.IO.DirectoryNotFoundException>|<span data-ttu-id="9a546-225">Parte de una ruta de acceso de directorio no es válido.</span><span class="sxs-lookup"><span data-stu-id="9a546-225">Part of a directory path is not valid.</span></span>|  
|<xref:System.DivideByZeroException>|<span data-ttu-id="9a546-226">El denominador en un entero o <xref:System.Decimal> operación de división es cero.</span><span class="sxs-lookup"><span data-stu-id="9a546-226">The denominator in an integer or <xref:System.Decimal> division operation is zero.</span></span>|  
|<xref:System.IO.DriveNotFoundException>|<span data-ttu-id="9a546-227">Una unidad no está disponible o no existe.</span><span class="sxs-lookup"><span data-stu-id="9a546-227">A drive is unavailable or does not exist.</span></span>|  
|<xref:System.IO.FileNotFoundException>|<span data-ttu-id="9a546-228">No existe un archivo.</span><span class="sxs-lookup"><span data-stu-id="9a546-228">A file does not exist.</span></span>|  
|<xref:System.FormatException>|<span data-ttu-id="9a546-229">Un valor no está en un formato adecuado para convertirse en una cadena mediante un método de conversión, como `Parse`.</span><span class="sxs-lookup"><span data-stu-id="9a546-229">A value is not in an appropriate format to be converted from a string by a conversion method such as `Parse`.</span></span>|  
|<xref:System.IndexOutOfRangeException>|<span data-ttu-id="9a546-230">Un índice está fuera de los límites de una matriz o colección.</span><span class="sxs-lookup"><span data-stu-id="9a546-230">An index is outside the bounds of an array or collection.</span></span>|  
|<xref:System.InvalidOperationException>|<span data-ttu-id="9a546-231">Una llamada al método no es válido en el estado actual de un objeto.</span><span class="sxs-lookup"><span data-stu-id="9a546-231">A method call is invalid in an object's current state.</span></span>|  
|<xref:System.Collections.Generic.KeyNotFoundException>|<span data-ttu-id="9a546-232">No se encuentra la clave especificada para el acceso a un miembro de una colección.</span><span class="sxs-lookup"><span data-stu-id="9a546-232">The specified key for accessing a member in a collection cannot be found.</span></span>|  
|<xref:System.NotImplementedException>|<span data-ttu-id="9a546-233">No se implementa un método u operación.</span><span class="sxs-lookup"><span data-stu-id="9a546-233">A method or operation is not implemented.</span></span>|  
|<xref:System.NotSupportedException>|<span data-ttu-id="9a546-234">No se admite un método u operación.</span><span class="sxs-lookup"><span data-stu-id="9a546-234">A method or operation is not supported.</span></span>|  
|<xref:System.ObjectDisposedException>|<span data-ttu-id="9a546-235">Se realiza una operación en un objeto que se ha eliminado.</span><span class="sxs-lookup"><span data-stu-id="9a546-235">An operation is performed on an object that has been disposed.</span></span>|  
|<xref:System.OverflowException>|<span data-ttu-id="9a546-236">Una operación aritmética o de conversión provoca un desbordamiento.</span><span class="sxs-lookup"><span data-stu-id="9a546-236">An arithmetic, casting, or conversion operation results in an overflow.</span></span>|  
|<xref:System.IO.PathTooLongException>|<span data-ttu-id="9a546-237">Un nombre de archivo o ruta de acceso supera la longitud máxima definida por el sistema.</span><span class="sxs-lookup"><span data-stu-id="9a546-237">A path or file name exceeds the maximum system-defined length.</span></span>|  
|<xref:System.PlatformNotSupportedException>|<span data-ttu-id="9a546-238">La operación no se admite en la plataforma actual.</span><span class="sxs-lookup"><span data-stu-id="9a546-238">The operation is not supported on the current platform.</span></span>|  
|<xref:System.RankException>|<span data-ttu-id="9a546-239">Una matriz con un número incorrecto de dimensiones se pasa a un método.</span><span class="sxs-lookup"><span data-stu-id="9a546-239">An array with the wrong number of dimensions is passed to a method.</span></span>|  
|<xref:System.TimeoutException>|<span data-ttu-id="9a546-240">Ha expirado el intervalo de tiempo asignado a una operación.</span><span class="sxs-lookup"><span data-stu-id="9a546-240">The time interval allotted to an operation has expired.</span></span>|  
|<xref:System.UriFormatException>|<span data-ttu-id="9a546-241">Se usa un identificador uniforme de recursos (URI) válido.</span><span class="sxs-lookup"><span data-stu-id="9a546-241">An invalid Uniform Resource Identifier (URI) is used.</span></span>|  
  
<a name="Custom"></a>   
## <a name="implementing-custom-exceptions"></a><span data-ttu-id="9a546-242">Implementación de excepciones personalizadas</span><span class="sxs-lookup"><span data-stu-id="9a546-242">Implementing custom exceptions</span></span>  
 <span data-ttu-id="9a546-243">En los casos siguientes, no es adecuado usar una excepción de .NET Framework existente para controlar una condición de error:</span><span class="sxs-lookup"><span data-stu-id="9a546-243">In the following cases, using an existing .NET Framework exception to handle an error condition is not adequate:</span></span>  
  
-   <span data-ttu-id="9a546-244">Cuando la excepción refleja un error de programa único que no se puede asignar a una excepción de .NET Framework existente.</span><span class="sxs-lookup"><span data-stu-id="9a546-244">When the exception reflects a unique program error that cannot be mapped to an existing .NET Framework exception.</span></span>  
  
-   <span data-ttu-id="9a546-245">Cuando la excepción requiere que el control es diferente desde el control que es adecuado para una excepción de .NET Framework existente, o la excepción debe eliminar la ambigüedad de una excepción similar.</span><span class="sxs-lookup"><span data-stu-id="9a546-245">When the exception requires handling that is different from the handling that is appropriate for an existing .NET Framework exception, or the exception must be disambiguated from a similar exception.</span></span> <span data-ttu-id="9a546-246">Por ejemplo, si lanza una <xref:System.ArgumentOutOfRangeException> excepción al analizar la representación numérica de una cadena que está fuera del intervalo del tipo entero de destino, no querría utilizar la misma excepción de un error que se origina el llamador no suministra el valores restringidos adecuados al llamar al método.</span><span class="sxs-lookup"><span data-stu-id="9a546-246">For example, if you throw an <xref:System.ArgumentOutOfRangeException> exception when parsing the numeric representation of a string that is out of range of the target integral type, you would not want to use the same exception for an error that results from the caller not supplying the appropriate constrained values when calling the method.</span></span>  
  
 <span data-ttu-id="9a546-247">La <xref:System.Exception> clase es la clase base de todas las excepciones en .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="9a546-247">The <xref:System.Exception> class is the base class of all exceptions in the .NET Framework.</span></span> <span data-ttu-id="9a546-248">Muchas de las clases derivadas se basan en el comportamiento heredado de los miembros de la <xref:System.Exception> clase; que no se invaliden los miembros de <xref:System.Exception>, ni se definen los miembros únicos.</span><span class="sxs-lookup"><span data-stu-id="9a546-248">Many derived classes rely on the inherited behavior of the members of the <xref:System.Exception> class; they do not override the members of <xref:System.Exception>, nor do they define any unique members.</span></span>  
  
 <span data-ttu-id="9a546-249">Para definir su propia clase de excepción:</span><span class="sxs-lookup"><span data-stu-id="9a546-249">To define your own exception class:</span></span>  
  
1.  <span data-ttu-id="9a546-250">Defina una clase que hereda de <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="9a546-250">Define a class that inherits from <xref:System.Exception>.</span></span> <span data-ttu-id="9a546-251">Si es necesario, defina a los miembros únicos necesidades de su clase para proporcionar información adicional sobre la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-251">If necessary, define any unique members needed by your class to provide additional information about the exception.</span></span> <span data-ttu-id="9a546-252">Por ejemplo, el <xref:System.ArgumentException> clase incluye un <xref:System.ArgumentException.ParamName%2A> propiedad que especifica el nombre del parámetro cuyo argumento que produjo la excepción, y el <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> propiedad incluye un <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> propiedad que indica el intervalo de tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="9a546-252">For example, the <xref:System.ArgumentException> class includes a <xref:System.ArgumentException.ParamName%2A> property that specifies the name of the parameter whose argument caused the exception, and the <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> property includes a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> property that indicates the time-out interval.</span></span>  
  
2.  <span data-ttu-id="9a546-253">Si es necesario, reemplace cualquier cuya funcionalidad que desea cambiar o modificar los miembros heredados.</span><span class="sxs-lookup"><span data-stu-id="9a546-253">If necessary, override any inherited members whose functionality you want to change or modify.</span></span> <span data-ttu-id="9a546-254">Tenga en cuenta que la mayoría existente las clases derivadas de <xref:System.Exception> no invalidar el comportamiento de los miembros heredados.</span><span class="sxs-lookup"><span data-stu-id="9a546-254">Note that most existing derived classes of <xref:System.Exception> do not override the behavior of inherited members.</span></span>  
  
3.  <span data-ttu-id="9a546-255">Determinar si el objeto de excepción personalizada es serializable.</span><span class="sxs-lookup"><span data-stu-id="9a546-255">Determine whether your custom exception object is serializable.</span></span> <span data-ttu-id="9a546-256">Serialización permite guardar información sobre la excepción y permite que la información de excepción para ser compartidos por un servidor y un proxy de cliente en un contexto de comunicación remota.</span><span class="sxs-lookup"><span data-stu-id="9a546-256">Serialization enables you to save information about the exception and permits exception information to be shared by a server and a client proxy in a remoting context.</span></span> <span data-ttu-id="9a546-257">Para hacer que el objeto de excepción sea serializable, márquelo con el <xref:System.SerializableAttribute> atributo.</span><span class="sxs-lookup"><span data-stu-id="9a546-257">To make the exception object serializable, mark it with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
4.  <span data-ttu-id="9a546-258">Defina los constructores de la clase de excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-258">Define the constructors of your exception class.</span></span> <span data-ttu-id="9a546-259">Normalmente, las clases de excepción tienen uno o varios de los constructores siguientes:</span><span class="sxs-lookup"><span data-stu-id="9a546-259">Typically, exception classes have one or more of the following constructors:</span></span>  
  
    -   <span data-ttu-id="9a546-260"><xref:System.Exception.%23ctor>, que utiliza valores predeterminados para inicializar las propiedades de un nuevo objeto de excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-260"><xref:System.Exception.%23ctor>, which uses default values to initialize the properties of a new exception object.</span></span>  
  
    -   <span data-ttu-id="9a546-261"><xref:System.Exception.%23ctor%28System.String%29>, que inicializa un nuevo objeto de excepción con un mensaje de error especificado.</span><span class="sxs-lookup"><span data-stu-id="9a546-261"><xref:System.Exception.%23ctor%28System.String%29>, which initializes a new exception object with a specified error message.</span></span>  
  
    -   <span data-ttu-id="9a546-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, que inicializa un nuevo objeto de excepción con un error especificado mensaje y excepción interna.</span><span class="sxs-lookup"><span data-stu-id="9a546-262"><xref:System.Exception.%23ctor%28System.String%2CSystem.Exception%29>, which initializes a new exception object with a specified error message and inner exception.</span></span>  
  
    -   <span data-ttu-id="9a546-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, que es un `protected` constructor que inicializa un nuevo objeto de excepción de los datos serializados.</span><span class="sxs-lookup"><span data-stu-id="9a546-263"><xref:System.Exception.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>, which is a `protected` constructor that initializes a new exception object from serialized data.</span></span> <span data-ttu-id="9a546-264">Debe implementar este constructor si ha elegido realizar el objeto de excepción serializable.</span><span class="sxs-lookup"><span data-stu-id="9a546-264">You should implement this constructor if you've chosen to make your exception object serializable.</span></span>  
  
 <span data-ttu-id="9a546-265">El ejemplo siguiente muestra el uso de una clase de excepción personalizada.</span><span class="sxs-lookup"><span data-stu-id="9a546-265">The following example illustrates the use of a custom exception class.</span></span> <span data-ttu-id="9a546-266">Define un `NotPrimeException` excepción que se produce cuando un cliente intenta recuperar una secuencia de números primos mediante la especificación de un número inicial que no es primo.</span><span class="sxs-lookup"><span data-stu-id="9a546-266">It defines a `NotPrimeException` exception that is thrown when a client tries to retrieve a sequence of prime numbers by specifying a starting number that is not prime.</span></span> <span data-ttu-id="9a546-267">La excepción define una propiedad nueva, `NonPrime`, que devuelve el no-número primo que produjo la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-267">The exception defines a new property, `NonPrime`, that returns the non-prime number that caused the exception.</span></span> <span data-ttu-id="9a546-268">Además de implementar un constructor sin parámetros protegido y un constructor con <xref:System.Runtime.Serialization.SerializationInfo> y <xref:System.Runtime.Serialization.StreamingContext> parámetros para la serialización, el `NotPrimeException` clase define tres constructores adicionales para admitir la `NonPrime` propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a546-268">Besides implementing a protected parameterless constructor and a constructor with <xref:System.Runtime.Serialization.SerializationInfo> and <xref:System.Runtime.Serialization.StreamingContext> parameters for serialization, the `NotPrimeException` class defines three additional constructors to support the `NonPrime` property.</span></span>  <span data-ttu-id="9a546-269">Cada constructor llama a un constructor de clase base además de conservar el valor de los números primos.</span><span class="sxs-lookup"><span data-stu-id="9a546-269">Each constructor calls a base class constructor in addition to preserving the value of the non-prime number.</span></span> <span data-ttu-id="9a546-270">El `NotPrimeException` clase también se marca con el <xref:System.SerializableAttribute> atributo.</span><span class="sxs-lookup"><span data-stu-id="9a546-270">The `NotPrimeException` class is also marked with the <xref:System.SerializableAttribute> attribute.</span></span>  
  
 [!code-csharp[System.Exception.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/notprimeexception.cs#1)]
 [!code-vb[System.Exception.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/notprimeexception.vb#1)]  
  
 <span data-ttu-id="9a546-271">La `PrimeNumberGenerator` clase que se muestra en el ejemplo siguiente usa la criba de Eratóstenes para calcular la secuencia de números primos de 2 a un límite especificado por el cliente en la llamada a su constructor de clase.</span><span class="sxs-lookup"><span data-stu-id="9a546-271">The `PrimeNumberGenerator` class shown in the following example uses the Sieve of Eratosthenes to calculate the sequence of prime numbers from 2 to a limit specified by the client in the call to its class constructor.</span></span> <span data-ttu-id="9a546-272">El `GetPrimesFrom` método devuelve todos los números primos que son mayores o iguales a un límite inferior especificado, pero se produce un `NotPrimeException` si ese límite inferior no es un número primo.</span><span class="sxs-lookup"><span data-stu-id="9a546-272">The `GetPrimesFrom` method returns all prime numbers that are greater than or equal to a specified lower limit, but throws a `NotPrimeException` if that lower limit is not a prime number.</span></span>  
  
 [!code-csharp[System.Exception.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/primenumbergenerator.cs#2)]
 [!code-vb[System.Exception.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/primenumbergenerator.vb#2)]  
  
 <span data-ttu-id="9a546-273">El ejemplo siguiente realiza dos llamadas a la `GetPrimesFrom` método con números que no sean primos, uno de los cuales cruza los límites del dominio de aplicación.</span><span class="sxs-lookup"><span data-stu-id="9a546-273">The following example makes two calls to the `GetPrimesFrom` method with non-prime numbers, one of which crosses application domain boundaries.</span></span> <span data-ttu-id="9a546-274">En ambos casos, se produce la excepción y se controlan correctamente en el código de cliente.</span><span class="sxs-lookup"><span data-stu-id="9a546-274">In both cases, the exception is thrown and successfully handled in client code.</span></span>  
  
 [!code-csharp[System.Exception.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.class/cs/example.cs#3)]
 [!code-vb[System.Exception.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.class/vb/example.vb#3)]  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="9a546-275">En tiempo de ejecución de Windows y [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="9a546-275">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="9a546-276">En [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] para [!INCLUDE[win8](~/includes/win8-md.md)], se suelen perder alguna información de excepción cuando una excepción se propaga a través de los marcos de pila que no sean .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="9a546-276">In [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] for [!INCLUDE[win8](~/includes/win8-md.md)], some exception information is typically lost when an exception is propagated through non-.NET Framework stack frames.</span></span> <span data-ttu-id="9a546-277">A partir de la [!INCLUDE[net_v451](~/includes/net-v451-md.md)] y [!INCLUDE[win81](~/includes/win81-md.md)], common language runtime continúa usando el original <xref:System.Exception> objeto que se produjo a menos que esa excepción se modificó en un marco de pila que no sean .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="9a546-277">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the common language runtime continues to use the original <xref:System.Exception> object that was thrown unless that exception was modified in a non-.NET Framework stack frame.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a546-278">En el ejemplo siguiente se muestra un `catch` bloque que se define para controlar <xref:System.ArithmeticException> errores.</span><span class="sxs-lookup"><span data-stu-id="9a546-278">The following example demonstrates a `catch` block that is defined to handle <xref:System.ArithmeticException> errors.</span></span> <span data-ttu-id="9a546-279">Esto `catch` también bloquea las capturas <xref:System.DivideByZeroException> errores, porque <xref:System.DivideByZeroException> deriva <xref:System.ArithmeticException> y no hay ningún `catch` bloque definido explícitamente para <xref:System.DivideByZeroException> errores.</span><span class="sxs-lookup"><span data-stu-id="9a546-279">This `catch` block also catches <xref:System.DivideByZeroException> errors, because <xref:System.DivideByZeroException> derives from <xref:System.ArithmeticException> and there is no `catch` block explicitly defined for <xref:System.DivideByZeroException> errors.</span></span>  
  
 [!code-cpp[CatchException#1](~/samples/snippets/cpp/VS_Snippets_CLR/CatchException/CPP/catchexception.cpp#1)]
 [!code-csharp[CatchException#1](~/samples/snippets/csharp/VS_Snippets_CLR/CatchException/CS/catchexception.cs#1)]
 [!code-vb[CatchException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CatchException/VB/catchexception.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="9a546-280">Controlar y generar excepciones</span><span class="sxs-lookup"><span data-stu-id="9a546-280">Handling and Throwing Exceptions</span></span></related>
    <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md"><span data-ttu-id="9a546-281">Empaquetar e implementar recursos en aplicaciones de escritorio</span><span class="sxs-lookup"><span data-stu-id="9a546-281">Packaging and Deploying Resources in Desktop Apps</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1"><span data-ttu-id="9a546-282">Aserciones en el código administrado</span><span class="sxs-lookup"><span data-stu-id="9a546-282">Assertions in Managed Code</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a546-283">Inicializa una nueva instancia de la clase <see cref="T:System.Exception" />.</span><span class="sxs-lookup"><span data-stu-id="9a546-283">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a546-284">Inicializa una nueva instancia de la clase <see cref="T:System.Exception" />.</span><span class="sxs-lookup"><span data-stu-id="9a546-284">Initializes a new instance of the <see cref="T:System.Exception" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-285">Este constructor inicializa la propiedad <xref:System.Exception.Message%2A> de la nueva instancia en un mensaje proporcionado por el sistema que describe el error y tiene en cuenta la referencia cultural del sistema actual.</span><span class="sxs-lookup"><span data-stu-id="9a546-285">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error and takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="9a546-286">Todas las clases derivadas deben proporcionar este constructor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="9a546-286">All the derived classes should provide this default constructor.</span></span> <span data-ttu-id="9a546-287">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="9a546-287">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="9a546-288">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a546-288">Property</span></span>|<span data-ttu-id="9a546-289">Valor</span><span class="sxs-lookup"><span data-stu-id="9a546-289">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="9a546-290">Referencia nula (`Nothing` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="9a546-290">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="9a546-291">Una descripción traducida proporcionada por el sistema.</span><span class="sxs-lookup"><span data-stu-id="9a546-291">A system-supplied localized description.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9a546-292">El siguiente ejemplo de código se deriva un `Exception` que usa un mensaje predefinido.</span><span class="sxs-lookup"><span data-stu-id="9a546-292">The following code example derives an `Exception` that uses a predefined message.</span></span> <span data-ttu-id="9a546-293">El código muestra el uso del constructor sin parámetros para la clase derivada y la base de `Exception` clase.</span><span class="sxs-lookup"><span data-stu-id="9a546-293">The code demonstrates the use of the parameterless constructor for the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/new.cpp#1)]
 [!code-csharp[System.Exception.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/new.cs#1)]
 [!code-vb[System.Exception.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/new.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new Exception : string -&gt; Exception" Usage="new System.Exception message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="9a546-294">Mensaje que describe el error.</span><span class="sxs-lookup"><span data-stu-id="9a546-294">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="9a546-295">Inicializa una nueva instancia de la clase <see cref="T:System.Exception" /> con el mensaje de error especificado.</span><span class="sxs-lookup"><span data-stu-id="9a546-295">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-296">Este constructor inicializa la <xref:System.Exception.Message%2A> propiedad de la nueva instancia utilizando el `message` parámetro.</span><span class="sxs-lookup"><span data-stu-id="9a546-296">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance by using the `message` parameter.</span></span> <span data-ttu-id="9a546-297">Si el `message` parámetro es `null`, esto equivale a llamar a la <xref:System.Exception.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="9a546-297">If the `message` parameter is `null`, this is the same as calling the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="9a546-298">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="9a546-298">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="9a546-299">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a546-299">Property</span></span>|<span data-ttu-id="9a546-300">Valor</span><span class="sxs-lookup"><span data-stu-id="9a546-300">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="9a546-301">Referencia nula (`Nothing` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="9a546-301">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="9a546-302">Cadena con el mensaje de error.</span><span class="sxs-lookup"><span data-stu-id="9a546-302">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9a546-303">El siguiente ejemplo de código se deriva un `Exception` para una condición específica.</span><span class="sxs-lookup"><span data-stu-id="9a546-303">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="9a546-304">El código muestra el uso del constructor que toma un mensaje especificado por el llamador como un parámetro para la clase derivada y la base de `Exception` clase.</span><span class="sxs-lookup"><span data-stu-id="9a546-304">The code demonstrates the use of the constructor that takes a caller-specified message as a parameter, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/news.cpp#2)]
 [!code-csharp[System.Exception.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/news.cs#2)]
 [!code-vb[System.Exception.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/news.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Exception (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new Exception : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; Exception" Usage="new System.Exception (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="9a546-305"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto que hacen referencia a la excepción que se va a producir.</span><span class="sxs-lookup"><span data-stu-id="9a546-305">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="9a546-306"><see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</span><span class="sxs-lookup"><span data-stu-id="9a546-306">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="9a546-307">Inicializa una nueva instancia de la clase <see cref="T:System.Exception" /> con datos serializados.</span><span class="sxs-lookup"><span data-stu-id="9a546-307">Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-308">Durante la deserialización se llama a este constructor para reconstituir el objeto de excepción transmitido en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="9a546-308">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="9a546-309">Para obtener más información, consulte [serialización SOAP y XML](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="9a546-309">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a546-310">El ejemplo de código siguiente define una derivada serializable `Exception` clase.</span><span class="sxs-lookup"><span data-stu-id="9a546-310">The following code example defines a derived serializable `Exception` class.</span></span> <span data-ttu-id="9a546-311">El código fuerza un error de división por 0 y, a continuación, crea una instancia de la excepción derivada mediante el (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) constructor.</span><span class="sxs-lookup"><span data-stu-id="9a546-311">The code forces a divide-by-0 error and then creates an instance of the derived exception using the (<xref:System.Runtime.Serialization.SerializationInfo>, <xref:System.Runtime.Serialization.StreamingContext>) constructor.</span></span> <span data-ttu-id="9a546-312">El código se serializa la instancia en un archivo, deserializa el archivo en una nueva excepción, que se inicia y, a continuación, detecta y muestra los datos de la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-312">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a546-313">El valor de <paramref name="info" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9a546-313"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="9a546-314">El nombre de clase es <see langword="null" /> o <see cref="P:System.Exception.HResult" /> es cero (0).</span><span class="sxs-lookup"><span data-stu-id="9a546-314">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0).</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="9a546-315">Serialización de SOAP y XML</span><span class="sxs-lookup"><span data-stu-id="9a546-315">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Exception (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new Exception : string * Exception -&gt; Exception" Usage="new System.Exception (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="9a546-316">Mensaje de error que explica el motivo de la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-316">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="9a546-317">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</span><span class="sxs-lookup"><span data-stu-id="9a546-317">The exception that is the cause of the current exception, or a null reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</span></span></param>
        <summary><span data-ttu-id="9a546-318">Inicializa una nueva instancia de la clase <see cref="T:System.Exception" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-318">Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-319">Una excepción que se produce como consecuencia directa de una excepción anterior debe incluir una referencia a esta última en la propiedad <xref:System.Exception.InnerException%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a546-319">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="9a546-320">La propiedad <xref:System.Exception.InnerException%2A> devuelve el mismo valor pasado al constructor, o una referencia nula (`Nothing` en Visual Basic) si la propiedad <xref:System.Exception.InnerException%2A> no proporciona el valor de la excepción interna al constructor.</span><span class="sxs-lookup"><span data-stu-id="9a546-320">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="9a546-321">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="9a546-321">The following table shows the initial property values for an instance of <xref:System.Exception>.</span></span>  
  
|<span data-ttu-id="9a546-322">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a546-322">Property</span></span>|<span data-ttu-id="9a546-323">Valor</span><span class="sxs-lookup"><span data-stu-id="9a546-323">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="9a546-324">Referencia a la excepción interna.</span><span class="sxs-lookup"><span data-stu-id="9a546-324">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="9a546-325">Cadena con el mensaje de error.</span><span class="sxs-lookup"><span data-stu-id="9a546-325">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9a546-326">El siguiente ejemplo de código se deriva un `Exception` para una condición específica.</span><span class="sxs-lookup"><span data-stu-id="9a546-326">The following code example derives an `Exception` for a specific condition.</span></span> <span data-ttu-id="9a546-327">El código muestra el uso del constructor que tome un mensaje y una excepción interna como parámetros para la clase derivada y la base de `Exception` clase.</span><span class="sxs-lookup"><span data-stu-id="9a546-327">The code demonstrates the use of the constructor that takes a message and an inner exception as parameters, for both the derived class and the base `Exception` class.</span></span>  
  
 [!code-cpp[System.Exception.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Ctor/CPP/newsi.cpp#3)]
 [!code-csharp[System.Exception.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Ctor/CS/newsi.cs#3)]
 [!code-vb[System.Exception.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Ctor/VB/newsi.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Data" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Data { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.Collections.IDictionary" Usage="System.Exception.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a546-328">Obtiene una colección de pares clave-valor que proporcionan más información definida por el usuario sobre la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-328">Gets a collection of key/value pairs that provide additional user-defined information about the exception.</span></span></summary>
        <value><span data-ttu-id="9a546-329">Objeto que implementa la interfaz de <see cref="T:System.Collections.IDictionary" /> y contiene una colección de pares clave-valor definidos por el usuario.</span><span class="sxs-lookup"><span data-stu-id="9a546-329">An object that implements the <see cref="T:System.Collections.IDictionary" /> interface and contains a collection of user-defined key/value pairs.</span></span> <span data-ttu-id="9a546-330">El valor predeterminado es una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="9a546-330">The default is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-331">Use la <xref:System.Collections.IDictionary?displayProperty=nameWithType> objeto devuelto por la <xref:System.Exception.Data%2A> propiedad para almacenar y recuperar información adicional relativa a la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-331">Use the <xref:System.Collections.IDictionary?displayProperty=nameWithType> object returned by the <xref:System.Exception.Data%2A> property to store and retrieve supplementary information relevant to the exception.</span></span> <span data-ttu-id="9a546-332">La información está en forma de un número arbitrario de pares clave/valor definidos por el usuario.</span><span class="sxs-lookup"><span data-stu-id="9a546-332">The information is in the form of an arbitrary number of user-defined key/value pairs.</span></span> <span data-ttu-id="9a546-333">El componente clave de cada par clave/valor normalmente es una cadena de identificación, mientras que el componente de valor del par puede ser cualquier tipo de objeto.</span><span class="sxs-lookup"><span data-stu-id="9a546-333">The key component of each key/value pair is typically an identifying string, whereas the value component of the pair can be any type of object.</span></span>  
  
## <a name="keyvalue-pair-security"></a><span data-ttu-id="9a546-334">Seguridad de par clave/valor</span><span class="sxs-lookup"><span data-stu-id="9a546-334">Key/Value Pair Security</span></span>  
 <span data-ttu-id="9a546-335">Los pares clave/valor almacenados en la colección devuelta por la <xref:System.Exception.Data%2A> propiedad no son seguras.</span><span class="sxs-lookup"><span data-stu-id="9a546-335">The key/value pairs stored in the collection returned by the <xref:System.Exception.Data%2A> property are not secure.</span></span> <span data-ttu-id="9a546-336">Si la aplicación llama a una serie de rutinas anidadas y cada rutina contiene controladores de excepciones, la pila de llamadas resultante contiene una jerarquía de esos controladores de excepciones.</span><span class="sxs-lookup"><span data-stu-id="9a546-336">If your application calls a nested series of routines, and each routine contains exception handlers, the resulting call stack contains a hierarchy of those exception handlers.</span></span> <span data-ttu-id="9a546-337">Si una rutina de nivel inferior, produce una excepción, cualquier controlador de excepciones de nivel superior en la jerarquía de la pila de llamadas puede leer o modificar los pares clave/valor almacenados en la colección por cualquier otro controlador de excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-337">If a lower-level routine throws an exception, any upper-level exception handler in the call stack hierarchy can read and/or modify the key/value pairs stored in the collection by any other exception handler.</span></span> <span data-ttu-id="9a546-338">Esto significa que debe garantizar que la información de los pares clave/valor no es confidencial y que la aplicación funcionará correctamente si se daña la información de los pares clave/valor.</span><span class="sxs-lookup"><span data-stu-id="9a546-338">This means you must guarantee that the information in the key/value pairs is not confidential and that your application will operate correctly if the information in the key/value pairs is corrupted.</span></span>  
  
## <a name="key-conflicts"></a><span data-ttu-id="9a546-339">Conflictos de clave</span><span class="sxs-lookup"><span data-stu-id="9a546-339">Key Conflicts</span></span>  
 <span data-ttu-id="9a546-340">Se produce un conflicto de clave cuando los controladores de excepciones diferentes especifican la misma clave para tener acceso a un par clave/valor.</span><span class="sxs-lookup"><span data-stu-id="9a546-340">A key conflict occurs when different exception handlers specify the same key to access a key/value pair.</span></span> <span data-ttu-id="9a546-341">Tenga cuidado al desarrollar la aplicación porque la consecuencia de un conflicto de clave es que los controladores de excepciones de nivel inferior pueden comunicarse sin darse cuenta con controladores de excepciones de nivel superior, y esta comunicación podría provocar errores sutiles del programa.</span><span class="sxs-lookup"><span data-stu-id="9a546-341">Use caution when developing your application because the consequence of a key conflict is that lower-level exception handlers can inadvertently communicate with higher-level exception handlers, and this communication might cause subtle program errors.</span></span> <span data-ttu-id="9a546-342">Sin embargo, si está presente conflictos de clave puede usar para mejorar su aplicación.</span><span class="sxs-lookup"><span data-stu-id="9a546-342">However, if you are cautious you can use key conflicts to enhance your application.</span></span>  
  
## <a name="avoiding-key-conflicts"></a><span data-ttu-id="9a546-343">Evitar conflictos de clave</span><span class="sxs-lookup"><span data-stu-id="9a546-343">Avoiding Key Conflicts</span></span>  
 <span data-ttu-id="9a546-344">Evitar conflictos de clave al adoptar una convención de nomenclatura para generar claves únicas para los pares clave/valor.</span><span class="sxs-lookup"><span data-stu-id="9a546-344">Avoid key conflicts by adopting a naming convention to generate unique keys for key/value pairs.</span></span> <span data-ttu-id="9a546-345">Por ejemplo, podría producir una convención de nomenclatura una clave que consta del nombre de la aplicación delimitados, el método que proporciona información complementaria para el par y un identificador único.</span><span class="sxs-lookup"><span data-stu-id="9a546-345">For example, a naming convention might yield a key that consists of the period-delimited name of your application, the method that provides supplementary information for the pair, and a unique identifier.</span></span>  
  
 <span data-ttu-id="9a546-346">Supongamos que dos aplicaciones, denominadas productos y proveedores, cada uno tiene un método denominado ventas.</span><span class="sxs-lookup"><span data-stu-id="9a546-346">Suppose two applications, named Products and Suppliers, each has a method named Sales.</span></span> <span data-ttu-id="9a546-347">El método de ventas de la aplicación productos proporciona el número de identificación (las existencias o SKU) de un producto.</span><span class="sxs-lookup"><span data-stu-id="9a546-347">The Sales method in the Products application provides the identification number (the stock keeping unit or SKU) of a product.</span></span> <span data-ttu-id="9a546-348">El método de ventas en la aplicación de proveedores proporciona el número de identificación o SID de un proveedor.</span><span class="sxs-lookup"><span data-stu-id="9a546-348">The Sales method in the Suppliers application provides the identification number, or SID, of a supplier.</span></span> <span data-ttu-id="9a546-349">Por lo tanto, la convención de nomenclatura para este ejemplo produce las claves "Productos.ventas.SKU" y "Proveedores.ventas.SID".</span><span class="sxs-lookup"><span data-stu-id="9a546-349">Consequently, the naming convention for this example yields the keys, "Products.Sales.SKU" and "Suppliers.Sales.SID".</span></span>  
  
## <a name="exploiting-key-conflicts"></a><span data-ttu-id="9a546-350">Aprovechamiento de conflictos de clave</span><span class="sxs-lookup"><span data-stu-id="9a546-350">Exploiting Key Conflicts</span></span>  
 <span data-ttu-id="9a546-351">Aprovechar los conflictos de clave mediante el uso de la presencia de una o más teclas especiales, concertados de antemano para controlar el procesamiento.</span><span class="sxs-lookup"><span data-stu-id="9a546-351">Exploit key conflicts by using the presence of one or more special, prearranged keys to control processing.</span></span> <span data-ttu-id="9a546-352">Supongamos que, en un escenario, el controlador de excepciones de nivel más alto en la jerarquía de la pila de llamadas detecta todas las excepciones producidas por controladores de excepciones de nivel inferior.</span><span class="sxs-lookup"><span data-stu-id="9a546-352">Suppose, in one scenario, the highest level exception handler in the call stack hierarchy catches all exceptions thrown by lower-level exception handlers.</span></span> <span data-ttu-id="9a546-353">Si existe un par clave/valor con una clave especial, el controlador de excepciones de alto nivel da formato a los pares clave/valor restantes en el <xref:System.Collections.IDictionary> objeto de algún modo no estándar; de lo contrario, se da formato a los pares clave/valor restante de alguna manera normal.</span><span class="sxs-lookup"><span data-stu-id="9a546-353">If a key/value pair with a special key exists, the high-level exception handler formats the remaining key/value pairs in the <xref:System.Collections.IDictionary> object in some nonstandard way; otherwise, the remaining key/value pairs are formatted in some normal manner.</span></span>  
  
 <span data-ttu-id="9a546-354">Ahora supongamos, en otro escenario, que el controlador de excepciones en cada nivel de la jerarquía de la pila de llamadas detecta la excepción producida por el siguiente controlador de excepciones de nivel inferior.</span><span class="sxs-lookup"><span data-stu-id="9a546-354">Now suppose, in another scenario, the exception handler at each level of the call stack hierarchy catches the exception thrown by the next lower-level exception handler.</span></span> <span data-ttu-id="9a546-355">Además, cada controlador de excepciones sabe la colección devuelta por la <xref:System.Exception.Data%2A> propiedad contiene un conjunto de pares clave/valor que se puede acceder con un conjunto de claves predeterminado.</span><span class="sxs-lookup"><span data-stu-id="9a546-355">In addition, each exception handler knows the collection returned by the <xref:System.Exception.Data%2A> property contains a set of key/value pairs that can be accessed with a prearranged set of keys.</span></span>  
  
 <span data-ttu-id="9a546-356">Cada controlador de excepción usa el conjunto de claves concertados de antemano para actualizar el componente de valor del par clave/valor correspondiente con información única para ese controlador de excepciones.</span><span class="sxs-lookup"><span data-stu-id="9a546-356">Each exception handler uses the prearranged set of keys to update the value component of the corresponding key/value pair with information unique to that exception handler.</span></span> <span data-ttu-id="9a546-357">Una vez completado el proceso de actualización, el controlador de excepciones inicia la excepción en el siguiente controlador de excepciones de nivel superior.</span><span class="sxs-lookup"><span data-stu-id="9a546-357">After the update process is complete, the exception handler throws the exception to the next higher-level exception handler.</span></span> <span data-ttu-id="9a546-358">Por último, el controlador de excepciones de nivel más alto obtiene acceso a los pares clave/valor y muestra la información de actualización consolidado de todos los controladores de excepciones de nivel inferior.</span><span class="sxs-lookup"><span data-stu-id="9a546-358">Finally, the highest level exception handler accesses the key/value pairs and displays the consolidated update information from all the lower-level exception handlers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a546-359">En el ejemplo siguiente se muestra cómo agregar y recuperar información mediante el <xref:System.Exception.Data%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a546-359">The following example demonstrates how to add and retrieve information using the <xref:System.Exception.Data%2A> property.</span></span>  
  
 [!code-cpp[exception.data#1](~/samples/snippets/cpp/VS_Snippets_CLR/exception.data/CPP/data.cpp#1)]
 [!code-csharp[exception.data#1](~/samples/snippets/csharp/VS_Snippets_CLR/exception.data/CS/data.cs#1)]
 [!code-vb[exception.data#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/exception.data/VB/data.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.DictionaryEntry" />
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public virtual Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Exception ^ GetBaseException();" />
      <MemberSignature Language="F#" Value="abstract member GetBaseException : unit -&gt; Exception&#xA;override this.GetBaseException : unit -&gt; Exception" Usage="exception.GetBaseException " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetBaseException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a546-360">Cuando se invalida en una clase derivada, devuelve la clase <see cref="T:System.Exception" /> que representa la causa principal de una o más excepciones posteriores.</span><span class="sxs-lookup"><span data-stu-id="9a546-360">When overridden in a derived class, returns the <see cref="T:System.Exception" /> that is the root cause of one or more subsequent exceptions.</span></span></summary>
        <returns><span data-ttu-id="9a546-361">Primera excepción que se produce en una cadena de excepciones.</span><span class="sxs-lookup"><span data-stu-id="9a546-361">The first exception thrown in a chain of exceptions.</span></span> <span data-ttu-id="9a546-362">Si la propiedad <see cref="P:System.Exception.InnerException" /> de la excepción actual es una referencia nula (<see langword="Nothing" /> en Visual Basic), esta propiedad devuelve la excepción actual.</span><span class="sxs-lookup"><span data-stu-id="9a546-362">If the <see cref="P:System.Exception.InnerException" /> property of the current exception is a null reference (<see langword="Nothing" /> in Visual Basic), this property returns the current exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-363">Una cadena de excepciones consta de un conjunto de excepciones que se inicia cada excepción de la cadena como resultado directo de la excepción que se hace referenciado en su `InnerException` propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a546-363">A chain of exceptions consists of a set of exceptions such that each exception in the chain was thrown as a direct result of the exception referenced in its `InnerException` property.</span></span> <span data-ttu-id="9a546-364">Para una cadena determinada, puede haber exactamente una excepción que es la causa raíz de todas las demás excepciones en la cadena.</span><span class="sxs-lookup"><span data-stu-id="9a546-364">For a given chain, there can be exactly one exception that is the root cause of all other exceptions in the chain.</span></span> <span data-ttu-id="9a546-365">Esta excepción se llama a la excepción base y su `InnerException` propiedad siempre contiene una referencia nula.</span><span class="sxs-lookup"><span data-stu-id="9a546-365">This exception is called the base exception and its `InnerException` property always contains a null reference.</span></span>  
  
 <span data-ttu-id="9a546-366">Para todas las excepciones en una cadena de excepciones, el `GetBaseException` método debe devolver el mismo objeto (la excepción base).</span><span class="sxs-lookup"><span data-stu-id="9a546-366">For all exceptions in a chain of exceptions, the `GetBaseException` method must return the same object (the base exception).</span></span>  
  
 <span data-ttu-id="9a546-367">Use el `GetBaseException` método cuando se desea encontrar la causa raíz de una excepción pero no necesita información sobre las excepciones que puedan haberse producido entre la excepción actual y la primera excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-367">Use the `GetBaseException` method when you want to find the root cause of an exception but do not need information about exceptions that may have occurred between the current exception and the first exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a546-368">El ejemplo de código siguiente define dos derivadas `Exception` clases.</span><span class="sxs-lookup"><span data-stu-id="9a546-368">The following code example defines two derived `Exception` classes.</span></span> <span data-ttu-id="9a546-369">Fuerza una excepción y, a continuación, se inicia de nuevo con cada una de las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="9a546-369">It forces an exception and then throws it again with each of the derived classes.</span></span> <span data-ttu-id="9a546-370">El código muestra el uso de la `GetBaseException` método para recuperar la excepción original.</span><span class="sxs-lookup"><span data-stu-id="9a546-370">The code shows the use of the `GetBaseException` method to retrieve the original exception.</span></span>  
  
 [!code-cpp[System.Exception.GetBaseException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CPP/getbaseexc.cpp#1)]
 [!code-csharp[System.Exception.GetBaseException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetBaseException/CS/getbaseexc.cs#1)]
 [!code-vb[System.Exception.GetBaseException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetBaseException/VB/getbaseexc.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9a546-371">El <see langword="GetBaseException" /> método se reemplaza en clases que requieren el control sobre el formato o el contenido de la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-371">The <see langword="GetBaseException" /> method is overridden in classes that require control over the exception content or format.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="exception.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="9a546-372"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto que hacen referencia a la excepción que se va a producir.</span><span class="sxs-lookup"><span data-stu-id="9a546-372">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="9a546-373"><see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</span><span class="sxs-lookup"><span data-stu-id="9a546-373">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="9a546-374">Cuando se invalida en una clase derivada, establece <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con información sobre la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-374">When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-375">`GetObjectData` establece <xref:System.Runtime.Serialization.SerializationInfo> con todos los datos del objeto de excepción destinados a la serialización.</span><span class="sxs-lookup"><span data-stu-id="9a546-375">`GetObjectData` sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="9a546-376">Durante la deserialización, la excepción se reconstituye a partir de la información `SerializationInfo` transmitida en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="9a546-376">During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a546-377">El ejemplo de código siguiente define una derivada serializable `Exception` clase que implementa `GetObjectData`, que realiza cambios menores a dos propiedades y, a continuación, llama a la clase base para realizar la serialización.</span><span class="sxs-lookup"><span data-stu-id="9a546-377">The following code example defines a derived serializable `Exception` class that implements `GetObjectData`, which makes minor changes to two properties and then calls the base class to perform the serialization.</span></span> <span data-ttu-id="9a546-378">En el ejemplo se fuerza un error de división por 0 y, a continuación, crea una instancia de la excepción derivada.</span><span class="sxs-lookup"><span data-stu-id="9a546-378">The example forces a divide-by-0 error and then creates an instance of the derived exception.</span></span> <span data-ttu-id="9a546-379">El código se serializa la instancia en un archivo, deserializa el archivo en una nueva excepción, que se inicia y, a continuación, detecta y muestra los datos de la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-379">The code serializes the instance to a file, deserializes the file into a new exception, which it throws, and then catches and displays the exception's data.</span></span>  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9a546-380">El parámetro <paramref name="info" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="9a546-380">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="9a546-381">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="9a546-381">requires full trust for the immediate caller.</span></span> <span data-ttu-id="9a546-382">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="9a546-382">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="exception.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a546-383">Obtiene el tipo en tiempo de ejecución de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="9a546-383">Gets the runtime type of the current instance.</span></span></summary>
        <returns><span data-ttu-id="9a546-384">Objeto<see cref="T:System.Type" /> que representa el tipo exacto en tiempo de ejecución de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="9a546-384">A <see cref="T:System.Type" /> object that represents the exact runtime type of the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-385">El <xref:System.Exception.GetType%2A> método existe para admitir la infraestructura de .NET Framework e internamente invoca el método fundamental, <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9a546-385">The <xref:System.Exception.GetType%2A> method exists to support the .NET Framework infrastructure, and internally invokes the fundamental method, <xref:System.Object.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="HelpLink">
      <MemberSignature Language="C#" Value="public virtual string HelpLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpLink" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HelpLink" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpLink As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpLink { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpLink : string with get, set" Usage="System.Exception.HelpLink" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.HelpLink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a546-386">Obtiene o establece un vínculo al archivo de ayuda asociado a esta excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-386">Gets or sets a link to the help file associated with this exception.</span></span></summary>
        <value><span data-ttu-id="9a546-387">Nombre de recursos uniforme (URN) o Identificador uniforme de recursos (URL).</span><span class="sxs-lookup"><span data-stu-id="9a546-387">The Uniform Resource Name (URN) or Uniform Resource Locator (URL).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-388">El valor devuelto, que representa un archivo de ayuda, es un URN o una dirección URL.</span><span class="sxs-lookup"><span data-stu-id="9a546-388">The return value, which represents a help file, is a URN or URL.</span></span> <span data-ttu-id="9a546-389">Por ejemplo, el `HelpLink` valor puede ser:</span><span class="sxs-lookup"><span data-stu-id="9a546-389">For example, the `HelpLink` value could be:</span></span>  
  
 <span data-ttu-id="9a546-390">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span><span class="sxs-lookup"><span data-stu-id="9a546-390">"file:///C:/Applications/Bazzal/help.html#ErrorNum42"</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a546-391">El siguiente ejemplo de código inicia un `Exception` que establece el `HelpLink` propiedad en su constructor y, a continuación, detecta la excepción y muestra `HelpLink`.</span><span class="sxs-lookup"><span data-stu-id="9a546-391">The following code example throws an `Exception` that sets the `HelpLink` property in its constructor and then catches the exception and displays `HelpLink`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HResult">
      <MemberSignature Language="C#" Value="public int HResult { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HResult" />
      <MemberSignature Language="DocId" Value="P:System.Exception.HResult" />
      <MemberSignature Language="VB.NET" Value="Public Property HResult As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:  property int HResult {  public:&#xA;int get(); protected:&#xA; void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HResult : int with get, set" Usage="System.Exception.HResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a546-392">Obtiene o establece HRESULT, un valor numérico codificado que se asigna a una excepción específica.</span><span class="sxs-lookup"><span data-stu-id="9a546-392">Gets or sets HRESULT, a coded numerical value that is assigned to a specific exception.</span></span></summary>
        <value><span data-ttu-id="9a546-393">Valor HRESULT.</span><span class="sxs-lookup"><span data-stu-id="9a546-393">The HRESULT value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-394">HRESULT es un valor de 32 bits, dividido en tres campos distintos: un código de gravedad, un código de servicio y un código de error.</span><span class="sxs-lookup"><span data-stu-id="9a546-394">HRESULT is a 32-bit value, divided into three different fields: a severity code, a facility code, and an error code.</span></span> <span data-ttu-id="9a546-395">El código de gravedad indica si el valor devuelto representa información, advertencia o error.</span><span class="sxs-lookup"><span data-stu-id="9a546-395">The severity code indicates whether the return value represents information, warning, or error.</span></span> <span data-ttu-id="9a546-396">El código de componente identifica el área del sistema responsable del error.</span><span class="sxs-lookup"><span data-stu-id="9a546-396">The facility code identifies the area of the system responsible for the error.</span></span> <span data-ttu-id="9a546-397">El código de error es un número único que se asigna para representar la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-397">The error code is a unique number that is assigned to represent the exception.</span></span> <span data-ttu-id="9a546-398">Cada excepción se asigna a un valor de HRESULT distinto.</span><span class="sxs-lookup"><span data-stu-id="9a546-398">Each exception is mapped to a distinct HRESULT.</span></span> <span data-ttu-id="9a546-399">Cuando el código administrado produce una excepción, el tiempo de ejecución pasa el valor HRESULT para el cliente COM.</span><span class="sxs-lookup"><span data-stu-id="9a546-399">When managed code throws an exception, the runtime passes the HRESULT to the COM client.</span></span> <span data-ttu-id="9a546-400">Cuando el código no administrado devuelve un error, el valor HRESULT se convierte en una excepción, que, a continuación, se produce el tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="9a546-400">When unmanaged code returns an error, the HRESULT is converted to an exception, which is then thrown by the runtime.</span></span> <span data-ttu-id="9a546-401">Para obtener información acerca de los valores HRESULT y sus correspondientes excepciones de .NET Framework, vea [Cómo: Asignar resultados HRESULT y excepciones](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="9a546-401">For information about HRESULT values and their corresponding .NET Framework exceptions, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span> <span data-ttu-id="9a546-402">Consulte [valores HRESULT comunes](https://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) en la documentación de Windows para obtener una lista de los valores que es más probable que encuentre.</span><span class="sxs-lookup"><span data-stu-id="9a546-402">See [Common HRESULT Values](https://msdn.microsoft.com/library/windows/desktop/aa378137.aspx) in the Windows documentation for a list of the values you are most likely to encounter.</span></span>  
  
 <span data-ttu-id="9a546-403">A partir de la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], el <xref:System.Exception.HResult%2A> establecedor de la propiedad está protegido, mientras que su captador es público.</span><span class="sxs-lookup"><span data-stu-id="9a546-403">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Exception.HResult%2A> property's setter is protected, whereas its getter is public.</span></span>  <span data-ttu-id="9a546-404">En versiones anteriores de .NET Framework, el captador y establecedor están protegidos.</span><span class="sxs-lookup"><span data-stu-id="9a546-404">In previous versions of the .NET Framework, both getter and setter are protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a546-405">El ejemplo de código siguiente define una derivada `Exception` clase que establece el `HResult` propiedad en un valor personalizado en su constructor.</span><span class="sxs-lookup"><span data-stu-id="9a546-405">The following code example defines a derived `Exception` class that sets the `HResult` property to a custom value in its constructor.</span></span>  
  
 [!code-cpp[System.Exception.HResult#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.HResult/CPP/hresult.cpp#1)]
 [!code-csharp[System.Exception.HResult#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.HResult/CS/hresult.cs#1)]
 [!code-vb[System.Exception.HResult#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.HResult/VB/hresult.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/610b364b-2761-429d-9c4a-afbc3e66f1b9"><span data-ttu-id="9a546-406">Cómo: Asignar resultados HRESULT y excepciones</span><span class="sxs-lookup"><span data-stu-id="9a546-406">How to: Map HRESULTs and Exceptions</span></span></related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/windows/desktop/aa378137.aspx"><span data-ttu-id="9a546-407">Valores HRESULT comunes</span><span class="sxs-lookup"><span data-stu-id="9a546-407">Common HRESULT Values</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InnerException">
      <MemberSignature Language="C#" Value="public Exception InnerException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception InnerException" />
      <MemberSignature Language="DocId" Value="P:System.Exception.InnerException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ InnerException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerException : Exception" Usage="System.Exception.InnerException" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.InnerException</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a546-408">Obtiene la instancia <see cref="T:System.Exception" /> que produjo la excepción actual.</span><span class="sxs-lookup"><span data-stu-id="9a546-408">Gets the <see cref="T:System.Exception" /> instance that caused the current exception.</span></span></summary>
        <value><span data-ttu-id="9a546-409">Objeto que describe el error que causó la excepción actual.</span><span class="sxs-lookup"><span data-stu-id="9a546-409">An object that describes the error that caused the current exception.</span></span> <span data-ttu-id="9a546-410">La propiedad <see cref="P:System.Exception.InnerException" /> devuelve el mismo valor que se pasó al constructor <see cref="M:System.Exception.#ctor(System.String,System.Exception)" /> o <see langword="null" /> si no se suministró el valor de la excepción interna al constructor.</span><span class="sxs-lookup"><span data-stu-id="9a546-410">The <see cref="P:System.Exception.InnerException" /> property returns the same value as was passed into the <see cref="M:System.Exception.#ctor(System.String,System.Exception)" /> constructor, or <see langword="null" /> if the inner exception value was not supplied to the constructor.</span></span> <span data-ttu-id="9a546-411">Esta propiedad es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="9a546-411">This property is read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-412">Cuando una excepción `X` se produce como resultado directo de una excepción anterior `Y`, <xref:System.Exception.InnerException%2A> propiedad de `X` debe contener una referencia a `Y`.</span><span class="sxs-lookup"><span data-stu-id="9a546-412">When an exception `X` is thrown as a direct result of a previous exception `Y`, the <xref:System.Exception.InnerException%2A> property of `X` should contain a reference to `Y`.</span></span>  
  
 <span data-ttu-id="9a546-413">Utilice la propiedad <xref:System.Exception.InnerException%2A> para obtener el conjunto de excepciones que dieron lugar a la excepción actual.</span><span class="sxs-lookup"><span data-stu-id="9a546-413">Use the <xref:System.Exception.InnerException%2A> property to obtain the set of exceptions that led to the current exception.</span></span>  
  
 <span data-ttu-id="9a546-414">Puede crear una nueva excepción que detecte una excepción anterior.</span><span class="sxs-lookup"><span data-stu-id="9a546-414">You can create a new exception that catches an earlier exception.</span></span> <span data-ttu-id="9a546-415">El código que controla la segunda excepción puede utilizar la información adicional de la excepción anterior para controlar el error más adecuadamente.</span><span class="sxs-lookup"><span data-stu-id="9a546-415">The code that handles the second exception can make use of the additional information from the earlier exception to handle the error more appropriately.</span></span>  
  
 <span data-ttu-id="9a546-416">Suponga que hay una función que lee un archivo y da formato a los datos de ese archivo.</span><span class="sxs-lookup"><span data-stu-id="9a546-416">Suppose that there is a function that reads a file and formats the data from that file.</span></span> <span data-ttu-id="9a546-417">En este ejemplo, como el código intenta leer el archivo, un <xref:System.IO.IOException> se produce.</span><span class="sxs-lookup"><span data-stu-id="9a546-417">In this example, as the code tries to read the file, an <xref:System.IO.IOException> is thrown.</span></span> <span data-ttu-id="9a546-418">La función detecta el <xref:System.IO.IOException> y produce una <xref:System.IO.FileNotFoundException>.</span><span class="sxs-lookup"><span data-stu-id="9a546-418">The function catches the <xref:System.IO.IOException> and throws a <xref:System.IO.FileNotFoundException>.</span></span> <span data-ttu-id="9a546-419">El <xref:System.IO.IOException> puede guardarse en el <xref:System.Exception.InnerException%2A> propiedad de la <xref:System.IO.FileNotFoundException>, lo que permite al código que detecta el <xref:System.IO.FileNotFoundException> para examinar la causa del error inicial.</span><span class="sxs-lookup"><span data-stu-id="9a546-419">The <xref:System.IO.IOException> could be saved in the <xref:System.Exception.InnerException%2A> property of the <xref:System.IO.FileNotFoundException>, enabling the code that catches the <xref:System.IO.FileNotFoundException> to examine the cause of the initial error.</span></span>  
  
 <span data-ttu-id="9a546-420">El <xref:System.Exception.InnerException%2A> propiedad, que contiene una referencia a la excepción interna, se establece en la inicialización del objeto de excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-420">The <xref:System.Exception.InnerException%2A> property, which holds a reference to the inner exception, is set upon initialization of the exception object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a546-421">El ejemplo siguiente se muestra cómo iniciar y detectar una excepción que hace referencia a una excepción interna.</span><span class="sxs-lookup"><span data-stu-id="9a546-421">The following example demonstrates throwing and catching an exception that references an inner exception.</span></span>  
  
 [!code-cpp[InnerEx#1](~/samples/snippets/cpp/VS_Snippets_CLR/InnerEx/CPP/innerex.cpp#1)]
 [!code-csharp[InnerEx#1](~/samples/snippets/csharp/VS_Snippets_CLR/InnerEx/CS/innerex.cs#1)]
 [!code-vb[InnerEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InnerEx/VB/innerex.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public virtual string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Exception.Message" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Message</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a546-422">Obtiene un mensaje que describe la excepción actual.</span><span class="sxs-lookup"><span data-stu-id="9a546-422">Gets a message that describes the current exception.</span></span></summary>
        <value><span data-ttu-id="9a546-423">Mensaje de error que explica el motivo de la excepción o una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="9a546-423">The error message that explains the reason for the exception, or an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-424">Los mensajes de error como destino el desarrollador que controla la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-424">Error messages target the developer who is handling the exception.</span></span> <span data-ttu-id="9a546-425">El texto de la <xref:System.Exception.Message%2A> propiedad debería describir completamente el error y, cuando sea posible, también debe explicar cómo corregir el error.</span><span class="sxs-lookup"><span data-stu-id="9a546-425">The text of the <xref:System.Exception.Message%2A> property should completely describe the error and, when possible, should also explain how to correct the error.</span></span> <span data-ttu-id="9a546-426">Los controladores de excepciones de nivel superior pueden mostrar el mensaje a los usuarios finales, por lo que debe asegurarse de que es gramaticalmente correcto y que cada frase del mensaje termina con un punto.</span><span class="sxs-lookup"><span data-stu-id="9a546-426">Top-level exception handlers may display the message to end-users, so you should ensure that it is grammatically correct and that each sentence of the message ends with a period.</span></span> <span data-ttu-id="9a546-427">No use signos de interrogación o signos de exclamación.</span><span class="sxs-lookup"><span data-stu-id="9a546-427">Do not use question marks or exclamation points.</span></span> <span data-ttu-id="9a546-428">Si la aplicación utiliza los mensajes de excepción traducida, debe asegurarse de que se traducen con precisión.</span><span class="sxs-lookup"><span data-stu-id="9a546-428">If your application uses localized exception messages, you should ensure that they are accurately translated.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9a546-429">No revelar información confidencial en los mensajes de excepción sin comprobar los permisos adecuados.</span><span class="sxs-lookup"><span data-stu-id="9a546-429">Do not disclose sensitive information in exception messages without checking for the appropriate permissions.</span></span>  
  
 <span data-ttu-id="9a546-430">El valor de la <xref:System.Exception.Message%2A> propiedad se incluye en la información devuelta por <xref:System.Exception.ToString%2A>. El <xref:System.Exception.Message%2A> propiedad se establece sólo cuando se crea un <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="9a546-430">The value of the <xref:System.Exception.Message%2A> property is included in the information returned by <xref:System.Exception.ToString%2A>.The <xref:System.Exception.Message%2A> property is set only when creating an <xref:System.Exception>.</span></span> <span data-ttu-id="9a546-431">Si se proporcionó ningún mensaje al constructor para la instancia actual, el sistema proporciona un mensaje predeterminado que se ha formateado con la referencia cultural actual del sistema.</span><span class="sxs-lookup"><span data-stu-id="9a546-431">If no message was supplied to the constructor for the current instance, the system supplies a default message that is formatted using the current system culture.</span></span>  
  
## <a name="windows-runtime-and-includenetv451includesnet-v451-mdmd"></a><span data-ttu-id="9a546-432">En tiempo de ejecución de Windows y [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="9a546-432">Windows Runtime and [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
 <span data-ttu-id="9a546-433">A partir de la [!INCLUDE[net_v451](~/includes/net-v451-md.md)] y [!INCLUDE[win81](~/includes/win81-md.md)], se ha mejorado la fidelidad de los mensajes de error de las excepciones que se propagan desde los tipos en tiempo de ejecución de Windows y los miembros que no forman parte de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="9a546-433">Starting with the [!INCLUDE[net_v451](~/includes/net-v451-md.md)] and [!INCLUDE[win81](~/includes/win81-md.md)], the fidelity of error messages from exceptions that are propagated from Windows Runtime types and members that are not part of the .NET Framework is improved.</span></span> <span data-ttu-id="9a546-434">En concreto, los mensajes de excepción de extensiones de componentes de Visual C++ (C++ / c++ / CX) ahora se propaga a .NET Framework <xref:System.Exception> objetos.</span><span class="sxs-lookup"><span data-stu-id="9a546-434">In particular, exception messages from Visual C++ component extensions (C++/CX) are now propagated back into .NET Framework <xref:System.Exception> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a546-435">En el ejemplo de código siguiente se inicia y, a continuación, detecta un <xref:System.Exception> excepción y muestra el texto de la excepción mensaje mediante la <xref:System.Exception.Message%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a546-435">The following code example throws and then catches an <xref:System.Exception> exception and displays the exception's text message using the <xref:System.Exception.Message%2A> property.</span></span>
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9a546-436">Si se produce una excepción desde una propiedad, y necesita hacer referencia en el texto de <see cref="P:System.Exception.Message" /> para el argumento de la propiedad que establecen u obtienen, utilice "value" como el nombre del argumento de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a546-436">If you throw an exception from a property, and you need to refer in the text of <see cref="P:System.Exception.Message" /> to the property argument that you set or get, use "value" as the name of the property argument.</span></span></para></block>
        <block subset="none" type="overrides"><para><span data-ttu-id="9a546-437">El <see cref="P:System.Exception.Message" /> propiedad se reemplaza en clases que requieren el control sobre el formato o el contenido del mensaje.</span><span class="sxs-lookup"><span data-stu-id="9a546-437">The <see cref="P:System.Exception.Message" /> property is overridden in classes that require control over message content or format.</span></span> <span data-ttu-id="9a546-438">Código de aplicación normalmente obtiene acceso a esta propiedad cuando es necesario mostrar información sobre una excepción que se ha detectado.</span><span class="sxs-lookup"><span data-stu-id="9a546-438">Application code typically accesses this property when it needs to display information about an exception that has been caught.</span></span>  
  
<span data-ttu-id="9a546-439">Se debe traducir el mensaje de error.</span><span class="sxs-lookup"><span data-stu-id="9a546-439">The error message should be localized.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SerializeObjectState">
      <MemberSignature Language="C#" Value="protected event EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Runtime.Serialization.SafeSerializationEventArgs&gt; SerializeObjectState" />
      <MemberSignature Language="DocId" Value="E:System.Exception.SerializeObjectState" />
      <MemberSignature Language="VB.NET" Value="Protected Custom Event SerializeObjectState As EventHandler(Of SafeSerializationEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; event EventHandler&lt;System::Runtime::Serialization::SafeSerializationEventArgs ^&gt; ^ SerializeObjectState;" />
      <MemberSignature Language="F#" Value="member this.SerializeObjectState : EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; " Usage="member this.SerializeObjectState : System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Runtime.Serialization.SafeSerializationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a546-440">Ocurre cuando una excepción se serializa para crear un objeto de estado de excepción que contenga datos serializados sobre la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-440">Occurs when an exception is serialized to create an exception state object that contains serialized data about the exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-441">El objeto de estado de excepción implementa el <xref:System.Runtime.Serialization.ISafeSerializationData> interfaz.</span><span class="sxs-lookup"><span data-stu-id="9a546-441">The exception state object implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 <span data-ttu-id="9a546-442">Cuando el <xref:System.Exception.SerializeObjectState> suscripción a un evento, la excepción se deserializa y se crea como una excepción vacía.</span><span class="sxs-lookup"><span data-stu-id="9a546-442">When the <xref:System.Exception.SerializeObjectState> event is subscribed to, the exception is deserialized and created as an empty exception.</span></span> <span data-ttu-id="9a546-443">No se ejecuta el constructor de la excepción, y también se puede deserializar el estado de excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-443">The exception's constructor is not run, and the exception state is also deserialized.</span></span> <span data-ttu-id="9a546-444">El <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> , a continuación, se notifica el método de devolución de llamada del objeto de estado de excepción para que puede insertar los datos deserializados en la excepción vacía.</span><span class="sxs-lookup"><span data-stu-id="9a546-444">The <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A> callback method of the exception state object is then notified so that it can push deserialized data into the empty exception.</span></span>  
  
 <span data-ttu-id="9a546-445">El <xref:System.Exception.SerializeObjectState> evento permite a los tipos de excepción transparentes serializar y deserializar los datos de excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-445">The <xref:System.Exception.SerializeObjectState> event enables transparent exception types to serialize and deserialize exception data.</span></span> <span data-ttu-id="9a546-446">El código transparente puede ejecutar comandos dentro de los límites del conjunto de permisos que está funcionando, pero no se puede ejecutar, llamar a, derivan de o contener código crítico.</span><span class="sxs-lookup"><span data-stu-id="9a546-446">Transparent code can execute commands within the bounds of the permission set it is operating within, but cannot execute, call, derive from, or contain critical code.</span></span>  
  
 <span data-ttu-id="9a546-447">Si el <xref:System.Exception.SerializeObjectState> eventos no está suscrito a, la deserialización se produce como de costumbre con la <xref:System.Exception.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="9a546-447">If the <xref:System.Exception.SerializeObjectState> event is not subscribed to, deserialization occurs as usual using the <xref:System.Exception.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="9a546-448">Normalmente, un controlador para el <xref:System.Exception.SerializeObjectState> se agrega el evento en el constructor de la excepción para proporcionar para su serialización.</span><span class="sxs-lookup"><span data-stu-id="9a546-448">Typically, a handler for the <xref:System.Exception.SerializeObjectState> event is added in the exception's constructor to provide for its serialization.</span></span> <span data-ttu-id="9a546-449">Sin embargo, dado que el constructor no es ejecuta cuando el <xref:System.Exception.SerializeObjectState> ejecuta el controlador de eventos, serializar una excepción deserializada puede producir un <xref:System.Runtime.Serialization.SerializationException> excepción cuando intenta deserializar la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-449">But because the constructor is not executed when the <xref:System.Exception.SerializeObjectState> event handler executes, serializing a deserialized exception can throw a <xref:System.Runtime.Serialization.SerializationException> exception when you try to deserialize the exception.</span></span> <span data-ttu-id="9a546-450">Para evitar esto, también debe agregar el controlador para el <xref:System.Exception.SerializeObjectState> eventos en el <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9a546-450">To avoid this, you should also add the handler for the <xref:System.Exception.SerializeObjectState> event in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9a546-451">Vea la sección ejemplos para ver una ilustración.</span><span class="sxs-lookup"><span data-stu-id="9a546-451">See the Examples section for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a546-452">En el ejemplo siguiente se define un `BadDivisionException` que controla la <xref:System.Exception.SerializeObjectState> eventos.</span><span class="sxs-lookup"><span data-stu-id="9a546-452">The following example defines a `BadDivisionException` that handles the <xref:System.Exception.SerializeObjectState> event.</span></span> <span data-ttu-id="9a546-453">También contiene un objeto de estado, que es una estructura denominada `BadDivisionExceptionState` que implementa el <xref:System.Runtime.Serialization.ISafeSerializationData> interfaz.</span><span class="sxs-lookup"><span data-stu-id="9a546-453">It also contains a state object, which is a nested structure named `BadDivisionExceptionState` that implements the <xref:System.Runtime.Serialization.ISafeSerializationData> interface.</span></span>  
  
 [!code-csharp[System.Exception.SerializeObjectState#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.serializeobjectstate/cs/example2.cs#1)]
 [!code-vb[System.Exception.SerializeObjectState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.serializeobjectstate/vb/example2.vb#1)]  
  
 <span data-ttu-id="9a546-454">El `BadDivisionException` excepción se produce cuando se produce una división de punto flotante por cero.</span><span class="sxs-lookup"><span data-stu-id="9a546-454">The `BadDivisionException` exception is thrown when a floating-point division by zero occurs.</span></span> <span data-ttu-id="9a546-455">Durante la primera división por cero, el ejemplo crea un `BadDivisionException` objeto, lo serializa y se produce la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-455">During the first division by zero, the example instantiates a `BadDivisionException` object, serializes it, and throws the exception.</span></span> <span data-ttu-id="9a546-456">Cuando se producen posteriores divisiones por cero, en el ejemplo se deserializa el objeto serializado previamente, vuelve a serializar y produce la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-456">When subsequent divisions by zero occur, the example deserializes the  previously serialized object, reserializes it, and throws the exception.</span></span> <span data-ttu-id="9a546-457">Para proporcionar para la deserialización, reserialization, deserialización y serialización de objetos, el ejemplo se agrega el <xref:System.Exception.SerializeObjectState> controlador de eventos tanto en el `BadDivisionException` constructor de clase y, en el <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> implementación.</span><span class="sxs-lookup"><span data-stu-id="9a546-457">To provide for object serialization, deserialization, reserialization, and deserialization, the example adds the <xref:System.Exception.SerializeObjectState> event handler both in the `BadDivisionException` class constructor and in the <xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9a546-458">Si está suscrito a este evento y se usa, todos los tipos derivados que siguen en la jerarquía de herencia deben implementar el mismo mecanismo de serialización.</span><span class="sxs-lookup"><span data-stu-id="9a546-458">If this event is subscribed to and used, all derived types that follow in the inheritance hierarchy must implement the same serialization mechanism.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public virtual string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Exception.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Exception.Source" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.Source</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a546-459">Devuelve o establece el nombre de la aplicación o del objeto que generó el error.</span><span class="sxs-lookup"><span data-stu-id="9a546-459">Gets or sets the name of the application or the object that causes the error.</span></span></summary>
        <value><span data-ttu-id="9a546-460">Nombre de la aplicación o del objeto que generó el error.</span><span class="sxs-lookup"><span data-stu-id="9a546-460">The name of the application or the object that causes the error.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-461">Si el <xref:System.Exception.Source%2A> no se establece explícitamente la propiedad, el tiempo de ejecución establece automáticamente en el nombre del ensamblado en el que se originó la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-461">If the <xref:System.Exception.Source%2A> property is not set explicitly, the runtime automatically sets it to the name of the assembly in which the exception originated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a546-462">En el ejemplo siguiente se inicia un `Exception` que establece el `Source` propiedad en su constructor y, a continuación, detecta la excepción y muestra `Source`.</span><span class="sxs-lookup"><span data-stu-id="9a546-462">The following example throws an `Exception` that sets the `Source` property in its constructor and then catches the exception and displays `Source`.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9a546-463">Objeto debe ser un objeto <see cref="N:System.Reflection" /> en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="9a546-463">The object must be a runtime <see cref="N:System.Reflection" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public virtual string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Exception.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="System.Exception.StackTrace" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.StackTrace</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a546-464">Obtiene una representación de cadena de los marcos inmediatos en la pila de llamadas.</span><span class="sxs-lookup"><span data-stu-id="9a546-464">Gets a string representation of the immediate frames on the call stack.</span></span></summary>
        <value><span data-ttu-id="9a546-465">Cadena que describe los marcos inmediatos de la pila de llamadas.</span><span class="sxs-lookup"><span data-stu-id="9a546-465">A string that describes the immediate frames of the call stack.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-466">La pila de ejecución realiza un seguimiento de todos los métodos que se encuentren en ejecución en un momento dado.</span><span class="sxs-lookup"><span data-stu-id="9a546-466">The execution stack keeps track of all the methods that are in execution at a given instant.</span></span> <span data-ttu-id="9a546-467">El seguimiento de las llamadas de métodos se denomina "seguimiento de pila".</span><span class="sxs-lookup"><span data-stu-id="9a546-467">A trace of the method calls is called a stack trace.</span></span> <span data-ttu-id="9a546-468">La lista de seguimiento de pila proporciona una manera para seguir la pila de llamadas hasta el número de línea del método donde se produce la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-468">The stack trace listing provides a way to follow the call stack to the line number in the method where the exception occurs.</span></span>  
  
 <span data-ttu-id="9a546-469">El <xref:System.Exception.StackTrace%2A> propiedad devuelve los marcos de la pila de llamadas que se originan en la ubicación donde se produjo la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-469">The <xref:System.Exception.StackTrace%2A> property returns the frames of the call stack that originate at the location where the exception was thrown.</span></span> <span data-ttu-id="9a546-470">Puede obtener información sobre los marcos adicionales en la pila de llamadas mediante la creación de una nueva instancia de la <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> clase y el uso de su <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9a546-470">You can obtain information about additional frames in the call stack by creating a new instance of the <xref:System.Diagnostics.StackTrace?displayProperty=nameWithType> class and using its <xref:System.Diagnostics.StackTrace.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9a546-471">Common language runtime (CLR) actualiza el seguimiento de pila cada vez que se produce una excepción en código de aplicación (mediante el uso de la `throw` palabra clave).</span><span class="sxs-lookup"><span data-stu-id="9a546-471">The common language runtime (CLR) updates the stack trace whenever an exception is thrown in application code (by using the `throw` keyword).</span></span> <span data-ttu-id="9a546-472">Si se vuelve a producir la excepción en un método que es diferente que el método donde se inició originalmente, el seguimiento de pila contiene la ubicación en el método donde se inició originalmente la excepción y la ubicación en el método donde la excepción fue vuelve a iniciar.</span><span class="sxs-lookup"><span data-stu-id="9a546-472">If the exception was rethrown in a method that is different than the method where it was originally thrown, the stack trace contains both the location in the method where the exception was originally thrown, and the location in the method where the exception was rethrown.</span></span> <span data-ttu-id="9a546-473">Si se produce la excepción y más adelante vuelve a generar, en el mismo método, el seguimiento de pila solo contiene la ubicación cuando se vuelve a producir una excepción y no incluye la ubicación donde se inició originalmente la excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-473">If the exception is thrown, and later rethrown, in the same method, the stack trace only contains the location where the exception was rethrown and does not include the location where the exception was originally thrown.</span></span>  
  
 <span data-ttu-id="9a546-474">El <xref:System.Exception.StackTrace%2A> propiedad no puede informar de las llamadas a métodos según lo esperado debido a las transformaciones de código, como inserción, que se producen durante la optimización.</span><span class="sxs-lookup"><span data-stu-id="9a546-474">The <xref:System.Exception.StackTrace%2A> property may not report as many method calls as expected because of code transformations, such as inlining, that occur during optimization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a546-475">El siguiente ejemplo de código inicia un `Exception` y, a continuación, captura y muestra un seguimiento de pila mediante el `StackTrace` propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a546-475">The following code example throws an `Exception` and then catches it and displays a stack trace using the `StackTrace` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9a546-476">El <see langword="StackTrace" /> propiedad se reemplaza en clases que requieren el control sobre el formato o el contenido del seguimiento de pila.</span><span class="sxs-lookup"><span data-stu-id="9a546-476">The <see langword="StackTrace" /> property is overridden in classes that require control over the stack trace content or format.</span></span>  
  
<span data-ttu-id="9a546-477">De forma predeterminada, el seguimiento de pila se captura inmediatamente antes de que se produce un objeto de excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-477">By default, the stack trace is captured immediately before an exception object is thrown.</span></span> <span data-ttu-id="9a546-478">Use <see cref="P:System.Environment.StackTrace" /> para obtener información de seguimiento de pila cuando no se va a producir ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-478">Use <see cref="P:System.Environment.StackTrace" /> to get stack trace information when no exception is being thrown.</span></span></para></block>
        <altmember cref="P:System.Environment.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="TargetSite">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase TargetSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase TargetSite" />
      <MemberSignature Language="DocId" Value="P:System.Exception.TargetSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSite As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ TargetSite { System::Reflection::MethodBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetSite : System.Reflection.MethodBase" Usage="System.Exception.TargetSite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Exception.TargetSite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a546-479">Obtiene el método que produjo la excepción actual.</span><span class="sxs-lookup"><span data-stu-id="9a546-479">Gets the method that throws the current exception.</span></span></summary>
        <value><span data-ttu-id="9a546-480">Clase <see cref="T:System.Reflection.MethodBase" /> que produjo la excepción actual.</span><span class="sxs-lookup"><span data-stu-id="9a546-480">The <see cref="T:System.Reflection.MethodBase" /> that threw the current exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-481">Si el método que produce esta excepción no está disponible y el seguimiento de pila no es una referencia nula (`Nothing` en Visual Basic), <xref:System.Exception.TargetSite%2A> Obtiene el método de seguimiento de la pila.</span><span class="sxs-lookup"><span data-stu-id="9a546-481">If the method that throws this exception is not available and the stack trace is not a null reference (`Nothing` in Visual Basic), <xref:System.Exception.TargetSite%2A> obtains the method from the stack trace.</span></span> <span data-ttu-id="9a546-482">Si el seguimiento de pila es una referencia null, <xref:System.Exception.TargetSite%2A> devolverá una referencia null.</span><span class="sxs-lookup"><span data-stu-id="9a546-482">If the stack trace is a null reference, <xref:System.Exception.TargetSite%2A> also returns a null reference.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9a546-483">El <xref:System.Exception.TargetSite%2A> propiedad no puede notificar con exactitud el nombre del método en el que se produjo una excepción si el controlador de excepciones controla una excepción en los límites del dominio de aplicación.</span><span class="sxs-lookup"><span data-stu-id="9a546-483">The <xref:System.Exception.TargetSite%2A> property may not accurately report the name of the method in which an exception was thrown if the exception handler handles an exception across application domain boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a546-484">El siguiente ejemplo de código inicia un `Exception` y, a continuación, captura y muestra el método original mediante el `TargetSite` propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a546-484">The following code example throws an `Exception` and then catches it and displays the originating method using the `TargetSite` property.</span></span>  
  
 [!code-cpp[System.Exception.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.Exception.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.Properties/CS/properties.cs#1)]
 [!code-vb[System.Exception.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Exception.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="exception.ToString " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Exception.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a546-485">Crea y devuelve una representación de cadena de la excepción actual.</span><span class="sxs-lookup"><span data-stu-id="9a546-485">Creates and returns a string representation of the current exception.</span></span></summary>
        <returns><span data-ttu-id="9a546-486">Representación de cadena de la excepción actual.</span><span class="sxs-lookup"><span data-stu-id="9a546-486">A string representation of the current exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a546-487"><xref:System.Exception.ToString%2A> Devuelve una representación de la excepción actual que está pensada para ser inteligible.</span><span class="sxs-lookup"><span data-stu-id="9a546-487"><xref:System.Exception.ToString%2A> returns a representation of the current exception that is intended to be understood by humans.</span></span> <span data-ttu-id="9a546-488">Cuando la excepción contiene datos de la referencia cultural, la representación de cadena devueltos por `ToString` es necesario tener en cuenta la referencia cultural actual del sistema.</span><span class="sxs-lookup"><span data-stu-id="9a546-488">Where the exception contains culture-sensitive data, the string representation returned by `ToString` is required to take into account the current system culture.</span></span> <span data-ttu-id="9a546-489">Aunque no hay ningún requisito exacta para el formato de la cadena devuelta, debería intentar reflejar el valor del objeto como percibido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="9a546-489">Although there are no exact requirements for the format of the returned string, it should attempt to reflect the value of the object as perceived by the user.</span></span>  
  
 <span data-ttu-id="9a546-490">La implementación predeterminada de <xref:System.Exception.ToString%2A> Obtiene el nombre de la clase que produjo la excepción actual, el mensaje, el resultado de llamar a <xref:System.Exception.ToString%2A> en la excepción interna y el resultado de llamar a <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9a546-490">The default implementation of <xref:System.Exception.ToString%2A> obtains the name of the class that threw the current exception, the message, the result of calling <xref:System.Exception.ToString%2A> on the inner exception, and the result of calling <xref:System.Environment.StackTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9a546-491">Si alguno de estos miembros es `null`, su valor no se incluye en la cadena devuelta.</span><span class="sxs-lookup"><span data-stu-id="9a546-491">If any of these members is `null`, its value is not included in the returned string.</span></span>  
  
 <span data-ttu-id="9a546-492">Si no hay ningún mensaje de error o si es una cadena vacía (""), se devuelve ningún mensaje de error.</span><span class="sxs-lookup"><span data-stu-id="9a546-492">If there is no error message or if it is an empty string (""), then no error message is returned.</span></span> <span data-ttu-id="9a546-493">El nombre de la excepción interna y el seguimiento de pila se devuelven solo si no están `null`.</span><span class="sxs-lookup"><span data-stu-id="9a546-493">The name of the inner exception and the stack trace are returned only if they are not `null`.</span></span>  
  
 <span data-ttu-id="9a546-494">Este método invalida <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9a546-494">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a546-495">El ejemplo siguiente se produce una excepción y muestra el resultado de llamar a <xref:System.Exception.ToString%2A> en esa excepción.</span><span class="sxs-lookup"><span data-stu-id="9a546-495">The following example causes an exception and displays the result of calling <xref:System.Exception.ToString%2A> on that exception.</span></span> <span data-ttu-id="9a546-496">Tenga en cuenta que el <xref:System.Exception.ToString%2A?displayProperty=nameWithType> método se llama implícitamente cuando la instancia de la clase de excepción aparece en la lista de argumentos de la <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9a546-496">Note that the <xref:System.Exception.ToString%2A?displayProperty=nameWithType> method is called implicitly when the Exception class instance appears in the argument list of the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Exception.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.exception.tostring/cpp/ToStringEx1.cpp#1)]
 [!code-csharp[System.Exception.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.exception.tostring/cs/ToStringEx1.cs#1)]
 [!code-vb[System.Exception.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.exception.tostring/vb/ToStringEx1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
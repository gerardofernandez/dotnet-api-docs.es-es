<Type Name="Predicate&lt;T&gt;" FullName="System.Predicate&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aec57cef3fed8cea256c30b4abcc1cef689abe97" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37727095" /></Metadata><TypeSignature Language="C#" Value="public delegate bool Predicate&lt;in T&gt;(T obj);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Predicate`1&lt;- T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Predicate`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Predicate(Of In T)(obj As T) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate bool Predicate(T obj);" />
  <TypeSignature Language="F#" Value="type Predicate&lt;'T&gt; = delegate of 'T -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="obj" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T"><span data-ttu-id="2d199-101">Tipo del objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="2d199-101">The type of the object to compare.</span></span></typeparam>
    <param name="obj"><span data-ttu-id="2d199-102">Objeto que se va a comparar según los criterios definidos en el método representado por este delegado.</span><span class="sxs-lookup"><span data-stu-id="2d199-102">The object to compare against the criteria defined within the method represented by this delegate.</span></span></param>
    <summary><span data-ttu-id="2d199-103">Representa el método que define un conjunto de criterios y determina si el objeto especificado cumple con dichos criterios.</span><span class="sxs-lookup"><span data-stu-id="2d199-103">Represents the method that defines a set of criteria and determines whether the specified object meets those criteria.</span></span></summary>
    <returns><span data-ttu-id="2d199-104">Es <see langword="true" /> si <paramref name="obj" /> cumple los criterios definidos en el método representado por este delegado; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2d199-104"><see langword="true" /> if <paramref name="obj" /> meets the criteria defined within the method represented by this delegate; otherwise, <see langword="false" />.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d199-105">Este delegado es utilizado por varios métodos de la <xref:System.Array> y <xref:System.Collections.Generic.List%601> clases para buscar elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="2d199-105">This delegate is used by several methods of the <xref:System.Array> and <xref:System.Collections.Generic.List%601> classes to search for elements in the collection.</span></span>  
  
 <span data-ttu-id="2d199-106">Normalmente, el <xref:System.Predicate%601> delegado representado por una expresión lambda.</span><span class="sxs-lookup"><span data-stu-id="2d199-106">Typically, the <xref:System.Predicate%601> delegate is represented by a lambda expression.</span></span> <span data-ttu-id="2d199-107">Dado que las variables de ámbito local están disponibles para la expresión lambda, es fácil de probar una condición que no se conoce de forma precisa en tiempo de compilación.</span><span class="sxs-lookup"><span data-stu-id="2d199-107">Because locally scoped variables are available to the lambda expression, it is easy to test for a condition that is not precisely known at compile time.</span></span> <span data-ttu-id="2d199-108">Esto se simula en el ejemplo siguiente, que define un `HockeyTeam` clase que contiene información sobre un equipo de liga nacional de Hockey y el año en el que se creó.</span><span class="sxs-lookup"><span data-stu-id="2d199-108">This is simulated in the following example, which defines a `HockeyTeam` class that contains information about a National Hockey League team and the year in which it was founded.</span></span> <span data-ttu-id="2d199-109">El ejemplo define una matriz de valores enteros que representan años y asigna de forma aleatoria un elemento de la matriz a `foundedBeforeYear`, que es una variable que tiene ámbito local en el ejemplo `Main` método.</span><span class="sxs-lookup"><span data-stu-id="2d199-109">The example defines an array of integer values that represent years, and randomly assigns one element of the array to `foundedBeforeYear`, which is a variable that is locally scoped to the example's `Main` method.</span></span> <span data-ttu-id="2d199-110">Dado que las variables de ámbito local están disponibles para una expresión lambda, la expresión lambda se pasa a la <xref:System.Collections.Generic.List%601.FindAll%2A?displayProperty=nameWithType> método es capaz de devolver un `HockeyTeam` objeto para cada equipo fundada en o antes de ese año.</span><span class="sxs-lookup"><span data-stu-id="2d199-110">Because locally scoped variables are available to a lambda expression, the lambda expression passed to the <xref:System.Collections.Generic.List%601.FindAll%2A?displayProperty=nameWithType> method is able to return a `HockeyTeam` object for each team founded on or before that year.</span></span>  
  
 [!code-csharp[System.Predicate\`1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Predicate`1/cs/predicate1.cs#3)]
 [!code-vb[System.Predicate\`1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Predicate`1/vb/predicate1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="2d199-111">El siguiente ejemplo de código utiliza un <xref:System.Predicate%601> delegado con el <xref:System.Array.Find%2A?displayProperty=nameWithType> método para buscar en una matriz de <xref:System.Drawing.Point> estructuras.</span><span class="sxs-lookup"><span data-stu-id="2d199-111">The following code example uses a <xref:System.Predicate%601> delegate with the <xref:System.Array.Find%2A?displayProperty=nameWithType> method to search an array of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="2d199-112">El ejemplo se define explícitamente un <xref:System.Predicate%601> delegado denominado `predicate` y le asigna un método denominado `FindPoints` que devuelve `true` si el producto de la <xref:System.Drawing.Point.X%2A?displayProperty=nameWithType> y <xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType> campos es superior a 100.000.</span><span class="sxs-lookup"><span data-stu-id="2d199-112">The example explicitly defines a <xref:System.Predicate%601> delegate named `predicate` and assigns it a method named `FindPoints` that returns `true` if the product of the <xref:System.Drawing.Point.X%2A?displayProperty=nameWithType> and <xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType> fields is greater than 100,000.</span></span> <span data-ttu-id="2d199-113">Tenga en cuenta que es habitual usar una expresión lambda en lugar de definir explícitamente un delegado del tipo <xref:System.Predicate%601>, tal y como se muestra en el segundo ejemplo.</span><span class="sxs-lookup"><span data-stu-id="2d199-113">Note that it is customary to use a lambda expression rather than to explicitly define a delegate of type <xref:System.Predicate%601>, as the second example illustrates.</span></span>  
  
 [!code-csharp[System.Predicate\`1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Predicate`1/cs/predicateex2.cs#4)]
 [!code-vb[System.Predicate\`1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Predicate`1/vb/predicateex2.vb#4)]  
  
 <span data-ttu-id="2d199-114">El ejemplo siguiente es idéntico al ejemplo anterior, salvo que usa una expresión lambda para representar el <xref:System.Predicate%601> delegar.</span><span class="sxs-lookup"><span data-stu-id="2d199-114">The following example is identical to the previous example, except that it uses a lambda expression to represent the <xref:System.Predicate%601> delegate.</span></span>  <span data-ttu-id="2d199-115">Cada elemento de la `points` matriz se pasa a la expresión lambda hasta que la expresión busca un elemento que cumpla los criterios de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="2d199-115">Each element of the `points` array is passed to the lambda expression until the expression finds an element that meets the search criteria.</span></span> <span data-ttu-id="2d199-116">En este caso, la expresión lambda devuelve `true` si el producto de los campos X e Y es mayor que 100 000.</span><span class="sxs-lookup"><span data-stu-id="2d199-116">In this case, the lambda expression returns `true` if the product of the X and Y fields is greater than 100,000.</span></span>  
  
 [!code-csharp[System.Predicate\`1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Predicate`1/cs/predicateex1.cs#2)]
 [!code-vb[System.Predicate\`1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Predicate`1/vb/predicateex1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
  </Docs>
</Type>
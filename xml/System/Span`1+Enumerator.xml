<Type Name="Span&lt;T&gt;+Enumerator" FullName="System.Span&lt;T&gt;+Enumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="51216179ec9275cfab02d5dad557c501cd38affc" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58729779" /></Metadata><TypeSignature Language="C#" Value="public struct Span&lt;T&gt;.Enumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit Span`1/Enumerator&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Span`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure Span(Of T).Enumerator" />
  <TypeSignature Language="C++ CLI" Value="public: value class Span&lt;T&gt;::Enumerator" />
  <TypeSignature Language="F#" Value="type Span&lt;'T&gt;.Enumerator = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.2;netcore-2.1;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsByRefLike</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cd800-101">Proporciona un enumerador para los elementos de <see cref="T:System.Span`1" />.</span><span class="sxs-lookup"><span data-stu-id="cd800-101">Provides an enumerator for the elements of a <see cref="T:System.Span`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

<span data-ttu-id="cd800-102">C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) del lenguaje C# y el [For Each... Siguiente](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construcción en Visual Basic oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="cd800-102">The C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) of the C# language and the [For Each...Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construct in Visual Basic hides the complexity of enumerators.</span></span> <span data-ttu-id="cd800-103">En lugar de manipular directamente el enumerador mediante `foreach` o `For Each...Next` se recomienda.</span><span class="sxs-lookup"><span data-stu-id="cd800-103">Instead of directly manipulating the enumerator, using `foreach` or `For Each...Next` is recommended.</span></span> 

<span data-ttu-id="cd800-104">Inicialmente, el enumerador se coloca antes del primer elemento en el <xref:System.Span%601>.</span><span class="sxs-lookup"><span data-stu-id="cd800-104">Initially, the enumerator is positioned before the first element in the <xref:System.Span%601>.</span></span> <span data-ttu-id="cd800-105">En esta posición, el valor de propiedad <xref:System.Span%601.Enumerator.Current> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="cd800-105">At this position, <xref:System.Span%601.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="cd800-106">Debe llamar a <xref:System.Span%601.Enumerator.MoveNext%2A> para avanzar el enumerador hasta el primer elemento de la <xref:System.Span%601> antes de leer el valor de <xref:System.Span%601.Enumerator.Current>.</span><span class="sxs-lookup"><span data-stu-id="cd800-106">You must call <xref:System.Span%601.Enumerator.MoveNext%2A> to advance the enumerator to the first item in the <xref:System.Span%601> before reading the value of <xref:System.Span%601.Enumerator.Current>.</span></span>

<span data-ttu-id="cd800-107"><xref:System.Span%601.Enumerator.Current> Devuelve el mismo valor hasta <xref:System.Span%601.Enumerator.MoveNext%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="cd800-107"><xref:System.Span%601.Enumerator.Current> returns the same value until <xref:System.Span%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="cd800-108"><xref:System.Span%601.Enumerator.MoveNext%2A> establece <xref:System.Span%601.Enumerator.Current> al elemento siguiente en el <xref:System.Span%601>.</span><span class="sxs-lookup"><span data-stu-id="cd800-108"><xref:System.Span%601.Enumerator.MoveNext%2A> sets <xref:System.Span%601.Enumerator.Current> to the next item in the <xref:System.Span%601>.</span></span>

<span data-ttu-id="cd800-109">Si <xref:System.Span%601.Enumerator.MoveNext%2A> pasa el final de la <xref:System.Span%601>, <xref:System.Span%601.Enumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="cd800-109">If <xref:System.Span%601.Enumerator.MoveNext%2A> passes the end of the <xref:System.Span%601>, <xref:System.Span%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="cd800-110">Cuando el enumerador está en este estado, las llamadas subsiguientes a <xref:System.Span%601.Enumerator.MoveNext%2A> también devolver `false` y <xref:System.Span%601.Enumerator.Current> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="cd800-110">When the enumerator is at this state, subsequent calls to <xref:System.Span%601.Enumerator.MoveNext%2A> also return `false` and <xref:System.Span%601.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="cd800-111">No puede establecer <xref:System.Span%601.Enumerator.Current> al primer elemento en el <xref:System.Span%601> , debe crear una nueva instancia de enumerador en su lugar.</span><span class="sxs-lookup"><span data-stu-id="cd800-111">You cannot set <xref:System.Span%601.Enumerator.Current> to the first item in the <xref:System.Span%601> again; you must create a new enumerator instance instead.</span></span> 

<span data-ttu-id="cd800-112">El enumerador no tiene acceso exclusivo a la <xref:System.Span%601>.</span><span class="sxs-lookup"><span data-stu-id="cd800-112">The enumerator does not have exclusive access to the <xref:System.Span%601>.</span></span> <span data-ttu-id="cd800-113">Además, también se pueden modificar los datos subyacentes en el que se basa el intervalo.</span><span class="sxs-lookup"><span data-stu-id="cd800-113">In addition, the underlying data on which the span is based can also be modified.</span></span> <span data-ttu-id="cd800-114">Por lo tanto, la enumeración a través de un intervalo intrínsecamente no es un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="cd800-114">Therefore, enumerating through a span is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="cd800-115">Para garantizar la seguridad para subprocesos durante la enumeración, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="cd800-115">To guarantee thread safety during enumeration, you must implement your own synchronization.</span></span> <span data-ttu-id="cd800-116">Por ejemplo, el código siguiente tiene una condición de carrera.</span><span class="sxs-lookup"><span data-stu-id="cd800-116">For example, the following code has a race condition.</span></span> <span data-ttu-id="cd800-117">No garantiza que se van a enumerar el intervalo antes de la `ClearContents` método se ejecuta.</span><span class="sxs-lookup"><span data-stu-id="cd800-117">It does not ensure that the span will be enumerated before the `ClearContents` method executes.</span></span> <span data-ttu-id="cd800-118">Como resultado, la matriz subyacente se borra durante la enumeración del intervalo:</span><span class="sxs-lookup"><span data-stu-id="cd800-118">As a result, the underlying array is cleared during enumeration of the span:</span></span>

[!code-csharp[System.Span<T>.Enumerator-no-synchronization](~/samples/snippets/csharp/api/system/span.enumerator/nosync/program.cs)]

<span data-ttu-id="cd800-119">Si sincroniza el acceso a la matriz antes de enumerar el intervalo, como la versión revisada de la `EnumerateSpan` hace el método en el ejemplo siguiente, la `ClearContents` método no modifica la base de datos de intervalos de durante la enumeración.</span><span class="sxs-lookup"><span data-stu-id="cd800-119">If you synchronize access to the array before enumerating the span, as the revised version of the `EnumerateSpan` method does in the following example, the `ClearContents` method doesn't modify underlying span data during enumeration.</span></span> <span data-ttu-id="cd800-120">Tenga en cuenta que el ejemplo se bloquea la matriz subyacente en el que se basa el intervalo.</span><span class="sxs-lookup"><span data-stu-id="cd800-120">Note that the example locks the underlying array on which the span is based.</span></span>  

[!code-csharp[System.Span<T>.Enumerator-no-synchronization](~/samples/snippets/csharp/api/system/span.enumerator/sync/program.cs#1)]

<span data-ttu-id="cd800-121">A diferencia de algunas otras estructuras de enumerador en. NET, el <xref:System.Span%601.Enumerator>:</span><span class="sxs-lookup"><span data-stu-id="cd800-121">Unlike some other enumerator structures in .NET, the <xref:System.Span%601.Enumerator>:</span></span>

- <span data-ttu-id="cd800-122">No implementa la <xref:System.Collections.IEnumerator> o <xref:System.Collections.Generic.IEnumerator%601> interfaz.</span><span class="sxs-lookup"><span data-stu-id="cd800-122">Does not implement the <xref:System.Collections.IEnumerator> or <xref:System.Collections.Generic.IEnumerator%601> interface.</span></span> <span data-ttu-id="cd800-123">Esto es porque <xref:System.Span%601.Enumerator> es un [ref struct](~/docs/csharp/reference-semantics-with-value-types.md#ref-struct-type).</span><span class="sxs-lookup"><span data-stu-id="cd800-123">This is because <xref:System.Span%601.Enumerator> is a [ref struct](~/docs/csharp/reference-semantics-with-value-types.md#ref-struct-type).</span></span>

- <span data-ttu-id="cd800-124">No incluye un `Reset` método, que puede establecer el enumerador en su posición inicial delante del primer elemento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="cd800-124">Does not include a `Reset` method, which can set the enumerator to its initial position before the first element in the span.</span></span> <span data-ttu-id="cd800-125">(El <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> método debe implementarse como parte de la interfaz, pero la mayoría de los implementadores producirán una excepción o no proporcionan ninguna implementación.)</span><span class="sxs-lookup"><span data-stu-id="cd800-125">(The <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> method must be implemented as part of the interface, but most implementors either throw an exception or provide no implementation.)</span></span> 
 
      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.Span`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T % Current { T % get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : " Usage="System.Span&lt;'T&gt;.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cd800-126">Obtiene una referencia al elemento en la posición actual del enumerador.</span><span class="sxs-lookup"><span data-stu-id="cd800-126">Gets a reference to the item at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="cd800-127">Elemento de <see cref="T:System.Span`1" /> en la posición actual del enumerador.</span><span class="sxs-lookup"><span data-stu-id="cd800-127">The element in the <see cref="T:System.Span`1" /> at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="cd800-128">`Current` no está definida en cualquiera de las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="cd800-128">`Current` is undefined under either of the following conditions:</span></span> 

- <span data-ttu-id="cd800-129">Inmediatamente después de crea el enumerador, el enumerador se coloca antes del primer elemento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="cd800-129">Immediately after the enumerator is created, the enumerator is positioned before the first element in the span.</span></span> <span data-ttu-id="cd800-130"><xref:System.Span%601.Enumerator.MoveNext%2A> debe llamarse para hacer avanzar el enumerador al primer elemento del intervalo antes de leer el valor de `Current`.</span><span class="sxs-lookup"><span data-stu-id="cd800-130"><xref:System.Span%601.Enumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the span before reading the value of `Current`.</span></span>

- <span data-ttu-id="cd800-131">La última llamada a <xref:System.Span%601.Enumerator.MoveNext%2A> devuelve `false`, lo que indica el final del intervalo.</span><span class="sxs-lookup"><span data-stu-id="cd800-131">The last call to <xref:System.Span%601.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the span.</span></span> 

<span data-ttu-id="cd800-132">`Current` Devuelve el mismo valor hasta <xref:System.Span%601.Enumerator.MoveNext%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="cd800-132">`Current` returns the same value until <xref:System.Span%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="cd800-133"><xref:System.Span%601.Enumerator.MoveNext%2A> establece `Current` al siguiente elemento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="cd800-133"><xref:System.Span%601.Enumerator.MoveNext%2A> sets `Current` to the next item in the span.</span></span> 

      ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Span`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cd800-134">Desplaza el enumerador al siguiente elemento de <see cref="System.Span`1" />.</span><span class="sxs-lookup"><span data-stu-id="cd800-134">Advances the enumerator to the next item of the <see cref="System.Span`1" />.</span></span></summary>
        <returns><span data-ttu-id="cd800-135">`true` si el enumerador se ha desplazado correctamente al elemento siguiente; `false` si se ha pasado el final del intervalo.</span><span class="sxs-lookup"><span data-stu-id="cd800-135">`true` if the enumerator successfully advanced to the next item; `false` if the end of the span has been passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="cd800-136">Después de crea un enumerador, se coloca antes del primer elemento en el intervalo y la primera llamada a `MoveNext` desplaza el enumerador al primer elemento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="cd800-136">After an enumerator is created, it is positioned before the first element in the span, and the first call to `MoveNext` advances the enumerator to the first item in the span.</span></span> 

<span data-ttu-id="cd800-137">Si `MoveNext` pasa el final del intervalo, `MoveNext` devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="cd800-137">If `MoveNext` passes the end of the span, `MoveNext` returns `false`.</span></span> <span data-ttu-id="cd800-138">Cuando el enumerador está en este estado, las llamadas subsiguientes a `MoveNext` también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="cd800-138">When the enumerator is at this state, subsequent calls to `MoveNext` also return `false`.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
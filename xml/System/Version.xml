<Type Name="Version" FullName="System.Version">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="be36977d740c25d7400869d3bfd48ab659f5bfb3" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52370306" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Version : ICloneable, IComparable, IComparable&lt;Version&gt;, IEquatable&lt;Version&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Version extends System.Object implements class System.ICloneable, class System.IComparable, class System.IComparable`1&lt;class System.Version&gt;, class System.IEquatable`1&lt;class System.Version&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Version" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Version&#xA;Implements ICloneable, IComparable, IComparable(Of Version), IEquatable(Of Version)" />
  <TypeSignature Language="C++ CLI" Value="public ref class Version sealed : ICloneable, IComparable, IComparable&lt;Version ^&gt;, IEquatable&lt;Version ^&gt;" />
  <TypeSignature Language="F#" Value="type Version = class&#xA;    interface ICloneable&#xA;    interface IComparable&#xA;    interface IComparable&lt;Version&gt;&#xA;    interface IEquatable&lt;Version&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Version&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Version&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c4bad-101">Representa el número de versión de un ensamblado, sistema operativo o Common Language Runtime.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4bad-101">Represents the version number of an assembly, operating system, or the common language runtime.</span>
      </span>
      <span data-ttu-id="c4bad-102">Esta clase no puede heredarse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4bad-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-103">Números de versión constan de dos a cuatro componentes: principal, secundaria, compilación y revisión.</span><span class="sxs-lookup"><span data-stu-id="c4bad-103">Version numbers consist of two to four components: major, minor, build, and revision.</span></span> <span data-ttu-id="c4bad-104">Los componentes principales y secundarias son necesarios; los componentes de compilación y revisión son opcionales, pero el componente de compilación es necesario si se ha definido el componente de revisión.</span><span class="sxs-lookup"><span data-stu-id="c4bad-104">The major and minor components are required; the build and revision components are optional, but the build component is required if the revision component is defined.</span></span> <span data-ttu-id="c4bad-105">Todos los componentes definidos deben ser enteros mayores o iguales que 0.</span><span class="sxs-lookup"><span data-stu-id="c4bad-105">All defined components must be integers greater than or equal to 0.</span></span> <span data-ttu-id="c4bad-106">El formato del número de versión es como sigue (se muestran los componentes opcionales en los corchetes ([y]):</span><span class="sxs-lookup"><span data-stu-id="c4bad-106">The format of the version number is as follows (optional components are shown in square brackets ([ and ]):</span></span>  
  
 <span data-ttu-id="c4bad-107">*principales*. *menores*[. *compilar*[. *revisión*]]</span><span class="sxs-lookup"><span data-stu-id="c4bad-107">*major*.*minor*[.*build*[.*revision*]]</span></span>  
  
 <span data-ttu-id="c4bad-108">Los componentes se usan por convención, como sigue:</span><span class="sxs-lookup"><span data-stu-id="c4bad-108">The components are used by convention as follows:</span></span>  
  
-   <span data-ttu-id="c4bad-109">*Principales*: los ensamblados con el mismo nombre pero con diferentes versiones principales no son intercambiables.</span><span class="sxs-lookup"><span data-stu-id="c4bad-109">*Major*: Assemblies with the same name but different major versions are not interchangeable.</span></span> <span data-ttu-id="c4bad-110">Un mayor número de versión podría indicar una gran reelaboración de un producto que no se puede suponer la compatibilidad con versiones anteriores.</span><span class="sxs-lookup"><span data-stu-id="c4bad-110">A higher version number might indicate a major rewrite of a product where backward compatibility cannot be assumed.</span></span>  
  
-   <span data-ttu-id="c4bad-111">*Menores*: si el nombre y el número de versión principal de dos ensamblados son los mismos, pero el número de versión secundaria es diferente, esto indica una mejora significativa con la intención de compatibilidad con versiones anteriores.</span><span class="sxs-lookup"><span data-stu-id="c4bad-111">*Minor*: If the name and major version number on two assemblies are the same, but the minor version number is different, this indicates significant enhancement with the intention of backward compatibility.</span></span> <span data-ttu-id="c4bad-112">Este número de versión secundaria más alto podría indicar una versión de punto de un producto o una versión nueva totalmente compatible con versiones anteriores de un producto.</span><span class="sxs-lookup"><span data-stu-id="c4bad-112">This higher minor version number might indicate a point release of a product or a fully backward-compatible new version of a product.</span></span>  
  
-   <span data-ttu-id="c4bad-113">*Compilación*: una diferencia en el número de compilación representa una recompilación del mismo origen.</span><span class="sxs-lookup"><span data-stu-id="c4bad-113">*Build*: A difference in build number represents a recompilation of the same source.</span></span> <span data-ttu-id="c4bad-114">Cuando el procesador, plataforma o compilador cambia, se pueden usar números de compilación diferentes.</span><span class="sxs-lookup"><span data-stu-id="c4bad-114">Different build numbers might be used when the processor, platform, or compiler changes.</span></span>  
  
-   <span data-ttu-id="c4bad-115">*Revisión*: los ensamblados con los mismos números de versión de nombre, principales y secundarias pero con revisiones diferentes están pensados para ser completamente intercambiables.</span><span class="sxs-lookup"><span data-stu-id="c4bad-115">*Revision*: Assemblies with the same name, major, and minor version numbers but different revisions are intended to be fully interchangeable.</span></span> <span data-ttu-id="c4bad-116">Un mayor número de revisión podría utilizarse en una compilación que corrige una vulnerabilidad de seguridad en un ensamblado publicada anteriormente.</span><span class="sxs-lookup"><span data-stu-id="c4bad-116">A higher revision number might be used in a build that fixes a security hole in a previously released assembly.</span></span>  
  
 <span data-ttu-id="c4bad-117">Las versiones posteriores de un ensamblado que difieran solo por números de compilación y revisión se consideran como actualizaciones de revisiones de la versión anterior.</span><span class="sxs-lookup"><span data-stu-id="c4bad-117">Subsequent versions of an assembly that differ only by build or revision numbers are considered to be Hotfix updates of the prior version.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c4bad-118">El valor de <xref:System.Version> propiedades que no asignadas explícitamente un valor es indefinido (-1).</span><span class="sxs-lookup"><span data-stu-id="c4bad-118">The value of <xref:System.Version> properties that have not been explicitly assigned a value is undefined (-1).</span></span>  
  
 <span data-ttu-id="c4bad-119">A partir de .NET Framework 2.0, el <xref:System.Version.MajorRevision%2A> y <xref:System.Version.MinorRevision%2A> propiedades le permiten identificar una versión temporal de la aplicación que, por ejemplo, corrige un problema hasta que pueda lanzar una solución permanente.</span><span class="sxs-lookup"><span data-stu-id="c4bad-119">Starting with .NET Framework 2.0, the <xref:System.Version.MajorRevision%2A> and <xref:System.Version.MinorRevision%2A> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution.</span></span>  <span data-ttu-id="c4bad-120">Además, el sistema operativo Windows NT usa el <xref:System.Version.MajorRevision%2A> propiedad para codificar el número de service pack.</span><span class="sxs-lookup"><span data-stu-id="c4bad-120">Furthermore, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.</span></span>  
  
## <a name="assigning-version-information-to-assemblies"></a><span data-ttu-id="c4bad-121">Asignar la información de versión a los ensamblados</span><span class="sxs-lookup"><span data-stu-id="c4bad-121">Assigning Version Information to Assemblies</span></span>  
 <span data-ttu-id="c4bad-122">Normalmente, el <xref:System.Version> clase no se usa para asignar un número de versión a un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c4bad-122">Ordinarily, the <xref:System.Version> class is not used to assign a version number to an assembly.</span></span> <span data-ttu-id="c4bad-123">En su lugar, el <xref:System.Reflection.AssemblyVersionAttribute> clase se utiliza para definir la versión de un ensamblado, como se muestra en el ejemplo de este tema.</span><span class="sxs-lookup"><span data-stu-id="c4bad-123">Instead, the <xref:System.Reflection.AssemblyVersionAttribute> class is used to define an assembly's version, as illustrated by the example in this topic.</span></span>  
  
## <a name="retrieving-version-information"></a><span data-ttu-id="c4bad-124">Al recuperar la información de versión</span><span class="sxs-lookup"><span data-stu-id="c4bad-124">Retrieving Version Information</span></span>  
 <span data-ttu-id="c4bad-125"><xref:System.Version> los objetos se usan con más frecuencia para almacenar información de versión sobre algún componente del sistema o aplicación (por ejemplo, el sistema operativo), common language runtime, el ejecutable de la aplicación actual o un ensamblado determinado.</span><span class="sxs-lookup"><span data-stu-id="c4bad-125"><xref:System.Version> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly.</span></span> <span data-ttu-id="c4bad-126">Los ejemplos siguientes muestran algunos de los escenarios más comunes:</span><span class="sxs-lookup"><span data-stu-id="c4bad-126">The following examples illustrate some of the most common scenarios:</span></span>  
  
-   <span data-ttu-id="c4bad-127">Recuperar la versión del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="c4bad-127">Retrieving the operating system version.</span></span> <span data-ttu-id="c4bad-128">En el ejemplo siguiente se usa el <xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType> propiedad para recuperar el número de versión del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="c4bad-128">The following example uses the <xref:System.OperatingSystem.Version%2A?displayProperty=nameWithType> property to retrieve the version number of the operating system.</span></span>  
  
     [!code-csharp[System.Version.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#1)]
     [!code-vb[System.Version.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#1)]  
  
-   <span data-ttu-id="c4bad-129">Recuperar la versión de common language runtime.</span><span class="sxs-lookup"><span data-stu-id="c4bad-129">Retrieving the version of the common language runtime.</span></span> <span data-ttu-id="c4bad-130">En el ejemplo siguiente se usa el <xref:System.Environment.Version%2A?displayProperty=nameWithType> propiedad que se va a recuperar la información de versión de common language runtime.</span><span class="sxs-lookup"><span data-stu-id="c4bad-130">The following example uses the <xref:System.Environment.Version%2A?displayProperty=nameWithType> property to retrieve version information about the common language runtime.</span></span>  
  
     [!code-csharp[System.Version.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#2)]
     [!code-vb[System.Version.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#2)]  
  
-   <span data-ttu-id="c4bad-131">Recuperar la versión de ensamblado de la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="c4bad-131">Retrieving the current application's assembly version.</span></span> <span data-ttu-id="c4bad-132">En el ejemplo siguiente se usa el <xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType> método para obtener una referencia a un <xref:System.Reflection.Assembly> objeto que representa la aplicación ejecutable y, a continuación, recupera su número de versión del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c4bad-132">The following example uses the <xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=nameWithType> method to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the application executable and then retrieves its assembly version number.</span></span>  
  
     [!code-csharp[System.Version.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentapp.cs#5)]
     [!code-vb[System.Version.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentapp.vb#5)]  
  
-   <span data-ttu-id="c4bad-133">Recuperar la versión del ensamblado del ensamblado actual.</span><span class="sxs-lookup"><span data-stu-id="c4bad-133">Retrieving the current assembly's assembly version.</span></span> <span data-ttu-id="c4bad-134">En el ejemplo siguiente se usa el <xref:System.Type.Assembly%2A?displayProperty=nameWithType> propiedad para obtener una referencia a un <xref:System.Reflection.Assembly> objeto que representa el ensamblado que contiene el punto de entrada de la aplicación y, a continuación, recupera su información de versión.</span><span class="sxs-lookup"><span data-stu-id="c4bad-134">The following example uses the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property to obtain a reference to an <xref:System.Reflection.Assembly> object that represents the assembly that contains the application entry point, and then retrieves its version information.</span></span>  
  
     [!code-csharp[System.Version.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentassem.cs#4)]
     [!code-vb[System.Version.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentassem.vb#4)]  
  
-   <span data-ttu-id="c4bad-135">Recuperar la versión de un ensamblado específico.</span><span class="sxs-lookup"><span data-stu-id="c4bad-135">Retrieving the version of a specific assembly.</span></span> <span data-ttu-id="c4bad-136">En el ejemplo siguiente se usa el <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType> método para obtener una referencia a un <xref:System.Reflection.Assembly> objeto que tiene un nombre de archivo en particular y, a continuación, recupera su información de versión.</span><span class="sxs-lookup"><span data-stu-id="c4bad-136">The following example uses the <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=nameWithType> method to obtain a reference to an <xref:System.Reflection.Assembly> object that has a particular file name, and then retrieves its version information.</span></span> <span data-ttu-id="c4bad-137">Tenga en cuenta que también existen otros métodos para crear una instancia de un <xref:System.Reflection.Assembly> objeto por nombre de archivo o por nombre seguro.</span><span class="sxs-lookup"><span data-stu-id="c4bad-137">Note that several other methods also exist to instantiate an <xref:System.Reflection.Assembly> object by file name or by strong name.</span></span>  
  
     [!code-csharp[System.Version.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/specificassem.cs#3)]
     [!code-vb[System.Version.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/specificassem.vb#3)]  
  
-   <span data-ttu-id="c4bad-138">Recuperar la versión de publicación de una aplicación ClickOnce.</span><span class="sxs-lookup"><span data-stu-id="c4bad-138">Retrieving the Publish Version of a ClickOnce application.</span></span> <span data-ttu-id="c4bad-139">En el ejemplo siguiente se usa el <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType> propiedad para mostrar la versión de publicación de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="c4bad-139">The following example uses the <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=nameWithType> property to display an application's Publish Version.</span></span> <span data-ttu-id="c4bad-140">Tenga en cuenta que su ejecución correcta requiere la identidad de aplicación del ejemplo debe establecerse.</span><span class="sxs-lookup"><span data-stu-id="c4bad-140">Note that its successful execution requires the example's application identity to be set.</span></span> <span data-ttu-id="c4bad-141">Esto se controla automáticamente el Asistente de publicación de Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="c4bad-141">This is handled automatically by the Visual Studio Publish Wizard.</span></span>  
  
     [!code-csharp[System.Version.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/clickonce.cs#7)]
     [!code-vb[System.Version.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/clickonce.vb#7)]  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="c4bad-142">La versión de publicación de una aplicación para la implementación de ClickOnce es completamente independiente de su versión de ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c4bad-142">The Publish Version of an application for ClickOnce deployment is completely independent of its assembly version.</span></span>  
  
## <a name="comparing-version-objects"></a><span data-ttu-id="c4bad-143">Comparar objetos de versión</span><span class="sxs-lookup"><span data-stu-id="c4bad-143">Comparing Version Objects</span></span>  
 <span data-ttu-id="c4bad-144">Puede usar el <xref:System.Version.CompareTo%2A> método para determinar si un <xref:System.Version> objeto es anterior, igual o posterior al segundo <xref:System.Version> objeto.</span><span class="sxs-lookup"><span data-stu-id="c4bad-144">You can use the <xref:System.Version.CompareTo%2A> method to determine whether one <xref:System.Version> object is earlier than, the same as, or later than a second <xref:System.Version> object.</span></span> <span data-ttu-id="c4bad-145">En el ejemplo siguiente se indica que la versión 2.1 es posterior a la versión 2.0.</span><span class="sxs-lookup"><span data-stu-id="c4bad-145">The following example indicates that Version 2.1 is later than Version 2.0.</span></span>  
  
 [!code-csharp[System.Version.Class.Comparing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons1.cs#1)]
 [!code-vb[System.Version.Class.Comparing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons1.vb#1)]  
  
 <span data-ttu-id="c4bad-146">Para que las dos versiones son iguales, la principal, secundaria, compilación y los números de revisión de la primera <xref:System.Version> objeto debe ser idéntico a los del segundo <xref:System.Version> objeto.</span><span class="sxs-lookup"><span data-stu-id="c4bad-146">For two versions to be equal, the major, minor, build, and revision numbers of the first <xref:System.Version> object must be identical to those of the second <xref:System.Version> object.</span></span> <span data-ttu-id="c4bad-147">Si el número de compilación y revisión de un <xref:System.Version> no está definido, el objeto que <xref:System.Version> se considera el objeto debe ser anterior a un <xref:System.Version> objeto cuya compilación o el número de revisión es igual a cero.</span><span class="sxs-lookup"><span data-stu-id="c4bad-147">If the build or revision number of a <xref:System.Version> object is undefined, that <xref:System.Version> object is considered to be earlier than a <xref:System.Version> object whose build or revision number is equal to zero.</span></span> <span data-ttu-id="c4bad-148">El siguiente ejemplo ilustra esto mediante la comparación de tres <xref:System.Version> objetos que han sin definir componentes de la versión.</span><span class="sxs-lookup"><span data-stu-id="c4bad-148">The following example illustrates this by comparing three <xref:System.Version> objects that have undefined version components.</span></span>  
  
 [!code-csharp[System.Version.Class.Comparing#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons2.cs#2)]
 [!code-vb[System.Version.Class.Comparing#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons2.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="c4bad-149">En el ejemplo siguiente se usa el <xref:System.Reflection.AssemblyVersionAttribute> atributo para asignar un número de versión a un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c4bad-149">The following example uses the <xref:System.Reflection.AssemblyVersionAttribute> attribute to assign a version number to an assembly.</span></span> <span data-ttu-id="c4bad-150">En tiempo de compilación, esta información de versión se almacena con los metadatos del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c4bad-150">At compile time, this version information is stored with the assembly's metadata.</span></span> <span data-ttu-id="c4bad-151">En tiempo de ejecución, el ejemplo recupera el valor de la <xref:System.Type.Assembly%2A?displayProperty=nameWithType> propiedad en un tipo que se encuentra en el ensamblado para obtener una referencia al ensamblado que se ejecuta y recupera información de versión del ensamblado desde el <xref:System.Reflection.AssemblyName.Version%2A> propiedad de la <xref:System.Reflection.AssemblyName> objeto devuelto por la <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c4bad-151">At run time, the example retrieves the value of the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property on a type found in the assembly to get a reference to the executing assembly, and it retrieves the assembly's version information from the <xref:System.Reflection.AssemblyName.Version%2A> property of the <xref:System.Reflection.AssemblyName> object returned by the <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Version.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/example1.cs#6)]
 [!code-vb[System.Version.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/example1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4bad-152">Inicializa una nueva instancia de la clase <see cref="T:System.Version" /> con los números principal, secundario, de compilación y revisión especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-152">Initializes a new instance of the <see cref="T:System.Version" /> class with the specified major, minor, build, and revision numbers.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bad-153">Inicializa una nueva instancia de la clase <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-153">Initializes a new instance of the <see cref="T:System.Version" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-154">Este constructor crea un <xref:System.Version> objeto con los siguientes valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4bad-154">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="c4bad-155">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4bad-155">Property</span></span>|<span data-ttu-id="c4bad-156">Valor</span><span class="sxs-lookup"><span data-stu-id="c4bad-156">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|<span data-ttu-id="c4bad-157">0</span><span class="sxs-lookup"><span data-stu-id="c4bad-157">0</span></span>|  
|<xref:System.Version.Minor%2A>|<span data-ttu-id="c4bad-158">0</span><span class="sxs-lookup"><span data-stu-id="c4bad-158">0</span></span>|  
|<xref:System.Version.Build%2A>|<span data-ttu-id="c4bad-159">indefinido (-1)</span><span class="sxs-lookup"><span data-stu-id="c4bad-159">undefined (-1)</span></span>|  
|<xref:System.Version.Revision%2A>|<span data-ttu-id="c4bad-160">indefinido (-1)</span><span class="sxs-lookup"><span data-stu-id="c4bad-160">undefined (-1)</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (version As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(System::String ^ version);" />
      <MemberSignature Language="F#" Value="new Version : string -&gt; Version" Usage="new System.Version version" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version">
          <span data-ttu-id="c4bad-161">Cadena que contiene los números principal, secundario, de compilación y de revisión en los que cada número está delimitado por un punto ('.').</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-161">A string containing the major, minor, build, and revision numbers, where each number is delimited with a period character ('.').</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-162">Inicializa una nueva instancia de la clase <see cref="T:System.Version" /> con la cadena especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-162">Initializes a new instance of the <see cref="T:System.Version" /> class using the specified string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-163">El `version` parámetro puede contener solo la componentes principal, secundaria, compilación y de revisión, en ese orden y todas separados por puntos.</span><span class="sxs-lookup"><span data-stu-id="c4bad-163">The `version` parameter can contain only the components major, minor, build, and revision, in that order, and all separated by periods.</span></span> <span data-ttu-id="c4bad-164">Debe haber al menos dos componentes y como máximo cuatro.</span><span class="sxs-lookup"><span data-stu-id="c4bad-164">There must be at least two components, and at most four.</span></span> <span data-ttu-id="c4bad-165">Se supone que los primeros dos componentes principales y secundarias.</span><span class="sxs-lookup"><span data-stu-id="c4bad-165">The first two components are assumed to be major and minor.</span></span> <span data-ttu-id="c4bad-166">El valor de los componentes no especificados no está definido.</span><span class="sxs-lookup"><span data-stu-id="c4bad-166">The value of unspecified components is undefined.</span></span>  
  
 <span data-ttu-id="c4bad-167">El formato del número de versión es como sigue.</span><span class="sxs-lookup"><span data-stu-id="c4bad-167">The format of the version number is as follows.</span></span> <span data-ttu-id="c4bad-168">Los componentes opcionales aparecen entre corchetes ('[' y ']'):</span><span class="sxs-lookup"><span data-stu-id="c4bad-168">Optional components are shown in square brackets ('[' and ']'):</span></span>  
  
 <span data-ttu-id="c4bad-169">principal.secundario[.de compilación[.de revisión]]</span><span class="sxs-lookup"><span data-stu-id="c4bad-169">major.minor[.build[.revision]]</span></span>  
  
 <span data-ttu-id="c4bad-170">Todos los componentes definidos deben ser enteros mayores o iguales que 0.</span><span class="sxs-lookup"><span data-stu-id="c4bad-170">All defined components must be integers greater than or equal to 0.</span></span> <span data-ttu-id="c4bad-171">Por ejemplo, si el número principal es 6, el número secundario es 2, el número de compilación es 1 y el número de revisión es 3, a continuación, `version` debería ser "6.2.1.3".</span><span class="sxs-lookup"><span data-stu-id="c4bad-171">For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then `version` should be "6.2.1.3".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4bad-172">
            <paramref name="version" /> tiene menos de dos componentes o más de cuatro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-172">
              <paramref name="version" /> has fewer than two components or more than four components.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4bad-173">El valor de <paramref name="version" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-173">
              <paramref name="version" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4bad-174">Un componente principal, secundario, de compilación o de revisión es menor que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-174">A major, minor, build, or revision component is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="c4bad-175">Al menos un componente de <paramref name="version" /> no se analiza como un entero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-175">At least one component of <paramref name="version" /> does not parse to an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="c4bad-176">Al menos un componente de <paramref name="version" /> representa un número mayor que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-176">At least one component of <paramref name="version" /> represents a number greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (int major, int minor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 major, int32 minor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (major As Integer, minor As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(int major, int minor);" />
      <MemberSignature Language="F#" Value="new Version : int * int -&gt; Version" Usage="new System.Version (major, minor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major">
          <span data-ttu-id="c4bad-177">Número de versión principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-177">The major version number.</span>
          </span>
        </param>
        <param name="minor">
          <span data-ttu-id="c4bad-178">Número de versión secundaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-178">The minor version number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-179">Inicializa una nueva instancia de la clase <see cref="T:System.Version" /> utilizando los valores principal y secundario especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-179">Initializes a new instance of the <see cref="T:System.Version" /> class using the specified major and minor values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-180">Este constructor crea un <xref:System.Version> objeto con los siguientes valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4bad-180">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="c4bad-181">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4bad-181">Property</span></span>|<span data-ttu-id="c4bad-182">Valor</span><span class="sxs-lookup"><span data-stu-id="c4bad-182">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|`major`|  
|<xref:System.Version.Minor%2A>|`minor`|  
|<xref:System.Version.Build%2A>|<span data-ttu-id="c4bad-183">indefinido (-1)</span><span class="sxs-lookup"><span data-stu-id="c4bad-183">undefined (-1)</span></span>|  
|<xref:System.Version.Revision%2A>|<span data-ttu-id="c4bad-184">indefinido (-1)</span><span class="sxs-lookup"><span data-stu-id="c4bad-184">undefined (-1)</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4bad-185">
            <paramref name="major" /> o <paramref name="minor" /> es menor que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-185">
              <paramref name="major" /> or <paramref name="minor" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (int major, int minor, int build);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 major, int32 minor, int32 build) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (major As Integer, minor As Integer, build As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(int major, int minor, int build);" />
      <MemberSignature Language="F#" Value="new Version : int * int * int -&gt; Version" Usage="new System.Version (major, minor, build)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="build" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major">
          <span data-ttu-id="c4bad-186">Número de versión principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-186">The major version number.</span>
          </span>
        </param>
        <param name="minor">
          <span data-ttu-id="c4bad-187">Número de versión secundaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-187">The minor version number.</span>
          </span>
        </param>
        <param name="build">
          <span data-ttu-id="c4bad-188">Número de compilación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-188">The build number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-189">Inicializa una nueva instancia de la clase <see cref="T:System.Version" /> utilizando los valores principal, secundario y de compilación especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-189">Initializes a new instance of the <see cref="T:System.Version" /> class using the specified major, minor, and build values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-190">Este constructor crea un <xref:System.Version> objeto con los siguientes valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4bad-190">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="c4bad-191">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4bad-191">Property</span></span>|<span data-ttu-id="c4bad-192">Valor</span><span class="sxs-lookup"><span data-stu-id="c4bad-192">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|`major`|  
|<xref:System.Version.Minor%2A>|`minor`|  
|<xref:System.Version.Build%2A>|`build`|  
|<xref:System.Version.Revision%2A>|<span data-ttu-id="c4bad-193">indefinido (-1)</span><span class="sxs-lookup"><span data-stu-id="c4bad-193">undefined (-1)</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4bad-194">
            <paramref name="major" />, <paramref name="minor" /> o <paramref name="build" /> es menor que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-194">
              <paramref name="major" />, <paramref name="minor" />, or <paramref name="build" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Version (int major, int minor, int build, int revision);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 major, int32 minor, int32 build, int32 revision) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (major As Integer, minor As Integer, build As Integer, revision As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Version(int major, int minor, int build, int revision);" />
      <MemberSignature Language="F#" Value="new Version : int * int * int * int -&gt; Version" Usage="new System.Version (major, minor, build, revision)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="build" Type="System.Int32" />
        <Parameter Name="revision" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="major">
          <span data-ttu-id="c4bad-195">Número de versión principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-195">The major version number.</span>
          </span>
        </param>
        <param name="minor">
          <span data-ttu-id="c4bad-196">Número de versión secundaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-196">The minor version number.</span>
          </span>
        </param>
        <param name="build">
          <span data-ttu-id="c4bad-197">Número de compilación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-197">The build number.</span>
          </span>
        </param>
        <param name="revision">
          <span data-ttu-id="c4bad-198">Número de revisión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-198">The revision number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-199">Inicializa una nueva instancia de la clase <see cref="T:System.Version" /> con los números principal, secundario, de compilación y revisión especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-199">Initializes a new instance of the <see cref="T:System.Version" /> class with the specified major, minor, build, and revision numbers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-200">Este constructor crea un <xref:System.Version> objeto con los siguientes valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4bad-200">This constructor creates a <xref:System.Version> object with the following property values.</span></span>  
  
|<span data-ttu-id="c4bad-201">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="c4bad-201">Property</span></span>|<span data-ttu-id="c4bad-202">Valor</span><span class="sxs-lookup"><span data-stu-id="c4bad-202">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Version.Major%2A>|`major`|  
|<xref:System.Version.Minor%2A>|`minor`|  
|<xref:System.Version.Build%2A>|`build`|  
|<xref:System.Version.Revision%2A>|`revision`|  
  
   
  
## Examples  
 <span data-ttu-id="c4bad-203">En el ejemplo de código siguiente se muestra el <xref:System.Version.%23ctor%2A> constructor, y <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, y <xref:System.Version.MinorRevision%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="c4bad-203">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4bad-204">
            <paramref name="major" />, <paramref name="minor" />, <paramref name="build" /> o <paramref name="revision" /> es menor que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-204">
              <paramref name="major" />, <paramref name="minor" />, <paramref name="build" />, or <paramref name="revision" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public int Build { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Build" />
      <MemberSignature Language="DocId" Value="P:System.Version.Build" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Build As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Build { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Build : int" Usage="System.Version.Build" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bad-205">Obtiene el valor del componente de compilación del número de versión del objeto <see cref="T:System.Version" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-205">Gets the value of the build component of the version number for the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bad-206">Número de compilación, o -1 si el número de compilación no está definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-206">The build number, or -1 if the build number is undefined.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-207">Por ejemplo, si el número de versión es 6.2.1.3, el número de compilación es 1.</span><span class="sxs-lookup"><span data-stu-id="c4bad-207">For example, if the version number is 6.2.1.3, the build number is 1.</span></span> <span data-ttu-id="c4bad-208">Si el número de versión es 6.2, el número de compilación es indefinido.</span><span class="sxs-lookup"><span data-stu-id="c4bad-208">If the version number is 6.2, the build number is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bad-209">En el ejemplo de código siguiente se muestra el <xref:System.Version.%23ctor%2A> constructor, y <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, y <xref:System.Version.MinorRevision%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="c4bad-209">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="version.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bad-210">Devuelve un nuevo objeto <see cref="T:System.Version" /> cuyo valor es igual al del objeto <see cref="T:System.Version" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-210">Returns a new <see cref="T:System.Version" /> object whose value is the same as the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-211">Nuevo <see cref="T:System.Object" /> cuyos valores son una copia del objeto <see cref="T:System.Version" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-211">A new <see cref="T:System.Object" /> whose values are a copy of the current <see cref="T:System.Version" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-212">Si el tipo del valor devuelto es importante, convierta el <xref:System.Object> instancia devuelto por este método para un <xref:System.Version> objeto.</span><span class="sxs-lookup"><span data-stu-id="c4bad-212">If the type of the return value is important, cast the <xref:System.Object> instance that is returned by this method to a <xref:System.Version> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4bad-213">Compara el objeto <see cref="T:System.Version" /> actual con un objeto especificado o <see cref="T:System.Version" /> y devuelve una indicación de los valores relativos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-213">Compares the current <see cref="T:System.Version" /> object to a specified object or <see cref="T:System.Version" /> and returns an indication of their relative values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (version As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ version);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="version.CompareTo version" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="version">
          <span data-ttu-id="c4bad-214">Objeto que se va a comparar o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-214">An object to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-215">Compara el objeto <see cref="T:System.Version" /> actual con un objeto especificado y devuelve una indicación de los valores relativos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-215">Compares the current <see cref="T:System.Version" /> object to a specified object and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-216">Un entero con signo que indica los valores relativos de los dos objetos, como se muestra en la tabla siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-216">A signed integer that indicates the relative values of the two objects, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="c4bad-217">Valor devuelto</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-217">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c4bad-218">Significado</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-218">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="c4bad-219">Menor que cero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-219">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c4bad-220">El objeto <see cref="T:System.Version" /> actual es una versión anterior a <paramref name="version" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-220">The current <see cref="T:System.Version" /> object is a version before <paramref name="version" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c4bad-221">Cero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-221">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c4bad-222">El objeto <see cref="T:System.Version" /> actual es la misma versión que <paramref name="version" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-222">The current <see cref="T:System.Version" /> object is the same version as <paramref name="version" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c4bad-223">Mayor que cero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-223">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c4bad-224">El objeto <see cref="T:System.Version" /> actual es una versión posterior a <paramref name="version" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-224">The current <see cref="T:System.Version" /> object is a version subsequent to <paramref name="version" />.</span>
                </span>
                <span data-ttu-id="c4bad-225">O bien</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-225">-or-</span>
                </span>
                <span data-ttu-id="c4bad-226">El valor de <paramref name="version" /> es <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-226">
                    <paramref name="version" /> is <see langword="null" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-227">Los componentes de `Version` en orden decreciente de importancia son: principal, secundaria, compilación y revisión.</span><span class="sxs-lookup"><span data-stu-id="c4bad-227">The components of `Version` in decreasing order of importance are: major, minor, build, and revision.</span></span> <span data-ttu-id="c4bad-228">Se supone que un componente desconocido sean más antiguas que cualquier componente conocido.</span><span class="sxs-lookup"><span data-stu-id="c4bad-228">An unknown component is assumed to be older than any known component.</span></span>  
  
 <span data-ttu-id="c4bad-229">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="c4bad-229">For example:</span></span>  
  
-   <span data-ttu-id="c4bad-230">La versión 1.1 es anterior a la versión 1.1.0</span><span class="sxs-lookup"><span data-stu-id="c4bad-230">Version 1.1 is older than version 1.1.0</span></span>  
  
-   <span data-ttu-id="c4bad-231">La versión 1.1 es anterior a la versión 1.1.1</span><span class="sxs-lookup"><span data-stu-id="c4bad-231">Version 1.1 is older than version 1.1.1</span></span>  
  
-   <span data-ttu-id="c4bad-232">Versión 1.1 es anterior a la versión 1.1.2.3</span><span class="sxs-lookup"><span data-stu-id="c4bad-232">Version 1.1 is older than version 1.1.2.3</span></span>  
  
-   <span data-ttu-id="c4bad-233">Versión 1.1.2 es anterior a la versión 1.1.2.4</span><span class="sxs-lookup"><span data-stu-id="c4bad-233">Version 1.1.2 is older than version 1.1.2.4</span></span>  
  
-   <span data-ttu-id="c4bad-234">Versión 1.2.5 es posterior a la versión 1.2.3.4</span><span class="sxs-lookup"><span data-stu-id="c4bad-234">Version 1.2.5 is newer than version 1.2.3.4</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4bad-235">
            <paramref name="version" /> no es del tipo <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-235">
              <paramref name="version" /> is not of type <see cref="T:System.Version" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Version.CompareTo(System.Version)" />
        <altmember cref="Overload:System.Version.Equals" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (Version value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class System.Version value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.CompareTo(System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Version) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(Version ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Version -&gt; int&#xA;override this.CompareTo : Version -&gt; int" Usage="version.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c4bad-236">Objeto <see cref="T:System.Version" /> que se va a comparar con el objeto <see cref="T:System.Version" /> actual, o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-236">A <see cref="T:System.Version" /> object to compare to the current <see cref="T:System.Version" /> object, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-237">Compara el objeto <see cref="T:System.Version" /> actual con un objeto <see cref="T:System.Version" /> especificado y devuelve una indicación de los valores relativos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-237">Compares the current <see cref="T:System.Version" /> object to a specified <see cref="T:System.Version" /> object and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-238">Un entero con signo que indica los valores relativos de los dos objetos, como se muestra en la tabla siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-238">A signed integer that indicates the relative values of the two objects, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="c4bad-239">Valor devuelto</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-239">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c4bad-240">Significado</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-240">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="c4bad-241">Menor que cero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-241">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c4bad-242">El objeto <see cref="T:System.Version" /> actual es una versión anterior a <paramref name="value" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-242">The current <see cref="T:System.Version" /> object is a version before <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c4bad-243">Cero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-243">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c4bad-244">El objeto <see cref="T:System.Version" /> actual es la misma versión que <paramref name="value" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-244">The current <see cref="T:System.Version" /> object is the same version as <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c4bad-245">Mayor que cero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-245">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c4bad-246">El objeto <see cref="T:System.Version" /> actual es una versión posterior a <paramref name="value" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-246">The current <see cref="T:System.Version" /> object is a version subsequent to <paramref name="value" />.</span>
                </span>
                <span data-ttu-id="c4bad-247">O bien</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-247">-or-</span>
                </span>
                <span data-ttu-id="c4bad-248">El valor de <paramref name="value" /> es <see langword="null" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-248">
                    <paramref name="value" /> is <see langword="null" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-249">Este método implementa el <xref:System.IComparable%601?displayProperty=nameWithType> interfaz y realiza un poco mejor que el <xref:System.Version.CompareTo%2A> método porque no tiene que aplicar la conversión unboxing el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="c4bad-249">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface, and performs slightly better than the <xref:System.Version.CompareTo%2A> method because it does not have to unbox the `value` parameter.</span></span>  
  
 <span data-ttu-id="c4bad-250">Los componentes de `Version` en orden decreciente de importancia son: principal, secundaria, compilación y revisión.</span><span class="sxs-lookup"><span data-stu-id="c4bad-250">The components of `Version` in decreasing order of importance are: major, minor, build, and revision.</span></span> <span data-ttu-id="c4bad-251">Se supone que un componente desconocido sean más antiguas que cualquier componente conocido.</span><span class="sxs-lookup"><span data-stu-id="c4bad-251">An unknown component is assumed to be older than any known component.</span></span> <span data-ttu-id="c4bad-252">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="c4bad-252">For example:</span></span>  
  
-   <span data-ttu-id="c4bad-253">Versión 1.1 es anterior a la versión 1.1.0.</span><span class="sxs-lookup"><span data-stu-id="c4bad-253">Version 1.1 is older than version 1.1.0.</span></span>  
  
-   <span data-ttu-id="c4bad-254">La versión 1.1 es anterior a la versión 1.1.1.</span><span class="sxs-lookup"><span data-stu-id="c4bad-254">Version 1.1 is older than version 1.1.1.</span></span>  
  
-   <span data-ttu-id="c4bad-255">Versión 1.1 es anterior a la versión 1.1.2.3.</span><span class="sxs-lookup"><span data-stu-id="c4bad-255">Version 1.1 is older than version 1.1.2.3.</span></span>  
  
-   <span data-ttu-id="c4bad-256">Versión 1.1.2 es anterior a la versión 1.1.2.4.</span><span class="sxs-lookup"><span data-stu-id="c4bad-256">Version 1.1.2 is older than version 1.1.2.4.</span></span>  
  
-   <span data-ttu-id="c4bad-257">Versión 1.2.5 es posterior a la versión 1.2.3.4.</span><span class="sxs-lookup"><span data-stu-id="c4bad-257">Version 1.2.5 is newer than version 1.2.3.4.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bad-258">El ejemplo de código siguiente muestra las versiones genéricas y de la `CompareTo` método para varios tipos de valor y de referencia.</span><span class="sxs-lookup"><span data-stu-id="c4bad-258">The following code example demonstrates generic and nongeneric versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4bad-259">Devuelve un valor que indica si dos objetos <see cref="T:System.Version" /> representan el mismo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-259">Returns a value indicating whether two <see cref="T:System.Version" /> object represent the same value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="version.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="c4bad-260">Objeto que se va a comparar con el objeto <see cref="T:System.Version" /> actual, o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-260">An object to compare with the current <see cref="T:System.Version" /> object, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-261">Devuelve un valor que indica si el objeto <see cref="T:System.Version" /> actual es igual a un objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-261">Returns a value indicating whether the current <see cref="T:System.Version" /> object is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-262">Es <see langword="true" /> si el objeto <see cref="T:System.Version" /> actual y <paramref name="obj" /> son objetos <see cref="T:System.Version" /> y cada componente del objeto <see cref="T:System.Version" /> actual coincide con el componente correspondiente de <paramref name="obj" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-262">
              <see langword="true" /> if the current <see cref="T:System.Version" /> object and <paramref name="obj" /> are both <see cref="T:System.Version" /> objects, and every component of the current <see cref="T:System.Version" /> object matches the corresponding component of <paramref name="obj" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Version obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Version obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Equals(System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Version ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : Version -&gt; bool" Usage="version.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="c4bad-263">Objeto <see cref="T:System.Version" /> que se va a comparar con el objeto <see cref="T:System.Version" /> actual, o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-263">A <see cref="T:System.Version" /> object to compare to the current <see cref="T:System.Version" /> object, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-264">Devuelve un valor que indica si el objeto <see cref="T:System.Version" /> actual y un objeto <see cref="T:System.Version" /> especificado representan el mismo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-264">Returns a value indicating whether the current <see cref="T:System.Version" /> object and a specified <see cref="T:System.Version" /> object represent the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-265">Es <see langword="true" /> si cada componente del objeto <see cref="T:System.Version" /> actual coincide con el componente correspondiente del parámetro <paramref name="obj" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-265">
              <see langword="true" /> if every component of the current <see cref="T:System.Version" /> object matches the corresponding component of the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-266">Este método implementa el <xref:System.IEquatable%601> interfaz y realiza un poco mejor que el <xref:System.Version.Equals%2A> método porque no tiene que aplicar la conversión unboxing el `obj` parámetro.</span><span class="sxs-lookup"><span data-stu-id="c4bad-266">This method implements the <xref:System.IEquatable%601> interface, and performs slightly better than the <xref:System.Version.Equals%2A> method because it does not have to unbox the `obj` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="Overload:System.Version.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="version.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bad-267">Devuelve un código hash para el objeto <see cref="T:System.Version" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-267">Returns a hash code for the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-268">Código hash de un entero de 32 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-268">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bad-269">En el ejemplo de código siguiente se muestra el <xref:System.Version.%23ctor%2A> constructor, y <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, y <xref:System.Version.MinorRevision%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="c4bad-269">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Major">
      <MemberSignature Language="C#" Value="public int Major { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Major" />
      <MemberSignature Language="DocId" Value="P:System.Version.Major" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Major As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Major { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Major : int" Usage="System.Version.Major" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bad-270">Obtiene el valor del componente principal del número de versión del objeto <see cref="T:System.Version" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-270">Gets the value of the major component of the version number for the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bad-271">Número de versión principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-271">The major version number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-272">Por ejemplo, si el número de versión es 6.2, la versión principal es 6.</span><span class="sxs-lookup"><span data-stu-id="c4bad-272">For example, if the version number is 6.2, the major version is 6.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorRevision">
      <MemberSignature Language="C#" Value="public short MajorRevision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 MajorRevision" />
      <MemberSignature Language="DocId" Value="P:System.Version.MajorRevision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MajorRevision As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short MajorRevision { short get(); };" />
      <MemberSignature Language="F#" Value="member this.MajorRevision : int16" Usage="System.Version.MajorRevision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bad-273">Obtiene los 16 bits superiores del número de revisión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-273">Gets the high 16 bits of the revision number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bad-274">Entero de 16 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-274">A 16-bit signed integer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-275">Suponga que lanza una versión intermedia de la aplicación para corregir temporalmente un problema hasta que pueda lanzar una solución permanente.</span><span class="sxs-lookup"><span data-stu-id="c4bad-275">Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</span></span> <span data-ttu-id="c4bad-276">La versión temporal no garantiza un número de revisión nueva, pero es necesario que se identifica como una versión diferente.</span><span class="sxs-lookup"><span data-stu-id="c4bad-276">The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</span></span> <span data-ttu-id="c4bad-277">En este caso, codificar la información de identificación de las partes de 16 bits altos y bajos del número de revisión de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="c4bad-277">In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</span></span> <span data-ttu-id="c4bad-278">Usar el <xref:System.Version.Revision%2A> propiedad que se va a obtener el uso de números, revisión toda la <xref:System.Version.MajorRevision%2A> propiedad para obtener los 16 bits superiores y utilice el <xref:System.Version.MinorRevision%2A> propiedad para obtener los 16 bits inferiores.</span><span class="sxs-lookup"><span data-stu-id="c4bad-278">Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.</span></span>  
  
 <span data-ttu-id="c4bad-279">A partir de .NET Framework versión 2.0, la configuración de Windows NT usos del sistema de operativo el <xref:System.Version.MajorRevision%2A> propiedad para codificar el número de service pack.</span><span class="sxs-lookup"><span data-stu-id="c4bad-279">Starting in the .NET Framework version 2.0, the Windows NT operating system uses the <xref:System.Version.MajorRevision%2A> property to encode the service pack number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bad-280">En el ejemplo de código siguiente se muestra el <xref:System.Version.%23ctor%2A> constructor y el <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, y <xref:System.Version.MinorRevision%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="c4bad-280">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and the <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Version.MinorRevision" />
      </Docs>
    </Member>
    <Member MemberName="Minor">
      <MemberSignature Language="C#" Value="public int Minor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minor" />
      <MemberSignature Language="DocId" Value="P:System.Version.Minor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minor { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minor : int" Usage="System.Version.Minor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bad-281">Obtiene el valor del componente secundario del número de versión del objeto <see cref="T:System.Version" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-281">Gets the value of the minor component of the version number for the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bad-282">Número de versión secundaria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-282">The minor version number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-283">Por ejemplo, si el número de versión es 6.2, la versión secundaria es 2.</span><span class="sxs-lookup"><span data-stu-id="c4bad-283">For example, if the version number is 6.2, the minor version is 2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bad-284">En el ejemplo de código siguiente se muestra el <xref:System.Version.%23ctor%2A> constructor, y <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, y <xref:System.Version.MinorRevision%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="c4bad-284">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorRevision">
      <MemberSignature Language="C#" Value="public short MinorRevision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 MinorRevision" />
      <MemberSignature Language="DocId" Value="P:System.Version.MinorRevision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorRevision As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short MinorRevision { short get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorRevision : int16" Usage="System.Version.MinorRevision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bad-285">Obtiene los 16 bits inferiores del número de revisión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-285">Gets the low 16 bits of the revision number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bad-286">Entero de 16 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-286">A 16-bit signed integer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-287">Suponga que lanza una versión intermedia de la aplicación para corregir temporalmente un problema hasta que pueda lanzar una solución permanente.</span><span class="sxs-lookup"><span data-stu-id="c4bad-287">Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</span></span> <span data-ttu-id="c4bad-288">La versión temporal no garantiza un número de revisión nueva, pero es necesario que se identifica como una versión diferente.</span><span class="sxs-lookup"><span data-stu-id="c4bad-288">The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</span></span> <span data-ttu-id="c4bad-289">En este caso, codificar la información de identificación de las partes de 16 bits altos y bajos del número de revisión de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="c4bad-289">In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</span></span> <span data-ttu-id="c4bad-290">Usar el <xref:System.Version.Revision%2A> propiedad que se va a obtener el uso de números, revisión toda la <xref:System.Version.MajorRevision%2A> propiedad para obtener los 16 bits superiores y utilice el <xref:System.Version.MinorRevision%2A> propiedad para obtener los 16 bits inferiores.</span><span class="sxs-lookup"><span data-stu-id="c4bad-290">Use the <xref:System.Version.Revision%2A> property to obtain the entire revision number, use the <xref:System.Version.MajorRevision%2A> property to obtain the high 16 bits, and use the <xref:System.Version.MinorRevision%2A> property to obtain the low 16 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bad-291">En el ejemplo de código siguiente se muestra el <xref:System.Version.%23ctor%2A> constructor y el <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, y <xref:System.Version.MinorRevision%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="c4bad-291">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and the <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Version.MajorRevision" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_Equality(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : Version * Version -&gt; bool" Usage="v1 = v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="c4bad-292">El primer objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-292">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="c4bad-293">Segundo objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-293">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-294">Determina si dos objetos <see cref="T:System.Version" /> especificados son iguales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-294">Determines whether two specified <see cref="T:System.Version" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-295">Es <see langword="true" /> si <paramref name="v1" /> es igual a <paramref name="v2" />; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-295">
              <see langword="true" /> if <paramref name="v1" /> equals <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="c4bad-296">Es el método equivalente para este operador <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c4bad-296">The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_GreaterThan(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Version * Version -&gt; bool" Usage="v1 &gt; v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="c4bad-297">El primer objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-297">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="c4bad-298">Segundo objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-298">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-299">Determina si el primer objeto <see cref="T:System.Version" /> especificado es mayor que el segundo objeto <see cref="T:System.Version" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-299">Determines whether the first specified <see cref="T:System.Version" /> object is greater than the second specified <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-300">Es <see langword="true" /> si <paramref name="v1" /> es mayor que <paramref name="v2" />; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-300">
              <see langword="true" /> if <paramref name="v1" /> is greater than <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="c4bad-301">Es el método equivalente para este operador <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c4bad-301">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Version * Version -&gt; bool" Usage="v1 &gt;= v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="c4bad-302">El primer objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-302">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="c4bad-303">Segundo objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-303">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-304">Determina si el primer objeto <see cref="T:System.Version" /> especificado es mayor o igual que el segundo objeto <see cref="T:System.Version" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-304">Determines whether the first specified <see cref="T:System.Version" /> object is greater than or equal to the second specified <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-305">Es <see langword="true" /> si <paramref name="v1" /> es mayor o igual que <paramref name="v2" />; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-305">
              <see langword="true" /> if <paramref name="v1" /> is greater than or equal to <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="c4bad-306">Es el método equivalente para este operador <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c4bad-306">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_Inequality(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Version * Version -&gt; bool" Usage="System.Version.op_Inequality (v1, v2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="c4bad-307">El primer objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-307">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="c4bad-308">Segundo objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-308">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-309">Determina si dos objetos <see cref="T:System.Version" /> especificados no son iguales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-309">Determines whether two specified <see cref="T:System.Version" /> objects are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-310">Es <see langword="true" /> si <paramref name="v1" /> no es igual a <paramref name="v2" />; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-310">
              <see langword="true" /> if <paramref name="v1" /> does not equal <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="c4bad-311">Es el método equivalente para este operador <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c4bad-311">The equivalent method for this operator is <xref:System.Version.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_LessThan(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Version * Version -&gt; bool" Usage="v1 &lt; v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="c4bad-312">El primer objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-312">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="c4bad-313">Segundo objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-313">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-314">Determina si el primer objeto <see cref="T:System.Version" /> especificado es menor que el segundo objeto <see cref="T:System.Version" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-314">Determines whether the first specified <see cref="T:System.Version" /> object is less than the second specified <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-315">Es <see langword="true" /> si <paramref name="v1" /> es menor que <paramref name="v2" />; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-315">
              <see langword="true" /> if <paramref name="v1" /> is less than <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="c4bad-316">Es el método equivalente para este operador <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c4bad-316">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4bad-317">El valor de <paramref name="v1" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-317">
              <paramref name="v1" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Version v1, Version v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(class System.Version v1, class System.Version v2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (v1 As Version, v2 As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Version ^ v1, Version ^ v2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Version * Version -&gt; bool" Usage="v1 &lt;= v2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Version" />
        <Parameter Name="v2" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="v1">
          <span data-ttu-id="c4bad-318">El primer objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-318">The first <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <param name="v2">
          <span data-ttu-id="c4bad-319">Segundo objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-319">The second <see cref="T:System.Version" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-320">Determina si el primer objeto <see cref="T:System.Version" /> especificado es menor o igual que el segundo objeto <see cref="T:System.Version" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-320">Determines whether the first specified <see cref="T:System.Version" /> object is less than or equal to the second <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-321">Es <see langword="true" /> si <paramref name="v1" /> es menor o igual que <paramref name="v2" />; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-321">
              <see langword="true" /> if <paramref name="v1" /> is less than or equal to <paramref name="v2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="c4bad-322">Es el método equivalente para este operador <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c4bad-322">The equivalent method for this operator is <xref:System.Version.CompareTo%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4bad-323">El valor de <paramref name="v1" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-323">
              <paramref name="v1" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Version.Equals(System.Object)" />
        <altmember cref="M:System.Version.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Version Parse (ReadOnlySpan&lt;char&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Version Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As ReadOnlySpan(Of Char)) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Version ^ Parse(ReadOnlySpan&lt;char&gt; input);" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; -&gt; Version" Usage="System.Version.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Version Parse (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Version Parse(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Version ^ Parse(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; Version" Usage="System.Version.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c4bad-324">Cadena que contiene un número de versión que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-324">A string that contains a version number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-325">Convierte la representación de cadena de un número de versión en un objeto <see cref="T:System.Version" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-325">Converts the string representation of a version number to an equivalent <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-326">Objeto equivalente al número de versión especificado en el parámetro <paramref name="input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-326">An object that is equivalent to the version number specified in the <paramref name="input" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-327">El `input` parámetro debe tener el formato siguiente:</span><span class="sxs-lookup"><span data-stu-id="c4bad-327">The `input` parameter must have the following format:</span></span>  
  
```  
  
major.minor[.build[.revision]]  
```  
  
 <span data-ttu-id="c4bad-328">donde *principales*, *menores*, *compilar*, y *revisión* son las representaciones de cadena de la versión de cuatro componentes del número: principal número de versión, número de versión secundaria, número de compilación y número de revisión.</span><span class="sxs-lookup"><span data-stu-id="c4bad-328">where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</span></span> <span data-ttu-id="c4bad-329">Los componentes opcionales aparecen entre corchetes ([y]).</span><span class="sxs-lookup"><span data-stu-id="c4bad-329">Optional components are shown in square brackets ([ and ]).</span></span> <span data-ttu-id="c4bad-330">Los componentes deben aparecer en el orden especificado y deben estar separados por puntos.</span><span class="sxs-lookup"><span data-stu-id="c4bad-330">The components must appear in the specified order, and must be separated by periods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c4bad-331">Dado que la representación de cadena de un número de versión debe cumplir un modelo reconocido, las aplicaciones siempre deben usar control de excepciones al llamar a la <xref:System.Version.Parse%2A> método para analizar la entrada del usuario.</span><span class="sxs-lookup"><span data-stu-id="c4bad-331">Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <xref:System.Version.Parse%2A> method to parse user input.</span></span> <span data-ttu-id="c4bad-332">Como alternativa, puede llamar a la <xref:System.Version.TryParse%2A> método para analizar la representación de cadena de un número de versión y devolver un valor que indica si la operación de análisis se realizó correctamente.</span><span class="sxs-lookup"><span data-stu-id="c4bad-332">Alternatively, you can call the <xref:System.Version.TryParse%2A> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded.</span></span>  
  
 <span data-ttu-id="c4bad-333">El <xref:System.Version.Parse%2A> es un método de conveniencia; es equivalente a llamar a la <xref:System.Version.%23ctor%28System.String%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="c4bad-333">The <xref:System.Version.Parse%2A> method is a convenience method; it is equivalent to calling the <xref:System.Version.%23ctor%28System.String%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bad-334">En el ejemplo siguiente se usa el <xref:System.Version.Parse%2A> método para analizar un número de cadenas que contienen información de versión.</span><span class="sxs-lookup"><span data-stu-id="c4bad-334">The following example uses the <xref:System.Version.Parse%2A> method to parse a number of strings that contain version information.</span></span>  
  
 [!code-csharp[System.Version.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.parse/cs/parse1.cs#1)]
 [!code-vb[System.Version.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4bad-335">El valor de <paramref name="input" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-335">
              <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4bad-336">
            <paramref name="input" /> tiene menos de dos componentes de versión o más de cuatro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-336">
              <paramref name="input" /> has fewer than two or more than four version components.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4bad-337">Al menos un componente de <paramref name="input" /> es menor que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-337">At least one component in <paramref name="input" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="c4bad-338">Al menos un componente de <paramref name="input" /> no es un entero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-338">At least one component in <paramref name="input" /> is not an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="c4bad-339">Al menos un componente de <paramref name="input" /> representa un número mayor que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-339">At least one component in <paramref name="input" /> represents a number that is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Version.ToString" />
        <altmember cref="M:System.Version.TryParse(System.String,System.Version@)" />
      </Docs>
    </Member>
    <Member MemberName="Revision">
      <MemberSignature Language="C#" Value="public int Revision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Revision" />
      <MemberSignature Language="DocId" Value="P:System.Version.Revision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Revision As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Revision { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Revision : int" Usage="System.Version.Revision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4bad-340">Obtiene el valor del componente de revisión del número de versión del objeto <see cref="T:System.Version" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-340">Gets the value of the revision component of the version number for the current <see cref="T:System.Version" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4bad-341">Número de revisión, o -1 si el número de revisión no está definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-341">The revision number, or -1 if the revision number is undefined.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-342">Por ejemplo, si el número de versión es 6.2.1.3, el número de revisión es 3.</span><span class="sxs-lookup"><span data-stu-id="c4bad-342">For example, if the version number is 6.2.1.3, the revision number is 3.</span></span> <span data-ttu-id="c4bad-343">Si el número de versión es 6.2, el número de revisión es indefinido.</span><span class="sxs-lookup"><span data-stu-id="c4bad-343">If the version number is 6.2, the revision number is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bad-344">En el ejemplo de código siguiente se muestra el <xref:System.Version.%23ctor%2A> constructor, y <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, y <xref:System.Version.MinorRevision%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="c4bad-344">The following code example demonstrates the <xref:System.Version.%23ctor%2A> constructor, and <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, <xref:System.Version.Revision%2A>, <xref:System.Version.MajorRevision%2A>, and <xref:System.Version.MinorRevision%2A> properties.</span></span>  
  
 [!code-cpp[system.version.revision#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.version.revision/cpp/rev.cpp#1)]
 [!code-csharp[system.version.revision#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.revision/cs/rev.cs#1)]
 [!code-vb[system.version.revision#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.revision/vb/rev.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object version);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (version As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ version) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4bad-345">Convierte el valor del objeto <see cref="T:System.Version" /> actual en su representación <see cref="T:System.String" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-345">Converts the value of the current <see cref="T:System.Version" /> object to its equivalent <see cref="T:System.String" /> representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="version.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4bad-346">Convierte el valor del objeto <see cref="T:System.Version" /> actual en su representación <see cref="T:System.String" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-346">Converts the value of the current <see cref="T:System.Version" /> object to its equivalent <see cref="T:System.String" /> representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-347">Representación <see cref="T:System.String" /> de los valores de los componentes principal, secundario, de compilación y de revisión del objeto <see cref="T:System.Version" /> actual, con el siguiente formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-347">The <see cref="T:System.String" /> representation of the values of the major, minor, build, and revision components of the current <see cref="T:System.Version" /> object, as depicted in the following format.</span>
          </span>
          <span data-ttu-id="c4bad-348">Cada componente está separado por un punto ('.').</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-348">Each component is separated by a period character ('.').</span>
          </span>
          <span data-ttu-id="c4bad-349">Los corchetes ('[' y ']') hacen referencia a un componente que no aparecerá en el valor devuelto si el componente no está definido:</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-349">Square brackets ('[' and ']') indicate a component that will not appear in the return value if the component is not defined:</span>
          </span>
          <span data-ttu-id="c4bad-350">principal.secundario[.de compilación[.de revisión]]</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-350">major.minor[.build[.revision]]</span>
          </span>
          <span data-ttu-id="c4bad-351">Por ejemplo, si se crea un objeto <see cref="T:System.Version" /> usando el constructor <c>Version(1,1)</c>, la cadena devuelta será "1,1".</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-351">For example, if you create a <see cref="T:System.Version" /> object using the constructor <c>Version(1,1)</c>, the returned string is "1.1".</span>
          </span>
          <span data-ttu-id="c4bad-352">Si se crea un objeto <see cref="T:System.Version" /> usando el constructor <c>Version(1,3,4,2)</c>, la cadena devuelta será "1.3.4.2".</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-352">If you create a <see cref="T:System.Version" /> object using the constructor <c>Version(1,3,4,2)</c>, the returned string is "1.3.4.2".</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int fieldCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 fieldCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.ToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (fieldCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int fieldCount);" />
      <MemberSignature Language="F#" Value="override this.ToString : int -&gt; string" Usage="version.ToString fieldCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fieldCount">
          <span data-ttu-id="c4bad-353">Número de componentes que se van a devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-353">The number of components to return.</span>
          </span>
          <span data-ttu-id="c4bad-354">El <paramref name="fieldCount" /> está entre 0 y 4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-354">The <paramref name="fieldCount" /> ranges from 0 to 4.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-355">Convierte el valor del objeto <see cref="T:System.Version" /> actual en su representación <see cref="T:System.String" /> equivalente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-355">Converts the value of the current <see cref="T:System.Version" /> object to its equivalent <see cref="T:System.String" /> representation.</span>
          </span>
          <span data-ttu-id="c4bad-356">Un recuento especificado indica el número de componente que se va a devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-356">A specified count indicates the number of components to return.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-357">Representación <see cref="T:System.String" /> de los valores de los componentes principal, secundario, de compilación y de revisión del objeto <see cref="T:System.Version" /> actual, cada uno separado por un punto ('.').</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-357">The <see cref="T:System.String" /> representation of the values of the major, minor, build, and revision components of the current <see cref="T:System.Version" /> object, each separated by a period character ('.').</span>
          </span>
          <span data-ttu-id="c4bad-358">El parámetro <paramref name="fieldCount" /> determina cuántos componentes se devuelven.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-358">The <paramref name="fieldCount" /> parameter determines how many components are returned.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="c4bad-359">fieldCount</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-359">fieldCount</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c4bad-360">Valor devuelto</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-360">Return Value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="c4bad-361">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-361">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c4bad-362">Cadena vacía ("").</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-362">An empty string ("").</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c4bad-363">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-363">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c4bad-364">principal</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-364">major</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c4bad-365">2</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-365">2</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c4bad-366">principal.secundario</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-366">major.minor</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c4bad-367">3</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-367">3</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c4bad-368">principal.secundario.de compilación</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-368">major.minor.build</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="c4bad-369">4</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-369">4</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="c4bad-370">principal.secundario.de compilación.de revisión</span>
                <span class="sxs-lookup">
                  <span data-stu-id="c4bad-370">major.minor.build.revision</span>
                </span>
              </description>
            </item>
          </list>
          <span data-ttu-id="c4bad-371">Por ejemplo, si se crea el objeto <see cref="T:System.Version" /> usando el constructor <c>Version(1,3,5)</c>, <c>ToString(2)</c> devuelve "1.3" y <c>ToString(4)</c> genera una excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-371">For example, if you create <see cref="T:System.Version" /> object using the constructor <c>Version(1,3,5)</c>, <c>ToString(2)</c> returns "1.3" and <c>ToString(4)</c> throws an exception.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4bad-372">
            <paramref name="fieldCount" /> es menor que 0 o mayor que 4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-372">
              <paramref name="fieldCount" /> is less than 0, or more than 4.</span>
          </span>
          <span data-ttu-id="c4bad-373">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-373">-or-</span>
          </span>
          <span data-ttu-id="c4bad-374">
            <paramref name="fieldCount" /> es superior al número de componentes definidos en el objeto <see cref="T:System.Version" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-374">
              <paramref name="fieldCount" /> is more than the number of components defined in the current <see cref="T:System.Version" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryFormat(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  -&gt; bool" Usage="version.TryFormat (destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, int fieldCount, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, int32 fieldCount, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryFormat(System.Span{System.Char},System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), fieldCount As Integer, ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, int fieldCount, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int *  -&gt; bool" Usage="version.TryFormat (destination, fieldCount, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="fieldCount" Type="System.Int32" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="fieldCount">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, out Version result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, [out] class System.Version&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryParse(System.ReadOnlySpan{System.Char},System.Version@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), ByRef result As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, [Runtime::InteropServices::Out] Version ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.Version.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Version" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out Version result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] class System.Version&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Version.TryParse(System.String,System.Version@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] Version ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.Version.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="result" Type="System.Version" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="c4bad-375">Cadena que contiene un número de versión que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-375">A string that contains a version number to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="c4bad-376">Cuando este método devuelve un valor, contiene el equivalente de <see cref="T:System.Version" /> al número contenido en <paramref name="input" /> si la conversión se realizó correctamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-376">When this method returns, contains the <see cref="T:System.Version" /> equivalent of the number that is contained in <paramref name="input" />, if the conversion succeeded.</span>
          </span>
          <span data-ttu-id="c4bad-377">Si <paramref name="input" /> es <see langword="null" /> o <see cref="F:System.String.Empty" />, o bien o si se produce un error en la conversión, <paramref name="result" /> es <see langword="null" /> cuando el método devuelve un valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-377">If <paramref name="input" /> is <see langword="null" />, <see cref="F:System.String.Empty" />, or if the conversion fails, <paramref name="result" /> is <see langword="null" /> when the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4bad-378">Intenta convertir la representación de cadena de un número de versión en un objeto <see cref="T:System.Version" /> equivalente y devuelve un valor que indica si la conversión se realizó correctamente o no.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-378">Tries to convert the string representation of a version number to an equivalent <see cref="T:System.Version" /> object, and returns a value that indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4bad-379">
            <see langword="true" /> si el parámetro <paramref name="input" /> se convierte correctamente; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4bad-379">
              <see langword="true" /> if the <paramref name="input" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bad-380">El <xref:System.Version.TryParse%2A> método es similar a la <xref:System.Version.Parse%2A> método, salvo que TI no produce una excepción si se produce un error en la conversión.</span><span class="sxs-lookup"><span data-stu-id="c4bad-380">The <xref:System.Version.TryParse%2A> method is similar to the <xref:System.Version.Parse%2A> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="c4bad-381">En su lugar, devuelve `false` si `input` es null, tiene menos de dos o más de cuatro componentes, tiene al menos un componente que no es un entero, tiene al menos un componente que es menor que cero o tiene al menos un componente que es mayor que <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c4bad-381">Instead, it returns `false` if `input` is null, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c4bad-382">Para la operación de análisis se realice correctamente, el `input` parámetro debe tener el formato siguiente:</span><span class="sxs-lookup"><span data-stu-id="c4bad-382">For the parse operation to succeed, the `input` parameter must be in the following format:</span></span>  
  
```  
  
major.minor[.build[.revision]]  
```  
  
 <span data-ttu-id="c4bad-383">donde *principales*, *menores*, *compilar*, y *revisión* son las representaciones de cadena de la versión de cuatro componentes del número: principal número de versión, número de versión secundaria, número de compilación y número de revisión.</span><span class="sxs-lookup"><span data-stu-id="c4bad-383">where *major*, *minor*, *build*, and *revision* are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</span></span> <span data-ttu-id="c4bad-384">Los componentes opcionales aparecen entre corchetes ([y]).</span><span class="sxs-lookup"><span data-stu-id="c4bad-384">Optional components are shown in square brackets ([ and ]).</span></span> <span data-ttu-id="c4bad-385">Los componentes deben aparecer en orden y deben estar separados por puntos.</span><span class="sxs-lookup"><span data-stu-id="c4bad-385">The components must appear in order, and must be separated by periods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bad-386">En el ejemplo siguiente se usa el <xref:System.Version.TryParse%2A> método para analizar un número de cadenas que contienen información de versión.</span><span class="sxs-lookup"><span data-stu-id="c4bad-386">The following example uses the <xref:System.Version.TryParse%2A> method to parse a number of strings that contain version information.</span></span>  
  
 [!code-csharp[System.Version.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.Version.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Version.Parse(System.String)" />
        <altmember cref="Overload:System.Version.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>
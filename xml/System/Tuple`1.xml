<Type Name="Tuple&lt;T1&gt;" FullName="System.Tuple&lt;T1&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8fe4759b10c60a8e80d2a06911d15690c1a3daa6" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52364919" /></Metadata><TypeSignature Language="C#" Value="public class Tuple&lt;T1&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`1&lt;T1&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="89843-101">Tipo del único componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="89843-101">The type of the tuple's only component.</span></span></typeparam>
    <summary><span data-ttu-id="89843-102">Representa una tupla de 1 o singleton.</span><span class="sxs-lookup"><span data-stu-id="89843-102">Represents a 1-tuple, or singleton.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89843-103">Una tupla es una estructura de datos que tiene un número específico y la secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="89843-103">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="89843-104">La <xref:System.Tuple%601> clase representa una tupla de 1 o singleton, que es una tupla que tiene un único componente.</span><span class="sxs-lookup"><span data-stu-id="89843-104">The <xref:System.Tuple%601> class represents a 1-tuple, or singleton, which is a tuple that has a single component.</span></span> <span data-ttu-id="89843-105">Un singleton se utiliza comparativamente poco en desarrollo de aplicaciones.</span><span class="sxs-lookup"><span data-stu-id="89843-105">A singleton is used comparatively rarely in application development.</span></span>  
  
 <span data-ttu-id="89843-106">Puede crear instancias de un <xref:System.Tuple%601> objeto llamando el <xref:System.Tuple%601.%23ctor%2A> constructor o estático <xref:System.Tuple.Create%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="89843-106">You can instantiate a <xref:System.Tuple%601> object by calling either the <xref:System.Tuple%601.%23ctor%2A> constructor or the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="89843-107">Puede recuperar el valor del único componente de la tupla mediante el uso de solo lectura <xref:System.Tuple%601.Item1%2A> propiedad de instancia.</span><span class="sxs-lookup"><span data-stu-id="89843-107">You can retrieve the value of the tuple's single component by using the read-only <xref:System.Tuple%601.Item1%2A> instance property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1&gt; : 'T1 -&gt; Tuple&lt;'T1&gt;" Usage="new System.Tuple&lt;'T1&gt; item1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="89843-108">Valor del único componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="89843-108">The value of the tuple's only component.</span></span></param>
        <summary><span data-ttu-id="89843-109">Inicializa una nueva instancia de la clase <see cref="T:System.Tuple`1" />.</span><span class="sxs-lookup"><span data-stu-id="89843-109">Initializes a new instance of the <see cref="T:System.Tuple`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89843-110">También puede usar estático <xref:System.Tuple.Create%2A?displayProperty=nameWithType> método para crear instancias de un objeto de tupla de 1 sin tener que especificar explícitamente el tipo de su componente.</span><span class="sxs-lookup"><span data-stu-id="89843-110">You can also use the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate a 1-tuple object without having to explicitly specify the type of its component.</span></span> <span data-ttu-id="89843-111">En el ejemplo siguiente se usa el <xref:System.Tuple.Create%2A> método para crear instancias de una tupla de 1 cuyo componente es de tipo <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="89843-111">The following example uses the <xref:System.Tuple.Create%2A> method to instantiate a 1-tuple whose component is of type <xref:System.Int32>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#1)]
 [!code-vb[System.Tuple.Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#1)]  
  
 <span data-ttu-id="89843-112">Esto es equivalente a la siguiente llamada a la <xref:System.Tuple%601.%23ctor%2A> constructor de clase.</span><span class="sxs-lookup"><span data-stu-id="89843-112">This is equivalent to the following call to the <xref:System.Tuple%601.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#2)]
 [!code-vb[System.Tuple.Create#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="89843-113">Objeto que se va a comparar con esta instancia.</span><span class="sxs-lookup"><span data-stu-id="89843-113">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="89843-114">Devuelve un valor que indica si el objeto <see cref="T:System.Tuple`1" /> actual es igual que el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="89843-114">Returns a value that indicates whether the current <see cref="T:System.Tuple`1" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="89843-115"><see langword="true" /> si la instancia actual es igual que el objeto especificado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89843-115"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89843-116">El `obj` parámetro se considera igual a la instancia actual en las siguientes condiciones:</span><span class="sxs-lookup"><span data-stu-id="89843-116">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="89843-117">Es un <xref:System.Tuple%601> objeto.</span><span class="sxs-lookup"><span data-stu-id="89843-117">It is a <xref:System.Tuple%601> object.</span></span>  
  
-   <span data-ttu-id="89843-118">Su componente único es del mismo tipo que la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="89843-118">Its single component is of the same type as the current instance.</span></span>  
  
-   <span data-ttu-id="89843-119">Su componente único es igual que el de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="89843-119">Its single component is equal to that of the current instance.</span></span> <span data-ttu-id="89843-120">La igualdad viene determinada por el comparador de igualdad de objetos predeterminado para cada componente.</span><span class="sxs-lookup"><span data-stu-id="89843-120">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89843-121">El ejemplo siguiente se llama el <xref:System.Tuple%601.Equals%28System.Object%29?displayProperty=nameWithType> método para comparar un <xref:System.Tuple%601> objeto cuyo componente es un <xref:System.Double> valor con tres <xref:System.Tuple%601> objetos cuyos componentes tienen las siguientes características:</span><span class="sxs-lookup"><span data-stu-id="89843-121">The following example calls the <xref:System.Tuple%601.Equals%28System.Object%29?displayProperty=nameWithType> method to compare a <xref:System.Tuple%601> object whose component is a <xref:System.Double> value with three <xref:System.Tuple%601> objects whose components have the following characteristics:</span></span>  
  
-   <span data-ttu-id="89843-122">Mismo tipo (<xref:System.Double>) y el mismo valor.</span><span class="sxs-lookup"><span data-stu-id="89843-122">Same type (<xref:System.Double>) and same value.</span></span>  
  
-   <span data-ttu-id="89843-123">Mismo tipo (<xref:System.Double>), pero otro valor.</span><span class="sxs-lookup"><span data-stu-id="89843-123">Same type (<xref:System.Double>), but different value.</span></span>  
  
-   <span data-ttu-id="89843-124">Un tipo diferente (<xref:System.Single>), pero mismo valor.</span><span class="sxs-lookup"><span data-stu-id="89843-124">Different type (<xref:System.Single>), but same value.</span></span>  
  
 [!code-csharp[System.Tuple\`1.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`1.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="89843-125">Devuelve el código hash del objeto <see cref="T:System.Tuple`1" /> actual.</span><span class="sxs-lookup"><span data-stu-id="89843-125">Returns the hash code for the current <see cref="T:System.Tuple`1" /> object.</span></span></summary>
        <returns><span data-ttu-id="89843-126">Código hash de un entero de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="89843-126">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`1.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89843-127">Obtiene el valor del único componente del objeto <see cref="T:System.Tuple`1" />.</span><span class="sxs-lookup"><span data-stu-id="89843-127">Gets the value of the <see cref="T:System.Tuple`1" /> object's single component.</span></span></summary>
        <value><span data-ttu-id="89843-128">Valor del único componente del objeto <see cref="T:System.Tuple`1" /> actual.</span><span class="sxs-lookup"><span data-stu-id="89843-128">The value of the current <see cref="T:System.Tuple`1" /> object's single component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89843-129">Puede determinar el tipo de la <xref:System.Tuple%601.Item1%2A> componente en uno de dos maneras:</span><span class="sxs-lookup"><span data-stu-id="89843-129">You can determine the type of the <xref:System.Tuple%601.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="89843-130">Mediante una llamada a la `GetType` método en el valor devuelto por la <xref:System.Tuple%601.Item1%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="89843-130">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%601.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="89843-131">Recuperando el <xref:System.Type> objeto que representa el <xref:System.Tuple%601> objeto y recuperar el primer elemento de la matriz devuelta por su <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="89843-131">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%601> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="89843-132">En el ejemplo se muestra ambos enfoques.</span><span class="sxs-lookup"><span data-stu-id="89843-132">The example illustrates both approaches.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89843-133">El ejemplo siguiente muestra información sobre dos singletons y sus componentes.</span><span class="sxs-lookup"><span data-stu-id="89843-133">The following example displays information about two singletons and their components.</span></span>  
  
 [!code-csharp[System.Tuple\`1.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`1.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="89843-134">Objeto que se va a comparar con la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="89843-134">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="89843-135">Un objeto que proporciona reglas personalizadas para la comparación.</span><span class="sxs-lookup"><span data-stu-id="89843-135">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="89843-136">Compara el objeto <see cref="T:System.Tuple`1" /> actual con un objeto especificado utilizando un comparador especificado y devuelve un entero que indica si el objeto actual precede o sigue al objeto especificado, o si se encuentra en la misma posición que dicho objeto en el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="89843-136">Compares the current <see cref="T:System.Tuple`1" /> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="89843-137">Entero con signo que indica la posición relativa de esta instancia y <paramref name="other" /> en el criterio de ordenación, tal como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="89843-137">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="89843-138">Valor</span><span class="sxs-lookup"><span data-stu-id="89843-138">Value</span></span> 
 </term><description> <span data-ttu-id="89843-139">Descripción</span><span class="sxs-lookup"><span data-stu-id="89843-139">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="89843-140">Un entero negativo</span><span class="sxs-lookup"><span data-stu-id="89843-140">A negative integer</span></span> 
 </term><description> <span data-ttu-id="89843-141">Esta instancia precede a <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="89843-141">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="89843-142">Cero</span><span class="sxs-lookup"><span data-stu-id="89843-142">Zero</span></span> 
 </term><description> <span data-ttu-id="89843-143">En el criterio de ordenación, esta instancia y <paramref name="other" /> tienen la misma posición.</span><span class="sxs-lookup"><span data-stu-id="89843-143">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="89843-144">Un entero positivo.</span><span class="sxs-lookup"><span data-stu-id="89843-144">A positive integer</span></span> 
 </term><description> <span data-ttu-id="89843-145">Esta instancia es posterior a <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="89843-145">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89843-146">Aunque puede llamar directamente a este método, normalmente se denomina por colección de ordenación de los métodos que incluyen <xref:System.Collections.IComparer> parámetros para ordenar los miembros de una colección.</span><span class="sxs-lookup"><span data-stu-id="89843-146">Although this method can be called directly, it is most commonly called by collection sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="89843-147">Por ejemplo, se llamó el <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> método y el <xref:System.Collections.SortedList.Add%2A> método de un <xref:System.Collections.SortedList> objeto cuyas instancias se crean mediante el uso de la <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span><span class="sxs-lookup"><span data-stu-id="89843-147">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="89843-148">El <xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A> método está pensado para su uso en las operaciones de ordenación.</span><span class="sxs-lookup"><span data-stu-id="89843-148">The <xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="89843-149">No debe usarse cuando el propósito principal de una comparación es determinar si dos objetos son iguales.</span><span class="sxs-lookup"><span data-stu-id="89843-149">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="89843-150">Para determinar si dos objetos son iguales, llame a la <xref:System.Tuple%601.System%23Collections%23IStructuralEquatable%23Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="89843-150">To determine whether two objects are equal, call the <xref:System.Tuple%601.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89843-151">En el ejemplo siguiente se define una clase genérica denominada `DescendingComparer` que implementa el <xref:System.Collections.Generic.IComparer%601> interfaz.</span><span class="sxs-lookup"><span data-stu-id="89843-151">The following example defines a generic class named `DescendingComparer` that implements the <xref:System.Collections.Generic.IComparer%601> interface.</span></span> <span data-ttu-id="89843-152">`DescendingComparer` Ordena los objetos en orden descendente en lugar de ascendente invirtiendo el valor devuelto por el comparador predeterminado para un tipo determinado.</span><span class="sxs-lookup"><span data-stu-id="89843-152">`DescendingComparer` sorts objects in descending rather than ascending order by reversing the value returned by the default comparer for a particular type.</span></span> <span data-ttu-id="89843-153">Una instancia de la clase genérica `DescendingComparer` clase, a continuación, se pasa a la <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> método para ordenar una matriz de <xref:System.Tuple%601> objetos en orden descendente.</span><span class="sxs-lookup"><span data-stu-id="89843-153">An instance of the generic `DescendingComparer` class is then passed to the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method to sort an array of <xref:System.Tuple%601> objects in descending order.</span></span> <span data-ttu-id="89843-154">Tenga en cuenta que el ejemplo no llama directamente el <xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="89843-154">Note that the example does not directly call the <xref:System.Tuple%601.System%23Collections%23IStructuralComparable%23CompareTo%2A> method.</span></span> <span data-ttu-id="89843-155">Este método se llama de forma implícita el <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> método para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="89843-155">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`1.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`1.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="89843-156"><paramref name="other" /> no es un objeto <see cref="T:System.Tuple`1" />.</span><span class="sxs-lookup"><span data-stu-id="89843-156"><paramref name="other" /> is not a <see cref="T:System.Tuple`1" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="89843-157">Objeto que se va a comparar con esta instancia.</span><span class="sxs-lookup"><span data-stu-id="89843-157">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="89843-158">Un objeto que define el método que se usará para evaluar si los dos objetos son iguales.</span><span class="sxs-lookup"><span data-stu-id="89843-158">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="89843-159">Devuelve un valor que indica si el objeto <see cref="T:System.Tuple`1" /> actual es igual que el objeto especificado según el método de comparación especificado.</span><span class="sxs-lookup"><span data-stu-id="89843-159">Returns a value that indicates whether the current <see cref="T:System.Tuple`1" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns><span data-ttu-id="89843-160"><see langword="true" /> si la instancia actual es igual que el objeto especificado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="89843-160"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89843-161">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="89843-161">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="89843-162">Solo se puede utilizar cuando la instancia de <xref:System.Tuple%601> se convierte en una interfaz <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="89843-162">It can be used only when the <xref:System.Tuple%601> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="89843-163">El <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> se denomina implementación sólo si `other` no `null`, y si puede ser correctamente, convierta (en C#) o convertir (en Visual Basic) a un <xref:System.Tuple%601> cuyo componente único es del mismo tipo que la instancia actual del objeto.</span><span class="sxs-lookup"><span data-stu-id="89843-163">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%601> object whose single component is of the same type as the current instance.</span></span> <span data-ttu-id="89843-164">Se pasa al método el <xref:System.Tuple%601.Item1%2A> componente de la instancia actual y el <xref:System.Tuple%601.Item1%2A> componente de la <xref:System.Tuple%601> objeto representado por la `other` parámetro.</span><span class="sxs-lookup"><span data-stu-id="89843-164">The method is passed the <xref:System.Tuple%601.Item1%2A> component of the current instance and the <xref:System.Tuple%601.Item1%2A> component of the <xref:System.Tuple%601> object represented by the `other` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89843-165">En el ejemplo siguiente se define un <xref:System.Collections.IEqualityComparer> implementación que considera que dos valores de punto flotante son iguales si son aproximadamente iguales entre sí (es decir, si un valor es.01 ciento del otro).</span><span class="sxs-lookup"><span data-stu-id="89843-165">The following example defines an <xref:System.Collections.IEqualityComparer> implementation that considers two floating-point values to be equal if they are approximately equal to each other (that is, if one value is within .01 percent of the other).</span></span>  
  
 [!code-csharp[System.Tuple\`1.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`1.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="89843-166">Objeto cuyo método <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcula el código hash del objeto <see cref="T:System.Tuple`1" /> actual.</span><span class="sxs-lookup"><span data-stu-id="89843-166">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`1" /> object.</span></span></param>
        <summary><span data-ttu-id="89843-167">Calcula el código hash del objeto <see cref="T:System.Tuple`1" /> actual usando el método de cálculo especificado.</span><span class="sxs-lookup"><span data-stu-id="89843-167">Calculates the hash code for the current <see cref="T:System.Tuple`1" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="89843-168">Código hash de un entero de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="89843-168">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89843-169">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="89843-169">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="89843-170">Solo se puede utilizar cuando la instancia de <xref:System.Tuple%601> se convierte en una interfaz <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="89843-170">It can be used only when the <xref:System.Tuple%601> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="89843-171">El método simplemente ajusta una llamada a la `comparer` del objeto <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementación.</span><span class="sxs-lookup"><span data-stu-id="89843-171">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="89843-172">El algoritmo utilizado para calcular el código hash debe devolver el mismo código hash para dos <xref:System.Tuple%601> objetos que se consideran iguales.</span><span class="sxs-lookup"><span data-stu-id="89843-172">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%601> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="89843-173">Objeto que se va a comparar con la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="89843-173">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="89843-174">Compara el objeto <see cref="T:System.Tuple`1" /> actual con un objeto especificado y devuelve un entero que indica si el objeto actual precede o sigue al objeto especificado, o si se encuentra en la misma posición que dicho objeto en el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="89843-174">Compares the current <see cref="T:System.Tuple`1" /> object to a specified object, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="89843-175">Entero con signo que indica la posición relativa de esta instancia y <paramref name="obj" /> en el criterio de ordenación, tal como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="89843-175">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="89843-176">Valor</span><span class="sxs-lookup"><span data-stu-id="89843-176">Value</span></span> 
 </term><description> <span data-ttu-id="89843-177">Descripción</span><span class="sxs-lookup"><span data-stu-id="89843-177">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="89843-178">Un entero negativo</span><span class="sxs-lookup"><span data-stu-id="89843-178">A negative integer</span></span> 
 </term><description> <span data-ttu-id="89843-179">Esta instancia precede a <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="89843-179">This instance precedes <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="89843-180">Cero</span><span class="sxs-lookup"><span data-stu-id="89843-180">Zero</span></span> 
 </term><description> <span data-ttu-id="89843-181">En el criterio de ordenación, esta instancia y <paramref name="obj" /> tienen la misma posición.</span><span class="sxs-lookup"><span data-stu-id="89843-181">This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="89843-182">Un entero positivo.</span><span class="sxs-lookup"><span data-stu-id="89843-182">A positive integer</span></span> 
 </term><description> <span data-ttu-id="89843-183">Esta instancia es posterior a <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="89843-183">This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89843-184">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="89843-184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="89843-185">Solo se puede utilizar cuando la instancia de <xref:System.Tuple%601> se convierte en una interfaz <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="89843-185">It can be used only when the <xref:System.Tuple%601> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="89843-186">Este método proporciona la <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementación para el <xref:System.Tuple%601> clase.</span><span class="sxs-lookup"><span data-stu-id="89843-186">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%601> class.</span></span> <span data-ttu-id="89843-187">Aunque el método se puede llamar directamente, normalmente se denomina mediante las sobrecargas predeterminadas de la colección de ordenación de los métodos, como <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> y <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, para ordenar los miembros de una colección.</span><span class="sxs-lookup"><span data-stu-id="89843-187">Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="89843-188">El <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> método está pensado para su uso en las operaciones de ordenación.</span><span class="sxs-lookup"><span data-stu-id="89843-188">The <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method is intended for use in sorting operations.</span></span> <span data-ttu-id="89843-189">No debe usarse cuando el propósito principal de una comparación es determinar si dos objetos son iguales.</span><span class="sxs-lookup"><span data-stu-id="89843-189">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="89843-190">Para determinar si dos objetos son iguales, llame a la <xref:System.Tuple%601.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="89843-190">To determine whether two objects are equal, call the <xref:System.Tuple%601.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="89843-191">El <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> método usa el comparador de objeto predeterminado.</span><span class="sxs-lookup"><span data-stu-id="89843-191">The <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method uses the default object  comparer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89843-192">En el ejemplo siguiente se crea una matriz de objetos singleton cuyo componente es un <xref:System.Double> valor.</span><span class="sxs-lookup"><span data-stu-id="89843-192">The following example creates an array of singletons whose component is a <xref:System.Double> value.</span></span> <span data-ttu-id="89843-193">Muestra el valor de cada componente de la tupla de forma desordenada, ordena la matriz y, a continuación, muestra los valores de criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="89843-193">It displays the value of each tuple component in unsorted order, sorts the array, and then displays the values in sorted order.</span></span> <span data-ttu-id="89843-194">Tenga en cuenta que el ejemplo no llama directamente el <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="89843-194">Note that the example does not directly call the <xref:System.Tuple%601.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="89843-195">Este método se llama de forma implícita el <xref:System.Array.Sort%28System.Array%29> método para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="89843-195">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`1.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`1.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="89843-196"><paramref name="obj" /> no es un objeto <see cref="T:System.Tuple`1" />.</span><span class="sxs-lookup"><span data-stu-id="89843-196"><paramref name="obj" /> is not a <see cref="T:System.Tuple`1" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`1.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="89843-197">Índice del elemento <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="89843-197">The index of the <see langword="Tuple" /> element.</span></span> <span data-ttu-id="89843-198"><paramref name="index" /> debe ser 0.</span><span class="sxs-lookup"><span data-stu-id="89843-198"><paramref name="index" /> must be 0.</span></span></param>
        <summary><span data-ttu-id="89843-199">Obtiene el valor del elemento <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="89843-199">Gets the value of the <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="89843-200">Valor del elemento <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="89843-200">The value of the <see langword="Tuple" /> element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89843-201">El <xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> propiedad es una implementación de interfaz explícita.</span><span class="sxs-lookup"><span data-stu-id="89843-201">The <xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="89843-202">Para invocarlo, debe convertir o convertir el <xref:System.Tuple%601> objeto a un <xref:System.Runtime.CompilerServices.ITuple> objeto de interfaz.</span><span class="sxs-lookup"><span data-stu-id="89843-202">To call it, you must cast or convert the <xref:System.Tuple%601> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="89843-203"><paramref name="index" /> es menor que 0 o mayor que 0.</span><span class="sxs-lookup"><span data-stu-id="89843-203"><paramref name="index" /> is less than 0 or greater than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`1.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89843-204">Obtiene el número de elementos de <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="89843-204">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="89843-205">1, el número de elementos de un objeto <see cref="T:System.Tuple`1" />.</span><span class="sxs-lookup"><span data-stu-id="89843-205">1, the number of elements in a <see cref="T:System.Tuple`1" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89843-206">El <xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> propiedad es una implementación de interfaz explícita.</span><span class="sxs-lookup"><span data-stu-id="89843-206">The <xref:System.Tuple%601.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="89843-207">Para invocarlo, debe convertir o convertir el <xref:System.Tuple%601> objeto a un <xref:System.Runtime.CompilerServices.ITuple> objeto de interfaz.</span><span class="sxs-lookup"><span data-stu-id="89843-207">To call it, you must cast or convert the <xref:System.Tuple%601> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="89843-208">Devuelve una cadena que representa el valor de esta instancia de <see cref="T:System.Tuple`1" />.</span><span class="sxs-lookup"><span data-stu-id="89843-208">Returns a string that represents the value of this <see cref="T:System.Tuple`1" /> instance.</span></span></summary>
        <returns><span data-ttu-id="89843-209">Representación en forma de cadena de este objeto <see cref="T:System.Tuple`1" />.</span><span class="sxs-lookup"><span data-stu-id="89843-209">The string representation of this <see cref="T:System.Tuple`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89843-210">La cadena devuelta por este método adopta la forma (*Item1*), donde *Item1* representa el valor de la <xref:System.Tuple%601.Item1%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="89843-210">The string returned by this method takes the form (*Item1*), where *Item1* represents the value of the <xref:System.Tuple%601.Item1%2A> property.</span></span> <span data-ttu-id="89843-211">Si el valor de <xref:System.Tuple%601.Item1%2A> es `null`, se representa como <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="89843-211">If the value of <xref:System.Tuple%601.Item1%2A> is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89843-212">El ejemplo siguiente ilustra la <xref:System.Tuple%601.ToString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="89843-212">The following example illustrates the <xref:System.Tuple%601.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`1.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`1.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`1.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`1.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
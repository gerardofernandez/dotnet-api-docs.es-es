<Type Name="IComparable" FullName="System.IComparable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de45437685e7e2891c7f6e699cd8812bc393beca" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48589862" /></Metadata><TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e4b8e-101">Define un método de comparación generalizado específico del tipo que implementa un tipo o una clase de valor con el fin de ordenar sus instancias.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-101">Defines a generalized type-specific comparison method that a value type or class implements to order or sort its instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4b8e-102">Esta interfaz se implementa mediante tipos cuyos valores se pueden ordenar.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-102">This interface is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="e4b8e-103">Requiere que implementar los tipos definan un único método, <xref:System.IComparable.CompareTo%28System.Object%29>, que indica si la posición de la instancia actual en el criterio de ordenación es anterior, posterior o igual que un segundo objeto del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-103">It requires that implementing types define a single method, <xref:System.IComparable.CompareTo%28System.Object%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="e4b8e-104">La instancia <xref:System.IComparable> implementación llaman automáticamente a los métodos como <xref:System.Array.Sort%2A?displayProperty=nameWithType> y <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-104">The instance's <xref:System.IComparable> implementation is called automatically by methods such as <xref:System.Array.Sort%2A?displayProperty=nameWithType> and <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e4b8e-105">La implementación de la <xref:System.IComparable.CompareTo%28System.Object%29> método debe devolver un <xref:System.Int32> que tiene uno de estos tres valores, como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-105">The implementation of the <xref:System.IComparable.CompareTo%28System.Object%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="e4b8e-106">Valor</span><span class="sxs-lookup"><span data-stu-id="e4b8e-106">Value</span></span>|<span data-ttu-id="e4b8e-107">Significado</span><span class="sxs-lookup"><span data-stu-id="e4b8e-107">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="e4b8e-108">Menor que cero</span><span class="sxs-lookup"><span data-stu-id="e4b8e-108">Less than zero</span></span>|<span data-ttu-id="e4b8e-109">La instancia actual precede el objeto especificado por el <xref:System.IComparable.CompareTo%2A> método en el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-109">The current instance precedes the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="e4b8e-110">Cero</span><span class="sxs-lookup"><span data-stu-id="e4b8e-110">Zero</span></span>|<span data-ttu-id="e4b8e-111">Instancia actual se produce en la misma posición en el criterio de ordenación que el objeto especificado por el <xref:System.IComparable.CompareTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-111">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable.CompareTo%2A> method.</span></span>|  
|<span data-ttu-id="e4b8e-112">Mayor que cero</span><span class="sxs-lookup"><span data-stu-id="e4b8e-112">Greater than zero</span></span>|<span data-ttu-id="e4b8e-113">Instancia actual sigue al objeto especificado por el <xref:System.IComparable.CompareTo%2A> método en el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-113">This current instance follows the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
  
 <span data-ttu-id="e4b8e-114">Todos los tipos numéricos (como <xref:System.Int32> y <xref:System.Double>) implementar <xref:System.IComparable>, al igual <xref:System.String>, <xref:System.Char>, y <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-114">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="e4b8e-115">Tipos personalizados también deben proporcionar su propia implementación de <xref:System.IComparable> para permitir que las instancias de objeto ordenar.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-115">Custom types should also provide their own implementation of <xref:System.IComparable> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4b8e-116">El ejemplo siguiente ilustra la implementación de <xref:System.IComparable> y el necesario <xref:System.IComparable.CompareTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-116">The following example illustrates the implementation of <xref:System.IComparable> and the requisite <xref:System.IComparable.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int" Usage="iComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e4b8e-117">Objeto que se va a comparar con esta instancia.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-117">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="e4b8e-118">Compara la instancia actual con otro objeto del mismo tipo y devuelve un entero que indica si la posición de la instancia actual es anterior, posterior o igual que la del otro objeto en el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-118">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="e4b8e-119">Un valor que indica el orden relativo de los objetos que se están comparando.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-119">A value that indicates the relative order of the objects being compared.</span></span> <span data-ttu-id="e4b8e-120">El valor devuelto tiene los siguientes significados:</span><span class="sxs-lookup"><span data-stu-id="e4b8e-120">The return value has these meanings:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="e4b8e-121">Valor</span><span class="sxs-lookup"><span data-stu-id="e4b8e-121">Value</span></span> 
 </term><description> <span data-ttu-id="e4b8e-122">Significado</span><span class="sxs-lookup"><span data-stu-id="e4b8e-122">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="e4b8e-123">Menor que cero</span><span class="sxs-lookup"><span data-stu-id="e4b8e-123">Less than zero</span></span> 
 </term><description> <span data-ttu-id="e4b8e-124">Esta instancia es anterior a <paramref name="obj" /> en el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-124">This instance precedes <paramref name="obj" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e4b8e-125">Cero</span><span class="sxs-lookup"><span data-stu-id="e4b8e-125">Zero</span></span> 
 </term><description> <span data-ttu-id="e4b8e-126">Esta instancia se produce en la misma posición del criterio de ordenación que <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-126">This instance occurs in the same position in the sort order as <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e4b8e-127">Mayor que cero</span><span class="sxs-lookup"><span data-stu-id="e4b8e-127">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="e4b8e-128">Esta instancia sigue a <paramref name="obj" /> en el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-128">This instance follows <paramref name="obj" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4b8e-129">El <xref:System.IComparable.CompareTo%2A> método se implementa mediante tipos cuyos valores se pueden ordenar.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-129">The <xref:System.IComparable.CompareTo%2A> method is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="e4b8e-130">Se llama automáticamente mediante los métodos de colección no genérica de objetos, tales como <xref:System.Array.Sort%2A?displayProperty=nameWithType>, para ordenar cada miembro de la matriz.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-130">It is called automatically by methods of non-generic collection objects, such as <xref:System.Array.Sort%2A?displayProperty=nameWithType>, to order each member of the array.</span></span> <span data-ttu-id="e4b8e-131">Si no implementa una clase o estructura personalizada <xref:System.IComparable>, sus miembros no se puede ordenar y la operación de ordenación puede producir un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-131">If a custom class or structure does not implement <xref:System.IComparable>, its members cannot be ordered and the sort operation can throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="e4b8e-132">Este método es solo una definición y debe implementarse mediante un tipo específico de clase o el valor surta efecto.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-132">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="e4b8e-133">El significado de las comparaciones especificado en el valor devuelto depende de la sección ("precede a", "se produce en la misma posición que" y "sigue") en la implementación concreta.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-133">The meaning of the comparisons specified in the Return Value section ("precedes", "occurs in the same position as", and "follows") depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="e4b8e-134">Por definición, cualquier objeto es mayor que (o sigue) `null`, y dos referencias null son iguales entre sí.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-134">By definition, any object compares greater than (or follows) `null`, and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="e4b8e-135">El parámetro, `obj`, debe ser el mismo tipo que la clase o tipo de valor que implementa esta interfaz; en caso contrario, un <xref:System.ArgumentException> se produce.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-135">The parameter, `obj`, must be the same type as the class or value type that implements this interface; otherwise, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4b8e-136">El ejemplo siguiente muestra el uso de <xref:System.IComparable.CompareTo%2A> para comparar un `Temperature` objeto que implementa <xref:System.IComparable> con otro objeto.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-136">The following example illustrates the use of <xref:System.IComparable.CompareTo%2A> to compare a `Temperature` object implementing <xref:System.IComparable> with another object.</span></span> <span data-ttu-id="e4b8e-137">El `Temperature` objeto implementa <xref:System.IComparable.CompareTo%2A> simplemente ajustando una llamada a la <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-137">The `Temperature` object implements <xref:System.IComparable.CompareTo%2A> by simply wrapping a call to the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e4b8e-138"><paramref name="obj" /> no es del mismo tipo que esta instancia.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-138"><paramref name="obj" /> is not the same type as this instance.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="e4b8e-139">Para los objetos A, B y C, deben cumplirse las siguientes condiciones:</span><span class="sxs-lookup"><span data-stu-id="e4b8e-139">For objects A, B and C, the following must be true:</span></span> 
 <span data-ttu-id="e4b8e-140"><c>A.CompareTo (a)</c> debe devolver cero.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-140"><c>A.CompareTo(A)</c> must return zero.</span></span>  
  
<span data-ttu-id="e4b8e-141">Si <c>a.CompareTo (b)</c> , a continuación, devuelve cero <c>B.CompareTo</c> debe devolver cero.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-141">If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> must return zero.</span></span>  
  
<span data-ttu-id="e4b8e-142">Si <c>a.CompareTo (b)</c> devuelve cero y <c>b.CompareTo (c)</c> , a continuación, devuelve cero <c>a.CompareTo (c)</c> debe devolver cero.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-142">If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> must return zero.</span></span>  
  
<span data-ttu-id="e4b8e-143">Si <c>a.CompareTo (b)</c> devuelve un valor distinto de cero, a continuación, <c>B.CompareTo</c> debe devolver un valor de signo contrario.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-143">If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> must return a value of the opposite sign.</span></span>  
  
<span data-ttu-id="e4b8e-144">Si <c>a.CompareTo (b)</c> devuelve un valor <paramref name="x" /> no es igual a cero, y <c>b.CompareTo (c)</c> devuelve un valor <paramref name="y" /> del mismo signo que <paramref name="x" />, a continuación, <c>A. CompareTo(C)</c> debe devolver un valor del mismo signo que <paramref name="x" /> y <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-144">If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> must return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="e4b8e-145">Use el <see cref="M:System.IComparable.CompareTo(System.Object)" /> método para determinar el orden de las instancias de una clase.</span><span class="sxs-lookup"><span data-stu-id="e4b8e-145">Use the <see cref="M:System.IComparable.CompareTo(System.Object)" /> method to determine the ordering of instances of a class.</span></span></para></block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>
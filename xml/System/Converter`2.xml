<Type Name="Converter&lt;TInput,TOutput&gt;" FullName="System.Converter&lt;TInput,TOutput&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d572a9ac7cdd88d83e2e60e3ab38a089b5d7b1a" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37728373" /></Metadata><TypeSignature Language="C#" Value="public delegate TOutput Converter&lt;in TInput,out TOutput&gt;(TInput input);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Converter`2&lt;- TInput, + TOutput&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Converter`2" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Converter(Of In TInput, Out TOutput)(input As TInput) As TOutput " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput, typename TOutput&gt;&#xA;public delegate TOutput Converter(TInput input);" />
  <TypeSignature Language="F#" Value="type Converter&lt;'Input, 'Output&gt; = delegate of 'Input -&gt; 'Output" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TOutput">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="input" Type="TInput" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TOutput</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TInput"><span data-ttu-id="f43b3-101">Tipo de objeto que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="f43b3-101">The type of object that is to be converted.</span></span></typeparam>
    <typeparam name="TOutput"><span data-ttu-id="f43b3-102">Tipo al que se va a convertir el objeto de entrada.</span><span class="sxs-lookup"><span data-stu-id="f43b3-102">The type the input object is to be converted to.</span></span></typeparam>
    <param name="input"><span data-ttu-id="f43b3-103">Objeto que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="f43b3-103">The object to convert.</span></span></param>
    <summary><span data-ttu-id="f43b3-104">Representa un método que convierte un tipo de objeto a otro tipo.</span><span class="sxs-lookup"><span data-stu-id="f43b3-104">Represents a method that converts an object from one type to another type.</span></span></summary>
    <returns><span data-ttu-id="f43b3-105"><typeparamref name="TOutput" /> que representa el <typeparamref name="TInput" /> convertido.</span><span class="sxs-lookup"><span data-stu-id="f43b3-105">The <typeparamref name="TOutput" /> that represents the converted <typeparamref name="TInput" />.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f43b3-106">Este delegado es utilizado por el <xref:System.Array.ConvertAll%2A> método de la <xref:System.Array> clase y el <xref:System.Collections.Generic.List`1.ConvertAll*> método de la <xref:System.Collections.Generic.List%601> clase para convertir cada elemento de la colección de un tipo a otro.</span><span class="sxs-lookup"><span data-stu-id="f43b3-106">This delegate is used by the <xref:System.Array.ConvertAll%2A> method of the <xref:System.Array> class and the <xref:System.Collections.Generic.List`1.ConvertAll*> method of the <xref:System.Collections.Generic.List%601> class to convert each element of the collection from one type to another.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f43b3-107">Esta sección contiene dos ejemplos de código.</span><span class="sxs-lookup"><span data-stu-id="f43b3-107">This section contains two code examples.</span></span> <span data-ttu-id="f43b3-108">El primer ejemplo se muestra el <xref:System.Converter%602> delegado con el <xref:System.Array.ConvertAll%2A> método de la <xref:System.Array> clase y la segunda muestra el delegado con el <xref:System.Collections.Generic.List`1.ConvertAll*> método de la <xref:System.Collections.Generic.List%601> clase genérica.</span><span class="sxs-lookup"><span data-stu-id="f43b3-108">The first demonstrates the <xref:System.Converter%602> delegate with the <xref:System.Array.ConvertAll%2A> method of the <xref:System.Array> class, and the second demonstrates the delegate with the <xref:System.Collections.Generic.List`1.ConvertAll*> method of the <xref:System.Collections.Generic.List%601> generic class.</span></span>  
  
 <span data-ttu-id="f43b3-109">Ejemplo 1</span><span class="sxs-lookup"><span data-stu-id="f43b3-109">Example 1</span></span>  
  
 <span data-ttu-id="f43b3-110">El ejemplo de código siguiente define un método denominado `PointFToPoint` que convierte un <xref:System.Drawing.PointF> estructura a un <xref:System.Drawing.Point> estructura.</span><span class="sxs-lookup"><span data-stu-id="f43b3-110">The following code example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="f43b3-111">El ejemplo, a continuación, crea una matriz de <xref:System.Drawing.PointF> estructuras, crea un `Converter<PointF, Point>` delegar (`Converter(Of PointF, Point)` en Visual Basic) para representar el `PointFToPoint` método y pasa el delegado para el <xref:System.Array.ConvertAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f43b3-111">The example then creates an array of <xref:System.Drawing.PointF> structures, creates a `Converter<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Array.ConvertAll%2A> method.</span></span> <span data-ttu-id="f43b3-112">El <xref:System.Array.ConvertAll%2A> método pasa cada elemento de la lista de entrada para el `PointFToPoint` método y coloca los elementos convertidos en una nueva lista de <xref:System.Drawing.Point> estructuras.</span><span class="sxs-lookup"><span data-stu-id="f43b3-112">The <xref:System.Array.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="f43b3-113">Se muestran ambas listas.</span><span class="sxs-lookup"><span data-stu-id="f43b3-113">Both lists are displayed.</span></span>  
  
 [!code-cpp[Array_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[Array_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_ConvertAll/cs/source.cs#1)]
 [!code-vb[Array_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_ConvertAll/vb/source.vb#1)]  
  
 <span data-ttu-id="f43b3-114">Ejemplo 2</span><span class="sxs-lookup"><span data-stu-id="f43b3-114">Example 2</span></span>  
  
 <span data-ttu-id="f43b3-115">El ejemplo de código siguiente define un método denominado `PointFToPoint` que convierte un <xref:System.Drawing.PointF> estructura a un <xref:System.Drawing.Point> estructura.</span><span class="sxs-lookup"><span data-stu-id="f43b3-115">The following code example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="f43b3-116">El ejemplo, a continuación, se crea un <xref:System.Collections.Generic.List%601> de <xref:System.Drawing.PointF> estructuras, crea un `Converter\<PointF, Point>` delegar (`Converter(Of PointF, Point)` en Visual Basic) para representar el `PointFToPoint` método y pasa el delegado para el <xref:System.Collections.Generic.List`1.ConvertAll*> método.</span><span class="sxs-lookup"><span data-stu-id="f43b3-116">The example then creates a <xref:System.Collections.Generic.List%601> of <xref:System.Drawing.PointF> structures, creates a `Converter\<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Collections.Generic.List`1.ConvertAll*> method.</span></span> <span data-ttu-id="f43b3-117">El <xref:System.Collections.Generic.List`1.ConvertAll*> método pasa cada elemento de la lista de entrada para el `PointFToPoint` método y coloca los elementos convertidos en una nueva lista de <xref:System.Drawing.Point> estructuras.</span><span class="sxs-lookup"><span data-stu-id="f43b3-117">The <xref:System.Collections.Generic.List`1.ConvertAll*> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="f43b3-118">Se muestran ambas listas.</span><span class="sxs-lookup"><span data-stu-id="f43b3-118">Both lists are displayed.</span></span>  
  
 [!code-cpp[List\`1_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[List\`1_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_ConvertAll/cs/source.cs#1)]
 [!code-vb[List\`1_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
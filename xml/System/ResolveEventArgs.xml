<Type Name="ResolveEventArgs" FullName="System.ResolveEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88c1d5adc4eb69a823bc42b962dd4e15fe7b5be6" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57947566" /></Metadata><TypeSignature Language="C#" Value="public class ResolveEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResolveEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.ResolveEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ResolveEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResolveEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ResolveEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6661a-101">Proporciona los datos para los eventos de resolución del cargador, como los eventos <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" />, <see cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" /> y <see cref="E:System.AppDomain.AssemblyResolve" />.</span><span class="sxs-lookup"><span data-stu-id="6661a-101">Provides data for loader resolution events, such as the <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" />, <see cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />, and <see cref="E:System.AppDomain.AssemblyResolve" /> events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6661a-102">Cuando el cargador no puede resolver una referencia de ensamblado y un controlador se ha proporcionado para el evento de resolución del cargador adecuado, se genera el evento y el <xref:System.ResolveEventArgs> contiene información sobre el elemento que se resuelva.</span><span class="sxs-lookup"><span data-stu-id="6661a-102">When the loader cannot resolve an assembly reference and a handler has been provided for the appropriate loader resolution event, the event is raised and the <xref:System.ResolveEventArgs> contains information about the item to be resolved.</span></span>  
  
-   <span data-ttu-id="6661a-103">El <xref:System.ResolveEventArgs.Name%2A> propiedad contiene el nombre del elemento que se puede resolver.</span><span class="sxs-lookup"><span data-stu-id="6661a-103">The <xref:System.ResolveEventArgs.Name%2A> property contains the name of the item to be resolved.</span></span>  
  
-   <span data-ttu-id="6661a-104">A partir del [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], el <xref:System.ResolveEventArgs.RequestingAssembly%2A> propiedad contiene el ensamblado que solicitó un ensamblado que puede proporcionar el elemento con nombre.</span><span class="sxs-lookup"><span data-stu-id="6661a-104">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property contains the assembly that requested an assembly that can provide the named item.</span></span> <span data-ttu-id="6661a-105">Para obtener más información, vea la propiedad <xref:System.ResolveEventArgs.RequestingAssembly%2A>.</span><span class="sxs-lookup"><span data-stu-id="6661a-105">For more information, see the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.TypeResolve" />
    <altmember cref="E:System.AppDomain.ResourceResolve" />
    <altmember cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />
    <altmember cref="E:System.AppDomain.AssemblyResolve" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6661a-106">Inicializa una nueva instancia de la clase <see cref="T:System.ResolveEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="6661a-106">Initializes a new instance of the <see cref="T:System.ResolveEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveEventArgs (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ResolveEventArgs.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveEventArgs(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new ResolveEventArgs : string -&gt; ResolveEventArgs" Usage="new System.ResolveEventArgs name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6661a-107">Nombre del elemento que se va a resolver.</span><span class="sxs-lookup"><span data-stu-id="6661a-107">The name of an item to resolve.</span></span></param>
        <summary><span data-ttu-id="6661a-108">Inicializa una nueva instancia de la clase <see cref="T:System.ResolveEventArgs" />, que especifica el nombre del elemento que se va a resolver.</span><span class="sxs-lookup"><span data-stu-id="6661a-108">Initializes a new instance of the <see cref="T:System.ResolveEventArgs" /> class, specifying the name of the item to resolve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6661a-109">Normalmente, se llama a este constructor sólo por common language runtime.</span><span class="sxs-lookup"><span data-stu-id="6661a-109">This constructor is typically called only by the common language runtime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveEventArgs (string name, System.Reflection.Assembly requestingAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Reflection.Assembly requestingAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, requestingAssembly As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveEventArgs(System::String ^ name, System::Reflection::Assembly ^ requestingAssembly);" />
      <MemberSignature Language="F#" Value="new ResolveEventArgs : string * System.Reflection.Assembly -&gt; ResolveEventArgs" Usage="new System.ResolveEventArgs (name, requestingAssembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requestingAssembly" Type="System.Reflection.Assembly" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6661a-110">Nombre del elemento que se va a resolver.</span><span class="sxs-lookup"><span data-stu-id="6661a-110">The name of an item to resolve.</span></span></param>
        <param name="requestingAssembly"><span data-ttu-id="6661a-111">Ensamblado cuya dependencia se resuelve.</span><span class="sxs-lookup"><span data-stu-id="6661a-111">The assembly whose dependency is being resolved.</span></span></param>
        <summary><span data-ttu-id="6661a-112">Inicializa una nueva instancia de la clase <see cref="T:System.ResolveEventArgs" />, que especifica el nombre del elemento que se va a resolver y el ensamblado cuya dependencia se resuelve.</span><span class="sxs-lookup"><span data-stu-id="6661a-112">Initializes a new instance of the <see cref="T:System.ResolveEventArgs" /> class, specifying the name of the item to resolve and the assembly whose dependency is being resolved.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ResolveEventArgs.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.ResolveEventArgs.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6661a-113">Obtiene el nombre del elemento que se va resolver.</span><span class="sxs-lookup"><span data-stu-id="6661a-113">Gets the name of the item to resolve.</span></span></summary>
        <value><span data-ttu-id="6661a-114">Nombre del elemento que se va a resolver.</span><span class="sxs-lookup"><span data-stu-id="6661a-114">The name of the item to resolve.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6661a-115">Para el <xref:System.AppDomain.AssemblyResolve> eventos, <xref:System.ResolveEventArgs.Name%2A> es el nombre del ensamblado antes de aplicar directivas.</span><span class="sxs-lookup"><span data-stu-id="6661a-115">For the <xref:System.AppDomain.AssemblyResolve> event, <xref:System.ResolveEventArgs.Name%2A> is the assembly name before policy is applied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestingAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly RequestingAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly RequestingAssembly" />
      <MemberSignature Language="DocId" Value="P:System.ResolveEventArgs.RequestingAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestingAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ RequestingAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestingAssembly : System.Reflection.Assembly" Usage="System.ResolveEventArgs.RequestingAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6661a-116">Obtiene el ensamblado cuya dependencia se resuelve.</span><span class="sxs-lookup"><span data-stu-id="6661a-116">Gets the assembly whose dependency is being resolved.</span></span></summary>
        <value><span data-ttu-id="6661a-117">Ensamblado que solicitó el elemento especificado por la propiedad <see cref="P:System.ResolveEventArgs.Name" />.</span><span class="sxs-lookup"><span data-stu-id="6661a-117">The assembly that requested the item specified by the <see cref="P:System.ResolveEventArgs.Name" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6661a-118">El ensamblado devuelto por esta propiedad es un ensamblado que no pudo resolver el elemento especificado por el <xref:System.ResolveEventArgs.Name%2A> propiedad, porque el elemento no existía en ese ensamblado, en cualquiera de sus dependencias cargadas o en cualquier dependencia que el cargador se encontró a través del sondeo.</span><span class="sxs-lookup"><span data-stu-id="6661a-118">The assembly that is returned by this property is an assembly that was unable to resolve the item specified by the <xref:System.ResolveEventArgs.Name%2A> property, because the item did not exist in that assembly, in any of its loaded dependencies, or in any dependencies the loader could find through probing.</span></span>  
  
 <span data-ttu-id="6661a-119">Por ejemplo, supongamos que los usos de ensamblado actual el <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType> para cargar un ensamblado desde un directorio fuera de la ruta de acceso de sondeo, para poder usar la clase de entidad de certificación.</span><span class="sxs-lookup"><span data-stu-id="6661a-119">For example, suppose the current assembly uses the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType> method to load assembly A from a directory outside the probing path, in order to use class CA.</span></span> <span data-ttu-id="6661a-120">Supongamos que aún más esa entidad de certificación de clase utiliza la clase CB, en el ensamblado B, y que un ensamblado tiene una referencia de tiempo de compilación al ensamblado B, también ubican fuera de la ruta de acceso de sondeo.</span><span class="sxs-lookup"><span data-stu-id="6661a-120">Suppose further that class CA uses class CB, in assembly B, and that assembly A has a compile-time reference to assembly B, also located outside the probing path.</span></span> <span data-ttu-id="6661a-121">Cuando el ensamblado actual intenta crear una instancia de entidad de certificación, el cargador intenta resolver la referencia al ensamblado B. Sin embargo, dado que se cargó un ensamblado mediante el uso de la <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType> método, el cargador no puede resolver la dependencia.</span><span class="sxs-lookup"><span data-stu-id="6661a-121">When the current assembly attempts to instantiate CA, the loader attempts to resolve the reference to assembly B. However, because assembly A was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType> method, the loader cannot resolve the dependency.</span></span> <span data-ttu-id="6661a-122">Si hay un controlador para el <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType> se genera el evento, el evento y el <xref:System.ResolveEventArgs.RequestingAssembly%2A> propiedad del resultante <xref:System.ResolveEventArgs> objeto contiene un ensamblado, porque un ensamblado es el ensamblado que falta una dependencia.</span><span class="sxs-lookup"><span data-stu-id="6661a-122">If there is a handler for the <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType> event, the event is raised, and the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property of the resulting <xref:System.ResolveEventArgs> object contains assembly A, because assembly A is the assembly that is missing a dependency.</span></span>  
  
 <span data-ttu-id="6661a-123">La semántica de la <xref:System.ResolveEventArgs.RequestingAssembly%2A> propiedad varían en función de cómo se cargó el ensamblado solicitante:</span><span class="sxs-lookup"><span data-stu-id="6661a-123">The semantics of the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property vary, depending on how the requesting assembly was loaded:</span></span>  
  
-   <span data-ttu-id="6661a-124">Contexto de carga: El valor de la propiedad puede ser `null`.</span><span class="sxs-lookup"><span data-stu-id="6661a-124">Load context: The value of the property might be `null`.</span></span> <span data-ttu-id="6661a-125">El contexto de carga es independiente del orden de carga y la identidad de la solicitud de ensamblado no es necesariamente significativo.</span><span class="sxs-lookup"><span data-stu-id="6661a-125">The load context is load-order independent, and the identity of the requesting assembly is not necessarily meaningful.</span></span> <span data-ttu-id="6661a-126">Un ejemplo que no sean null se produce cuando el <xref:System.Type.GetType%2A?displayProperty=nameWithType> se llama al método y no se conoce el tipo especificado para el ensamblado para solicitar o cualquiera de sus dependencias.</span><span class="sxs-lookup"><span data-stu-id="6661a-126">A non-null example occurs when the <xref:System.Type.GetType%2A?displayProperty=nameWithType> method is called and the specified type is not known to the requesting assembly or any of its dependencies.</span></span>  
  
-   <span data-ttu-id="6661a-127">Contexto de carga: La propiedad puede usarse como una sugerencia de sondeo, pero el controlador de eventos, no debe aparecer más de una solicitud para un nombre de ensamblado dado.</span><span class="sxs-lookup"><span data-stu-id="6661a-127">Load-from context: The property can be used as a probing hint, but the event handler should not get more than one request for a given assembly name.</span></span>  
  
-   <span data-ttu-id="6661a-128">No hay ningún contexto (es decir, se cargó el ensamblado solicitante mediante el uso de la <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType> método, o como una secuencia de bytes o en modo mixto): Puede usar el controlador de la <xref:System.ResolveEventArgs.RequestingAssembly%2A> propiedad que se va a cargar las implementaciones diferentes del mismo ensamblado en función de la identidad del ensamblado que realiza solicitud.</span><span class="sxs-lookup"><span data-stu-id="6661a-128">No context (that is, the requesting assembly was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=nameWithType> method, or as a byte stream, or in mixed mode): The handler can use the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property to load different implementations of the same assembly based on the identity of the requesting assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.AppDomain.TypeResolve" />
        <altmember cref="E:System.AppDomain.ResourceResolve" />
        <altmember cref="E:System.AppDomain.ReflectionOnlyAssemblyResolve" />
        <altmember cref="E:System.AppDomain.AssemblyResolve" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="ReadOnlySpan&lt;T&gt;+Enumerator" FullName="System.ReadOnlySpan&lt;T&gt;+Enumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21d3a84923de729b6e13f9da922c7da81ff2c0c2" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52736286" /></Metadata><TypeSignature Language="C#" Value="public struct ReadOnlySpan&lt;T&gt;.Enumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit ReadOnlySpan`1/Enumerator&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ReadOnlySpan`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure ReadOnlySpan(Of T).Enumerator" />
  <TypeSignature Language="C++ CLI" Value="public: value class ReadOnlySpan&lt;T&gt;::Enumerator" />
  <TypeSignature Language="F#" Value="type ReadOnlySpan&lt;'T&gt;.Enumerator = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
      <AttributeName>System.Runtime.CompilerServices.IsByRefLike</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="49aaa-101">Proporciona un enumerador para los elementos de <see cref="T:System.ReadOnlySpan`1" />.</span><span class="sxs-lookup"><span data-stu-id="49aaa-101">Provides an enumerator for the elements of a <see cref="T:System.ReadOnlySpan`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[<span data-ttu-id="49aaa-102">C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) del lenguaje C# y el [For Each... Siguiente](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construcción en Visual Basic oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="49aaa-102">The C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) of the C# language and the [For Each...Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construct in Visual Basic hides the complexity of enumerators.</span></span> <span data-ttu-id="49aaa-103">En lugar de manipular directamente el enumerador mediante `foreach` o `For Each...Next` se recomienda.</span><span class="sxs-lookup"><span data-stu-id="49aaa-103">Instead of directly manipulating the enumerator, using `foreach` or `For Each...Next` is recommended.</span></span> 

<span data-ttu-id="49aaa-104">Inicialmente, el enumerador se coloca antes del primer elemento en el <xref:System.ReadOnlySpan`1>.</span><span class="sxs-lookup"><span data-stu-id="49aaa-104">Initially, the enumerator is positioned before the first element in the <xref:System.ReadOnlySpan`1>.</span></span> <span data-ttu-id="49aaa-105">En esta posición, el valor de propiedad <xref:System.ReadOnlySpan`1.Enumerator.Current> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="49aaa-105">At this position, <xref:System.ReadOnlySpan`1.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="49aaa-106">Debe llamar a <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> para avanzar el enumerador hasta el primer elemento de la <xref:System.ReadOnlySpan`1> antes de leer el valor de <xref:System.ReadOnlySpan`1.Enumerator.Current>.</span><span class="sxs-lookup"><span data-stu-id="49aaa-106">You must call <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> to advance the enumerator to the first item in the <xref:System.ReadOnlySpan`1> before reading the value of <xref:System.ReadOnlySpan`1.Enumerator.Current>.</span></span>

<span data-ttu-id="49aaa-107"><xref:System.ReadOnlySpan`1.Enumerator.Current> Devuelve el mismo valor hasta <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="49aaa-107"><xref:System.ReadOnlySpan`1.Enumerator.Current> returns the same value until <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="49aaa-108"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> establece <xref:System.ReadOnlySpan`1.Enumerator.Current> al elemento siguiente en el <xref:System.ReadOnlySpan`1>.</span><span class="sxs-lookup"><span data-stu-id="49aaa-108"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> sets <xref:System.ReadOnlySpan`1.Enumerator.Current> to the next item in the <xref:System.ReadOnlySpan`1>.</span></span>

<span data-ttu-id="49aaa-109">Si <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> pasa el final de la <xref:System.ReadOnlySpan`1>, <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="49aaa-109">If <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> passes the end of the <xref:System.ReadOnlySpan`1>, <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="49aaa-110">Cuando el enumerador está en este estado, las llamadas subsiguientes a <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> también devolver `false` y <xref:System.ReadOnlySpan`1.Enumerator.Current> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="49aaa-110">When the enumerator is at this state, subsequent calls to <xref:System.ReadOnlySpan`1.Enumerator.MoveNext%2A> also return `false` and <xref:System.ReadOnlySpan`1.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="49aaa-111">No puede establecer <xref:System.ReadOnlySpan`1.Enumerator.Current> al primer elemento en el <xref:System.ReadOnlySpan`1> , debe crear una nueva instancia de enumerador en su lugar.</span><span class="sxs-lookup"><span data-stu-id="49aaa-111">You cannot set <xref:System.ReadOnlySpan`1.Enumerator.Current> to the first item in the <xref:System.ReadOnlySpan`1> again; you must create a new enumerator instance instead.</span></span> 

<span data-ttu-id="49aaa-112">Aunque el <xref:System.ReadOnlySpan`1> en la pila, los datos subyacentes en el que se asigna el <xref:System.ReadOnlySpan`1> puntos, no puede ser.</span><span class="sxs-lookup"><span data-stu-id="49aaa-112">Though the <xref:System.ReadOnlySpan`1> is allocated on the stack, the underlying data on which the <xref:System.ReadOnlySpan`1> points to, may not be.</span></span> <span data-ttu-id="49aaa-113">Por lo tanto, enumerar a través de un <xref:System.ReadOnlySpan`1> no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="49aaa-113">Therefore, enumerating through a <xref:System.ReadOnlySpan`1> is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="49aaa-114">Para garantizar la seguridad para subprocesos durante la enumeración, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="49aaa-114">To guarantee thread safety during enumeration, you must implement your own synchronization.</span></span>

<span data-ttu-id="49aaa-115">A diferencia de algunas otras estructuras de enumerador en. NET, el <xref:System.ReadOnlySpan`1.Enumerator>:</span><span class="sxs-lookup"><span data-stu-id="49aaa-115">Unlike some other enumerator structures in .NET, the <xref:System.ReadOnlySpan`1.Enumerator>:</span></span>

- <span data-ttu-id="49aaa-116">No implementa la <xref:System.Collections.IEnumerator> o <xref:System.Collections.Generic.IEnumerator`1> interfaz.</span><span class="sxs-lookup"><span data-stu-id="49aaa-116">Does not implement the <xref:System.Collections.IEnumerator> or <xref:System.Collections.Generic.IEnumerator`1> interface.</span></span> <span data-ttu-id="49aaa-117">Esto es porque <xref:System.ReadOnlySpan`1.Enumerator> es un [ref struct](~/docs/csharp/language-reference/keywords/ref.md#ref-struct-types) y no se puede realizar la conversión boxing.</span><span class="sxs-lookup"><span data-stu-id="49aaa-117">This is because <xref:System.ReadOnlySpan`1.Enumerator> is a [ref struct](~/docs/csharp/language-reference/keywords/ref.md#ref-struct-types) and cannot be boxed.</span></span>

- <span data-ttu-id="49aaa-118">No incluye un `Reset` método, que puede establecer el enumerador en su posición inicial delante del primer elemento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="49aaa-118">Does not include a `Reset` method, which can set the enumerator to its initial position before the first element in the span.</span></span> <span data-ttu-id="49aaa-119">(El <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> método debe implementarse como parte de la interfaz, pero la mayoría de los implementadores producirán una excepción o no proporcionan ninguna implementación.)</span><span class="sxs-lookup"><span data-stu-id="49aaa-119">(The <xref:System.Collections.IEnumerator.Reset?displayProperty=nameWithType> method must be implemented as part of the interface, but most implementors either throw an exception or provide no implementation.)</span></span>]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T&amp; Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance T&amp; modreq(System.Runtime.InteropServices.InAttribute) Current" />
      <MemberSignature Language="DocId" Value="P:System.ReadOnlySpan`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T&amp;" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T&amp; ^ Current { T&amp; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : T&amp;" Usage="System.ReadOnlySpan&lt;'T&gt;.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
          <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T&amp;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49aaa-120">Obtiene una referencia al elemento en la posición actual del enumerador.</span><span class="sxs-lookup"><span data-stu-id="49aaa-120">Gets a reference to the item at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="49aaa-121">Elemento de <see cref="T:System.ReadOnlySpan`1" /> en la posición actual del enumerador.</span><span class="sxs-lookup"><span data-stu-id="49aaa-121">The element in the <see cref="T:System.ReadOnlySpan`1" /> at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="49aaa-122">`Current` no está definida en cualquiera de las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="49aaa-122">`Current` is undefined under either of the following conditions:</span></span> 

- <span data-ttu-id="49aaa-123">Inmediatamente después de crea el enumerador, el enumerador se coloca antes del primer elemento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="49aaa-123">Immediately after the enumerator is created, the enumerator is positioned before the first element in the span.</span></span> <span data-ttu-id="49aaa-124"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> debe llamarse para hacer avanzar el enumerador al primer elemento del intervalo antes de leer el valor de `Current`.</span><span class="sxs-lookup"><span data-stu-id="49aaa-124"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> must be called to advance the enumerator to the first element of the span before reading the value of `Current`.</span></span>

- <span data-ttu-id="49aaa-125">La última llamada a <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> devuelve `false`, lo que indica el final del intervalo.</span><span class="sxs-lookup"><span data-stu-id="49aaa-125">The last call to <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> returned `false`, which indicates the end of the span.</span></span> 

<span data-ttu-id="49aaa-126">`Current` Devuelve el mismo valor hasta <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> se llama.</span><span class="sxs-lookup"><span data-stu-id="49aaa-126">`Current` returns the same value until <xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> is called.</span></span> <span data-ttu-id="49aaa-127"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> establece `Current` al siguiente elemento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="49aaa-127"><xref:System.ReadOnlySpan`1.Enumerator.MoveNext*> sets `Current` to the next item in the span.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlySpan`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49aaa-128">Desplaza el enumerador al siguiente elemento de <see cref="System.ReadOnlySpan`1" />.</span><span class="sxs-lookup"><span data-stu-id="49aaa-128">Advances the enumerator to the next item of the <see cref="System.ReadOnlySpan`1" />.</span></span></summary>
        <returns><span data-ttu-id="49aaa-129">`true` si el enumerador se ha desplazado correctamente al elemento siguiente; `false` si se ha pasado el final del intervalo.</span><span class="sxs-lookup"><span data-stu-id="49aaa-129">`true` if the enumerator successfully advanced to the next item; `false` if the end of the span has been passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="49aaa-130">Después de crea un enumerador, se coloca antes del primer elemento en el intervalo y la primera llamada a `MoveNext` desplaza el enumerador al primer elemento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="49aaa-130">After an enumerator is created, it is positioned before the first element in the span, and the first call to `MoveNext` advances the enumerator to the first item in the span.</span></span> 

<span data-ttu-id="49aaa-131">Si `MoveNext` pasa el final del intervalo, `MoveNext` devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="49aaa-131">If `MoveNext` passes the end of the span, `MoveNext` returns `false`.</span></span> <span data-ttu-id="49aaa-132">Cuando el enumerador está en este estado, las llamadas subsiguientes a `MoveNext` también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="49aaa-132">When the enumerator is at this state, subsequent calls to `MoveNext` also return `false`.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="UriTemplate" FullName="System.UriTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c5369c5abe5d9e9960b62dbedb70eb1206e353b" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57916106" /></Metadata><TypeSignature Language="C#" Value="public class UriTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UriTemplate extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.UriTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class UriTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriTemplate" />
  <TypeSignature Language="F#" Value="type UriTemplate = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="305a5-101">Una clase que representa una plantilla de identificador uniforme de recursos (URI).</span><span class="sxs-lookup"><span data-stu-id="305a5-101">A class that represents a Uniform Resource Identifier (URI) template.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305a5-102">Una plantilla URI le permite definir un conjunto de URI estructuralmente similares.</span><span class="sxs-lookup"><span data-stu-id="305a5-102">A URI template allows you to define a set of structurally similar URIs.</span></span> <span data-ttu-id="305a5-103">Las plantillas se componen de dos partes, una ruta de acceso y una consulta.</span><span class="sxs-lookup"><span data-stu-id="305a5-103">Templates are composed of two parts, a path and a query.</span></span> <span data-ttu-id="305a5-104">Una ruta de acceso consiste en una serie de segmentos delimitados por una barra diagonal (/).</span><span class="sxs-lookup"><span data-stu-id="305a5-104">A path consists of a series of segments delimited by a slash (/).</span></span> <span data-ttu-id="305a5-105">Cada segmento puede tener un valor literal, un valor variable (escrito entre llaves [{ }], necesariamente debe coincidir con el contenido exacto de un segmento), o un carácter comodín (se escribe como un asterisco [\*] y coincide con "el resto de la ruta de acceso"), que debe aparecer al final de la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="305a5-105">Each segment can have a literal value, a variable value (written within curly braces [{ }], constrained to match the contents of exactly one segment), or a wildcard (written as an asterisk [\*], which matches "the rest of the path"), which must appear at the end of the path.</span></span> <span data-ttu-id="305a5-106">La expresión de consulta puede omitirse completamente.</span><span class="sxs-lookup"><span data-stu-id="305a5-106">The query expression can be omitted entirely.</span></span> <span data-ttu-id="305a5-107">Si está presente, especifica una serie no ordenada de pares nombre/valor.</span><span class="sxs-lookup"><span data-stu-id="305a5-107">If present, it specifies an unordered series of name/value pairs.</span></span> <span data-ttu-id="305a5-108">Los elementos de la expresión de consulta pueden ser pares literales (?x=2) o pares variables (?x = {val}).</span><span class="sxs-lookup"><span data-stu-id="305a5-108">Elements of the query expression can be either literal pairs (?x=2) or variable pairs (?x={val}).</span></span> <span data-ttu-id="305a5-109">No se permiten los valores no emparejados.</span><span class="sxs-lookup"><span data-stu-id="305a5-109">Unpaired values are not permitted.</span></span> <span data-ttu-id="305a5-110">Los ejemplos siguientes muestran las cadenas de plantilla válidas:</span><span class="sxs-lookup"><span data-stu-id="305a5-110">The following examples show valid template strings:</span></span>  
  
-   <span data-ttu-id="305a5-111">"tiempo/WA/Seattle"</span><span class="sxs-lookup"><span data-stu-id="305a5-111">"weather/WA/Seattle"</span></span>  
  
-   <span data-ttu-id="305a5-112">"tiempo/{estado}/{ciudad}"</span><span class="sxs-lookup"><span data-stu-id="305a5-112">"weather/{state}/{city}"</span></span>  
  
-   <span data-ttu-id="305a5-113">"tiempo/\*"</span><span class="sxs-lookup"><span data-stu-id="305a5-113">"weather/\*"</span></span>  
  
-   <span data-ttu-id="305a5-114">"tiempo/{estado}/{ciudad}?previsión=hoy</span><span class="sxs-lookup"><span data-stu-id="305a5-114">"weather/{state}/{city}?forecast=today</span></span>  
  
-   <span data-ttu-id="305a5-115">"tiempo/{estado}/{ciudad}?previsión={día}</span><span class="sxs-lookup"><span data-stu-id="305a5-115">"weather/{state}/{city}?forecast={day}</span></span>  
  
 <span data-ttu-id="305a5-116">Las plantillas URI anteriores se podrían utilizar para organizar informes del tiempo.</span><span class="sxs-lookup"><span data-stu-id="305a5-116">The preceding URI templates might be used for organizing weather reports.</span></span> <span data-ttu-id="305a5-117">Los segmentos encerrados en llaves son las variables, todo lo demás es un literal.</span><span class="sxs-lookup"><span data-stu-id="305a5-117">Segments enclosed in curly braces are variables, everything else is a literal.</span></span> <span data-ttu-id="305a5-118">Puede convertir una instancia <xref:System.UriTemplate> en <xref:System.Uri> reemplazando las variables con valores reales.</span><span class="sxs-lookup"><span data-stu-id="305a5-118">You can convert a <xref:System.UriTemplate> instance into a <xref:System.Uri> by replacing variables with actual values.</span></span> <span data-ttu-id="305a5-119">Por ejemplo, tomando la plantilla "tiempo/{estado}/{ciudad}" y metiendo los valores para las variables "{estado}" y "{ciudad}" le da "tiempo/WA/Seattle".</span><span class="sxs-lookup"><span data-stu-id="305a5-119">For example, taking the template "weather/{state}/{city}" and putting in values for the variables "{state}" and "{city}" gives you "weather/WA/Seattle".</span></span> <span data-ttu-id="305a5-120">Dado un URI de candidato, puede probar si coincide con una plantilla URI determinada llamando a <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>.</span><span class="sxs-lookup"><span data-stu-id="305a5-120">Given a candidate URI, you can test whether it matches a given URI template by calling <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>.</span></span> <span data-ttu-id="305a5-121">También puede utilizar instancias <xref:System.UriTemplate> para crear <xref:System.Uri> a partir de un conjunto de valores variables llamando <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> o <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="305a5-121">You can also use <xref:System.UriTemplate> instances to create a <xref:System.Uri> from a set of variable values by calling <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> or <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="305a5-122">El código siguiente muestra cómo crear una instancia de <xref:System.UriTemplate>, cómo enlazarla con un URI candidato y hacerla coincidir con él.</span><span class="sxs-lookup"><span data-stu-id="305a5-122">The following code demonstrates how to create a <xref:System.UriTemplate> instance, and bind and match it to a candidate URI.</span></span>  
  
 [!code-csharp[UriTemplate#0](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#0)]
 [!code-vb[UriTemplate#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="305a5-123">Inicializa una nueva instancia de la clase <see cref="T:System.UriTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="305a5-123">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string -&gt; UriTemplate" Usage="new System.UriTemplate template" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="305a5-124">La plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-124">The template.</span></span></param>
        <summary><span data-ttu-id="305a5-125">Inicializa una instancia nueva de la clase <see cref="T:System.UriTemplate" /> con la cadena de plantilla especificada.</span><span class="sxs-lookup"><span data-stu-id="305a5-125">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class with the specified template string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="305a5-126">El siguiente ejemplo muestra cómo llamar al constructor.</span><span class="sxs-lookup"><span data-stu-id="305a5-126">The following example shows how to call the constructor.</span></span>  
  
 [!code-csharp[UriTemplate#1](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#1)]
 [!code-vb[UriTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * bool -&gt; UriTemplate" Usage="new System.UriTemplate (template, ignoreTrailingSlash)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="305a5-127">Cadena de plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-127">The template string.</span></span></param>
        <param name="ignoreTrailingSlash"><span data-ttu-id="305a5-128">Valor que especifica si se deberían omitir los caracteres de la barra oblicua final "/".</span><span class="sxs-lookup"><span data-stu-id="305a5-128">A value that specifies whether trailing slash "/" characters should be ignored.</span></span></param>
        <summary><span data-ttu-id="305a5-129">Inicializa una nueva instancia de la clase <see cref="T:System.UriTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="305a5-129">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305a5-130">Cuando `ignoreTrailingSlash` establece como `true`, se omiten las barras oblicuas final al final de la plantilla al hacer coincidir con un URI candidato.</span><span class="sxs-lookup"><span data-stu-id="305a5-130">When the `ignoreTrailingSlash` is set to `true`, trailing slashes on the end of template are ignored when matching a candidate URI.</span></span> <span data-ttu-id="305a5-131">Por ejemplo, una plantilla, como "http://www.microsoft.com/customer/" coincidiría con los URI candidato siguientes:</span><span class="sxs-lookup"><span data-stu-id="305a5-131">For example, a template such as "http://www.microsoft.com/customer/" would match the following candidate URIs:</span></span>  
  
-   <span data-ttu-id="305a5-132">"http://www.microsoft.com/customer/"</span><span class="sxs-lookup"><span data-stu-id="305a5-132">"http://www.microsoft.com/customer/"</span></span>  
  
-   <span data-ttu-id="305a5-133">"http://www.microsoft.com/customer"</span><span class="sxs-lookup"><span data-stu-id="305a5-133">"http://www.microsoft.com/customer"</span></span>  
  
-   <span data-ttu-id="305a5-134">"http://www.microsoft.com/customer/?wsdl"</span><span class="sxs-lookup"><span data-stu-id="305a5-134">"http://www.microsoft.com/customer/?wsdl"</span></span>  
  
-   <span data-ttu-id="305a5-135">"http://www.microsoft.com/customer?wsdl"</span><span class="sxs-lookup"><span data-stu-id="305a5-135">"http://www.microsoft.com/customer?wsdl"</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; UriTemplate" Usage="new System.UriTemplate (template, additionalDefaults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="305a5-136">Cadena de plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-136">The template string.</span></span></param>
        <param name="additionalDefaults"><span data-ttu-id="305a5-137">Diccionario que contiene una lista de valores predeterminados de los parámetros de la plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-137">A dictionary that contains a list of default values for the template parameters.</span></span></param>
        <summary><span data-ttu-id="305a5-138">Inicializa una nueva instancia de la clase <see cref="T:System.UriTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="305a5-138">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * bool * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; UriTemplate" Usage="new System.UriTemplate (template, ignoreTrailingSlash, additionalDefaults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="305a5-139">Cadena de plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-139">The template string.</span></span></param>
        <param name="ignoreTrailingSlash"><span data-ttu-id="305a5-140"><see langword="true" /> si los caracteres de barra diagonal "/" finales se ignoran; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="305a5-140"><see langword="true" /> if the trailing slash "/" characters are ignored; otherwise <see langword="false" />.</span></span></param>
        <param name="additionalDefaults"><span data-ttu-id="305a5-141">Diccionario que contiene una lista de valores predeterminados de los parámetros de la plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-141">A dictionary that contains a list of default values for the template parameters.</span></span></param>
        <summary><span data-ttu-id="305a5-142">Inicializa una nueva instancia de la clase <see cref="T:System.UriTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="305a5-142">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BindByName">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="305a5-143">Crea un nuevo URI a partir de la plantilla y la colección de parámetros.</span><span class="sxs-lookup"><span data-stu-id="305a5-143">Creates a new URI from the template and the collection of parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String)) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="305a5-144">Dirección base.</span><span class="sxs-lookup"><span data-stu-id="305a5-144">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="305a5-145">Diccionario que contiene una colección de pares de nombre-valor de parámetros.</span><span class="sxs-lookup"><span data-stu-id="305a5-145">A dictionary that contains a collection of parameter name/value pairs.</span></span></param>
        <summary><span data-ttu-id="305a5-146">Crea un nuevo URI a partir de la plantilla y la colección de parámetros.</span><span class="sxs-lookup"><span data-stu-id="305a5-146">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="305a5-147">Identificador URI.</span><span class="sxs-lookup"><span data-stu-id="305a5-147">A URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305a5-148">El [IDictionary\<string, string >](xref:System.Collections.Generic.IDictionary%602) parámetro contiene una colección de pares de nombre y valor de parámetro.</span><span class="sxs-lookup"><span data-stu-id="305a5-148">The [IDictionary\<string,string>](xref:System.Collections.Generic.IDictionary%602) parameter contains a collection of parameter name and value pairs.</span></span> <span data-ttu-id="305a5-149">Los parámetros se hacen coincidir con las variables dentro de la plantilla por una comparación sin distinción entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="305a5-149">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="305a5-150">La colección de nombre/valor pasada a este método debe contener una clave para cada variable de plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-150">The name/value collection passed to this method must contain a key for every template variable.</span></span> <span data-ttu-id="305a5-151">Los pares de nombre-valor adicionales que no coinciden con variables de plantilla se anexan a la cadena de consulta del último URI.</span><span class="sxs-lookup"><span data-stu-id="305a5-151">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="305a5-152">Es posible pasar texto dentro de los pares de nombre-valor que evitarán que el URI generado coincida con la plantilla que se utiliza para generarlo.</span><span class="sxs-lookup"><span data-stu-id="305a5-152">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="305a5-153">Son ejemplos de ese texto: '/', '..', '\*', '{', y '}'.</span><span class="sxs-lookup"><span data-stu-id="305a5-153">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Specialized.NameValueCollection -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="305a5-154">Dirección base.</span><span class="sxs-lookup"><span data-stu-id="305a5-154">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="305a5-155">Valores de parámetro.</span><span class="sxs-lookup"><span data-stu-id="305a5-155">The parameter values.</span></span></param>
        <summary><span data-ttu-id="305a5-156">Crea un nuevo URI a partir de la plantilla y la colección de parámetros.</span><span class="sxs-lookup"><span data-stu-id="305a5-156">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="305a5-157">Nueva instancia.</span><span class="sxs-lookup"><span data-stu-id="305a5-157">A new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305a5-158">El parámetro <xref:System.Collections.Specialized.NameValueCollection> contiene una colección de pares de nombre-valor de parámetro.</span><span class="sxs-lookup"><span data-stu-id="305a5-158">The <xref:System.Collections.Specialized.NameValueCollection> parameter contains a collection of parameter name/value pairs.</span></span> <span data-ttu-id="305a5-159">Los parámetros se hacen coincidir con las variables dentro de la plantilla por una comparación sin distinción entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="305a5-159">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span> <span data-ttu-id="305a5-160">Se escapan los valores pasados en esta colección.</span><span class="sxs-lookup"><span data-stu-id="305a5-160">Values passed in this collection are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="305a5-161">La colección de nombre/valor pasada a <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> debe contener una clave para cada variable de plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-161">The name/value collection passed to <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> must contain a key for every template variable.</span></span> <span data-ttu-id="305a5-162">Los pares de nombre-valor adicionales que no coinciden con variables de plantilla se anexan a la cadena de consulta del último URI.</span><span class="sxs-lookup"><span data-stu-id="305a5-162">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="305a5-163">Es posible pasar texto dentro de los pares de nombre-valor que evitarán que el URI generado coincida con la plantilla que se utiliza para generarlo.</span><span class="sxs-lookup"><span data-stu-id="305a5-163">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="305a5-164">Son ejemplos de ese texto: '/', '..', '\*', '{', y '}'.</span><span class="sxs-lookup"><span data-stu-id="305a5-164">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="305a5-165">En el ejemplo siguiente se muestra cómo llamar al método <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29>.</span><span class="sxs-lookup"><span data-stu-id="305a5-165">The following example shows how to call the <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#4](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#4)]
 [!code-vb[UriTemplate#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String), omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters, bool omitDefaults);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * bool -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters, omitDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="305a5-166">URI que contiene la dirección base.</span><span class="sxs-lookup"><span data-stu-id="305a5-166">A URI that contains the base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="305a5-167">Diccionario que contiene una colección de pares de nombre-valor de parámetros.</span><span class="sxs-lookup"><span data-stu-id="305a5-167">A dictionary that contains a collection of parameter name/value pairs.</span></span></param>
        <param name="omitDefaults"><span data-ttu-id="305a5-168"><see langword="true" /> si los valores predeterminados se ignoran; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="305a5-168"><see langword="true" /> is the default values are ignored; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="305a5-169">Crea un nuevo URI a partir de la plantilla y la colección de parámetros.</span><span class="sxs-lookup"><span data-stu-id="305a5-169">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="305a5-170">Identificador URI.</span><span class="sxs-lookup"><span data-stu-id="305a5-170">A URI.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection, omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters, bool omitDefaults);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Specialized.NameValueCollection * bool -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters, omitDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="305a5-171">Dirección base.</span><span class="sxs-lookup"><span data-stu-id="305a5-171">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="305a5-172">Colección de pares de nombre-valor de parámetros.</span><span class="sxs-lookup"><span data-stu-id="305a5-172">A collection of parameter name/value pairs.</span></span></param>
        <param name="omitDefaults"><span data-ttu-id="305a5-173"><see langword="true" /> si los valores predeterminados se ignoran; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="305a5-173"><see langword="true" /> if the default values are ignored; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="305a5-174">Crea un nuevo URI a partir de la plantilla y la colección de parámetros.</span><span class="sxs-lookup"><span data-stu-id="305a5-174">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="305a5-175">Identificador URI.</span><span class="sxs-lookup"><span data-stu-id="305a5-175">A URI.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByPosition">
      <MemberSignature Language="C#" Value="public Uri BindByPosition (Uri baseAddress, params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByPosition(class System.Uri baseAddress, string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByPosition(System.Uri,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByPosition (baseAddress As Uri, ParamArray values As String()) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByPosition(Uri ^ baseAddress, ... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.BindByPosition : Uri * string[] -&gt; Uri" Usage="uriTemplate.BindByPosition (baseAddress, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="values" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="305a5-176"><see cref="T:System.Uri" /> que contiene la dirección base.</span><span class="sxs-lookup"><span data-stu-id="305a5-176">A <see cref="T:System.Uri" /> that contains the base address.</span></span></param>
        <param name="values"><span data-ttu-id="305a5-177">Valores de parámetro.</span><span class="sxs-lookup"><span data-stu-id="305a5-177">The parameter values.</span></span></param>
        <summary><span data-ttu-id="305a5-178">Crea un nuevo URI a partir de la plantilla y una matriz de valores de parámetro.</span><span class="sxs-lookup"><span data-stu-id="305a5-178">Creates a new URI from the template and an array of parameter values.</span></span></summary>
        <returns><span data-ttu-id="305a5-179">Nueva instancia de <see cref="T:System.Uri" />.</span><span class="sxs-lookup"><span data-stu-id="305a5-179">A new <see cref="T:System.Uri" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305a5-180">Los valores de parámetro se enlazan por posición de izquierda a derecha.</span><span class="sxs-lookup"><span data-stu-id="305a5-180">The parameter values are bound by position left to right.</span></span> <span data-ttu-id="305a5-181">El primer valor de parámetro reemplaza la primera variable situada en la plantilla, el segundo valor de parámetro reemplaza la segunda variable, etc.</span><span class="sxs-lookup"><span data-stu-id="305a5-181">The first parameter value replaces the first variable found in the template, the second parameter value replaces the second variable, and so on.</span></span> <span data-ttu-id="305a5-182">Se escapan las variables pasadas a este método.</span><span class="sxs-lookup"><span data-stu-id="305a5-182">Variables passed to this method are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="305a5-183">El número de parámetros pasados al parámetro de valores debe coincidir con el número de variables de la plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-183">The number of parameters passed in the values parameter must match the number of variables in the template.</span></span> <span data-ttu-id="305a5-184">Si no, se produce una <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="305a5-184">If not, a <xref:System.FormatException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="305a5-185">Es posible pasar texto dentro de la matriz de valores de parámetro, lo que evita que el URI generado coincida con la plantilla que se utiliza para generarlo.</span><span class="sxs-lookup"><span data-stu-id="305a5-185">It is possible to pass in text within the parameter values array that prevents the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="305a5-186">Son ejemplos de ese texto: '/', '.','..', '\*', '{', y '}'.</span><span class="sxs-lookup"><span data-stu-id="305a5-186">Examples of such text includes: '/', '.','..', '\*', '{', and '}'.</span></span> <span data-ttu-id="305a5-187">El código siguiente muestra cómo hacerlo.</span><span class="sxs-lookup"><span data-stu-id="305a5-187">The following code demonstrates this.</span></span>  
  
 `UriTemplate template = new UriTemplate("far/{bat}/baz");`  
  
 `Uri uri = new Uri("http://localhost/Base");`  
  
 `Uri result = template.BindByPosition(uri, ".");   // returns Base/form/baz`  
  
 `Uri result = template.BindByPosition(uri, "..");  // returns Base/baz`  
  
 `Uri result = template.BindByPosition(uri, "x/y");  // returns Base/form/x/y/baz`  
  
 `Uri result = template.BindByPosition(uri, "{x}");  // returns Base/form/{x}/baz`  
  
 `Uri result = template.BindByPosition(uri, "*");  // returns Base/form/*/baz`  
  
   
  
## Examples  
 <span data-ttu-id="305a5-188">En el ejemplo siguiente se muestra cómo llamar a <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="305a5-188">The following example shows how to call the <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
 [!code-csharp[UriTemplate#5](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#5)]
 [!code-vb[UriTemplate#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Defaults">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Defaults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Defaults" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.Defaults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Defaults As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Defaults { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Defaults : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.UriTemplate.Defaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="305a5-189">Obtiene una colección de pares de nombre-valor para cualquier valor de parámetro predeterminado.</span><span class="sxs-lookup"><span data-stu-id="305a5-189">Gets a collection of name/value pairs for any default parameter values.</span></span></summary>
        <value><span data-ttu-id="305a5-190">Diccionario genérico.</span><span class="sxs-lookup"><span data-stu-id="305a5-190">A generic dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreTrailingSlash">
      <MemberSignature Language="C#" Value="public bool IgnoreTrailingSlash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreTrailingSlash" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.IgnoreTrailingSlash" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreTrailingSlash As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreTrailingSlash { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreTrailingSlash : bool" Usage="System.UriTemplate.IgnoreTrailingSlash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="305a5-191">Especifica si las barras diagonales "/" finales de la plantilla se deben ignorar cuando coincidan con los URI candidatos.</span><span class="sxs-lookup"><span data-stu-id="305a5-191">Specifies whether trailing slashes "/" in the template should be ignored when matching candidate URIs.</span></span></summary>
        <value><span data-ttu-id="305a5-192"><see langword="true" /> Si las barras diagonales "/" finales se deben omitir; de lo contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="305a5-192"><see langword="true" /> if trailing slashes "/" should be ignored, otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentTo">
      <MemberSignature Language="C#" Value="public bool IsEquivalentTo (UriTemplate other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEquivalentTo(class System.UriTemplate other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.IsEquivalentTo(System.UriTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEquivalentTo (other As UriTemplate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEquivalentTo(UriTemplate ^ other);" />
      <MemberSignature Language="F#" Value="member this.IsEquivalentTo : UriTemplate -&gt; bool" Usage="uriTemplate.IsEquivalentTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UriTemplate" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="305a5-193">
  <see cref="T:System.UriTemplate" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="305a5-193">The <see cref="T:System.UriTemplate" /> to compare.</span></span></param>
        <summary><span data-ttu-id="305a5-194">Indica si un <see cref="T:System.UriTemplate" /> es estructuralmente equivalente a otro.</span><span class="sxs-lookup"><span data-stu-id="305a5-194">Indicates whether a <see cref="T:System.UriTemplate" /> is structurally equivalent to another.</span></span></summary>
        <returns><span data-ttu-id="305a5-195"><see langword="true" />, si <see cref="T:System.UriTemplate" /> es estructuralmente equivalente a otro; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="305a5-195"><see langword="true" /> if the <see cref="T:System.UriTemplate" /> is structurally equivalent to another; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305a5-196">Dos instancias de <xref:System.UriTemplate> son equivalentes si sus cadenas literales son idénticas y las variables aparecen en los mismos segmentos.</span><span class="sxs-lookup"><span data-stu-id="305a5-196">Two <xref:System.UriTemplate> instances are equivalent if their literal strings are identical and the variables appear in the same segments.</span></span> <span data-ttu-id="305a5-197">Por ejemplo "tiempo/{estado}/{ciudad}" es equivalente "tiempo/{país}/{pueblo}".</span><span class="sxs-lookup"><span data-stu-id="305a5-197">For example "weather/{state}/{city}" is equivalent to "weather/{country}/{village}".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="305a5-198">En el ejemplo siguiente se muestra cómo llamar a <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>.</span><span class="sxs-lookup"><span data-stu-id="305a5-198">The following example shows how to call the <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>.</span></span>  
  
 [!code-csharp[UriTemplate#6](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#6)]
 [!code-vb[UriTemplate#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public UriTemplateMatch Match (Uri baseAddress, Uri candidate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.UriTemplateMatch Match(class System.Uri baseAddress, class System.Uri candidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.Match(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (baseAddress As Uri, candidate As Uri) As UriTemplateMatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateMatch ^ Match(Uri ^ baseAddress, Uri ^ candidate);" />
      <MemberSignature Language="F#" Value="member this.Match : Uri * Uri -&gt; UriTemplateMatch" Usage="uriTemplate.Match (baseAddress, candidate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriTemplateMatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="candidate" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="305a5-199">Dirección base.</span><span class="sxs-lookup"><span data-stu-id="305a5-199">The base address.</span></span></param>
        <param name="candidate"><span data-ttu-id="305a5-200"><see cref="T:System.Uri" /> para coincidir con la plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-200">The <see cref="T:System.Uri" /> to match against the template.</span></span></param>
        <summary><span data-ttu-id="305a5-201">Intenta hacer coincidir un <see cref="T:System.Uri" /> con un <see cref="T:System.UriTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="305a5-201">Attempts to match a <see cref="T:System.Uri" /> to a <see cref="T:System.UriTemplate" />.</span></span></summary>
        <returns><span data-ttu-id="305a5-202">Instancia.</span><span class="sxs-lookup"><span data-stu-id="305a5-202">An instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305a5-203">Si la coincidencia tiene éxito, <xref:System.UriTemplateMatch> se rellena con los segmentos de URI, valores variables, valores de cadena de consulta, y segmentos comodín del URI candidato.</span><span class="sxs-lookup"><span data-stu-id="305a5-203">If the match is successful the <xref:System.UriTemplateMatch> is populated with the URI segments, variable values, query string values, and wildcard segments from the candidate URI.</span></span> <span data-ttu-id="305a5-204">Si la coincidencia es incorrecta, se devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="305a5-204">If the match is unsuccessful, `null` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="305a5-205">En el ejemplo siguiente se muestra cómo llamar al método <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>.</span><span class="sxs-lookup"><span data-stu-id="305a5-205">The following example shows how to call the <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#7](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#7)]
 [!code-vb[UriTemplate#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSegmentVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; PathSegmentVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; PathSegmentVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.PathSegmentVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSegmentVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ PathSegmentVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathSegmentVariableNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.UriTemplate.PathSegmentVariableNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="305a5-206">Obtiene una colección de nombres de variable utilizados dentro de los segmentos de la ruta de acceso de la plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-206">Gets a collection of variable names used within path segments in the template.</span></span></summary>
        <value><span data-ttu-id="305a5-207">Una colección de nombres de variable que aparecen dentro del segmento de la ruta de acceso de la plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-207">A collection of variable names that appear within the template's path segment.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305a5-208">La colección excluye los nombres de variables que aparecen en la parte de la consulta de la plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-208">The collection excludes the names of variables that appear in the query portion of the template.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="305a5-209">En el siguiente ejemplo se muestra cómo se obtiene acceso a la propiedad <xref:System.UriTemplate.PathSegmentVariableNames%2A>.</span><span class="sxs-lookup"><span data-stu-id="305a5-209">The following example shows how to access the <xref:System.UriTemplate.PathSegmentVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#2](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#2)]
 [!code-vb[UriTemplate#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryValueVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; QueryValueVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; QueryValueVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.QueryValueVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryValueVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ QueryValueVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryValueVariableNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.UriTemplate.QueryValueVariableNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="305a5-210">Obtiene una colección de nombres de variable utilizada dentro de la cadena de consulta de la plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-210">Gets a collection of variable names used within the query string in the template.</span></span></summary>
        <value><span data-ttu-id="305a5-211">Colección de nombres de variable de la plantilla que aparecen en la parte de la consulta de la cadena de la plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-211">A collection of template variable names that appear in the query portion of the template string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="305a5-212">Esta colección excluye nombres de variable que aparecen en la sección de ruta de acceso de la cadena de la plantilla.</span><span class="sxs-lookup"><span data-stu-id="305a5-212">This collection excludes variable names that appear in the path section of the template string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="305a5-213">En el siguiente ejemplo se muestra cómo se obtiene acceso a la propiedad <xref:System.UriTemplate.QueryValueVariableNames%2A>.</span><span class="sxs-lookup"><span data-stu-id="305a5-213">The following example shows how to access the <xref:System.UriTemplate.QueryValueVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#3](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#3)]
 [!code-vb[UriTemplate#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uriTemplate.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="305a5-214">Devuelve la representación de la cadena de la instancia <see cref="T:System.UriTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="305a5-214">Returns a string representation of the <see cref="T:System.UriTemplate" /> instance.</span></span></summary>
        <returns><span data-ttu-id="305a5-215">Representación de la instancia de <see cref="T:System.UriTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="305a5-215">The representation of the <see cref="T:System.UriTemplate" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="305a5-216">En el ejemplo siguiente se muestra cómo llamar al método <xref:System.UriTemplate.ToString>.</span><span class="sxs-lookup"><span data-stu-id="305a5-216">The following example shows how to call the <xref:System.UriTemplate.ToString> method.</span></span>  
  
 [!code-csharp[UriTemplate#8](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#8)]
 [!code-vb[UriTemplate#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
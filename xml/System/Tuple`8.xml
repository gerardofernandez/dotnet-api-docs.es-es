<Type Name="Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c5da4af93ad7b061e8a044bcad37e9192c6c78b1" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52610672" /></Metadata><TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`8&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`8" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename TRest&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
    <TypeParameter Name="T7" />
    <TypeParameter Name="TRest" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="42baa-101">Tipo del primer componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="42baa-102">Tipo del segundo componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="42baa-103">Tipo del tercer componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-103">The type of the tuple's third component.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="42baa-104">Tipo del cuarto componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-104">The type of the tuple's fourth component.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="42baa-105">Tipo del quinto componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-105">The type of the tuple's fifth component.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="42baa-106">Tipo del sexto componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-106">The type of the tuple's sixth component.</span></span></typeparam>
    <typeparam name="T7"><span data-ttu-id="42baa-107">Tipo del séptimo componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-107">The type of the tuple's seventh component.</span></span></typeparam>
    <typeparam name="TRest"><span data-ttu-id="42baa-108">Cualquier objeto <see langword="Tuple" /> genérico que defina los tipos de los componentes restantes de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-108">Any generic <see langword="Tuple" /> object that defines the types of the tuple's remaining components.</span></span></typeparam>
    <summary><span data-ttu-id="42baa-109">Representa una tupla de *n*, donde *n* es 8 o más.</span><span class="sxs-lookup"><span data-stu-id="42baa-109">Represents an *n*-tuple, where *n* is 8 or greater.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-110">Una tupla es una estructura de datos que tiene un número específico y la secuencia de valores.</span><span class="sxs-lookup"><span data-stu-id="42baa-110">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="42baa-111">El <xref:System.Tuple%608> clase representa un *n*- tupla que tiene ocho o más componentes.</span><span class="sxs-lookup"><span data-stu-id="42baa-111">The <xref:System.Tuple%608> class represents an *n*-tuple that has eight or more components.</span></span>  
  
 <span data-ttu-id="42baa-112">Puede crear instancias de un <xref:System.Tuple%608> objeto con exactamente ocho componentes mediante una llamada a estático <xref:System.Tuple.Create%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="42baa-112">You can instantiate a <xref:System.Tuple%608> object with exactly eight components by calling the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="42baa-113">El ejemplo siguiente crea una tupla de 8 (óctupla) que contiene números primos menores que 20.</span><span class="sxs-lookup"><span data-stu-id="42baa-113">The following example creates an 8-tuple (octuple) that contains prime numbers that are less than 20.</span></span> <span data-ttu-id="42baa-114">Tenga en cuenta que usa la inferencia de tipo para determinar el tipo de cada componente.</span><span class="sxs-lookup"><span data-stu-id="42baa-114">Note that it uses type inference to determine the type of each component.</span></span>  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 <span data-ttu-id="42baa-115">También puede crear una instancia un objeto de tupla de n con ocho o más componentes mediante una llamada a la <xref:System.Tuple%608.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="42baa-115">You can also instantiate an n-tuple object with eight or more components by calling the <xref:System.Tuple%608.%23ctor%2A> constructor.</span></span> <span data-ttu-id="42baa-116">En el ejemplo siguiente se usa el <xref:System.Tuple%608.%23ctor%2A> constructor para crear una tupla de 8 que es equivalente a la tupla creada en el ejemplo anterior.</span><span class="sxs-lookup"><span data-stu-id="42baa-116">The following example uses the <xref:System.Tuple%608.%23ctor%2A> constructor to create an 8-tuple that is equivalent to the tuple created in the previous example.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]
 [!code-vb[System.Tuple\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="42baa-117">Para crear una tupla de n con nueve o más componentes, debe llamar a la <xref:System.Tuple%608.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="42baa-117">To create an n-tuple with nine or more components, you must call the  <xref:System.Tuple%608.%23ctor%2A> constructor.</span></span> <span data-ttu-id="42baa-118">Los métodos de generador estático de la <xref:System.Tuple> clase no admiten la creación de `Tuple` objetos con más de ocho componentes.</span><span class="sxs-lookup"><span data-stu-id="42baa-118">The static factory methods of the <xref:System.Tuple> class do not support the creation of `Tuple` objects with more than eight components.</span></span>  
  
 <span data-ttu-id="42baa-119">Para crear instancias de una tupla de n que tiene ocho o más componentes con el <xref:System.Tuple%608.%23ctor%2A> constructor, proporcione un tipo genérico `Tuple` objeto como el `rest` parámetro para definir el octavo al *n*componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-119">To instantiate an n-tuple that has eight or more components with the <xref:System.Tuple%608.%23ctor%2A> constructor, you supply a generic `Tuple` object as the `rest` parameter to define the eighth through *n*th components of the tuple.</span></span> <span data-ttu-id="42baa-120">Anidando genérico `Tuple` objetos de este modo, puede crear una tupla con ninguna limitación práctica en el número de sus componentes.</span><span class="sxs-lookup"><span data-stu-id="42baa-120">By nesting generic `Tuple` objects in this way, you can create a tuple that has no practical limitation on the number of its components.</span></span>  
  
 <span data-ttu-id="42baa-121">El ejemplo siguiente crea una tupla de 17 que contiene los datos de población de la ciudad de Detroit, Michigan, de cada censo nacional de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="42baa-121">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each national census from 1860 to 2000.</span></span> <span data-ttu-id="42baa-122">El primer componente de la tupla es el nombre de la ciudad.</span><span class="sxs-lookup"><span data-stu-id="42baa-122">The first component of the tuple is the city name.</span></span> <span data-ttu-id="42baa-123">El segundo componente es la fecha de inicio de la serie de datos y el tercer componente es la población en la fecha de inicio.</span><span class="sxs-lookup"><span data-stu-id="42baa-123">The second component is the start date of the data series, and the third component is the population at the start date.</span></span> <span data-ttu-id="42baa-124">Cada componente subsiguiente proporciona la población en intervalos de diez años.</span><span class="sxs-lookup"><span data-stu-id="42baa-124">Each subsequent component provides the population at decade intervals.</span></span> <span data-ttu-id="42baa-125">La tupla de 17 se crea mediante el anidamiento un <xref:System.Tuple%603> objeto dentro de un <xref:System.Tuple%608> objeto.</span><span class="sxs-lookup"><span data-stu-id="42baa-125">The 17-tuple is created by nesting a <xref:System.Tuple%603> object inside a <xref:System.Tuple%608> object.</span></span> <span data-ttu-id="42baa-126">(Eso es, el <xref:System.Tuple%603> objeto se proporciona como el valor de la `rest` parámetro en el <xref:System.Tuple%608> constructor de clase.) Esto <xref:System.Tuple%608> objeto, a su vez, anidado en un exterior <xref:System.Tuple%608> objeto.</span><span class="sxs-lookup"><span data-stu-id="42baa-126">(That is, the <xref:System.Tuple%603> object is supplied as the value of the `rest` parameter in the <xref:System.Tuple%608> class constructor.) This <xref:System.Tuple%608> object is, in turn, nested in an outer <xref:System.Tuple%608> object.</span></span> <span data-ttu-id="42baa-127">(Eso es, el <xref:System.Tuple%608> objeto se proporciona como el valor de la `rest` parámetro en el exterior <xref:System.Tuple%608> constructor de clase del objeto.)</span><span class="sxs-lookup"><span data-stu-id="42baa-127">(That is, the <xref:System.Tuple%608> object is supplied as the value of the `rest` parameter in the outer <xref:System.Tuple%608> object's class constructor.)</span></span>  
  
 [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]
 [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  
  
 <span data-ttu-id="42baa-128">Puede recuperar el valor de los siete primeros componentes de la tupla mediante el uso de solo lectura <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, y <xref:System.Tuple%607.Item7%2A> propiedades de la instancia.</span><span class="sxs-lookup"><span data-stu-id="42baa-128">You can retrieve the value of the tuple's first seven components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties.</span></span> <span data-ttu-id="42baa-129">Los componentes adicionales están anidados y se pueden recuperar desde el <xref:System.Tuple%608.Rest%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="42baa-129">Any additional components are nested and can be retrieved from the <xref:System.Tuple%608.Rest%2A> property.</span></span> <span data-ttu-id="42baa-130">En el ejemplo anterior, el <xref:System.Tuple%608.Item1%2A> a través de <xref:System.Tuple%608.Item7%2A> propiedades recuperan el primer al séptimo componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-130">In the previous example, the <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties retrieve the first through seventh components of the tuple.</span></span> <span data-ttu-id="42baa-131">El octavo al decimocuarto componentes se encuentran en la tupla que está anidada en el segundo nivel y se representan mediante el `Rest.Item1` a través de `Rest.Item7` propiedades.</span><span class="sxs-lookup"><span data-stu-id="42baa-131">The eighth through fourteenth components are contained in the tuple that is nested at the second level, and are represented by the `Rest.Item1` through `Rest.Item7` properties.</span></span> <span data-ttu-id="42baa-132">Los componentes de Decimoséptimo decimoquinta a través se encuentran en la tupla que está anidada en el tercer nivel y se representan mediante el `Rest.Rest.Item1` aunque `Rest.Rest.Item3` propiedades.</span><span class="sxs-lookup"><span data-stu-id="42baa-132">The fifteenth through seventeenth components are contained in the tuple that is nested at the third level, and are represented by the `Rest.Rest.Item1` though `Rest.Rest.Item3` properties.</span></span>  
  
 <span data-ttu-id="42baa-133">Las tuplas se usan normalmente de cuatro maneras diferentes:</span><span class="sxs-lookup"><span data-stu-id="42baa-133">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="42baa-134">Para representar un único conjunto de datos.</span><span class="sxs-lookup"><span data-stu-id="42baa-134">To represent a single set of data.</span></span> <span data-ttu-id="42baa-135">Por ejemplo, una tupla puede representar un registro de base de datos y sus componentes pueden representar campos individuales del registro.</span><span class="sxs-lookup"><span data-stu-id="42baa-135">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="42baa-136">Para proporcionar un acceso sencillo a y la manipulación de un conjunto de datos.</span><span class="sxs-lookup"><span data-stu-id="42baa-136">To provide easy access to, and manipulation of, a data set.</span></span>  
  
-   <span data-ttu-id="42baa-137">Para devolver varios valores de un método sin el uso de `out` parámetros (en C#) o `ByRef` parámetros (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="42baa-137">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="42baa-138">Por ejemplo, el ejemplo anterior devuelve sus estadísticas calculadas, junto con el nombre de la ciudad, en un <xref:System.Tuple%607> objeto.</span><span class="sxs-lookup"><span data-stu-id="42baa-138">For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.</span></span>  
  
-   <span data-ttu-id="42baa-139">Para pasar varios valores a un método a través de un solo parámetro.</span><span class="sxs-lookup"><span data-stu-id="42baa-139">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="42baa-140">Por ejemplo, el <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> método tiene un parámetro único que le permite proporcionar un valor para el método que el subproceso se ejecuta en el inicio.</span><span class="sxs-lookup"><span data-stu-id="42baa-140">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="42baa-141">Si proporciona un <xref:System.Tuple%607> objeto como argumento de método, puede proporcionar la rutina de inicio del subproceso con siete elementos de datos.</span><span class="sxs-lookup"><span data-stu-id="42baa-141">If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the thread's startup routine with seven items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6, !T7 item7, !TRest rest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7, rest As TRest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt; : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'Rest -&gt; Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;" Usage="new System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt; (item1, item2, item3, item4, item5, item6, item7, rest)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
        <Parameter Name="rest" Type="TRest" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="42baa-142">Valor del primer componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-142">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="42baa-143">Valor del segundo componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-143">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="42baa-144">Valor del tercer componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-144">The value of the tuple's third component.</span></span></param>
        <param name="item4"><span data-ttu-id="42baa-145">Valor del cuarto componente de la tupla</span><span class="sxs-lookup"><span data-stu-id="42baa-145">The value of the tuple's fourth component</span></span></param>
        <param name="item5"><span data-ttu-id="42baa-146">Valor del quinto componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-146">The value of the tuple's fifth component.</span></span></param>
        <param name="item6"><span data-ttu-id="42baa-147">Valor del sexto componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-147">The value of the tuple's sixth component.</span></span></param>
        <param name="item7"><span data-ttu-id="42baa-148">Valor del séptimo componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-148">The value of the tuple's seventh component.</span></span></param>
        <param name="rest"><span data-ttu-id="42baa-149">Cualquier objeto <see langword="Tuple" /> genérico que contenga los valores de los restantes componentes de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-149">Any generic <see langword="Tuple" /> object that contains the values of the tuple's remaining components.</span></span></param>
        <summary><span data-ttu-id="42baa-150">Inicializa una nueva instancia de la clase <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="42baa-150">Initializes a new instance of the <see cref="T:System.Tuple`8" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-151">También puede usar estático <xref:System.Tuple.Create%2A?displayProperty=nameWithType> método para crear instancias de un objeto de tupla de 8 (óctupla) sin tener que especificar explícitamente los tipos de sus componentes.</span><span class="sxs-lookup"><span data-stu-id="42baa-151">You can also use the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate an 8-tuple (octuple) object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="42baa-152">En el ejemplo siguiente se usa el <xref:System.Tuple.Create%2A?displayProperty=nameWithType> método para crear instancias de un objeto de tupla de 8 que contiene números primos menores que 20.</span><span class="sxs-lookup"><span data-stu-id="42baa-152">The following example uses the <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate an 8-tuple object that contains prime numbers that are less than 20.</span></span>  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 <span data-ttu-id="42baa-153">Esto es equivalente a la siguiente llamada a la <xref:System.Tuple%607.%23ctor%2A> constructor de clase.</span><span class="sxs-lookup"><span data-stu-id="42baa-153">This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]
 [!code-vb[System.Tuple\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  
  
 <span data-ttu-id="42baa-154">Sin embargo, estático <xref:System.Tuple.Create%2A?displayProperty=nameWithType> método no se puede usar para crear un objeto de tupla con más de ocho componentes.</span><span class="sxs-lookup"><span data-stu-id="42baa-154">However, the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method cannot be used to create a tuple object with more than eight components.</span></span>  
  
 <span data-ttu-id="42baa-155">Cuando se usa el <xref:System.Tuple%608.%23ctor%2A> constructor para crear una tupla de n con ocho o más componentes, usa el `rest` parámetro para crear una tupla de n anidada que tiene entre uno y siete componentes.</span><span class="sxs-lookup"><span data-stu-id="42baa-155">When using the <xref:System.Tuple%608.%23ctor%2A> constructor to create an n-tuple with eight or more components, you use the `rest` parameter to create a nested n-tuple that has from one to seven components.</span></span> <span data-ttu-id="42baa-156">Mediante el uso de niveles de anidamiento sucesivos, puede crear una tupla de n que tiene un número prácticamente ilimitado de componentes.</span><span class="sxs-lookup"><span data-stu-id="42baa-156">By using successive levels of nesting, you can create an n-tuple that has a virtually unlimited number of components.</span></span> <span data-ttu-id="42baa-157">Por ejemplo, para crear una tupla de 25, crear una instancia de un <xref:System.Tuple%608> objeto con tres niveles de anidamiento, como sigue:</span><span class="sxs-lookup"><span data-stu-id="42baa-157">For example, to create a 25-tuple, you instantiate a <xref:System.Tuple%608> object with three levels of nesting, as follows:</span></span>  
  
-   <span data-ttu-id="42baa-158">Exterior <xref:System.Tuple%608> objeto contiene el primer al séptimo componente.</span><span class="sxs-lookup"><span data-stu-id="42baa-158">The outermost <xref:System.Tuple%608> object contains the first through seventh components.</span></span> <span data-ttu-id="42baa-159">Su <xref:System.Tuple%608.Rest%2A> propiedad proporciona acceso a un <xref:System.Tuple%608> objeto en el primer nivel de anidamiento.</span><span class="sxs-lookup"><span data-stu-id="42baa-159">Its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the first level of nesting.</span></span>  
  
-   <span data-ttu-id="42baa-160">Anidado exterior <xref:System.Tuple%608> objeto contiene el componente octavo al decimocuarto y su <xref:System.Tuple%608.Rest%2A> propiedad proporciona acceso a un <xref:System.Tuple%608> objeto en el segundo nivel de anidamiento.</span><span class="sxs-lookup"><span data-stu-id="42baa-160">The outermost nested <xref:System.Tuple%608> object contains the eighth through fourteenth components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the second level of nesting.</span></span>  
  
-   <span data-ttu-id="42baa-161">El <xref:System.Tuple%608> objeto en el segundo nivel de anidamiento contiene del decimoquinto al vigésimo primer componente y su <xref:System.Tuple%608.Rest%2A> propiedad proporciona acceso a un <xref:System.Tuple%604> objeto en el tercer nivel de anidamiento.</span><span class="sxs-lookup"><span data-stu-id="42baa-161">The <xref:System.Tuple%608> object at the second level of nesting contains the fifteenth through twenty-first  components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%604> object at the third level of nesting.</span></span>  
  
-   <span data-ttu-id="42baa-162">La tupla más interna es un <xref:System.Tuple%604> objeto que contiene los componentes de veinticinco vigésimo segundo a través.</span><span class="sxs-lookup"><span data-stu-id="42baa-162">The innermost tuple is a <xref:System.Tuple%604> object that contains the twenty-second through twenty-fifth components.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42baa-163">El ejemplo siguiente crea una tupla de 17 que contiene los datos de población de la ciudad de Detroit, Michigan, de cada censo de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="42baa-163">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each census from 1860 to 2000.</span></span> <span data-ttu-id="42baa-164">El primer componente de la tupla es el nombre de la ciudad.</span><span class="sxs-lookup"><span data-stu-id="42baa-164">The first component of the tuple is the city name.</span></span> <span data-ttu-id="42baa-165">El segundo componente es la fecha de inicio de la serie de datos y el tercer componente es la población en la fecha de inicio.</span><span class="sxs-lookup"><span data-stu-id="42baa-165">The second component is the start date of the series of data, and the third component is the population at the start date.</span></span> <span data-ttu-id="42baa-166">Cada componente subsiguiente proporciona la población en intervalos de diez años.</span><span class="sxs-lookup"><span data-stu-id="42baa-166">Each subsequent component provides the population at decade intervals.</span></span> <span data-ttu-id="42baa-167">El ejemplo utiliza dos niveles de anidamiento para crear la tupla de 17: define una tupla de 7 cuyo componentes tercero a séptimo contienen datos de población de 1860 a 1900, una tupla de 7 anidada que contiene los datos de población de 1910 a 1970, e interior anidado 3-tupla que contiene datos de población de 1980 a 2000.</span><span class="sxs-lookup"><span data-stu-id="42baa-167">The example uses two layers of nesting to create the 17-tuple: It defines a 7-tuple whose third through seventh components contain population data for 1860 through 1900, a nested 7-tuple that contains population data for 1910 through 1970, and an inner nested 3-tuple that contains population data for 1980 through 2000.</span></span>  
  
 [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]
 [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="42baa-168"><paramref name="rest" /> no es un objeto <see langword="Tuple" /> genérico.</span><span class="sxs-lookup"><span data-stu-id="42baa-168"><paramref name="rest" /> is not a generic <see langword="Tuple" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="42baa-169">Objeto que se va a comparar con esta instancia.</span><span class="sxs-lookup"><span data-stu-id="42baa-169">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="42baa-170">Devuelve un valor que indica si el objeto <see cref="T:System.Tuple`8" /> actual es igual que el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="42baa-170">Returns a value that indicates whether the current <see cref="T:System.Tuple`8" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="42baa-171"><see langword="true" /> si la instancia actual es igual que el objeto especificado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="42baa-171"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-172">El `obj` parámetro se considera igual a la instancia actual si cumple todas las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="42baa-172">The `obj` parameter is considered to be equal to the current instance if it meets all the following conditions:</span></span>  
  
-   <span data-ttu-id="42baa-173">Es un <xref:System.Tuple%608> objeto.</span><span class="sxs-lookup"><span data-stu-id="42baa-173">It is a <xref:System.Tuple%608> object.</span></span>  
  
-   <span data-ttu-id="42baa-174">Tiene el mismo número total de componentes que son de los mismos tipos que la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-174">It has the same total number of components that are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="42baa-175">Sus componentes (incluidos los componentes anidados) son iguales a los de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-175">Its components (including its nested components) are equal to those of the current instance.</span></span> <span data-ttu-id="42baa-176">Igualdad viene determinada por el comparador de igualdad predeterminado para cada componente.</span><span class="sxs-lookup"><span data-stu-id="42baa-176">Equality is determined by the default equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42baa-177">En el ejemplo siguiente se define cinco <xref:System.Tuple%608> objetos que contienen números primos.</span><span class="sxs-lookup"><span data-stu-id="42baa-177">The following example defines five <xref:System.Tuple%608> objects that contain prime numbers.</span></span> <span data-ttu-id="42baa-178">A continuación, compara el primer objeto que tiene cada uno de los objetos restantes.</span><span class="sxs-lookup"><span data-stu-id="42baa-178">It then compares the first object with each of the remaining objects.</span></span> <span data-ttu-id="42baa-179">Como se muestra en la salida, solo el primer y último <xref:System.Tuple%608> objetos son iguales, porque tienen un número idéntico de componentes con valores idénticos.</span><span class="sxs-lookup"><span data-stu-id="42baa-179">As the output shows, only the first and the last <xref:System.Tuple%608> objects are equal, because they have an identical number of components with identical values.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`8.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="42baa-180">Calcula el código hash para el objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-180">Calculates the hash code for the current <see cref="T:System.Tuple`8" /> object.</span></span></summary>
        <returns><span data-ttu-id="42baa-181">Código hash de un entero de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="42baa-181">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42baa-182">Obtiene el valor del primer componente del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-182">Gets the value of the current <see cref="T:System.Tuple`8" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="42baa-183">Valor del primer componente del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-183">The value of the current <see cref="T:System.Tuple`8" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-184">Puede determinar dinámicamente el tipo de la <xref:System.Tuple%608.Item1%2A> componente en uno de dos maneras:</span><span class="sxs-lookup"><span data-stu-id="42baa-184">You can dynamically determine the type of the <xref:System.Tuple%608.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="42baa-185">Mediante una llamada a la `GetType` método en el valor devuelto por la <xref:System.Tuple%608.Item1%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="42baa-185">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="42baa-186">Recuperando el <xref:System.Type> objeto que representa el <xref:System.Tuple%608> objeto y recuperar el primer elemento de la matriz devuelta por su <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="42baa-186">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42baa-187">El ejemplo siguiente crea un objeto de tupla de 17 que contiene los datos de población de la ciudad de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="42baa-187">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="42baa-188">El primer componente de la tupla de 17 es el nombre de la ciudad.</span><span class="sxs-lookup"><span data-stu-id="42baa-188">The first component of the 17-tuple is the city name.</span></span> <span data-ttu-id="42baa-189">El ejemplo se usa el <xref:System.Tuple%608.Item1%2A> propiedad para mostrar el nombre de la ciudad en el encabezado de tabla antes de mostrar los datos de población.</span><span class="sxs-lookup"><span data-stu-id="42baa-189">The example uses the <xref:System.Tuple%608.Item1%2A> property to display the city name in the table header before displaying the population data.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42baa-190">Obtiene el valor del segundo componente del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-190">Gets the value of the current <see cref="T:System.Tuple`8" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="42baa-191">Valor del segundo componente del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-191">The value of the current <see cref="T:System.Tuple`8" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-192">Puede determinar dinámicamente el tipo de la <xref:System.Tuple%608.Item2%2A> componente en uno de dos maneras:</span><span class="sxs-lookup"><span data-stu-id="42baa-192">You can dynamically determine the type of the <xref:System.Tuple%608.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="42baa-193">Mediante una llamada a la `GetType` método en el valor devuelto por la <xref:System.Tuple%608.Item2%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="42baa-193">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="42baa-194">Recuperando el <xref:System.Type> objeto que representa el <xref:System.Tuple%608> de objetos y recuperando el segundo elemento de la matriz devuelta por su <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="42baa-194">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42baa-195">El ejemplo siguiente crea un objeto de tupla de 17 que contiene los datos de población de la ciudad de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="42baa-195">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="42baa-196">El segundo componente de la tupla de 17 es el primer año de la serie de datos.</span><span class="sxs-lookup"><span data-stu-id="42baa-196">The second component of the 17-tuple is the first year of the data series.</span></span> <span data-ttu-id="42baa-197">En el ejemplo se asigna el valor de la <xref:System.Tuple%608.Item2%2A> propiedad a una variable y, a continuación, utiliza esa variable para representar el año cuyos datos se muestran.</span><span class="sxs-lookup"><span data-stu-id="42baa-197">The example assigns the value of the <xref:System.Tuple%608.Item2%2A> property to a variable, and then uses that variable to represent the year whose data is displayed.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item3 : 'T3" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42baa-198">Obtiene el valor del tercer componente del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-198">Gets the value of the current <see cref="T:System.Tuple`8" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="42baa-199">Valor del tercer componente del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-199">The value of the current <see cref="T:System.Tuple`8" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-200">Puede determinar dinámicamente el tipo de la <xref:System.Tuple%608.Item3%2A> componente en uno de dos maneras:</span><span class="sxs-lookup"><span data-stu-id="42baa-200">You can dynamically determine the type of the <xref:System.Tuple%608.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="42baa-201">Mediante una llamada a la `GetType` método en el valor devuelto por la <xref:System.Tuple%608.Item3%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="42baa-201">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="42baa-202">Recuperando el <xref:System.Type> objeto que representa el <xref:System.Tuple%608> de objetos y recuperando el tercer elemento de la matriz devuelta por su <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="42baa-202">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42baa-203">El ejemplo siguiente crea un objeto de tupla de 17 que contiene los datos de población de la ciudad de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="42baa-203">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="42baa-204">El tercer componente de la tupla de 17 es la población de 1860.</span><span class="sxs-lookup"><span data-stu-id="42baa-204">The third component of the 17-tuple is the population in 1860.</span></span> <span data-ttu-id="42baa-205">El ejemplo se usa el <xref:System.Tuple%608.Item3%2A> propiedad para mostrar el valor de población y para calcular la tasa de cambio de población entre 1860 y 1870 anual.</span><span class="sxs-lookup"><span data-stu-id="42baa-205">The example uses the <xref:System.Tuple%608.Item3%2A> property to display the population value and to calculate the annual rate of population change between 1860 and 1870.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item4 : 'T4" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42baa-206">Obtiene el valor del cuarto componente del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-206">Gets the value of the current <see cref="T:System.Tuple`8" /> object's fourth component.</span></span></summary>
        <value><span data-ttu-id="42baa-207">Valor del cuarto componente del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-207">The value of the current <see cref="T:System.Tuple`8" /> object's fourth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-208">Puede determinar dinámicamente el tipo de la <xref:System.Tuple%608.Item4%2A> componente en uno de dos maneras:</span><span class="sxs-lookup"><span data-stu-id="42baa-208">You can dynamically determine the type of the <xref:System.Tuple%608.Item4%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="42baa-209">Mediante una llamada a la `GetType` método en el valor devuelto por la <xref:System.Tuple%608.Item4%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="42baa-209">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item4%2A> property.</span></span>  
  
-   <span data-ttu-id="42baa-210">Recuperando el <xref:System.Type> objeto que representa el <xref:System.Tuple%608> de objetos y recuperando el cuarto elemento de la matriz devuelta por su <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="42baa-210">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42baa-211">El ejemplo siguiente crea un objeto de tupla de 17 que contiene los datos de población de la ciudad de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="42baa-211">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="42baa-212">El cuarto componente de la tupla de 17 es la población de 1870.</span><span class="sxs-lookup"><span data-stu-id="42baa-212">The fourth component of the 17-tuple is the population in 1870.</span></span> <span data-ttu-id="42baa-213">El ejemplo se usa el <xref:System.Tuple%608.Item4%2A> propiedad para mostrar el valor de población y para calcular la tasa de cambio de población entre 1870 y 1880 anual.</span><span class="sxs-lookup"><span data-stu-id="42baa-213">The example uses the <xref:System.Tuple%608.Item4%2A> property to display the population value and to calculate the annual rate of population change between 1870 and 1880.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item5 : 'T5" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42baa-214">Obtiene el valor del quinto componente del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-214">Gets the value of the current <see cref="T:System.Tuple`8" /> object's fifth component.</span></span></summary>
        <value><span data-ttu-id="42baa-215">Valor del quinto componente del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-215">The value of the current <see cref="T:System.Tuple`8" /> object's fifth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-216">Puede determinar dinámicamente el tipo de la <xref:System.Tuple%608.Item5%2A> componente en uno de dos maneras:</span><span class="sxs-lookup"><span data-stu-id="42baa-216">You can dynamically determine the type of the <xref:System.Tuple%608.Item5%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="42baa-217">Mediante una llamada a la `GetType` método en el valor devuelto por la <xref:System.Tuple%608.Item5%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="42baa-217">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item5%2A> property.</span></span>  
  
-   <span data-ttu-id="42baa-218">Recuperando el <xref:System.Type> objeto que representa el <xref:System.Tuple%608> de objetos y recuperando el quinto elemento de la matriz devuelta por su <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="42baa-218">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42baa-219">El ejemplo siguiente crea un objeto de tupla de 17 que contiene los datos de población de la ciudad de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="42baa-219">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="42baa-220">El quinto componente de la tupla de 17 es la población de 1880.</span><span class="sxs-lookup"><span data-stu-id="42baa-220">The fifth component of the 17-tuple is the population in 1880.</span></span> <span data-ttu-id="42baa-221">El ejemplo se usa el <xref:System.Tuple%608.Item5%2A> propiedad para mostrar el valor de población y para calcular la tasa de cambio de población entre 1880 y 1890 anual.</span><span class="sxs-lookup"><span data-stu-id="42baa-221">The example uses the <xref:System.Tuple%608.Item5%2A> property to display the population value and to calculate the annual rate of population change between 1880 and 1890.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T6 Item6" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item6" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item6 As T6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T6 Item6 { T6 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item6 : 'T6" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42baa-222">Obtiene el valor del sexto componente del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-222">Gets the value of the current <see cref="T:System.Tuple`8" /> object's sixth component.</span></span></summary>
        <value><span data-ttu-id="42baa-223">Valor del sexto componente del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-223">The value of the current <see cref="T:System.Tuple`8" /> object's sixth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-224">Puede determinar dinámicamente el tipo de la <xref:System.Tuple%608.Item6%2A> componente en uno de dos maneras:</span><span class="sxs-lookup"><span data-stu-id="42baa-224">You can dynamically determine the type of the <xref:System.Tuple%608.Item6%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="42baa-225">Mediante una llamada a la `GetType` método en el valor devuelto por la <xref:System.Tuple%608.Item6%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="42baa-225">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item6%2A> property.</span></span>  
  
-   <span data-ttu-id="42baa-226">Recuperando el <xref:System.Type> objeto que representa el <xref:System.Tuple%608> de objetos y recuperando el sexto elemento de la matriz devuelta por su <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="42baa-226">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42baa-227">El ejemplo siguiente crea un objeto de tupla de 17 que contiene los datos de población de la ciudad de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="42baa-227">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="42baa-228">El sexto componente de la tupla de 17 es la población de 1890.</span><span class="sxs-lookup"><span data-stu-id="42baa-228">The sixth component of the 17-tuple is the population in 1890.</span></span> <span data-ttu-id="42baa-229">El ejemplo se usa el <xref:System.Tuple%608.Item6%2A> propiedad para mostrar el valor de población y para calcular la tasa de cambio de población entre 1900 y de 1890 anual.</span><span class="sxs-lookup"><span data-stu-id="42baa-229">The example uses the <xref:System.Tuple%608.Item6%2A> property to display the population value and to calculate the annual rate of population change between 1890 and 1900.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item7">
      <MemberSignature Language="C#" Value="public T7 Item7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T7 Item7" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item7" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item7 As T7" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T7 Item7 { T7 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item7 : 'T7" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Item7" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T7</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42baa-230">Obtiene el valor del séptimo componente del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-230">Gets the value of the current <see cref="T:System.Tuple`8" /> object's seventh component.</span></span></summary>
        <value><span data-ttu-id="42baa-231">Valor del séptimo componente del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-231">The value of the current <see cref="T:System.Tuple`8" /> object's seventh component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-232">Puede determinar dinámicamente el tipo de la <xref:System.Tuple%608.Item7%2A> componente en uno de dos maneras:</span><span class="sxs-lookup"><span data-stu-id="42baa-232">You can dynamically determine the type of the <xref:System.Tuple%608.Item7%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="42baa-233">Mediante una llamada a la `GetType` método en el valor devuelto por la <xref:System.Tuple%608.Item7%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="42baa-233">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item7%2A> property.</span></span>  
  
-   <span data-ttu-id="42baa-234">Recuperando el <xref:System.Type> objeto que representa el <xref:System.Tuple%608> de objetos y recuperando el séptimo elemento de la matriz devuelta por su <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="42baa-234">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42baa-235">El ejemplo siguiente crea un objeto de tupla de 17 que contiene los datos de población de la ciudad de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="42baa-235">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="42baa-236">El séptimo componente de la tupla de 17 es la población de 1900.</span><span class="sxs-lookup"><span data-stu-id="42baa-236">The seventh component of the 17-tuple is the population in 1900.</span></span> <span data-ttu-id="42baa-237">El ejemplo se usa el <xref:System.Tuple%608.Item7%2A> propiedad para mostrar el valor de población y para calcular la tasa de cambio de población entre 1900 y 1910 anual.</span><span class="sxs-lookup"><span data-stu-id="42baa-237">The example uses the <xref:System.Tuple%608.Item7%2A> property to display the population value and to calculate the annual rate of population change between 1900 and 1910.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rest">
      <MemberSignature Language="C#" Value="public TRest Rest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TRest Rest" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Rest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rest As TRest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TRest Rest { TRest get(); };" />
      <MemberSignature Language="F#" Value="member this.Rest : 'Rest" Usage="System.Tuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest&gt;.Rest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42baa-238">Obtiene los componentes restantes del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-238">Gets the current <see cref="T:System.Tuple`8" /> object's remaining components.</span></span></summary>
        <value><span data-ttu-id="42baa-239">Valor de los restantes componente del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-239">The value of the current <see cref="T:System.Tuple`8" /> object's remaining components.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-240">El <xref:System.Tuple%608.Rest%2A> devuelve una propiedad `Tuple` objeto que permite el acceso a la octava aunque *n*componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-240">The <xref:System.Tuple%608.Rest%2A> property returns a nested `Tuple` object that allows access to the eighth though *n*th components of the tuple.</span></span> <span data-ttu-id="42baa-241">Dependiendo del número total de componentes de la tupla, se pueden recuperar los valores del octavo al decimocuarto componentes desde anidado `Tuple` del objeto <xref:System.Tuple%608.Item1%2A> a través de <xref:System.Tuple%608.Item7%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="42baa-241">Depending on the total number of components in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested `Tuple` object's <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties.</span></span> <span data-ttu-id="42baa-242">A continuación, puede usar el <xref:System.Tuple%608.Rest%2A> propiedad de un anidado <xref:System.Tuple%608> objeto para recuperar el `Tuple` objeto en el siguiente nivel de anidamiento.</span><span class="sxs-lookup"><span data-stu-id="42baa-242">You can then use the <xref:System.Tuple%608.Rest%2A> property of a nested <xref:System.Tuple%608> object to retrieve the `Tuple` object at the next level of nesting.</span></span>  
  
 <span data-ttu-id="42baa-243">Puede determinar dinámicamente el número de componentes de un anidado `Tuple` objeto devuelto por la <xref:System.Tuple%608.Rest%2A> propiedad extrayendo el dígito de su nombre de tipo.</span><span class="sxs-lookup"><span data-stu-id="42baa-243">You can dynamically determine the number of components in a nested `Tuple` object that is returned by the <xref:System.Tuple%608.Rest%2A> property by extracting the digit from its type name.</span></span> <span data-ttu-id="42baa-244">Esto se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="42baa-244">The following example provides an illustration.</span></span>  
  
 [!code-vb[System.Tuple\`8.Item1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/rest.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="42baa-245">El ejemplo siguiente crea un objeto de tupla de 17 que contiene los datos de población de la ciudad de Detroit, Michigan, de 1860 a 2000.</span><span class="sxs-lookup"><span data-stu-id="42baa-245">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="42baa-246">El séptimo componente de la tupla de 17 es la población de 1900.</span><span class="sxs-lookup"><span data-stu-id="42baa-246">The seventh component of the 17-tuple is the population in 1900.</span></span> <span data-ttu-id="42baa-247">El ejemplo se usa el <xref:System.Tuple%608.Rest%2A> propiedad para recuperar los valores del octavo al decimocuarto componentes y se usa el <xref:System.Tuple%608.Rest%2A> propiedad de anidado <xref:System.Tuple%608> objeto para recuperar los valores de los componentes restantes.</span><span class="sxs-lookup"><span data-stu-id="42baa-247">The example uses the <xref:System.Tuple%608.Rest%2A> property to retrieve the values of the eighth through fourteenth components, and it uses the <xref:System.Tuple%608.Rest%2A> property of the nested <xref:System.Tuple%608> object to retrieve the values of the remaining components.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="42baa-248">Objeto que se va a comparar con la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-248">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="42baa-249">Un objeto que proporciona reglas personalizadas para la comparación.</span><span class="sxs-lookup"><span data-stu-id="42baa-249">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="42baa-250">Compara el objeto <see cref="T:System.Tuple`8" /> actual con un objeto especificado utilizando un comparador especificado y devuelve un entero que indica si el objeto actual precede o sigue al objeto especificado, o bien se encuentra en la misma posición que dicho objeto en el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="42baa-250">Compares the current <see cref="T:System.Tuple`8" /> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="42baa-251">Entero con signo que indica la posición relativa de esta instancia y <paramref name="other" /> en el criterio de ordenación, tal como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="42baa-251">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="42baa-252">Valor</span><span class="sxs-lookup"><span data-stu-id="42baa-252">Value</span></span> 
 </term><description> <span data-ttu-id="42baa-253">Descripción</span><span class="sxs-lookup"><span data-stu-id="42baa-253">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="42baa-254">Un entero negativo</span><span class="sxs-lookup"><span data-stu-id="42baa-254">A negative integer</span></span> 
 </term><description> <span data-ttu-id="42baa-255">Esta instancia precede a <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="42baa-255">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="42baa-256">Cero</span><span class="sxs-lookup"><span data-stu-id="42baa-256">Zero</span></span> 
 </term><description> <span data-ttu-id="42baa-257">En el criterio de ordenación, esta instancia y <paramref name="other" /> tienen la misma posición.</span><span class="sxs-lookup"><span data-stu-id="42baa-257">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="42baa-258">Un entero positivo.</span><span class="sxs-lookup"><span data-stu-id="42baa-258">A positive integer</span></span> 
 </term><description> <span data-ttu-id="42baa-259">Esta instancia es posterior a <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="42baa-259">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-260">Este miembro es una implementación de interfaz explícita.</span><span class="sxs-lookup"><span data-stu-id="42baa-260">This member is an explicit interface implementation.</span></span> <span data-ttu-id="42baa-261">Solo se puede utilizar cuando la instancia de <xref:System.Tuple%608> se convierte en una interfaz <xref:System.Collections.IStructuralComparable>.</span><span class="sxs-lookup"><span data-stu-id="42baa-261">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="42baa-262">Este método le permite definir las comparaciones personalizadas de <xref:System.Tuple%608> objetos.</span><span class="sxs-lookup"><span data-stu-id="42baa-262">This method lets you define customized comparisons of <xref:System.Tuple%608> objects.</span></span> <span data-ttu-id="42baa-263">Por ejemplo, puede usar este método al orden <xref:System.Tuple%608> objetos según el valor de un componente específico.</span><span class="sxs-lookup"><span data-stu-id="42baa-263">For example, you can use this method to order <xref:System.Tuple%608> objects based on the value of a specific component.</span></span>  
  
 <span data-ttu-id="42baa-264">Aunque puede llamar directamente a este método, normalmente se denomina mediante la ordenación de recopilación de los métodos que incluyen <xref:System.Collections.IComparer> parámetros para ordenar los miembros de una colección.</span><span class="sxs-lookup"><span data-stu-id="42baa-264">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="42baa-265">Por ejemplo, se llamó el <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> método y el <xref:System.Collections.SortedList.Add%2A> método de un <xref:System.Collections.SortedList> objeto cuyas instancias se crean mediante el uso de la <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span><span class="sxs-lookup"><span data-stu-id="42baa-265">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="42baa-266">El <xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> método está pensado para su uso en las operaciones de ordenación.</span><span class="sxs-lookup"><span data-stu-id="42baa-266">The <xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="42baa-267">No debe usarse cuando el propósito principal de una comparación es determinar si dos objetos son iguales.</span><span class="sxs-lookup"><span data-stu-id="42baa-267">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="42baa-268">Para determinar si dos objetos son iguales, llame a la <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="42baa-268">To determine whether two objects are equal, call the <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42baa-269">En el ejemplo siguiente se crea una matriz de <xref:System.Tuple%608> objetos que contiene los datos de población de cuatro ciudades de Estados Unidos de 1940 a 2000.</span><span class="sxs-lookup"><span data-stu-id="42baa-269">The following example creates an array of <xref:System.Tuple%608> objects that contains population data for four U.S. cities from 1940 to 2000.</span></span> <span data-ttu-id="42baa-270">Primer componente es de óctupla es el nombre de la ciudad.</span><span class="sxs-lookup"><span data-stu-id="42baa-270">The octuple's first component is the city name.</span></span> <span data-ttu-id="42baa-271">Los seis componentes restantes representan la población en intervalos de 10 años de 1940 a 2000.</span><span class="sxs-lookup"><span data-stu-id="42baa-271">The remaining six components represent the population at 10-year intervals from 1940 to 2000.</span></span>  
  
 <span data-ttu-id="42baa-272">El `PopulationComparer` clase proporciona un <xref:System.Collections.IComparer> implementación que permite a la matriz de óctuplas por cualquiera de sus componentes.</span><span class="sxs-lookup"><span data-stu-id="42baa-272">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of octuples to be sorted by any one of its components.</span></span> <span data-ttu-id="42baa-273">Se proporcionan dos valores para el `PopulationComparer` clase en su constructor: la posición del componente que define el criterio de ordenación, y un <xref:System.Boolean> valor que indica si los objetos de tupla deben ordenarse en orden ascendente o descendente.</span><span class="sxs-lookup"><span data-stu-id="42baa-273">Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="42baa-274">El ejemplo, a continuación, muestra los elementos de la matriz sin ordenar, ordena por el tercer componente (la población de 1950) y mostrarlos y, a continuación, ordena por el octavo componente (la población de 2000) y mostrarlos.</span><span class="sxs-lookup"><span data-stu-id="42baa-274">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1950) and displays them, and then sorts them by the eighth component (the population in 2000) and displays them.</span></span>  
  
 [!code-csharp[System.Tuple\`8.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`8.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="42baa-275"><paramref name="other" /> no es un objeto <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="42baa-275"><paramref name="other" /> is not a <see cref="T:System.Tuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="42baa-276">Objeto que se va a comparar con esta instancia.</span><span class="sxs-lookup"><span data-stu-id="42baa-276">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="42baa-277">Un objeto que define el método que se usará para evaluar si los dos objetos son iguales.</span><span class="sxs-lookup"><span data-stu-id="42baa-277">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="42baa-278">Devuelve un valor que indica si el objeto <see cref="T:System.Tuple`8" /> actual es igual que el objeto especificado según el método de comparación especificado.</span><span class="sxs-lookup"><span data-stu-id="42baa-278">Returns a value that indicates whether the current <see cref="T:System.Tuple`8" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns><span data-ttu-id="42baa-279"><see langword="true" /> si la instancia actual es igual que el objeto especificado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="42baa-279"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-280">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="42baa-280">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="42baa-281">Solo se puede utilizar cuando la instancia de <xref:System.Tuple%608> se convierte en una interfaz <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="42baa-281">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="42baa-282">El <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> se denomina implementación sólo si `other` no es `null`, y si puede ser correctamente, convierta (en C#) o convertir (en Visual Basic) a un <xref:System.Tuple%608> objeto que tiene el mismo número total de componentes (las de incluidas anidados `Tuple` objetos) de los mismos tipos que la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-282">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%608> object that has the same total number of components (including those in nested `Tuple` objects) of the same types as the current instance.</span></span> <span data-ttu-id="42baa-283">El <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> método primeras pasadas el <xref:System.Tuple%608.Item1%2A> valores de la <xref:System.Tuple%608> objetos que se comparará el <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementación.</span><span class="sxs-lookup"><span data-stu-id="42baa-283">The <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%608.Item1%2A> values of the <xref:System.Tuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="42baa-284">Si esta llamada al método devuelve `true`, el método se llama de nuevo y pasa el <xref:System.Tuple%608.Item2%2A> valores de las dos <xref:System.Tuple%608> objetos.</span><span class="sxs-lookup"><span data-stu-id="42baa-284">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%608.Item2%2A> values of the two <xref:System.Tuple%608> objects.</span></span> <span data-ttu-id="42baa-285">Este proceso continúa hasta que devuelva la llamada al método `false` cuando compara un par de valores o los dos <xref:System.Tuple%608.Rest%2A> valores se pasan al método.</span><span class="sxs-lookup"><span data-stu-id="42baa-285">This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.Tuple%608.Rest%2A> values are passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="42baa-286">Objeto cuyo método <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> calcula el código hash del objeto <see cref="T:System.Tuple`8" /> actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-286">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`8" /> object.</span></span></param>
        <summary><span data-ttu-id="42baa-287">Calcula el código hash del objeto <see cref="T:System.Tuple`8" /> actual usando el método de cálculo especificado.</span><span class="sxs-lookup"><span data-stu-id="42baa-287">Calculates the hash code for the current <see cref="T:System.Tuple`8" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="42baa-288">Código hash de un entero de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="42baa-288">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-289">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="42baa-289">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="42baa-290">Solo se puede utilizar cuando la instancia de <xref:System.Tuple%608> se convierte en una interfaz <xref:System.Collections.IStructuralEquatable>.</span><span class="sxs-lookup"><span data-stu-id="42baa-290">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="42baa-291">El método simplemente ajusta una llamada a la `comparer` del objeto <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementación.</span><span class="sxs-lookup"><span data-stu-id="42baa-291">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="42baa-292">El algoritmo utilizado para calcular el código hash debe devolver el mismo código hash para dos <xref:System.Tuple%608> objetos que se consideran iguales.</span><span class="sxs-lookup"><span data-stu-id="42baa-292">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%608> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="42baa-293">Objeto que se va a comparar con la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="42baa-293">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="42baa-294">Compara el objeto <see cref="T:System.Tuple`8" /> actual con un objeto especificado y devuelve un entero que indica si el objeto actual es anterior, posterior o está en la misma posición que el objeto especificado en el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="42baa-294">Compares the current <see cref="T:System.Tuple`8" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="42baa-295">Entero con signo que indica la posición relativa de esta instancia y <paramref name="obj" /> en el criterio de ordenación, tal como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="42baa-295">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="42baa-296">Valor</span><span class="sxs-lookup"><span data-stu-id="42baa-296">Value</span></span> 
 </term><description> <span data-ttu-id="42baa-297">Descripción</span><span class="sxs-lookup"><span data-stu-id="42baa-297">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="42baa-298">Un entero negativo</span><span class="sxs-lookup"><span data-stu-id="42baa-298">A negative integer</span></span> 
 </term><description> <span data-ttu-id="42baa-299">Esta instancia precede a <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="42baa-299">This instance precedes <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="42baa-300">Cero</span><span class="sxs-lookup"><span data-stu-id="42baa-300">Zero</span></span> 
 </term><description> <span data-ttu-id="42baa-301">En el criterio de ordenación, esta instancia y <paramref name="obj" /> tienen la misma posición.</span><span class="sxs-lookup"><span data-stu-id="42baa-301">This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="42baa-302">Un entero positivo.</span><span class="sxs-lookup"><span data-stu-id="42baa-302">A positive integer</span></span> 
 </term><description> <span data-ttu-id="42baa-303">Esta instancia es posterior a <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="42baa-303">This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-304">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="42baa-304">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="42baa-305">Solo se puede utilizar cuando la instancia de <xref:System.Tuple%608> se convierte en una interfaz <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="42baa-305">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="42baa-306">Este método proporciona la <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementación para el <xref:System.Tuple%608> clase.</span><span class="sxs-lookup"><span data-stu-id="42baa-306">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%608> class.</span></span> <span data-ttu-id="42baa-307">Aunque el método se puede llamar directamente, normalmente se denomina mediante las sobrecargas predeterminadas de ordenación a la colección de métodos, como <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> y <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, para ordenar los miembros de una colección.</span><span class="sxs-lookup"><span data-stu-id="42baa-307">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="42baa-308">El <xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> método está pensado para su uso en las operaciones de ordenación.</span><span class="sxs-lookup"><span data-stu-id="42baa-308">The <xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="42baa-309">No debe usarse cuando el propósito principal de una comparación es determinar si dos objetos son iguales.</span><span class="sxs-lookup"><span data-stu-id="42baa-309">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="42baa-310">Para determinar si dos objetos son iguales, llame a la <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="42baa-310">To determine whether two objects are equal, call the <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="42baa-311">Este método utiliza al comparador de objeto predeterminado para comparar cada componente.</span><span class="sxs-lookup"><span data-stu-id="42baa-311">This method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42baa-312">El ejemplo siguiente crea una matriz de óctuplas cuyos componentes son enteros que contienen un rango de números primos.</span><span class="sxs-lookup"><span data-stu-id="42baa-312">The following example creates an array of octuples whose components are integers that contain a range of prime numbers.</span></span> <span data-ttu-id="42baa-313">El ejemplo muestra los elementos de la matriz sin ordenar, ordena la matriz y, a continuación, muestra la matriz en el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="42baa-313">The example displays the elements of the array in unsorted order, sorts the array, and then displays the array in sorted order.</span></span> <span data-ttu-id="42baa-314">El resultado muestra que se ha ordenado la matriz por <xref:System.Tuple%608.Item1%2A>, o el primer componente de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-314">The output shows that the array has been sorted by <xref:System.Tuple%608.Item1%2A>, or the tuple's first component.</span></span> <span data-ttu-id="42baa-315">Tenga en cuenta que el ejemplo no llama directamente el <xref:System.Tuple%608.System%23IComparable%23CompareTo%28System.Object%29> método.</span><span class="sxs-lookup"><span data-stu-id="42baa-315">Note that the example does not directly call the <xref:System.Tuple%608.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="42baa-316">Este método se llama de forma implícita el <xref:System.Array.Sort%28System.Array%29> método para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="42baa-316">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`8.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`8.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="42baa-317"><paramref name="obj" /> no es un objeto <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="42baa-317"><paramref name="obj" /> is not a <see cref="T:System.Tuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="42baa-318">Índice del elemento <see langword="Tuple" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="42baa-318">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="42baa-319"><paramref name="index" /> puede oscilar entre 0 y <see langword="Item1" /> hasta uno menos que el número de elementos de <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="42baa-319"><paramref name="index" /> can range from 0 for <see langword="Item1" /> to one less than the number of elements in the <see langword="Tuple" />.</span></span></param>
        <summary><span data-ttu-id="42baa-320">Obtiene el valor del elemento <see langword="Tuple" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="42baa-320">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="42baa-321">Valor del elemento <see langword="Tuple" /> que se encuentra en la posición especificada.</span><span class="sxs-lookup"><span data-stu-id="42baa-321">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-322">El <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> propiedad es una implementación de interfaz explícita.</span><span class="sxs-lookup"><span data-stu-id="42baa-322">The <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="42baa-323">Para invocarlo, debe convertir o convertir el <xref:System.Tuple%608> objeto a un <xref:System.Runtime.CompilerServices.ITuple> objeto de interfaz.</span><span class="sxs-lookup"><span data-stu-id="42baa-323">To call it, you must cast or convert the <xref:System.Tuple%608> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="42baa-324"><paramref name="index" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="42baa-324"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="42baa-325">O bien</span><span class="sxs-lookup"><span data-stu-id="42baa-325">-or-</span></span> 
 <span data-ttu-id="42baa-326"><paramref name="index" /> es mayor o igual que <see cref="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />.</span><span class="sxs-lookup"><span data-stu-id="42baa-326"><paramref name="index" /> is greater than or equal to <see cref="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42baa-327">Obtiene el número de elementos de <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="42baa-327">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="42baa-328">Número de elementos incluidos en <see langword="Tuple" />.</span><span class="sxs-lookup"><span data-stu-id="42baa-328">The number of elements in the <see langword="Tuple" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-329">El <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> propiedad es una implementación de interfaz explícita.</span><span class="sxs-lookup"><span data-stu-id="42baa-329">The <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="42baa-330">Para invocarlo, debe convertir o convertir el <xref:System.Tuple%608> tipo a un <xref:System.Runtime.CompilerServices.ITuple> objeto de interfaz.</span><span class="sxs-lookup"><span data-stu-id="42baa-330">To call it, you must cast or convert the <xref:System.Tuple%608> type to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="42baa-331">Devuelve una cadena que representa el valor de esta instancia de <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="42baa-331">Returns a string that represents the value of this <see cref="T:System.Tuple`8" /> instance.</span></span></summary>
        <returns><span data-ttu-id="42baa-332">Representación en forma de cadena de este objeto <see cref="T:System.Tuple`8" />.</span><span class="sxs-lookup"><span data-stu-id="42baa-332">The string representation of this <see cref="T:System.Tuple`8" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42baa-333">La cadena devuelta por este método adopta la forma (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`,  *Item8*...), donde *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, y *Item7* representan los valores de la <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, y <xref:System.Tuple%608.Item7%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="42baa-333">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`, *Item8*…), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, and <xref:System.Tuple%608.Item7%2A> properties.</span></span> <span data-ttu-id="42baa-334">*Item8* representa el valor de la <xref:System.Tuple%608> del objeto `Next.Item1` propiedad.</span><span class="sxs-lookup"><span data-stu-id="42baa-334">*Item8* represents the value of the <xref:System.Tuple%608> object's `Next.Item1` property.</span></span> <span data-ttu-id="42baa-335">El valor de cualquier componente anidado adicional seguir *Item8*.</span><span class="sxs-lookup"><span data-stu-id="42baa-335">The value of any additional nested components follow *Item8*.</span></span> <span data-ttu-id="42baa-336">Si alguno de los valores de propiedad es `null`, se representa como <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="42baa-336">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42baa-337">El ejemplo siguiente crea una tupla de 17 que contiene los datos de población de la ciudad de Detroit, Michigan, de 1860 a 1900.</span><span class="sxs-lookup"><span data-stu-id="42baa-337">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, from 1860 to 1900.</span></span> <span data-ttu-id="42baa-338">A continuación, usa el <xref:System.Tuple%608.ToString%2A> método para mostrar los datos de la tupla.</span><span class="sxs-lookup"><span data-stu-id="42baa-338">It then uses the <xref:System.Tuple%608.ToString%2A> method to display the tuple's data.</span></span>  
  
 [!code-csharp[System.Tuple\`8.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`8.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
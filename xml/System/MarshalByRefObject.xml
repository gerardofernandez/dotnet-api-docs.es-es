<Type Name="MarshalByRefObject" FullName="System.MarshalByRefObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a11abc75f8da0008ceec8aae4b01f3240aff0074" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52360556" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract serializable beforefieldinit MarshalByRefObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.MarshalByRefObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarshalByRefObject abstract" />
  <TypeSignature Language="F#" Value="type MarshalByRefObject = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="28324-101">Habilita el acceso a objetos entre los límites de dominio de aplicación en aplicaciones que admiten el acceso remoto.</span>
      <span class="sxs-lookup">
        <span data-stu-id="28324-101">Enables access to objects across application domain boundaries in applications that support remoting.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28324-102">Un dominio de aplicación es una partición en un proceso de sistema operativo donde residen una o varias aplicaciones.</span><span class="sxs-lookup"><span data-stu-id="28324-102">An application domain is a partition in an operating system process where one or more applications reside.</span></span> <span data-ttu-id="28324-103">Los objetos en el mismo dominio de aplicación se comunican directamente.</span><span class="sxs-lookup"><span data-stu-id="28324-103">Objects in the same application domain communicate directly.</span></span> <span data-ttu-id="28324-104">Objetos en distintos dominios de aplicación se comunican mediante el transporte de copias de los objetos entre límites de dominio de aplicación, o mediante el uso de un proxy para intercambiar mensajes.</span><span class="sxs-lookup"><span data-stu-id="28324-104">Objects in different application domains communicate either by transporting copies of objects across application domain boundaries, or by using a proxy to exchange messages.</span></span>  
  
 <span data-ttu-id="28324-105"><xref:System.MarshalByRefObject> la clase base para los objetos que se comunican a través de los límites del dominio de aplicación mediante el intercambio de mensajes usa un proxy.</span><span class="sxs-lookup"><span data-stu-id="28324-105"><xref:System.MarshalByRefObject> is the base class for objects that communicate across application domain boundaries by exchanging messages using a proxy.</span></span> <span data-ttu-id="28324-106">Los objetos que no heredan de <xref:System.MarshalByRefObject> son implícitamente calcular las referencias por valor.</span><span class="sxs-lookup"><span data-stu-id="28324-106">Objects that do not inherit from <xref:System.MarshalByRefObject> are implicitly marshal by value.</span></span> <span data-ttu-id="28324-107">Cuando una aplicación remota hace referencia a un cálculo de referencias al objeto de valor, una copia del objeto se pasa a través de los límites del dominio de aplicación.</span><span class="sxs-lookup"><span data-stu-id="28324-107">When a remote application references a marshal by value object, a copy of the object is passed across application domain boundaries.</span></span>  
  
 <span data-ttu-id="28324-108"><xref:System.MarshalByRefObject> se tiene acceso a objetos directamente dentro de los límites del dominio de aplicación local.</span><span class="sxs-lookup"><span data-stu-id="28324-108"><xref:System.MarshalByRefObject> objects are accessed directly within the boundaries of the local application domain.</span></span> <span data-ttu-id="28324-109">Dominio de aplicación de la primera vez que una aplicación en un control remoto tiene acceso a un <xref:System.MarshalByRefObject>, se pasa un proxy a la aplicación remota.</span><span class="sxs-lookup"><span data-stu-id="28324-109">The first time an application in a remote application domain accesses a <xref:System.MarshalByRefObject>, a proxy is passed to the remote application.</span></span> <span data-ttu-id="28324-110">Las llamadas subsiguientes en el servidor proxy se calculan las referencias al objeto que se encuentran en el dominio de aplicación local.</span><span class="sxs-lookup"><span data-stu-id="28324-110">Subsequent calls on the proxy are marshaled back to the object residing in the local application domain.</span></span>  
  
 <span data-ttu-id="28324-111">Tipos deben heredar de <xref:System.MarshalByRefObject> cuando se utiliza el tipo en los límites del dominio de aplicación, y no se debe copiar el estado del objeto porque los miembros del objeto no se puede usar fuera del dominio de aplicación donde se crearon.</span><span class="sxs-lookup"><span data-stu-id="28324-111">Types must inherit from <xref:System.MarshalByRefObject> when the type is used across application domain boundaries, and the state of the object must not be copied because the members of the object are not usable outside the application domain where they were created.</span></span>  
  
 <span data-ttu-id="28324-112">Al derivar un objeto de <xref:System.MarshalByRefObject> para su uso en los límites del dominio de aplicación, no se debe reemplazar cualquiera de sus miembros, ni debe llamar a sus métodos directamente.</span><span class="sxs-lookup"><span data-stu-id="28324-112">When you derive an object from <xref:System.MarshalByRefObject> for use across application domain boundaries, you should not override any of its members, nor should you call its methods directly.</span></span> <span data-ttu-id="28324-113">El tiempo de ejecución reconoce que las clases derivadas de <xref:System.MarshalByRefObject> deben calcularse a través de los límites del dominio de aplicación.</span><span class="sxs-lookup"><span data-stu-id="28324-113">The runtime recognizes that classes derived from  <xref:System.MarshalByRefObject> should be marshaled across app domain boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28324-114">Esta sección contiene dos ejemplos de código.</span><span class="sxs-lookup"><span data-stu-id="28324-114">This section contains two code examples.</span></span> <span data-ttu-id="28324-115">El primer ejemplo de código muestra cómo crear una instancia de una clase en otro dominio de aplicación.</span><span class="sxs-lookup"><span data-stu-id="28324-115">The first code example shows how to create an instance of a class in another application domain.</span></span> <span data-ttu-id="28324-116">El segundo ejemplo de código muestra una clase sencilla que se puede usar para la comunicación remota.</span><span class="sxs-lookup"><span data-stu-id="28324-116">The second code example shows a simple class that can be used for remoting.</span></span>  
  
 <span data-ttu-id="28324-117">**Ejemplo 1**</span><span class="sxs-lookup"><span data-stu-id="28324-117">**Example 1**</span></span>  
  
 <span data-ttu-id="28324-118">El ejemplo de código siguiente muestra la manera más sencilla para ejecutar código en otro dominio de aplicación.</span><span class="sxs-lookup"><span data-stu-id="28324-118">The following code example shows the simplest way to execute code in another application domain.</span></span> <span data-ttu-id="28324-119">El ejemplo define una clase denominada `Worker` que herede <xref:System.MarshalByRefObject>, con un método que muestra el nombre del dominio de aplicación en el que se está ejecutando.</span><span class="sxs-lookup"><span data-stu-id="28324-119">The example defines a class named `Worker` that inherits <xref:System.MarshalByRefObject>, with a method that displays the name of the application domain in which it is executing.</span></span> <span data-ttu-id="28324-120">El ejemplo crea instancias de `Worker` en el dominio de aplicación predeterminado y en un dominio de aplicación.</span><span class="sxs-lookup"><span data-stu-id="28324-120">The example creates instances of `Worker` in the default application domain and in a new application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="28324-121">El ensamblado que contiene `Worker` deben cargarse en ambos dominios de aplicación, pero se podrían cargar otros ensamblados que existirán solo en el nuevo dominio de aplicación.</span><span class="sxs-lookup"><span data-stu-id="28324-121">The assembly that contains `Worker` must be loaded into both application domains, but it could load other assemblies that would exist only in the new application domain.</span></span>  
  
 [!code-cpp[CreateInstanceAndUnwrap2#1](~/samples/snippets/cpp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cpp/source.cpp#1)]
 [!code-csharp[CreateInstanceAndUnwrap2#1](~/samples/snippets/csharp/VS_Snippets_CLR/CreateInstanceAndUnwrap2/cs/source.cs#1)]
 [!code-vb[CreateInstanceAndUnwrap2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CreateInstanceAndUnwrap2/VB/source.vb#1)]  
  
 <span data-ttu-id="28324-122">**Ejemplo 2**</span><span class="sxs-lookup"><span data-stu-id="28324-122">**Example 2**</span></span>  
  
 <span data-ttu-id="28324-123">En el ejemplo siguiente se muestra una clase derivada de <xref:System.MarshalByRefObject> es decir, usa más adelante en remoting.</span><span class="sxs-lookup"><span data-stu-id="28324-123">The following example demonstrates a class derived from <xref:System.MarshalByRefObject> that is used later in remoting.</span></span>  
  
 [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CPP/source.cpp#1)]
 [!code-csharp[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/CS/source.cs#1)]
 [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RemotingServices.SetObjectUriForMarshal/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="28324-124">Inicializa una nueva instancia de la clase <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-124">Initializes a new instance of the <see cref="T:System.MarshalByRefObject" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObjRef">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.ObjRef CreateObjRef(class System.Type requestedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateObjRef (requestedType As Type) As ObjRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::ObjRef ^ CreateObjRef(Type ^ requestedType);" />
      <MemberSignature Language="F#" Value="abstract member CreateObjRef : Type -&gt; System.Runtime.Remoting.ObjRef&#xA;override this.CreateObjRef : Type -&gt; System.Runtime.Remoting.ObjRef" Usage="marshalByRefObject.CreateObjRef requestedType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="requestedType">
          <span data-ttu-id="28324-125">
            <see cref="T:System.Type" /> del objeto al que hará referencia el nuevo <see cref="T:System.Runtime.Remoting.ObjRef" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-125">The <see cref="T:System.Type" /> of the object that the new <see cref="T:System.Runtime.Remoting.ObjRef" /> will reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28324-126">Crea un objeto que contiene toda la información relevante necesaria para generar un proxy utilizado para comunicarse con un objeto remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-126">Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28324-127">Información necesaria para generar un proxy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-127">Information required to generate a proxy.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28324-128">El <xref:System.MarshalByRefObject.CreateObjRef%2A> llama al método métodos de creación del objeto remoto como <xref:System.AppDomain.CreateInstance%2A?displayProperty=nameWithType> y <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="28324-128">The <xref:System.MarshalByRefObject.CreateObjRef%2A> method is called by remote object creation methods such as <xref:System.AppDomain.CreateInstance%2A?displayProperty=nameWithType> and <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="28324-129">En la mayoría de los casos, no hace falta para invalidar este método.</span><span class="sxs-lookup"><span data-stu-id="28324-129">In most cases, there is no need to override this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException">
          <span data-ttu-id="28324-130">Esta instancia no es un objeto de comunicación remota válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-130">This instance is not a valid remoting object.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="28324-131">El llamador inmediato no tiene permisos de infraestructura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-131">The immediate caller does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="28324-132">requiere plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-132">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="28324-133">Este miembro no se puede usar código de confianza parcial o transparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-133">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetLifetimeService">
      <MemberSignature Language="C#" Value="public object GetLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.GetLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLifetimeService();" />
      <MemberSignature Language="F#" Value="abstract member GetLifetimeService : unit -&gt; obj&#xA;override this.GetLifetimeService : unit -&gt; obj" Usage="marshalByRefObject.GetLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="28324-134">Recupera el objeto de servicio de duración actual que controla la directiva de duración de esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-134">Retrieves the current lifetime service object that controls the lifetime policy for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28324-135">Objeto de tipo <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> utilizado para controlar la directiva de duración de esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-135">An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28324-136">Para obtener más información acerca de los servicios de duración, vea el <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> clase.</span><span class="sxs-lookup"><span data-stu-id="28324-136">For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="28324-137">El llamador inmediato no tiene permisos de infraestructura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-137">The immediate caller does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="28324-138">requiere plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-138">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="28324-139">Este miembro no se puede usar código de confianza parcial o transparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-139">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public virtual object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="abstract member InitializeLifetimeService : unit -&gt; obj&#xA;override this.InitializeLifetimeService : unit -&gt; obj" Usage="marshalByRefObject.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="28324-140">Obtiene un objeto de servicio de duración para controlar la directiva de duración de esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-140">Obtains a lifetime service object to control the lifetime policy for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28324-141">Objeto de tipo <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> utilizado para controlar la directiva de duración de esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-141">An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance.</span>
          </span>
          <span data-ttu-id="28324-142">Éste es el objeto de servicio de duración actual de esta instancia si existe una; en caso contrario, un nuevo objeto de servicio de duración inicializado en el valor de la propiedad <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-142">This is the current lifetime service object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28324-143">Para obtener más información acerca de los servicios de duración, vea el <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> clase.</span><span class="sxs-lookup"><span data-stu-id="28324-143">For more information about lifetime services, see the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28324-144">En el ejemplo de código siguiente se muestra cómo crear una concesión.</span><span class="sxs-lookup"><span data-stu-id="28324-144">The following code example demonstrates creating a lease.</span></span>  
  
 [!code-cpp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/CS/source.cs#1)]
 [!code-vb[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MarshalByRefObject.InitializeLifetimeService Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="28324-145">El llamador inmediato no tiene permisos de infraestructura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-145">The immediate caller does not have infrastructure permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="28324-146">requiere plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-146">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="28324-147">Este miembro no se puede usar código de confianza parcial o transparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-147">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="MemberwiseClone">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="28324-148">Crea una copia superficial del objeto actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-148">Creates a shallow copy of the current object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MemberwiseClone">
      <MemberSignature Language="C#" Value="protected MarshalByRefObject MemberwiseClone (bool cloneIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.MarshalByRefObject MemberwiseClone(bool cloneIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function MemberwiseClone (cloneIdentity As Boolean) As MarshalByRefObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarshalByRefObject ^ MemberwiseClone(bool cloneIdentity);" />
      <MemberSignature Language="F#" Value="override this.MemberwiseClone : bool -&gt; MarshalByRefObject" Usage="marshalByRefObject.MemberwiseClone cloneIdentity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MarshalByRefObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloneIdentity" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cloneIdentity">
          <span data-ttu-id="28324-149">
            <see langword="false" /> para eliminar la identidad actual del objeto <see cref="T:System.MarshalByRefObject" />, que provocará la asignación de una nueva identidad al objeto cuando se calculan sus referencias a través de un límite de comunicación remota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-149">
              <see langword="false" /> to delete the current <see cref="T:System.MarshalByRefObject" /> object's identity, which will cause the object to be assigned a new identity when it is marshaled across a remoting boundary.</span>
          </span>
          <span data-ttu-id="28324-150">El valor <see langword="false" /> suele ser el adecuado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-150">A value of <see langword="false" /> is usually appropriate.</span>
          </span>
          <span data-ttu-id="28324-151">Es <see langword="true" /> para copiar la identidad actual del objeto <see cref="T:System.MarshalByRefObject" /> en su copia, que hará que las llamadas del cliente de comunicación remota se enruten al objeto del servidor remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-151">
              <see langword="true" /> to copy the current <see cref="T:System.MarshalByRefObject" /> object's identity to its clone, which will cause remoting client calls to be routed to the remote server object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28324-152">Crea una copia superficial del objeto <see cref="T:System.MarshalByRefObject" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-152">Creates a shallow copy of the current <see cref="T:System.MarshalByRefObject" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28324-153">Copia superficial del objeto <see cref="T:System.MarshalByRefObject" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28324-153">A shallow copy of the current <see cref="T:System.MarshalByRefObject" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28324-154">El <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> método crea una copia superficial mediante la creación de un nuevo <xref:System.MarshalByRefObject> de objetos y, a continuación, copiar los campos no estáticos del actual <xref:System.MarshalByRefObject> objeto en el nuevo objeto.</span><span class="sxs-lookup"><span data-stu-id="28324-154">The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method creates a shallow copy by creating a new <xref:System.MarshalByRefObject> object, and then copying the nonstatic fields of the current <xref:System.MarshalByRefObject> object to the new object.</span></span> <span data-ttu-id="28324-155">Si un campo es un tipo de valor, se realiza una copia bit a bit del campo.</span><span class="sxs-lookup"><span data-stu-id="28324-155">If a field is a value type, a bit-by-bit copy of the field is performed.</span></span> <span data-ttu-id="28324-156">Si un campo es un tipo de referencia, se copia la referencia, pero el objeto que se hace referencia no; es por lo tanto, el objeto original y su clon hacen referencia al mismo objeto.</span><span class="sxs-lookup"><span data-stu-id="28324-156">If a field is a reference type, the reference is copied but the referred object is not; therefore, the original object and its clone refer to the same object.</span></span>  
  
 <span data-ttu-id="28324-157">Por ejemplo, considere un <xref:System.MarshalByRefObject> objeto denominado X que hace referencia a objetos A y B. objeto B, a su vez, hace referencia a objeto C. Una copia superficial de X crea el nuevo objeto X2 que también hace referencia a objetos A y B. En cambio, una copia en profundidad de X crea un nuevo objeto X2 que hace referencia a los nuevos objetos A2 y B2, que son copias A y B. B2, a su vez, hace referencia al objeto nuevo C2, que es una copia C. utilizar una clase que implementa el <xref:System.ICloneable> interfaz para realizar una profunda o superficial c copiar de un objeto.</span><span class="sxs-lookup"><span data-stu-id="28324-157">For example, consider a <xref:System.MarshalByRefObject> object called X that references objects A and B. Object B, in turn, references object C. A shallow copy of X creates new object X2 that also references objects A and B. In contrast, a deep copy of X creates a new object X2 that references the new objects A2 and B2, which are copies of A and B. B2, in turn, references the new object C2, which is a copy C. Use a class that implements the <xref:System.ICloneable> interface to perform a deep or shallow copy of an object.</span></span>  
  
 <span data-ttu-id="28324-158">La identidad de un <xref:System.MarshalByRefObject> objeto se define como el objeto de servidor remoto que es el destino de una llamada de cliente de comunicación remota.</span><span class="sxs-lookup"><span data-stu-id="28324-158">The identity of a <xref:System.MarshalByRefObject> object is defined as the remote server object that is the target of a remoting client call.</span></span> <span data-ttu-id="28324-159">De forma predeterminada, el clon miembro a miembro de un <xref:System.MarshalByRefObject> objeto tiene la misma identidad que el objeto original, que normalmente no es el comportamiento correcto para clones de los objetos de servidor que se serializan en un límite de comunicación remota en el lado del cliente.</span><span class="sxs-lookup"><span data-stu-id="28324-159">By default, the memberwise clone of a <xref:System.MarshalByRefObject> object has the same identity as the original object, which is typically not the correct behavior for clones of server-side objects that are marshaled across a remoting boundary to the client side.</span></span> <span data-ttu-id="28324-160">Especificar `false`, que normalmente es adecuado, eliminar la identidad del clon y provocar una nueva identidad que se asignará cuando se serializa el clon en un límite de comunicación remota, o `true` para hacer que el clon conservar la identidad del original <xref:System.MarshalByRefObject> objeto.</span><span class="sxs-lookup"><span data-stu-id="28324-160">Specify `false`, which is usually appropriate, to delete the identity of the clone and cause a new identity to be assigned when the clone is marshaled across a remoting boundary, or `true` to cause the clone to retain the identity of the original <xref:System.MarshalByRefObject> object.</span></span> <span data-ttu-id="28324-161">El <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> método está pensado para usarse por desarrolladores que implementan objetos del servidor remoto.</span><span class="sxs-lookup"><span data-stu-id="28324-161">The <xref:System.MarshalByRefObject.MemberwiseClone%28System.Boolean%29> method is intended to be used by developers implementing remote server objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
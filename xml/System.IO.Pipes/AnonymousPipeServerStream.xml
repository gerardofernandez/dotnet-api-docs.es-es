<Type Name="AnonymousPipeServerStream" FullName="System.IO.Pipes.AnonymousPipeServerStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0e982690f510c68030f4bade1b3c0d8537f4f5b" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58742921" /></Metadata><TypeSignature Language="C#" Value="public sealed class AnonymousPipeServerStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnonymousPipeServerStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.AnonymousPipeServerStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnonymousPipeServerStream&#xA;Inherits PipeStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnonymousPipeServerStream sealed : System::IO::Pipes::PipeStream" />
  <TypeSignature Language="F#" Value="type AnonymousPipeServerStream = class&#xA;    inherit PipeStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="87905-101">Expone una secuencia alrededor de una canalización anónima, que admite operaciones de lectura y escritura tanto sincrónicas como asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="87905-101">Exposes a stream around an anonymous pipe, which supports both synchronous and asynchronous read and write operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87905-102">Las canalizaciones anónimas ayudan a proporcionar seguro y proteger la comunicación entre procesos primarios y secundarios entre los procesos.</span><span class="sxs-lookup"><span data-stu-id="87905-102">Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</span></span> <span data-ttu-id="87905-103">La <xref:System.IO.Pipes.AnonymousPipeServerStream> clase permite que un proceso primario enviar o recibir información de un proceso secundario.</span><span class="sxs-lookup"><span data-stu-id="87905-103">The <xref:System.IO.Pipes.AnonymousPipeServerStream> class enables a parent process to send or receive information from a child process.</span></span>  
  
 <span data-ttu-id="87905-104">Las canalizaciones anónimas son unidireccionales, sin nombre canalizaciones que normalmente se transfieren datos entre procesos primarios y secundarios.</span><span class="sxs-lookup"><span data-stu-id="87905-104">Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</span></span> <span data-ttu-id="87905-105">Las canalizaciones anónimas son siempre locales; no pueden utilizarse a través de una red.</span><span class="sxs-lookup"><span data-stu-id="87905-105">Anonymous pipes are always local; they cannot be used over a network.</span></span> <span data-ttu-id="87905-106">Un <xref:System.IO.Pipes.PipeDirection> valor de <xref:System.IO.Pipes.PipeDirection.InOut> no se admite porque las canalizaciones anónimas se definen para ser unidireccional.</span><span class="sxs-lookup"><span data-stu-id="87905-106">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="87905-107">Las canalizaciones anónimas no admiten <xref:System.IO.Pipes.PipeTransmissionMode.Message> modos de lectura.</span><span class="sxs-lookup"><span data-stu-id="87905-107">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read modes.</span></span>  
  
 <span data-ttu-id="87905-108">El cliente de una canalización anónima se debe crear desde un identificador de canalización proporcionado por el lado del servidor mediante una llamada a la <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="87905-108">The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> method.</span></span> <span data-ttu-id="87905-109">La cadena, a continuación, se pasa como parámetro al crear el proceso del cliente.</span><span class="sxs-lookup"><span data-stu-id="87905-109">The string is then passed as a parameter when creating the client process.</span></span> <span data-ttu-id="87905-110">El proceso de cliente, a continuación, se pasa a la <xref:System.IO.Pipes.AnonymousPipeClientStream> constructor como el `pipeHandleAsString` parámetro.</span><span class="sxs-lookup"><span data-stu-id="87905-110">From the client process, it is then passed to the <xref:System.IO.Pipes.AnonymousPipeClientStream> constructor as the `pipeHandleAsString` parameter.</span></span>  
  
 <span data-ttu-id="87905-111">El <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto debe desechar el identificador de cliente mediante el <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> método con el fin de recibir una notificación cuando se cierra el cliente.</span><span class="sxs-lookup"><span data-stu-id="87905-111">The <xref:System.IO.Pipes.AnonymousPipeServerStream> object must dispose the client handle using the <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method in order to be notified when the client exits.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="87905-112">Para [!INCLUDE[winxppro](~/includes/winxppro-md.md)] y [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], un máximo de 10 canalizaciones puede conectarse simultáneamente a través de la red.</span><span class="sxs-lookup"><span data-stu-id="87905-112">For [!INCLUDE[winxppro](~/includes/winxppro-md.md)] and [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], a maximum of 10 pipes can simultaneously connect over the network.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87905-113">En el ejemplo siguiente se muestra una manera de enviar una cadena de un proceso primario a un proceso secundario mediante canalizaciones anónimas.</span><span class="sxs-lookup"><span data-stu-id="87905-113">The following example demonstrates a way to send a string from a parent process to a child process using anonymous pipes.</span></span> <span data-ttu-id="87905-114">En este ejemplo se crea un objeto <xref:System.IO.Pipes.AnonymousPipeServerStream> en un proceso primario con un valor <xref:System.IO.Pipes.PipeDirection> de <xref:System.IO.Pipes.PipeDirection.Out>.</span><span class="sxs-lookup"><span data-stu-id="87905-114">This example creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="87905-115">También crea un <xref:System.IO.Pipes.AnonymousPipeClientStream> objeto en un proceso secundario con un <xref:System.IO.Pipes.PipeDirection> valor <xref:System.IO.Pipes.PipeDirection.In>.</span><span class="sxs-lookup"><span data-stu-id="87905-115">It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span> <span data-ttu-id="87905-116">El proceso primario envía a continuación una cadena proporcionada por usuario al proceso secundario.</span><span class="sxs-lookup"><span data-stu-id="87905-116">The parent process then sends a user-supplied string to the child process.</span></span> <span data-ttu-id="87905-117">La cadena se muestra en la consola.</span><span class="sxs-lookup"><span data-stu-id="87905-117">The string is displayed to the console.</span></span>  
  
 <span data-ttu-id="87905-118">En este ejemplo es para el proceso de servidor, que usa el <xref:System.IO.Pipes.AnonymousPipeServerStream> clase.</span><span class="sxs-lookup"><span data-stu-id="87905-118">This example is for the server process, which uses the <xref:System.IO.Pipes.AnonymousPipeServerStream> class.</span></span> <span data-ttu-id="87905-119">El ejemplo de código completo, incluido el código para el cliente de la canalización y el servidor, vea [Cómo: Usar canalizaciones anónimas para la comunicación local entre procesos](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md).</span><span class="sxs-lookup"><span data-stu-id="87905-119">For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md).</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="87905-120">Inicializa una nueva instancia de la clase <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span><span class="sxs-lookup"><span data-stu-id="87905-120">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87905-121">Inicializa una nueva instancia de la clase <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span><span class="sxs-lookup"><span data-stu-id="87905-121">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87905-122">Para <xref:System.IO.Pipes.AnonymousPipeServerStream> constructores sin un <xref:System.IO.Pipes.PipeDirection> parámetro, la dirección predeterminada es <xref:System.IO.Pipes.PipeDirection.Out>.</span><span class="sxs-lookup"><span data-stu-id="87905-122">For <xref:System.IO.Pipes.AnonymousPipeServerStream> constructors without a <xref:System.IO.Pipes.PipeDirection> parameter, the default direction is <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="87905-123">Un <xref:System.IO.Pipes.PipeDirection> valor de <xref:System.IO.Pipes.PipeDirection.InOut> no se admite porque las canalizaciones anónimas se definen para ser unidireccional.</span><span class="sxs-lookup"><span data-stu-id="87905-123">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="87905-124">Este constructor crea un <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto que tiene el tamaño del búfer de forma predeterminada, ninguna seguridad de canalización, y un <xref:System.IO.HandleInheritability> valor <xref:System.IO.HandleInheritability.None>.</span><span class="sxs-lookup"><span data-stu-id="87905-124">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size, no pipe security, and a <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="87905-125">para plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="87905-125">for full trust for the immediate caller.</span></span> <span data-ttu-id="87905-126">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="87905-126">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream direction" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="87905-127">Uno de los valores de enumeración que determina la dirección de la canalización.</span><span class="sxs-lookup"><span data-stu-id="87905-127">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="87905-128">Las canalizaciones anónimas solo pueden ser en una dirección, por lo que <paramref name="direction" /> no se puede establecer en <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="87905-128">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <summary><span data-ttu-id="87905-129">Inicializa una nueva instancia de la clase <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> con la dirección de canalización especificada.</span><span class="sxs-lookup"><span data-stu-id="87905-129">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87905-130">Un <xref:System.IO.Pipes.PipeDirection> valor de <xref:System.IO.Pipes.PipeDirection.InOut> no se admite porque las canalizaciones anónimas se definen para ser unidireccional.</span><span class="sxs-lookup"><span data-stu-id="87905-130">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="87905-131">Este constructor crea un <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto que tiene el tamaño del búfer de forma predeterminada, ninguna seguridad de canalización, y un <xref:System.IO.HandleInheritability> valor <xref:System.IO.HandleInheritability.None>.</span><span class="sxs-lookup"><span data-stu-id="87905-131">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size, no pipe security, and a <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="87905-132">El valor de <paramref name="direction" /> está establecido en <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="87905-132"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="87905-133">para plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="87905-133">for full trust for the immediate caller.</span></span> <span data-ttu-id="87905-134">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="87905-134">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, inheritability As HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * System.IO.HandleInheritability -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, inheritability)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="87905-135">Uno de los valores de enumeración que determina la dirección de la canalización.</span><span class="sxs-lookup"><span data-stu-id="87905-135">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="87905-136">Las canalizaciones anónimas solo pueden ser en una dirección, por lo que <paramref name="direction" /> no se puede establecer en <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="87905-136">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="87905-137">Uno de los valores de enumeración que determina si los procesos secundarios pueden heredar el identificador subyacente.</span><span class="sxs-lookup"><span data-stu-id="87905-137">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span></span> <span data-ttu-id="87905-138">Se debe establecer en <see cref="F:System.IO.HandleInheritability.None" /> o en <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span><span class="sxs-lookup"><span data-stu-id="87905-138">Must be set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span></param>
        <summary><span data-ttu-id="87905-139">Inicializa una nueva instancia de la clase <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> con las características dirección de canalización y modo de herencia especificadas.</span><span class="sxs-lookup"><span data-stu-id="87905-139">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction and inheritability mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87905-140">Un <xref:System.IO.Pipes.PipeDirection> valor de <xref:System.IO.Pipes.PipeDirection.InOut> no se admite porque las canalizaciones anónimas se definen para ser unidireccional.</span><span class="sxs-lookup"><span data-stu-id="87905-140">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="87905-141">Este constructor crea un <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto que tiene el tamaño de búfer predeterminado y ninguna seguridad de canalización.</span><span class="sxs-lookup"><span data-stu-id="87905-141">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size and no pipe security.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87905-142">El ejemplo siguiente muestra un método para enviar una cadena de un proceso primario a un proceso secundario mediante canalizaciones anónimas.</span><span class="sxs-lookup"><span data-stu-id="87905-142">The following example demonstrates a method to send a string from a parent process to a child process using anonymous pipes.</span></span> <span data-ttu-id="87905-143">En este ejemplo, un <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto se crea en un proceso primario con un <xref:System.IO.Pipes.PipeDirection> valor <xref:System.IO.Pipes.PipeDirection.Out>.</span><span class="sxs-lookup"><span data-stu-id="87905-143">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="87905-144"><paramref name="inheritability" /> no está establecido en <see cref="F:System.IO.HandleInheritability.None" /> o <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span><span class="sxs-lookup"><span data-stu-id="87905-144"><paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="87905-145">El valor de <paramref name="direction" /> está establecido en <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="87905-145"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="87905-146">para plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="87905-146">for full trust for the immediate caller.</span></span> <span data-ttu-id="87905-147">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="87905-147">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, class Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, class Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, serverSafePipeHandle As SafePipeHandle, clientSafePipeHandle As SafePipeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, Microsoft::Win32::SafeHandles::SafePipeHandle ^ serverSafePipeHandle, Microsoft::Win32::SafeHandles::SafePipeHandle ^ clientSafePipeHandle);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * Microsoft.Win32.SafeHandles.SafePipeHandle * Microsoft.Win32.SafeHandles.SafePipeHandle -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, serverSafePipeHandle, clientSafePipeHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="serverSafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
        <Parameter Name="clientSafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="87905-148">Uno de los valores de enumeración que determina la dirección de la canalización.</span><span class="sxs-lookup"><span data-stu-id="87905-148">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="87905-149">Las canalizaciones anónimas solo pueden ser en una dirección, por lo que <paramref name="direction" /> no se puede establecer en <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="87905-149">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="serverSafePipeHandle"><span data-ttu-id="87905-150">Controlador seguro para la canalización que este objeto <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> encapsulará.</span><span class="sxs-lookup"><span data-stu-id="87905-150">A safe handle for the pipe that this <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object will encapsulate.</span></span></param>
        <param name="clientSafePipeHandle"><span data-ttu-id="87905-151">Controlador seguro para el objeto <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />.</span><span class="sxs-lookup"><span data-stu-id="87905-151">A safe handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span></span></param>
        <summary><span data-ttu-id="87905-152">Inicializa una nueva instancia de la clase <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> a partir de los identificadores de canalización especificados.</span><span class="sxs-lookup"><span data-stu-id="87905-152">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class from the specified pipe handles.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87905-153">Un <xref:System.IO.Pipes.PipeDirection> valor de <xref:System.IO.Pipes.PipeDirection.InOut> no se admite porque las canalizaciones anónimas se definen para ser unidireccional.</span><span class="sxs-lookup"><span data-stu-id="87905-153">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="87905-154"><paramref name="serverSafePipeHandle" /> o <paramref name="clientSafePipeHandle" /> es un controlador no válido.</span><span class="sxs-lookup"><span data-stu-id="87905-154"><paramref name="serverSafePipeHandle" /> or <paramref name="clientSafePipeHandle" /> is an invalid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="87905-155"><paramref name="serverSafePipeHandle" /> o <paramref name="clientSafePipeHandle" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="87905-155"><paramref name="serverSafePipeHandle" /> or <paramref name="clientSafePipeHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="87905-156">El valor de <paramref name="direction" /> está establecido en <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="87905-156"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="87905-157">Se ha producido un error de E/S, como un error de disco.</span><span class="sxs-lookup"><span data-stu-id="87905-157">An I/O error, such as a disk error, has occurred.</span></span>  
  
<span data-ttu-id="87905-158">O bien</span><span class="sxs-lookup"><span data-stu-id="87905-158">-or-</span></span> 
<span data-ttu-id="87905-159">Se ha cerrado la secuencia.</span><span class="sxs-lookup"><span data-stu-id="87905-159">The stream has been closed.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="87905-160">para plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="87905-160">for full trust for the immediate caller.</span></span> <span data-ttu-id="87905-161">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="87905-161">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, inheritability As HandleInheritability, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * System.IO.HandleInheritability * int -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, inheritability, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="87905-162">Uno de los valores de enumeración que determina la dirección de la canalización.</span><span class="sxs-lookup"><span data-stu-id="87905-162">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="87905-163">Las canalizaciones anónimas solo pueden ser en una dirección, por lo que <paramref name="direction" /> no se puede establecer en <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="87905-163">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="87905-164">Uno de los valores de enumeración que determina si los procesos secundarios pueden heredar el identificador subyacente.</span><span class="sxs-lookup"><span data-stu-id="87905-164">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span></span> <span data-ttu-id="87905-165">Se debe establecer en <see cref="F:System.IO.HandleInheritability.None" /> o en <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span><span class="sxs-lookup"><span data-stu-id="87905-165">Must be set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="87905-166">Tamaño del búfer.</span><span class="sxs-lookup"><span data-stu-id="87905-166">The size of the buffer.</span></span> <span data-ttu-id="87905-167">Este valor debe ser mayor o igual que 0.</span><span class="sxs-lookup"><span data-stu-id="87905-167">This value must be greater than or equal to 0.</span></span></param>
        <summary><span data-ttu-id="87905-168">Inicializa una nueva instancia de la clase <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> con las características dirección de canalización, modo de herencia y tamaño de búfer especificadas.</span><span class="sxs-lookup"><span data-stu-id="87905-168">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction, inheritability mode, and buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87905-169">Un <xref:System.IO.Pipes.PipeDirection> valor de <xref:System.IO.Pipes.PipeDirection.InOut> no se admite porque las canalizaciones anónimas se definen para ser unidireccional.</span><span class="sxs-lookup"><span data-stu-id="87905-169">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="87905-170">Este constructor crea un <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto sin seguridad de canalización.</span><span class="sxs-lookup"><span data-stu-id="87905-170">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object without pipe security.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="87905-171"><paramref name="inheritability" /> no está establecido en <see cref="F:System.IO.HandleInheritability.None" /> o <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span><span class="sxs-lookup"><span data-stu-id="87905-171"><paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span>  
  
<span data-ttu-id="87905-172">O bien</span><span class="sxs-lookup"><span data-stu-id="87905-172">-or-</span></span> 
 <span data-ttu-id="87905-173"><paramref name="bufferSize" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="87905-173"><paramref name="bufferSize" /> is less than 0.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="87905-174">El valor de <paramref name="direction" /> está establecido en <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="87905-174"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="87905-175">para plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="87905-175">for full trust for the immediate caller.</span></span> <span data-ttu-id="87905-176">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="87905-176">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability, int32 bufferSize, class System.IO.Pipes.PipeSecurity pipeSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability, int bufferSize, System::IO::Pipes::PipeSecurity ^ pipeSecurity);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * System.IO.HandleInheritability * int * System.IO.Pipes.PipeSecurity -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, inheritability, bufferSize, pipeSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="1" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="2" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" Index="3" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="87905-177">Uno de los valores de enumeración que determina la dirección de la canalización.</span><span class="sxs-lookup"><span data-stu-id="87905-177">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="87905-178">Las canalizaciones anónimas solo pueden ser en una dirección, por lo que <paramref name="direction" /> no se puede establecer en <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="87905-178">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="87905-179">Uno de los valores de enumeración que determina si los procesos secundarios pueden heredar el identificador subyacente.</span><span class="sxs-lookup"><span data-stu-id="87905-179">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="87905-180">Tamaño del búfer.</span><span class="sxs-lookup"><span data-stu-id="87905-180">The size of the buffer.</span></span> <span data-ttu-id="87905-181">Este valor debe ser mayor o igual que 0.</span><span class="sxs-lookup"><span data-stu-id="87905-181">This value must be greater than or equal to 0.</span></span></param>
        <param name="pipeSecurity"><span data-ttu-id="87905-182">Objeto que determina el control de acceso y la seguridad de auditoría de la canalización.</span><span class="sxs-lookup"><span data-stu-id="87905-182">An object that determines the access control and audit security for the pipe.</span></span></param>
        <summary><span data-ttu-id="87905-183">Inicializa una nueva instancia de la clase <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> con las características dirección de la canalización, modo de herencia, tamaño de búfer y seguridad de canalización especificadas.</span><span class="sxs-lookup"><span data-stu-id="87905-183">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction, inheritability mode, buffer size, and pipe security.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87905-184">Un <xref:System.IO.Pipes.PipeDirection> valor de <xref:System.IO.Pipes.PipeDirection.InOut> no se admite porque las canalizaciones anónimas se definen para ser unidireccional.</span><span class="sxs-lookup"><span data-stu-id="87905-184">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="87905-185"><paramref name="inheritability" /> no está establecido en <see cref="F:System.IO.HandleInheritability.None" /> o <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span><span class="sxs-lookup"><span data-stu-id="87905-185"><paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span>  
  
<span data-ttu-id="87905-186">O bien</span><span class="sxs-lookup"><span data-stu-id="87905-186">-or-</span></span> 
 <span data-ttu-id="87905-187"><paramref name="bufferSize" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="87905-187"><paramref name="bufferSize" /> is less than 0.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="87905-188">El valor de <paramref name="direction" /> está establecido en <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="87905-188"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="87905-189">para plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="87905-189">for full trust for the immediate caller.</span></span> <span data-ttu-id="87905-190">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="87905-190">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ClientSafePipeHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientSafePipeHandle As SafePipeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafePipeHandle ^ ClientSafePipeHandle { Microsoft::Win32::SafeHandles::SafePipeHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientSafePipeHandle : Microsoft.Win32.SafeHandles.SafePipeHandle" Usage="System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafePipeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87905-191">Obtiene el identificador seguro del objeto <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> que está conectado actualmente al objeto <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span><span class="sxs-lookup"><span data-stu-id="87905-191">Gets the safe handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object that is currently connected to the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span></summary>
        <value><span data-ttu-id="87905-192">Controlador para el objeto <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> que está conectado actualmente al objeto <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span><span class="sxs-lookup"><span data-stu-id="87905-192">A handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object that is currently connected to the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87905-193">El <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> debe llamarse al método después de que se ha pasado un identificador de cliente a un proceso de cliente.</span><span class="sxs-lookup"><span data-stu-id="87905-193">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after a client handle has been passed to a client process.</span></span> <span data-ttu-id="87905-194">Si no se llama a este método, el <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto no recibirá aviso cuando el cliente se deshace de su <xref:System.IO.Pipes.PipeStream> objeto.</span><span class="sxs-lookup"><span data-stu-id="87905-194">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="anonymousPipeServerStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeLocalCopyOfClientHandle">
      <MemberSignature Language="C#" Value="public void DisposeLocalCopyOfClientHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisposeLocalCopyOfClientHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisposeLocalCopyOfClientHandle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisposeLocalCopyOfClientHandle();" />
      <MemberSignature Language="F#" Value="member this.DisposeLocalCopyOfClientHandle : unit -&gt; unit" Usage="anonymousPipeServerStream.DisposeLocalCopyOfClientHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87905-195">Cierra la copia local del identificador del objeto <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />.</span><span class="sxs-lookup"><span data-stu-id="87905-195">Closes the local copy of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87905-196">El <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> debe llamarse al método después de que se ha pasado el identificador de cliente al cliente.</span><span class="sxs-lookup"><span data-stu-id="87905-196">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after the client handle has been passed to the client.</span></span> <span data-ttu-id="87905-197">Si no se llama a este método, el <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto no recibirá aviso cuando el cliente se deshace de su <xref:System.IO.Pipes.PipeStream> objeto.</span><span class="sxs-lookup"><span data-stu-id="87905-197">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87905-198">El ejemplo siguiente muestra una manera de enviar una cadena de un proceso primario a un proceso secundario mediante canalizaciones anónimas.</span><span class="sxs-lookup"><span data-stu-id="87905-198">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="87905-199">En este ejemplo, un <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto se crea en un proceso primario con un <xref:System.IO.Pipes.PipeDirection> valor <xref:System.IO.Pipes.PipeDirection.Out>.</span><span class="sxs-lookup"><span data-stu-id="87905-199">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AnonymousPipeServerStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AnonymousPipeServerStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="anonymousPipeServerStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87905-200">Libera recursos no administrados y realiza otras operaciones de limpieza antes de que la recolección de elementos no utilizados reclame la instancia de <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span><span class="sxs-lookup"><span data-stu-id="87905-200">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> instance is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientHandleAsString">
      <MemberSignature Language="C#" Value="public string GetClientHandleAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetClientHandleAsString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientHandleAsString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetClientHandleAsString();" />
      <MemberSignature Language="F#" Value="member this.GetClientHandleAsString : unit -&gt; string" Usage="anonymousPipeServerStream.GetClientHandleAsString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87905-201">Obtiene el identificador del objeto <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> conectado como una cadena.</span><span class="sxs-lookup"><span data-stu-id="87905-201">Gets the connected <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle as a string.</span></span></summary>
        <returns><span data-ttu-id="87905-202">Cadena que representa el identificador del objeto <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> conectado.</span><span class="sxs-lookup"><span data-stu-id="87905-202">A string that represents the connected <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87905-203">El <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> debe llamarse al método después de que se ha pasado un identificador de cliente a un proceso de cliente.</span><span class="sxs-lookup"><span data-stu-id="87905-203">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after a client handle has been passed to a client process.</span></span> <span data-ttu-id="87905-204">Si no se llama a este método, el <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto no recibirá aviso cuando el cliente se deshace de su <xref:System.IO.Pipes.PipeStream> objeto.</span><span class="sxs-lookup"><span data-stu-id="87905-204">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87905-205">El ejemplo siguiente muestra una manera de enviar una cadena de un proceso primario a un proceso secundario mediante canalizaciones anónimas.</span><span class="sxs-lookup"><span data-stu-id="87905-205">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="87905-206">En este ejemplo, un <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto se crea en un proceso primario con un <xref:System.IO.Pipes.PipeDirection> valor <xref:System.IO.Pipes.PipeDirection.Out>.</span><span class="sxs-lookup"><span data-stu-id="87905-206">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode ReadMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode ReadMode {  void set(System::IO::Pipes::PipeTransmissionMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReadMode : System.IO.Pipes.PipeTransmissionMode" Usage="System.IO.Pipes.AnonymousPipeServerStream.ReadMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87905-207">Establece el modo de lectura para el objeto <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span><span class="sxs-lookup"><span data-stu-id="87905-207">Sets the reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span> <span data-ttu-id="87905-208">Para las canalizaciones anónimas, el modo de transmisión debe ser <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="87905-208">For anonymous pipes, transmission mode must be <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />.</span></span></summary>
        <value><span data-ttu-id="87905-209">El modo de lectura para el objeto <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span><span class="sxs-lookup"><span data-stu-id="87905-209">The reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87905-210">Las canalizaciones anónimas no admiten <xref:System.IO.Pipes.PipeTransmissionMode.Message> en modo de lectura.</span><span class="sxs-lookup"><span data-stu-id="87905-210">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87905-211">El ejemplo siguiente muestra una manera de enviar una cadena de un proceso primario a un proceso secundario mediante canalizaciones anónimas.</span><span class="sxs-lookup"><span data-stu-id="87905-211">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="87905-212">En este ejemplo, el <xref:System.NotSupportedException> se detecta cuando el <xref:System.IO.Pipes.AnonymousPipeServerStream.ReadMode%2A> propiedad está establecida en <xref:System.IO.Pipes.PipeTransmissionMode.Message>.</span><span class="sxs-lookup"><span data-stu-id="87905-212">In this example, the <xref:System.NotSupportedException> is caught when the <xref:System.IO.Pipes.AnonymousPipeServerStream.ReadMode%2A> property is set to <xref:System.IO.Pipes.PipeTransmissionMode.Message>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="87905-213">El modo de transmisión no es válido.</span><span class="sxs-lookup"><span data-stu-id="87905-213">The transmission mode is not valid.</span></span> <span data-ttu-id="87905-214">Solo se admite <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> para canalizaciones anónimas.</span><span class="sxs-lookup"><span data-stu-id="87905-214">For anonymous pipes, only <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> is supported.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="87905-215">La propiedad se establece en <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />, que no se admite para canalizaciones anónimas.</span><span class="sxs-lookup"><span data-stu-id="87905-215">The property is set to <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />, which is not supported for anonymous pipes.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="87905-216">La conexión se ha roto o se produce otro error de E/S.</span><span class="sxs-lookup"><span data-stu-id="87905-216">The connection is broken or another I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="87905-217">Se ha cerrado la canalización.</span><span class="sxs-lookup"><span data-stu-id="87905-217">The pipe is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransmissionMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode TransmissionMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TransmissionMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode TransmissionMode { System::IO::Pipes::PipeTransmissionMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TransmissionMode : System.IO.Pipes.PipeTransmissionMode" Usage="System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87905-218">Obtiene el modo de transmisión de canalización compatible con la canalización actual.</span><span class="sxs-lookup"><span data-stu-id="87905-218">Gets the pipe transmission mode that is supported by the current pipe.</span></span></summary>
        <value><span data-ttu-id="87905-219"><see cref="T:System.IO.Pipes.PipeTransmissionMode" /> compatible con la canalización actual.</span><span class="sxs-lookup"><span data-stu-id="87905-219">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> that is supported by the current pipe.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87905-220">Las canalizaciones anónimas no admiten <xref:System.IO.Pipes.PipeTransmissionMode.Message> en modo de lectura.</span><span class="sxs-lookup"><span data-stu-id="87905-220">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87905-221">El ejemplo siguiente muestra una manera de enviar una cadena de un proceso primario a un proceso secundario mediante canalizaciones anónimas.</span><span class="sxs-lookup"><span data-stu-id="87905-221">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="87905-222">En este ejemplo, un <xref:System.IO.Pipes.AnonymousPipeServerStream> objeto se crea en un proceso primario y el <xref:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode%2A> propiedad se muestra en la consola.</span><span class="sxs-lookup"><span data-stu-id="87905-222">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process and the <xref:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode%2A> property is displayed to the console.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
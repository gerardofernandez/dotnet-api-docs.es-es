<Type Name="ActiveXMessageFormatter" FullName="System.Messaging.ActiveXMessageFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="faadf8481cd3fb72c4c4e7cd4f515c7c94f12924" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37647422" /></Metadata><TypeSignature Language="C#" Value="public class ActiveXMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveXMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ActiveXMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveXMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveXMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <TypeSignature Language="F#" Value="type ActiveXMessageFormatter = class&#xA;    interface IMessageFormatter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d4fa1-101">Serializa o deserializa los tipos de datos primitivos y otros objetos destinados al cuerpo de un mensaje de Message Queuing o procedentes de este, con un formato compatible con el componente ActiveX MSMQ.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-101">Serializes or deserializes primitive data types and other objects to or from the body of a Message Queuing message, using a format that is compatible with the MSMQ ActiveX Component.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4fa1-102">El <xref:System.Messaging.ActiveXMessageFormatter> es compatible con los mensajes enviados con los componentes COM de Message Queue Server, que permiten la interoperabilidad con aplicaciones que utilizan el control COM MSMQ.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-102">The <xref:System.Messaging.ActiveXMessageFormatter> is compatible with messages sent using Message Queuing COM components, allowing interoperability with applications that use the MSMQ COM control.</span></span>  
  
 <span data-ttu-id="d4fa1-103">La <xref:System.Messaging.ActiveXMessageFormatter> puede serializar la mayoría primitivas, así como los objetos que implementan la `IPersistStream` interfaz OLE.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-103">The <xref:System.Messaging.ActiveXMessageFormatter> can serialize most primitives, as well as objects that implement the `IPersistStream` OLE interface.</span></span> <span data-ttu-id="d4fa1-104">Puede deserializar el mismo conjunto de tipos primitivos, pero requiere un mayor esfuerzo para deserializar un objeto COM (por ejemplo, un objeto creado con Visual Basic 6.0) que implemente `IPersistStream`.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-104">It can deserialize the same set of primitives, but requires further effort when deserializing a COM object (for example, an object created using Visual Basic 6.0) that implements `IPersistStream`.</span></span> <span data-ttu-id="d4fa1-105">El objeto para deserializar debe estar en memoria por primera importar el objeto en una aplicación de.NET Framework.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-105">The object to deserialize must be in memory by first importing the object into a .NET Framework application.</span></span>  
  
 <span data-ttu-id="d4fa1-106">Cuando una aplicación envía un mensaje a la cola utilizando una instancia de la <xref:System.Messaging.MessageQueue> (clase), el formateador serializa el objeto en una secuencia y la inserta en el cuerpo del mensaje.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-106">When an application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="d4fa1-107">Al leer de una cola utilizando una <xref:System.Messaging.MessageQueue>, el formateador deserializa los datos del mensaje en el <xref:System.Messaging.Message.Body%2A> propiedad de un <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-107">When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="d4fa1-108">Serialización de ActiveX es muy compacta, que facilita el uso de la <xref:System.Messaging.ActiveXMessageFormatter> y control COM MSMQ en un método muy rápido de serialización.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-108">ActiveX serialization is very compact, which makes using the <xref:System.Messaging.ActiveXMessageFormatter> and MSMQ COM control a very fast method of serialization.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveXMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveXMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d4fa1-109">Inicializa una nueva instancia de la clase <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-109">Initializes a new instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Messaging.Message -&gt; bool&#xA;override this.CanRead : System.Messaging.Message -&gt; bool" Usage="activeXMessageFormatter.CanRead message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="d4fa1-110"><see cref="T:System.Messaging.Message" /> que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-110">The <see cref="T:System.Messaging.Message" /> to inspect.</span></span></param>
        <summary><span data-ttu-id="d4fa1-111">Determina si el formateador puede deserializar el contenido del mensaje.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-111">Determines whether the formatter can deserialize the contents of the message.</span></span></summary>
        <returns><span data-ttu-id="d4fa1-112">Es <see langword="true" /> si la clase <see cref="T:System.Messaging.ActiveXMessageFormatter" /> puede deserializar el mensaje; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-112"><see langword="true" /> if the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> can deserialize the message; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4fa1-113"><xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A> Devuelve `false` si el cuerpo del mensaje no es un primitivo que el control ActiveX de Message Queue Server pueda deserializar o si no implementa la `IPersistStream` interfaz.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-113"><xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A> returns `false` if the message body is not a primitive that the Message Queuing ActiveX control can deserialize or if it does not implement the `IPersistStream` interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d4fa1-114">El parámetro <paramref name="message" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-114">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="activeXMessageFormatter.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d4fa1-115">Crea una instancia de la clase <see cref="T:System.Messaging.ActiveXMessageFormatter" /> que es idéntica a la clase <see cref="T:System.Messaging.ActiveXMessageFormatter" /> actual.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-115">Creates an instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class that is identical to the current <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="d4fa1-116">Objeto cuyas propiedades son idénticas a las de esta clase <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-116">An object whose properties are identical to those of this <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4fa1-117">Este método es utilizado por la <xref:System.Messaging.MessageQueue> clase para recibir varios mensajes al mismo tiempo (por ejemplo, si la aplicación está recibiendo de forma asincrónica).</span><span class="sxs-lookup"><span data-stu-id="d4fa1-117">This method is used by the <xref:System.Messaging.MessageQueue> class in order to receive multiple messages at the same time (for example, if the application is receiving asynchronously).</span></span> <span data-ttu-id="d4fa1-118">Normalmente, es necesario llamar a este método en el código de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-118">You typically do not need to call this method in your application code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="InitStreamedObject">
      <MemberSignature Language="C#" Value="public static void InitStreamedObject (object streamedObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitStreamedObject(object streamedObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitStreamedObject (streamedObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitStreamedObject(System::Object ^ streamedObject);" />
      <MemberSignature Language="F#" Value="static member InitStreamedObject : obj -&gt; unit" Usage="System.Messaging.ActiveXMessageFormatter.InitStreamedObject streamedObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamedObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="streamedObject"><span data-ttu-id="d4fa1-119">Objeto OLE que implementa <see langword="IPersistStreamInit" />.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-119">An OLE object that implements <see langword="IPersistStreamInit" />.</span></span></param>
        <summary><span data-ttu-id="d4fa1-120">Proporciona una utilidad que ayuda a serializar los objetos COM que implementan <see langword="IPersistStream" /> y requieren una llamada a <see langword="IPersistStreamInit" />.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-120">Provides a utility to help serialize COM objects that implement <see langword="IPersistStream" /> and require <see langword="IPersistStreamInit" /> to be called.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Messaging.Message -&gt; obj&#xA;override this.Read : System.Messaging.Message -&gt; obj" Usage="activeXMessageFormatter.Read message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="d4fa1-121"><see cref="T:System.Messaging.Message" />, en formato de control ActiveX MSMQ, que se va a deserializar.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-121">The <see cref="T:System.Messaging.Message" />, in MSMQ ActiveX control format, to deserialize.</span></span></param>
        <summary><span data-ttu-id="d4fa1-122">Lee el contenido del mensaje especificado y crea un objeto que contiene el mensaje deserializado.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-122">Reads the contents from the given message and creates an object that contains the deserialized message.</span></span></summary>
        <returns><span data-ttu-id="d4fa1-123">El mensaje deserializado.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-123">The deserialized message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4fa1-124">Si el cuerpo del mensaje representa un tipo primitivo, el mensaje <xref:System.Messaging.Message.BodyType%2A> propiedad debe ser uno de los tipos administrados en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-124">If the body of the message represents a primitive type, the message's <xref:System.Messaging.Message.BodyType%2A> property must be one of the managed types in the following table.</span></span>  
  
|<span data-ttu-id="d4fa1-125">Valor BodyType</span><span class="sxs-lookup"><span data-stu-id="d4fa1-125">BodyType value</span></span>|<span data-ttu-id="d4fa1-126">Tipo administrado</span><span class="sxs-lookup"><span data-stu-id="d4fa1-126">Managed type</span></span>|  
|--------------------|------------------|  
|<span data-ttu-id="d4fa1-127">VT_LPSTR</span><span class="sxs-lookup"><span data-stu-id="d4fa1-127">VT_LPSTR</span></span>|<span data-ttu-id="d4fa1-128"><xref:System.Char> matriz (deserializada mediante codificación ASCII)</span><span class="sxs-lookup"><span data-stu-id="d4fa1-128"><xref:System.Char> array (deserialized using ASCII encoding)</span></span>|  
|<span data-ttu-id="d4fa1-129">VT_BSTR, VT_LPWSTR</span><span class="sxs-lookup"><span data-stu-id="d4fa1-129">VT_BSTR, VT_LPWSTR</span></span>|<span data-ttu-id="d4fa1-130"><xref:System.String> (deserializada mediante codificación Unicode)</span><span class="sxs-lookup"><span data-stu-id="d4fa1-130"><xref:System.String> (deserialized using Unicode encoding)</span></span>|  
|<span data-ttu-id="d4fa1-131">VT_VECTOR &AMP;#124; VT_UI1</span><span class="sxs-lookup"><span data-stu-id="d4fa1-131">VT_VECTOR &#124; VT_UI1</span></span>|<span data-ttu-id="d4fa1-132">Matriz <xref:System.Byte></span><span class="sxs-lookup"><span data-stu-id="d4fa1-132"><xref:System.Byte> array</span></span>|  
|<span data-ttu-id="d4fa1-133">VT_BOOL</span><span class="sxs-lookup"><span data-stu-id="d4fa1-133">VT_BOOL</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="d4fa1-134">VT_CLSID</span><span class="sxs-lookup"><span data-stu-id="d4fa1-134">VT_CLSID</span></span>|<xref:System.Guid>|  
|<span data-ttu-id="d4fa1-135">VT_CY</span><span class="sxs-lookup"><span data-stu-id="d4fa1-135">VT_CY</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="d4fa1-136">VT_DATE</span><span class="sxs-lookup"><span data-stu-id="d4fa1-136">VT_DATE</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="d4fa1-137">VT_I1, VT_UI1</span><span class="sxs-lookup"><span data-stu-id="d4fa1-137">VT_I1, VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="d4fa1-138">VT_I2</span><span class="sxs-lookup"><span data-stu-id="d4fa1-138">VT_I2</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="d4fa1-139">VT_UI2</span><span class="sxs-lookup"><span data-stu-id="d4fa1-139">VT_UI2</span></span>|<xref:System.UInt16>|  
|<span data-ttu-id="d4fa1-140">VT_I4</span><span class="sxs-lookup"><span data-stu-id="d4fa1-140">VT_I4</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="d4fa1-141">VT_UI4</span><span class="sxs-lookup"><span data-stu-id="d4fa1-141">VT_UI4</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="d4fa1-142">VT_I8</span><span class="sxs-lookup"><span data-stu-id="d4fa1-142">VT_I8</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="d4fa1-143">VT_UI8</span><span class="sxs-lookup"><span data-stu-id="d4fa1-143">VT_UI8</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="d4fa1-144">VT_R4</span><span class="sxs-lookup"><span data-stu-id="d4fa1-144">VT_R4</span></span>|<xref:System.Single>|  
|<span data-ttu-id="d4fa1-145">VT_R8</span><span class="sxs-lookup"><span data-stu-id="d4fa1-145">VT_R8</span></span>|<xref:System.Double>|  
|<span data-ttu-id="d4fa1-146">VT_NULL</span><span class="sxs-lookup"><span data-stu-id="d4fa1-146">VT_NULL</span></span>|`null`|  
|<span data-ttu-id="d4fa1-147">VT_STREAMED_OBJECT</span><span class="sxs-lookup"><span data-stu-id="d4fa1-147">VT_STREAMED_OBJECT</span></span>|<xref:System.Object>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d4fa1-148">La propiedad <see cref="P:System.Messaging.Message.BodyType" /> del parámetro <paramref name="message" /> pasada como un parámetro no se puede asignar a un tipo primitivo, ni representa un objeto de secuencia.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-148">The <see cref="P:System.Messaging.Message.BodyType" /> property of the <paramref name="message" /> passed as a parameter cannot be mapped to a primitive type, nor does it represent a streamed object.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d4fa1-149">El cuerpo representa un objeto almacenado.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-149">The body represents a stored object.</span></span> <span data-ttu-id="d4fa1-150">La clase <see cref="T:System.Messaging.ActiveXMessageFormatter" /> no admite la deserialización de los objetos almacenados.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-150">The <see cref="T:System.Messaging.ActiveXMessageFormatter" /> does not support deserialization of stored objects.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d4fa1-151">El parámetro <paramref name="message" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-151">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Messaging.Message * obj -&gt; unit&#xA;override this.Write : System.Messaging.Message * obj -&gt; unit" Usage="activeXMessageFormatter.Write (message, obj)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="d4fa1-152"><see cref="T:System.Messaging.Message" /> cuya propiedad <see cref="P:System.Messaging.Message.Body" /> contendrá el objeto serializado.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-152">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span></span></param>
        <param name="obj"><span data-ttu-id="d4fa1-153">Objeto que se va a serializar en el cuerpo del mensaje.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-153">The object to be serialized into the message body.</span></span></param>
        <summary><span data-ttu-id="d4fa1-154">Serializa un objeto en el cuerpo del mensaje.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-154">Serializes an object into the body of the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4fa1-155">En la siguiente tabla muestra la relación entre los tipos administrados y la <xref:System.Messaging.Message.BodyType%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-155">The following table shows the relationship between managed types and the <xref:System.Messaging.Message.BodyType%2A> property.</span></span> <span data-ttu-id="d4fa1-156">El objeto que se serializa debe ser uno de estos tipos administrados o debe implementar OLE `IPersistStream` interfaz.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-156">The object that you serialize must be one of these managed types or must implement the OLE `IPersistStream` interface.</span></span>  
  
|<span data-ttu-id="d4fa1-157">Valor BodyType</span><span class="sxs-lookup"><span data-stu-id="d4fa1-157">BodyType value</span></span>|<span data-ttu-id="d4fa1-158">Tipo administrado</span><span class="sxs-lookup"><span data-stu-id="d4fa1-158">Managed type</span></span>|  
|--------------------|------------------|  
|<span data-ttu-id="d4fa1-159">VT_LPSTR</span><span class="sxs-lookup"><span data-stu-id="d4fa1-159">VT_LPSTR</span></span>|<xref:System.Char>|  
|<span data-ttu-id="d4fa1-160">VT_BSTR, VT_LPWSTR</span><span class="sxs-lookup"><span data-stu-id="d4fa1-160">VT_BSTR, VT_LPWSTR</span></span>|<xref:System.String>|  
|<span data-ttu-id="d4fa1-161">VT_VECTOR &AMP;#124; VT_UI1</span><span class="sxs-lookup"><span data-stu-id="d4fa1-161">VT_VECTOR &#124; VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="d4fa1-162">VT_BOOL</span><span class="sxs-lookup"><span data-stu-id="d4fa1-162">VT_BOOL</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="d4fa1-163">VT_CLSID</span><span class="sxs-lookup"><span data-stu-id="d4fa1-163">VT_CLSID</span></span>|<xref:System.Guid>|  
|<span data-ttu-id="d4fa1-164">VT_CY</span><span class="sxs-lookup"><span data-stu-id="d4fa1-164">VT_CY</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="d4fa1-165">VT_DATE</span><span class="sxs-lookup"><span data-stu-id="d4fa1-165">VT_DATE</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="d4fa1-166">VT_I1, VT_UI1</span><span class="sxs-lookup"><span data-stu-id="d4fa1-166">VT_I1, VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="d4fa1-167">VT_I2</span><span class="sxs-lookup"><span data-stu-id="d4fa1-167">VT_I2</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="d4fa1-168">VT_UI2</span><span class="sxs-lookup"><span data-stu-id="d4fa1-168">VT_UI2</span></span>|<xref:System.UInt16>|  
|<span data-ttu-id="d4fa1-169">VT_I4</span><span class="sxs-lookup"><span data-stu-id="d4fa1-169">VT_I4</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="d4fa1-170">VT_UI4</span><span class="sxs-lookup"><span data-stu-id="d4fa1-170">VT_UI4</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="d4fa1-171">VT_I8</span><span class="sxs-lookup"><span data-stu-id="d4fa1-171">VT_I8</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="d4fa1-172">VT_UI8</span><span class="sxs-lookup"><span data-stu-id="d4fa1-172">VT_UI8</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="d4fa1-173">VT_R4</span><span class="sxs-lookup"><span data-stu-id="d4fa1-173">VT_R4</span></span>|<xref:System.Single>|  
|<span data-ttu-id="d4fa1-174">VT_R8</span><span class="sxs-lookup"><span data-stu-id="d4fa1-174">VT_R8</span></span>|<xref:System.Double>|  
|<span data-ttu-id="d4fa1-175">VT_NULL</span><span class="sxs-lookup"><span data-stu-id="d4fa1-175">VT_NULL</span></span>|`null`|  
|<span data-ttu-id="d4fa1-176">VT_STREAMED_OBJECT</span><span class="sxs-lookup"><span data-stu-id="d4fa1-176">VT_STREAMED_OBJECT</span></span>|<span data-ttu-id="d4fa1-177">`IPersistStream` (OLE) <xref:System.Object></span><span class="sxs-lookup"><span data-stu-id="d4fa1-177">`IPersistStream` (OLE) <xref:System.Object></span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d4fa1-178">El objeto que se va a serializar no es un objeto primitivo ni de secuencia que implementa la interfaz OLE <see langword="IPersistStream" />.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-178">The object to serialize is neither a primitive nor a streamed object that implements the OLE <see langword="IPersistStream" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d4fa1-179">El parámetro <paramref name="message" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d4fa1-179">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>
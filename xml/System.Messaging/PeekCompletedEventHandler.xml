<Type Name="PeekCompletedEventHandler" FullName="System.Messaging.PeekCompletedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4037e46a1de0909da43c578f8ddfb9dd055974b1" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52352557" /></Metadata><TypeSignature Language="C#" Value="public delegate void PeekCompletedEventHandler(object sender, PeekCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed PeekCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.PeekCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub PeekCompletedEventHandler(sender As Object, e As PeekCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void PeekCompletedEventHandler(System::Object ^ sender, PeekCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type PeekCompletedEventHandler = delegate of obj * PeekCompletedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Messaging.PeekCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="8fe15-101">El origen del evento, <see cref="T:System.Messaging.MessageQueue" />.</span><span class="sxs-lookup"><span data-stu-id="8fe15-101">The source of the event, the <see cref="T:System.Messaging.MessageQueue" />.</span></span></param>
    <param name="e"><span data-ttu-id="8fe15-102">Objeto <see cref="T:System.Messaging.PeekCompletedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="8fe15-102">A <see cref="T:System.Messaging.PeekCompletedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="8fe15-103">Representa el método que controlará el evento <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> de <see cref="T:System.Messaging.MessageQueue" />.</span><span class="sxs-lookup"><span data-stu-id="8fe15-103">Represents the method that will handle the <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event of a <see cref="T:System.Messaging.MessageQueue" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fe15-104">Cuando se crea un delegado <xref:System.Messaging.PeekCompletedEventHandler>, se identifica el método que controlará el evento.</span><span class="sxs-lookup"><span data-stu-id="8fe15-104">When you create a <xref:System.Messaging.PeekCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="8fe15-105">Para asociar el evento al controlador, se debe agregar una instancia del delegado al evento.</span><span class="sxs-lookup"><span data-stu-id="8fe15-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="8fe15-106">Siempre que se produce el evento, se llama a su controlador, a menos que se quite el delegado.</span><span class="sxs-lookup"><span data-stu-id="8fe15-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="8fe15-107">Para obtener más información sobre los delegados de controlador de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="8fe15-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fe15-108">En el ejemplo siguiente se muestra cómo crear un delegado de evento (<xref:System.Messaging.PeekCompletedEventHandler>) del controlador de eventos (`MyPeekCompleted`) y asociarlo con el <xref:System.Messaging.MessageQueue.PeekCompleted?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="8fe15-108">The following example illustrates how to create an event delegate (<xref:System.Messaging.PeekCompletedEventHandler>) for the event handler (`MyPeekCompleted`) and associate it with the <xref:System.Messaging.MessageQueue.PeekCompleted?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="8fe15-109">El controlador de eventos lee un mensaje y escribe su etiqueta en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="8fe15-109">The event handler peeks a message and writes its label to the screen.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ReceiveCompletedEventHandler" />
    <altmember cref="T:System.Messaging.PeekCompletedEventArgs" />
  </Docs>
</Type>
<Type Name="BinaryWriter" FullName="System.IO.BinaryWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="adab8317894a519fbb0461ca8f919b3ad2dea3bb" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52255112" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BinaryWriter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit BinaryWriter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.BinaryWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryWriter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryWriter : IDisposable" />
  <TypeSignature Language="F#" Value="type BinaryWriter = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2d76a-101">Escribe tipos primitivos en formato binario en una secuencia y admite la escritura de cadenas en una codificación específica.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2d76a-101">Writes primitive types in binary to a stream and supports writing strings in a specific encoding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-102">La <xref:System.IO.BinaryWriter> clase proporciona métodos que simplifican la escritura de tipos de datos primitivos en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="2d76a-102">The <xref:System.IO.BinaryWriter> class provides methods that simplify writing primitive data types to a stream.</span></span> <span data-ttu-id="2d76a-103">Por ejemplo, puede usar el <xref:System.IO.BinaryWriter.Write%2A> método para escribir un valor booleano en la secuencia como un valor de byte único.</span><span class="sxs-lookup"><span data-stu-id="2d76a-103">For example, you can use the <xref:System.IO.BinaryWriter.Write%2A> method to write a Boolean value to the stream as a one-byte value.</span></span> <span data-ttu-id="2d76a-104">La clase incluye métodos de escritura que admiten diferentes tipos de datos.</span><span class="sxs-lookup"><span data-stu-id="2d76a-104">The class includes write methods that support different data types.</span></span>  
  
 <span data-ttu-id="2d76a-105">Cuando se crea una nueva instancia de la <xref:System.IO.BinaryWriter> (clase), que proporciona el flujo para escribir en y, opcionalmente, especifique el tipo de codificación y si se deja la secuencia abierto después de desechar el <xref:System.IO.BinaryWriter> objeto.</span><span class="sxs-lookup"><span data-stu-id="2d76a-105">When you create a new instance of the <xref:System.IO.BinaryWriter> class, you provide the stream to write to, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryWriter> object.</span></span> <span data-ttu-id="2d76a-106">Si no especifica un tipo de codificación, se usa UTF-8.</span><span class="sxs-lookup"><span data-stu-id="2d76a-106">If you do not specify an encoding type, UTF-8 is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d76a-107">Este tipo implementa la <xref:System.IDisposable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="2d76a-107">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="2d76a-108">Cuando haya terminado de utilizar el tipo, debe deshacerse de él directa o indirectamente.</span><span class="sxs-lookup"><span data-stu-id="2d76a-108">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="2d76a-109">Para deshacerse del tipo directamente, llame a su <xref:System.IDisposable.Dispose%2A> método en un `try` / `catch` bloque.</span><span class="sxs-lookup"><span data-stu-id="2d76a-109">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="2d76a-110">Para deshacerse de él, indirectamente, usar una construcción de lenguaje, como `using` (en C#) o `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2d76a-110">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="2d76a-111">Para obtener más información, vea la sección "Uso de un objeto que implementa IDisposable" en el <xref:System.IDisposable> tema de la interfaz.</span><span class="sxs-lookup"><span data-stu-id="2d76a-111">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="2d76a-112">Una clase derivada puede invalidar los métodos de esta clase para proporcionar a las codificaciones de caracteres únicos.</span><span class="sxs-lookup"><span data-stu-id="2d76a-112">A derived class can override the methods of this class to give unique character encodings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d76a-113">El ejemplo de código siguiente muestra cómo almacenar y recuperar la configuración de la aplicación en un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-113">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md">
      <span data-ttu-id="2d76a-114">Cómo: Leer y escribir en un archivo de datos recién creado</span>
      <span class="sxs-lookup">
        <span data-stu-id="2d76a-114">How to: Read and Write to a Newly Created Data File</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/io/index.md">
      <span data-ttu-id="2d76a-115">E/S de archivos y secuencias</span>
      <span class="sxs-lookup">
        <span data-stu-id="2d76a-115">File and Stream I/O</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
      <span data-ttu-id="2d76a-116">Cómo: Leer texto de un archivo</span>
      <span class="sxs-lookup">
        <span data-stu-id="2d76a-116">How to: Read Text from a File</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
      <span data-ttu-id="2d76a-117">Cómo: Escribir texto en un archivo</span>
      <span class="sxs-lookup">
        <span data-stu-id="2d76a-117">How to: Write Text to a File</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2d76a-118">Inicializa una nueva instancia de la clase <see cref="T:System.IO.BinaryWriter" /> que escribe en una secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-118">Initializes a new instance of the <see cref="T:System.IO.BinaryWriter" /> class that writes to a stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BinaryWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BinaryWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2d76a-119">Inicializa una nueva instancia de la clase <see cref="T:System.IO.BinaryWriter" /> que escribe en una secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-119">Initializes a new instance of the <see cref="T:System.IO.BinaryWriter" /> class that writes to a stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-120">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-120">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-121">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-121">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-122">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-122">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-123">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-123">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryWriter (System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryWriter(System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="new System.IO.BinaryWriter : System.IO.Stream -&gt; System.IO.BinaryWriter" Usage="new System.IO.BinaryWriter output" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="2d76a-124">Secuencia de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-124">The output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-125">Inicializa una nueva instancia de la clase <see cref="T:System.IO.BinaryWriter" /> basada en la secuencia especificada y usando codificación UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-125">Initializes a new instance of the <see cref="T:System.IO.BinaryWriter" /> class based on the specified stream and using UTF-8 encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-126">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-126">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d76a-127">El ejemplo de código siguiente muestra cómo almacenar y recuperar la configuración de la aplicación en un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-127">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d76a-128">La secuencia no admite escritura o ya se encuentra cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-128">The stream does not support writing or is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d76a-129">El valor de <paramref name="output" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-129">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-130">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-130">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-131">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-131">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-132">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-132">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryWriter (System.IO.Stream output, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream output, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryWriter(System::IO::Stream ^ output, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.IO.BinaryWriter : System.IO.Stream * System.Text.Encoding -&gt; System.IO.BinaryWriter" Usage="new System.IO.BinaryWriter (output, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="2d76a-133">Secuencia de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-133">The output stream.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="2d76a-134">Codificación de caracteres que se utilizará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-134">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-135">Inicializa una nueva instancia de la clase <see cref="T:System.IO.BinaryWriter" /> basada en la secuencia y codificación de caracteres especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-135">Initializes a new instance of the <see cref="T:System.IO.BinaryWriter" /> class based on the specified stream and character encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-136">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-136">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d76a-137">La secuencia no admite escritura o ya se encuentra cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-137">The stream does not support writing or is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d76a-138">El valor de <paramref name="output" /> o <paramref name="encoding" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-138">
              <paramref name="output" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-139">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-139">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-140">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-140">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-141">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-141">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryWriter (System.IO.Stream output, System.Text.Encoding encoding, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream output, class System.Text.Encoding encoding, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryWriter(System::IO::Stream ^ output, System::Text::Encoding ^ encoding, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.BinaryWriter : System.IO.Stream * System.Text.Encoding * bool -&gt; System.IO.BinaryWriter" Usage="new System.IO.BinaryWriter (output, encoding, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="2d76a-142">Secuencia de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-142">The output stream.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="2d76a-143">Codificación de caracteres que se utilizará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-143">The character encoding to use.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="2d76a-144">
            <see langword="true" /> para dejar el flujo abierto después de desechar el objeto <see cref="T:System.IO.BinaryWriter" />; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-144">
              <see langword="true" /> to leave the stream open after the <see cref="T:System.IO.BinaryWriter" /> object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-145">Inicializa una nueva instancia de la clase <see cref="T:System.IO.BinaryWriter" /> basada en la secuencia y la codificación de caracteres especificadas y, opcionalmente, deja la secuencia abierta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-145">Initializes a new instance of the <see cref="T:System.IO.BinaryWriter" /> class based on the specified stream and character encoding, and optionally leaves the stream open.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d76a-146">La secuencia no admite escritura o ya se encuentra cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-146">The stream does not support writing or is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d76a-147">El valor de <paramref name="output" /> o <paramref name="encoding" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-147">
              <paramref name="output" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-148">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-148">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-149">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-149">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-150">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-150">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.BinaryWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.IO.BinaryWriter.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d76a-151">Obtiene la secuencia subyacente del objeto <see cref="T:System.IO.BinaryWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-151">Gets the underlying stream of the <see cref="T:System.IO.BinaryWriter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2d76a-152">Secuencia subyacente asociada a <see langword="BinaryWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-152">The underlying stream associated with the <see langword="BinaryWriter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-153">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-153">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d76a-154">El ejemplo de código siguiente muestra cómo leer y escribir `Double` datos en la memoria utilizando la <xref:System.IO.BinaryReader> y `BinaryWriter` clases en la parte superior de la <xref:System.IO.MemoryStream> clase.</span><span class="sxs-lookup"><span data-stu-id="2d76a-154">The following code example shows how to read and write `Double` data to memory by using the <xref:System.IO.BinaryReader> and `BinaryWriter` classes on top of the <xref:System.IO.MemoryStream> class.</span></span> <span data-ttu-id="2d76a-155">`MemoryStream` solo las lecturas y escrituras `Byte` datos.</span><span class="sxs-lookup"><span data-stu-id="2d76a-155">`MemoryStream` only reads and writes `Byte` data.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-156">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-156">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-157">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-157">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-158">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-158">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="binaryWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2d76a-159">Cierra el <see cref="T:System.IO.BinaryWriter" /> actual y la secuencia subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-159">Closes the current <see cref="T:System.IO.BinaryWriter" /> and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-160">Esta implementación de `Close` llamadas la <xref:System.IO.BinaryWriter.Dispose%2A> método pasando un `true` valor.</span><span class="sxs-lookup"><span data-stu-id="2d76a-160">This implementation of `Close` calls the <xref:System.IO.BinaryWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="2d76a-161">Vaciar la secuencia no hará que vacíe su codificador subyacente a menos que se llame explícitamente a <xref:System.IO.BinaryWriter.Flush%2A> o `Close`.</span><span class="sxs-lookup"><span data-stu-id="2d76a-161">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.BinaryWriter.Flush%2A> or `Close`.</span></span> <span data-ttu-id="2d76a-162">Establecer <xref:System.IO.StreamWriter.AutoFlush%2A> a `true` significa que los datos del búfer se vaciará en el flujo, pero no se vaciará el estado del codificador.</span><span class="sxs-lookup"><span data-stu-id="2d76a-162">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="2d76a-163">Esto permite al codificador mantener su estado (caracteres parciales) para que puede codificar correctamente el siguiente bloque de caracteres.</span><span class="sxs-lookup"><span data-stu-id="2d76a-163">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="2d76a-164">Esta situación afecta a UTF8 y UTF7 donde ciertos caracteres solo se pueden codificar después de que el codificador reciba el carácter o caracteres adyacentes.</span><span class="sxs-lookup"><span data-stu-id="2d76a-164">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-165">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-165">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-166">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-166">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-167">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-167">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2d76a-168">Libera los recursos que usa <see cref="T:System.IO.BinaryWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-168">Releases the resources used by the <see cref="T:System.IO.BinaryWriter" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="binaryWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2d76a-169">Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.IO.BinaryWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-169">Releases all resources used by the current instance of the <see cref="T:System.IO.BinaryWriter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="binaryWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="2d76a-170">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-170">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-171">Libera los recursos no administrados que usa <see cref="T:System.IO.BinaryWriter" /> y, de forma opcional, libera los recursos administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-171">Releases the unmanaged resources used by the <see cref="T:System.IO.BinaryWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-172">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-172">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-173">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-173">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-174">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-174">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="binaryWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2d76a-175">Borra todos los búferes del sistema de escritura actual y hace que todos los datos almacenados en el búfer se escriban en el dispositivo subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-175">Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-176">Todas las clases derivadas deben invalidar `Flush` para asegurarse de que todos los datos almacenados en búfer se envía a la secuencia.</span><span class="sxs-lookup"><span data-stu-id="2d76a-176">All derived classes should override `Flush` to ensure that all buffered data is sent to the stream.</span></span>  
  
 <span data-ttu-id="2d76a-177">Vaciar la secuencia no hará que vacíe su codificador subyacente a menos que se llame explícitamente a `Flush` o <xref:System.IO.BinaryWriter.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="2d76a-177">Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.BinaryWriter.Close%2A>.</span></span> <span data-ttu-id="2d76a-178">Establecer <xref:System.IO.StreamWriter.AutoFlush%2A> a `true` significa que los datos del búfer se vaciará en el flujo, pero no se vaciará el estado del codificador.</span><span class="sxs-lookup"><span data-stu-id="2d76a-178">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="2d76a-179">Esto permite al codificador mantener su estado (caracteres parciales) para que puede codificar correctamente el siguiente bloque de caracteres.</span><span class="sxs-lookup"><span data-stu-id="2d76a-179">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="2d76a-180">Esta situación afecta a UTF8 y UTF7 donde ciertos caracteres solo se pueden codificar después de que el codificador reciba el carácter o caracteres adyacentes.</span><span class="sxs-lookup"><span data-stu-id="2d76a-180">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="2d76a-181">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-181">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-182">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-182">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-183">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-183">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-184">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-184">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.BinaryWriter Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.BinaryWriter Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.BinaryWriter.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As BinaryWriter " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::BinaryWriter ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.BinaryWriter" Usage="System.IO.BinaryWriter.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.BinaryWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d76a-185">Especifica un objeto <see cref="T:System.IO.BinaryWriter" /> sin memoria auxiliar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-185">Specifies a <see cref="T:System.IO.BinaryWriter" /> with no backing store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-186">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-186">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-187">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-187">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-188">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-188">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-189">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-189">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OutStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OutStream;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.IO.Stream OutStream" />
      <MemberSignature Language="DocId" Value="F:System.IO.BinaryWriter.OutStream" />
      <MemberSignature Language="VB.NET" Value="Protected OutStream As Stream " />
      <MemberSignature Language="C++ CLI" Value="protected: System::IO::Stream ^ OutStream;" />
      <MemberSignature Language="F#" Value="val mutable OutStream : System.IO.Stream" Usage="System.IO.BinaryWriter.OutStream" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2d76a-190">Contiene la secuencia subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-190">Holds the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-191">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-191">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-192">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-192">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-193">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-193">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-194">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-194">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public virtual long Seek (int offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Seek(int32 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Seek (offset As Integer, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long Seek(int offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="abstract member Seek : int * System.IO.SeekOrigin -&gt; int64&#xA;override this.Seek : int * System.IO.SeekOrigin -&gt; int64" Usage="binaryWriter.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="2d76a-195">Desplazamiento de bytes relacionado con <paramref name="origin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-195">A byte offset relative to <paramref name="origin" />.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="2d76a-196">Un campo de <see cref="T:System.IO.SeekOrigin" /> que indica el punto de referencia del que se obtiene la nueva posición.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-196">A field of <see cref="T:System.IO.SeekOrigin" /> indicating the reference point from which the new position is to be obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-197">Establece la posición en el flujo actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-197">Sets the position within the current stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2d76a-198">Posición con la secuencia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-198">The position with the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-199">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-199">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d76a-200">El ejemplo siguiente escribe una serie de valores de byte en un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-200">The following example writes a series of byte values to a file.</span></span> <span data-ttu-id="2d76a-201">El ejemplo se utiliza <xref:System.IO.BinaryWriter.Seek%2A> mover a diversas ubicaciones en el archivo y, a continuación, escribe los bytes de marcador mediante el <xref:System.IO.BinaryWriter.Write%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2d76a-201">The example uses <xref:System.IO.BinaryWriter.Seek%2A> to move to various locations in the file, and then writes marker bytes by using the <xref:System.IO.BinaryWriter.Write%2A> method.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CPP/source3.cpp#5)]
 [!code-csharp[System.IO.BinaryReaderWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source3.cs#5)]
 [!code-vb[System.IO.BinaryReaderWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source3.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-202">El puntero de archivo se ha movido a una posición no válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-202">The file pointer was moved to an invalid location.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d76a-203">El valor de <see cref="T:System.IO.SeekOrigin" /> no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-203">The <see cref="T:System.IO.SeekOrigin" /> value is invalid.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-204">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-204">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-205">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-205">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-206">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-206">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2d76a-207">Escribe un valor en la secuencia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-207">Writes a value to the current stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(bool value);" />
      <MemberSignature Language="F#" Value="abstract member Write : bool -&gt; unit&#xA;override this.Write : bool -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2d76a-208">Valor <see langword="Boolean" /> que se va a escribir (0 ó 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-208">The <see langword="Boolean" /> value to write (0 or 1).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-209">Escribe un valor <see langword="Boolean" /> de un byte en la secuencia actual, que es 0 si es <see langword="false" /> y 1 si es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-209">Writes a one-byte <see langword="Boolean" /> value to the current stream, with 0 representing <see langword="false" /> and 1 representing <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-210">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-210">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d76a-211">El ejemplo de código siguiente muestra cómo almacenar y recuperar la configuración de la aplicación en un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-211">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-212">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-212">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-213">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-213">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-214">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-214">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-215">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-215">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-216">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-216">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Byte value);" />
      <MemberSignature Language="F#" Value="abstract member Write : byte -&gt; unit&#xA;override this.Write : byte -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2d76a-217">Byte sin signo que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-217">The unsigned byte to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-218">Escribe un byte sin signo en la secuencia actual y avanza la posición de la secuencia en un byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-218">Writes an unsigned byte to the current stream and advances the stream position by one byte.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-219">Debido a conflictos de formato de datos, no se recomienda usar este método con las codificaciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="2d76a-219">Because of data formatting conflicts, using this method with the following encodings is not recommended:</span></span>  
  
-   <span data-ttu-id="2d76a-220">UTF-7</span><span class="sxs-lookup"><span data-stu-id="2d76a-220">UTF-7</span></span>  
  
-   <span data-ttu-id="2d76a-221">ISO-2022-JP</span><span class="sxs-lookup"><span data-stu-id="2d76a-221">ISO-2022-JP</span></span>  
  
-   <span data-ttu-id="2d76a-222">ISCII</span><span class="sxs-lookup"><span data-stu-id="2d76a-222">ISCII</span></span>  
  
 <span data-ttu-id="2d76a-223">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-223">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d76a-224">El ejemplo de código siguiente muestra cómo escribir datos binarios utilizando la memoria como un almacén de respaldo y, a continuación, compruebe que los datos se han escrito correctamente.</span><span class="sxs-lookup"><span data-stu-id="2d76a-224">The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CPP/rwbyte.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CS/rwbyte.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/VB/rwbyte.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-225">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-225">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-226">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-226">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-227">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-227">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-228">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-228">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-229">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-229">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : byte[] -&gt; unit&#xA;override this.Write : byte[] -&gt; unit" Usage="binaryWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="2d76a-230">Matriz de bytes que contiene los datos que se van a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-230">A byte array containing the data to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-231">Escribe una matriz de bytes en la secuencia subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-231">Writes a byte array to the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-232">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-232">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d76a-233">El ejemplo de código siguiente muestra cómo escribir datos binarios utilizando la memoria como un almacén de respaldo y, a continuación, compruebe que los datos se han escrito correctamente.</span><span class="sxs-lookup"><span data-stu-id="2d76a-233">The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CPP/rwbytes.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CS/rwbytes.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/VB/rwbytes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-234">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-234">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-235">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-235">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d76a-236">El valor de <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-236">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-237">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-237">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-238">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-238">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-239">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-239">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(char ch);" />
      <MemberSignature Language="F#" Value="abstract member Write : char -&gt; unit&#xA;override this.Write : char -&gt; unit" Usage="binaryWriter.Write ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="2d76a-240">El carácter Unicode no suplente que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-240">The non-surrogate, Unicode character to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-241">Escribe un carácter Unicode en la secuencia actual y avanza la posición actual de la secuencia de acuerdo con el <see langword="Encoding" /> utilizado y los caracteres específicos escritos en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-241">Writes a Unicode character to the current stream and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and the specific characters being written to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-242">Debido a conflictos de formato de datos, no se recomienda usar este método con las codificaciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="2d76a-242">Because of data formatting conflicts, using this method with the following encodings is not recommended:</span></span>  
  
-   <span data-ttu-id="2d76a-243">UTF-7</span><span class="sxs-lookup"><span data-stu-id="2d76a-243">UTF-7</span></span>  
  
-   <span data-ttu-id="2d76a-244">ISO-2022-JP</span><span class="sxs-lookup"><span data-stu-id="2d76a-244">ISO-2022-JP</span></span>  
  
-   <span data-ttu-id="2d76a-245">ISCII</span><span class="sxs-lookup"><span data-stu-id="2d76a-245">ISCII</span></span>  
  
 <span data-ttu-id="2d76a-246">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-246">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 <span data-ttu-id="2d76a-247">Caracteres suplentes de Unicode deben escribirse como pares en la misma llamada, no individualmente.</span><span class="sxs-lookup"><span data-stu-id="2d76a-247">Unicode surrogate characters must be written out as pairs together in the same call, not individually.</span></span> <span data-ttu-id="2d76a-248">Si necesita soporte técnico para los pares suplentes en la aplicación, considere el uso de una matriz de caracteres y el <xref:System.IO.BinaryWriter.Write%2A> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="2d76a-248">If you require support for surrogate pairs in your application, consider using a character array and the <xref:System.IO.BinaryWriter.Write%2A> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d76a-249">El ejemplo de código siguiente muestra cómo leer y escribir datos de uso de memoria como una memoria auxiliar.</span><span class="sxs-lookup"><span data-stu-id="2d76a-249">The following code example shows how to read and write data using memory as a backing store.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CPP/rwchar.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CS/rwchar.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/VB/rwchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-250">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-250">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-251">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-251">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d76a-252">
            <paramref name="ch" /> es un carácter suplente único.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-252">
              <paramref name="ch" /> is a single surrogate character.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-253">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-253">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-254">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-254">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-255">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-255">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (chars As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;char&gt; ^ chars);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] -&gt; unit&#xA;override this.Write : char[] -&gt; unit" Usage="binaryWriter.Write chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="2d76a-256">Matriz de caracteres que contiene los datos que se van a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-256">A character array containing the data to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-257">Escribe una matriz de caracteres en la secuencia actual y avanza la posición actual de la secuencia de acuerdo con el <see langword="Encoding" /> utilizado y los caracteres específicos escritos en esa secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-257">Writes a character array to the current stream and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and the specific characters being written to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-258">En la tabla siguiente se muestra ejemplos de otras tareas de E/S típicas o relacionadas.</span><span class="sxs-lookup"><span data-stu-id="2d76a-258">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="2d76a-259">Para...</span><span class="sxs-lookup"><span data-stu-id="2d76a-259">To do this...</span></span>|<span data-ttu-id="2d76a-260">Vea el ejemplo de este tema...</span><span class="sxs-lookup"><span data-stu-id="2d76a-260">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="2d76a-261">Crear un archivo de texto</span><span class="sxs-lookup"><span data-stu-id="2d76a-261">Create a text file.</span></span>|[<span data-ttu-id="2d76a-262">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="2d76a-262">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="2d76a-263">Escribir en un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="2d76a-263">Write to a text file.</span></span>|[<span data-ttu-id="2d76a-264">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="2d76a-264">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="2d76a-265">Leer de un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="2d76a-265">Read from a text file.</span></span>|[<span data-ttu-id="2d76a-266">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="2d76a-266">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="2d76a-267">Anexar texto a un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-267">Append text to a file.</span></span>|[<span data-ttu-id="2d76a-268">Cómo: Abrir y anexar a un archivo de registro</span><span class="sxs-lookup"><span data-stu-id="2d76a-268">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="2d76a-269">Obtiene el tamaño de un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-269">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="2d76a-270">Obtener los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-270">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="2d76a-271">Establezca los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-271">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="2d76a-272">Determinar si existe un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-272">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="2d76a-273">Leer de un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="2d76a-273">Read from a binary file.</span></span>|[<span data-ttu-id="2d76a-274">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="2d76a-274">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="2d76a-275">Escribir en un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="2d76a-275">Write to a binary file.</span></span>|[<span data-ttu-id="2d76a-276">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="2d76a-276">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="2d76a-277">El ejemplo de código siguiente muestra cómo leer y escribir datos de uso de memoria como una memoria auxiliar.</span><span class="sxs-lookup"><span data-stu-id="2d76a-277">The following code example shows how to read and write data using memory as a backing store.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CPP/rwchars.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CS/rwchars.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/VB/rwchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d76a-278">El valor de <paramref name="chars" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-278">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-279">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-279">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-280">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-280">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-281">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-281">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-282">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-282">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-283">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-283">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member Write : decimal -&gt; unit&#xA;override this.Write : decimal -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2d76a-284">Valor decimal que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-284">The decimal value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-285">Escribe un valor decimal en la secuencia actual y avanza la posición de la secuencia en dieciséis bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-285">Writes a decimal value to the current stream and advances the stream position by sixteen bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-286">En la tabla siguiente se muestra ejemplos de otras tareas de E/S típicas o relacionadas.</span><span class="sxs-lookup"><span data-stu-id="2d76a-286">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="2d76a-287">Para...</span><span class="sxs-lookup"><span data-stu-id="2d76a-287">To do this...</span></span>|<span data-ttu-id="2d76a-288">Vea el ejemplo de este tema...</span><span class="sxs-lookup"><span data-stu-id="2d76a-288">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="2d76a-289">Crear un archivo de texto</span><span class="sxs-lookup"><span data-stu-id="2d76a-289">Create a text file.</span></span>|[<span data-ttu-id="2d76a-290">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="2d76a-290">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="2d76a-291">Escribir en un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="2d76a-291">Write to a text file.</span></span>|[<span data-ttu-id="2d76a-292">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="2d76a-292">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="2d76a-293">Leer de un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="2d76a-293">Read from a text file.</span></span>|[<span data-ttu-id="2d76a-294">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="2d76a-294">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="2d76a-295">Anexar texto a un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-295">Append text to a file.</span></span>|[<span data-ttu-id="2d76a-296">Cómo: Abrir y anexar a un archivo de registro</span><span class="sxs-lookup"><span data-stu-id="2d76a-296">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="2d76a-297">Obtiene el tamaño de un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-297">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="2d76a-298">Obtener los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-298">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="2d76a-299">Establezca los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-299">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="2d76a-300">Determinar si existe un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-300">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="2d76a-301">Leer de un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="2d76a-301">Read from a binary file.</span></span>|[<span data-ttu-id="2d76a-302">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="2d76a-302">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="2d76a-303">Escribir en un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="2d76a-303">Write to a binary file.</span></span>|[<span data-ttu-id="2d76a-304">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="2d76a-304">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-305">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-305">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-306">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-306">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-307">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-307">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-308">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-308">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-309">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-309">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(double value);" />
      <MemberSignature Language="F#" Value="abstract member Write : double -&gt; unit&#xA;override this.Write : double -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2d76a-310">Valor de punto flotante de ocho bytes que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-310">The eight-byte floating-point value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-311">Escribe un valor de punto flotante de ocho bytes en la secuencia actual y avanza la posición de la secuencia en ocho bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-311">Writes an eight-byte floating-point value to the current stream and advances the stream position by eight bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-312">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-312">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d76a-313">El ejemplo de código siguiente muestra cómo leer y escribir `Double` datos en la memoria utilizando la <xref:System.IO.BinaryReader> y `BinaryWriter` clases en la parte superior de la <xref:System.IO.MemoryStream> clase.</span><span class="sxs-lookup"><span data-stu-id="2d76a-313">The following code example shows how to read and write `Double` data to memory by using the <xref:System.IO.BinaryReader> and `BinaryWriter` classes on top of the <xref:System.IO.MemoryStream> class.</span></span> <span data-ttu-id="2d76a-314">`MemoryStream` solo las lecturas y escrituras `Byte` datos.</span><span class="sxs-lookup"><span data-stu-id="2d76a-314">`MemoryStream` only reads and writes `Byte` data.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-315">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-315">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-316">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-316">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-317">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-317">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-318">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-318">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-319">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-319">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(short value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int16 -&gt; unit&#xA;override this.Write : int16 -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2d76a-320">Entero con signo de dos bytes que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-320">The two-byte signed integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-321">Escribe un entero con signo de dos bytes en la secuencia actual y avanza la posición de la secuencia en dos bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-321">Writes a two-byte signed integer to the current stream and advances the stream position by two bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-322">`BinaryWriter` Este tipo de datos se almacena en formato little-endian.</span><span class="sxs-lookup"><span data-stu-id="2d76a-322">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="2d76a-323">En la tabla siguiente se muestra ejemplos de otras tareas de E/S típicas o relacionadas.</span><span class="sxs-lookup"><span data-stu-id="2d76a-323">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="2d76a-324">Para...</span><span class="sxs-lookup"><span data-stu-id="2d76a-324">To do this...</span></span>|<span data-ttu-id="2d76a-325">Vea el ejemplo de este tema...</span><span class="sxs-lookup"><span data-stu-id="2d76a-325">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="2d76a-326">Crear un archivo de texto</span><span class="sxs-lookup"><span data-stu-id="2d76a-326">Create a text file.</span></span>|[<span data-ttu-id="2d76a-327">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="2d76a-327">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="2d76a-328">Escribir en un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="2d76a-328">Write to a text file.</span></span>|[<span data-ttu-id="2d76a-329">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="2d76a-329">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="2d76a-330">Leer de un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="2d76a-330">Read from a text file.</span></span>|[<span data-ttu-id="2d76a-331">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="2d76a-331">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="2d76a-332">Anexar texto a un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-332">Append text to a file.</span></span>|[<span data-ttu-id="2d76a-333">Cómo: Abrir y anexar a un archivo de registro</span><span class="sxs-lookup"><span data-stu-id="2d76a-333">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="2d76a-334">Obtiene el tamaño de un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-334">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="2d76a-335">Obtener los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-335">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="2d76a-336">Establezca los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-336">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="2d76a-337">Determinar si existe un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-337">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="2d76a-338">Leer de un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="2d76a-338">Read from a binary file.</span></span>|[<span data-ttu-id="2d76a-339">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="2d76a-339">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="2d76a-340">Escribir en un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="2d76a-340">Write to a binary file.</span></span>|[<span data-ttu-id="2d76a-341">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="2d76a-341">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-342">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-342">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-343">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-343">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-344">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-344">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-345">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-345">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-346">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-346">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(int value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int -&gt; unit&#xA;override this.Write : int -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2d76a-347">Entero con signo de cuatro bytes que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-347">The four-byte signed integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-348">Escribe un entero con signo de cuatro bytes en la secuencia actual y avanza la posición de la secuencia en cuatro bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-348">Writes a four-byte signed integer to the current stream and advances the stream position by four bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-349">`BinaryWriter` Este tipo de datos se almacena en formato little-endian.</span><span class="sxs-lookup"><span data-stu-id="2d76a-349">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="2d76a-350">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-350">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d76a-351">El ejemplo de código siguiente muestra cómo almacenar y recuperar la configuración de la aplicación en un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-351">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-352">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-352">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-353">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-353">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-354">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-354">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-355">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-355">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-356">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-356">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(long value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int64 -&gt; unit&#xA;override this.Write : int64 -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2d76a-357">Entero con signo de ocho bytes que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-357">The eight-byte signed integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-358">Escribe un entero con signo de ocho bytes en la secuencia actual y avanza la posición de la secuencia en ocho bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-358">Writes an eight-byte signed integer to the current stream and advances the stream position by eight bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-359">`BinaryWriter` Este tipo de datos se almacena en formato little-endian.</span><span class="sxs-lookup"><span data-stu-id="2d76a-359">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="2d76a-360">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-360">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-361">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-361">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-362">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-362">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-363">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-363">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-364">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-364">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-365">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-365">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : ReadOnlySpan&lt;byte&gt; -&gt; unit&#xA;override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="binaryWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (chars As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="abstract member Write : ReadOnlySpan&lt;char&gt; -&gt; unit&#xA;override this.Write : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="binaryWriter.Write chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As SByte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::SByte value);" />
      <MemberSignature Language="F#" Value="abstract member Write : sbyte -&gt; unit&#xA;override this.Write : sbyte -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2d76a-366">Byte con signo que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-366">The signed byte to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-367">Escribe un byte con signo en la secuencia actual y avanza la posición de la secuencia en un byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-367">Writes a signed byte to the current stream and advances the stream position by one byte.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-368">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-368">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-369">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-369">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-370">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-370">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-371">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-371">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-372">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-372">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-373">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-373">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(float value);" />
      <MemberSignature Language="F#" Value="abstract member Write : single -&gt; unit&#xA;override this.Write : single -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2d76a-374">Valor de punto flotante de cuatro bytes que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-374">The four-byte floating-point value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-375">Escribe un valor de punto flotante de cuatro bytes en la secuencia actual y avanza la posición de la secuencia en cuatro bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-375">Writes a four-byte floating-point value to the current stream and advances the stream position by four bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-376">`BinaryWriter` Este tipo de datos se almacena en formato little-endian.</span><span class="sxs-lookup"><span data-stu-id="2d76a-376">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="2d76a-377">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-377">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d76a-378">El ejemplo de código siguiente muestra cómo almacenar y recuperar la configuración de la aplicación en un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-378">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-379">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-379">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-380">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-380">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-381">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-381">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-382">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-382">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-383">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-383">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2d76a-384">Valor que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-384">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-385">Escribe una cadena de longitud prefijada en esta secuencia en la codificación actual de <see cref="T:System.IO.BinaryWriter" /> y hace avanzar la posición actual de la secuencia de acuerdo con la codificación utilizada y los caracteres específicos escritos en dicha secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-385">Writes a length-prefixed string to this stream in the current encoding of the <see cref="T:System.IO.BinaryWriter" />, and advances the current position of the stream in accordance with the encoding used and the specific characters being written to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-386">Medio de longitud fija que este método escribe primero la longitud de la cadena, en bytes, cuando puede codificar con el <xref:System.IO.BinaryWriter> codificación de la instancia en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="2d76a-386">Length-prefixed means that this method first writes the length of the string, in bytes, when encoded with the <xref:System.IO.BinaryWriter> instance's current encoding to the stream.</span></span> <span data-ttu-id="2d76a-387">Este valor se escribe como un entero sin signo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-387">This value is written as an unsigned integer.</span></span> <span data-ttu-id="2d76a-388">Este método, a continuación, escribe dicho número de bytes en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="2d76a-388">This method then writes that many bytes to the stream.</span></span>  
  
 <span data-ttu-id="2d76a-389">Por ejemplo, la cadena "A" tiene una longitud de 1, pero cuando codificado con UTF-16; la longitud es de 2 bytes, por lo que el valor escrito en el prefijo es 2, y 3 bytes se escriben en el flujo, incluido el prefijo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-389">For example, the string "A" has a length of 1, but when encoded with UTF-16; the length is 2 bytes, so the value written in the prefix is 2, and 3 bytes are written to the stream, including the prefix.</span></span>  
  
 <span data-ttu-id="2d76a-390">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-390">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d76a-391">El ejemplo de código siguiente muestra cómo almacenar y recuperar la configuración de la aplicación en un archivo.</span><span class="sxs-lookup"><span data-stu-id="2d76a-391">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-392">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-392">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d76a-393">El valor de <paramref name="value" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-393">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-394">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-394">The stream is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-395">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-395">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-396">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-396">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-397">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-397">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="abstract member Write : uint16 -&gt; unit&#xA;override this.Write : uint16 -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2d76a-398">Entero sin signo de dos bytes que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-398">The two-byte unsigned integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-399">Escribe un entero sin signo de dos bytes en la secuencia actual y avanza la posición de la secuencia en dos bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-399">Writes a two-byte unsigned integer to the current stream and advances the stream position by two bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-400">`BinaryWriter` Este tipo de datos se almacena en formato little-endian.</span><span class="sxs-lookup"><span data-stu-id="2d76a-400">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="2d76a-401">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-401">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-402">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-402">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-403">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-403">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-404">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-404">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-405">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-405">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-406">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-406">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member Write : uint32 -&gt; unit&#xA;override this.Write : uint32 -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2d76a-407">Entero sin signo de cuatro bytes que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-407">The four-byte unsigned integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-408">Escribe un entero sin signo de cuatro bytes en la secuencia actual y avanza la posición de la secuencia en cuatro bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-408">Writes a four-byte unsigned integer to the current stream and advances the stream position by four bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-409">`BinaryWriter` Este tipo de datos se almacena en formato little-endian.</span><span class="sxs-lookup"><span data-stu-id="2d76a-409">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="2d76a-410">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-410">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-411">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-411">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-412">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-412">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-413">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-413">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-414">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-414">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-415">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-415">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="abstract member Write : uint64 -&gt; unit&#xA;override this.Write : uint64 -&gt; unit" Usage="binaryWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2d76a-416">Entero sin signo de ocho bytes que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-416">The eight-byte unsigned integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-417">Escribe un entero sin signo de ocho bytes en la secuencia actual y avanza la posición de la secuencia en ocho bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-417">Writes an eight-byte unsigned integer to the current stream and advances the stream position by eight bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-418">`BinaryWriter` Este tipo de datos se almacena en formato little-endian.</span><span class="sxs-lookup"><span data-stu-id="2d76a-418">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="2d76a-419">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-419">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-420">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-420">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-421">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-421">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-422">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-422">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-423">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-423">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-424">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-424">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : byte[] * int * int -&gt; unit&#xA;override this.Write : byte[] * int * int -&gt; unit" Usage="binaryWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="2d76a-425">Matriz de bytes que contiene los datos que se van a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-425">A byte array containing the data to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2d76a-426">Índice del primer byte que se lee de <paramref name="buffer" /> y se escribe en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-426">The index of the first byte to read from <paramref name="buffer" /> and to write to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2d76a-427">Número de bytes que se leen de <paramref name="buffer" /> y se escriben en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-427">The number of bytes to read from <paramref name="buffer" /> and to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-428">Escribe una región de una matriz de bytes en la secuencia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-428">Writes a region of a byte array to the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-429">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-429">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d76a-430">El ejemplo de código siguiente muestra cómo escribir datos binarios utilizando la memoria como un almacén de respaldo y, a continuación, compruebe que los datos se han escrito correctamente.</span><span class="sxs-lookup"><span data-stu-id="2d76a-430">The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/CS/rwreadbytes.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/VB/rwreadbytes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d76a-431">La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-431">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d76a-432">El valor de <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-432">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d76a-433">
            <paramref name="index" /> o <paramref name="count" /> es negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-433">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-434">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-434">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-435">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-435">The stream is closed.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-436">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-436">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-437">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-437">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-438">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-438">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (chars As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] * int * int -&gt; unit&#xA;override this.Write : char[] * int * int -&gt; unit" Usage="binaryWriter.Write (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="2d76a-439">Matriz de caracteres que contiene los datos que se van a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-439">A character array containing the data to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2d76a-440">Índice del primer carácter que se lee de <paramref name="chars" /> y se escribe en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-440">The index of the first character to read from <paramref name="chars" /> and to write to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2d76a-441">Número de caracteres que se leen de <paramref name="chars" /> y se escriben en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-441">The number of characters to read from <paramref name="chars" /> and to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-442">Escribe una sección de una matriz de caracteres en la secuencia actual y avanza la posición actual de la secuencia de acuerdo con el <see langword="Encoding" /> utilizado y quizás los caracteres específicos que se escriben en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-442">Writes a section of a character array to the current stream, and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and perhaps the specific characters being written to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-443">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-443">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d76a-444">El ejemplo de código siguiente muestra cómo leer y escribir datos de uso de memoria como una memoria auxiliar.</span><span class="sxs-lookup"><span data-stu-id="2d76a-444">The following code example shows how to read and write data using memory as a backing store.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CPP/rwreadchars.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CS/rwreadchars.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/VB/rwreadchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2d76a-445">La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-445">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2d76a-446">El valor de <paramref name="chars" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-446">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2d76a-447">
            <paramref name="index" /> o <paramref name="count" /> es negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-447">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-448">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-448">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-449">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-449">The stream is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="2d76a-450">E/S de archivos y secuencias</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-450">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="2d76a-451">Cómo: Leer texto de un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-451">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="2d76a-452">Cómo: Escribir texto en un archivo</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-452">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Write7BitEncodedInt">
      <MemberSignature Language="C#" Value="protected void Write7BitEncodedInt (int value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Write7BitEncodedInt(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Write7BitEncodedInt (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Write7BitEncodedInt(int value);" />
      <MemberSignature Language="F#" Value="member this.Write7BitEncodedInt : int -&gt; unit" Usage="binaryWriter.Write7BitEncodedInt value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2d76a-453">Entero de 32 bits que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-453">The 32-bit integer to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2d76a-454">Escribe un entero de 32 bits en formato comprimido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-454">Writes a 32-bit integer in a compressed format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d76a-455">El entero de la `value` parámetro está escrito con siete bits cada vez, empezando por los siete bits menos significativos.</span><span class="sxs-lookup"><span data-stu-id="2d76a-455">The integer of the `value` parameter is written out seven bits at a time, starting with the seven least-significant bits.</span></span> <span data-ttu-id="2d76a-456">El bit alto de un byte indica si hay más bytes que se escribirán después de este.</span><span class="sxs-lookup"><span data-stu-id="2d76a-456">The high bit of a byte indicates whether there are more bytes to be written after this one.</span></span>  
  
 <span data-ttu-id="2d76a-457">Si `value` se ajustará en siete bits, toma un solo byte de espacio.</span><span class="sxs-lookup"><span data-stu-id="2d76a-457">If `value` will fit in seven bits, it takes only one byte of space.</span></span> <span data-ttu-id="2d76a-458">Si `value` no cabe en siete bits, el bit alto se establece en el primer byte y se escribe. `value` , a continuación, se desplazan por siete bits y el siguiente byte que se escribe.</span><span class="sxs-lookup"><span data-stu-id="2d76a-458">If `value` will not fit in seven bits, the high bit is set on the first byte and written out. `value` is then shifted by seven bits and the next byte is written.</span></span> <span data-ttu-id="2d76a-459">Este proceso se repite hasta que se ha escrito todo el entero.</span><span class="sxs-lookup"><span data-stu-id="2d76a-459">This process is repeated until the entire integer has been written.</span></span>  
  
 <span data-ttu-id="2d76a-460">Para obtener una lista de tareas de E/S comunes, consulte [tareas de E/S comunes](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="2d76a-460">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="2d76a-461">Se llega al final de la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-461">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2d76a-462">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-462">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2d76a-463">La secuencia está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2d76a-463">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>
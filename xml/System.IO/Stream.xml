<Type Name="Stream" FullName="System.IO.Stream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="956be57356bb7f5a84f5cc383e6ca764602d9630" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58730437" /></Metadata><TypeSignature Language="C#" Value="public abstract class Stream : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Stream extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Stream" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Stream&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stream abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type Stream = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="39559-101">Proporciona una vista genérica de una secuencia de bytes.</span><span class="sxs-lookup"><span data-stu-id="39559-101">Provides a generic view of a sequence of bytes.</span></span> <span data-ttu-id="39559-102">Esta es una clase abstracta.</span><span class="sxs-lookup"><span data-stu-id="39559-102">This is an abstract class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-103"><xref:System.IO.Stream> es la clase base abstracta de todas las secuencias.</span><span class="sxs-lookup"><span data-stu-id="39559-103"><xref:System.IO.Stream> is the abstract base class of all streams.</span></span> <span data-ttu-id="39559-104">Una secuencia es una abstracción de una secuencia de bytes como, por ejemplo, un archivo, un dispositivo de entrada/salida, una canalización de comunicación entre procesos o un socket TCP/IP.</span><span class="sxs-lookup"><span data-stu-id="39559-104">A stream is an abstraction of a sequence of bytes, such as a file, an input/output device, an inter-process communication pipe, or a TCP/IP socket.</span></span> <span data-ttu-id="39559-105">La <xref:System.IO.Stream> clase y sus clases derivadas proporcionan una visión genérica de estos diferentes tipos de entrada y salida y aislar el programador de los detalles específicos del sistema operativo y los dispositivos subyacentes.</span><span class="sxs-lookup"><span data-stu-id="39559-105">The <xref:System.IO.Stream> class and its derived classes provide a generic view of these different types of input and output, and isolate the programmer from the specific details of the operating system and the underlying devices.</span></span>  
  
 <span data-ttu-id="39559-106">Las secuencias comprenden tres operaciones fundamentales:</span><span class="sxs-lookup"><span data-stu-id="39559-106">Streams involve three fundamental operations:</span></span>  
  
-   <span data-ttu-id="39559-107">Puede leer desde secuencias.</span><span class="sxs-lookup"><span data-stu-id="39559-107">You can read from streams.</span></span> <span data-ttu-id="39559-108">Lectura es la transferencia de datos de una secuencia en una estructura de datos, como una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="39559-108">Reading is the transfer of data from a stream into a data structure, such as an array of bytes.</span></span>  
  
-   <span data-ttu-id="39559-109">Puede escribir en secuencias.</span><span class="sxs-lookup"><span data-stu-id="39559-109">You can write to streams.</span></span> <span data-ttu-id="39559-110">Escritura es la transferencia de datos de una estructura de datos en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-110">Writing is the transfer of data from a data structure into a stream.</span></span>  
  
-   <span data-ttu-id="39559-111">Las secuencias pueden admitir búsquedas.</span><span class="sxs-lookup"><span data-stu-id="39559-111">Streams can support seeking.</span></span> <span data-ttu-id="39559-112">Búsqueda hace referencia a consultar y modificar la posición actual dentro de un flujo.</span><span class="sxs-lookup"><span data-stu-id="39559-112">Seeking refers to querying and modifying the current position within a stream.</span></span> <span data-ttu-id="39559-113">Buscar capacidad depende del tipo de un flujo no tiene memoria auxiliar.</span><span class="sxs-lookup"><span data-stu-id="39559-113">Seek capability depends on the kind of backing store a stream has.</span></span> <span data-ttu-id="39559-114">Por ejemplo, secuencias de red no tienen ningún concepto unificada de la posición actual y, por tanto, normalmente no admitan búsquedas.</span><span class="sxs-lookup"><span data-stu-id="39559-114">For example, network streams have no unified concept of a current position, and therefore typically do not support seeking.</span></span>  
  
 <span data-ttu-id="39559-115">Algunos de los más usan de secuencias que heredan de <xref:System.IO.Stream> son <xref:System.IO.FileStream>, y <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="39559-115">Some of the more commonly used streams that inherit from <xref:System.IO.Stream> are <xref:System.IO.FileStream>, and <xref:System.IO.MemoryStream>.</span></span>  
  
 <span data-ttu-id="39559-116">Según el origen de datos subyacente o el repositorio, las secuencias pueden admitir solo algunas de estas capacidades.</span><span class="sxs-lookup"><span data-stu-id="39559-116">Depending on the underlying data source or repository, streams might support only some of these capabilities.</span></span> <span data-ttu-id="39559-117">Puede consultar una secuencia para sus funciones mediante el <xref:System.IO.Stream.CanRead%2A>, <xref:System.IO.Stream.CanWrite%2A>, y <xref:System.IO.Stream.CanSeek%2A> propiedades de la <xref:System.IO.Stream> clase.</span><span class="sxs-lookup"><span data-stu-id="39559-117">You can query a stream for its capabilities by using the <xref:System.IO.Stream.CanRead%2A>, <xref:System.IO.Stream.CanWrite%2A>, and <xref:System.IO.Stream.CanSeek%2A> properties of the <xref:System.IO.Stream> class.</span></span>  
  
 <span data-ttu-id="39559-118">El <xref:System.IO.Stream.Read%2A> y <xref:System.IO.Stream.Write%2A> métodos leer y escribir datos en una variedad de formatos.</span><span class="sxs-lookup"><span data-stu-id="39559-118">The <xref:System.IO.Stream.Read%2A> and <xref:System.IO.Stream.Write%2A> methods read and write data in a variety of formats.</span></span> <span data-ttu-id="39559-119">Para las secuencias que admiten búsquedas, utilice la <xref:System.IO.Stream.Seek%2A> y <xref:System.IO.Stream.SetLength%2A> métodos y la <xref:System.IO.Stream.Position%2A> y <xref:System.IO.Stream.Length%2A> propiedades para consultar y modificar la posición actual y la longitud de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-119">For streams that support seeking, use the <xref:System.IO.Stream.Seek%2A> and <xref:System.IO.Stream.SetLength%2A> methods and the <xref:System.IO.Stream.Position%2A> and <xref:System.IO.Stream.Length%2A> properties to query and modify the current position and length of a stream.</span></span>  
  
 <span data-ttu-id="39559-120">Este tipo implementa la <xref:System.IDisposable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="39559-120">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="39559-121">Cuando haya terminado de utilizar el tipo, debe deshacerse de él directa o indirectamente.</span><span class="sxs-lookup"><span data-stu-id="39559-121">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="39559-122">Para deshacerse del tipo directamente, llame a su <xref:System.IDisposable.Dispose%2A> método en un `try` / `catch` bloque.</span><span class="sxs-lookup"><span data-stu-id="39559-122">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="39559-123">Para deshacerse de él, indirectamente, usar una construcción de lenguaje, como `using` (en C#) o `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="39559-123">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="39559-124">Para obtener más información, vea la sección "Uso de un objeto que implementa IDisposable" en el <xref:System.IDisposable> tema de la interfaz.</span><span class="sxs-lookup"><span data-stu-id="39559-124">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="39559-125">Desechar un <xref:System.IO.Stream> objeto vacía los datos almacenados en búfer y básicamente llama el <xref:System.IO.Stream.Flush%2A> método por usted.</span><span class="sxs-lookup"><span data-stu-id="39559-125">Disposing a <xref:System.IO.Stream> object flushes any buffered data, and essentially calls the <xref:System.IO.Stream.Flush%2A> method for you.</span></span> <span data-ttu-id="39559-126"><xref:System.IO.Stream.Dispose%2A> También libera los recursos del sistema operativo como identificadores de archivos, conexiones de red o memoria usada para cualquier búfer interno.</span><span class="sxs-lookup"><span data-stu-id="39559-126"><xref:System.IO.Stream.Dispose%2A> also releases operating system resources such as file handles, network connections, or memory used for any internal buffering.</span></span> <span data-ttu-id="39559-127">La <xref:System.IO.BufferedStream> clase proporciona la capacidad de encapsular una secuencia almacenada en búfer en otra secuencia con el fin de mejorar la lectura y escritura de rendimiento.</span><span class="sxs-lookup"><span data-stu-id="39559-127">The <xref:System.IO.BufferedStream> class provides the capability of wrapping a buffered stream around another stream in order to improve read and write performance.</span></span>  
  
 <span data-ttu-id="39559-128">A partir de la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], el <xref:System.IO.Stream> clase incluye métodos asincrónicos para simplificar las operaciones asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="39559-128">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Stream> class includes async methods to simplify asynchronous operations.</span></span> <span data-ttu-id="39559-129">Contiene un método asincrónico `Async` en su nombre, como <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, y <xref:System.IO.Stream.FlushAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="39559-129">An async method contains `Async` in its name, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>.</span></span> <span data-ttu-id="39559-130">Estos métodos le permiten realizar operaciones de E/S que consumen muchos recursos sin bloquear el subproceso principal.</span><span class="sxs-lookup"><span data-stu-id="39559-130">These methods enable you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="39559-131">Esta consideración de rendimiento es especialmente importante en una aplicación de la [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o una aplicación de [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] en que una operación de streaming prolongada puede bloquear el subproceso de interfaz de usuario y hacer que parezca que una aplicación ha dejado de responder.</span><span class="sxs-lookup"><span data-stu-id="39559-131">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="39559-132">Los métodos asincrónicos se usan junto con la `async` y `await` palabras clave en Visual Basic y C#.</span><span class="sxs-lookup"><span data-stu-id="39559-132">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="39559-133">Cuando se usa en un [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app, <xref:System.IO.Stream> incluye dos métodos de extensión: <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> y <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="39559-133">When used in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app, <xref:System.IO.Stream> includes two extension methods: <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>.</span></span> <span data-ttu-id="39559-134">Estos métodos convierten un <xref:System.IO.Stream> objeto a una secuencia en la [!INCLUDE[wrt](~/includes/wrt-md.md)].</span><span class="sxs-lookup"><span data-stu-id="39559-134">These methods convert a <xref:System.IO.Stream> object to a stream in the [!INCLUDE[wrt](~/includes/wrt-md.md)].</span></span> <span data-ttu-id="39559-135">También puede convertir una secuencia en la [!INCLUDE[wrt](~/includes/wrt-md.md)] a un <xref:System.IO.Stream> objeto utilizando el <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> y <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="39559-135">You can also convert a stream in the [!INCLUDE[wrt](~/includes/wrt-md.md)] to a <xref:System.IO.Stream> object by using the <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> methods.</span></span> <span data-ttu-id="39559-136">Para obtener más información, vea [Cómo: Convertir flujos de .NET Framework en flujos de Windows Runtime y viceversa](~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md)</span><span class="sxs-lookup"><span data-stu-id="39559-136">For more information, see [How to: Convert Between .NET Framework Streams and Windows Runtime Streams](~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md)</span></span>  
  
 <span data-ttu-id="39559-137">Algunas implementaciones de secuencia realizan en un búfer local de los datos subyacentes para mejorar el rendimiento.</span><span class="sxs-lookup"><span data-stu-id="39559-137">Some stream implementations perform local buffering of the underlying data to improve performance.</span></span> <span data-ttu-id="39559-138">Para estos flujos, puede usar el <xref:System.IO.Stream.Flush%2A> o <xref:System.IO.Stream.FlushAsync%2A> método para borrar los búferes internos y asegúrese de que todos los datos se ha escrito en el origen de datos o repositorio subyacente.</span><span class="sxs-lookup"><span data-stu-id="39559-138">For such streams, you can use the <xref:System.IO.Stream.Flush%2A> or <xref:System.IO.Stream.FlushAsync%2A> method to clear any internal buffers and ensure that all data has been written to the underlying data source or repository.</span></span>  
  
 <span data-ttu-id="39559-139">Si necesita una secuencia sin memoria auxiliar (también conocido como un depósito de bits), use el <xref:System.IO.Stream.Null> campo que desea recuperar una instancia de una secuencia que se ha diseñado para este propósito.</span><span class="sxs-lookup"><span data-stu-id="39559-139">If you need a stream with no backing store (also known as a bit bucket), use the <xref:System.IO.Stream.Null> field to retrieve an instance of a stream that is designed for this purpose.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39559-140">En el ejemplo siguiente se muestra cómo utilizar dos <xref:System.IO.FileStream> objetos que se va a copiar los archivos de forma asincrónica desde un directorio en otro directorio.</span><span class="sxs-lookup"><span data-stu-id="39559-140">The following example demonstrates how to use two <xref:System.IO.FileStream> objects to asynchronously copy the files from one directory to another directory.</span></span> <span data-ttu-id="39559-141">La clase <xref:System.IO.FileStream> se deriva de la clase <xref:System.IO.Stream> .</span><span class="sxs-lookup"><span data-stu-id="39559-141">The <xref:System.IO.FileStream> class derives from the <xref:System.IO.Stream> class.</span></span> <span data-ttu-id="39559-142">Observe que el controlador de eventos <xref:System.Web.UI.WebControls.Button.Click> para el control <xref:System.Windows.Controls.Button> está marcado con el modificador `async` porque llama a un método asincrónico.</span><span class="sxs-lookup"><span data-stu-id="39559-142">Notice that the <xref:System.Web.UI.WebControls.Button.Click> event handler for the <xref:System.Windows.Controls.Button> control is marked with the `async` modifier because it calls an asynchronous method.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#1](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example.cs#1)]
 [!code-vb[Asynchronous_File_IO_async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="39559-143">Cuando se implementa una clase derivada de <see cref="T:System.IO.Stream" />, debe proporcionar implementaciones para el <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> y <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="39559-143">When you implement a derived class of <see cref="T:System.IO.Stream" />, you must provide implementations for the <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> methods.</span></span> <span data-ttu-id="39559-144">Los métodos asincrónicos <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />, <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />, y <see cref="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" /> usan los métodos sincrónicos <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> y <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> en sus implementaciones.</span><span class="sxs-lookup"><span data-stu-id="39559-144">The asynchronous methods <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />, <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />, and <see cref="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" /> use the synchronous methods <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> in their implementations.</span></span> <span data-ttu-id="39559-145">Por lo tanto, las implementaciones de <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> y <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> funcionará correctamente con los métodos asincrónicos.</span><span class="sxs-lookup"><span data-stu-id="39559-145">Therefore, your implementations of <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> will work correctly with the asynchronous methods.</span></span> <span data-ttu-id="39559-146">Las implementaciones predeterminadas de <see cref="M:System.IO.Stream.ReadByte" /> y <see cref="M:System.IO.Stream.WriteByte(System.Byte)" /> crear una nueva matriz de bytes de solo elemento y, a continuación, llamar a las implementaciones de <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> y <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="39559-146">The default implementations of <see cref="M:System.IO.Stream.ReadByte" /> and <see cref="M:System.IO.Stream.WriteByte(System.Byte)" /> create a new single-element byte array, and then call your implementations of <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span></span> <span data-ttu-id="39559-147">Al derivar de <see cref="T:System.IO.Stream" />, se recomienda reemplazar estos métodos para tener acceso a su búfer interno, si tiene uno, para mejorar considerablemente el rendimiento.</span><span class="sxs-lookup"><span data-stu-id="39559-147">When you derive from <see cref="T:System.IO.Stream" />, we recommend that you override these methods to access your internal buffer, if you have one, for substantially better performance.</span></span> <span data-ttu-id="39559-148">También debe proporcionar implementaciones de <see cref="P:System.IO.Stream.CanRead" />, <see cref="P:System.IO.Stream.CanSeek" />, <see cref="P:System.IO.Stream.CanWrite" />, <see cref="M:System.IO.Stream.Flush" />, <see cref="P:System.IO.Stream.Length" />, <see cref="P:System.IO.Stream.Position" />, <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />, y <see cref="M:System.IO.Stream.SetLength(System.Int64)" />.</span><span class="sxs-lookup"><span data-stu-id="39559-148">You must also provide implementations of <see cref="P:System.IO.Stream.CanRead" />, <see cref="P:System.IO.Stream.CanSeek" />, <see cref="P:System.IO.Stream.CanWrite" />, <see cref="M:System.IO.Stream.Flush" />, <see cref="P:System.IO.Stream.Length" />, <see cref="P:System.IO.Stream.Position" />, <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />, and <see cref="M:System.IO.Stream.SetLength(System.Int64)" />.</span></span>  
  
<span data-ttu-id="39559-149">No invalidar el <see cref="M:System.IO.Stream.Close" /> método, en su lugar, coloque todos los <see cref="T:System.IO.Stream" /> lógica de limpieza en el <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> método.</span><span class="sxs-lookup"><span data-stu-id="39559-149">Do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all the <see cref="T:System.IO.Stream" /> cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span></span> <span data-ttu-id="39559-150">Para obtener más información, consulte [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="39559-150">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span></para></block>
    <altmember cref="T:System.IO.FileStream" />
    <altmember cref="T:System.IO.MemoryStream" />
    <altmember cref="T:System.IO.BufferedStream" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-151">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-151">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md"><span data-ttu-id="39559-152">Cómo: Convertir flujos de .NET Framework en flujos de Windows en tiempo de ejecución, y viceversa</span><span class="sxs-lookup"><span data-stu-id="39559-152">How to: Convert Between .NET Framework Streams and Windows Runtime Streams</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Stream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Stream();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39559-153">Inicializa una nueva instancia de la clase <see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="39559-153">Initializes a new instance of the <see cref="T:System.IO.Stream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-154"><xref:System.IO.Stream> es la clase base abstracta de todas las secuencias.</span><span class="sxs-lookup"><span data-stu-id="39559-154"><xref:System.IO.Stream> is the abstract base class of all streams.</span></span>  
  
 <span data-ttu-id="39559-155">Algunos de los más usan de secuencias que heredan de <xref:System.IO.Stream> son <xref:System.IO.FileStream>, y <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="39559-155">Some of the more commonly used streams that inherit from <xref:System.IO.Stream> are <xref:System.IO.FileStream>, and <xref:System.IO.MemoryStream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="stream.BeginRead (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="39559-156">El búfer en el que se leen los datos.</span><span class="sxs-lookup"><span data-stu-id="39559-156">The buffer to read the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="39559-157">Posición de desplazamiento en bytes de <paramref name="buffer" /> donde se comienza a escribir los datos leídos de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-157">The byte offset in <paramref name="buffer" /> at which to begin writing data read from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="39559-158">Número máximo de bytes que se pueden leer.</span><span class="sxs-lookup"><span data-stu-id="39559-158">The maximum number of bytes to read.</span></span></param>
        <param name="callback"><span data-ttu-id="39559-159">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado la lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-159">An optional asynchronous callback, to be called when the read is complete.</span></span></param>
        <param name="state"><span data-ttu-id="39559-160">Objeto proporcionado por el usuario que distingue esta solicitud de lectura asincrónica de otras.</span><span class="sxs-lookup"><span data-stu-id="39559-160">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span></span></param>
        <summary><span data-ttu-id="39559-161">Comienza una operación de lectura asincrónica.</span><span class="sxs-lookup"><span data-stu-id="39559-161">Begins an asynchronous read operation.</span></span> <span data-ttu-id="39559-162">(Considere usar <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</span><span class="sxs-lookup"><span data-stu-id="39559-162">(Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="39559-163"><see cref="T:System.IAsyncResult" /> que representa la lectura asincrónica, que puede hallarse aún pendiente.</span><span class="sxs-lookup"><span data-stu-id="39559-163">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous read, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-164">En .NET Framework 4 y versiones anteriores, es necesario usar métodos como <xref:System.IO.Stream.BeginRead%2A> y <xref:System.IO.Stream.EndRead%2A> para implementar operaciones de E/S asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="39559-164">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="39559-165">Estos métodos siguen estando disponibles en el [!INCLUDE[net_v45](~/includes/net-v45-md.md)] para admitir código heredado; sin embargo, los nuevos métodos asincrónicos, como <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, y <xref:System.IO.Stream.FlushAsync%2A>, ayuda implementa operaciones asincrónicas de E/S más fácilmente.</span><span class="sxs-lookup"><span data-stu-id="39559-165">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="39559-166">La implementación predeterminada de `BeginRead` en una secuencia de llamadas la <xref:System.IO.Stream.Read%2A> método sincrónicamente, lo que significa que `Read` podría bloquearse en algunas secuencias.</span><span class="sxs-lookup"><span data-stu-id="39559-166">The default implementation of `BeginRead` on a stream calls the <xref:System.IO.Stream.Read%2A> method synchronously, which means that `Read` might block on some streams.</span></span> <span data-ttu-id="39559-167">Sin embargo, las instancias de clases como `FileStream` y `NetworkStream` son totalmente compatibles con operaciones asincrónicas si las instancias se han abierto de forma asincrónica.</span><span class="sxs-lookup"><span data-stu-id="39559-167">However, instances of classes such as `FileStream` and `NetworkStream` fully support asynchronous operations if the instances have been opened asynchronously.</span></span> <span data-ttu-id="39559-168">Por lo tanto, las llamadas a `BeginRead` no se bloqueará en esas secuencias.</span><span class="sxs-lookup"><span data-stu-id="39559-168">Therefore, calls to `BeginRead` will not block on those streams.</span></span> <span data-ttu-id="39559-169">Puede invalidar `BeginRead` (mediante delegados asincrónicos, por ejemplo) para proporcionar un comportamiento asincrónico.</span><span class="sxs-lookup"><span data-stu-id="39559-169">You can override `BeginRead` (by using async delegates, for example) to provide asynchronous behavior.</span></span>  
  
 <span data-ttu-id="39559-170">Pase el `IAsyncResult` un valor devuelto para la <xref:System.IO.Stream.EndRead%2A> método de la secuencia para determinar cuántos bytes se leyeron y liberar recursos del sistema operativo utilizados en la lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-170">Pass the `IAsyncResult` return value to the <xref:System.IO.Stream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading.</span></span> <span data-ttu-id="39559-171"><xref:System.IO.Stream.EndRead%2A> debe llamarse una vez por cada llamada a <xref:System.IO.Stream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="39559-171"><xref:System.IO.Stream.EndRead%2A> must be called once for every call to <xref:System.IO.Stream.BeginRead%2A>.</span></span> <span data-ttu-id="39559-172">Puede hacerlo con el mismo código que llama `BeginRead` o en una devolución de llamada pasada a `BeginRead`.</span><span class="sxs-lookup"><span data-stu-id="39559-172">You can do this either by using the same code that called `BeginRead` or in a callback passed to `BeginRead`.</span></span>  
  
 <span data-ttu-id="39559-173">La posición actual en la secuencia se actualiza cuando se emite la lectura o escritura asincrónica, no cuando se complete la operación de E/S.</span><span class="sxs-lookup"><span data-stu-id="39559-173">The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.</span></span>  
  
 <span data-ttu-id="39559-174">Varias solicitudes asincrónicas simultáneas representan el orden de finalización de solicitud incierto.</span><span class="sxs-lookup"><span data-stu-id="39559-174">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="39559-175">Use el <xref:System.IO.Stream.CanRead%2A> propiedad para determinar si la instancia actual admite lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-175">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="39559-176">Si una secuencia está cerrada o se pasa un argumento no válido, se producirán inmediatamente excepciones desde `BeginRead`.</span><span class="sxs-lookup"><span data-stu-id="39559-176">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginRead`.</span></span> <span data-ttu-id="39559-177">Errores que se producen durante una solicitud de lectura asincrónica, como un error de disco durante la solicitud de E/S, se producen en el subproceso del grupo y producir excepciones al llamar a `EndRead`.</span><span class="sxs-lookup"><span data-stu-id="39559-177">Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndRead`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39559-178">Se ha intentado realizar una lectura asincrónica más allá del final de la secuencia o se ha producido un error de disco.</span><span class="sxs-lookup"><span data-stu-id="39559-178">Attempted an asynchronous read past the end of the stream, or a disk error occurs.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39559-179">Uno o varios argumentos no son válidos.</span><span class="sxs-lookup"><span data-stu-id="39559-179">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-180">Se efectuó una llamada a los métodos después de cerrar la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-180">Methods were called after the stream was closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-181">La implementación actual de <see langword="Stream" /> no admite la operación de escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-181">The current <see langword="Stream" /> implementation does not support the read operation.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-182">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-182">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-183">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-183">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-184">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-184">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/asynchronous-file-i-o.md"><span data-ttu-id="39559-185">E/S de archivos asincrónica</span><span class="sxs-lookup"><span data-stu-id="39559-185">Asynchronous File I/O</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="stream.BeginWrite (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="39559-186">Búfer del que se van a escribir datos.</span><span class="sxs-lookup"><span data-stu-id="39559-186">The buffer to write data from.</span></span></param>
        <param name="offset"><span data-ttu-id="39559-187">Desplazamiento de bytes en <paramref name="buffer" /> donde debe comenzar la escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-187">The byte offset in <paramref name="buffer" /> from which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="39559-188">Número máximo de bytes que se pueden escribir.</span><span class="sxs-lookup"><span data-stu-id="39559-188">The maximum number of bytes to write.</span></span></param>
        <param name="callback"><span data-ttu-id="39559-189">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado la escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-189">An optional asynchronous callback, to be called when the write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="39559-190">Objeto proporcionado por el usuario que distingue esta solicitud de escritura asincrónica de otras.</span><span class="sxs-lookup"><span data-stu-id="39559-190">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span></span></param>
        <summary><span data-ttu-id="39559-191">Comienza una operación de escritura asincrónica.</span><span class="sxs-lookup"><span data-stu-id="39559-191">Begins an asynchronous write operation.</span></span> <span data-ttu-id="39559-192">(Considere usar <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</span><span class="sxs-lookup"><span data-stu-id="39559-192">(Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="39559-193"><see langword="IAsyncResult" /> que representa la escritura asincrónica, que puede hallarse aún pendiente.</span><span class="sxs-lookup"><span data-stu-id="39559-193">An <see langword="IAsyncResult" /> that represents the asynchronous write, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-194">En .NET Framework 4 y versiones anteriores, es necesario usar métodos como <xref:System.IO.Stream.BeginWrite%2A> y <xref:System.IO.Stream.EndWrite%2A> para implementar operaciones de E/S asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="39559-194">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="39559-195">Estos métodos siguen estando disponibles en el [!INCLUDE[net_v45](~/includes/net-v45-md.md)] para admitir código heredado; sin embargo, los nuevos métodos asincrónicos, como <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, y <xref:System.IO.Stream.FlushAsync%2A>, ayuda implementa operaciones asincrónicas de E/S más fácilmente.</span><span class="sxs-lookup"><span data-stu-id="39559-195">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="39559-196">La implementación predeterminada de `BeginWrite` en una secuencia de llamadas la <xref:System.IO.Stream.Write%2A> método sincrónicamente, lo que significa que `Write` podría bloquearse en algunas secuencias.</span><span class="sxs-lookup"><span data-stu-id="39559-196">The default implementation of `BeginWrite` on a stream calls the <xref:System.IO.Stream.Write%2A> method synchronously, which means that `Write` might block on some streams.</span></span> <span data-ttu-id="39559-197">Sin embargo, las instancias de clases como `FileStream` y `NetworkStream` son totalmente compatibles con operaciones asincrónicas si las instancias se han abierto de forma asincrónica.</span><span class="sxs-lookup"><span data-stu-id="39559-197">However, instances of classes such as `FileStream` and `NetworkStream` fully support asynchronous operations if the instances have been opened asynchronously.</span></span> <span data-ttu-id="39559-198">Por lo tanto, las llamadas a `BeginWrite` no se bloqueará en esas secuencias.</span><span class="sxs-lookup"><span data-stu-id="39559-198">Therefore, calls to `BeginWrite` will not block on those streams.</span></span> <span data-ttu-id="39559-199">Puede invalidar `BeginWrite` (mediante delegados asincrónicos, por ejemplo) para proporcionar un comportamiento asincrónico.</span><span class="sxs-lookup"><span data-stu-id="39559-199">You can override `BeginWrite` (by using async delegates, for example) to provide asynchronous behavior.</span></span>  
  
 <span data-ttu-id="39559-200">Pase el `IAsyncResult` devuelto por el método actual al <xref:System.IO.Stream.EndWrite%2A> para asegurarse de que la operación de escritura finalice y libere los recursos apropiadamente.</span><span class="sxs-lookup"><span data-stu-id="39559-200">Pass the `IAsyncResult` returned by the current method to <xref:System.IO.Stream.EndWrite%2A> to ensure that the write completes and frees resources appropriately.</span></span> <span data-ttu-id="39559-201"><xref:System.IO.Stream.EndWrite%2A> debe llamarse una vez por cada llamada a <xref:System.IO.Stream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="39559-201"><xref:System.IO.Stream.EndWrite%2A> must be called once for every call to <xref:System.IO.Stream.BeginWrite%2A>.</span></span> <span data-ttu-id="39559-202">Puede hacerlo con el mismo código que llama `BeginWrite` o en una devolución de llamada pasada a `BeginWrite`.</span><span class="sxs-lookup"><span data-stu-id="39559-202">You can do this either by using the same code that called `BeginWrite` or in a callback passed to `BeginWrite`.</span></span> <span data-ttu-id="39559-203">Si se produce un error durante la escritura asincrónica, no se producirá una excepción hasta `EndWrite` se denomina con el `IAsyncResult` devuelto por este método.</span><span class="sxs-lookup"><span data-stu-id="39559-203">If an error occurs during an asynchronous write, an exception will not be thrown until `EndWrite` is called with the `IAsyncResult` returned by this method.</span></span>  
  
 <span data-ttu-id="39559-204">Si se puede escribir una secuencia, escribir al final de la secuencia expande la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-204">If a stream is writable, writing at the end of the stream expands the stream.</span></span>  
  
 <span data-ttu-id="39559-205">La posición actual en la secuencia se actualiza cuando se emite la lectura o escritura asincrónica, no cuando se complete la operación de E/S.</span><span class="sxs-lookup"><span data-stu-id="39559-205">The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.</span></span> <span data-ttu-id="39559-206">Varias solicitudes asincrónicas simultáneas representan el orden de finalización de solicitud incierto.</span><span class="sxs-lookup"><span data-stu-id="39559-206">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="39559-207">Use el <xref:System.IO.Stream.CanWrite%2A> propiedad para determinar si la instancia actual admite escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-207">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="39559-208">Si una secuencia está cerrada o se pasa un argumento no válido, se producirán inmediatamente excepciones desde `BeginWrite`.</span><span class="sxs-lookup"><span data-stu-id="39559-208">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginWrite`.</span></span> <span data-ttu-id="39559-209">Errores que se producen durante una solicitud de escritura asincrónica, como un error de disco durante la solicitud de E/S, tienen lugar en el subproceso del grupo y producir excepciones al llamar a `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="39559-209">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39559-210">Se ha intentado realizar una escritura asincrónica más allá del final de la secuencia o se ha producido un error de disco.</span><span class="sxs-lookup"><span data-stu-id="39559-210">Attempted an asynchronous write past the end of the stream, or a disk error occurs.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39559-211">Uno o varios argumentos no son válidos.</span><span class="sxs-lookup"><span data-stu-id="39559-211">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-212">Se efectuó una llamada a los métodos después de cerrar la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-212">Methods were called after the stream was closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-213">La implementación actual de <see langword="Stream" /> no admite la operación de escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-213">The current <see langword="Stream" /> implementation does not support the write operation.</span></span></exception>
        <altmember cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
        <altmember cref="P:System.IO.Stream.CanWrite" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-214">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-214">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-215">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-215">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-216">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-216">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/asynchronous-file-i-o.md"><span data-ttu-id="39559-217">E/S de archivos asincrónica</span><span class="sxs-lookup"><span data-stu-id="39559-217">Asynchronous File I/O</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public abstract bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.IO.Stream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39559-218">Cuando se reemplaza en una clase derivada, obtiene un valor que indica si la secuencia actual admite lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-218">When overridden in a derived class, gets a value indicating whether the current stream supports reading.</span></span></summary>
        <value><span data-ttu-id="39559-219"><see langword="true" /> si la secuencia admite lectura; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="39559-219"><see langword="true" /> if the stream supports reading; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-220">Si una clase derivada de <xref:System.IO.Stream> no admite la lectura, las llamadas a la <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, y <xref:System.IO.Stream.BeginRead%2A> métodos inician una <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="39559-220">If a class derived from <xref:System.IO.Stream> does not support reading, calls to the <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, and <xref:System.IO.Stream.BeginRead%2A> methods throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="39559-221">Si la secuencia está cerrada, esta propiedad devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="39559-221">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39559-222">El siguiente es un ejemplo del uso de la `CanRead` propiedad.</span><span class="sxs-lookup"><span data-stu-id="39559-222">The following is an example of using the `CanRead` property.</span></span>  
  
 [!code-cpp[Classic FileStream.CanRead Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileStream.CanRead Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CS/source.cs#1)]
 [!code-vb[Classic FileStream.CanRead Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-223">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-223">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-224">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-224">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-225">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-225">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public abstract bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.IO.Stream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39559-226">Cuando se reemplaza en una clase derivada, obtiene un valor que indica si la secuencia actual admite búsquedas.</span><span class="sxs-lookup"><span data-stu-id="39559-226">When overridden in a derived class, gets a value indicating whether the current stream supports seeking.</span></span></summary>
        <value><span data-ttu-id="39559-227"><see langword="true" /> si la secuencia admite búsquedas; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="39559-227"><see langword="true" /> if the stream supports seeking; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-228">Si una clase derivada de <xref:System.IO.Stream> no admite búsquedas, las llamadas a <xref:System.IO.Stream.Length%2A>, <xref:System.IO.Stream.SetLength%2A>, <xref:System.IO.Stream.Position%2A>, y <xref:System.IO.Stream.Seek%2A> producir una <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="39559-228">If a class derived from <xref:System.IO.Stream> does not support seeking, calls to <xref:System.IO.Stream.Length%2A>, <xref:System.IO.Stream.SetLength%2A>, <xref:System.IO.Stream.Position%2A>, and <xref:System.IO.Stream.Seek%2A> throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="39559-229">Si la secuencia está cerrada, esta propiedad devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="39559-229">If the stream is closed, this property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-230">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-230">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-231">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-231">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-232">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-232">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public virtual bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.IO.Stream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39559-233">Obtiene un valor que determina si se puede agotar el tiempo de espera de la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-233">Gets a value that determines whether the current stream can time out.</span></span></summary>
        <value><span data-ttu-id="39559-234">Un valor que determina si se puede agotar el tiempo de espera de la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-234">A value that determines whether the current stream can time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-235">La propiedad <xref:System.IO.Stream.CanTimeout%2A> siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="39559-235">The <xref:System.IO.Stream.CanTimeout%2A> property always returns `false`.</span></span> <span data-ttu-id="39559-236">Algunas implementaciones de secuencia requieren un comportamiento diferente, como <xref:System.Net.Sockets.NetworkStream>, que agota el tiempo si se interrumpe o se pierde la conectividad de red.</span><span class="sxs-lookup"><span data-stu-id="39559-236">Some stream implementations require different behavior, such as <xref:System.Net.Sockets.NetworkStream>, which times out if network connectivity is interrupted or lost.</span></span> <span data-ttu-id="39559-237">Si está implementando una secuencia que debe ser capaz de tiempo de espera, se debe invalidar esta propiedad para devolver `true`.</span><span class="sxs-lookup"><span data-stu-id="39559-237">If you are implementing a stream that must be able to time out, this property should be overridden to return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Stream.ReadTimeout" />
        <altmember cref="P:System.IO.Stream.WriteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public abstract bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.IO.Stream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39559-238">Cuando se reemplaza en una clase derivada, obtiene un valor que indica si la secuencia actual admite escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-238">When overridden in a derived class, gets a value indicating whether the current stream supports writing.</span></span></summary>
        <value><span data-ttu-id="39559-239"><see langword="true" /> si el flujo admite escritura; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="39559-239"><see langword="true" /> if the stream supports writing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-240">Si una clase derivada de <xref:System.IO.Stream> no admite la escritura, una llamada a <xref:System.IO.Stream.Write%2A>, <xref:System.IO.Stream.BeginWrite%2A>, o <xref:System.IO.Stream.WriteByte%2A> produce una <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="39559-240">If a class derived from <xref:System.IO.Stream> does not support writing, a call to <xref:System.IO.Stream.Write%2A>, <xref:System.IO.Stream.BeginWrite%2A>, or <xref:System.IO.Stream.WriteByte%2A> throws a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="39559-241">En tales casos, <xref:System.IO.Stream.Flush%2A> normalmente se implementa como un método vacío para garantizar la compatibilidad completa con otras <xref:System.IO.Stream> tipos, ya que es válido para vaciar una secuencia de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-241">In such cases, <xref:System.IO.Stream.Flush%2A> is typically implemented as an empty method to ensure full compatibility with other <xref:System.IO.Stream> types since it's valid to flush a read-only stream.</span></span>
  
 <span data-ttu-id="39559-242">Si la secuencia está cerrada, esta propiedad devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="39559-242">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39559-243">El siguiente es un ejemplo del uso de la `CanWrite` propiedad.</span><span class="sxs-lookup"><span data-stu-id="39559-243">The following is an example of using the `CanWrite` property.</span></span>  
  
 [!code-cpp[Classic Stream.CanWrite Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stream.CanWrite Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/CS/source.cs#1)]
 [!code-vb[Classic Stream.CanWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-244">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-244">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-245">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-245">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-246">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-246">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="stream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39559-247">Cierra la secuencia actual y libera todos los recursos (como sockets e identificadores de archivo) asociados a esta.</span><span class="sxs-lookup"><span data-stu-id="39559-247">Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.</span></span> <span data-ttu-id="39559-248">En lugar de llamar a este método, asegúrese de que la secuencia se desecha correctamente.</span><span class="sxs-lookup"><span data-stu-id="39559-248">Instead of calling this method, ensure that the stream is properly disposed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-249">Este método llama a <xref:System.IO.Stream.Dispose%2A>, especificando `true` para liberar todos los recursos.</span><span class="sxs-lookup"><span data-stu-id="39559-249">This method calls <xref:System.IO.Stream.Dispose%2A>, specifying `true` to release all resources.</span></span> <span data-ttu-id="39559-250">No es necesario llamar específicamente a la <xref:System.IO.Stream.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="39559-250">You do not have to specifically call the <xref:System.IO.Stream.Close%2A> method.</span></span> <span data-ttu-id="39559-251">En su lugar, asegúrese de que cada <xref:System.IO.Stream> objeto se desecha correctamente.</span><span class="sxs-lookup"><span data-stu-id="39559-251">Instead, ensure that every <xref:System.IO.Stream> object is properly disposed.</span></span> <span data-ttu-id="39559-252">Puede declarar <xref:System.IO.Stream> objetos dentro de un `using` bloquear (o `Using` bloquear en Visual Basic) para asegurarse de que la secuencia y todos sus recursos se eliminan o se puede llamar explícitamente la <xref:System.IO.Stream.Dispose%2A> método.</span><span class="sxs-lookup"><span data-stu-id="39559-252">You can declare <xref:System.IO.Stream> objects within a `using` block (or `Using` block in Visual Basic) to ensure that the stream and all of its resources are disposed, or you can explicitly call the <xref:System.IO.Stream.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="39559-253">Vaciar la secuencia no hará que vacíe su codificador subyacente a menos que se llame explícitamente a una implementación de <xref:System.IO.Stream.Flush%2A> o `Close`.</span><span class="sxs-lookup"><span data-stu-id="39559-253">Flushing the stream will not flush its underlying encoder unless you explicitly call an implementation of <xref:System.IO.Stream.Flush%2A> or `Close`.</span></span> <span data-ttu-id="39559-254">Establecer <xref:System.IO.StreamWriter.AutoFlush%2A> a `true` significa que los datos del búfer se vaciará en el flujo, pero no se vaciará el estado del codificador.</span><span class="sxs-lookup"><span data-stu-id="39559-254">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="39559-255">Esto permite al codificador mantener su estado (caracteres parciales) para que puede codificar correctamente el siguiente bloque de caracteres.</span><span class="sxs-lookup"><span data-stu-id="39559-255">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="39559-256">Esta situación afecta a UTF8 y UTF7 donde ciertos caracteres se pueden codificar solo después de que el codificador reciba el carácter o caracteres adyacentes.</span><span class="sxs-lookup"><span data-stu-id="39559-256">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="39559-257">Intenta manipular la secuencia después de que se ha cerrado la secuencia podría producir un <xref:System.ObjectDisposedException>.</span><span class="sxs-lookup"><span data-stu-id="39559-257">Attempts to manipulate the stream after the stream has been closed might throw an <xref:System.ObjectDisposedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="39559-258">En clases derivadas, no Reemplace el <see cref="M:System.IO.Stream.Close" /> método, en su lugar, coloque todos los <see langword="Stream" /> lógica de limpieza en el <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> método.</span><span class="sxs-lookup"><span data-stu-id="39559-258">In derived classes, do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all of the <see langword="Stream" /> cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span></span> <span data-ttu-id="39559-259">Para obtener más información, consulte [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="39559-259">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-260">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-260">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-261">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-261">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-262">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-262">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39559-263">Lee los bytes de la secuencia actual y los escribe en otra secuencia de destino.</span><span class="sxs-lookup"><span data-stu-id="39559-263">Reads the bytes from the current stream and writes them to another stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::IO::Stream ^ destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.IO.Stream -&gt; unit" Usage="stream.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="39559-264">Secuencia en la que se copiará el contenido de la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-264">The stream to which the contents of the current stream will be copied.</span></span></param>
        <summary><span data-ttu-id="39559-265">Lee los bytes de la secuencia actual y los escribe en otra secuencia de destino.</span><span class="sxs-lookup"><span data-stu-id="39559-265">Reads the bytes from the current stream and writes them to another stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-266">Copiar comienza en la posición actual en la secuencia actual y no restablece la posición de la secuencia de destino una vez completada la operación de copia.</span><span class="sxs-lookup"><span data-stu-id="39559-266">Copying begins at the current position in the current stream, and does not reset the position of the destination stream after the copy operation is complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39559-267">El ejemplo siguiente copia el contenido de un <xref:System.IO.FileStream> a un <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="39559-267">The following example copies the contents of a <xref:System.IO.FileStream> to a <xref:System.IO.MemoryStream>.</span></span>  
  
 [!code-csharp[System.IO.Stream.CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stream.copyto/cs/program.cs#1)]
 [!code-vb[System.IO.Stream.CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stream.copyto/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39559-268"><paramref name="destination" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39559-268"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-269">La secuencia actual no admite lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-269">The current stream does not support reading.</span></span>  
  
<span data-ttu-id="39559-270">O bien</span><span class="sxs-lookup"><span data-stu-id="39559-270">-or-</span></span> 
 <span data-ttu-id="39559-271"><paramref name="destination" /> no admite la escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-271"><paramref name="destination" /> does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-272">La secuencia actual o <paramref name="destination" /> se cerraron antes de llamar al método <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />.</span><span class="sxs-lookup"><span data-stu-id="39559-272">Either the current stream or <paramref name="destination" /> were closed before the <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> method was called.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39559-273">Error de E/S.</span><span class="sxs-lookup"><span data-stu-id="39559-273">An I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Stream, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.IO.Stream * int -&gt; unit" Usage="stream.CopyTo (destination, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="39559-274">Secuencia en la que se copiará el contenido de la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-274">The stream to which the contents of the current stream will be copied.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="39559-275">Tamaño del búfer.</span><span class="sxs-lookup"><span data-stu-id="39559-275">The size of the buffer.</span></span> <span data-ttu-id="39559-276">Este valor debe ser mayor que cero.</span><span class="sxs-lookup"><span data-stu-id="39559-276">This value must be greater than zero.</span></span> <span data-ttu-id="39559-277">El tamaño predeterminado es 81920.</span><span class="sxs-lookup"><span data-stu-id="39559-277">The default size is 81920.</span></span></param>
        <summary><span data-ttu-id="39559-278">Lee todos los bytes de la secuencia actual y los escribe en otra secuencia, usando el tamaño de búfer especificado.</span><span class="sxs-lookup"><span data-stu-id="39559-278">Reads the bytes from the current stream and writes them to another stream, using a specified buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-279">Copiar comienza en la posición actual en la secuencia actual y no restablece la posición de la secuencia de destino una vez completada la operación de copia.</span><span class="sxs-lookup"><span data-stu-id="39559-279">Copying begins at the current position in the current stream, and does not reset the position of the destination stream after the copy operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39559-280"><paramref name="destination" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39559-280"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39559-281"><paramref name="bufferSize" /> es un valor negativo o es cero.</span><span class="sxs-lookup"><span data-stu-id="39559-281"><paramref name="bufferSize" /> is negative or zero.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-282">La secuencia actual no admite lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-282">The current stream does not support reading.</span></span>  
  
<span data-ttu-id="39559-283">O bien</span><span class="sxs-lookup"><span data-stu-id="39559-283">-or-</span></span> 
 <span data-ttu-id="39559-284"><paramref name="destination" /> no admite la escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-284"><paramref name="destination" /> does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-285">La secuencia actual o <paramref name="destination" /> se cerraron antes de llamar al método <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />.</span><span class="sxs-lookup"><span data-stu-id="39559-285">Either the current stream or <paramref name="destination" /> were closed before the <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> method was called.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39559-286">Error de E/S.</span><span class="sxs-lookup"><span data-stu-id="39559-286">An I/O error occurred.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39559-287">Lee asincrónicamente los bytes de la secuencia actual y los escribe en otra secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-287">Asynchronously reads the bytes from the current stream and writes them to another stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (destination As Stream) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination);" />
      <MemberSignature Language="F#" Value="member this.CopyToAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task" Usage="stream.CopyToAsync destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="39559-288">Secuencia en la que se copiará el contenido de la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-288">The stream to which the contents of the current stream will be copied.</span></span></param>
        <summary><span data-ttu-id="39559-289">Lee asincrónicamente los bytes de la secuencia actual y los escribe en otra secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-289">Asynchronously reads the bytes from the current stream and writes them to another stream.</span></span></summary>
        <returns><span data-ttu-id="39559-290">Tarea que representa la operación de copia asincrónica.</span><span class="sxs-lookup"><span data-stu-id="39559-290">A task that represents the asynchronous copy operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-291">El <xref:System.IO.Stream.CopyToAsync%2A> método le permite realizar operaciones de E/S de gran cantidad de recursos sin bloquear el subproceso principal.</span><span class="sxs-lookup"><span data-stu-id="39559-291">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="39559-292">Esta consideración de rendimiento es especialmente importante en una aplicación de la [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o una aplicación de [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] en que una operación de streaming prolongada puede bloquear el subproceso de interfaz de usuario y hacer que parezca que una aplicación ha dejado de responder.</span><span class="sxs-lookup"><span data-stu-id="39559-292">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="39559-293">Los métodos asincrónicos se usan junto con la `async` y `await` palabras clave en Visual Basic y C#.</span><span class="sxs-lookup"><span data-stu-id="39559-293">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="39559-294">Comienza a copiar en la posición actual en la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-294">Copying begins at the current position in the current stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39559-295">En el ejemplo siguiente se muestra cómo utilizar dos <xref:System.IO.FileStream> objetos que se va a copiar los archivos de forma asincrónica desde un directorio a otro.</span><span class="sxs-lookup"><span data-stu-id="39559-295">The following example demonstrates how to use two <xref:System.IO.FileStream> objects to asynchronously copy the files from one directory to another.</span></span> <span data-ttu-id="39559-296">La clase <xref:System.IO.FileStream> se deriva de la clase <xref:System.IO.Stream> .</span><span class="sxs-lookup"><span data-stu-id="39559-296">The <xref:System.IO.FileStream> class derives from the <xref:System.IO.Stream> class.</span></span>  <span data-ttu-id="39559-297">Tenga en cuenta que el <xref:System.Web.UI.WebControls.Button.Click> controlador de eventos para el <xref:System.Windows.Controls.Button> control está marcado con el `async` modificador porque llama a un método asincrónico</span><span class="sxs-lookup"><span data-stu-id="39559-297">Notice that the <xref:System.Web.UI.WebControls.Button.Click> event handler for the <xref:System.Windows.Controls.Button> control is marked with the `async` modifier because it calls an asynchronous method</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#1](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example.cs#1)]
 [!code-vb[Asynchronous_File_IO_async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39559-298"><paramref name="destination" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39559-298"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-299">Se desecha la secuencia actual o la secuencia de destino.</span><span class="sxs-lookup"><span data-stu-id="39559-299">Either the current stream or the destination stream is disposed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-300">La secuencia actual no admite lectura o la secuencia de destino no admite escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-300">The current stream does not support reading, or the destination stream does not support writing.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (destination As Stream, bufferSize As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberSignature Language="F#" Value="member this.CopyToAsync : System.IO.Stream * int -&gt; System.Threading.Tasks.Task" Usage="stream.CopyToAsync (destination, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="39559-301">Secuencia en la que se copiará el contenido de la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-301">The stream to which the contents of the current stream will be copied.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="39559-302">Tamaño del búfer en bytes.</span><span class="sxs-lookup"><span data-stu-id="39559-302">The size, in bytes, of the buffer.</span></span> <span data-ttu-id="39559-303">Este valor debe ser mayor que cero.</span><span class="sxs-lookup"><span data-stu-id="39559-303">This value must be greater than zero.</span></span> <span data-ttu-id="39559-304">El tamaño predeterminado es 81920.</span><span class="sxs-lookup"><span data-stu-id="39559-304">The default size is 81920.</span></span></param>
        <summary><span data-ttu-id="39559-305">Lee asincrónicamente los bytes de la secuencia actual y los escribe en otra secuencia, usando el tamaño de búfer especificado.</span><span class="sxs-lookup"><span data-stu-id="39559-305">Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="39559-306">Tarea que representa la operación de copia asincrónica.</span><span class="sxs-lookup"><span data-stu-id="39559-306">A task that represents the asynchronous copy operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-307">El <xref:System.IO.Stream.CopyToAsync%2A> método le permite realizar operaciones de E/S de gran cantidad de recursos sin bloquear el subproceso principal.</span><span class="sxs-lookup"><span data-stu-id="39559-307">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="39559-308">Esta consideración de rendimiento es especialmente importante en una aplicación de la [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o una aplicación de [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] en que una operación de streaming prolongada puede bloquear el subproceso de interfaz de usuario y hacer que parezca que una aplicación ha dejado de responder.</span><span class="sxs-lookup"><span data-stu-id="39559-308">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="39559-309">Los métodos asincrónicos se usan junto con la `async` y `await` palabras clave en Visual Basic y C#.</span><span class="sxs-lookup"><span data-stu-id="39559-309">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="39559-310">Comienza a copiar en la posición actual en la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-310">Copying begins at the current position in the current stream.</span></span>  
  
 <span data-ttu-id="39559-311">Para obtener un ejemplo de la copia entre dos secuencias, vea el <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> sobrecargar.</span><span class="sxs-lookup"><span data-stu-id="39559-311">For an example of copying between two streams, see the <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39559-312"><paramref name="destination" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39559-312"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39559-313"><paramref name="buffersize" /> es un valor negativo o es cero.</span><span class="sxs-lookup"><span data-stu-id="39559-313"><paramref name="buffersize" /> is negative or zero.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-314">Se desecha la secuencia actual o la secuencia de destino.</span><span class="sxs-lookup"><span data-stu-id="39559-314">Either the current stream or the destination stream is disposed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-315">La secuencia actual no admite lectura o la secuencia de destino no admite escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-315">The current stream does not support reading, or the destination stream does not support writing.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.CopyToAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stream.CopyToAsync (destination, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member CopyToAsync : System.IO.Stream * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CopyToAsync : System.IO.Stream * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stream.CopyToAsync (destination, bufferSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="39559-316">Secuencia en la que se copiará el contenido de la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-316">The stream to which the contents of the current stream will be copied.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="39559-317">Tamaño del búfer en bytes.</span><span class="sxs-lookup"><span data-stu-id="39559-317">The size, in bytes, of the buffer.</span></span> <span data-ttu-id="39559-318">Este valor debe ser mayor que cero.</span><span class="sxs-lookup"><span data-stu-id="39559-318">This value must be greater than zero.</span></span> <span data-ttu-id="39559-319">El tamaño predeterminado es 81920.</span><span class="sxs-lookup"><span data-stu-id="39559-319">The default size is 81920.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="39559-320">Token para supervisar solicitudes de cancelación.</span><span class="sxs-lookup"><span data-stu-id="39559-320">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="39559-321">El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="39559-321">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="39559-322">Lee asincrónicamente los bytes de la secuencia actual y los escribe en otra secuencia, utilizando el tamaño de búfer y el token de cancelación especificados.</span><span class="sxs-lookup"><span data-stu-id="39559-322">Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size and cancellation token.</span></span></summary>
        <returns><span data-ttu-id="39559-323">Tarea que representa la operación de copia asincrónica.</span><span class="sxs-lookup"><span data-stu-id="39559-323">A task that represents the asynchronous copy operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-324">El <xref:System.IO.Stream.CopyToAsync%2A> método le permite realizar operaciones de E/S de gran cantidad de recursos sin bloquear el subproceso principal.</span><span class="sxs-lookup"><span data-stu-id="39559-324">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="39559-325">Esta consideración de rendimiento es especialmente importante en una aplicación de la [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o una aplicación de [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] en que una operación de streaming prolongada puede bloquear el subproceso de interfaz de usuario y hacer que parezca que una aplicación ha dejado de responder.</span><span class="sxs-lookup"><span data-stu-id="39559-325">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="39559-326">Los métodos asincrónicos se usan junto con la `async` y `await` palabras clave en Visual Basic y C#.</span><span class="sxs-lookup"><span data-stu-id="39559-326">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="39559-327">Si se cancela la operación antes de que finalice, la tarea devuelta contiene la <xref:System.Threading.Tasks.TaskStatus.Canceled> valor para el <xref:System.Threading.Tasks.Task.Status%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="39559-327">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="39559-328">Comienza a copiar en la posición actual en la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-328">Copying begins at the current position in the current stream.</span></span>  
  
 <span data-ttu-id="39559-329">Para obtener un ejemplo de la copia entre dos secuencias, vea el <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> sobrecargar.</span><span class="sxs-lookup"><span data-stu-id="39559-329">For an example of copying between two streams, see the <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39559-330"><paramref name="destination" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39559-330"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39559-331"><paramref name="buffersize" /> es un valor negativo o es cero.</span><span class="sxs-lookup"><span data-stu-id="39559-331"><paramref name="buffersize" /> is negative or zero.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-332">Se desecha la secuencia actual o la secuencia de destino.</span><span class="sxs-lookup"><span data-stu-id="39559-332">Either the current stream or the destination stream is disposed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-333">La secuencia actual no admite lectura o la secuencia de destino no admite escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-333">The current stream does not support reading, or the destination stream does not support writing.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWaitHandle">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.WaitHandle CreateWaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.WaitHandle CreateWaitHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CreateWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWaitHandle () As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::WaitHandle ^ CreateWaitHandle();" />
      <MemberSignature Language="F#" Value="abstract member CreateWaitHandle : unit -&gt; System.Threading.WaitHandle&#xA;override this.CreateWaitHandle : unit -&gt; System.Threading.WaitHandle" Usage="stream.CreateWaitHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("CreateWaitHandle will be removed eventually.  Please use "new ManualResetEvent(false)" instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39559-334">Asigna un objeto <see cref="T:System.Threading.WaitHandle" />.</span><span class="sxs-lookup"><span data-stu-id="39559-334">Allocates a <see cref="T:System.Threading.WaitHandle" /> object.</span></span></summary>
        <returns><span data-ttu-id="39559-335">Referencia al objeto <see langword="WaitHandle" /> asignado.</span><span class="sxs-lookup"><span data-stu-id="39559-335">A reference to the allocated <see langword="WaitHandle" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-336">Cuando se llama por primera vez, el método actual crea un `WaitHandle` de objeto y lo devuelve.</span><span class="sxs-lookup"><span data-stu-id="39559-336">When called for the first time, the current method creates a `WaitHandle` object and returns it.</span></span> <span data-ttu-id="39559-337">En las llamadas posteriores, `CreateWaitHandle` devuelve una referencia a un nuevo identificador de espera.</span><span class="sxs-lookup"><span data-stu-id="39559-337">On subsequent calls, `CreateWaitHandle` returns a reference to a new wait handle.</span></span>  
  
 <span data-ttu-id="39559-338">Utilice este método si se implementan los métodos asincrónicos y necesita una forma de bloqueo <xref:System.IO.Stream.EndRead%2A> o <xref:System.IO.Stream.EndWrite%2A> hasta que se complete la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="39559-338">Use this method if you implement the asynchronous methods and require a way of blocking in <xref:System.IO.Stream.EndRead%2A> or <xref:System.IO.Stream.EndWrite%2A> until the asynchronous operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-339">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-339">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-340">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-340">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-341">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-341">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39559-342">Libera todos los recursos utilizados por el objeto <see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="39559-342">Releases all resources used by the <see cref="T:System.IO.Stream" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="stream.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39559-343">Libera todos los recursos que usa <see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="39559-343">Releases all resources used by the <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-344">Este método desecha la secuencia, escribiendo los cambios en el almacén de respaldo y cerrar la secuencia para liberar recursos.</span><span class="sxs-lookup"><span data-stu-id="39559-344">This method disposes the stream, by writing any changes to the backing store and closing the stream to release resources.</span></span>  
  
 <span data-ttu-id="39559-345">Una llamada a `Dispose` permite a los recursos utilizados por el <xref:System.IO.Stream> que reasignarse para otros fines.</span><span class="sxs-lookup"><span data-stu-id="39559-345">Calling `Dispose` allows the resources used by the <xref:System.IO.Stream> to be reallocated for other purposes.</span></span> <span data-ttu-id="39559-346">Para obtener más información acerca de `Dispose`, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="39559-346">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="39559-347">Colocar toda la lógica de limpieza para el objeto de secuencia en <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="39559-347">Place all cleanup logic for your stream object in <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span></span> <span data-ttu-id="39559-348">No invalidar <see cref="M:System.IO.Stream.Close" />.</span><span class="sxs-lookup"><span data-stu-id="39559-348">Do not override <see cref="M:System.IO.Stream.Close" />.</span></span>  
  
<span data-ttu-id="39559-349">Tenga en cuenta que debido a requisitos de compatibilidad con versiones anteriores, esta implementación del método difiere la recomendación para el patrón Dispose.</span><span class="sxs-lookup"><span data-stu-id="39559-349">Note that because of backward compatibility requirements, this method's implementation differs from the recommended guidance for the Dispose pattern.</span></span>  <span data-ttu-id="39559-350">Este método llama a <see cref="M:System.IO.Stream.Close" />, que llama a <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="39559-350">This method calls <see cref="M:System.IO.Stream.Close" />, which then calls <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="stream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="39559-351">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="39559-351"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="39559-352">Libera los recursos no administrados que usa <see cref="T:System.IO.Stream" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="39559-352">Releases the unmanaged resources used by the <see cref="T:System.IO.Stream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-353">Debe liberar todos los recursos mediante la especificación de `true` para `disposing`.</span><span class="sxs-lookup"><span data-stu-id="39559-353">You should release all resources by specifying `true` for `disposing`.</span></span> <span data-ttu-id="39559-354">Cuando `disposing` es `true`, también se puede garantizar el flujo de datos se vacían en el búfer subyacente y tener acceso a otros objetos susceptibles de finalización.</span><span class="sxs-lookup"><span data-stu-id="39559-354">When `disposing` is `true`, the stream can also ensure data is flushed to the underlying buffer, and access other finalizable objects.</span></span>  <span data-ttu-id="39559-355">Esto puede no ser posible cuando se llama desde un finalizador debido a la falta de ordenación entre los finalizadores.</span><span class="sxs-lookup"><span data-stu-id="39559-355">This may not be possible when called from a finalizer due a lack of ordering among finalizers.</span></span>  
  
 <span data-ttu-id="39559-356">Si la secuencia utiliza un identificador del sistema operativo para comunicarse con su origen, considere el uso de una subclase de <xref:System.Runtime.InteropServices.SafeHandle> para este propósito.</span><span class="sxs-lookup"><span data-stu-id="39559-356">If your stream is using an operating system handle to communicate with its source, consider using a subclass of <xref:System.Runtime.InteropServices.SafeHandle> for this purpose.</span></span>  
  
 <span data-ttu-id="39559-357">Este método se llama por el público <xref:System.ComponentModel.Component.Dispose%2A> método y el <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="39559-357">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="39559-358"><xref:System.ComponentModel.Component.Dispose%2A> invoca el protegido <xref:System.IO.Stream.Dispose%2A> método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="39559-358"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Stream.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="39559-359"><xref:System.Object.Finalize%2A> invoca <xref:System.IO.Stream.Dispose%2A> con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="39559-359"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.Stream.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="39559-360">En las clases derivadas, no invalidan el <see cref="M:System.IO.Stream.Close" /> método, en su lugar, coloque toda la lógica de limpieza de Stream en la <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> método.</span><span class="sxs-lookup"><span data-stu-id="39559-360">In derived classes, do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all of the Stream cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span></span>  
  
 <span data-ttu-id="39559-361"><see cref="M:System.ComponentModel.Component.Dispose" /> puede recibir varias llamadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="39559-361"><see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="39559-362">Al invalidar <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see cref="M:System.ComponentModel.Component.Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="39559-362">When overriding <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />.</span></span> <span data-ttu-id="39559-363">Para obtener más información sobre cómo implementar <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, consulte [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="39559-363">For more information about how to implement <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="39559-364">Para obtener más información acerca de <see cref="M:System.ComponentModel.Component.Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="39559-364">For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="stream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public virtual int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndRead : IAsyncResult -&gt; int&#xA;override this.EndRead : IAsyncResult -&gt; int" Usage="stream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="39559-365">Referencia a la solicitud asincrónica pendiente para finalizar.</span><span class="sxs-lookup"><span data-stu-id="39559-365">The reference to the pending asynchronous request to finish.</span></span></param>
        <summary><span data-ttu-id="39559-366">Espera a que se complete la lectura asincrónica que se encuentra pendiente.</span><span class="sxs-lookup"><span data-stu-id="39559-366">Waits for the pending asynchronous read to complete.</span></span> <span data-ttu-id="39559-367">(Considere usar <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</span><span class="sxs-lookup"><span data-stu-id="39559-367">(Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span></span></summary>
        <returns><span data-ttu-id="39559-368">El número de bytes leídos de la secuencia, que se encuentra entre cero (0) y el número de bytes solicitado.</span><span class="sxs-lookup"><span data-stu-id="39559-368">The number of bytes read from the stream, between zero (0) and the number of bytes you requested.</span></span> <span data-ttu-id="39559-369">Las secuencias solo devuelven cero (0) al final de la secuencia; de lo contrario, se deben bloquear hasta que haya al menos un byte disponible.</span><span class="sxs-lookup"><span data-stu-id="39559-369">Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-370">En .NET Framework 4 y versiones anteriores, es necesario usar métodos como <xref:System.IO.Stream.BeginRead%2A> y <xref:System.IO.Stream.EndRead%2A> para implementar operaciones de E/S asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="39559-370">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="39559-371">Estos métodos siguen estando disponibles en el [!INCLUDE[net_v45](~/includes/net-v45-md.md)] para admitir código heredado; sin embargo, los nuevos métodos asincrónicos, como <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, y <xref:System.IO.Stream.FlushAsync%2A>, ayuda implementa operaciones asincrónicas de E/S más fácilmente.</span><span class="sxs-lookup"><span data-stu-id="39559-371">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="39559-372">Llame a `EndRead` para determinar cuántos bytes se leyeron de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-372">Call `EndRead` to determine how many bytes were read from the stream.</span></span>  
  
 <span data-ttu-id="39559-373">`EndRead` se puede llamar una vez en cada <xref:System.IAsyncResult> desde <xref:System.IO.Stream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="39559-373">`EndRead` can be called once on every <xref:System.IAsyncResult> from <xref:System.IO.Stream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="39559-374">Este método se bloquea hasta que se haya completado la operación de E/S.</span><span class="sxs-lookup"><span data-stu-id="39559-374">This method blocks until the I/O operation has completed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39559-375"><paramref name="asyncResult" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39559-375"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39559-376">Un identificador para la operación de lectura pendiente no está disponible.</span><span class="sxs-lookup"><span data-stu-id="39559-376">A handle to the pending read operation is not available.</span></span>  
  
<span data-ttu-id="39559-377">O bien</span><span class="sxs-lookup"><span data-stu-id="39559-377">-or-</span></span> 
<span data-ttu-id="39559-378">La operación pendiente no admite lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-378">The pending operation does not support reading.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="39559-379"><paramref name="asyncResult" /> no se originó desde un método <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> de la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-379"><paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39559-380">La secuencia está cerrada o se produjo un error interno.</span><span class="sxs-lookup"><span data-stu-id="39559-380">The stream is closed or an internal error has occurred.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-381">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-381">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-382">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-382">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-383">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-383">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/asynchronous-file-i-o.md"><span data-ttu-id="39559-384">E/S de archivos asincrónica</span><span class="sxs-lookup"><span data-stu-id="39559-384">Asynchronous File I/O</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public virtual void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndWrite : IAsyncResult -&gt; unit&#xA;override this.EndWrite : IAsyncResult -&gt; unit" Usage="stream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="39559-385">Referencia a la solicitud de E/S asincrónica pendiente.</span><span class="sxs-lookup"><span data-stu-id="39559-385">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="39559-386">Finaliza una operación de escritura asincrónica.</span><span class="sxs-lookup"><span data-stu-id="39559-386">Ends an asynchronous write operation.</span></span> <span data-ttu-id="39559-387">(Considere usar <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</span><span class="sxs-lookup"><span data-stu-id="39559-387">(Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-388">En .NET Framework 4 y versiones anteriores, es necesario usar métodos como <xref:System.IO.Stream.BeginWrite%2A> y <xref:System.IO.Stream.EndWrite%2A> para implementar operaciones de E/S asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="39559-388">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="39559-389">Estos métodos siguen estando disponibles en el [!INCLUDE[net_v45](~/includes/net-v45-md.md)] para admitir código heredado; sin embargo, los nuevos métodos asincrónicos, como <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, y <xref:System.IO.Stream.FlushAsync%2A>, ayuda implementa operaciones asincrónicas de E/S más fácilmente.</span><span class="sxs-lookup"><span data-stu-id="39559-389">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="39559-390">`EndWrite` se debe llamar exactamente una vez en cada <xref:System.IAsyncResult> desde <xref:System.IO.Stream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="39559-390">`EndWrite` must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.Stream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="39559-391">Este método se bloquea hasta que se haya completado la operación de E/S.</span><span class="sxs-lookup"><span data-stu-id="39559-391">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="39559-392">Errores que se producen durante una solicitud de escritura asincrónica, como un error de disco durante la solicitud de E/S, tienen lugar en el subproceso del grupo de subprocesos y se hacen visibles en una llamada a `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="39559-392">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to `EndWrite`.</span></span> <span data-ttu-id="39559-393">Las excepciones producidas por el subproceso del grupo no estará visibles cuando se llama a `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="39559-393">Exceptions thrown by the thread pool thread will not be visible when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39559-394"><paramref name="asyncResult" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39559-394"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39559-395">Un identificador para la operación de escritura pendiente no está disponible.</span><span class="sxs-lookup"><span data-stu-id="39559-395">A handle to the pending write operation is not available.</span></span>  
  
<span data-ttu-id="39559-396">O bien</span><span class="sxs-lookup"><span data-stu-id="39559-396">-or-</span></span> 
<span data-ttu-id="39559-397">La operación pendiente no admite escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-397">The pending operation does not support writing.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="39559-398"><paramref name="asyncResult" /> no se originó desde un método <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> de la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-398"><paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39559-399">La secuencia está cerrada o se produjo un error interno.</span><span class="sxs-lookup"><span data-stu-id="39559-399">The stream is closed or an internal error has occurred.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-400">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-400">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-401">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-401">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-402">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-402">How to: Write Text to a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/asynchronous-file-i-o.md"><span data-ttu-id="39559-403">E/S de archivos asincrónica</span><span class="sxs-lookup"><span data-stu-id="39559-403">Asynchronous File I/O</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="stream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39559-404">Cuando se reemplaza en una clase derivada, borra todos los búferes de esta secuencia y hace que todos los datos almacenados en el búfer se escriban en el dispositivo subyacente.</span><span class="sxs-lookup"><span data-stu-id="39559-404">When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-405">Invalidar `Flush` en secuencias que implementan un búfer.</span><span class="sxs-lookup"><span data-stu-id="39559-405">Override `Flush` on streams that implement a buffer.</span></span> <span data-ttu-id="39559-406">Utilice este método para mover toda la información desde el búfer subyacente a su destino, borrar el búfer, o ambos.</span><span class="sxs-lookup"><span data-stu-id="39559-406">Use this method to move any information from an underlying buffer to its destination, clear the buffer, or both.</span></span> <span data-ttu-id="39559-407">Según el estado del objeto, es posible que deba modificar la posición actual dentro de la secuencia (por ejemplo, si la secuencia subyacente admite operaciones de búsqueda).</span><span class="sxs-lookup"><span data-stu-id="39559-407">Depending upon the state of the object, you might have to modify the current position within the stream (for example, if the underlying stream supports seeking).</span></span> <span data-ttu-id="39559-408">Para obtener más información, vea <xref:System.IO.Stream.CanSeek%2A>.</span><span class="sxs-lookup"><span data-stu-id="39559-408">For additional information see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  

 <span data-ttu-id="39559-409">En una clase derivada de <xref:System.IO.Stream> que no admite la escritura, <xref:System.IO.Stream.Flush%2A> normalmente se implementa como un método vacío para garantizar la compatibilidad completa con otras <xref:System.IO.Stream> tipos, ya que es válido para vaciar una secuencia de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-409">In a class derived from <xref:System.IO.Stream> that doesn't support writing, <xref:System.IO.Stream.Flush%2A> is typically implemented as an empty method to ensure full compatibility with other <xref:System.IO.Stream> types since it's valid to flush a read-only stream.</span></span>

 <span data-ttu-id="39559-410">Cuando se usa el <xref:System.IO.StreamWriter> o <xref:System.IO.BinaryWriter> de clases, no se vacíe la base de <xref:System.IO.Stream> objeto.</span><span class="sxs-lookup"><span data-stu-id="39559-410">When using the <xref:System.IO.StreamWriter> or <xref:System.IO.BinaryWriter> class, do not flush the base <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="39559-411">En su lugar, use la clase <xref:System.IO.Stream.Flush%2A> o <xref:System.IO.Stream.Close%2A> método, que se asegura de que los datos se vacían primero en la secuencia subyacente y, a continuación, se escribe en el archivo.</span><span class="sxs-lookup"><span data-stu-id="39559-411">Instead, use the class's <xref:System.IO.Stream.Flush%2A> or <xref:System.IO.Stream.Close%2A> method, which makes sure that the data is flushed to the underlying stream first and then written to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39559-412">Error de E/S.</span><span class="sxs-lookup"><span data-stu-id="39559-412">An I/O error occurs.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-413">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-413">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-414">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-414">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-415">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-415">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FlushAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39559-416">Borra asincrónicamente todos los búferes de esta secuencia y hace que los datos almacenados en búfer se escriban en el dispositivo subyacente.</span><span class="sxs-lookup"><span data-stu-id="39559-416">Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="stream.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39559-417">Borra asincrónicamente todos los búferes de esta secuencia y hace que los datos almacenados en búfer se escriban en el dispositivo subyacente.</span><span class="sxs-lookup"><span data-stu-id="39559-417">Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span></span></summary>
        <returns><span data-ttu-id="39559-418">Tarea que representa la operación de vaciado asincrónico.</span><span class="sxs-lookup"><span data-stu-id="39559-418">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-419">Si una clase derivada, como <xref:System.IO.Compression.DeflateStream> o <xref:System.IO.Compression.GZipStream>, no se vuelca el búfer en su implementación de la <xref:System.IO.Stream.Flush%2A> método, el <xref:System.IO.Stream.FlushAsync%2A> método no vacía el búfer.</span><span class="sxs-lookup"><span data-stu-id="39559-419">If a derived class, such as <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, does not flush the buffer in its implementation of the <xref:System.IO.Stream.Flush%2A> method, the <xref:System.IO.Stream.FlushAsync%2A> method will not flush the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-420">Se ha eliminado la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-420">The stream has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="39559-421">Token para supervisar solicitudes de cancelación.</span><span class="sxs-lookup"><span data-stu-id="39559-421">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="39559-422">El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="39559-422">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="39559-423">Borra asincrónicamente todos los búferes de esta secuencia, y hace que todos los datos almacenados en búfer se escriban en el dispositivo subyacente y supervisa las solicitudes de cancelación.</span><span class="sxs-lookup"><span data-stu-id="39559-423">Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="39559-424">Tarea que representa la operación de vaciado asincrónico.</span><span class="sxs-lookup"><span data-stu-id="39559-424">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-425">Si se cancela la operación antes de que finalice, la tarea devuelta contiene la <xref:System.Threading.Tasks.TaskStatus.Canceled> valor para el <xref:System.Threading.Tasks.Task.Status%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="39559-425">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="39559-426">Si una clase derivada, como <xref:System.IO.Compression.DeflateStream> o <xref:System.IO.Compression.GZipStream>, no se vuelca el búfer en su implementación de la <xref:System.IO.Stream.Flush%2A> método, el <xref:System.IO.Stream.FlushAsync%2A> método no vacía el búfer.</span><span class="sxs-lookup"><span data-stu-id="39559-426">If a derived class, such as <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, does not flush the buffer in its implementation of the <xref:System.IO.Stream.Flush%2A> method, the <xref:System.IO.Stream.FlushAsync%2A> method will not flush the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-427">Se ha eliminado la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-427">The stream has been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md"><span data-ttu-id="39559-428">Cancelación</span><span class="sxs-lookup"><span data-stu-id="39559-428">Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public abstract long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.Length" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.Stream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39559-429">Cuando se reemplaza en una clase derivada, obtiene la longitud en bytes de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-429">When overridden in a derived class, gets the length in bytes of the stream.</span></span></summary>
        <value><span data-ttu-id="39559-430">Un valor Long que representa la longitud de la secuencia en bytes.</span><span class="sxs-lookup"><span data-stu-id="39559-430">A long value representing the length of the stream in bytes.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-431">Una clase derivada de <see langword="Stream" /> no admite búsquedas.</span><span class="sxs-lookup"><span data-stu-id="39559-431">A class derived from <see langword="Stream" /> does not support seeking.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-432">Se efectuó una llamada a los métodos después de cerrar la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-432">Methods were called after the stream was closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-433">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-433">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-434">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-434">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-435">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-435">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.Stream Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.Stream Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.Stream.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As Stream " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::Stream ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.Stream" Usage="System.IO.Stream.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39559-436"><see langword="Stream" /> sin memoria auxiliar.</span><span class="sxs-lookup"><span data-stu-id="39559-436">A <see langword="Stream" /> with no backing store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-437">Use `Null` para redirigir las salidas en una secuencia que no consumirá recursos del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="39559-437">Use `Null` to redirect output to a stream that will not consume any operating system resources.</span></span> <span data-ttu-id="39559-438">Cuando los métodos de `Stream` que proporcionan la escritura se invocan en `Null`, simplemente devuelve la llamada y no se escribe ningún dato.</span><span class="sxs-lookup"><span data-stu-id="39559-438">When the methods of `Stream` that provide writing are invoked on `Null`, the call simply returns, and no data is written.</span></span> <span data-ttu-id="39559-439">`Null` También implementa un `Read` método que devuelve cero sin leer datos.</span><span class="sxs-lookup"><span data-stu-id="39559-439">`Null` also implements a `Read` method that returns zero without reading data.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-440">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-440">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-441">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-441">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-442">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-442">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ObjectInvariant">
      <MemberSignature Language="C#" Value="protected virtual void ObjectInvariant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ObjectInvariant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ObjectInvariant" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ObjectInvariant ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ObjectInvariant();" />
      <MemberSignature Language="F#" Value="abstract member ObjectInvariant : unit -&gt; unit&#xA;override this.ObjectInvariant : unit -&gt; unit" Usage="stream.ObjectInvariant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Do not call or override this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39559-443">Proporciona compatibilidad con una clase <see cref="T:System.Diagnostics.Contracts.Contract" />.</span><span class="sxs-lookup"><span data-stu-id="39559-443">Provides support for a <see cref="T:System.Diagnostics.Contracts.Contract" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public abstract long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.Position" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.IO.Stream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39559-444">Cuando se reemplaza en una clase derivada, se obtiene o se establece la posición dentro de la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-444">When overridden in a derived class, gets or sets the position within the current stream.</span></span></summary>
        <value><span data-ttu-id="39559-445">Posición actual dentro de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-445">The current position within the stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-446">La secuencia debe admitir búsquedas obtener o establecer la posición.</span><span class="sxs-lookup"><span data-stu-id="39559-446">The stream must support seeking to get or set the position.</span></span> <span data-ttu-id="39559-447">Use el <xref:System.IO.Stream.CanSeek%2A> propiedad para determinar si la secuencia admite búsquedas.</span><span class="sxs-lookup"><span data-stu-id="39559-447">Use the <xref:System.IO.Stream.CanSeek%2A> property to determine whether the stream supports seeking.</span></span>  
  
 <span data-ttu-id="39559-448">Se admite la búsqueda en cualquier ubicación más allá de la longitud de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-448">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 <span data-ttu-id="39559-449">El `Position` propiedad no mantener un seguimiento del número de bytes de la secuencia que se han consumido, omitido, o ambos.</span><span class="sxs-lookup"><span data-stu-id="39559-449">The `Position` property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39559-450">Error de E/S.</span><span class="sxs-lookup"><span data-stu-id="39559-450">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-451">La secuencia no admite búsqueda.</span><span class="sxs-lookup"><span data-stu-id="39559-451">The stream does not support seeking.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-452">Se efectuó una llamada a los métodos después de cerrar la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-452">Methods were called after the stream was closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-453">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-453">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-454">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-454">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-455">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-455">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Read : Span&lt;byte&gt; -&gt; int&#xA;override this.Read : Span&lt;byte&gt; -&gt; int" Usage="stream.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member Read : byte[] * int * int -&gt; int" Usage="stream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="39559-456">Matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="39559-456">An array of bytes.</span></span> <span data-ttu-id="39559-457">Cuando este método devuelve un valor, el búfer contiene la matriz de bytes especificada con valores entre <paramref name="offset" /> y (<paramref name="offset" /> + <paramref name="count" /> - 1) reemplazada por los bytes leídos del origen actual.</span><span class="sxs-lookup"><span data-stu-id="39559-457">When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" /> - 1) replaced by the bytes read from the current source.</span></span></param>
        <param name="offset"><span data-ttu-id="39559-458">Posición de desplazamiento en bytes de base cero de <paramref name="buffer" /> donde se comienza a almacenar los datos leídos de la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-458">The zero-based byte offset in <paramref name="buffer" /> at which to begin storing the data read from the current stream.</span></span></param>
        <param name="count"><span data-ttu-id="39559-459">Número máximo de bytes que se deben leer de la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-459">The maximum number of bytes to be read from the current stream.</span></span></param>
        <summary><span data-ttu-id="39559-460">Cuando se reemplaza en una clase derivada, se lee una secuencia de bytes en la secuencia actual y se hace avanzar la posición dentro de la secuencia el número de bytes leídos.</span><span class="sxs-lookup"><span data-stu-id="39559-460">When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="39559-461">Número total de bytes leídos en el búfer.</span><span class="sxs-lookup"><span data-stu-id="39559-461">The total number of bytes read into the buffer.</span></span> <span data-ttu-id="39559-462">Puede ser menor que el número de bytes solicitado si dicho número no está disponible, o puede ser cero (0) si se alcanza el final de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-462">This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-463">Use el <xref:System.IO.Stream.CanRead%2A> propiedad para determinar si la instancia actual admite lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-463">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span> <span data-ttu-id="39559-464">Use el <xref:System.IO.Stream.ReadAsync%2A> método para leer de forma asincrónica en la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-464">Use the <xref:System.IO.Stream.ReadAsync%2A> method to read asynchronously from the current stream.</span></span>  
  
 <span data-ttu-id="39559-465">Implementaciones de este método leen un máximo de `count` secuencia de bytes del actual y almacenarlas en `buffer` comenzando por `offset`.</span><span class="sxs-lookup"><span data-stu-id="39559-465">Implementations of this method read a maximum of `count` bytes from the current stream and store them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="39559-466">La posición actual dentro de la secuencia se avanza por el número de bytes leídos; Sin embargo, si se produce una excepción, la posición actual dentro de la secuencia permanece sin cambios.</span><span class="sxs-lookup"><span data-stu-id="39559-466">The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</span></span> <span data-ttu-id="39559-467">Las implementaciones de devuelven el número de bytes leídos.</span><span class="sxs-lookup"><span data-stu-id="39559-467">Implementations return the number of bytes read.</span></span> <span data-ttu-id="39559-468">La implementación se bloqueará hasta que se puede leer al menos un byte de datos, en caso de que no hay datos disponibles.</span><span class="sxs-lookup"><span data-stu-id="39559-468">The implementation will block until at least one byte of data can be read, in the event that no data is available.</span></span> <span data-ttu-id="39559-469"><xref:System.IO.Stream.Read%2A> Devuelve 0 sólo cuando no hay ningún dato más en la secuencia y se espera que nada más (por ejemplo, un socket cerrado o el final del archivo).</span><span class="sxs-lookup"><span data-stu-id="39559-469"><xref:System.IO.Stream.Read%2A> returns 0 only when there is no more data in the stream and no more is expected (such as a closed socket or end of file).</span></span> <span data-ttu-id="39559-470">Una implementación es gratis devolver menos bytes de los solicitados, incluso si no se alcanzó el final de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-470">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="39559-471">Use <xref:System.IO.BinaryReader> para leer los tipos de datos primitivos.</span><span class="sxs-lookup"><span data-stu-id="39559-471">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39559-472">El ejemplo siguiente muestra cómo usar <xref:System.IO.Stream.Read%2A> para leer un bloque de datos.</span><span class="sxs-lookup"><span data-stu-id="39559-472">The following example shows how to use <xref:System.IO.Stream.Read%2A> to read a block of data.</span></span>  
  
 [!code-cpp[Classic Stream.Read Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stream.Read Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stream.Read Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stream.Read Example/CS/source.cs#1)]
 [!code-vb[Classic Stream.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stream.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39559-473">La suma de <paramref name="offset" /> y <paramref name="count" /> es mayor que la longitud del búfer.</span><span class="sxs-lookup"><span data-stu-id="39559-473">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39559-474"><paramref name="buffer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39559-474"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39559-475"><paramref name="offset" /> o <paramref name="count" /> es negativo.</span><span class="sxs-lookup"><span data-stu-id="39559-475"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39559-476">Error de E/S.</span><span class="sxs-lookup"><span data-stu-id="39559-476">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-477">La secuencia no admite lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-477">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-478">Se efectuó una llamada a los métodos después de cerrar la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-478">Methods were called after the stream was closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-479">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-479">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-480">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-480">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-481">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-481">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39559-482">Lee asincrónicamente una secuencia de bytes de la secuencia actual y avanza la posición en esta secuencia según el número de bytes leídos.</span><span class="sxs-lookup"><span data-stu-id="39559-482">Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync (buffer As Byte(), offset As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stream.ReadAsync (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="39559-483">El búfer en el que se escriben los datos.</span><span class="sxs-lookup"><span data-stu-id="39559-483">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="39559-484">Posición de desplazamiento en bytes de <paramref name="buffer" /> donde se comienza a escribir los datos del flujo.</span><span class="sxs-lookup"><span data-stu-id="39559-484">The byte offset in <paramref name="buffer" /> at which to begin writing data from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="39559-485">Número máximo de bytes que se pueden leer.</span><span class="sxs-lookup"><span data-stu-id="39559-485">The maximum number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="39559-486">Lee asincrónicamente una secuencia de bytes de la secuencia actual y avanza la posición en esta secuencia según el número de bytes leídos.</span><span class="sxs-lookup"><span data-stu-id="39559-486">Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="39559-487">Tarea que representa la operación de lectura asincrónica.</span><span class="sxs-lookup"><span data-stu-id="39559-487">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="39559-488">El valor del parámetro <paramref name="TResult" /> contiene el número total de bytes leídos en el búfer.</span><span class="sxs-lookup"><span data-stu-id="39559-488">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="39559-489">El valor del resultado puede ser menor que el número de bytes solicitados si el número de bytes disponibles actualmente es menor que el número solicitado o puede ser 0 (cero) si se ha llegado al final de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-489">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-490">El <xref:System.IO.Stream.ReadAsync%2A> método le permite realizar operaciones de E/S de gran cantidad de recursos sin bloquear el subproceso principal.</span><span class="sxs-lookup"><span data-stu-id="39559-490">The <xref:System.IO.Stream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="39559-491">Esta consideración de rendimiento es especialmente importante en una aplicación de la [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o una aplicación de [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] en que una operación de streaming prolongada puede bloquear el subproceso de interfaz de usuario y hacer que parezca que una aplicación ha dejado de responder.</span><span class="sxs-lookup"><span data-stu-id="39559-491">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="39559-492">Los métodos asincrónicos se usan junto con la `async` y `await` palabras clave en Visual Basic y C#.</span><span class="sxs-lookup"><span data-stu-id="39559-492">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="39559-493">Use el <xref:System.IO.Stream.CanRead%2A> propiedad para determinar si la instancia actual admite lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-493">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39559-494">En el ejemplo siguiente se muestra cómo se leen desde un archivo de forma asincrónica.</span><span class="sxs-lookup"><span data-stu-id="39559-494">The following example shows how to read from a file asynchronously.</span></span> <span data-ttu-id="39559-495">El ejemplo se usa el <xref:System.IO.FileStream> (clase), que se deriva de la <xref:System.IO.Stream> clase.</span><span class="sxs-lookup"><span data-stu-id="39559-495">The example uses the <xref:System.IO.FileStream> class, which derives from the <xref:System.IO.Stream> class.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#4](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example4.cs#4)]
 [!code-vb[Asynchronous_File_IO_async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39559-496"><paramref name="buffer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39559-496"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39559-497"><paramref name="offset" /> o <paramref name="count" /> es negativo.</span><span class="sxs-lookup"><span data-stu-id="39559-497"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39559-498">La suma de <paramref name="offset" /> y <paramref name="count" /> es mayor que la longitud del búfer.</span><span class="sxs-lookup"><span data-stu-id="39559-498">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-499">La secuencia no admite lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-499">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-500">Se ha eliminado la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-500">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="39559-501">Una operación de lectura anterior está usando actualmente la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-501">The stream is currently in use by a previous read operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stream.ReadAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="39559-502">El búfer en el que se escriben los datos.</span><span class="sxs-lookup"><span data-stu-id="39559-502">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="39559-503">Posición de desplazamiento en bytes de <paramref name="buffer" /> donde se comienza a escribir los datos del flujo.</span><span class="sxs-lookup"><span data-stu-id="39559-503">The byte offset in <paramref name="buffer" /> at which to begin writing data from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="39559-504">Número máximo de bytes que se pueden leer.</span><span class="sxs-lookup"><span data-stu-id="39559-504">The maximum number of bytes to read.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="39559-505">Token para supervisar solicitudes de cancelación.</span><span class="sxs-lookup"><span data-stu-id="39559-505">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="39559-506">El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="39559-506">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="39559-507">Lee de forma asincrónica una secuencia de bytes en la secuencia actual, se hace avanzar la posición dentro de la secuencia el número de bytes leídos y controla las solicitudes de cancelación.</span><span class="sxs-lookup"><span data-stu-id="39559-507">Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="39559-508">Tarea que representa la operación de lectura asincrónica.</span><span class="sxs-lookup"><span data-stu-id="39559-508">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="39559-509">El valor del parámetro <paramref name="TResult" /> contiene el número total de bytes leídos en el búfer.</span><span class="sxs-lookup"><span data-stu-id="39559-509">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span></span> <span data-ttu-id="39559-510">El valor del resultado puede ser menor que el número de bytes solicitados si el número de bytes disponibles actualmente es menor que el número solicitado o puede ser 0 (cero) si se ha llegado al final de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-510">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-511">El <xref:System.IO.Stream.ReadAsync%2A> método le permite realizar operaciones de E/S de gran cantidad de recursos sin bloquear el subproceso principal.</span><span class="sxs-lookup"><span data-stu-id="39559-511">The <xref:System.IO.Stream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="39559-512">Esta consideración de rendimiento es especialmente importante en una aplicación de la [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o una aplicación de [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] en que una operación de streaming prolongada puede bloquear el subproceso de interfaz de usuario y hacer que parezca que una aplicación ha dejado de responder.</span><span class="sxs-lookup"><span data-stu-id="39559-512">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="39559-513">Los métodos asincrónicos se usan junto con la `async` y `await` palabras clave en Visual Basic y C#.</span><span class="sxs-lookup"><span data-stu-id="39559-513">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="39559-514">Use el <xref:System.IO.Stream.CanRead%2A> propiedad para determinar si la instancia actual admite lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-514">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="39559-515">Si se cancela la operación antes de que finalice, la tarea devuelta contiene la <xref:System.Threading.Tasks.TaskStatus.Canceled> valor para el <xref:System.Threading.Tasks.Task.Status%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="39559-515">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="39559-516">Para obtener un ejemplo, vea el <xref:System.IO.Stream.ReadAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> sobrecargar.</span><span class="sxs-lookup"><span data-stu-id="39559-516">For an example, see the <xref:System.IO.Stream.ReadAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39559-517"><paramref name="buffer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39559-517"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39559-518"><paramref name="offset" /> o <paramref name="count" /> es negativo.</span><span class="sxs-lookup"><span data-stu-id="39559-518"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39559-519">La suma de <paramref name="offset" /> y <paramref name="count" /> es mayor que la longitud del búfer.</span><span class="sxs-lookup"><span data-stu-id="39559-519">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-520">La secuencia no admite lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-520">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-521">Se ha eliminado la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-521">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="39559-522">Una operación de lectura anterior está usando actualmente la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-522">The stream is currently in use by a previous read operation.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md"><span data-ttu-id="39559-523">Cancelación</span><span class="sxs-lookup"><span data-stu-id="39559-523">Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public virtual int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadByte();" />
      <MemberSignature Language="F#" Value="abstract member ReadByte : unit -&gt; int&#xA;override this.ReadByte : unit -&gt; int" Usage="stream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39559-524">Lee un byte de la secuencia y hace avanzar la posición de la secuencia en un byte, o devuelve -1 si está al final de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-524">Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="39559-525">Byte sin signo convertido en <see langword="Int32" />,o bien -1 si está al final de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-525">The unsigned byte cast to an <see langword="Int32" />, or -1 if at the end of the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-526">Use el <xref:System.IO.Stream.CanRead%2A> propiedad para determinar si la instancia actual admite lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-526">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="39559-527">Intenta manipular la secuencia después de que se ha cerrado la secuencia podría producir un <xref:System.ObjectDisposedException>.</span><span class="sxs-lookup"><span data-stu-id="39559-527">Attempts to manipulate the stream after the stream has been closed could throw an <xref:System.ObjectDisposedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-528">La secuencia no admite lectura.</span><span class="sxs-lookup"><span data-stu-id="39559-528">The stream does not support reading.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-529">Se efectuó una llamada a los métodos después de cerrar la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-529">Methods were called after the stream was closed.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="39559-530">La implementación predeterminada de <see langword="Stream" /> crea una nueva matriz de byte único y, a continuación, llama a <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="39559-530">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span></span> <span data-ttu-id="39559-531">Aunque esto es formalmente correcto, no es eficaz.</span><span class="sxs-lookup"><span data-stu-id="39559-531">While this is formally correct, it is inefficient.</span></span> <span data-ttu-id="39559-532">Cualquier secuencia con un búfer interno debe reemplazar este método y proporcionar una versión mucho más eficaz que lee el búfer directamente, evitando la asignación adicional de matrices en cada llamada.</span><span class="sxs-lookup"><span data-stu-id="39559-532">Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-533">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-533">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-534">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-534">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-535">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-535">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public virtual int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.IO.Stream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39559-536">Obtiene o establece un valor, en milisegundos, que determina durante cuánto tiempo la secuencia intentará realizar operaciones de lectura antes de que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="39559-536">Gets or sets a value, in milliseconds, that determines how long the stream will attempt to read before timing out.</span></span></summary>
        <value><span data-ttu-id="39559-537">Valor, en milisegundos, que determina durante cuánto tiempo la secuencia intentará realizar operaciones de lectura antes de que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="39559-537">A value, in milliseconds, that determines how long the stream will attempt to read before timing out.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="39559-538">El método <see cref="P:System.IO.Stream.ReadTimeout" /> siempre produce una excepción <see cref="T:System.InvalidOperationException" />.</span><span class="sxs-lookup"><span data-stu-id="39559-538">The <see cref="P:System.IO.Stream.ReadTimeout" /> method always throws an <see cref="T:System.InvalidOperationException" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="39559-539">El <see cref="P:System.IO.Stream.ReadTimeout" /> propiedad se debe invalidar para proporcionar el comportamiento adecuado de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-539">The <see cref="P:System.IO.Stream.ReadTimeout" /> property should be overridden to provide the appropriate behavior for the stream.</span></span> <span data-ttu-id="39559-540">Si la secuencia no es compatible con el tiempo de espera, esta propiedad se debe producir una <see cref="T:System.InvalidOperationException" />.</span><span class="sxs-lookup"><span data-stu-id="39559-540">If the stream does not support timing out, this property should raise an <see cref="T:System.InvalidOperationException" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public abstract long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="abstract member Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="stream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="39559-541">Desplazamiento de bytes relacionado con el parámetro <paramref name="origin" />.</span><span class="sxs-lookup"><span data-stu-id="39559-541">A byte offset relative to the <paramref name="origin" /> parameter.</span></span></param>
        <param name="origin"><span data-ttu-id="39559-542">Valor de tipo <see cref="T:System.IO.SeekOrigin" /> que indica el punto de referencia utilizado para obtener la nueva posición.</span><span class="sxs-lookup"><span data-stu-id="39559-542">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</span></span></param>
        <summary><span data-ttu-id="39559-543">Cuando se reemplaza en una clase derivada, se establece la posición dentro de la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-543">When overridden in a derived class, sets the position within the current stream.</span></span></summary>
        <returns><span data-ttu-id="39559-544">La nueva posición dentro de la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-544">The new position within the current stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-545">Use el <xref:System.IO.Stream.CanSeek%2A> propiedad para determinar si la instancia actual admite búsquedas.</span><span class="sxs-lookup"><span data-stu-id="39559-545">Use the <xref:System.IO.Stream.CanSeek%2A> property to determine whether the current instance supports seeking.</span></span>  
  
 <span data-ttu-id="39559-546">Si `offset` es negativo, la nueva posición debe preceder a la posición especificada por `origin` por el número de bytes especificado por `offset`.</span><span class="sxs-lookup"><span data-stu-id="39559-546">If `offset` is negative, the new position is required to precede the position specified by `origin` by the number of bytes specified by `offset`.</span></span> <span data-ttu-id="39559-547">Si `offset` es cero (0), la nueva posición es necesaria que sea la posición especificada por `origin`.</span><span class="sxs-lookup"><span data-stu-id="39559-547">If `offset` is zero (0), the new position is required to be the position specified by `origin`.</span></span> <span data-ttu-id="39559-548">Si `offset` es positivo, se requiere para seguir a la posición especificada por la nueva posición `origin` por el número de bytes especificado por `offset`.</span><span class="sxs-lookup"><span data-stu-id="39559-548">If `offset` is positive, the new position is required to follow the position specified by `origin` by the number of bytes specified by `offset`.</span></span>  
  
 <span data-ttu-id="39559-549">Las clases derivadas de `Stream` que busca soporte técnico debe invalidar este método para proporcionar la funcionalidad descrita anteriormente.</span><span class="sxs-lookup"><span data-stu-id="39559-549">Classes derived from `Stream` that support seeking must override this method to provide the functionality described above.</span></span>  
  
 <span data-ttu-id="39559-550">Se admite la búsqueda en cualquier ubicación más allá de la longitud de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-550">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39559-551">Error de E/S.</span><span class="sxs-lookup"><span data-stu-id="39559-551">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-552">La secuencia no admite búsquedas, como en el caso donde la secuencia se cree a partir de los resultados de una canalización o consola.</span><span class="sxs-lookup"><span data-stu-id="39559-552">The stream does not support seeking, such as if the stream is constructed from a pipe or console output.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-553">Se efectuó una llamada a los métodos después de cerrar la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-553">Methods were called after the stream was closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-554">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-554">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-555">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-555">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-556">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-556">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public abstract void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetLength(long value);" />
      <MemberSignature Language="F#" Value="abstract member SetLength : int64 -&gt; unit" Usage="stream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="39559-557">Longitud deseada de la secuencia actual, en bytes.</span><span class="sxs-lookup"><span data-stu-id="39559-557">The desired length of the current stream in bytes.</span></span></param>
        <summary><span data-ttu-id="39559-558">Cuando se reemplaza en una clase derivada, se establece la longitud de la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-558">When overridden in a derived class, sets the length of the current stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-559">Si el valor especificado es menor que la longitud actual de la secuencia, se trunca la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-559">If the specified value is less than the current length of the stream, the stream is truncated.</span></span> <span data-ttu-id="39559-560">Si el valor especificado es mayor que la longitud actual de la secuencia, se expande la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-560">If the specified value is larger than the current length of the stream, the stream is expanded.</span></span> <span data-ttu-id="39559-561">Si se expande la secuencia, no se define el contenido de la secuencia entre la antigua y la nueva longitud.</span><span class="sxs-lookup"><span data-stu-id="39559-561">If the stream is expanded, the contents of the stream between the old and the new length are not defined.</span></span>  
  
 <span data-ttu-id="39559-562">Una secuencia debe admitir operaciones de escritura y de búsqueda para `SetLength` funcione.</span><span class="sxs-lookup"><span data-stu-id="39559-562">A stream must support both writing and seeking for `SetLength` to work.</span></span>  
  
 <span data-ttu-id="39559-563">Use la <xref:System.IO.Stream.CanWrite%2A> propiedad para determinar si la instancia actual admite operaciones de escritura y el <xref:System.IO.Stream.CanSeek%2A> propiedad para determinar si se admite la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="39559-563">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing, and the <xref:System.IO.Stream.CanSeek%2A> property to determine whether seeking is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39559-564">Error de E/S.</span><span class="sxs-lookup"><span data-stu-id="39559-564">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-565">La secuencia no admite operaciones de lectura ni escritura, como en el caso donde la secuencia se cree a partir de los resultados de una canalización o consola.</span><span class="sxs-lookup"><span data-stu-id="39559-565">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-566">Se efectuó una llamada a los métodos después de cerrar la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-566">Methods were called after the stream was closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-567">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-567">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-568">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-568">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-569">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-569">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.Stream Synchronized (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream Synchronized(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Synchronized(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ Synchronized(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.IO.Stream -&gt; System.IO.Stream" Usage="System.IO.Stream.Synchronized stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="39559-570">Objeto <see cref="T:System.IO.Stream" /> que se va a sincronizar.</span><span class="sxs-lookup"><span data-stu-id="39559-570">The <see cref="T:System.IO.Stream" /> object to synchronize.</span></span></param>
        <summary><span data-ttu-id="39559-571">Crea un contenedor seguro para subprocesos (sincronizado) alrededor del objeto <see cref="T:System.IO.Stream" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="39559-571">Creates a thread-safe (synchronized) wrapper around the specified <see cref="T:System.IO.Stream" /> object.</span></span></summary>
        <returns><span data-ttu-id="39559-572">Objeto <see cref="T:System.IO.Stream" /> seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="39559-572">A thread-safe <see cref="T:System.IO.Stream" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-573">Este método devuelve una clase que encapsule especificado <xref:System.IO.Stream> de objetos y restringe el acceso a ella desde varios subprocesos.</span><span class="sxs-lookup"><span data-stu-id="39559-573">This method returns a class that wraps the specified <xref:System.IO.Stream> object and restricts access to it from multiple threads.</span></span> <span data-ttu-id="39559-574">Todos los accesos a la <xref:System.IO.Stream> objeto será seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="39559-574">All access to the <xref:System.IO.Stream> object will be thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39559-575"><paramref name="stream" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39559-575"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39559-576">Libera todos los recursos que usa <see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="39559-576">Releases all resources used by the <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="39559-577">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="39559-577">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="39559-578">Solo se puede utilizar cuando la instancia de <xref:System.IO.Stream> se convierte en una interfaz <xref:System.IDisposable>.</span><span class="sxs-lookup"><span data-stu-id="39559-578">It can be used only when the <xref:System.IO.Stream> instance is cast to an <xref:System.IDisposable> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : ReadOnlySpan&lt;byte&gt; -&gt; unit&#xA;override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="stream.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : byte[] * int * int -&gt; unit" Usage="stream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="39559-579">Matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="39559-579">An array of bytes.</span></span> <span data-ttu-id="39559-580">Este método copia <paramref name="count" /> bytes desde <paramref name="buffer" /> al flujo actual.</span><span class="sxs-lookup"><span data-stu-id="39559-580">This method copies <paramref name="count" /> bytes from <paramref name="buffer" /> to the current stream.</span></span></param>
        <param name="offset"><span data-ttu-id="39559-581">Desplazamiento en bytes de base cero en la <paramref name="buffer" /> en la que se comienzan a copiar los bytes en la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-581">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</span></span></param>
        <param name="count"><span data-ttu-id="39559-582">Número de bytes que se deben escribir en la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-582">The number of bytes to be written to the current stream.</span></span></param>
        <summary><span data-ttu-id="39559-583">Cuando se reemplaza en una clase derivada, se escribe una secuencia de bytes en la secuencia actual y se hace avanzar la posición actual dentro de la secuencia el número de bytes escritos.</span><span class="sxs-lookup"><span data-stu-id="39559-583">When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-584">Use el <xref:System.IO.Stream.CanWrite%2A> propiedad para determinar si la instancia actual admite escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-584">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="39559-585">Use el <xref:System.IO.Stream.WriteAsync%2A> método para escribir de forma asincrónica en la secuencia actual.</span><span class="sxs-lookup"><span data-stu-id="39559-585">Use the <xref:System.IO.Stream.WriteAsync%2A> method to write asynchronously to the current stream.</span></span>  
  
 <span data-ttu-id="39559-586">Si la operación de escritura se realiza correctamente, hace avanzar la posición dentro de la secuencia en el número de bytes escritos.</span><span class="sxs-lookup"><span data-stu-id="39559-586">If the write operation is successful, the position within the stream advances by the number of bytes written.</span></span> <span data-ttu-id="39559-587">Si se produce una excepción, no se cambia la posición dentro de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-587">If an exception occurs, the position within the stream remains unchanged.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39559-588">La suma de <paramref name="offset" /> y <paramref name="count" /> es mayor que la longitud del búfer.</span><span class="sxs-lookup"><span data-stu-id="39559-588">The sum of <paramref name="offset" /> and <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39559-589"><paramref name="buffer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39559-589"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39559-590"><paramref name="offset" /> o <paramref name="count" /> es negativo.</span><span class="sxs-lookup"><span data-stu-id="39559-590"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39559-591">Se ha producido un error de E/S como: No se puede encontrar el archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="39559-591">An I/O error occurred, such as the specified file cannot be found.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-592">La secuencia no admite escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-592">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-593">Se ha llamado a <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> después de cerrar la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-593"><see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> was called after the stream was closed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-594">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-594">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-595">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-595">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-596">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-596">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39559-597">Escribe asincrónicamente una secuencia de bytes en la secuencia actual y avanza la posición actual en esta secuencia según el número de bytes escritos.</span><span class="sxs-lookup"><span data-stu-id="39559-597">Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&#xA;override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="stream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (buffer As Byte(), offset As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.WriteAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task" Usage="stream.WriteAsync (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="39559-598">Búfer del que se van a escribir datos.</span><span class="sxs-lookup"><span data-stu-id="39559-598">The buffer to write data from.</span></span></param>
        <param name="offset"><span data-ttu-id="39559-599">Desplazamiento en bytes de base cero de <paramref name="buffer" /> desde donde se comienzan a copiar los bytes en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-599">The zero-based byte offset in <paramref name="buffer" /> from which to begin copying bytes to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="39559-600">Número máximo de bytes que se pueden escribir.</span><span class="sxs-lookup"><span data-stu-id="39559-600">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="39559-601">Escribe asincrónicamente una secuencia de bytes en la secuencia actual y avanza la posición actual en esta secuencia según el número de bytes escritos.</span><span class="sxs-lookup"><span data-stu-id="39559-601">Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span></span></summary>
        <returns><span data-ttu-id="39559-602">Tarea que representa la operación de escritura asincrónica.</span><span class="sxs-lookup"><span data-stu-id="39559-602">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-603">El <xref:System.IO.Stream.WriteAsync%2A> método le permite realizar operaciones de E/S de gran cantidad de recursos sin bloquear el subproceso principal.</span><span class="sxs-lookup"><span data-stu-id="39559-603">The <xref:System.IO.Stream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="39559-604">Esta consideración de rendimiento es especialmente importante en una aplicación de la [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o una aplicación de [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] en que una operación de streaming prolongada puede bloquear el subproceso de interfaz de usuario y hacer que parezca que una aplicación ha dejado de responder.</span><span class="sxs-lookup"><span data-stu-id="39559-604">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="39559-605">Los métodos asincrónicos se usan junto con la `async` y `await` palabras clave en Visual Basic y C#.</span><span class="sxs-lookup"><span data-stu-id="39559-605">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="39559-606">Use el <xref:System.IO.Stream.CanWrite%2A> propiedad para determinar si la instancia actual admite escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-606">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39559-607">El ejemplo siguiente muestra cómo escribir asincrónicamente en un archivo.</span><span class="sxs-lookup"><span data-stu-id="39559-607">The following example shows how to write asynchronously to a file.</span></span> <span data-ttu-id="39559-608">El ejemplo se usa el <xref:System.IO.FileStream> (clase), que se deriva de la <xref:System.IO.Stream> clase.</span><span class="sxs-lookup"><span data-stu-id="39559-608">The example uses the <xref:System.IO.FileStream> class, which derives from the <xref:System.IO.Stream> class.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#3](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example3.cs#3)]
 [!code-vb[Asynchronous_File_IO_async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39559-609"><paramref name="buffer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39559-609"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39559-610"><paramref name="offset" /> o <paramref name="count" /> es negativo.</span><span class="sxs-lookup"><span data-stu-id="39559-610"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39559-611">La suma de <paramref name="offset" /> y <paramref name="count" /> es mayor que la longitud del búfer.</span><span class="sxs-lookup"><span data-stu-id="39559-611">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-612">La secuencia no admite escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-612">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-613">Se ha eliminado la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-613">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="39559-614">La secuencia está actualmente en uso por una operación de escritura anterior.</span><span class="sxs-lookup"><span data-stu-id="39559-614">The stream is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stream.WriteAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="39559-615">Búfer del que se van a escribir datos.</span><span class="sxs-lookup"><span data-stu-id="39559-615">The buffer to write data from.</span></span></param>
        <param name="offset"><span data-ttu-id="39559-616">Desplazamiento en bytes de base cero de <paramref name="buffer" /> desde donde se comienzan a copiar los bytes en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-616">The zero-based byte offset in <paramref name="buffer" /> from which to begin copying bytes to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="39559-617">Número máximo de bytes que se pueden escribir.</span><span class="sxs-lookup"><span data-stu-id="39559-617">The maximum number of bytes to write.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="39559-618">Token para supervisar solicitudes de cancelación.</span><span class="sxs-lookup"><span data-stu-id="39559-618">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="39559-619">El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="39559-619">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="39559-620">Escribe de forma asincrónica una secuencia de bytes en la secuencia actual, se hace avanzar la posición actual dentro de la secuencia el número de bytes escritos y controla las solicitudes de cancelación.</span><span class="sxs-lookup"><span data-stu-id="39559-620">Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="39559-621">Tarea que representa la operación de escritura asincrónica.</span><span class="sxs-lookup"><span data-stu-id="39559-621">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-622">El <xref:System.IO.Stream.WriteAsync%2A> método le permite realizar operaciones de E/S de gran cantidad de recursos sin bloquear el subproceso principal.</span><span class="sxs-lookup"><span data-stu-id="39559-622">The <xref:System.IO.Stream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="39559-623">Esta consideración de rendimiento es especialmente importante en una aplicación de la [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] o una aplicación de [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] en que una operación de streaming prolongada puede bloquear el subproceso de interfaz de usuario y hacer que parezca que una aplicación ha dejado de responder.</span><span class="sxs-lookup"><span data-stu-id="39559-623">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="39559-624">Los métodos asincrónicos se usan junto con la `async` y `await` palabras clave en Visual Basic y C#.</span><span class="sxs-lookup"><span data-stu-id="39559-624">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="39559-625">Use el <xref:System.IO.Stream.CanWrite%2A> propiedad para determinar si la instancia actual admite escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-625">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="39559-626">Si se cancela la operación antes de que finalice, la tarea devuelta contiene la <xref:System.Threading.Tasks.TaskStatus.Canceled> valor para el <xref:System.Threading.Tasks.Task.Status%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="39559-626">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="39559-627">Para obtener un ejemplo, vea el <xref:System.IO.Stream.WriteAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> sobrecargar.</span><span class="sxs-lookup"><span data-stu-id="39559-627">For an example, see the <xref:System.IO.Stream.WriteAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39559-628"><paramref name="buffer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="39559-628"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="39559-629"><paramref name="offset" /> o <paramref name="count" /> es negativo.</span><span class="sxs-lookup"><span data-stu-id="39559-629"><paramref name="offset" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39559-630">La suma de <paramref name="offset" /> y <paramref name="count" /> es mayor que la longitud del búfer.</span><span class="sxs-lookup"><span data-stu-id="39559-630">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-631">La secuencia no admite escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-631">The stream does not support writing.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-632">Se ha eliminado la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-632">The stream has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="39559-633">La secuencia está actualmente en uso por una operación de escritura anterior.</span><span class="sxs-lookup"><span data-stu-id="39559-633">The stream is currently in use by a previous write operation.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/cancellation-in-managed-threads.md"><span data-ttu-id="39559-634">Cancelación</span><span class="sxs-lookup"><span data-stu-id="39559-634">Cancellation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public virtual void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="abstract member WriteByte : byte -&gt; unit&#xA;override this.WriteByte : byte -&gt; unit" Usage="stream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="39559-635">Byte que se debe escribir en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-635">The byte to write to the stream.</span></span></param>
        <summary><span data-ttu-id="39559-636">Escribe un byte a la posición actual en la secuencia y avanza la posición de la secuencia en un byte.</span><span class="sxs-lookup"><span data-stu-id="39559-636">Writes a byte to the current position in the stream and advances the position within the stream by one byte.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39559-637">Use el <xref:System.IO.Stream.CanWrite%2A> propiedad para determinar si la instancia actual admite escritura.</span><span class="sxs-lookup"><span data-stu-id="39559-637">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="39559-638">Error de E/S.</span><span class="sxs-lookup"><span data-stu-id="39559-638">An I/O error occurs.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="39559-639">La secuencia no admite escritura o ya se encuentra cerrada.</span><span class="sxs-lookup"><span data-stu-id="39559-639">The stream does not support writing, or the stream is already closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="39559-640">Se efectuó una llamada a los métodos después de cerrar la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-640">Methods were called after the stream was closed.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="39559-641">La implementación predeterminada de <see langword="Stream" /> crea una nueva matriz de byte único y, a continuación, llama a <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="39559-641">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span></span> <span data-ttu-id="39559-642">Aunque esto es formalmente correcto, no es eficaz.</span><span class="sxs-lookup"><span data-stu-id="39559-642">While this is formally correct, it is inefficient.</span></span> <span data-ttu-id="39559-643">Cualquier secuencia con un búfer interno debe reemplazar este método y proporcionar una versión mucho más eficaz que escribe en el búfer directamente, evitando la asignación adicional de matrices en cada llamada.</span><span class="sxs-lookup"><span data-stu-id="39559-643">Any stream with an internal buffer should override this method and provide a much more efficient version that writes to the buffer directly, avoiding the extra array allocation on every call.</span></span></para></block>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="39559-644">E/S de archivos y secuencias</span><span class="sxs-lookup"><span data-stu-id="39559-644">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="39559-645">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-645">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="39559-646">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="39559-646">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public virtual int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.IO.Stream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39559-647">Obtiene o establece un valor, en milisegundos, que determina durante cuánto tiempo la secuencia intentará realizar operaciones de escritura antes de que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="39559-647">Gets or sets a value, in milliseconds, that determines how long the stream will attempt to write before timing out.</span></span></summary>
        <value><span data-ttu-id="39559-648">Valor, en milisegundos, que determina durante cuánto tiempo la secuencia intentará realizar operaciones de escritura antes de que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="39559-648">A value, in milliseconds, that determines how long the stream will attempt to write before timing out.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="39559-649">El método <see cref="P:System.IO.Stream.WriteTimeout" /> siempre produce una excepción <see cref="T:System.InvalidOperationException" />.</span><span class="sxs-lookup"><span data-stu-id="39559-649">The <see cref="P:System.IO.Stream.WriteTimeout" /> method always throws an <see cref="T:System.InvalidOperationException" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="39559-650">El <see cref="P:System.IO.Stream.WriteTimeout" /> propiedad se debe invalidar para proporcionar el comportamiento adecuado de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="39559-650">The <see cref="P:System.IO.Stream.WriteTimeout" /> property should be overridden to provide the appropriate behavior for the stream.</span></span> <span data-ttu-id="39559-651">Si la secuencia no es compatible con el tiempo de espera, esta propiedad se debe producir una <see cref="T:System.InvalidOperationException" />.</span><span class="sxs-lookup"><span data-stu-id="39559-651">If the stream does not support timing out, this property should raise an <see cref="T:System.InvalidOperationException" />.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="HtmlTextWriter" FullName="System.Web.UI.HtmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="44d22ce4543ab006b821a6656fb1fc02ea5b139d" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52614585" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlTextWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HtmlTextWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTextWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTextWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type HtmlTextWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a67c7-101">Escribe caracteres de marcado y texto en un flujo de salida de un control de servidor ASP.NET.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a67c7-101">Writes markup characters and text to an ASP.NET server control output stream.</span>
      </span>
      <span data-ttu-id="a67c7-102">Esta clase proporciona funciones de aplicación de formato que los controles de servidor de ASP.NET utilizan al representar marcado en los clientes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a67c7-102">This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-103">La <xref:System.Web.UI.HtmlTextWriter> clase se utiliza para representar HTML 4.0 en exploradores de escritorio.</span><span class="sxs-lookup"><span data-stu-id="a67c7-103">The <xref:System.Web.UI.HtmlTextWriter> class is used to render HTML 4.0 to desktop browsers.</span></span> <span data-ttu-id="a67c7-104">El <xref:System.Web.UI.HtmlTextWriter> también es la clase base para todos los escritores de marcado en el <xref:System.Web.UI> espacio de nombres, incluido el <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, y <xref:System.Web.UI.XhtmlTextWriter> clases.</span><span class="sxs-lookup"><span data-stu-id="a67c7-104">The <xref:System.Web.UI.HtmlTextWriter> is also the base class for all markup writers in the <xref:System.Web.UI> namespace, including the <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, and <xref:System.Web.UI.XhtmlTextWriter> classes.</span></span> <span data-ttu-id="a67c7-105">Estas clases se usan para escribir los elementos, atributos y estilo e información de diseño para los distintos tipos de marcado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-105">These classes are used to write the elements, attributes, and style and layout information for different types of markup.</span></span> <span data-ttu-id="a67c7-106">Además, estas clases utilizan las clases de adaptadores de páginas y controles que están asociadas con cada lenguaje de marcado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-106">In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</span></span>  
  
 <span data-ttu-id="a67c7-107">En la mayoría de los casos, ASP.NET usa automáticamente el sistema de escritura adecuado para el dispositivo solicitante.</span><span class="sxs-lookup"><span data-stu-id="a67c7-107">In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</span></span> <span data-ttu-id="a67c7-108">Sin embargo, si crea un escritor de texto personalizado o si desea especificar un escritor concreto para representar una página de un dispositivo específico, debe asignar el sistema de escritura a la página en el `controlAdapters` sección del archivo .browser de aplicación.</span><span class="sxs-lookup"><span data-stu-id="a67c7-108">However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the `controlAdapters` section of the application .browser file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-109">En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.Control.Render%2A> método de un control personalizado que se deriva el <xref:System.Web.UI.Control> clase.</span><span class="sxs-lookup"><span data-stu-id="a67c7-109">The following code example shows how to override the <xref:System.Web.UI.Control.Render%2A> method of a custom control that is derived from the <xref:System.Web.UI.Control> class.</span></span> <span data-ttu-id="a67c7-110">El ejemplo de código muestra cómo usar distintos <xref:System.Web.UI.HtmlTextWriter> métodos, propiedades y campos.</span><span class="sxs-lookup"><span data-stu-id="a67c7-110">The code example illustrates how to use various <xref:System.Web.UI.HtmlTextWriter> methods, properties, and fields.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#1)]
 [!code-vb[MarkupTextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
    <altmember cref="T:System.Web.UI.Html32TextWriter" />
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
    <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-111">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-111">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a67c7-112">Instancia de <see cref="T:System.IO.TextWriter" /> que representa el contenido de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-112">The <see cref="T:System.IO.TextWriter" /> instance that renders the markup content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-113">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.HtmlTextWriter" /> que utiliza una cadena de ficha predeterminada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-113">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class that uses a default tab string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-114">El <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor usa el <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constante cuando sea necesaria la sangría de una línea.</span><span class="sxs-lookup"><span data-stu-id="a67c7-114">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant when indentation of a line is necessary.</span></span> <span data-ttu-id="a67c7-115">Lo llama el <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> sobrecarga para inicializar la nueva instancia.</span><span class="sxs-lookup"><span data-stu-id="a67c7-115">It calls the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> overload to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-116">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor para crear un personalizado <xref:System.Web.UI.HtmlTextWriter> objeto denominado `StyledLabelHtmlWriter.` cuando el `MyPage` clase personalizada, que se deriva el <xref:System.Web.UI.Page> de clase, se solicita un cliente explorador, utiliza el `StyledLabelHtmlWriter` clase para representar su contenido en el flujo de salida.</span><span class="sxs-lookup"><span data-stu-id="a67c7-116">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a67c7-117">Objeto <see cref="T:System.IO.TextWriter" /> que representa el contenido de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-117">The <see cref="T:System.IO.TextWriter" /> that renders the markup content.</span>
          </span>
        </param>
        <param name="tabString">
          <span data-ttu-id="a67c7-118">Cadena que se debe usar para representar el sangrado de una línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-118">The string to use to render a line indentation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-119">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.HtmlTextWriter" /> con un carácter de cadena de ficha especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-119">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class with a specified tab string character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-120">El <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor usa `tabString` cuando es necesario aplicar sangría a una línea.</span><span class="sxs-lookup"><span data-stu-id="a67c7-120">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor uses `tabString` when indentation of a line is necessary.</span></span> <span data-ttu-id="a67c7-121">Lo llama el <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> base constructor para inicializar la nueva instancia.</span><span class="sxs-lookup"><span data-stu-id="a67c7-121">It calls the <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> base constructor to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-122">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor para crear un personalizado <xref:System.Web.UI.HtmlTextWriter> objeto denominado `StyledLabelHtmlWriter.` cuando el `MyPage` clase personalizada, que se deriva el <xref:System.Web.UI.Page> de clase, se solicita un cliente explorador, utiliza el `StyledLabelHtmlWriter` clase para representar su contenido en el flujo de salida.</span><span class="sxs-lookup"><span data-stu-id="a67c7-122">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-123">Agrega el valor y el atributo de marcado especificados a la etiqueta de apertura del elemento que crea el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> con una llamada posterior al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-123">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string -&gt; unit&#xA;override this.AddAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a67c7-124">Cadena con el nombre del atributo que se ha de agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-124">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-125">Cadena con el valor que se ha de asignar al atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-125">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-126">Agrega el valor y el atributo de marcado especificados a la etiqueta de apertura del elemento que crea el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> con una llamada posterior al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-126">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-127">Use la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> método si el atributo no es uno de los <xref:System.Web.UI.HtmlTextWriterAttribute> valores, o si el atributo no se conoce hasta el tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="a67c7-127">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time.</span></span>  
  
 <span data-ttu-id="a67c7-128">Para una instancia de elemento de marcado, la <xref:System.Web.UI.HtmlTextWriter> clase mantiene una lista de atributos para ese elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-128">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="a67c7-129">Cuando el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> llama el método, todos los atributos agregados por el <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> método se representan en la etiqueta de apertura del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-129">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="a67c7-130">A continuación, se borra la lista de atributos de la <xref:System.Web.UI.HtmlTextWriter> objeto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-130">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="a67c7-131">El patrón de codificación para representar elementos de marcado es como sigue:</span><span class="sxs-lookup"><span data-stu-id="a67c7-131">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="a67c7-132">Use el <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> método para agregar atributos al elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-132">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="a67c7-133">Utilice el método <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="a67c7-133">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="a67c7-134">Use otros métodos según sea necesario para representar el contenido que se encuentra entre el elemento etiquetas de apertura y cierre.</span><span class="sxs-lookup"><span data-stu-id="a67c7-134">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="a67c7-135">Utilice el método <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="a67c7-135">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-136">En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> método antes de llamar a la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-136">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method before calling the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="a67c7-137">El código llama a dos sobrecargas distintas de <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> y dos de las distintas sobrecargas de <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> antes de llamar a la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método para representar un `<span>` elemento al flujo de salida.</span><span class="sxs-lookup"><span data-stu-id="a67c7-137">The code calls two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> before it calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to render a `<span>` element to the output stream.</span></span> <span data-ttu-id="a67c7-138">El <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> método se utiliza para definir el atributo personalizado denominado `CustomAttribute` y el valor personalizado denominado `CustomAttributeValue` para el `<span>` elemento que representa este código.</span><span class="sxs-lookup"><span data-stu-id="a67c7-138">The <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method is used to define the custom attribute named `CustomAttribute` and the custom value named `CustomAttributeValue` for the `<span>` element that this code renders.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="a67c7-139">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> que representa el atributo de marcado que se va a agregar al flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-139">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-140">Cadena con el valor que se ha de asignar al atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-140">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-141">Agrega el atributo de marcado y el valor del atributo a la etiqueta de apertura del elemento que crea el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> con una llamada posterior al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-141">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-142">Use la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> método para representar un atributo de marcado estándar.</span><span class="sxs-lookup"><span data-stu-id="a67c7-142">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to render a standard markup attribute.</span></span>  
  
 <span data-ttu-id="a67c7-143">Para una instancia de elemento de marcado, la <xref:System.Web.UI.HtmlTextWriter> clase mantiene una lista de atributos para ese elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-143">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="a67c7-144">Cuando el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> llama el método, todos los atributos que se agregan mediante el <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> método se representan en la etiqueta de apertura del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-144">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes that are added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="a67c7-145">A continuación, se borra la lista de atributos de la <xref:System.Web.UI.HtmlTextWriter>.</span><span class="sxs-lookup"><span data-stu-id="a67c7-145">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter>.</span></span>  
  
 <span data-ttu-id="a67c7-146">El patrón de codificación para representar elementos de marcado es como sigue:</span><span class="sxs-lookup"><span data-stu-id="a67c7-146">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="a67c7-147">Use el <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> método para agregar atributos al elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-147">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="a67c7-148">Utilice el método <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="a67c7-148">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="a67c7-149">Use otros métodos según sea necesario para representar el contenido que se encuentra entre el elemento etiquetas de apertura y cierre.</span><span class="sxs-lookup"><span data-stu-id="a67c7-149">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="a67c7-150">Utilice el método <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="a67c7-150">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-151">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> método para agregar un `Onclick` de atributo a un elemento de marcado y, a continuación, establezca su valor en el siguiente código ECMAScript:</span><span class="sxs-lookup"><span data-stu-id="a67c7-151">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to add an `Onclick` attribute to a markup element, and then set its value to the following ECMAScript code:</span></span>  
  
```  
alert('Hello');  
```  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#1)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value, bool fEndode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value, bool fEndode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String, fEndode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, bool fEndode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * bool -&gt; unit&#xA;override this.AddAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, fEndode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEndode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a67c7-152">Cadena con el nombre del atributo que se ha de agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-152">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-153">Cadena con el valor que se ha de asignar al atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-153">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="fEndode">
          <span data-ttu-id="a67c7-154">
            <see langword="true" /> para codificar el atributo y su valor; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-154">
              <see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-155">Agrega el valor y el atributo de marcado especificados a la etiqueta de apertura del elemento que crea el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> con una llamada posterior al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />, con codificación opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-155">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-156">Uso el <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> método si el atributo no es uno de los <xref:System.Web.UI.HtmlTextWriterAttribute> valores, o si el atributo no se conoce hasta el tiempo de ejecución y la codificación no es necesario.</span><span class="sxs-lookup"><span data-stu-id="a67c7-156">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time and encoding is needed.</span></span>  
  
 <span data-ttu-id="a67c7-157">Para una instancia de elemento de marcado, la <xref:System.Web.UI.HtmlTextWriter> clase mantiene una lista de atributos para ese elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-157">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="a67c7-158">Cuando el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> llama el método, todos los atributos agregados por el <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> método se representan en la etiqueta de apertura del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-158">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="a67c7-159">A continuación, se borra la lista de atributos de la <xref:System.Web.UI.HtmlTextWriter> objeto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-159">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="a67c7-160">Use la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> método con `fEncode` establecido en `true`, si el atributo puede contener un signo de comillas ("), un signo menor que (<), o un" y "comercial (&).</span><span class="sxs-lookup"><span data-stu-id="a67c7-160">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="a67c7-161">La llamada al método codificará el atributo para cumplir los requisitos del dispositivo solicitante.</span><span class="sxs-lookup"><span data-stu-id="a67c7-161">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="a67c7-162">Puede establecer `fEncode` a `false`, si sabe que se generará ninguno de estos caracteres, o si sabe que el atributo ya está codificado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-162">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
<span data-ttu-id="a67c7-163">Si el tipo de atributo es `Style`, no se puede codificar el valor aunque `fEndode` es `true`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-163">If the attribute type is `Style`, the value won't be encoded even if `fEndode` is `true`.</span></span> <span data-ttu-id="a67c7-164">Asegúrese de que el valor de estilo es compatible con CSS y no contenga código malintencionado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-164">Ensure that the style value is CSS-compliant and doesn't contain malicious code.</span></span>
  
 <span data-ttu-id="a67c7-165">El patrón de codificación para representar elementos de marcado es como sigue:</span><span class="sxs-lookup"><span data-stu-id="a67c7-165">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="a67c7-166">Use el <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> método para agregar atributos al elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-166">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="a67c7-167">Utilice el método <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="a67c7-167">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="a67c7-168">Use otros métodos según sea necesario para representar el contenido que se encuentra entre el elemento etiquetas de apertura y cierre.</span><span class="sxs-lookup"><span data-stu-id="a67c7-168">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="a67c7-169">Utilice el método <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="a67c7-169">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-170">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> método para asegurarse de que un atributo personalizado, denominado `myattribute`, y su valor no se codifican para un `<img>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-170">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method to ensure that a custom attribute, named `myattribute`, and its value are not encoded for an `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttribute (name As String, value As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit&#xA;override this.AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a67c7-171">Cadena con el nombre del atributo que se ha de agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-171">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-172">Cadena con el valor que se ha de asignar al atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-172">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a67c7-173">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> que representa el atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-173">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-174">Agrega el valor y el atributo de marcado especificados, junto con un valor de la enumeración <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, a la etiqueta de apertura del elemento que crea el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> con una llamada posterior al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-174">Adds the specified markup attribute and value, along with an <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value, to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-175">Use la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> método únicamente al heredar de la <xref:System.Web.UI.HtmlTextWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="a67c7-175">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="a67c7-176">Permite crear nuevos `name` y `key` pares de atributos.</span><span class="sxs-lookup"><span data-stu-id="a67c7-176">It enables you to create new `name` and `key` pairs for attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="a67c7-177">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> que representa el atributo de marcado que se va a agregar al flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-177">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-178">Cadena con el valor que se ha de asignar al atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-178">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="a67c7-179">
            <see langword="true" /> para codificar el atributo y su valor; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-179">
              <see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-180">Agrega el atributo de marcado y el valor del atributo a la etiqueta de apertura del elemento que crea el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> con una llamada posterior al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />, con codificación opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-180">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-181">Use la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> método para representar un atributo de marcado estándar, con codificación opcional.</span><span class="sxs-lookup"><span data-stu-id="a67c7-181">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to render a standard markup attribute, with optional encoding.</span></span>  
  
 <span data-ttu-id="a67c7-182">Para una instancia de elemento de marcado, la <xref:System.Web.UI.HtmlTextWriter> clase mantiene una lista de atributos para ese elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-182">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="a67c7-183">Cuando el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> llama el método, todos los atributos agregados por el <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> se representan en la etiqueta de apertura del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-183">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> are rendered to the opening tag of the element.</span></span> <span data-ttu-id="a67c7-184">A continuación, se borra la lista de atributos de la <xref:System.Web.UI.HtmlTextWriter> objeto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-184">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="a67c7-185">Use la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> método con `fEncode` establecido en `true`, si el atributo puede contener un signo de comillas ("), un signo menor que (<), o un" y "comercial (&).</span><span class="sxs-lookup"><span data-stu-id="a67c7-185">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="a67c7-186">La llamada al método codificará el atributo para cumplir los requisitos del dispositivo solicitante.</span><span class="sxs-lookup"><span data-stu-id="a67c7-186">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="a67c7-187">Puede establecer `fEncode` a `false`, si sabe que se generará ninguno de estos caracteres, o si sabe que el atributo ya está codificado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-187">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
 <span data-ttu-id="a67c7-188">Si el tipo de atributo es `Style`, no se puede codificar el valor aunque `fEncode` es `true`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-188">If the attribute type is `Style`, the value won't be encoded even if `fEncode` is `true`.</span></span> <span data-ttu-id="a67c7-189">Asegúrese de que el valor de estilo es compatible con CSS y no contenga código malintencionado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-189">Ensure that the style value is CSS-compliant and doesn't contain malicious code.</span></span>

  
 <span data-ttu-id="a67c7-190">El patrón de codificación para representar elementos de marcado es como sigue:</span><span class="sxs-lookup"><span data-stu-id="a67c7-190">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="a67c7-191">Use el <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> método para agregar atributos al elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-191">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="a67c7-192">Utilice el método <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="a67c7-192">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="a67c7-193">Use otros métodos según sea necesario para representar el contenido que se encuentra entre el elemento etiquetas de apertura y cierre.</span><span class="sxs-lookup"><span data-stu-id="a67c7-193">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="a67c7-194">Utilice el método <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="a67c7-194">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-195">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> método para asegurarse de que el valor de cadena que se asigna a un `Alt` atributo para un `<img>` elemento está codificado para el dispositivo solicitante.</span><span class="sxs-lookup"><span data-stu-id="a67c7-195">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to ensure that the string value that is assigned to an `Alt` attribute for an `<img>` element is encoded for the requesting device.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-196">Agrega un atributo de estilo de marcado a la etiqueta de apertura del elemento que crea el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> con una llamada posterior al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-196">Adds a markup style attribute to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string -&gt; unit&#xA;override this.AddStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a67c7-197">Cadena que contiene el atributo de estilo que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-197">A string that contains the style attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-198">Cadena con el valor que se ha de asignar al atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-198">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-199">Agrega el valor y el estilo de atributo de marcado especificados a la etiqueta de apertura del elemento que crea una llamada posterior al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-199">Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-200">Use la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> método cuando el estilo no es un miembro de la <xref:System.Web.UI.HtmlTextWriterStyle> enumeración o no se conoce hasta el tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="a67c7-200">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method when the style is not a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration or is not known until run time.</span></span>  
  
 <span data-ttu-id="a67c7-201">La <xref:System.Web.UI.HtmlTextWriter> clase mantiene una lista de estilos para los elementos de marcado representa.</span><span class="sxs-lookup"><span data-stu-id="a67c7-201">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="a67c7-202">Cuando el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> llama el método, los estilos que se agregan mediante el <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> método se representan en la etiqueta de apertura del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-202">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles that are added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="a67c7-203">A continuación, se borra la lista de estilos.</span><span class="sxs-lookup"><span data-stu-id="a67c7-203">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="a67c7-204">El patrón de codificación para representar elementos de marcado es como sigue:</span><span class="sxs-lookup"><span data-stu-id="a67c7-204">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="a67c7-205">Use el <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> método para agregar cualquier estilo de atributos al elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-205">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="a67c7-206">Utilice el método <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="a67c7-206">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="a67c7-207">Use otros métodos según sea necesario para representar el contenido que se encuentra entre las etiquetas de cierre y apertura de elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-207">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="a67c7-208">Utilice el método <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="a67c7-208">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-209">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> método para representar `font-size` y `color` los atributos de estilo en un `<p>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-209">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method to render `font-size` and `color` style attributes on a `<p>` element.</span></span> <span data-ttu-id="a67c7-210">Este ejemplo de código utiliza el <xref:System.Web.UI.HtmlTextWriter> clase para representar el contenido del control.</span><span class="sxs-lookup"><span data-stu-id="a67c7-210">This code example uses the <xref:System.Web.UI.HtmlTextWriter> class to render the contents of the control.</span></span>  
  
 [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CPP/htmltextwriter_addstyleattribute.cpp#1)]
 [!code-csharp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CS/htmltextwriter_addstyleattribute.cs#1)]
 [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/VB/htmltextwriter_addstyleattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit&#xA;override this.AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="a67c7-211">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> que representa el atributo de estilo que se va a agregar al flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-211">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-212">Cadena con el valor que se ha de asignar al atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-212">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-213">Agrega el atributo de estilo de marcado asociado al valor <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> especificado y el valor del atributo a la etiqueta de marcado de apertura que crea una llamada posterior al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-213">Adds the markup style attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> value and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-214">Use la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> método cuando el estilo es un miembro de la <xref:System.Web.UI.HtmlTextWriterStyle> enumeración y se conoce antes de tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="a67c7-214">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> method when the style is a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration and is known before run time.</span></span>  
  
 <span data-ttu-id="a67c7-215">La <xref:System.Web.UI.HtmlTextWriter> clase mantiene una lista de estilos para los elementos de marcado representa.</span><span class="sxs-lookup"><span data-stu-id="a67c7-215">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="a67c7-216">Cuando el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> llama el método, todos los estilos agregados por el <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> método se representan en la etiqueta de apertura del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-216">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="a67c7-217">A continuación, se borra la lista de estilos.</span><span class="sxs-lookup"><span data-stu-id="a67c7-217">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="a67c7-218">El patrón de codificación para representar elementos de marcado es como sigue:</span><span class="sxs-lookup"><span data-stu-id="a67c7-218">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="a67c7-219">Use el <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> método para agregar cualquier estilo de atributos al elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-219">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="a67c7-220">Utilice el método <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="a67c7-220">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="a67c7-221">Use otros métodos según sea necesario para representar el contenido que se encuentra entre las etiquetas de cierre y apertura de elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-221">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="a67c7-222">Utilice el método <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="a67c7-222">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-223">En el ejemplo de código siguiente se muestra cómo usar parte de un reemplazo del <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método en una clase derivada de la <xref:System.Web.UI.HtmlTextWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="a67c7-223">The following code example demonstrates how to use part of an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="a67c7-224">El código comprueba si un `<Label>` elemento que se va a representar.</span><span class="sxs-lookup"><span data-stu-id="a67c7-224">The code checks whether a `<Label>` element is being rendered.</span></span> <span data-ttu-id="a67c7-225">Si es así, el <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> método se llama para comprobar si un `Color` se ha definido el atributo de estilo para el `<Label>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-225">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method is called to check whether a `Color` style attribute has been defined for the `<Label>` element.</span></span> <span data-ttu-id="a67c7-226">Si un `Color` no se definió el atributo, el código llama a esta sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> método para agregar el `Color` al atributo de estilo de atributo y, a continuación, establezca su valor en `red`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-226">If a `Color` attribute has not been defined, the code calls this overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add the `Color` attribute to the style attribute, and then set its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddStyleAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddStyleAttribute (name As String, value As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit&#xA;override this.AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a67c7-227">Cadena que contiene el atributo de estilo que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-227">A string that contains the style attribute to be added.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-228">Cadena con el valor que se ha de asignar al atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-228">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a67c7-229">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> que representa el atributo de estilo que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-229">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-230">Agrega el valor y el estilo de atributo de marcado especificados, junto con un valor de la enumeración <see cref="T:System.Web.UI.HtmlTextWriterStyle" />, a la etiqueta de marcado de apertura que crea una llamada posterior al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-230">Adds the specified markup style attribute and the attribute value, along with an <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value, to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-231">Use la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> método únicamente al heredar de la <xref:System.Web.UI.HtmlTextWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="a67c7-231">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="a67c7-232">Permite crear nuevos `name` y `value` pares para <xref:System.Web.UI.HtmlTextWriterStyle> atributos.</span><span class="sxs-lookup"><span data-stu-id="a67c7-232">It enables you to create new `name` and `value` pairs for <xref:System.Web.UI.HtmlTextWriterStyle> attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="BeginRender">
      <MemberSignature Language="C#" Value="public virtual void BeginRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginRender();" />
      <MemberSignature Language="F#" Value="abstract member BeginRender : unit -&gt; unit&#xA;override this.BeginRender : unit -&gt; unit" Usage="htmlTextWriter.BeginRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-233">Notifica a un objeto <see cref="T:System.Web.UI.HtmlTextWriter" />, o a un objeto de una clase derivada, que está a punto de representarse un control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-233">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control is about to be rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-234">El <xref:System.Web.UI.HtmlTextWriter> implementación de la clase de la <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> método no tiene ninguna funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="a67c7-234">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method has no functionality.</span></span> <span data-ttu-id="a67c7-235">Se debe reemplazar el <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> método en una clase derivada de <xref:System.Web.UI.HtmlTextWriter> para proporcionar su propia funcionalidad de representación.</span><span class="sxs-lookup"><span data-stu-id="a67c7-235">You must override the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method in a class derived from <xref:System.Web.UI.HtmlTextWriter> to provide your own rendering functionality.</span></span> <span data-ttu-id="a67c7-236">Por ejemplo, en un lenguaje de marcado que puede requerir `<p>` elementos que se va a procesarse inmediatamente antes de un control, donde la necesidad de la `<p>` elemento viene anteriormente, podría utilizar el <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> invalidar.</span><span class="sxs-lookup"><span data-stu-id="a67c7-236">For example, in a markup language that might require `<p>` elements to be rendered immediately ahead of a control, but where the need for the `<p>` element is determined earlier, you could use the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="htmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-237">Cierra el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> y libera todos los recursos del sistema asociados a él.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-237">Closes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and releases any system resources associated with it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-238">Esta implementación de la <xref:System.Web.UI.HtmlTextWriter.Close%2A> llamadas al método el <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-238">This implementation of the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method calls the <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> base method.</span></span>  
  
 <span data-ttu-id="a67c7-239">Después de una llamada a la <xref:System.Web.UI.HtmlTextWriter.Close%2A> método, cualquier operación en el <xref:System.Web.UI.HtmlTextWriter> objeto puede producir excepciones porque se han publicado todos sus recursos.</span><span class="sxs-lookup"><span data-stu-id="a67c7-239">Following a call to the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method, any operations on the <xref:System.Web.UI.HtmlTextWriter> object might throw exceptions because all its resources have been released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.IO.TextWriter.Close" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTabString">
      <MemberSignature Language="C#" Value="public const string DefaultTabString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultTabString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultTabString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultTabString;" />
      <MemberSignature Language="F#" Value="val mutable DefaultTabString : string" Usage="System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-240">Representa un carácter de tabulación único.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-240">Represents a single tab character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-241">La pestaña solo se representa mediante el carácter ASCII 9.</span><span class="sxs-lookup"><span data-stu-id="a67c7-241">The single tab is represented by the ASCII 9 character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-242">En el ejemplo de código siguiente se muestra cómo crear un constructor que toma un <xref:System.IO.TextWriter> objeto como un parámetro y pasa el <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> campo como un argumento de parámetro a una segunda versión del constructor.</span><span class="sxs-lookup"><span data-stu-id="a67c7-242">The following code example demonstrates how to create a constructor that takes a <xref:System.IO.TextWriter> object as a parameter and passes the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field as a parameter argument to a second version of the constructor.</span></span> <span data-ttu-id="a67c7-243">Cuando se llama a este constructor desde el código, el <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> campo define la directiva de sangría de la instancia de la escritura de marcado que se usa en una página o un adaptador.</span><span class="sxs-lookup"><span data-stu-id="a67c7-243">When this constructor is called from code, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#1)]
 [!code-vb[MarkupTextWriter_Methods3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="DoubleQuoteChar">
      <MemberSignature Language="C#" Value="public const char DoubleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char DoubleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const DoubleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char DoubleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable DoubleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-244">Representa el carácter comillas (").</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-244">Represents the quotation mark (") character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-245">El <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> campo es utilizado por el <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> método para cerrar un atributo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-245">The <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to close an attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-246">El ejemplo de código siguiente muestra cómo representar un `border` atributo para un `<table>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-246">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="a67c7-247">El código llama a la <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para representar el atributo y su valor y usa el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para representar la <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> y <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> campos.</span><span class="sxs-lookup"><span data-stu-id="a67c7-247">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="a67c7-248">Este ejemplo de código representa el marcado siguiente:</span><span class="sxs-lookup"><span data-stu-id="a67c7-248">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.Write" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EncodeAttributeValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-249">Codifica el valor del atributo de marcado especificado basándose en los requisitos del objeto <see cref="T:System.Web.HttpRequest" /> del contexto actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-249">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected string EncodeAttributeValue (string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeAttributeValue(string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeAttributeValue (value As String, fEncode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeAttributeValue(System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="member this.EncodeAttributeValue : string * bool -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-250">Una cadena que contiene el valor de atributo para codificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-250">A string containing the attribute value to encode.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="a67c7-251">
            <see langword="true" /> para codificar el valor del atributo; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-251">
              <see langword="true" /> to encode the attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-252">Codifica el valor del atributo de marcado especificado basándose en los requisitos del objeto <see cref="T:System.Web.HttpRequest" /> del contexto actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-252">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-253">Cadena que contiene el valor del atributo codificado, <see langword="null" /> si <paramref name="value" /> está vacío, o el valor de atributo sin codificar si <paramref name="fEncode" /> es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-253">A string containing the encoded attribute value, <see langword="null" /> if <paramref name="value" /> is empty, or the unencoded attribute value if <paramref name="fEncode" /> is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-254">Use la <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> método si el atributo no es un <xref:System.Web.UI.HtmlTextWriterAttribute> valor de enumeración o no se conoce hasta el tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="a67c7-254">Use the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method if the attribute is not an <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value or is not known until run time.</span></span>  
  
 <span data-ttu-id="a67c7-255">El <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> método quita las comillas dobles ("), y comercial (&) y menor que (<), por lo que ese válida de etiquetas de signos no se generan, independientemente de la entrada.</span><span class="sxs-lookup"><span data-stu-id="a67c7-255">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="a67c7-256">La codificación real se realiza mediante el <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-256">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-257">En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> método como un parámetro en un <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> llamada al método y, a continuación, se codifica un `color:blue` valor del atributo de estilo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-257">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call, and then encodes a `color:blue` style attribute value.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#5](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#5)]
 [!code-csharp[HtmlTextWriter_Methods#5](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#5)]
 [!code-vb[HtmlTextWriter_Methods#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string EncodeAttributeValue(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncodeAttributeValue (attrKey As HtmlTextWriterAttribute, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ EncodeAttributeValue(System::Web::UI::HtmlTextWriterAttribute attrKey, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string&#xA;override this.EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (attrKey, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrKey">
          <span data-ttu-id="a67c7-258">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> que representa el atributo de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-258">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> representing the markup attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-259">Una cadena que contiene el valor de atributo para codificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-259">A string containing the attribute value to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-260">Codifica el valor del atributo de marcado especificado basándose en los requisitos del objeto <see cref="T:System.Web.HttpRequest" /> del contexto actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-260">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-261">Cadena con el valor del atributo codificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-261">A string containing the encoded attribute value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-262">El <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> método quita las comillas dobles ("), y comercial (&) y menor que (<), por lo que ese válida de etiquetas de signos no se generan, independientemente de la entrada.</span><span class="sxs-lookup"><span data-stu-id="a67c7-262">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="a67c7-263">La codificación real se realiza mediante el <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-263">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeUrl">
      <MemberSignature Language="C#" Value="protected string EncodeUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeUrl (url As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.EncodeUrl : string -&gt; string" Usage="htmlTextWriter.EncodeUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="a67c7-264">Cadena que contiene la dirección URL que se ha de codificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-264">A string containing the URL to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-265">Se realiza una codificación mínima de direcciones URL mediante la conversión de los espacios de la dirección URL especificada en la cadena "%20".</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-265">Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-266">Cadena con la dirección URL codificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-266">A string containing the encoded URL.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-267">Codificación de direcciones URL de un carácter consta de un símbolo de porcentaje (%), seguido de la representación hexadecimal de dos dígitos (mayúsculas y minúsculas) del punto de código ISO-Latín para el carácter.</span><span class="sxs-lookup"><span data-stu-id="a67c7-267">URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</span></span> <span data-ttu-id="a67c7-268">La representación hexadecimal de un espacio es 20.</span><span class="sxs-lookup"><span data-stu-id="a67c7-268">The hexadecimal representation of a space is 20.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-269">En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> método para convertir espacios en blanco en la dirección URL que se pasa como un parámetro en un <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> llamada al método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-269">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> method to convert any spaces in the URL that is passed as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#6)]
 [!code-vb[HtmlTextWriter_Methods#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.UrlPathEncode(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-270">Obtiene la codificación que usa el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> para escribir contenido en la página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-270">Gets the encoding that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object uses to write content to the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a67c7-271">
            <see cref="T:System.Text.Encoding" /> que se utiliza para escribir el marcado en la página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-271">The <see cref="T:System.Text.Encoding" /> in which the markup is written to the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-272">El <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> propiedad obtiene su valor de la base de <xref:System.IO.TextWriter> objeto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-272">The <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property obtains its value from the base <xref:System.IO.TextWriter> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-273">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> propiedad que se va a escribir el tipo de codificación que usa un control personalizado para representar texto en la página que lo contiene.</span><span class="sxs-lookup"><span data-stu-id="a67c7-273">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property to write the type of encoding that a custom control uses to render text to the page that contains it.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#2)]
 [!code-csharp[HtmlTextWriter_Properties#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#2)]
 [!code-vb[HtmlTextWriter_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="EndRender">
      <MemberSignature Language="C#" Value="public virtual void EndRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EndRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndRender();" />
      <MemberSignature Language="F#" Value="abstract member EndRender : unit -&gt; unit&#xA;override this.EndRender : unit -&gt; unit" Usage="htmlTextWriter.EndRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-274">Notifica a un objeto <see cref="T:System.Web.UI.HtmlTextWriter" />, o a un objeto de una clase derivada, que se ha terminado de representar un control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-274">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control has finished rendering.</span>
          </span>
          <span data-ttu-id="a67c7-275">Puede usar este método para cerrar los elementos de marcado abiertos en el método <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-275">You can use this method to close any markup elements opened in the <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-276">El <xref:System.Web.UI.HtmlTextWriter> implementación de la clase de la <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> método no tiene ninguna funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="a67c7-276">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method has no functionality.</span></span> <span data-ttu-id="a67c7-277">Debe invalidar <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> en una clase derivada de la <xref:System.Web.UI.HtmlTextWriter> clase para proporcionar su propia funcionalidad de representación.</span><span class="sxs-lookup"><span data-stu-id="a67c7-277">You must override <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to provide your own rendering functionality.</span></span>  
  
 <span data-ttu-id="a67c7-278">Puede usar el <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> método para cerrar los elementos de marcado abiertos en el <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-278">You can use the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method to close any markup elements opened in the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      </Docs>
    </Member>
    <Member MemberName="EndTagLeftChars">
      <MemberSignature Language="C#" Value="public const string EndTagLeftChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EndTagLeftChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberSignature Language="VB.NET" Value="Public Const EndTagLeftChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EndTagLeftChars;" />
      <MemberSignature Language="F#" Value="val mutable EndTagLeftChars : string" Usage="System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-279">Representa el corchete angular de apertura y la barra diagonal (&lt;/) de la etiqueta de cierre de un elemento de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-279">Represents the left angle bracket and slash mark (&lt;/) of the closing tag of a markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-280">El <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> campo es utilizado por el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método para construir las etiquetas de cierre del elemento de marcado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-280">The <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to construct markup element end tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-281">El ejemplo de código siguiente muestra cómo representar la etiqueta de cierre de un `<table>` elemento de marcado mediante el uso de la <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> y el <xref:System.Web.UI.HtmlTextWriter.TagRightChar> campos como valores de parámetro en las llamadas a la <xref:System.Web.UI.HtmlTextWriter.Write%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-281">The following code example shows how to render the closing tag of a `<table>` markup element by using the <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> and the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> fields as parameter values in calls to the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 <span data-ttu-id="a67c7-282">Este ejemplo de código representa el marcado siguiente:</span><span class="sxs-lookup"><span data-stu-id="a67c7-282">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EnterStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-283">Escribe la etiqueta de apertura de un elemento de marcado que contiene atributos que implementan el diseño y el formato de caracteres del estilo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-283">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.EnterStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="a67c7-284">
            <see cref="T:System.Web.UI.WebControls.Style" /> que especifica el diseño y el formato que se debe empezar a aplicar al bloque de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-284">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-285">Escribe la etiqueta de apertura de un elemento <see langword="&lt;span&gt;" /> que contiene atributos que implementan el diseño y el formato de caracteres del estilo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-285">Writes the opening tag of a <see langword="&lt;span&gt;" /> element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-286">Use el <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> método para aplicar estilos, como el ancho de borde o color de fondo, un bloque de marcado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-286">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="a67c7-287">El <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> y <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> métodos permiten a un adaptador de dispositivo o el control crear marcado que emplea el formato de caracteres del estilo especificado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-287">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="a67c7-288">Use el mismo valor para `style` en el <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> método que usa en las correspondientes <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-288">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="a67c7-289">El <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> método representa la etiqueta de apertura de un `<span>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-289">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> method renders the opening tag of a `<span>` element.</span></span> <span data-ttu-id="a67c7-290">Este método, a continuación, agrega los atributos necesarios y los atributos de estilo a la etiqueta de apertura de la `<span>` elemento para mostrar la configuración especificada por el <xref:System.Web.UI.WebControls.Style> objeto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-290">This method then adds the necessary attributes and style attributes to the opening tag of the `<span>` element to display the settings specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="a67c7-291">Si desea representar otro elemento de marcado para contener los atributos y los atributos de estilo, use el <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> sobrecargar.</span><span class="sxs-lookup"><span data-stu-id="a67c7-291">If you want to render a different markup element to contain the attributes and style attributes, use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-292">En el ejemplo de código siguiente se muestra cómo usar una clase personalizada denominada `TextSample`, derivada de la <xref:System.Web.UI.WebControls.WebControl> (clase), que usa el <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> método para aplicar un <xref:System.Web.UI.WebControls.Style.ForeColor%2A> estilo a una cadena de texto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-292">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="a67c7-293">El <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> método representa el código HTML `<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-293">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="a67c7-294">El <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> cierra la llamada al método el `<span>` elemento después de representar el texto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-294">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.EnterStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="a67c7-295">
            <see cref="T:System.Web.UI.WebControls.Style" /> que especifica el diseño y el formato que se debe empezar a aplicar al bloque de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-295">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span>
          </span>
        </param>
        <param name="tag">
          <span data-ttu-id="a67c7-296">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> que especifica la etiqueta de apertura del elemento de marcado que contendrá el objeto del estilo especificado en <paramref name="style" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-296">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the opening tag of the markup element that will contain the style object specified in <paramref name="style" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-297">Escribe la etiqueta de apertura de un elemento de marcado que contiene atributos que implementan el diseño y el formato de caracteres del estilo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-297">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-298">Use el <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> método para aplicar estilos, como el ancho de borde o color de fondo, un bloque de marcado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-298">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="a67c7-299">El <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> y <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> métodos permiten a un adaptador de dispositivo o el control crear marcado que emplea el formato de caracteres del estilo especificado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-299">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="a67c7-300">Use el mismo valor para `style` en el <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> método que usa en las correspondientes <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-300">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="a67c7-301">El <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> método representa la etiqueta de apertura del elemento especificado por el `tag` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-301">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the opening tag of the element specified by the `tag` parameter.</span></span> <span data-ttu-id="a67c7-302">El <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> método, a continuación, agrega los atributos necesarios y los atributos de estilo a la etiqueta de apertura del elemento para mostrar la configuración que se especifica mediante el <xref:System.Web.UI.WebControls.Style> objeto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-302">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="a67c7-303">Use la <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> sobrecarga para representar la etiqueta de apertura de un `<span>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-303">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> overload to render the opening tag of a `<span>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-304">En el ejemplo de código siguiente se muestra cómo usar una clase personalizada denominada `TextSample`, derivada de la <xref:System.Web.UI.WebControls.WebControl> (clase), que usa el <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> método para aplicar un <xref:System.Web.UI.WebControls.Style.ForeColor%2A> estilo a una cadena de texto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-304">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="a67c7-305">El <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> método representa el código HTML`<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-305">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML`<span style="color:Navy;">`.</span></span> <span data-ttu-id="a67c7-306">El <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> cierra la llamada al método el `<span>` elemento después de representar el texto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-306">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EqualsChar">
      <MemberSignature Language="C#" Value="public const char EqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char EqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char EqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable EqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-307">Representa el carácter de signo igual (<see langword="=" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-307">Represents the equal sign (<see langword="=" />).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-308">Desea usar el <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> campo en lugar de la <xref:System.Web.UI.HtmlTextWriter.EqualsChar> al construir el delimitador de apertura de un valor de atributo de campo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-308">You might want to use the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field instead of the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field when constructing the opening delimiter of an attribute value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-309">El ejemplo de código siguiente muestra cómo representar el `src` atributo y parte de su valor para un `<img>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-309">The following code example shows how to render the `src` attribute and part of its value for an `<img>` element.</span></span> <span data-ttu-id="a67c7-310">El código usa el <xref:System.Web.UI.HtmlTextWriter.EqualsChar> campo un <xref:System.Web.UI.HtmlTextWriter.Write%2A> llamada al método para representar el signo igual (=) entre el `src` atributo y su valor.</span><span class="sxs-lookup"><span data-stu-id="a67c7-310">The code uses the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call to render the equal sign (=) between the `src` attribute and its value.</span></span>  
  
 <span data-ttu-id="a67c7-311">Este ejemplo de código representa el marcado siguiente:</span><span class="sxs-lookup"><span data-stu-id="a67c7-311">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      </Docs>
    </Member>
    <Member MemberName="EqualsDoubleQuoteString">
      <MemberSignature Language="C#" Value="public const string EqualsDoubleQuoteString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EqualsDoubleQuoteString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsDoubleQuoteString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EqualsDoubleQuoteString;" />
      <MemberSignature Language="F#" Value="val mutable EqualsDoubleQuoteString : string" Usage="System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-312">Representa la combinación de un signo igual (=) y comillas dobles (") en una cadena (=") .</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-312">Represents an equal sign (=) and a double quotation mark (") together in a string (=").</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-313">El <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> campo es utilizado por el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> y <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> métodos para construir el delimitador de apertura de los valores de atributo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-313">The <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods to construct the opening delimiter of attribute values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-314">El ejemplo de código siguiente muestra cómo representar un `border` atributo para un `<table>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-314">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="a67c7-315">El código llama a la <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para representar el atributo y su valor y usa el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para representar la <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> y <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> campos.</span><span class="sxs-lookup"><span data-stu-id="a67c7-315">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="a67c7-316">Este ejemplo de código representa el marcado siguiente:</span><span class="sxs-lookup"><span data-stu-id="a67c7-316">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExitStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-317">Escribe la etiqueta de cierre del elemento de marcado para finalizar el diseño y el formato de carácter especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-317">Writes the closing tag of a markup element to end the specified layout and character formatting.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.ExitStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="a67c7-318">
            <see cref="T:System.Web.UI.WebControls.Style" /> que especifica el diseño y el formato para el cierre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-318">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to close.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-319">Escribe la etiqueta de cierre del elemento <see langword="&lt;span&gt;" /> para finalizar el diseño y el formato de carácter especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-319">Writes the closing tag of a <see langword="&lt;span&gt;" /> element to end the specified layout and character formatting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-320">El <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> método representa la etiqueta de cierre de un `<span>` elemento después de la etiqueta de cierre del control, abre el elemento de cierre correspondiente <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> llamar.</span><span class="sxs-lookup"><span data-stu-id="a67c7-320">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> method renders the closing tag of a `<span>` element after the closing tag of the control, closing the element opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> call.</span></span>  
  
 <span data-ttu-id="a67c7-321">El <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> y <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> métodos permiten a un adaptador de dispositivo o el control crear marcado que inicia y finaliza un bloque usando el formato de caracteres del estilo especificado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-321">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="a67c7-322">Use el mismo valor para `style` en el <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> método que usa en las correspondientes <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-322">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-323">En el ejemplo de código siguiente se muestra cómo usar una clase personalizada denominada `TextSample`, derivada de la <xref:System.Web.UI.WebControls.WebControl> (clase), que usa el <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> método para aplicar un <xref:System.Web.UI.WebControls.Style.ForeColor%2A> estilo a una cadena de texto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-323">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="a67c7-324">El <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> método representa el código HTML `<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-324">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="a67c7-325">El <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> cierra la llamada al método el `<span>` elemento después de representar el texto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-325">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.ExitStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="a67c7-326">
            <see cref="T:System.Web.UI.WebControls.Style" /> que especifica el diseño y formato para dejar de aplicar al texto de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-326">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to stop applying to the output text.</span>
          </span>
        </param>
        <param name="tag">
          <span data-ttu-id="a67c7-327">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> que especifica la etiqueta de cierre del elemento de marcado que contenía los atributos que se aplicaban el estilo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-327">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</span>
          </span>
          <span data-ttu-id="a67c7-328">Debe coincidir con la clave pasada en la llamada <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> correspondiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-328">This must match the key passed in the corresponding <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-329">Escribe la etiqueta de cierre del elemento de marcado especificado para finalizar el diseño especificado y el formato de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-329">Writes the closing tag of the specified markup element to end the specified layout and character formatting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-330">El <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> método representa la etiqueta de cierre del elemento especificado por `tag` después de la etiqueta de cierre del control, cierre el elemento que se abrió por la correspondiente <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> llamada al método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-330">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the closing tag of the element that is specified by `tag` after the closing tag of the control, closing the element that was opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method call.</span></span>  
  
 <span data-ttu-id="a67c7-331">El <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> y <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> métodos permiten a un adaptador de dispositivo o el control crear marcado que inicia y finaliza un bloque usando el formato de caracteres del estilo especificado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-331">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="a67c7-332">Use el mismo valor para `style` en el <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> método que usa en las correspondientes <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-332">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-333">En el ejemplo de código siguiente se muestra cómo usar una clase personalizada denominada `TextSample`, derivada de la <xref:System.Web.UI.WebControls.WebControl> (clase), que usa el <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> método para aplicar un <xref:System.Web.UI.WebControls.Style.ForeColor%2A> estilo a una cadena de texto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-333">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="a67c7-334">El <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> método representa el código HTML `<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-334">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="a67c7-335">El <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> cierra la llamada al método el `<span>` elemento después de representar el texto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-335">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FilterAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FilterAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.FilterAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FilterAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FilterAttributes();" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : unit -&gt; unit&#xA;override this.FilterAttributes : unit -&gt; unit" Usage="htmlTextWriter.FilterAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-336">Quita todos los atributos de marcado y de estilo de todas las propiedades de la página del control de servidor Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-336">Removes all the markup and style attributes on all properties of the page or Web server control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-337">Antes de representar los atributos de un elemento de marcado, el <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-337">Before attributes are rendered on a markup element, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method is called.</span></span> <span data-ttu-id="a67c7-338">A su vez, el <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> llamadas al método el <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> y <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> métodos para cada atributo y un estilo para representar.</span><span class="sxs-lookup"><span data-stu-id="a67c7-338">In turn, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> and <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> methods for each attribute and style to render.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-339">En el ejemplo de código siguiente se muestra cómo utilizar una clase personalizada, que se deriva el <xref:System.Web.UI.HtmlTextWriter> (clase), que reemplaza el <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-339">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="a67c7-340">Cuando se llama, el <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> reemplazo comprueba si el escritor de texto representa cualquier `<label>` o `<a>` elementos:</span><span class="sxs-lookup"><span data-stu-id="a67c7-340">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements:</span></span>  
  
-   <span data-ttu-id="a67c7-341">Si un `<label>` se está procesando el elemento, el <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> método comprueba si un `style` atributo se representa en el elemento y, si no, crea un `style` de atributo y lo establece en `color: blue`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-341">If a `<label>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method checks whether a `style` attribute is rendered on the element and, if not, creates a `style` attribute and sets it to `color: blue`.</span></span>  
  
-   <span data-ttu-id="a67c7-342">Si un `<a>` se está procesando el elemento, el <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> método determina si un `href` atributo está incluido y, si no, se agrega un `href` a la dirección URL http://www.cohowinery.com.</span><span class="sxs-lookup"><span data-stu-id="a67c7-342">If an `<a>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether an `href` attribute is included and, if not, adds an `href` to the URL http://www.cohowinery.com.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="htmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-343">Borra todos los búferes del objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> actual y hace que todos los datos almacenados en el búfer se escriban en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-343">Clears all buffers for the current <see cref="T:System.Web.UI.HtmlTextWriter" /> object and causes any buffered data to be written to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-344">El <xref:System.Web.UI.HtmlTextWriter> implementación de la clase de la <xref:System.Web.UI.HtmlTextWriter.Flush%2A> método simplemente llama a la <xref:System.IO.TextWriter.Flush%2A> método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-344">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.Flush%2A> method just calls the <xref:System.IO.TextWriter.Flush%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterAttribute GetAttributeKey(string attrName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeKey (attrName As String) As HtmlTextWriterAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterAttribute GetAttributeKey(System::String ^ attrName);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeKey : string -&gt; System.Web.UI.HtmlTextWriterAttribute" Usage="htmlTextWriter.GetAttributeKey attrName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrName">
          <span data-ttu-id="a67c7-345">Cadena con el atributo para el que se de ha obtener el valor de <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-345">A string that contains the attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-346">Obtiene el valor de la enumeración <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> correspondiente para el atributo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-346">Obtains the corresponding <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-347">Valor de la enumeración <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> para el atributo especificado; en caso contrario, un valor <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> no válido si el atributo no es un miembro de la enumeración.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-347">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute; otherwise, an invalid <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value if the attribute is not a member of the enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-348">Si `attrName` es `null` o una cadena vacía (""), o no se encuentra en la tabla de nombres de atributo, el valor -1, ha escrito para una <xref:System.Web.UI.HtmlTextWriterAttribute> de objetos, se devuelve.</span><span class="sxs-lookup"><span data-stu-id="a67c7-348">If `attrName` is `null` or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <xref:System.Web.UI.HtmlTextWriterAttribute> object, is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-349">En el ejemplo de código siguiente se muestra cómo usar una clase, derivada de la <xref:System.Web.UI.HtmlTextWriter> (clase), que reemplaza el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-349">The following code example demonstrates how to use a class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="a67c7-350">Las comprobaciones de invalidación si `tagKey` es igual a la <xref:System.Web.UI.HtmlTextWriterTag.Font> campo, que indica que un `<font>` se representará el elemento de marcado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-350">The override checks whether `tagKey` is equal to the <xref:System.Web.UI.HtmlTextWriterTag.Font> field, which indicates that a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="a67c7-351">Si es así, llama la invalidación del <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> método para averiguar si el `<font>` elemento contiene un <xref:System.Web.UI.HtmlTextWriterAttribute.Size> atributo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-351">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to find out whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="a67c7-352">Si el <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> devuelve `false`, <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> llamadas al método el <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> método, que define el <xref:System.Web.UI.HtmlTextWriterAttribute.Size> y establece su valor en `30pt`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-352">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> returns `false`, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.IsAttributeDefined" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeName">
      <MemberSignature Language="C#" Value="protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetAttributeName(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeName (attrKey As HtmlTextWriterAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetAttributeName(System::Web::UI::HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeName : System.Web.UI.HtmlTextWriterAttribute -&gt; string" Usage="htmlTextWriter.GetAttributeName attrKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="attrKey">
          <span data-ttu-id="a67c7-353">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> para el que se va a obtener el nombre del atributo de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-353">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> to obtain the markup attribute name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-354">Obtiene el nombre del atributo asociado al valor de <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-354">Obtains the name of the markup attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-355">Cadena que contiene el nombre del atributo de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-355">A string containing the name of the markup attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-356">El <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> método devuelve una cadena vacía (""), si `attrKey` no es válido <xref:System.Web.UI.HtmlTextWriterAttribute> valor.</span><span class="sxs-lookup"><span data-stu-id="a67c7-356">The <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method returns an empty string (""), if `attrKey` is not a valid <xref:System.Web.UI.HtmlTextWriterAttribute> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-357">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> método para convertir un <xref:System.Web.UI.HtmlTextWriterAttribute.Size> valor de enumeración para su nombre de cadena.</span><span class="sxs-lookup"><span data-stu-id="a67c7-357">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method to convert a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> enumeration value to its string name.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#6)]
 [!code-vb[HtmlTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterStyle GetStyleKey(string styleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleKey (styleName As String) As HtmlTextWriterStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterStyle GetStyleKey(System::String ^ styleName);" />
      <MemberSignature Language="F#" Value="member this.GetStyleKey : string -&gt; System.Web.UI.HtmlTextWriterStyle" Usage="htmlTextWriter.GetStyleKey styleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="styleName">
          <span data-ttu-id="a67c7-358">Atributo de estilo para el que se va a obtener <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-358">The style attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-359">Obtiene el valor de la enumeración <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> para el estilo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-359">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value for the specified style.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-360">Valor de la enumeración <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> correspondiente a <paramref name="styleName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-360">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value corresponding to <paramref name="styleName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-361">El <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> método devuelve el valor -1 que se escribe como un <xref:System.Web.UI.HtmlTextWriterStyle> valor si `styleName` no corresponde a ninguno <xref:System.Web.UI.HtmlTextWriterStyle> valor de enumeración.</span><span class="sxs-lookup"><span data-stu-id="a67c7-361">The <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method returns the value -1 typed as a <xref:System.Web.UI.HtmlTextWriterStyle> value, if `styleName` does not correspond to any <xref:System.Web.UI.HtmlTextWriterStyle> enumeration value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-362">En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método en una clase derivada de la <xref:System.Web.UI.HtmlTextWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="a67c7-362">The following code example demonstrates how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="a67c7-363">El <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> invalidación determina si un `<label>` se representará el marcado y, si es así, comprueba si el elemento tiene un <xref:System.Web.UI.HtmlTextWriterStyle.Color> atributo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-363">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override determines whether a `<label>` markup will be rendered, and, if so, checks the element for a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute.</span></span> <span data-ttu-id="a67c7-364">Si un <xref:System.Web.UI.HtmlTextWriterStyle.Color> no se ha definido el atributo, el <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> método se utiliza como el primer parámetro en una llamada a la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> método para agregar un <xref:System.Web.UI.HtmlTextWriterStyle.Color> atributo a un `<label>` marcado y establezca el <xref:System.Web.UI.HtmlTextWriterStyle.Color> deatributo`red`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-364">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method is used as the first parameter in a call to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to a `<label>` markup element and set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#1)]
 [!code-vb[HtmlTextWriter_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleName">
      <MemberSignature Language="C#" Value="protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetStyleName(valuetype System.Web.UI.HtmlTextWriterStyle styleKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleName (styleKey As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetStyleName(System::Web::UI::HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="F#" Value="member this.GetStyleName : System.Web.UI.HtmlTextWriterStyle -&gt; string" Usage="htmlTextWriter.GetStyleName styleKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleKey" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="styleKey">
          <span data-ttu-id="a67c7-365">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> para el que se va a obtener el nombre del atributo de estilo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-365">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> to obtain the style attribute name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-366">Obtiene el atributo de estilo de marcado asociado al valor de la enumeración <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-366">Obtains the markup style attribute name associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-367">Nombre del atributo de estilo de marcado asociado al valor de la enumeración <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> especificado en <paramref name="styleKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-367">The style attribute name associated with the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value specified in <paramref name="styleKey" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-368">Si `styleKey` no es válido <xref:System.Web.UI.HtmlTextWriterStyle> objeto, el <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> método devuelve una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="a67c7-368">If `styleKey` is not a valid <xref:System.Web.UI.HtmlTextWriterStyle> object, the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-369">El ejemplo de código siguiente muestra cómo comprobar si un `<label>` elemento que se va a representar.</span><span class="sxs-lookup"><span data-stu-id="a67c7-369">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="a67c7-370">Si es así, comprueba si un <xref:System.Web.UI.HtmlTextWriterStyle.Color> se ha definido el atributo de estilo en el elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-370">If so, it checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="a67c7-371">Si no se ha definido el atributo, el <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> se llama al método y el <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> método convierte el <xref:System.Web.UI.HtmlTextWriterStyle.Color> miembro de enumeración en su representación de cadena para pasar a la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-371">If the attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method is called and the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method converts the <xref:System.Web.UI.HtmlTextWriterStyle.Color> enumeration member into its string representation to pass to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Web.UI.HtmlTextWriterTag GetTagKey(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagKey (tagName As String) As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HtmlTextWriterTag GetTagKey(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag&#xA;override this.GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag" Usage="htmlTextWriter.GetTagKey tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="a67c7-372">Elemento de marcado para el que se va a obtener <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-372">The markup element for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-373">Obtiene el valor de la enumeración <see cref="T:System.Web.UI.HtmlTextWriterTag" /> asociado al elemento de marcado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-373">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value associated with the specified markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-374">Valor de la enumeración <see cref="T:System.Web.UI.HtmlTextWriterTag" />; en caso contrario, si  <paramref name="tagName" /> no está asociado a un valor <see cref="T:System.Web.UI.HtmlTextWriterTag" /> específico, <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-374">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value; otherwise, if <paramref name="tagName" /> is not associated with a specific <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value, <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-375">Si `tagName` es `null`, una cadena vacía (""), o no se encuentra en la tabla de nombres de etiqueta de marcado, el <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> método devuelve el <xref:System.Web.UI.HtmlTextWriterTag.Unknown> campo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-375">If `tagName` is `null`, an empty string (""), or cannot be found in the table of markup tag names, the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method returns the <xref:System.Web.UI.HtmlTextWriterTag.Unknown> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-376">En el ejemplo de código siguiente se muestra cómo invalidar la sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método que toma una cadena como su parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-376">The following code example shows how to override the overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that takes a string as its parameter.</span></span> <span data-ttu-id="a67c7-377">La cadena se pasa a la <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> método, que lo convierte en la correspondiente <xref:System.Web.UI.HtmlTextWriterTag> miembro de enumeración y, a continuación, pasa a la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> sobrecarga que toma un <xref:System.Web.UI.HtmlTextWriterTag> valor de enumeración como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-377">The string is passed to the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method, which converts it to the corresponding <xref:System.Web.UI.HtmlTextWriterTag> enumeration member, and then passes that to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload that takes a <xref:System.Web.UI.HtmlTextWriterTag> enumeration value as a parameter.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#8](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#8)]
 [!code-csharp[HtmlTextWriter_Methods3#8](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#8)]
 [!code-vb[HtmlTextWriter_Methods3#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string&#xA;override this.GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string" Usage="htmlTextWriter.GetTagName tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <span data-ttu-id="a67c7-378">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> para el que se va a obtener el elemento de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-378">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> to obtain the markup element for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-379">Obtiene el elemento de marcado asociado al valor de la enumeración <see cref="T:System.Web.UI.HtmlTextWriterTag" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-379">Obtains the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-380">Cadena que representa el elemento de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-380">A string representing the markup element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-381">Si `tagKey` no es válido <xref:System.Web.UI.HtmlTextWriterTag> valor, el <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> método devuelve una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="a67c7-381">If `tagKey` is not a valid <xref:System.Web.UI.HtmlTextWriterTag> value, the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-382">El ejemplo de código siguiente muestra cómo cerrar una `<font>` elemento utilizando el <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-382">The following code example demonstrates how to close a `<font>` element by using the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method.</span></span> <span data-ttu-id="a67c7-383">El <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> llamadas al método el <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> método para convertir el <xref:System.Web.UI.HtmlTextWriterTag.Font> valor en una cadena.</span><span class="sxs-lookup"><span data-stu-id="a67c7-383">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method to convert the <xref:System.Web.UI.HtmlTextWriterTag.Font> value to a string.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods3#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#7)]
 [!code-vb[HtmlTextWriter_Methods3#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : int with get, set" Usage="System.Web.UI.HtmlTextWriter.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-384">Obtiene o establece el número de posiciones de tabulación de la sangría aplicada al principio de cada línea de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-384">Gets or sets the number of tab positions to indent the beginning of each line of markup.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a67c7-385">Número de posiciones de tabulación de la sangría aplicada a cada línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-385">The number of tab positions to indent each line.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-386">Se aplica sangría al escribir la cadena especificada por el `tabString` parámetro de la <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor el número de veces que se especifican mediante el <xref:System.Web.UI.HtmlTextWriter.Indent%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a67c7-386">Indentation is performed by writing the string that is specified by the `tabString` parameter of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor the number of times that are specified by the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property.</span></span>  
  
 <span data-ttu-id="a67c7-387">Si el <xref:System.Web.UI.HtmlTextWriter.Indent%2A> propiedad está establecida en un valor negativo, se cambia a 0 antes de guardarse.</span><span class="sxs-lookup"><span data-stu-id="a67c7-387">If the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property is set to a negative value, it is changed to 0 before being saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-388">El ejemplo de código siguiente muestra cómo se va a incrementar el valor que se asigna a la <xref:System.Web.UI.HtmlTextWriter.Indent%2A> propiedad atributos se han agregado a la etiqueta de apertura de un `<span>` elemento y el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> ha llamado al método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-388">The following code example demonstrates how to increment the value that is assigned to the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property when attributes have been added to the opening tag of a `<span>` element and the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method has been called.</span></span> <span data-ttu-id="a67c7-389">Esto aumenta la sangría de todo el marcado que se representa dentro de la `<span>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-389">This increases the indentation for any markup that is rendered inside the `<span>` element.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      </Docs>
    </Member>
    <Member MemberName="InnerWriter">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter InnerWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter InnerWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerWriter As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ InnerWriter { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerWriter : System.IO.TextWriter with get, set" Usage="System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-390">Obtiene o establece el escritor de texto que escribe el contenido interno del elemento de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-390">Gets or sets the text writer that writes the inner content of the markup element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a67c7-391">Objeto <see cref="T:System.IO.TextWriter" /> que escribe el contenido de marcado interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-391">A <see cref="T:System.IO.TextWriter" /> that writes the inner markup content.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-392">Contenido de marcado interno es el texto situado entre la apertura y etiquetas de cierre de un elemento de lenguaje de marcado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-392">Inner markup content is the text found between the opening and closing tags of a markup language element.</span></span>  
  
 <span data-ttu-id="a67c7-393">Si el <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> propiedad está establecida en un <xref:System.IO.TextWriter> objeto que es una instancia de la <xref:System.Web.HttpWriter> (clase), este hecho se indica y se guarda una referencia distinta.</span><span class="sxs-lookup"><span data-stu-id="a67c7-393">If the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property is set to a <xref:System.IO.TextWriter> object that is an instance of the <xref:System.Web.HttpWriter> class, this fact is noted and a separate reference is saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-394">En el ejemplo de código siguiente se muestra cómo utilizar un control de servidor Web personalizado, derivado de la <xref:System.Web.UI.WebControls.WebControl> (clase), que reemplaza el <xref:System.Web.UI.Control.Render%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-394">The following code example shows how to use a custom Web server control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that overrides the <xref:System.Web.UI.Control.Render%2A> method.</span></span> <span data-ttu-id="a67c7-395">Usa el <xref:System.Web.UI.HtmlTextWriter> clase para escribir un `<font>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-395">It uses the <xref:System.Web.UI.HtmlTextWriter> class to write a `<font>` element.</span></span> <span data-ttu-id="a67c7-396">Cada vez que escribe la etiqueta de apertura del elemento, se utiliza el <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> propiedad que se va a escribir la cadena `"<br> The time on the server:"` y se concatena con el valor de esta cadena de la <xref:System.DateTime.Now%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a67c7-396">After it writes the opening tag of the element, it uses the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property to write the string `"<br> The time on the server:"` and concatenates this string with the value of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#3)]
 [!code-csharp[HtmlTextWriter_Properties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#3)]
 [!code-vb[HtmlTextWriter_Properties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpWriter" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-397">Determina si el atributo de marcado especificado y su valor se han de representar en la siguiente llamada al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-397">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="a67c7-398">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> asociado al atributo de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-398">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-399">Determina si el atributo de marcado especificado y su valor se han de representar en la siguiente llamada al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-399">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-400">
            <see langword="true" /> si el atributo se representa en la siguiente llamada al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-400">
              <see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-401">Para obtener el valor que se asignará a la <xref:System.Web.UI.HtmlTextWriterAttribute> de objeto, utilice el <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> sobrecargar en lugar de esta.</span><span class="sxs-lookup"><span data-stu-id="a67c7-401">To obtain the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object, use the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> overload instead of this one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-402">El ejemplo de código siguiente muestra cómo usar una invalidación de la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método en una clase que hereda de la <xref:System.Web.UI.HtmlTextWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="a67c7-402">The following code example shows how to use an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class that inherits from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="a67c7-403">El <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> reemplazo comprueba si un `<font>` se representará el elemento de marcado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-403">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override checks whether a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="a67c7-404">Si es así, llama la invalidación del <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> método para comprobar si el `<font>` elemento contiene un <xref:System.Web.UI.HtmlTextWriterAttribute.Size> atributo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-404">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to check whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="a67c7-405">Si no es así, el <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> llamadas al método el <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> método, que define el <xref:System.Web.UI.HtmlTextWriterAttribute.Size> de atributo y su valor se establece en `30pt`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-405">If not, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute *  -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="a67c7-406">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> asociado al atributo de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-406">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-407">Valor asignado al atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-407">The value assigned to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-408">Determina si el atributo de marcado especificado y su valor se han de representar en la siguiente llamada al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-408">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-409">
            <see langword="true" /> si el atributo se representa en la siguiente llamada al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-409">
              <see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-410">Si el <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> devuelve del método `true`, el valor que se asignará a la <xref:System.Web.UI.HtmlTextWriterAttribute> objeto se devuelve en el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-410">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStyleAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-411">Determina si un atributo de estilo de marcado se representa en la siguiente llamada al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-411">Determines whether a markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="a67c7-412">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> asociado al atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-412">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-413">Determina si el atributo de estilo de marcado especificado se representa en la siguiente llamada al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-413">Determines whether the specified markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-414">
            <see langword="true" /> si el atributo de marcado se representa en la siguiente llamada al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-414">
              <see langword="true" /> if the attribute will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-415">Para obtener el valor que se representará con el atributo de estilo especificado, use el <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-415">To get the value that will be rendered with the specified style attribute, use the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> overload of the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-416">El ejemplo de código siguiente muestra cómo comprobar si un `<label>` elemento que se va a representar.</span><span class="sxs-lookup"><span data-stu-id="a67c7-416">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="a67c7-417">Si es así, el <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> método comprueba si un <xref:System.Web.UI.HtmlTextWriterStyle.Color> se ha definido el atributo de estilo en el elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-417">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="a67c7-418">Si el <xref:System.Web.UI.HtmlTextWriterStyle.Color> no se ha definido el atributo, el <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> método define la <xref:System.Web.UI.HtmlTextWriterStyle.Color> de atributo y su valor se establece en `red`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-418">If the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method defines the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute and sets its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle *  -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="a67c7-419">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> asociado al atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-419">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-420">Valor asignado al atributo de estilo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-420">The value assigned to the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-421">Determina si el atributo de estilo de marcado especificado y su valor se han de representar en la siguiente llamada al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-421">Determines whether the specified markup style attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-422">
            <see langword="true" /> si el atributo de marcado y su valor se representan en la siguiente llamada al método <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-422">
              <see langword="true" /> if the attribute and its value will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-423">Si el <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> devuelve del método `true`, el valor que se asignará a la <xref:System.Web.UI.HtmlTextWriterStyle> atributo se devuelve en el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-423">If the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterStyle> attribute is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsValidFormAttribute (string attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidFormAttribute(string attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidFormAttribute (attribute As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidFormAttribute(System::String ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member IsValidFormAttribute : string -&gt; bool&#xA;override this.IsValidFormAttribute : string -&gt; bool" Usage="htmlTextWriter.IsValidFormAttribute attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="a67c7-424">Cadena con el nombre del atributo que se ha de comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-424">A string that contains the name of the attribute to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-425">Comprueba un atributo para garantizar que se puede representar en la etiqueta de apertura de un elemento de marcado <see langword="&lt;form&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-425">Checks an attribute to ensure that it can be rendered in the opening tag of a <see langword="&lt;form&gt;" /> markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-426">Siempre es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-426">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-427">El <xref:System.Web.UI.HtmlTextWriter> implementación de la clase de la <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> devuelve del método `true` para todos los atributos.</span><span class="sxs-lookup"><span data-stu-id="a67c7-427">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> method returns `true` for all attributes.</span></span> <span data-ttu-id="a67c7-428">Invalidar el <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> para limitar los atributos que se pueden representar en la etiqueta de apertura de un `<form>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-428">Override the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> to limit the attributes that can be rendered in the opening tag of a `<form>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a67c7-429">Invalidar el <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> método devuelva <see langword="true" /> sólo para los atributos que pueden incluirse en el <see langword="&lt;form&gt;" /> elemento del marcado para el que la clase derivada de la <see cref="T:System.Web.UI.HtmlTextWriter" /> clase está diseñada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-429">Override the <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> method to return <see langword="true" /> only for those attributes that can be included in the <see langword="&lt;form&gt;" /> element of the markup for which the class derived from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class is intended.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public override string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-430">Obtiene o establece la cadena de terminador de línea utilizada por el objeto <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-430">Gets or sets the line terminator string used by the <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a67c7-431">Cadena de terminador de línea utilizada por el <see cref="T:System.Web.UI.HtmlTextWriter" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-431">The line terminator string used by the current <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-432">La cadena de terminador de línea predeterminado es un retorno de carro seguido de un avance de línea ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="a67c7-432">The default line terminator string is a carriage return, followed by a line feed ("\r\n").</span></span>  
  
 <span data-ttu-id="a67c7-433">La cadena de terminador de línea se escribe en el flujo de salida cuando uno de los <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> se llama a métodos.</span><span class="sxs-lookup"><span data-stu-id="a67c7-433">The line terminator string is written to the output stream whenever one of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> methods is called.</span></span> <span data-ttu-id="a67c7-434">Si el <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> propiedad está establecida en `null`, se usa el carácter de nueva línea predeterminada.</span><span class="sxs-lookup"><span data-stu-id="a67c7-434">If the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property is set to `null`, the default new line character is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-435">En el ejemplo de código siguiente se muestra cómo utilizar una clase personalizada, que se deriva el <xref:System.Web.UI.HtmlTextWriter> (clase), que reemplaza el <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-435">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="a67c7-436">Cuando se llama, el <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> reemplazo comprueba si el escritor de texto representa cualquier `<label>` o `<a>` elementos.</span><span class="sxs-lookup"><span data-stu-id="a67c7-436">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements.</span></span> <span data-ttu-id="a67c7-437">Si es así, el <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> método determina si se define un atributo de estilo para la etiqueta.</span><span class="sxs-lookup"><span data-stu-id="a67c7-437">If so, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether a style attribute is defined for the label.</span></span> <span data-ttu-id="a67c7-438">Si no se define ningún estilo, el <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> método establece el valor predeterminado para el `style:color` atributo en azul.</span><span class="sxs-lookup"><span data-stu-id="a67c7-438">If no style is defined, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method sets the default value for the `style:color` attribute to blue.</span></span> <span data-ttu-id="a67c7-439">El <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> método, a continuación, usa el <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> propiedad para insertar una línea se interrumpen en la etiqueta de marcado y escribe los demás atributos definidos.</span><span class="sxs-lookup"><span data-stu-id="a67c7-439">The <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method then uses the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property to insert a line break in the markup tag and writes any other defined attributes.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool&#xA;override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a67c7-440">Cadena con el nombre del atributo que se ha de representar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-440">A string containing the name of the attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-441">Cadena con el valor que se ha de asignar al atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-441">A string containing the value that is assigned to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a67c7-442">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> asociado al atributo de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-442">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-443">Determina si el atributo de marcado especificado y su valor se van a representar en el elemento de marcado actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-443">Determines whether the specified markup attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-444">Siempre es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-444">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-445">El <xref:System.Web.UI.HtmlTextWriter> implementación de la clase de la <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> método siempre devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-445">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="a67c7-446">El <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> invalidaciones pueden determinar si un atributo se representará en la página.</span><span class="sxs-lookup"><span data-stu-id="a67c7-446">The <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> overrides can determine whether an attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-447">En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-447">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method.</span></span> <span data-ttu-id="a67c7-448">Si un <xref:System.Web.UI.HtmlTextWriterAttribute.Size> se representa el atributo, pero el <xref:System.Web.UI.HtmlTextWriterAttribute.Size> valor no es `30pt`, el <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> invalidar llamadas la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> método para agregar un <xref:System.Web.UI.HtmlTextWriterAttribute.Size> de atributo y establezca su valor en `30pt`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-448">If a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> value is not `30pt`, the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> override calls the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `30pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#5)]
 [!code-vb[MarkupTextWriter_Methods3#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a67c7-449">Si se hereda de la <see cref="T:System.Web.UI.HtmlTextWriter" /> (clase), puede invalidar el <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> método devuelva <see langword="false" /> para impedir que un atributo que se va a representar en absoluto, que se representa en un elemento determinado o que se va a representar para un marcado concreto.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-449">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> method to return <see langword="false" /> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup.</span>
            </span>
            <span data-ttu-id="a67c7-450">Por ejemplo, si no desea que el objeto derivado de <see cref="T:System.Web.UI.HtmlTextWriter" /> para representar la <see langword="bgcolor" /> atributo <see langword="&lt;table&gt;" /> elementos, puede invalidar el <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> y devolver <see langword="false" /> cuando <paramref name="name" /> pasa <see langword="bgcolor" /> y el <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> es el valor de propiedad <see langword="table" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-450">For example, if you do not want the object derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="bgcolor" /> attribute to <see langword="&lt;table&gt;" /> elements, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="bgcolor" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="table" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool&#xA;override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a67c7-451">Cadena con el nombre del atributo de estilo que se va a representar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-451">A string containing the name of the style attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-452">Cadena con el valor asignado al atributo del estilo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-452">A string containing the value that is assigned to the style attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a67c7-453">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> asociado al estilo del atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-453">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-454">Determina si el atributo del estilo de marcado especificado y su valor se van a representar en el elemento de marcado actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-454">Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-455">Siempre es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-455">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-456">El <xref:System.Web.UI.HtmlTextWriter> implementación de la clase de la <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> método siempre devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-456">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="a67c7-457">El <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> invalidaciones pueden determinar si un atributo de estilo se representará en la página.</span><span class="sxs-lookup"><span data-stu-id="a67c7-457">The <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> overrides can determine whether a style attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-458">En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-458">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method.</span></span> <span data-ttu-id="a67c7-459">Si un <xref:System.Web.UI.HtmlTextWriterStyle.Color> se representa el atributo de estilo, pero la <xref:System.Web.UI.HtmlTextWriterStyle.Color> valor no es `purple`, el <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> invalidar usa el <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> método para establecer el <xref:System.Web.UI.HtmlTextWriterStyle.Color> atributo `purple`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-459">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterStyle.Color> value is not `purple`, the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `purple`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#6)]
 [!code-vb[MarkupTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a67c7-460">Si se hereda de la <see cref="T:System.Web.UI.HtmlTextWriter" /> (clase), puede invalidar el <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> método devuelva <see langword="false" /> para impedir que un atributo de estilo que se va a representar en absoluto, que se representa en un elemento determinado o que se va a representar para un lenguaje de marcado determinado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-460">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> method to return <see langword="false" /> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language.</span>
            </span>
            <span data-ttu-id="a67c7-461">Por ejemplo, si no desea que el objeto que se deriva de <see cref="T:System.Web.UI.HtmlTextWriter" /> para representar la <see langword="color" /> atributo de estilo para un <see langword="&lt;p&gt;" /> elemento, puede invalidar el <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> y devolver <see langword="false" /> cuando <paramref name="name" /> pasa <see langword="color" />y <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> es el valor de propiedad <see langword="p" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-461">For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="color" /> style attribute to a <see langword="&lt;p&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="color" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="p" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="abstract member OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool&#xA;override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="htmlTextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a67c7-462">Cadena con el nombre del elemento que se ha de representar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-462">A string containing the name of the element to render.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a67c7-463">Control <see cref="T:System.Web.UI.HtmlTextWriterTag" /> asociado al elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-463">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associated with the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-464">Determina si el elemento de marcado especificado se va a representar en la página que realiza la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-464">Determines whether the specified markup element will be rendered to the requesting page.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-465">Siempre es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-465">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-466">El <xref:System.Web.UI.HtmlTextWriter> implementación de la clase de la <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> método siempre devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-466">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method always returns `true`.</span></span> <span data-ttu-id="a67c7-467">El <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> invalidaciones pueden determinar si un elemento se representará en la página.</span><span class="sxs-lookup"><span data-stu-id="a67c7-467">The <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> overrides can determine whether an element will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-468">En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-468">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method.</span></span> <span data-ttu-id="a67c7-469">Si un <xref:System.Web.UI.HtmlTextWriterTag.Font> se está procesando el elemento, el <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> invalidar usa el <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> método para determinar si un <xref:System.Web.UI.HtmlTextWriterAttribute.Size> atributo que se va a representar.</span><span class="sxs-lookup"><span data-stu-id="a67c7-469">If a <xref:System.Web.UI.HtmlTextWriterTag.Font> element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to determine whether a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is being rendered.</span></span> <span data-ttu-id="a67c7-470">Si no, usa el <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> método para crear un <xref:System.Web.UI.HtmlTextWriterAttribute.Size> de atributo y establezca su valor en `20pt`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-470">If not, it uses the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to create a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `20pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#4)]
 [!code-vb[MarkupTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a67c7-471">Si se hereda de la <see cref="T:System.Web.UI.HtmlTextWriter" /> (clase), puede invalidar el <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> método devuelva <see langword="false" /> para impedir que un elemento de marcado que se va a representar en absoluto o para un lenguaje de marcado determinado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-471">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> to prevent a markup element from being rendered at all or for a particular markup language.</span>
            </span>
            <span data-ttu-id="a67c7-472">Por ejemplo, si no desea que el objeto que se deriva de <see cref="T:System.Web.UI.HtmlTextWriter" /> para representar la <see langword="&lt;font&gt;" /> elemento, puede invalidar el <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> método devuelva <see langword="false" /> cuando se solicita una página que contiene un <see langword="&lt;font&gt;" /> elemento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-472">For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="&lt;font&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> when a page is requested that contains a <see langword="&lt;font&gt;" /> element.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="OutputTabs">
      <MemberSignature Language="C#" Value="protected virtual void OutputTabs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTabs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTabs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTabs();" />
      <MemberSignature Language="F#" Value="abstract member OutputTabs : unit -&gt; unit&#xA;override this.OutputTabs : unit -&gt; unit" Usage="htmlTextWriter.OutputTabs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-473">Escribe una serie de cadenas de tabulación que representan el nivel de sangría de una línea de caracteres marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-473">Writes a series of tab strings that represent the indentation level for a line of markup characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-474">El <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> método usa el <xref:System.Web.UI.HtmlTextWriter.Indent%2A> propiedad para determinar cuántas cadenas de tabulación para escribir para obtener la sangría deseada.</span><span class="sxs-lookup"><span data-stu-id="a67c7-474">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property to determine how many tab strings to write to obtain the desired indentation.</span></span>  
  
 <span data-ttu-id="a67c7-475">La cadena de tabulación se especifica con el <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="a67c7-475">The tab string is specified with the <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor.</span></span> <span data-ttu-id="a67c7-476">Si no se especifica ninguna cadena de tabulación, el <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constante (`\t`) se utiliza.</span><span class="sxs-lookup"><span data-stu-id="a67c7-476">If no tab string is specified, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\t`) is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-477">En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> método en una clase que se deriva el <xref:System.Web.UI.HtmlTextWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="a67c7-477">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method in a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="a67c7-478">El <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> invalidar siempre usa el <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constante para realizar la sangría.</span><span class="sxs-lookup"><span data-stu-id="a67c7-478">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> override always uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant to perform the indentation.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#7)]
 [!code-vb[HtmlTextWriter_Methods#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName="PopEndTag">
      <MemberSignature Language="C#" Value="protected string PopEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string PopEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      <MemberSignature Language="VB.NET" Value="Protected Function PopEndTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ PopEndTag();" />
      <MemberSignature Language="F#" Value="member this.PopEndTag : unit -&gt; string" Usage="htmlTextWriter.PopEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-479">Quita el elemento de marcado guardado más recientemente de la lista de elementos representados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-479">Removes the most recently saved markup element from the list of rendered elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-480">
            <see cref="T:System.String" /> que contiene el elemento de marcado representado más recientemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-480">A <see cref="T:System.String" /> containing the most recently rendered markup element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-481">Los elementos se agregan a la lista de elementos de marcado representado por la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-481">Elements are added to the list of rendered markup elements by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="a67c7-482">El <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> método quita elementos de marcado de la lista mediante una llamada a la <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-482">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list by calling the <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a67c7-483">La lista de elementos representados está vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-483">The list of rendered elements is empty.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PushEndTag">
      <MemberSignature Language="C#" Value="protected void PushEndTag (string endTag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushEndTag(string endTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushEndTag (endTag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushEndTag(System::String ^ endTag);" />
      <MemberSignature Language="F#" Value="member this.PushEndTag : string -&gt; unit" Usage="htmlTextWriter.PushEndTag endTag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endTag">
          <span data-ttu-id="a67c7-484">Etiqueta de cierre del elemento de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-484">The closing tag of the markup element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-485">Guarda el elemento de marcado especificado para su uso posterior, al generar la etiqueta de cierre de un elemento de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-485">Saves the specified markup element for later use when generating the end tag for a markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-486">Los elementos se agregan a la lista de elementos de marcado representado cuando el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> llamadas al método el <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-486">Elements are added to the list of rendered markup elements when the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> method.</span></span> <span data-ttu-id="a67c7-487">El <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> método quita elementos de marcado de la lista después de representar la etiqueta de cierre para el elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-487">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list after it renders the end tag for the element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAttribute">
      <MemberSignature Language="C#" Value="protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterAttribute(string name, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterAttribute (name As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterAttribute(System::String ^ name, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="static member RegisterAttribute : string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterAttribute (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a67c7-488">Cadena que contiene el nombre del atributo de marcado que se ha de registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-488">A string containing the name of the markup attribute to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a67c7-489">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> que se corresponde con el nombre de atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-489">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that corresponds with the attribute name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-490">Registra los atributos de marcado, ya sean literales o atributos generados dinámicamente, del archivo de código fuente para que puedan representarse correctamente en el cliente que realiza la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-490">Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-491">Los atributos predefinidos del lenguaje de marcado HTML se registran mediante llamadas a la <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> método cuando el primer <xref:System.Web.UI.HtmlTextWriter> se crea el objeto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-491">The predefined attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="a67c7-492">Se pueden registrar atributos dinámicos mediante el uso de la <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> método en otro momento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-492">Dynamic attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method at other times.</span></span>  
  
 <span data-ttu-id="a67c7-493">La tabla de registro utilizada por el <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> método es `static`, por lo que el registro de atributos se aplica a todos los <xref:System.Web.UI.HtmlTextWriter> objetos en el equipo host.</span><span class="sxs-lookup"><span data-stu-id="a67c7-493">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterStyle(string name, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterStyle (name As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterStyle(System::String ^ name, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="static member RegisterStyle : string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterStyle (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a67c7-494">Cadena pasada desde el archivo de código fuente que especifica el nombre de estilo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-494">The string passed from the source file specifying the style name.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a67c7-495">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> que se corresponde con el estilo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-495">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that corresponds with the specified style.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-496">Registra las propiedades de estilo de marcado, ya sean literales o propiedades generadas dinámicamente, del archivo de código fuente para que puedan representarse correctamente en el cliente que realiza la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-496">Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-497">Los atributos de hoja (CSS) de estilo en cascada predefinidos del lenguaje de marcado HTML se registran mediante llamadas a la <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> método cuando el primer <xref:System.Web.UI.HtmlTextWriter> se crea el objeto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-497">The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="a67c7-498">Los atributos de estilo dinámico se pueden registrar utilizando la <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> método en otro momento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-498">Dynamic style attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method at other times.</span></span>  
  
 <span data-ttu-id="a67c7-499">La tabla de registro utilizada por el <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> método es `static`, por lo que el registro de atributos se aplica a todos los <xref:System.Web.UI.HtmlTextWriter> objetos en el equipo host.</span><span class="sxs-lookup"><span data-stu-id="a67c7-499">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTag">
      <MemberSignature Language="C#" Value="protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterTag(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterTag (name As String, key As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterTag(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="static member RegisterTag : string * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterTag (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a67c7-500">Cadena que contiene la etiqueta HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-500">A string that contains the HTML tag.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a67c7-501">Valor de <see cref="T:System.Web.UI.HtmlTextWriterTag" /> que especifica el elemento que se va a representar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-501">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies which element to render.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-502">Registra las etiquetas de marcado, ya sean literales o etiquetas generadas dinámicamente, del archivo de código fuente para que puedan representarse correctamente en el cliente que realiza la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-502">Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-503">Las etiquetas de marcado predefinidas del lenguaje HTML se registran mediante llamadas a la <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> método cuando el primer <xref:System.Web.UI.HtmlTextWriter> se crea el objeto.</span><span class="sxs-lookup"><span data-stu-id="a67c7-503">The predefined markup tags of the HTML language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="a67c7-504">Etiquetas de marcado dinámicas se pueden registrar utilizando la <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> método en otro momento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-504">Dynamic markup tags can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method at other times.</span></span>  
  
 <span data-ttu-id="a67c7-505">La tabla de registro utilizada por el <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> método es `static`, por lo que el registro de las etiquetas se aplica a todos los <xref:System.Web.UI.HtmlTextWriter> objetos en el equipo host.</span><span class="sxs-lookup"><span data-stu-id="a67c7-505">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method is `static`, so registration of tags applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterContent : unit -&gt; string&#xA;override this.RenderAfterContent : unit -&gt; string" Usage="htmlTextWriter.RenderAfterContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-506">Escribe el texto o el espaciado que aparece detrás del contenido y antes de la etiqueta de cierre del elemento de marcado para representarlos en el flujo de salida de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-506">Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-507">Cadena que contiene el espaciado o texto que se va a escribir detrás del contenido del elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-507">A string that contains the spacing or text to write after the content of the element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-508">El <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> método puede ser útil si desea insertar los elementos secundarios en el elemento de marcado actual.</span><span class="sxs-lookup"><span data-stu-id="a67c7-508">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method can be useful if you want to insert child elements into the current markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-509">En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> método en una clase derivada de la <xref:System.Web.UI.HtmlTextWriter> clase para determinar si un `<label>` elemento que se va a representar.</span><span class="sxs-lookup"><span data-stu-id="a67c7-509">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to determine whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="a67c7-510">Si es así, el <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> invalidación inserta la etiqueta de cierre de un `<font>` elemento inmediatamente antes de la etiqueta de cierre de la `<label>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-510">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> override inserts the closing tag of a `<font>` element immediately before the closing tag of the `<label>` element.</span></span> <span data-ttu-id="a67c7-511">Si un elemento que no sea `<label>` se está representando la <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> se usa el método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-511">If an element other than `<label>` is being rendered, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#3)]
 [!code-vb[HtmlTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a67c7-512">El <see cref="T:System.Web.UI.HtmlTextWriter" /> implementación de la clase de la <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> devuelve del método <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-512">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> method returns <see langword="null" />.</span>
            </span>
            <span data-ttu-id="a67c7-513">Invalidar <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> si desea escribir texto o espaciado después del contenido del elemento, pero antes de la etiqueta de cierre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-513">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> if you want to write text or spacing after the element content but before the closing tag.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterTag : unit -&gt; string&#xA;override this.RenderAfterTag : unit -&gt; string" Usage="htmlTextWriter.RenderAfterTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-514">Escribe el espaciado o texto que aparece detrás de la etiqueta de cierre de un elemento de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-514">Writes any spacing or text that occurs after the closing tag for a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-515">Espaciado o texto que se va a escribir detrás de la etiqueta de cierre del elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-515">The spacing or text to write after the closing tag of the element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-516">El <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> método puede ser útil si desea procesar las etiquetas de cierre adicionales después de la etiqueta del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-516">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method can be useful if you want to render additional closing tags after the element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-517">En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> método para determinar si una clase derivada de la <xref:System.Web.UI.HtmlTextWriter> clase está representando un `<label>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-517">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is rendering a `<label>` element.</span></span> <span data-ttu-id="a67c7-518">Si es así, el <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> invalidación inserta la etiqueta de cierre de un `<font>` elemento inmediatamente después de la `<label>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-518">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> override inserts the closing tag of a `<font>` element immediately after the `<label>` element.</span></span> <span data-ttu-id="a67c7-519">Si no es un `<label>` elemento, el <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> se usa el método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-519">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#2)]
 [!code-vb[HtmlTextWriter_Methods4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a67c7-520">El <see cref="T:System.Web.UI.HtmlTextWriter" /> implementación de la clase de la <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> devuelve del método <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-520">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> method returns <see langword="null" />.</span>
            </span>
            <span data-ttu-id="a67c7-521">Invalidar <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> si desea escribir texto o espaciado después del elemento de etiqueta de cierre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-521">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> if you want to write text or spacing after the element closing tag.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeContent : unit -&gt; string&#xA;override this.RenderBeforeContent : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-522">Escribe texto o espaciado delante del contenido y detrás de la etiqueta de apertura de un elemento de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-522">Writes any text or spacing before the content and after the opening tag of a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-523">Espaciado o texto que se va a escribir delante del contenido del elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-523">The text or spacing to write prior to the content of the element.</span>
          </span>
          <span data-ttu-id="a67c7-524">Si no se reemplaza, este método <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> devuelve <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-524">If not overridden, <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-525">El <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> método puede ser útil si desea insertar los elementos secundarios en el elemento de marcado actual delante del marcado interno.</span><span class="sxs-lookup"><span data-stu-id="a67c7-525">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method can be useful if you want to insert child elements into the current markup element before the inner markup.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-526">En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> método para determinar si una clase derivada de la <xref:System.Web.UI.HtmlTextWriter> clase está a punto de procesarse un `<label>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-526">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="a67c7-527">Si es así, el <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> invalidación inserta la etiqueta de apertura de un `<font>` elemento inmediatamente después de la etiqueta de apertura del `<label>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-527">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> override inserts the opening tag of a `<font>` element immediately after the opening tag of the `<label>` element.</span></span> <span data-ttu-id="a67c7-528">Si no es un `<label>` elemento, el <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> se usa el método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-528">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a67c7-529">El <see cref="T:System.Web.UI.HtmlTextWriter" /> implementación de la clase de la <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> devuelve del método <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-529">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> method returns <see langword="null" />.</span>
            </span>
            <span data-ttu-id="a67c7-530">Invalidar <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> si desea escribir texto o espaciado detrás de la etiqueta de apertura, pero antes que el contenido del elemento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-530">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> if you want to write text or spacing after the opening tag but ahead of the element content.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeTag : unit -&gt; string&#xA;override this.RenderBeforeTag : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-531">Escribe el espaciado o texto que aparece delante de la etiqueta de apertura de un elemento de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-531">Writes any text or spacing that occurs before the opening tag of a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a67c7-532">Espaciado o texto que se va a escribir delante de la etiqueta de apertura del elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-532">The text or spacing to write before the markup element opening tag.</span>
          </span>
          <span data-ttu-id="a67c7-533">Si no se reemplaza, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-533">If not overridden, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-534">El <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> método puede ser útil si desea procesar las etiquetas de apertura adicionales antes de la etiqueta de apertura del elemento deseado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-534">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-535">En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> método para determinar si una clase que se deriva el <xref:System.Web.UI.HtmlTextWriter> clase está a punto de procesarse un `<label>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-535">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method to determine whether a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="a67c7-536">Si es así, el <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> invalidación inserta la etiqueta de apertura de un `<font>` elemento inmediatamente antes de la `<label>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-536">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> override inserts the opening tag of a `<font>` element immediately before the `<label>` element.</span></span> <span data-ttu-id="a67c7-537">Si no se está procesando un `<label>` elemento, el <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> se usa el método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-537">If it is not rendering a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a67c7-538">El <see cref="T:System.Web.UI.HtmlTextWriter" /> implementación de la clase de la <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> devuelve del método <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-538">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> method returns <see langword="null" />.</span>
            </span>
            <span data-ttu-id="a67c7-539">Invalidar <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> si desea escribir texto o espaciado delante de la etiqueta de apertura del elemento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-539">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> if you want to write text or spacing ahead of the element opening tag.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginTag">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-540">Escribe la etiqueta de apertura de un elemento de marcado en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-540">Writes the opening tag of a markup element to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : string -&gt; unit&#xA;override this.RenderBeginTag : string -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="a67c7-541">Cadena que contiene el nombre del elemento de marcado para el que se va a representar la etiqueta de apertura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-541">A string containing the name of the markup element for which to render the opening tag.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-542">Escribe la etiqueta de apertura del elemento de marcado especificado en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-542">Writes the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-543">Use la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> la invalidación de la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> método, si el elemento de marcado no es uno de los <xref:System.Web.UI.HtmlTextWriterTag> valores de enumeración.</span><span class="sxs-lookup"><span data-stu-id="a67c7-543">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> method, if the markup element is not one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="a67c7-544">Para generar un elemento de marcado con el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método, primero llame a la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> y <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> métodos, según sea necesario, para especificar los atributos del elemento o atributos de estilo que se van a mostrarse en la etiqueta de apertura del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-544">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="a67c7-545">Después de generar el marcado interno, llame a la <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> método para generar la etiqueta de cierre.</span><span class="sxs-lookup"><span data-stu-id="a67c7-545">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-546">En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método en un control personalizado para representar la etiqueta de apertura de un no estándar `MyTag` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-546">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a custom control to render the opening tag of a non-standard `MyTag` element.</span></span> <span data-ttu-id="a67c7-547">El ejemplo de código, a continuación, llama a la <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para representar el marcado interno y, a continuación, llama a la <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> método para cerrar el elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-547">The code example then calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render inner markup, and then calls the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to close the element.</span></span>  
  
 <span data-ttu-id="a67c7-548">Este ejemplo de código genera el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-548">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <span data-ttu-id="a67c7-549">Uno de los valores de <see cref="T:System.Web.UI.HtmlTextWriterTag" /> que define la etiqueta de apertura del elemento de marcado que se va a representar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-549">One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> values that defines the opening tag of the markup element to render.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-550">Escribe la etiqueta de apertura del elemento de marcado asociada al valor de la enumeración <see cref="T:System.Web.UI.HtmlTextWriterTag" /> especificado en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-550">Writes the opening tag of the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-551">Use la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> sobrecarga de la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> método si el elemento de marcado es de un tipo conocido que es uno de los <xref:System.Web.UI.HtmlTextWriterTag> valores de enumeración.</span><span class="sxs-lookup"><span data-stu-id="a67c7-551">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> method if the markup element is of a known type that is one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="a67c7-552">Para generar un elemento de marcado con el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método, primero llame a la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> y <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> métodos, según sea necesario, para especificar los atributos del elemento o atributos de estilo que se van a mostrarse en la etiqueta de apertura del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-552">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="a67c7-553">Después de generar el marcado interno, llame a la <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> método para generar la etiqueta de cierre.</span><span class="sxs-lookup"><span data-stu-id="a67c7-553">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-554">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método para generar la etiqueta de apertura de un `<img>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-554">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to output the opening tag of an `<img>` element.</span></span> <span data-ttu-id="a67c7-555">Los atributos que se agregan al elemento por el <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> método estará en la apertura `<img>` etiqueta.</span><span class="sxs-lookup"><span data-stu-id="a67c7-555">The attributes that are added to the element by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method will be in the opening `<img>` tag.</span></span> <span data-ttu-id="a67c7-556">El <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> método se usa para generar la etiqueta de cierre.</span><span class="sxs-lookup"><span data-stu-id="a67c7-556">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is used to generate the closing tag.</span></span>  
  
 <span data-ttu-id="a67c7-557">Este ejemplo de código genera el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-557">This code example generates the following markup:</span></span>  
  
 `<img alt="Encoding &quot;Required&quot;" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : unit -&gt; unit&#xA;override this.RenderEndTag : unit -&gt; unit" Usage="htmlTextWriter.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-558">Escribe la etiqueta final de un elemento de marcado en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-558">Writes the end tag of a markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-559">Llamar a la <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> método después de la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> es llamar a la sobrecarga y después de todo el contenido entre las etiquetas apertura y cierre (marcado interno) del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-559">Call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-560">En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> método después de ambos el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método que genera la etiqueta de apertura y el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método que representa el marcado interno entre las etiquetas de cierre de personalizadoydeapertura`MyTag` elemento que se ha llamado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-560">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after both the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that generates the opening tag and the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method that renders the inner markup between the opening and closing tags of the custom `MyTag` element have been called.</span></span>  
  
 <span data-ttu-id="a67c7-561">Este ejemplo de código genera el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-561">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingChars">
      <MemberSignature Language="C#" Value="public const string SelfClosingChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingChars;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingChars : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-562">Representa un espacio y la barra diagonal de cierre automático (/) de una etiqueta de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-562">Represents a space and the self-closing slash mark (/) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-563">El <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> campo se usa en elementos de marcado que se cierran automáticamente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-563">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> field is used in markup elements that are self-closed.</span></span> <span data-ttu-id="a67c7-564">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="a67c7-564">For example:</span></span>  
  
 `<input type="submit" value="go"  />`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingTagEnd">
      <MemberSignature Language="C#" Value="public const string SelfClosingTagEnd;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingTagEnd" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingTagEnd As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingTagEnd;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingTagEnd : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-565">Representa la barra diagonal de cierre y el corchete angular de cierre (/&gt;) de un elemento de marcado de cierre automático.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-565">Represents the closing slash mark and right angle bracket (/&gt;) of a self-closing markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-566">El <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> campo es utilizado por el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método al construir elementos de marcado de autocierre.</span><span class="sxs-lookup"><span data-stu-id="a67c7-566">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method when constructing self-closing markup elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-567">El ejemplo de código siguiente muestra cómo representar el valor de un personalizado `FileName` propiedad seguido por un signo de comillas y caracteres representados por el <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> campo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-567">The following code example shows how to render the value of a custom `FileName` property followed by a quotation mark and the characters represented by the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field.</span></span> <span data-ttu-id="a67c7-568">El ejemplo de código llama a la <xref:System.Web.UI.HtmlTextWriter.Write%2A> y pasa el <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> campo como el argumento del parámetro para cerrar el elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-568">The code example calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method and passes the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field as the parameter argument to close the element.</span></span>  
  
 <span data-ttu-id="a67c7-569">Este ejemplo de código representa el `FileName` valor de propiedad y, a continuación, en el marcado siguiente:</span><span class="sxs-lookup"><span data-stu-id="a67c7-569">This code example renders the `FileName` property value, and then the following markup:</span></span>  
  
 `" />`  
  
 [!code-csharp[MarkupTextWriter_Constants#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#11)]
 [!code-vb[MarkupTextWriter_Constants#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SemicolonChar">
      <MemberSignature Language="C#" Value="public const char SemicolonChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SemicolonChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SemicolonChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SemicolonChar;" />
      <MemberSignature Language="F#" Value="val mutable SemicolonChar : char" Usage="System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-570">Representa el carácter de punto y coma (;).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-570">Represents the semicolon (;).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-571">Pase el <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> campo como el argumento del parámetro en un <xref:System.Web.UI.HtmlTextWriter.Write%2A> llamada al método cuando desee representar un punto y coma de un control personalizado o un adaptador.</span><span class="sxs-lookup"><span data-stu-id="a67c7-571">Pass the <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field as the parameter argument in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call when you want to render a semicolon from a custom control or adapter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-572">En el ejemplo de código siguiente se muestra cómo representar manualmente una serie de estilos de un elemento de marcado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-572">The following code example demonstrates how to manually render a series of styles on a markup element.</span></span> <span data-ttu-id="a67c7-573">El ejemplo de código se usa el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para representar `font-size` y `border-style` los atributos de estilo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-573">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render `font-size` and `border-style` style attributes.</span></span> <span data-ttu-id="a67c7-574">El <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> campo se utiliza como un parámetro de la <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para separar el valor de la `font-size` atributo desde el principio de la `border-style` atributo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-574">The <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field is used as a parameter of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to separate the value of the `font-size` attribute from the beginning of the `border-style` attribute.</span></span>  
  
 <span data-ttu-id="a67c7-575">Este ejemplo de código representa el marcado siguiente:</span><span class="sxs-lookup"><span data-stu-id="a67c7-575">This code example renders the following markup:</span></span>  
  
 `style="font-size:12pt;border-style:ridge"`  
  
 [!code-csharp[MarkupTextWriter_Constants#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simplebutton.cs#7)]
 [!code-vb[MarkupTextWriter_Constants#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simplebutton.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SingleQuoteChar">
      <MemberSignature Language="C#" Value="public const char SingleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SingleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SingleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SingleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable SingleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-576">Representa un apóstrofo (').</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-576">Represents an apostrophe (').</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-577">Use el <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> campo cuando sea necesario representar un apóstrofo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-577">Use the <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> field when it is necessary to render an apostrophe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SlashChar">
      <MemberSignature Language="C#" Value="public const char SlashChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SlashChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SlashChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SlashChar;" />
      <MemberSignature Language="F#" Value="val mutable SlashChar : char" Usage="System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-578">Representa el carácter barra diagonal (/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-578">Represents the slash mark (/).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-579">Use el <xref:System.Web.UI.HtmlTextWriter.SlashChar> marca de campo para representar la barra diagonal al escribir una dirección URL.</span><span class="sxs-lookup"><span data-stu-id="a67c7-579">Use the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field to render the slash marks when you write a URL.</span></span> <span data-ttu-id="a67c7-580">El <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> método usa el <xref:System.Web.UI.HtmlTextWriter.SlashChar> campo cuando se escribe la etiqueta de cierre de un elemento de marcado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-580">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field when writing the closing tag of a markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-581">En el ejemplo de código siguiente se muestra cómo representar manualmente el `src` atributo de un `<img>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-581">The following code example demonstrates how to manually render the `src` attribute of an `<img>` element.</span></span> <span data-ttu-id="a67c7-582">El ejemplo de código se usa el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método con el <xref:System.Web.UI.HtmlTextWriter.SlashChar> marca el campo como su parámetro para representar una barra diagonal en la ruta de acceso que se aplica a la `src` atributo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-582">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field as its parameter to render slash marks in the path that is applied to the `src` attribute.</span></span>  
  
 <span data-ttu-id="a67c7-583">Este ejemplo de código representa el marcado siguiente:</span><span class="sxs-lookup"><span data-stu-id="a67c7-583">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SpaceChar">
      <MemberSignature Language="C#" Value="public const char SpaceChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SpaceChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SpaceChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SpaceChar;" />
      <MemberSignature Language="F#" Value="val mutable SpaceChar : char" Usage="System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-584">Representa un carácter de espacio ( ).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-584">Represents a space ( ) character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-585">El <xref:System.Web.UI.HtmlTextWriter.SpaceChar> campo es utilizado por el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> y <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> métodos al escribir separadores entre los elementos y atributos.</span><span class="sxs-lookup"><span data-stu-id="a67c7-585">The <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods when writing separators between elements and attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-586">En esta sección se proporciona dos ejemplos de código.</span><span class="sxs-lookup"><span data-stu-id="a67c7-586">This section provides two code examples.</span></span> <span data-ttu-id="a67c7-587">El primero se muestra cómo crear una matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a67c7-587">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="a67c7-588">El segundo muestra cómo usar la matriz.</span><span class="sxs-lookup"><span data-stu-id="a67c7-588">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="a67c7-589">Estos ejemplos de código generan el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-589">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="a67c7-590">En el ejemplo de código siguiente se muestra cómo crear un <xref:System.Char> matriz que contiene el <xref:System.Web.UI.HtmlTextWriter.SpaceChar> campo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-590">The following code example shows how to create a <xref:System.Char> array that contains the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="a67c7-591">En el ejemplo de código siguiente se muestra cómo usar la matriz que se creó en el ejemplo de código anterior como un parámetro al llamar a la <xref:System.Web.UI.HtmlTextWriter.Write%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-591">The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StyleEqualsChar">
      <MemberSignature Language="C#" Value="public const char StyleEqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char StyleEqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const StyleEqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char StyleEqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable StyleEqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-592">Representa el carácter de estilo igual (<see langword=":" />) usado para establecer atributos de estilo iguales a valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-592">Represents the style equals (<see langword=":" />) character used to set style attributes equal to values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-593">El <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> campo es utilizado por el <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> método para delimitar nombres de estilo y los valores.</span><span class="sxs-lookup"><span data-stu-id="a67c7-593">The <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method to delimit style names and values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-594">En el ejemplo de código siguiente se muestra cómo representar un `FontWeight` atributo y valor de `bold` a la etiqueta de apertura de un elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-594">The following code example demonstrates how to render a `FontWeight` attribute and value of `bold` to the opening tag of an element.</span></span> <span data-ttu-id="a67c7-595">El ejemplo de código se usa el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método con el <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> campo como parámetro para representar el carácter que establece el valor de cada atributo de estilo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-595">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field as the parameter to render the character that sets the value of each style attribute.</span></span>  
  
 <span data-ttu-id="a67c7-596">Este ejemplo de código representa el marcado siguiente:</span><span class="sxs-lookup"><span data-stu-id="a67c7-596">This code example renders the following markup:</span></span>  
  
 `FontWeight:"bold"`  
  
 [!code-csharp[MarkupTextWriter_Constants#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#5)]
 [!code-vb[MarkupTextWriter_Constants#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); void set(System::Web::UI::HtmlTextWriterTag value); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag with get, set" Usage="System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-597">Obtiene o establece el valor de <see cref="T:System.Web.UI.HtmlTextWriterTag" /> para el elemento de marcado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-597">Gets or sets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the specified markup element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a67c7-598">Elemento de marcado cuya etiqueta de apertura se va a representar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-598">The markup element that is having its opening tag rendered.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-599">El <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> es propiedad de uso únicamente a las clases que heredan de la <xref:System.Web.UI.HtmlTextWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="a67c7-599">The <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="a67c7-600">Debe leer o establecer el <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> propiedad solo en una llamada a la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> método; esta es la única vez que se establece en un valor constante.</span><span class="sxs-lookup"><span data-stu-id="a67c7-600">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property only in a call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-601">En el ejemplo de código siguiente se muestra una versión invalidada del <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> método en una clase que deriva la <xref:System.Web.UI.HtmlTextWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="a67c7-601">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="a67c7-602">Usa el valor de la <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> propiedad para determinar si un control de servidor mediante personalizado <xref:System.Web.UI.HtmlTextWriter> objeto está representando un `<label>` elemento de marcado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-602">It uses the value of the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property to determine whether a server control using the custom <xref:System.Web.UI.HtmlTextWriter> object is rendering a `<label>` markup element.</span></span> <span data-ttu-id="a67c7-603">Si es así, un `<font>` elemento con un `color` atributo establecido en `red` se devuelve al modificar el formato de la `<label>` texto del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-603">If it is, a `<font>` element with a `color` attribute set to `red` is returned to modify the formatting of the `<label>` element's text.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a67c7-604">No se puede establecer este valor de propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-604">The property value cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagLeftChar">
      <MemberSignature Language="C#" Value="public const char TagLeftChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagLeftChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagLeftChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagLeftChar;" />
      <MemberSignature Language="F#" Value="val mutable TagLeftChar : char" Usage="System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-605">Representa el corchete angular de apertura (&lt;) de una etiqueta de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-605">Represents the opening angle bracket (&lt;) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-606">El <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> campo es utilizado por el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, y <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> métodos al escribir las etiquetas de marcado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-606">The <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-607">El siguiente ejemplo de código representa el primer carácter de la etiqueta de apertura de un `<table>` elemento con el nombre del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-607">The following code example renders the first character of the opening tag of a `<table>` element with the element name.</span></span> <span data-ttu-id="a67c7-608">El ejemplo de código se usa el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método con el <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> campo como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-608">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="a67c7-609">Este ejemplo de código representa el marcado siguiente:</span><span class="sxs-lookup"><span data-stu-id="a67c7-609">This code example renders the following markup:</span></span>  
  
 `<table`  
  
 [!code-csharp[MarkupTextWriter_Constants#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#9)]
 [!code-vb[MarkupTextWriter_Constants#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string with get, set" Usage="System.Web.UI.HtmlTextWriter.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-610">Obtiene o establece el nombre de etiqueta del elemento de marcado que se va a representar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-610">Gets or sets the tag name of the markup element being rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a67c7-611">Nombre de etiqueta del elemento de marcado que se va a representar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-611">The tag name of the markup element being rendered.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-612">El <xref:System.Web.UI.HtmlTextWriter.TagName%2A> es propiedad de uso únicamente a las clases que heredan de la <xref:System.Web.UI.HtmlTextWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="a67c7-612">The <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="a67c7-613">Debe leer o establecer el <xref:System.Web.UI.HtmlTextWriter.TagName%2A> propiedad únicamente en <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> llamadas al método; esta es la única vez que se establece en un valor constante.</span><span class="sxs-lookup"><span data-stu-id="a67c7-613">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property only in <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-614">En el ejemplo de código siguiente se muestra una versión invalidada del <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> método en una clase que deriva la <xref:System.Web.UI.HtmlTextWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="a67c7-614">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="a67c7-615">El ejemplo de código comprueba si el elemento que se va a representar es un `<label>` elemento mediante una llamada a la <xref:System.String.Compare%2A?displayProperty=nameWithType> método y, a continuación, pasar la <xref:System.Web.UI.HtmlTextWriter.TagName%2A> valor de propiedad y una cadena, `"label"`, como los argumentos de parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-615">The code example checks whether the element to render is a `<label>` element by calling the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and then passing the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property value and a string, `"label"`, as the parameter arguments.</span></span> <span data-ttu-id="a67c7-616">Si un `<label>` elemento está a punto de representarse, la etiqueta de apertura de un `<font>` elemento, con un `color` atributo establecido en `red`, se procesa antes que la `<label>` etiqueta de apertura del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-616">If a `<label>` element is about to be rendered, the opening tag of a `<font>` element, with a `color` attribute set to `red`, is rendered before the `<label>` element's opening tag.</span></span> <span data-ttu-id="a67c7-617">Si el elemento que se va a representar, no es un `<label>` elemento, la versión de la clase base de la <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-617">If the element to render is not a `<label>` element, the base class's version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method is called.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TagRightChar">
      <MemberSignature Language="C#" Value="public const char TagRightChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagRightChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagRightChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagRightChar;" />
      <MemberSignature Language="F#" Value="val mutable TagRightChar : char" Usage="System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-618">Representa el corchete angular de cierre (&gt;) de una etiqueta de marcado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-618">Represents the closing angle bracket (&gt;) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-619">El <xref:System.Web.UI.HtmlTextWriter.TagRightChar> campo es utilizado por el <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, y <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> métodos al escribir las etiquetas de marcado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-619">The <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-620">El ejemplo de código siguiente muestra cómo representar la etiqueta de cierre de un `<table>` elemento realizando llamadas a las sobrecargas de los <xref:System.Web.UI.HtmlTextWriter.Write%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-620">The following code example shows how to render the closing tag of a `<table>` element by making calls to overloads of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span> <span data-ttu-id="a67c7-621">Para representar el carácter final de la etiqueta, el ejemplo de código se usa el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método con el <xref:System.Web.UI.HtmlTextWriter.TagRightChar> campo como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-621">To render the final character of the tag, the code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="a67c7-622">Este ejemplo de código representa el marcado siguiente:</span><span class="sxs-lookup"><span data-stu-id="a67c7-622">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-623">Escribe el tipo de datos especificado en el flujo de salida, junto con el espaciado de tabulación pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-623">Writes the specified data type to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(bool value);" />
      <MemberSignature Language="F#" Value="abstract member Write : bool -&gt; unit&#xA;override this.Write : bool -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-624">
            <see cref="T:System.Boolean" /> que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-624">The <see cref="T:System.Boolean" /> to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-625">Escribe la representación de texto de un valor booleano en el flujo de salida, junto con el espaciado de tabulación que quede pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-625">Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-626">El <xref:System.Web.UI.HtmlTextWriter.Write%2A> método genera cualquier etiquetas pendientes y, a continuación, llama a la <xref:System.IO.TextWriter.Write%2A> método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-626">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="abstract member Write : char -&gt; unit&#xA;override this.Write : char -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-627">Carácter Unicode que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-627">The Unicode character to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-628">Escribe la representación de texto de un carácter Unicode en el flujo de salida, junto con el espaciado de tabulación que quede pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-628">Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-629">El <xref:System.Web.UI.HtmlTextWriter.Write%2A> método genera cualquier etiquetas pendientes y, a continuación, llama a la <xref:System.IO.TextWriter.Write%2A> método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-629">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-630">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para finalizar la etiqueta de apertura de un `<img>` elemento utilizando el <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constante.</span><span class="sxs-lookup"><span data-stu-id="a67c7-630">The following code example demonstrates using the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to end the opening tag of an `<img>` element by using the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant.</span></span>  
  
 <span data-ttu-id="a67c7-631">Este ejemplo de código representa el marcado siguiente:</span><span class="sxs-lookup"><span data-stu-id="a67c7-631">This code example renders the following markup:</span></span>  
  
 `<img alt="A custom image">`  
  
 `</img>`  
  
 [!code-csharp[MarkupTextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#5)]
 [!code-vb[MarkupTextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] -&gt; unit&#xA;override this.Write : char[] -&gt; unit" Usage="htmlTextWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="a67c7-632">Matriz de caracteres Unicode que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-632">The array of Unicode characters to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-633">Escribe la representación de texto de una matriz de caracteres Unicode en el flujo de salida, junto con el espaciado de tabulación que quede pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-633">Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-634">El <xref:System.Web.UI.HtmlTextWriter.Write%2A> método genera cualquier etiquetas pendientes y, a continuación, llama a la <xref:System.IO.TextWriter.Write%2A> método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-634">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-635">En esta sección se proporciona dos ejemplos de código.</span><span class="sxs-lookup"><span data-stu-id="a67c7-635">This section provides two code examples.</span></span> <span data-ttu-id="a67c7-636">El primero se muestra cómo crear una matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a67c7-636">The first one demonstrates how to create an array of characters.</span></span> <span data-ttu-id="a67c7-637">El segundo muestra cómo usar la matriz.</span><span class="sxs-lookup"><span data-stu-id="a67c7-637">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="a67c7-638">Estos ejemplos de código generan el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-638">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="a67c7-639">En el ejemplo de código siguiente se muestra cómo se crea una matriz de caracteres que deletrear `hello world`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-639">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="a67c7-640">Incluir en la matriz es el <xref:System.Web.UI.HtmlTextWriter.SpaceChar> campo, que crea un espacio entre las dos palabras.</span><span class="sxs-lookup"><span data-stu-id="a67c7-640">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="a67c7-641">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para representar el `hello world` matriz de caracteres que se crean en el ejemplo de código anterior a una página, cuando el control que contiene este código de ejemplo se incluye en una página.</span><span class="sxs-lookup"><span data-stu-id="a67c7-641">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the `hello world` character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(double value);" />
      <MemberSignature Language="F#" Value="abstract member Write : double -&gt; unit&#xA;override this.Write : double -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-642">Número de punto flotante de precisión doble que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-642">The double-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-643">Escribe la representación de texto de un número de punto flotante de precisión doble en el flujo de salida, junto con el espaciado de tabulación pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-643">Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-644">El <xref:System.Web.UI.HtmlTextWriter.Write%2A> método genera cualquier etiquetas pendientes y, a continuación, llama a la <xref:System.IO.TextWriter.Write%2A> método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-644">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-645">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para representar el valor de la <xref:System.Double.MaxValue?displayProperty=nameWithType> campo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-645">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="a67c7-646">Este ejemplo de código genera el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-646">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#7)]
 [!code-vb[MarkupTextWriter_Methods1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(int value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int -&gt; unit&#xA;override this.Write : int -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-647">Entero de 32 bytes con signo que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-647">The 32-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-648">Escribe la representación de texto de un entero de 32 bytes con signo en el flujo de salida, junto con el espaciado de tabulación pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-648">Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-649">El <xref:System.Web.UI.HtmlTextWriter.Write%2A> método genera cualquier etiquetas pendientes y, a continuación, llama a la <xref:System.IO.TextWriter.Write%2A> método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-649">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(long value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int64 -&gt; unit&#xA;override this.Write : int64 -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-650">Entero de 64 bytes con signo que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-650">The 64-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-651">Escribe la representación de texto de un entero de 64 bytes con signo en el flujo de salida, junto con el espaciado de tabulación pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-651">Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-652">El <xref:System.Web.UI.HtmlTextWriter.Write%2A> método genera cualquier etiquetas pendientes y, a continuación, llama a la <xref:System.IO.TextWriter.Write%2A> método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-652">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj -&gt; unit&#xA;override this.Write : obj -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-653">Objeto que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-653">The object to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-654">Escribe la representación de texto de un objeto en el flujo de salida, junto con el espaciado de tabulación pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-654">Writes the text representation of an object to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-655">El <xref:System.Web.UI.HtmlTextWriter.Write%2A> método genera cualquier etiquetas pendientes y, a continuación, llama a la <xref:System.IO.TextWriter.Write%2A> método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-655">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-656">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para representar el valor de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a67c7-656">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="a67c7-657">Este ejemplo de código genera el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-657">This code example generates the following markup:</span></span>  
  
 `This is a rendered CultureInfo object.`  
  
 `<bold>`  
  
 <span data-ttu-id="a67c7-658">El valor de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propiedad:</span><span class="sxs-lookup"><span data-stu-id="a67c7-658">The value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property:</span></span>  
  
 `</bold>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#8)]
 [!code-vb[MarkupTextWriter_Methods1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(float value);" />
      <MemberSignature Language="F#" Value="abstract member Write : single -&gt; unit&#xA;override this.Write : single -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-659">Número de punto flotante de precisión sencilla que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-659">The single-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-660">Escribe la representación de texto de un número de punto flotante de precisión sencilla en el flujo de salida, junto con el espaciado de tabulación pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-660">Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-661">El <xref:System.Web.UI.HtmlTextWriter.Write%2A> método genera cualquier etiquetas pendientes y, a continuación, llama a la <xref:System.IO.TextWriter.Write%2A> método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-661">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-662">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para representar el valor de la <xref:System.Single.Epsilon?displayProperty=nameWithType> campo, que es el menor valor posible de la <xref:System.Single> estructura.</span><span class="sxs-lookup"><span data-stu-id="a67c7-662">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="a67c7-663">Este ejemplo de código genera el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-663">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#10)]
 [!code-vb[MarkupTextWriter_Methods1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="htmlTextWriter.Write s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="a67c7-664">Cadena que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-664">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-665">Escribe la cadena especificada en el flujo de salida, junto con el espaciado de tabulación pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-665">Writes the specified string to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-666">El <xref:System.Web.UI.HtmlTextWriter.Write%2A> método genera cualquier etiquetas pendientes y, a continuación, llama a la <xref:System.IO.TextWriter.Write%2A> método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-666">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-667">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para representar una cadena comprendida entre las etiquetas apertura y cierre de un elemento de marcado personalizada.</span><span class="sxs-lookup"><span data-stu-id="a67c7-667">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a string between the opening and closing tags of a custom markup element.</span></span>  
  
 <span data-ttu-id="a67c7-668">Este ejemplo de código genera el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-668">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj -&gt; unit&#xA;override this.Write : string * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="a67c7-669">Cadena que contiene cero o más elementos de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-669">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="a67c7-670">Objeto al que se va a aplicar el formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-670">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-671">Se escriben una cadena de tabulación y una cadena con formato en el flujo de salida, utilizando la misma semántica que el método <see cref="M:System.String.Format(System.String,System.Object)" />, junto con el espaciado de tabulación pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-671">Writes a tab string and a formatted string to the output stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-672">El <xref:System.Web.UI.HtmlTextWriter.Write%2A> método genera cualquier etiquetas pendientes y, a continuación, llama a la <xref:System.IO.TextWriter.Write%2A> método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-672">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-673">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para representar una cadena con formato con el valor de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a67c7-673">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#5)]
 [!code-vb[MarkupTextWriter_Methods1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj[] -&gt; unit&#xA;override this.Write : string * obj[] -&gt; unit" Usage="htmlTextWriter.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="a67c7-674">Cadena que contiene cero o más elementos de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-674">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="a67c7-675">Matriz de objetos a la que se va a aplicar el formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-675">An object array to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-676">Escribe una cadena con formato que contiene la representación de texto de una matriz de objetos en el flujo de salida, junto con el espaciado de tabulación que quede pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-676">Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</span>
          </span>
          <span data-ttu-id="a67c7-677">Este método utiliza la misma semántica que el método <see cref="M:System.String.Format(System.String,System.Object[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-677">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-678">El <xref:System.Web.UI.HtmlTextWriter.Write%2A> método genera cualquier etiquetas pendientes y, a continuación, llama a la <xref:System.IO.TextWriter.Write%2A> método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-678">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-679">Esta sección contiene dos ejemplos de código.</span><span class="sxs-lookup"><span data-stu-id="a67c7-679">This section contains two code examples.</span></span> <span data-ttu-id="a67c7-680">El primero se muestra cómo representar una cadena con formato y el contenido de una matriz.</span><span class="sxs-lookup"><span data-stu-id="a67c7-680">The first one demonstrates how to render a formatted string and the contents of an array.</span></span> <span data-ttu-id="a67c7-681">El segundo muestra cómo declarar la matriz.</span><span class="sxs-lookup"><span data-stu-id="a67c7-681">The second one demonstrates how to declare the array.</span></span>  
  
 <span data-ttu-id="a67c7-682">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para representar una cadena con formato y el contenido de una matriz de objetos, denominado `curPriceTime`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-682">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the contents of an object array, named `curPriceTime`.</span></span> <span data-ttu-id="a67c7-683">La llamada al método representa al segundo miembro de la matriz antes de que presente al primer miembro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-683">The method call renders the second member of the array before it renders the first member.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#9)]
 [!code-vb[MarkupTextWriter_Methods2#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#9)]  
  
 <span data-ttu-id="a67c7-684">En el ejemplo de código siguiente se muestra cómo declarar el `curPriceTime` matriz de objetos.</span><span class="sxs-lookup"><span data-stu-id="a67c7-684">The following code example demonstrates declaring the `curPriceTime` object array.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#14](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#14)]
 [!code-vb[MarkupTextWriter_Methods2#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] * int * int -&gt; unit&#xA;override this.Write : char[] * int * int -&gt; unit" Usage="htmlTextWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="a67c7-685">Matriz de caracteres con que se va a escribir texto en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-685">The array of characters from which to write text to the output stream.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a67c7-686">Posición de índice de la matriz donde se inicia la operación de escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-686">The index location in the array where writing begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a67c7-687">Número de caracteres que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-687">The number of characters to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-688">Escribe la representación de texto de una submatriz de caracteres Unicode en el flujo de salida, junto con el espaciado de tabulación que quede pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-688">Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-689">El <xref:System.Web.UI.HtmlTextWriter.Write%2A> método genera cualquier etiquetas pendientes y, a continuación, llama a la <xref:System.IO.TextWriter.Write%2A> método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-689">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-690">En esta sección se proporciona dos ejemplos de código.</span><span class="sxs-lookup"><span data-stu-id="a67c7-690">This section provides two code examples.</span></span> <span data-ttu-id="a67c7-691">El primero se muestra cómo crear una matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a67c7-691">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="a67c7-692">El segundo muestra cómo usar la matriz.</span><span class="sxs-lookup"><span data-stu-id="a67c7-692">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="a67c7-693">Estos ejemplos de código generan el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-693">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="a67c7-694">El ejemplo de código siguiente muestra cómo crear una matriz de caracteres que escribe `hello world`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-694">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="a67c7-695">Incluir en la matriz es el <xref:System.Web.UI.HtmlTextWriter.SpaceChar> campo, que crea un espacio entre las dos palabras.</span><span class="sxs-lookup"><span data-stu-id="a67c7-695">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="a67c7-696">La siguiente parte del ejemplo de código utiliza el `index` y `count` parámetros de la <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para representar los cinco primeros caracteres de la matriz creada en el ejemplo anterior.</span><span class="sxs-lookup"><span data-stu-id="a67c7-696">The following portion of the code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the first five characters of the array created in the preceding example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#11)]
 [!code-vb[MarkupTextWriter_Methods2#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj * obj -&gt; unit&#xA;override this.Write : string * obj * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="a67c7-697">Cadena que contiene cero o más elementos de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-697">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="a67c7-698">Objeto al que se va a aplicar el formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-698">An object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a67c7-699">Objeto al que se va a aplicar el formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-699">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-700">Escribe una cadena con formato que contiene la representación de texto de dos objetos en el flujo de salida, junto con el espaciado de tabulación que quede pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-700">Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</span>
          </span>
          <span data-ttu-id="a67c7-701">Este método utiliza la misma semántica que el método <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-701">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-702">El <xref:System.Web.UI.HtmlTextWriter.Write%2A> método genera cualquier etiquetas pendientes y, a continuación, llama a la <xref:System.IO.TextWriter.Write%2A> método base.</span><span class="sxs-lookup"><span data-stu-id="a67c7-702">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-703">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.Write%2A> método para representar una cadena con formato y los valores de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A> y <xref:System.DateTime.Today%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="a67c7-703">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.DateTime.Today%2A> properties.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#6)]
 [!code-vb[MarkupTextWriter_Methods1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-704">Escribe un atributo de marcado y su valor en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-704">Writes a markup attribute and its value to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string -&gt; unit&#xA;override this.WriteAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a67c7-705">Atributo que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-705">The attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-706">Valor asignado al atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-706">The value assigned to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-707">Escribe el atributo de marcado y el valor especificados en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-707">Writes the specified markup attribute and value to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-708">Use el <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> método para escribir atributos de marcado y sus valores sin codificación.</span><span class="sxs-lookup"><span data-stu-id="a67c7-708">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with no encoding.</span></span> <span data-ttu-id="a67c7-709">El <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> método escribe el valor del atributo entrecomillado comillas dobles (").</span><span class="sxs-lookup"><span data-stu-id="a67c7-709">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="a67c7-710">Si `value` es `null`, el <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> método escribe sólo el nombre del atributo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-710">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-711">El código siguiente muestra la representación un `<img>` elemento en que ambas sobrecargas de los <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-711">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="a67c7-712">El ejemplo de código utiliza el siguiente proceso:</span><span class="sxs-lookup"><span data-stu-id="a67c7-712">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="a67c7-713">Las llamadas del <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> método, que representa los caracteres de apertura del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-713">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="a67c7-714">Las llamadas del <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> sobrecarga, que escribe una `alt` atributo y su valor en el `<img>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-714">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="a67c7-715">Llama a la <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> sobrecarga para representar un personalizado `myattribute` , un valor de atributo `No "encoding" required`y, a continuación, establece `fEncode` a `false`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-715">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="a67c7-716">Cierra la etiqueta de apertura del elemento y, a continuación, llama a la <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> método para cerrar el `<img>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-716">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="a67c7-717">Este ejemplo de código genera el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-717">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a67c7-718">En las clases derivadas, se puede reemplazar el <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> método para definir reglas personalizadas para escribir atributos y sus valores.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-718">In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to define custom rules for writing attributes and their values.</span>
            </span>
            <span data-ttu-id="a67c7-719">Por ejemplo, podría escribir código que permita que el <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> método para escribir un atributo con un valor vacío.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-719">For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to write an attribute with an empty value.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string * bool -&gt; unit&#xA;override this.WriteAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a67c7-720">Atributo de marcado que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-720">The markup attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-721">Valor asignado al atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-721">The value assigned to the attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="a67c7-722">
            <see langword="true" /> para codificar el atributo y su valor asignado; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-722">
              <see langword="true" /> to encode the attribute and its assigned value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-723">Escribe el atributo de marcado y el valor especificados en el flujo de salida y, si se especifica, escribe el valor codificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-723">Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-724">Use el <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> método para escribir atributos de marcado y sus valores con o sin codificación.</span><span class="sxs-lookup"><span data-stu-id="a67c7-724">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with or without encoding.</span></span> <span data-ttu-id="a67c7-725">El <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> método usa el <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> método para realizar la codificación.</span><span class="sxs-lookup"><span data-stu-id="a67c7-725">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method uses the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method to do the encoding.</span></span>  
  
 <span data-ttu-id="a67c7-726">El <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> método escribe el valor del atributo entrecomillado comillas dobles (").</span><span class="sxs-lookup"><span data-stu-id="a67c7-726">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="a67c7-727">Si `value` es `null`, el <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> método escribe sólo el nombre del atributo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-727">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-728">El código siguiente muestra la representación un `<img>` elemento en que ambas sobrecargas de los <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-728">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="a67c7-729">El ejemplo de código utiliza el siguiente proceso:</span><span class="sxs-lookup"><span data-stu-id="a67c7-729">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="a67c7-730">Las llamadas del <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> método, que representa los caracteres de apertura del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-730">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="a67c7-731">Las llamadas del <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> sobrecarga, que escribe una `alt` atributo y su valor en el `<img>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-731">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="a67c7-732">Llama a la <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> sobrecarga para representar un personalizado `myattribute` , un valor de atributo `No "encoding" required`y, a continuación, establece `fEncode` a `false`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-732">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="a67c7-733">Cierra la etiqueta de apertura del elemento y, a continuación, llama a la <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> método para cerrar el `<img>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-733">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="a67c7-734">Este ejemplo de código genera el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-734">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a67c7-735">En las clases derivadas, se puede reemplazar el <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> método para definir reglas personalizadas para escribir atributos y sus valores.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-735">In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to define custom rules for writing attributes and their values.</span>
            </span>
            <span data-ttu-id="a67c7-736">Por ejemplo, podría escribir código que permita que el <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> método para escribir un atributo con un valor vacío.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a67c7-736">For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to write an attribute with an empty value.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteBeginTag : string -&gt; unit&#xA;override this.WriteBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="a67c7-737">Elemento de marcado para el que se va a escribir la etiqueta de apertura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-737">The markup element of which to write the opening tag.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-738">Escribe el espaciado de tabulación y la etiqueta de apertura del elemento de marcado especificado en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-738">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-739">El <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> método no escribe el corchete angular de cierre (>) de la etiqueta de apertura del elemento de marcado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-739">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method does not write the closing angle bracket (>) of the markup element's opening tag.</span></span> <span data-ttu-id="a67c7-740">Esto permite la escritura de los atributos de marcado a la etiqueta de apertura del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-740">This allows the writing of markup attributes to the opening tag of the element.</span></span> <span data-ttu-id="a67c7-741">Use la <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constante para cerrar la etiqueta de apertura cuando se llama a la <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-741">Use the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant to close the opening tag when calling the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method.</span></span> <span data-ttu-id="a67c7-742">Use la <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> método con el <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> constante al escribir elementos de marcado que son de autocierre.</span><span class="sxs-lookup"><span data-stu-id="a67c7-742">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> constant when you write markup elements that are self-closing.</span></span>  
  
 <span data-ttu-id="a67c7-743">El <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> método lo usa controles de servidor personalizados que no permiten la asignación de etiqueta o atributo y representar elementos de marcado de la misma manera para cada solicitud.</span><span class="sxs-lookup"><span data-stu-id="a67c7-743">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-744">El código siguiente muestra la representación un `<img>` elemento en que ambas sobrecargas de los <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-744">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="a67c7-745">El ejemplo de código utiliza el siguiente proceso:</span><span class="sxs-lookup"><span data-stu-id="a67c7-745">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="a67c7-746">Las llamadas del <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> método, que representa los caracteres de apertura del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-746">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="a67c7-747">Las llamadas del <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> sobrecarga, que escribe una `alt` atributo y su valor en el `<img>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-747">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="a67c7-748">Llama a la <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> sobrecarga para representar un personalizado `myattribute` , un valor de atributo `No "encoding" required`y, a continuación, establece `fEncode` a `false`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-748">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="a67c7-749">Cierra la etiqueta de apertura del elemento y, a continuación, llama a la <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> método para cerrar el `<img>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-749">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="a67c7-750">Este ejemplo de código genera el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-750">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public virtual void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBreak();" />
      <MemberSignature Language="F#" Value="abstract member WriteBreak : unit -&gt; unit&#xA;override this.WriteBreak : unit -&gt; unit" Usage="htmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-751">Escribe un elemento de marcado <see langword="&lt;br /&gt;" /> en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-751">Writes a <see langword="&lt;br /&gt;" /> markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-752">Use el <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> método para representar la línea se interrumpe en el marcado de control o adaptador personalizado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-752">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to render line breaks in custom control or adapter markup.</span></span> <span data-ttu-id="a67c7-753">El <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> método escribe un espacio entre el `br` y `/` para mejorar la compatibilidad HTML.</span><span class="sxs-lookup"><span data-stu-id="a67c7-753">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes a space between the `br` and `/` for improved HTML compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-754">En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> método para escribir un `<br />` elemento al explorador solicitante después de la <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> método escribe el texto codificado `&lt;custID&gt; &amp; &lt;invoice#&gt;` marcado.</span><span class="sxs-lookup"><span data-stu-id="a67c7-754">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to write a `<br />` element to the requesting browser after the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method writes the encoded `&lt;custID&gt; &amp; &lt;invoice#&gt;` markup.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedText : string -&gt; unit&#xA;override this.WriteEncodedText : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="a67c7-755">Cadena de texto que se debe codificar y escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-755">The text string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-756">Codifica el texto especificado para el dispositivo solicitado y, a continuación, lo escribe en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-756">Encodes the specified text for the requesting device, and then writes it to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-757">Use la <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> método cuando una cadena contiene corchetes angulares (\< o >) o una y comercial (&).</span><span class="sxs-lookup"><span data-stu-id="a67c7-757">Use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method when a string contains angle brackets (\< or >) or an ampersand (&).</span></span>  
  
 <span data-ttu-id="a67c7-758">El <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> método usa la <xref:System.Web.HttpUtility.HtmlEncode%2A> método para realizar la codificación y también convierte el carácter Unicode `00A0` a `&nbsp;`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-758">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to perform the encoding and also converts Unicode character `00A0` to `&nbsp;`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-759">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> método para escribir el marcado codificado `&lt;custID&gt; &amp; &lt;invoice#&gt;` al flujo de salida.</span><span class="sxs-lookup"><span data-stu-id="a67c7-759">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method to write the encoded markup `&lt;custID&gt; &amp; &lt;invoice#&gt;` to the output stream.</span></span> <span data-ttu-id="a67c7-760">El <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> método escrituras `<br />`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-760">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes `<br />`.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a67c7-761">El valor de <paramref name="text" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-761">
              <paramref name="text" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrl">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrl (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrl : string -&gt; unit&#xA;override this.WriteEncodedUrl : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="a67c7-762">Cadena de dirección URL que se debe codificar y escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-762">The URL string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-763">Codifica la dirección URL especificada y, a continuación, la escribe en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-763">Encodes the specified URL, and then writes it to the output stream.</span>
          </span>
          <span data-ttu-id="a67c7-764">La dirección URL puede incluir parámetros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-764">The URL might include parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-765">El <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> método codifica la cadena en el `url` parámetro según la especificación para la codificación de dirección URL.</span><span class="sxs-lookup"><span data-stu-id="a67c7-765">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method encodes the string in the `url` parameter in accordance with the specification for URL encoding.</span></span> <span data-ttu-id="a67c7-766">No se codifican los parámetros que siguen el delimitador de signo de interrogación (?).</span><span class="sxs-lookup"><span data-stu-id="a67c7-766">The parameters that follow the question mark (?) delimiter are not encoded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-767">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> método, que genera el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-767">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method, which generates the following output:</span></span>  
  
 `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#3)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrlParameter">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrlParameter (string urlText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrlParameter(string urlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrlParameter (urlText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrlParameter(System::String ^ urlText);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrlParameter : string -&gt; unit&#xA;override this.WriteEncodedUrlParameter : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrlParameter urlText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlText">
          <span data-ttu-id="a67c7-768">Parámetro de cadena de dirección URL que se va a codificar y escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-768">The URL parameter string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-769">Codifica el parámetro de dirección URL especificado para el dispositivo que hace la solicitud y, a continuación, lo escribe en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-769">Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-770">Espacios de la parte de parámetro de una dirección URL se codifican como signos más (+) y signos igual (=) se codifican como `%3d`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-770">Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as `%3d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-771">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> método, que genera el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-771">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> method, which generates the following output:</span></span>  
  
 `ID%3dCity+State`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#4)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEndTag">
      <MemberSignature Language="C#" Value="public virtual void WriteEndTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEndTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEndTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteEndTag : string -&gt; unit&#xA;override this.WriteEndTag : string -&gt; unit" Usage="htmlTextWriter.WriteEndTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="a67c7-772">Elemento de marcado para el que se va a escribir la etiqueta de cierre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-772">The element to write the closing tag for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-773">Escribe el espaciado de tabulación y la etiqueta de cierre del elemento de marcado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-773">Writes any tab spacing and the closing tag of the specified markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-774">A diferencia de la <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> método, el <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> método no tiene ninguna lógica para realizar la etiqueta de cierre del elemento que coincide con la etiqueta de apertura correspondiente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-774">Unlike the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method, the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method has no logic to make the element end tag match the corresponding opening tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-775">El código siguiente muestra la representación un `<img>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-775">The following code example demonstrates rendering an `<img>` element.</span></span> <span data-ttu-id="a67c7-776">El ejemplo de código utiliza el siguiente proceso:</span><span class="sxs-lookup"><span data-stu-id="a67c7-776">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="a67c7-777">Las llamadas del <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> método para representar los caracteres de apertura del elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-777">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method to render the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="a67c7-778">Llama a las dos sobrecargas de los <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> método para escribir los atributos para el `<img>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-778">Calls the two overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write attributes to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="a67c7-779">Las llamadas del <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> método para cerrar el `<img>` elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-779">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteFullBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteFullBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFullBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFullBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteFullBeginTag : string -&gt; unit&#xA;override this.WriteFullBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteFullBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="a67c7-780">Elemento que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-780">The element to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-781">Escribe el espaciado de tabulación y la etiqueta de apertura del elemento de marcado especificado en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-781">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-782">El <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> método escribe automáticamente el corchete angular de cierre (>) de la etiqueta de apertura del elemento, a diferencia de la <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> método, que no escribe el corchete angular de cierre.</span><span class="sxs-lookup"><span data-stu-id="a67c7-782">The <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> method automatically writes the closing angle bracket (>) of the opening tag of the element, unlike the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which does not write the closing angle bracket.</span></span> <span data-ttu-id="a67c7-783">Use <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> para elementos de marcado que no tienen atributos.</span><span class="sxs-lookup"><span data-stu-id="a67c7-783">Use <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> for markup elements that have no attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-784">Escribe datos en un flujo de salida de <see cref="T:System.Web.UI.HtmlTextWriter" />, que especifican los parámetros sobrecargados, seguidos de una cadena de terminador de línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-784">Writes data to an <see cref="T:System.Web.UI.HtmlTextWriter" /> output stream, as specified by the overloaded parameters, followed by a line terminator string.</span>
          </span>
          <span data-ttu-id="a67c7-785">Todas las versiones de este método escriben el espaciado de tabulación pendiente en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-785">All versions of this method write any pending tab spacing to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-786">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-786">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-787">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-787">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine();" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : unit -&gt; unit&#xA;override this.WriteLine : unit -&gt; unit" Usage="htmlTextWriter.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-788">Escribe una cadena de terminador de línea en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-788">Writes a line terminator string to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-789">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-789">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-790">Para obtener más información, vea <xref:System.IO.TextWriter.WriteLine%2A>.</span><span class="sxs-lookup"><span data-stu-id="a67c7-790">For more information, see <xref:System.IO.TextWriter.WriteLine%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-791">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> método para insertar una línea después de un `<img>` se representa el elemento.</span><span class="sxs-lookup"><span data-stu-id="a67c7-791">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to insert a line after an `<img>` element is rendered.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : bool -&gt; unit&#xA;override this.WriteLine : bool -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-792">Objeto booleano que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-792">The Boolean to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-793">Escribe el espaciado de tabulación pendiente y la representación de texto de un valor booleano seguida de una cadena de terminador de línea en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-793">Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-794">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-794">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-795">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-795">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char -&gt; unit&#xA;override this.WriteLine : char -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-796">Carácter que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-796">The character to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-797">Escribe el espaciado de tabulación pendiente y un carácter Unicode, seguido de una cadena de terminador de línea en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-797">Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-798">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-798">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-799">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-799">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] -&gt; unit&#xA;override this.WriteLine : char[] -&gt; unit" Usage="htmlTextWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="a67c7-800">Matriz de caracteres que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-800">The character array to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-801">Escribe el espaciado de tabulación pendiente y una matriz de caracteres Unicode, seguido de una cadena de terminador de línea en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-801">Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-802">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-802">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-803">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-803">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-804">En esta sección se proporciona dos ejemplos de código.</span><span class="sxs-lookup"><span data-stu-id="a67c7-804">This section provides two code examples.</span></span> <span data-ttu-id="a67c7-805">El primero se muestra cómo crear una matriz.</span><span class="sxs-lookup"><span data-stu-id="a67c7-805">The first one demonstrates how to create an array.</span></span> <span data-ttu-id="a67c7-806">El segundo muestra cómo utilizar la matriz.</span><span class="sxs-lookup"><span data-stu-id="a67c7-806">The second one demonstrates how to use that array.</span></span>  
  
 <span data-ttu-id="a67c7-807">Estos ejemplos de código generan el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-807">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="a67c7-808">El ejemplo de código siguiente muestra cómo crear una matriz de caracteres que escribe `hello world`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-808">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="a67c7-809">Incluir en la matriz es el <xref:System.Web.UI.HtmlTextWriter.SpaceChar> campo, que crea un espacio entre las dos palabras.</span><span class="sxs-lookup"><span data-stu-id="a67c7-809">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="a67c7-810">El siguiente código en el ejemplo se presenta la `hello world` matriz de caracteres que se creó en el ejemplo anterior mediante la <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-810">The following code example renders the `hello world` character array that was created in the preceding example by using the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#5)]
 [!code-vb[MarkupTextWriter_Methods2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : double -&gt; unit&#xA;override this.WriteLine : double -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-811">Número de punto flotante de precisión doble que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-811">The double-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-812">Escribe el espaciado de tabulación pendiente y la representación de texto de un número de punto flotante de precisión doble seguida de una cadena de terminador de línea en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-812">Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-813">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-813">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-814">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-814">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-815">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> método para representar el valor de la <xref:System.Double.MaxValue?displayProperty=nameWithType> campo.</span><span class="sxs-lookup"><span data-stu-id="a67c7-815">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="a67c7-816">Este ejemplo de código genera el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-816">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#3)]
 [!code-vb[MarkupTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int -&gt; unit&#xA;override this.WriteLine : int -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-817">Entero de 32 bytes con signo que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-817">The 32-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-818">Escribe el espaciado de tabulación pendiente y la representación de texto de un entero de 32 bytes con signo, seguida de una cadena de terminador de línea, en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-818">Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-819">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-819">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-820">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-820">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int64 -&gt; unit&#xA;override this.WriteLine : int64 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-821">Entero de 64 bytes con signo que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-821">The 64-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-822">Escribe el espaciado de tabulación pendiente y la representación de texto de un entero de 64 bytes con signo, seguida de una cadena de terminador de línea, en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-822">Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-823">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-823">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-824">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-824">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj -&gt; unit&#xA;override this.WriteLine : obj -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-825">Objeto que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-825">The object to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-826">Escribe el espaciado de tabulación pendiente y la representación de texto de un objeto seguida de una cadena de terminador de línea en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-826">Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-827">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-827">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-828">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-828">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-829">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> método para representar el valor de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> propiedad a un control.</span><span class="sxs-lookup"><span data-stu-id="a67c7-829">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property to a control.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#4)]
 [!code-vb[MarkupTextWriter_Methods1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : single -&gt; unit&#xA;override this.WriteLine : single -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-830">Número de punto flotante de precisión sencilla que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-830">The single-precision floating point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-831">Escribe el espaciado de tabulación pendiente y la representación de texto de un número de punto flotante de precisión sencilla seguida de una cadena de terminador de línea en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-831">Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-832">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-832">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-833">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-833">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-834">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> método para representar el valor de la <xref:System.Single.Epsilon?displayProperty=nameWithType> campo, que es el menor valor posible de la <xref:System.Single> estructura.</span><span class="sxs-lookup"><span data-stu-id="a67c7-834">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="a67c7-835">Este ejemplo de código genera el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-835">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#9)]
 [!code-vb[MarkupTextWriter_Methods1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit&#xA;override this.WriteLine : string -&gt; unit" Usage="htmlTextWriter.WriteLine s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="a67c7-836">Cadena que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-836">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-837">Escribe el espaciado de tabulación pendiente y una cadena de texto, seguido de una cadena de terminador de línea en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-837">Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-838">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-838">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-839">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-839">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : uint32 -&gt; unit&#xA;override this.WriteLine : uint32 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a67c7-840">Entero de 4 bytes sin signo que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-840">The 4-byte unsigned integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-841">Escribe el espaciado de tabulación pendiente y la representación de texto de un entero de 4 bytes sin signo seguida de una cadena de terminador de línea en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-841">Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-842">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-842">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-843">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-843">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj -&gt; unit&#xA;override this.WriteLine : string * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="a67c7-844">Cadena que contiene cero o más elementos de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-844">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="a67c7-845">Objeto al que se va a aplicar el formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-845">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-846">Escribe el espaciado de tabulación pendiente y una cadena con formato que representa el texto de un objeto seguida de una cadena de terminador de línea en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-846">Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-847">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-847">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-848">El <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> método usa la misma semántica que el <xref:System.String.Format%28System.String%2CSystem.Object%29> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-848">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="a67c7-849">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-849">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-850">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> método para representar una cadena con formato con el valor de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a67c7-850">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#1)]
 [!code-vb[MarkupTextWriter_Methods1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj[] -&gt; unit&#xA;override this.WriteLine : string * obj[] -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="a67c7-851">Cadena que contiene cero o más elementos de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-851">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="a67c7-852">Matriz de objetos a la que se va a aplicar el formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-852">An object array to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-853">Escribe el espaciado de tabulación pendiente y una cadena con formato que representa el texto de un objeto seguida de una cadena de terminador de línea en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-853">Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-854">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-854">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-855">El <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> método usa la misma semántica que el <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-855">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> method.</span></span> <span data-ttu-id="a67c7-856">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-856">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-857">Esta sección contiene dos ejemplos de código.</span><span class="sxs-lookup"><span data-stu-id="a67c7-857">This section contains two code examples.</span></span> <span data-ttu-id="a67c7-858">El primero se muestra cómo representar una cadena y una matriz en el flujo de salida.</span><span class="sxs-lookup"><span data-stu-id="a67c7-858">The first one demonstrates how to render a string and an array to the output stream.</span></span> <span data-ttu-id="a67c7-859">La segunda muestra cómo declarar la matriz.</span><span class="sxs-lookup"><span data-stu-id="a67c7-859">The second one shows how to declare the array.</span></span>  
  
 <span data-ttu-id="a67c7-860">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> método para representar una cadena con formato y el contenido de una matriz de objetos en el flujo de salida.</span><span class="sxs-lookup"><span data-stu-id="a67c7-860">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the contents of an object array to the output stream.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#2)]
 [!code-vb[MarkupTextWriter_Methods2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#2)]  
  
 <span data-ttu-id="a67c7-861">El ejemplo de código siguiente muestra cómo declarar la matriz de objetos que se representa en el ejemplo de código anterior.</span><span class="sxs-lookup"><span data-stu-id="a67c7-861">The following code example shows how to declare the object array that was rendered in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#7)]
 [!code-vb[MarkupTextWriter_Methods2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] * int * int -&gt; unit&#xA;override this.WriteLine : char[] * int * int -&gt; unit" Usage="htmlTextWriter.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="a67c7-862">Matriz de caracteres con que se va a escribir texto en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-862">The character array from which to write text to the output stream.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a67c7-863">Posición de la matriz de caracteres donde se inicia la operación de escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-863">The location in the character array where writing begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a67c7-864">Número de caracteres de la matriz que se van a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-864">The number of characters in the array to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-865">Escribe el espaciado de tabulación pendiente y una submatriz de caracteres Unicode, seguido de una cadena de terminador de línea en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-865">Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-866">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-866">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-867">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-867">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-868">Esta sección contiene dos ejemplos de código.</span><span class="sxs-lookup"><span data-stu-id="a67c7-868">This section contains two code examples.</span></span> <span data-ttu-id="a67c7-869">El primero se muestra cómo crear una matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a67c7-869">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="a67c7-870">El segundo muestra cómo usar la matriz.</span><span class="sxs-lookup"><span data-stu-id="a67c7-870">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="a67c7-871">Estos ejemplos de código generan el siguiente marcado:</span><span class="sxs-lookup"><span data-stu-id="a67c7-871">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="a67c7-872">En el ejemplo de código siguiente se muestra cómo se crea una matriz de caracteres que deletrear `hello world`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-872">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="a67c7-873">Incluir en la matriz es el <xref:System.Web.UI.HtmlTextWriter.SpaceChar> campo, que crea un espacio entre las dos palabras.</span><span class="sxs-lookup"><span data-stu-id="a67c7-873">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="a67c7-874">El siguiente ejemplo de código utiliza el `index` y `count` parámetros de la <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> método para representar los cinco primeros caracteres de la matriz creada en el ejemplo de código anterior.</span><span class="sxs-lookup"><span data-stu-id="a67c7-874">The following code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the first five characters of the array created in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#4)]
 [!code-vb[MarkupTextWriter_Methods2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj * obj -&gt; unit&#xA;override this.WriteLine : string * obj * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="a67c7-875">Cadena que contiene cero o más elementos de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-875">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="a67c7-876">Objeto al que se va a aplicar el formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-876">An object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="a67c7-877">Objeto al que se va a aplicar el formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-877">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-878">Escribe el espaciado de tabulación pendiente y una cadena con formato que contiene la representación de texto de dos objetos seguida de una cadena de terminador de línea en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-878">Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-879">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-879">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-880">El <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> método usa la misma semántica que el <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> método.</span><span class="sxs-lookup"><span data-stu-id="a67c7-880">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="a67c7-881">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-881">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a67c7-882">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> método para representar una cadena con formato y los valores de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propiedad y el <xref:System.DateTime.Today%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a67c7-882">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property and the <xref:System.DateTime.Today%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#2)]
 [!code-vb[MarkupTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineNoTabs">
      <MemberSignature Language="C#" Value="public void WriteLineNoTabs (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLineNoTabs(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLineNoTabs (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLineNoTabs(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.WriteLineNoTabs : string -&gt; unit" Usage="htmlTextWriter.WriteLineNoTabs s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="a67c7-883">Cadena que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-883">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-884">Escribe una cadena seguida de una cadena de terminador de línea en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-884">Writes a string, followed by a line terminator string, to the output stream.</span>
          </span>
          <span data-ttu-id="a67c7-885">Este método omite el espaciado de tabulación especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-885">This method ignores any specified tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-886">Use la <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> método en lugar de <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> método cuando no desee presentar el espaciado de tabulación por delante de la cadena representada `s`.</span><span class="sxs-lookup"><span data-stu-id="a67c7-886">Use the <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> method rather than the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method when you do not want to render any tab spacing ahead of the rendered string `s`.</span></span>  
  
 <span data-ttu-id="a67c7-887">La cadena de terminador de línea predeterminado es un retorno de carro seguido de una línea ("\r\n") de la fuente.</span><span class="sxs-lookup"><span data-stu-id="a67c7-887">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="a67c7-888">El <xref:System.IO.TextWriter.WriteLine%2A> método base se usa para escribir el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-888">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a67c7-889">Escribe un atributo de estilo y su valor en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-889">Writes a style attribute and its value to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string -&gt; unit&#xA;override this.WriteStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a67c7-890">Estilo de atributo que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-890">The style attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-891">Valor asignado al atributo de estilo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-891">The value assigned to the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-892">Escribe el atributo de estilo especificado en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-892">Writes the specified style attribute to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-893">El <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> método escribe el atributo de estilo de la forma siguiente:</span><span class="sxs-lookup"><span data-stu-id="a67c7-893">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="a67c7-894">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="a67c7-894">`name` `=` `value` `;`</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string * bool -&gt; unit&#xA;override this.WriteStyleAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a67c7-895">Estilo de atributo que se va a escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-895">The style attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a67c7-896">Valor asignado al atributo de estilo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-896">The value assigned to the style attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="a67c7-897">
            <see langword="true" /> para codificar el atributo de estilo y su valor asignado; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-897">
              <see langword="true" /> to encode the style attribute and its assigned value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-898">Escribe el atributo de estilo y el valor especificados en el flujo de salida y, si se especifica, codifica el valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-898">Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-899">El <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> método escribe el atributo de estilo de la forma siguiente:</span><span class="sxs-lookup"><span data-stu-id="a67c7-899">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="a67c7-900">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="a67c7-900">`name` `=` `value` `;`</span></span>  
  
 <span data-ttu-id="a67c7-901">El <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> método se usa para codificar el `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a67c7-901">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method is used to encode the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteUrlEncodedString">
      <MemberSignature Language="C#" Value="protected void WriteUrlEncodedString (string text, bool argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteUrlEncodedString(string text, bool argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteUrlEncodedString (text As String, argument As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteUrlEncodedString(System::String ^ text, bool argument);" />
      <MemberSignature Language="F#" Value="member this.WriteUrlEncodedString : string * bool -&gt; unit" Usage="htmlTextWriter.WriteUrlEncodedString (text, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="argument" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="a67c7-902">Cadena que se va a codificar y escribir en el flujo de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-902">The string to encode and write to the output stream.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="a67c7-903">
            <see langword="true" /> para codificar la cadena como parte de la sección de parámetro de la dirección URL; <see langword="false" /> para codificar la cadena como parte de la sección de ruta de acceso de la dirección URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-903">
              <see langword="true" /> to encode the string as a part of the parameter section of the URL; <see langword="false" /> to encode the string as part of the path section of the URL.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a67c7-904">Escribe la cadena especificada, codificándola en función de los requisitos de direcciones URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a67c7-904">Writes the specified string, encoding it according to URL requirements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a67c7-905">El <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> método codifica caracteres que se podrían considerar delimitadores de direcciones URL (depende de la configuración de `argument`) en las cadenas del formulario `%xx`, si el código ASCII es inferior a 128; de lo contrario, `%uxxxx`, donde `x` es un dígito hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="a67c7-905">The <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method encodes characters that could be considered URL delimiters (dependent on the setting of `argument`) into strings of the form `%xx`, if the ASCII code is less than 128; otherwise, `%uxxxx`, where `x` is a hexadecimal digit.</span></span>  
  
 <span data-ttu-id="a67c7-906">El <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> y <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> métodos usan el <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> método como un método de utilidad.</span><span class="sxs-lookup"><span data-stu-id="a67c7-906">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> methods use the <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method as a utility method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
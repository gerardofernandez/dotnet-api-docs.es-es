<Type Name="ViewStateException" FullName="System.Web.UI.ViewStateException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd93d36bdc4843c5c546a01f9fe4d667e7f3c142" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52341615" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ViewStateException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ViewStateException extends System.Exception implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ViewStateException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ViewStateException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewStateException sealed : Exception" />
  <TypeSignature Language="F#" Value="type ViewStateException = class&#xA;    inherit Exception&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9d983-101">Representa la excepción que se produce cuando el estado de vista no se puede cargar ni validar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d983-101">Represents the exception that is thrown when the view state cannot be loaded or validated.</span>
      </span>
      <span data-ttu-id="9d983-102">Esta clase no puede heredarse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d983-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d983-103">Si se produce una excepción cuando la página carga la información de estado de vista, la página se crea un <xref:System.Web.UI.ViewStateException> objeto y lo pasa como una excepción interna dentro de un <xref:System.Web.HttpException> excepción.</span><span class="sxs-lookup"><span data-stu-id="9d983-103">If an exception occurs when the page loads the view-state information, the page creates a <xref:System.Web.UI.ViewStateException> object and passes it as an inner exception within an <xref:System.Web.HttpException> exception.</span></span> <span data-ttu-id="9d983-104">El <xref:System.Web.HttpException> excepción se produce de nuevo para administrar la aplicación.</span><span class="sxs-lookup"><span data-stu-id="9d983-104">The <xref:System.Web.HttpException> exception is re-thrown to be handled by the application.</span></span>  
  
 <span data-ttu-id="9d983-105">El <xref:System.Web.UI.ViewStateException> clase almacena información sobre la excepción en el <xref:System.Web.UI.ViewStateException.Message%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d983-105">The <xref:System.Web.UI.ViewStateException> class stores information about the exception in the <xref:System.Web.UI.ViewStateException.Message%2A> property.</span></span> <span data-ttu-id="9d983-106">Si la solicitud tiene permiso para acceder a la <xref:System.Web.HttpRequest.ServerVariables%2A> propiedad, el <xref:System.Web.UI.ViewStateException.Message%2A> propiedad contiene los valores devueltos desde el <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, y <xref:System.Web.UI.ViewStateException.Path%2A> propiedades; en caso contrario, el <xref:System.Web.UI.ViewStateException.Message%2A> propiedad contiene un mensaje de error genérico del estado de vista.</span><span class="sxs-lookup"><span data-stu-id="9d983-106">If the request has permission to access the <xref:System.Web.HttpRequest.ServerVariables%2A> property, then the <xref:System.Web.UI.ViewStateException.Message%2A> property contains the values returned from the <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, and <xref:System.Web.UI.ViewStateException.Path%2A> properties; otherwise, the <xref:System.Web.UI.ViewStateException.Message%2A> property contains a generic view-state error message.</span></span>  
  
 <span data-ttu-id="9d983-107">Una excepción del estado de vista puede ser el resultado de un error de validación de códigos de autenticación de mensajes (MAC).</span><span class="sxs-lookup"><span data-stu-id="9d983-107">A view-state exception can be the result of a Message Authentication Codes (MAC) validation error.</span></span> <span data-ttu-id="9d983-108">Si el atributo de página `enableViewStateMac` está establecido en `true`, información de estado de vista se codifica con un identificador de MAC.</span><span class="sxs-lookup"><span data-stu-id="9d983-108">If the page attribute `enableViewStateMac` is set to `true`, view-state information is encoded with a MAC identifier.</span></span> <span data-ttu-id="9d983-109">Cuando se registra la información de estado de vista al servidor, la página comprueba la codificación para garantizar que no se ha modificado por el usuario.</span><span class="sxs-lookup"><span data-stu-id="9d983-109">When the view-state information is posted back to the server, the page verifies the encoding to ensure that it has not been altered by the user.</span></span> <span data-ttu-id="9d983-110">Si la página no puede validar la codificación de MAC en la información de estado de vista, producirá un <xref:System.Web.HttpException> excepción con el <xref:System.Web.UI.ViewStateException> objeto como una excepción interna.</span><span class="sxs-lookup"><span data-stu-id="9d983-110">If the page cannot validate the MAC encoding on the view-state information, it will throw an <xref:System.Web.HttpException> exception with the <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span>  
  
 <span data-ttu-id="9d983-111">Para que la validación de MAC se realice correctamente, la información de estado de vista debe se aplica un algoritmo hash con la misma clave cuando se envía y recibe.</span><span class="sxs-lookup"><span data-stu-id="9d983-111">For MAC validation to succeed, the view-state information must be hashed by the same key when it is sent and received.</span></span> <span data-ttu-id="9d983-112">Dentro de una granja de servidores Web, la clave del equipo en cada servidor debe establecerse en una clave común.</span><span class="sxs-lookup"><span data-stu-id="9d983-112">Within a Web farm, the machine key on each server should be set to a common key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d983-113">En el ejemplo de código siguiente se muestra cómo implementar un método que deserializa una cadena codificada en base64 y devuelve un <xref:System.Collections.ICollection> colección de valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d983-113">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="9d983-114">El <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> método puede producir un <xref:System.Web.HttpException> excepción que contiene un <xref:System.Web.UI.ViewStateException> objeto como una excepción interna.</span><span class="sxs-lookup"><span data-stu-id="9d983-114">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="9d983-115">El ejemplo muestra cómo se puede detectar un <xref:System.Web.HttpException> excepción y recuperar las propiedades de la <xref:System.Web.UI.ViewStateException> objeto.</span><span class="sxs-lookup"><span data-stu-id="9d983-115">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.MachineKeySection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ViewStateException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ViewStateException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ViewStateException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d983-116">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ViewStateException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-116">Initializes a new instance of the <see cref="T:System.Web.UI.ViewStateException" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeySection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="viewStateException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="9d983-117">Objeto que contiene los datos del objeto serializados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-117">The object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="9d983-118">Información contextual acerca del origen o del destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-118">The contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d983-119">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.ViewStateException" /> con datos serializados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-119">Initializes a new instance of the <see cref="T:System.Web.UI.ViewStateException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.IsConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConnected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConnected : bool" Usage="System.Web.UI.ViewStateException.IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d983-120">Obtiene un valor que indica si el cliente está conectado al servidor actualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-120">Gets a value indicating whether the client is currently connected to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d983-121">
            <see langword="true" /> si el cliente sigue conectado al servidor; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-121">
              <see langword="true" /> if the client is still connected to the server; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d983-122">Esta propiedad devuelve el mismo valor que una llamada a la <xref:System.Web.HttpResponse.IsClientConnected%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d983-122">This property returns the same value as calling the <xref:System.Web.HttpResponse.IsClientConnected%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d983-123">En el ejemplo de código siguiente se muestra cómo implementar un método que deserializa una cadena codificada en base64 y devuelve un <xref:System.Collections.ICollection> colección de valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d983-123">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="9d983-124">El <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> método puede producir un <xref:System.Web.HttpException> excepción que contiene un <xref:System.Web.UI.ViewStateException> objeto como una excepción interna.</span><span class="sxs-lookup"><span data-stu-id="9d983-124">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="9d983-125">El ejemplo muestra cómo se puede detectar un <xref:System.Web.HttpException> excepción y recuperar las propiedades de la <xref:System.Web.UI.ViewStateException> objeto.</span><span class="sxs-lookup"><span data-stu-id="9d983-125">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Web.UI.ViewStateException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d983-126">Obtiene información de depuración sobre la solicitud HTTP que produjo una excepción del estado de vista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-126">Gets debugging information about the HTTP request that resulted in a view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d983-127">Objeto <see cref="T:System.String" /> que contiene el mensaje con formato con información sobre la excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-127">A <see cref="T:System.String" /> containing the formatted message with information about the exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d983-128">Si la solicitud no tiene permiso para acceder a las variables de servidor, esta propiedad devuelve un mensaje de error genérico del estado de vista.</span><span class="sxs-lookup"><span data-stu-id="9d983-128">If the request does not have permission to access the server variables, then this property returns a generic view-state error message.</span></span> <span data-ttu-id="9d983-129">Si la solicitud tiene permiso para acceder a las variables de servidor, el <xref:System.Web.UI.ViewStateException.Message%2A> propiedad contiene los valores devueltos desde el <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, y <xref:System.Web.UI.ViewStateException.Path%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="9d983-129">If the request does have permission to access server variables, the <xref:System.Web.UI.ViewStateException.Message%2A> property contains the values returned from the <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, and <xref:System.Web.UI.ViewStateException.Path%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.UI.ViewStateException.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d983-130">Obtiene la ruta de acceso de la solicitud HTTP que produjo una excepción del estado de vista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-130">Gets the path of the HTTP request that resulted in a view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d983-131">Objeto <see cref="T:System.String" /> con la ruta de acceso de la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-131">A <see cref="T:System.String" /> containing the path from the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d983-132">Esta propiedad devuelve el mismo valor que el `PATH_INFO` variable en el <xref:System.Web.HttpRequest.ServerVariables%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d983-132">This property returns the same value as the `PATH_INFO` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span> <span data-ttu-id="9d983-133">Devuelve la parte de la ruta de acceso después del nombre de host.</span><span class="sxs-lookup"><span data-stu-id="9d983-133">It returns the portion of the path after the host name.</span></span> <span data-ttu-id="9d983-134">Por ejemplo, en la dirección URL http://www.contoso.com/virdir/page.html, <xref:System.Web.UI.ViewStateException.Path%2A> devolvería/virdir/page.HTML.</span><span class="sxs-lookup"><span data-stu-id="9d983-134">For example, in the URL http://www.contoso.com/virdir/page.html, <xref:System.Web.UI.ViewStateException.Path%2A> would return /virdir/page.html.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d983-135">En el ejemplo de código siguiente se muestra cómo implementar un método que deserializa una cadena codificada en base64 y devuelve un <xref:System.Collections.ICollection> colección de valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d983-135">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="9d983-136">El <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> método puede producir un <xref:System.Web.HttpException> excepción que contiene un <xref:System.Web.UI.ViewStateException> objeto como una excepción interna.</span><span class="sxs-lookup"><span data-stu-id="9d983-136">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="9d983-137">El ejemplo muestra cómo se puede detectar un <xref:System.Web.HttpException> excepción y recuperar las propiedades de la <xref:System.Web.UI.ViewStateException> objeto.</span><span class="sxs-lookup"><span data-stu-id="9d983-137">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistedState">
      <MemberSignature Language="C#" Value="public string PersistedState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PersistedState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.PersistedState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistedState As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PersistedState { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PersistedState : string" Usage="System.Web.UI.ViewStateException.PersistedState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d983-138">Obtiene el contenido de la cadena del estado de vista que, al leerse, produjo la excepción del estado de vista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-138">Gets the contents of the view-state string that, when read, caused the view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d983-139">Objeto <see cref="T:System.String" /> con los valores del estado de vista que produjeron la excepción del estado de vista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-139">A <see cref="T:System.String" /> containing the view-state values that caused the view-state exception.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Referer">
      <MemberSignature Language="C#" Value="public string Referer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Referer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Referer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Referer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Referer { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Referer : string" Usage="System.Web.UI.ViewStateException.Referer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d983-140">Obtiene la dirección URL de la página vinculada a la página en la que se produjo la excepción del estado de vista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-140">Gets the URL of the page that linked to the page where the view-state exception occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d983-141">Objeto <see cref="T:System.String" /> que contiene la cadena HTTP de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-141">A <see cref="T:System.String" /> containing the HTTP referrer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d983-142">Esta propiedad devuelve el mismo valor que el `HTTP_REFERER` variable en el <xref:System.Web.HttpRequest.ServerVariables%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d983-142">This property returns the same value as the `HTTP_REFERER` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span> <span data-ttu-id="9d983-143">El valor es una cadena vacía ("") si no hay ninguna solicitud anterior vinculada a la página.</span><span class="sxs-lookup"><span data-stu-id="9d983-143">The value is an empty string ("") if no previous request linked to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d983-144">En el ejemplo de código siguiente se muestra cómo implementar un método que deserializa una cadena codificada en base64 y devuelve un <xref:System.Collections.ICollection> colección de valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d983-144">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="9d983-145">El <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> método puede producir un <xref:System.Web.HttpException> excepción que contiene un <xref:System.Web.UI.ViewStateException> objeto como una excepción interna.</span><span class="sxs-lookup"><span data-stu-id="9d983-145">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="9d983-146">El ejemplo muestra cómo se puede detectar un <xref:System.Web.HttpException> excepción y recuperar las propiedades de la <xref:System.Web.UI.ViewStateException> objeto.</span><span class="sxs-lookup"><span data-stu-id="9d983-146">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public string RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RemoteAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteAddress : string" Usage="System.Web.UI.ViewStateException.RemoteAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d983-147">Obtiene la dirección IP de la solicitud HTTP que produjo una excepción del estado de vista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-147">Gets the IP address of the HTTP request that resulted in a view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d983-148">Objeto <see cref="T:System.String" /> con la dirección IP remota del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-148">A <see cref="T:System.String" /> containing the remote IP address of the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d983-149">Esta propiedad devuelve el mismo valor que el `REMOTE_ADDR` variable en el <xref:System.Web.HttpRequest.ServerVariables%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d983-149">This property returns the same value as the `REMOTE_ADDR` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemotePort">
      <MemberSignature Language="C#" Value="public string RemotePort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemotePort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.RemotePort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemotePort As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RemotePort { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemotePort : string" Usage="System.Web.UI.ViewStateException.RemotePort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d983-150">Obtiene el número de puerto de la solicitud HTTP que produjo una excepción del estado de vista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-150">Gets the port number of the HTTP request that resulted in a view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d983-151">Objeto <see cref="T:System.String" /> con el número de puerto remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-151">A <see cref="T:System.String" /> containing the remote port number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d983-152">Esta propiedad devuelve el mismo valor que el `REMOTE_PORT` variable en el <xref:System.Web.HttpRequest.ServerVariables%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d983-152">This property returns the same value as the `REMOTE_PORT` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Web.UI.ViewStateException.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d983-153">Obtiene el tipo de explorador de la solicitud HTTP que produjo una excepción del estado de vista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-153">Gets the browser type of the HTTP request that resulted in a view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d983-154">Objeto <see cref="T:System.String" /> con el agente de usuario, que es normalmente el tipo de explorador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d983-154">A <see cref="T:System.String" /> containing the user agent, which is typically the browser type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d983-155">Esta propiedad devuelve el mismo valor que el `HTTP_USER_AGENT` variable en el <xref:System.Web.HttpRequest.ServerVariables%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d983-155">This property returns the same value as the `HTTP_USER_AGENT` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d983-156">En el ejemplo de código siguiente se muestra cómo implementar un método que deserializa una cadena codificada en base64 y devuelve un <xref:System.Collections.ICollection> colección de valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d983-156">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="9d983-157">El <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> método puede producir un <xref:System.Web.HttpException> excepción que contiene un <xref:System.Web.UI.ViewStateException> objeto como una excepción interna.</span><span class="sxs-lookup"><span data-stu-id="9d983-157">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="9d983-158">El ejemplo muestra cómo se puede detectar un <xref:System.Web.HttpException> excepción y recuperar las propiedades de la <xref:System.Web.UI.ViewStateException> objeto.</span><span class="sxs-lookup"><span data-stu-id="9d983-158">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
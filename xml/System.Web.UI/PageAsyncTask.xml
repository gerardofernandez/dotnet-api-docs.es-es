<Type Name="PageAsyncTask" FullName="System.Web.UI.PageAsyncTask">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d1079f4cbaf4f9bde92409a2b96155ff21afa4a7" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39813321" /></Metadata><TypeSignature Language="C#" Value="public sealed class PageAsyncTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PageAsyncTask extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageAsyncTask" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PageAsyncTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAsyncTask sealed" />
  <TypeSignature Language="F#" Value="type PageAsyncTask = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f81ad-101">Contiene información sobre una tarea asincrónica registrada en una página.</span><span class="sxs-lookup"><span data-stu-id="f81ad-101">Contains information about an asynchronous task registered to a page.</span></span> <span data-ttu-id="f81ad-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="f81ad-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f81ad-103">Versión de ASP.NET 2.0 permite registrar varias tareas a una página y ejecutarlas de forma asincrónica antes de representar la página.</span><span class="sxs-lookup"><span data-stu-id="f81ad-103">ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</span></span> <span data-ttu-id="f81ad-104">Puede especificar que una tarea se ejecute de forma asincrónica si es un proceso lento y no desea que otros procesos se detengan mientras se esté ejecutando.</span><span class="sxs-lookup"><span data-stu-id="f81ad-104">You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</span></span> <span data-ttu-id="f81ad-105">Las tareas asincrónicas se pueden ejecutar en paralelo o secuencialmente.</span><span class="sxs-lookup"><span data-stu-id="f81ad-105">The asynchronous tasks can be executed in parallel or sequentially.</span></span>  
  
 <span data-ttu-id="f81ad-106">Un <xref:System.Web.UI.PageAsyncTask> objeto debe estar registrado en la página a través de la <xref:System.Web.UI.Page.RegisterAsyncTask%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f81ad-106">A <xref:System.Web.UI.PageAsyncTask> object must be registered to the page through the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method.</span></span> <span data-ttu-id="f81ad-107">La propia página no tiene que procesarse de forma asincrónica para ejecutar tareas asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="f81ad-107">The page itself does not have to be processed asynchronously to execute asynchronous tasks.</span></span> <span data-ttu-id="f81ad-108">Puede establecer el `Async` atributo como `true` (como se muestra en el ejemplo de código siguiente) o `false` en la página de directiva y las tareas asincrónicas se seguirán procesando en forma asincrónica:</span><span class="sxs-lookup"><span data-stu-id="f81ad-108">You can set the `Async` attribute to either `true` (as shown in the following code example) or `false` on the page directive and the asynchronous tasks will still be processed asynchronously:</span></span>  
  
 `<%@ Page Async="true" %>`  
  
 <span data-ttu-id="f81ad-109">Cuando el `Async` atributo está establecido en `false`, se bloqueará el subproceso que ejecuta la página hasta que se completen todas las tareas asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="f81ad-109">When the `Async` attribute is set to `false`, the thread that executes the page will be blocked until all asynchronous tasks are complete.</span></span>  
  
 <span data-ttu-id="f81ad-110">Todas las tareas asincrónicas registran antes de la <xref:System.Web.UI.Page.PreRenderComplete> evento se ejecutará automáticamente por la página si ha no se ha ejecutado.</span><span class="sxs-lookup"><span data-stu-id="f81ad-110">Any asynchronous tasks registered before the <xref:System.Web.UI.Page.PreRenderComplete> event will be executed automatically by the page if they have not already been executed.</span></span> <span data-ttu-id="f81ad-111">Las tareas asincrónicas registradas después la <xref:System.Web.UI.Page.PreRenderComplete> eventos se deben ejecutar explícitamente mediante el <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f81ad-111">Those asynchronous tasks registered after the <xref:System.Web.UI.Page.PreRenderComplete> event must be executed explicitly through the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method.</span></span> <span data-ttu-id="f81ad-112">El <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> método también se puede utilizar para iniciar tareas antes de la <xref:System.Web.UI.Page.PreRenderComplete> eventos.</span><span class="sxs-lookup"><span data-stu-id="f81ad-112">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method can also be used to start tasks before the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="f81ad-113">El <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> método ejecuta todas las tareas asincrónicas registradas en la página que no se han ejecutado.</span><span class="sxs-lookup"><span data-stu-id="f81ad-113">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method executes all the registered asynchronous tasks on the page that have not been executed.</span></span>  
  
 <span data-ttu-id="f81ad-114">De forma predeterminada, una tarea asincrónica agotará el tiempo si no se ha completado dentro de 45 segundos.</span><span class="sxs-lookup"><span data-stu-id="f81ad-114">By default, an asynchronous task will time out if it has not completed within 45 seconds.</span></span> <span data-ttu-id="f81ad-115">Puede especificar un valor de tiempo de espera diferente en el archivo Web.config o la directiva de página.</span><span class="sxs-lookup"><span data-stu-id="f81ad-115">You can specify a different time-out value in either the Web.config file or the page directive.</span></span> <span data-ttu-id="f81ad-116">El `<pages>` sección del archivo Web.config contiene un `asyncTimeout` atributo, tal como se muestra a continuación.</span><span class="sxs-lookup"><span data-stu-id="f81ad-116">The `<pages>` section of the Web.config file contains an `asyncTimeout` attribute, as shown below.</span></span>  
  
 `<system.web>`  
  
 `<pages asyncTimeout="30">`  
  
 `</pages>`  
  
 `</system.web>`  
  
 <span data-ttu-id="f81ad-117">La directiva de página contiene un `AsyncTimeout` atributo.</span><span class="sxs-lookup"><span data-stu-id="f81ad-117">The page directive contains an `AsyncTimeout` attribute.</span></span>  
  
 `<%@ Page AsyncTimeout="30" %>`  
  
   
  
## Examples  
 <span data-ttu-id="f81ad-118">El ejemplo de código siguiente registra tres tareas asincrónicas en una página y los ejecuta en paralelo.</span><span class="sxs-lookup"><span data-stu-id="f81ad-118">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="f81ad-119">Cada tarea llama a un método que simplemente hace que el subproceso entre en suspensión durante 5 segundos.</span><span class="sxs-lookup"><span data-stu-id="f81ad-119">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f81ad-120">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.PageAsyncTask" />.</span><span class="sxs-lookup"><span data-stu-id="f81ad-120">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of CancellationToken, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="f81ad-121">Un controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="f81ad-121">An event handler.</span></span></param>
        <summary><span data-ttu-id="f81ad-122">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.PageAsyncTask" /> mediante un controlador de eventos que habilita la tarea que se va a cancelar.</span><span class="sxs-lookup"><span data-stu-id="f81ad-122">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f81ad-123">Este constructor se ajusta un <xref:System.Web.TaskEventHandler> delegar para que el <xref:System.Web.UI.PageAsyncTask> objeto puede integrar el código asincrónico (según <xref:System.Threading.Tasks.Task> objetos) con la característica de las páginas asincrónicas de ASP.NET Web Forms existente.</span><span class="sxs-lookup"><span data-stu-id="f81ad-123">This constructor wraps a <xref:System.Web.TaskEventHandler> delegate so that the <xref:System.Web.UI.PageAsyncTask> object can integrate asynchronous code (based on <xref:System.Threading.Tasks.Task> objects) with the existing ASP.NET Web Forms asynchronous pages feature.</span></span> <span data-ttu-id="f81ad-124">ASP.NET señalará el <xref:System.Threading.CancellationToken> objeto que se pasa a un <xref:System.Web.TaskEventHandler> delegar cancelación según la <xref:System.Web.UI.Page.AsyncTimeout%2A> atributo establecido el `@ Page` la directiva de la página Web.</span><span class="sxs-lookup"><span data-stu-id="f81ad-124">ASP.NET will signal the <xref:System.Threading.CancellationToken> object that is passed to a <xref:System.Web.TaskEventHandler> delegate for cancellation based on the <xref:System.Web.UI.Page.AsyncTimeout%2A> attribute set in the `@ Page` directive of the Web page.</span></span> <span data-ttu-id="f81ad-125">Cuando el <xref:System.Web.UI.Page.AsyncTimeout%2A> se alcanzó el valor, el <xref:System.Threading.CancellationToken> se señalará el objeto.</span><span class="sxs-lookup"><span data-stu-id="f81ad-125">When the <xref:System.Web.UI.Page.AsyncTimeout%2A> value has been reached, the <xref:System.Threading.CancellationToken> object will be signaled.</span></span> <span data-ttu-id="f81ad-126">El `CancellationToken` parámetro debe pasarse a cualquier API asincrónicas que se llama a la implementación de la <xref:System.Web.TaskEventHandler> clase.</span><span class="sxs-lookup"><span data-stu-id="f81ad-126">The `CancellationToken` parameter must be passed to any asynchronous APIs that are called by your implementation of the <xref:System.Web.TaskEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="f81ad-127">Un controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="f81ad-127">An event handler.</span></span></param>
        <summary><span data-ttu-id="f81ad-128">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.PageAsyncTask" /> mediante un controlador de eventos que habilita la tarea que se va a controlar.</span><span class="sxs-lookup"><span data-stu-id="f81ad-128">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be handled.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="f81ad-129">Controlador al que se debe llamar al iniciar una tarea asincrónica.</span><span class="sxs-lookup"><span data-stu-id="f81ad-129">The handler to call when beginning an asynchronous task.</span></span></param>
        <param name="endHandler"><span data-ttu-id="f81ad-130">Controlador al que se debe llamar cuando la tarea se lleva a cabo correctamente en el período del tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="f81ad-130">The handler to call when the task is completed successfully within the time-out period.</span></span></param>
        <param name="timeoutHandler"><span data-ttu-id="f81ad-131">Controlador al que se debe llamar cuando la tarea no se lleva a cabo correctamente en el período del tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="f81ad-131">The handler to call when the task is not completed successfully within the time-out period.</span></span></param>
        <param name="state"><span data-ttu-id="f81ad-132">Objeto que representa el estado de la tarea.</span><span class="sxs-lookup"><span data-stu-id="f81ad-132">The object that represents the state of the task.</span></span></param>
        <summary><span data-ttu-id="f81ad-133">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.PageAsyncTask" /> con el valor predeterminado para la ejecución simultánea.</span><span class="sxs-lookup"><span data-stu-id="f81ad-133">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the default value for executing in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f81ad-134">Esta implementación del constructor establece la <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> propiedad `false` por lo que la tarea asincrónica no se procesa en paralelo con otras tareas en la página.</span><span class="sxs-lookup"><span data-stu-id="f81ad-134">This implementation of the constructor sets the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property to `false` so the asynchronous task is not processed in parallel with other tasks on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f81ad-135">El parámetro <paramref name="beginHandler" /> o <paramref name="endHandler" /> no se ha especificado.</span><span class="sxs-lookup"><span data-stu-id="f81ad-135">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object, executeInParallel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state, bool executeInParallel);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj * bool -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state, executeInParallel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="executeInParallel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="f81ad-136">Controlador al que se debe llamar al iniciar una tarea asincrónica.</span><span class="sxs-lookup"><span data-stu-id="f81ad-136">The handler to call when beginning an asynchronous task.</span></span></param>
        <param name="endHandler"><span data-ttu-id="f81ad-137">Controlador al que se debe llamar cuando la tarea se lleva a cabo correctamente en el período del tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="f81ad-137">The handler to call when the task is completed successfully within the time-out period.</span></span></param>
        <param name="timeoutHandler"><span data-ttu-id="f81ad-138">Controlador al que se debe llamar cuando la tarea no se lleva a cabo correctamente en el período del tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="f81ad-138">The handler to call when the task is not completed successfully within the time-out period.</span></span></param>
        <param name="state"><span data-ttu-id="f81ad-139">Objeto que representa el estado de la tarea.</span><span class="sxs-lookup"><span data-stu-id="f81ad-139">The object that represents the state of the task.</span></span></param>
        <param name="executeInParallel"><span data-ttu-id="f81ad-140">Valor que indica si la tarea se puede procesar a la vez que otras tareas o no.</span><span class="sxs-lookup"><span data-stu-id="f81ad-140">The value that indicates whether the task can be processed in parallel with other tasks.</span></span></param>
        <summary><span data-ttu-id="f81ad-141">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.PageAsyncTask" /> con el valor especificado para la ejecución simultánea.</span><span class="sxs-lookup"><span data-stu-id="f81ad-141">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the specified value for executing in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f81ad-142">Esta implementación del constructor permite establecer si la tarea asincrónica se procesará en paralelo con otras tareas en la página.</span><span class="sxs-lookup"><span data-stu-id="f81ad-142">This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f81ad-143">El ejemplo de código siguiente crea tres tareas asincrónicas que se procesan en paralelo entre sí.</span><span class="sxs-lookup"><span data-stu-id="f81ad-143">The following code example creates three asynchronous tasks that are processed in parallel to each other.</span></span> <span data-ttu-id="f81ad-144">Este ejemplo forma parte de un ejemplo más extenso que se encuentra en la <xref:System.Web.UI.PageAsyncTask> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="f81ad-144">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f81ad-145">El parámetro <paramref name="beginHandler" /> o <paramref name="endHandler" /> no se ha especificado.</span><span class="sxs-lookup"><span data-stu-id="f81ad-145">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginHandler : System.Web.BeginEventHandler" Usage="System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f81ad-146">Obtiene el método al que se debe llamar al iniciar una tarea asincrónica.</span><span class="sxs-lookup"><span data-stu-id="f81ad-146">Gets the method to call when beginning an asynchronous task.</span></span></summary>
        <value><span data-ttu-id="f81ad-147">Delegado de <see cref="T:System.Web.BeginEventHandler" /> que representa el método al que se debe llamar al iniciar la tarea asincrónica.</span><span class="sxs-lookup"><span data-stu-id="f81ad-147">A <see cref="T:System.Web.BeginEventHandler" /> delegate that represents the method to call when beginning the asynchronous task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f81ad-148">El <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegado está establecido en el constructor.</span><span class="sxs-lookup"><span data-stu-id="f81ad-148">The <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f81ad-149">El ejemplo de código siguiente registra tres tareas asincrónicas en una página y los ejecuta en paralelo.</span><span class="sxs-lookup"><span data-stu-id="f81ad-149">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="f81ad-150">Cada tarea llama a un método que simplemente hace que el subproceso entre en suspensión durante 5 segundos.</span><span class="sxs-lookup"><span data-stu-id="f81ad-150">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="f81ad-151">Un <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegado se especifica para cada tarea.</span><span class="sxs-lookup"><span data-stu-id="f81ad-151">A <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f81ad-152">Obtiene el método al que se debe llamar cuando la tarea se lleva a cabo correctamente en el período del tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="f81ad-152">Gets the method to call when the task completes successfully within the time-out period.</span></span></summary>
        <value><span data-ttu-id="f81ad-153">Delegado de <see cref="T:System.Web.EndEventHandler" /> que representa el método al que se debe llamar cuando la tarea se lleva a cabo correctamente en el período del tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="f81ad-153">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task completes successfully within the time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f81ad-154">El <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegado está establecido en el constructor.</span><span class="sxs-lookup"><span data-stu-id="f81ad-154">The <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f81ad-155">El ejemplo de código siguiente registra tres tareas asincrónicas en una página y los ejecuta en paralelo.</span><span class="sxs-lookup"><span data-stu-id="f81ad-155">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="f81ad-156">Cada tarea llama a un método que simplemente hace que el subproceso entre en suspensión durante 5 segundos.</span><span class="sxs-lookup"><span data-stu-id="f81ad-156">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="f81ad-157">Un <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegado se especifica para cada tarea.</span><span class="sxs-lookup"><span data-stu-id="f81ad-157">An <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteInParallel">
      <MemberSignature Language="C#" Value="public bool ExecuteInParallel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExecuteInParallel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecuteInParallel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExecuteInParallel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecuteInParallel : bool" Usage="System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f81ad-158">Obtiene un valor que indica si la tarea se puede procesar a la vez que otras tareas o no.</span><span class="sxs-lookup"><span data-stu-id="f81ad-158">Gets a value that indicates whether the task can be processed in parallel with other tasks.</span></span></summary>
        <value><span data-ttu-id="f81ad-159"><see langword="true" /> si la tarea se debe procesar a la vez que otras tareas; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f81ad-159"><see langword="true" /> if the task should be processed in parallel with other tasks; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f81ad-160">El <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> propiedad se establece en el constructor.</span><span class="sxs-lookup"><span data-stu-id="f81ad-160">The <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set in the constructor.</span></span> <span data-ttu-id="f81ad-161">Cuando se registran varias tareas en una página y el <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> propiedad está establecida en `true`, a continuación, esas tareas se procesan simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="f81ad-161">When multiple tasks are registered in a page and the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `true`, then those tasks are processed concurrently.</span></span> <span data-ttu-id="f81ad-162">Sin embargo, si la <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> propiedad está establecida en `false`, a continuación, esas tareas se procesan secuencialmente.</span><span class="sxs-lookup"><span data-stu-id="f81ad-162">However, if the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `false`, then those tasks are processed sequentially.</span></span> <span data-ttu-id="f81ad-163">Por ejemplo, si una página contenida dos asincrónica las tareas que cada tardó 5 segundos en completarse y <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> está establecido en `true`, ambas tareas se completen en 5 segundos.</span><span class="sxs-lookup"><span data-stu-id="f81ad-163">For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `true`, both tasks will complete in 5 seconds.</span></span> <span data-ttu-id="f81ad-164">Si <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> está establecido en `false` para estos mismos dos tareas, a continuación, la primera tarea se completará en 5 segundos y la segunda tarea completará en 5 segundos después de completar la primera tarea.</span><span class="sxs-lookup"><span data-stu-id="f81ad-164">If <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `false` for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f81ad-165">El ejemplo de código siguiente define tres tareas asincrónicas que son cada conjunto se procesen en paralelo.</span><span class="sxs-lookup"><span data-stu-id="f81ad-165">The following code example defines three asynchronous tasks that are each set to be processed in parallel.</span></span> <span data-ttu-id="f81ad-166">Este ejemplo forma parte de un ejemplo más extenso que se encuentra en la <xref:System.Web.UI.PageAsyncTask> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="f81ad-166">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public object State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object State" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ State { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.State : obj" Usage="System.Web.UI.PageAsyncTask.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f81ad-167">Obtiene un objeto que representa el estado de la tarea.</span><span class="sxs-lookup"><span data-stu-id="f81ad-167">Gets an object that represents the state of the task.</span></span></summary>
        <value><span data-ttu-id="f81ad-168">Objeto <see cref="T:System.Object" /> que representa el estado de la tarea.</span><span class="sxs-lookup"><span data-stu-id="f81ad-168">An <see cref="T:System.Object" /> that represents the state of the task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f81ad-169">El <xref:System.Web.UI.PageAsyncTask.State%2A> propiedad se establece en el constructor y no se puede modificar durante la ejecución de la tarea asincrónica.</span><span class="sxs-lookup"><span data-stu-id="f81ad-169">The <xref:System.Web.UI.PageAsyncTask.State%2A> property is set in the constructor and cannot be modified during execution of the asynchronous task.</span></span> <span data-ttu-id="f81ad-170">Puede diferenciar las tareas asincrónicas en una página mediante la asignación de valores de cadena único a sus respectivas <xref:System.Web.UI.PageAsyncTask.State%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="f81ad-170">You can differentiate asynchronous tasks in a page by assigning unique string values to their respective <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f81ad-171">En el ejemplo de código siguiente se crean tres tareas asincrónicas y les valores únicos para sus <xref:System.Web.UI.PageAsyncTask.State%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="f81ad-171">The following code example creates three asynchronous tasks and gives them unique values for their <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span> <span data-ttu-id="f81ad-172">Este ejemplo forma parte de un ejemplo más extenso que se encuentra en la <xref:System.Web.UI.PageAsyncTask> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="f81ad-172">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler TimeoutHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler TimeoutHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ TimeoutHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f81ad-173">Obtiene el método al que se debe llamar cuando la tarea no se lleva a cabo correctamente en el período del tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="f81ad-173">Gets the method to call when the task does not complete successfully within the time-out period.</span></span></summary>
        <value><span data-ttu-id="f81ad-174">Delegado de <see cref="T:System.Web.EndEventHandler" /> que representa el método al que se debe llamar cuando la tarea no se lleva a cabo correctamente en el período del tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="f81ad-174">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task does not complete successfully within the time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f81ad-175">El <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegado está establecido en el constructor.</span><span class="sxs-lookup"><span data-stu-id="f81ad-175">The <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f81ad-176">El ejemplo de código siguiente registra tres tareas asincrónicas en una página y los ejecuta en paralelo.</span><span class="sxs-lookup"><span data-stu-id="f81ad-176">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="f81ad-177">Cada tarea llama a un método que simplemente hace que el subproceso entre en suspensión durante 5 segundos.</span><span class="sxs-lookup"><span data-stu-id="f81ad-177">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="f81ad-178">Un <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegado se especifica para cada tarea.</span><span class="sxs-lookup"><span data-stu-id="f81ad-178">A <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
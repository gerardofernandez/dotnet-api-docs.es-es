<Type Name="ICallContextInitializer" FullName="System.ServiceModel.Dispatcher.ICallContextInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d10a711c069c0009dc65e5dc569f8a8807751e3b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37616299" /></Metadata><TypeSignature Language="C#" Value="public interface ICallContextInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallContextInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ICallContextInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallContextInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallContextInitializer" />
  <TypeSignature Language="F#" Value="type ICallContextInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4d115-101">Define los métodos que habilitan la inicialización y el reciclado del almacenamiento de subprocesos locales con el subproceso que invoca el código de usuario.</span><span class="sxs-lookup"><span data-stu-id="4d115-101">Defines the methods that enable the initialization and recycling of thread-local storage with the thread that invokes user code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d115-102">Implemente la interfaz <xref:System.ServiceModel.Dispatcher.ICallContextInitializer> y agréguela a la propiedad <xref:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers%2A?displayProperty=nameWithType> para inicializar y limpiar el almacenamiento de subprocesos locales para el subproceso que invoca el código de usuario.</span><span class="sxs-lookup"><span data-stu-id="4d115-102">Implement the <xref:System.ServiceModel.Dispatcher.ICallContextInitializer> interface and add it to the <xref:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers%2A?displayProperty=nameWithType> property to initialize and clean up thread-local storage for the thread that invokes user code.</span></span> <span data-ttu-id="4d115-103">El uso habitual consiste en establecer algún valor, como suplantación, o en cambiar <xref:System.Globalization.CultureInfo?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4d115-103">Typical usage is to set some value, such as impersonation or changing the <xref:System.Globalization.CultureInfo?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4d115-104">Si deseara establecer algún contexto personalizado, éste es el punto de la extensión para inicializar la propiedad de contexto estático, que, a continuación, está disponible para los desarrolladores en el curso de la operación.</span><span class="sxs-lookup"><span data-stu-id="4d115-104">If you wanted to establish some custom context, this is the extension point to initialize the static context property, which is then available for developers in the course of the operation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AfterInvoke">
      <MemberSignature Language="C#" Value="public void AfterInvoke (object correlationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AfterInvoke(object correlationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AfterInvoke (correlationState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AfterInvoke(System::Object ^ correlationState);" />
      <MemberSignature Language="F#" Value="abstract member AfterInvoke : obj -&gt; unit" Usage="iCallContextInitializer.AfterInvoke correlationState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="correlationState"><span data-ttu-id="4d115-105">El objeto de correlación devuelto desde el método <see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)" />.</span><span class="sxs-lookup"><span data-stu-id="4d115-105">The correlation object returned from the <see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)" /> method.</span></span></param>
        <summary><span data-ttu-id="4d115-106">Impleméntelo para participar en la limpieza del subproceso que invocó la operación.</span><span class="sxs-lookup"><span data-stu-id="4d115-106">Implement to participate in cleaning up the thread that invoked the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d115-107">Use este método para realizar la limpieza necesaria del subproceso de la operación.</span><span class="sxs-lookup"><span data-stu-id="4d115-107">Use this method to perform any necessary cleaning up of the operation thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeInvoke">
      <MemberSignature Language="C#" Value="public object BeforeInvoke (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.IClientChannel channel, System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BeforeInvoke(class System.ServiceModel.InstanceContext instanceContext, class System.ServiceModel.IClientChannel channel, class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ BeforeInvoke(System::ServiceModel::InstanceContext ^ instanceContext, System::ServiceModel::IClientChannel ^ channel, System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member BeforeInvoke : System.ServiceModel.InstanceContext * System.ServiceModel.IClientChannel * System.ServiceModel.Channels.Message -&gt; obj" Usage="iCallContextInitializer.BeforeInvoke (instanceContext, channel, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="instanceContext"><span data-ttu-id="4d115-108">Instancia del servicio para la operación.</span><span class="sxs-lookup"><span data-stu-id="4d115-108">The service instance for the operation.</span></span></param>
        <param name="channel"><span data-ttu-id="4d115-109">Canal de cliente.</span><span class="sxs-lookup"><span data-stu-id="4d115-109">The client channel.</span></span></param>
        <param name="message"><span data-ttu-id="4d115-110">Mensaje entrante.</span><span class="sxs-lookup"><span data-stu-id="4d115-110">The incoming message.</span></span></param>
        <summary><span data-ttu-id="4d115-111">Impleméntelo para participar en la inicialización del subproceso de la operación.</span><span class="sxs-lookup"><span data-stu-id="4d115-111">Implement to participate in the initialization of the operation thread.</span></span></summary>
        <returns><span data-ttu-id="4d115-112">Objeto de correlación que se pasa como parámetro del método <see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="4d115-112">A correlation object passed back as the parameter of the <see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d115-113">Implemente el método <xref:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke%2A> para inicializar y limpiar el almacenamiento de subprocesos locales para el subproceso que invoca el código de usuario.</span><span class="sxs-lookup"><span data-stu-id="4d115-113">Implement the <xref:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke%2A> method to initialize and clean up thread-local storage for the thread that invokes user code.</span></span> <span data-ttu-id="4d115-114">El uso habitual consiste en establecer algún valor, como suplantación, o en cambiar <xref:System.Globalization.CultureInfo?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4d115-114">Typical usage is to set some value, such as impersonation or changing the <xref:System.Globalization.CultureInfo?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4d115-115">Si deseara establecer algún contexto personalizado, éste es el punto de la extensión para inicializar la propiedad de contexto estático, que, a continuación, está disponible para los desarrolladores en el curso de la operación.</span><span class="sxs-lookup"><span data-stu-id="4d115-115">If you wanted to establish some custom context, this is the extension point to initialize the static context property, which is then available for developers in the course of the operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
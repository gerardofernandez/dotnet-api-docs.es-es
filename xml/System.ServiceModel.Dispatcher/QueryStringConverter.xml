<Type Name="QueryStringConverter" FullName="System.ServiceModel.Dispatcher.QueryStringConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="257465ef3390b40cd0d6b289b89e4986345ca2f5" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64032497" /></Metadata><TypeSignature Language="C#" Value="public class QueryStringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryStringConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryStringConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryStringConverter" />
  <TypeSignature Language="F#" Value="type QueryStringConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8d3d9-101">Esta clase convierte un parámetro de una cadena de consulta en un objeto del tipo adecuado.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-101">This class converts a parameter in a query string to an object of the appropriate type.</span></span> <span data-ttu-id="8d3d9-102">También puede convertir un parámetro de un objeto en su representación de la cadena de consulta.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-102">It can also convert a parameter from an object to its query string representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d3d9-103">Los parámetros se pueden especificar en una cadena de consulta dentro de una dirección URL.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-103">Parameters can be specified in a query string within a URL.</span></span> <span data-ttu-id="8d3d9-104">Esta clase toma los parámetros especificados en una cadena y los convierte en objetos.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-104">This class takes those parameters specified in a string and converts them into objects.</span></span> <span data-ttu-id="8d3d9-105">Por ejemplo, se define el contrato siguiente.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-105">For example, the following contract is defined.</span></span>  
  
```  
[ServiceContract]  
interface Calculator  
{  
   [WebGet(UriTemplate="Add?n1={n1}&n2={n2}")]  
   [OperationContract]  
   long Add(long n1, long n2);  
}  
```  
  
 <span data-ttu-id="8d3d9-106">Un servicio de Windows Communication Foundation (WCF) se implementa esta interfaz y se expone en un punto de conexión con el <xref:System.ServiceModel.Description.WebHttpBehavior> en http://localhost:8000/MyCalcService.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-106">A Windows Communication Foundation (WCF) service implements this interface and exposes it on an endpoint with the <xref:System.ServiceModel.Description.WebHttpBehavior> at http://localhost:8000/MyCalcService.</span></span> <span data-ttu-id="8d3d9-107">El `Add` operación de servicio se puede llamar mediante el envío de una solicitud HTTP GET a http://localhost:8000/MyCalcService/Add?n1=10&n2=5.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-107">The `Add` service operation can be called by sending an HTTP GET to http://localhost:8000/MyCalcService/Add?n1=10&n2=5.</span></span> <span data-ttu-id="8d3d9-108"><xref:System.ServiceModel.Dispatcher.QueryStringConverter> recibe esta dirección URL y convierte los dos parámetros (n1 y n2) especificados en la dirección URL en dos objetos `long` con los valores adecuados.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-108">The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> receives this URL and converts the two parameters (n1 and n2) specified in the URL into two `long` objects with the appropriate values.</span></span>  
  
 <span data-ttu-id="8d3d9-109">Puede derivar una clase a partir de <xref:System.ServiceModel.Dispatcher.QueryStringConverter> para controlar cómo los parámetros de cadena de consulta están asignados en los parámetros de una operación del servicio.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-109">You can derive a class from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> to control how query string parameters are mapped into a service operation's parameters.</span></span>  
  
 <span data-ttu-id="8d3d9-110">De forma predeterminada, <xref:System.ServiceModel.Dispatcher.QueryStringConverter> admite los siguientes tipos.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-110">The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> supports the following types by default:</span></span>  
  
-   <xref:System.Byte>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
-   <xref:System.Single>  
  
-   <xref:System.Double>  
  
-   <xref:System.Char>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.String>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.Guid>  
  
-   <span data-ttu-id="8d3d9-111">Matriz <xref:System.Byte></span><span class="sxs-lookup"><span data-stu-id="8d3d9-111"><xref:System.Byte> array</span></span>  
  
-   <xref:System.Uri>  
  
-   <xref:System.Object>  
  
-   <xref:System.DateTimeOffset>  
  
-   <span data-ttu-id="8d3d9-112">Enumeraciones</span><span class="sxs-lookup"><span data-stu-id="8d3d9-112">Enums</span></span>  
  
-   <span data-ttu-id="8d3d9-113">Tipos que tienen `TypeConverterAttribute` que puede convertir el tipo en una representación de cadena y viceversa.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-113">Types that have a `TypeConverterAttribute` that can convert the type to and from a string representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d3d9-114">El código siguiente muestra cómo utilizar la clase <xref:System.ServiceModel.Dispatcher.QueryStringConverter> para realizar conversiones entre una cadena y un entero de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-114">The following code shows how to use the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> class to convert between a string and a 32-bit integer.</span></span>  
  
 [!code-csharp[QueryStringConverter#0](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#0)]
 [!code-vb[QueryStringConverter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryStringConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryStringConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d3d9-115">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" />.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d3d9-116">En el código siguiente se muestra cómo se crea una instancia de la clase <xref:System.ServiceModel.Dispatcher.QueryStringConverter>.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-116">The following code shows how to create an instance of the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> class.</span></span>  
  
 [!code-csharp[QueryStringConverter#1](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#1)]
 [!code-vb[QueryStringConverter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public virtual bool CanConvert (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvert(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvert(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CanConvert : Type -&gt; bool&#xA;override this.CanConvert : Type -&gt; bool" Usage="queryStringConverter.CanConvert type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8d3d9-117"><see cref="T:System.Type" /> que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-117">The <see cref="T:System.Type" /> to convert.</span></span></param>
        <summary><span data-ttu-id="8d3d9-118">Determina si el tipo especificado se puede convertir en una representación de cadena y viceversa.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-118">Determines whether the specified type can be converted to and from a string representation.</span></span></summary>
        <returns><span data-ttu-id="8d3d9-119">Un valor que especifica si se puede convertir el tipo.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-119">A value that specifies whether the type can be converted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d3d9-120">El código siguiente muestra cómo determinar si <xref:System.ServiceModel.Dispatcher.QueryStringConverter> puede realiza conversiones a un tipo especificado y desde el mismo.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-120">The following code shows how to determine whether the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> can convert to and from the specified type.</span></span>  
  
 [!code-csharp[QueryStringConverter#2](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#2)]
 [!code-vb[QueryStringConverter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertStringToValue">
      <MemberSignature Language="C#" Value="public virtual object ConvertStringToValue (string parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertStringToValue(string parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertStringToValue (parameter As String, parameterType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertStringToValue(System::String ^ parameter, Type ^ parameterType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertStringToValue : string * Type -&gt; obj&#xA;override this.ConvertStringToValue : string * Type -&gt; obj" Usage="queryStringConverter.ConvertStringToValue (parameter, parameterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="8d3d9-121">Forma de cadena del parámetro y su valor.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-121">The string form of the parameter and value.</span></span></param>
        <param name="parameterType"><span data-ttu-id="8d3d9-122"><see cref="T:System.Type" /> al que se va a convertir el parámetro.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-122">The <see cref="T:System.Type" /> to convert the parameter to.</span></span></param>
        <summary><span data-ttu-id="8d3d9-123">Convierte un parámetro de cadena de consulta en el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-123">Converts a query string parameter to the specified type.</span></span></summary>
        <returns><span data-ttu-id="8d3d9-124">El parámetro convertido.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-124">The converted parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d3d9-125">Si `parameterType` es un tipo de valor y el parámetro es `null`, se devuelve el valor predeterminado de `parameterType`.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-125">If the `parameterType` is a value type and the parameter is `null`, then the default value of the `parameterType` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d3d9-126">El código siguiente muestra cómo convertir una cadena al tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-126">The following code shows how to convert a string to the specified type.</span></span>  
  
 [!code-csharp[QueryStringConverter#2](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#2)]
 [!code-vb[QueryStringConverter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="8d3d9-127">La cadena suministrada no tiene el formato correcto.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-127">The provided string does not have the correct format.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertValueToString">
      <MemberSignature Language="C#" Value="public virtual string ConvertValueToString (object parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertValueToString(object parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertValueToString (parameter As Object, parameterType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertValueToString(System::Object ^ parameter, Type ^ parameterType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertValueToString : obj * Type -&gt; string&#xA;override this.ConvertValueToString : obj * Type -&gt; string" Usage="queryStringConverter.ConvertValueToString (parameter, parameterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="8d3d9-128">El parámetro que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-128">The parameter to convert.</span></span></param>
        <param name="parameterType"><span data-ttu-id="8d3d9-129"><see cref="T:System.Type" /> del parámetro que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-129">The <see cref="T:System.Type" /> of the parameter to convert.</span></span></param>
        <summary><span data-ttu-id="8d3d9-130">Convierte un parámetro en una representación de cadena de consulta.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-130">Converts a parameter to a query string representation.</span></span></summary>
        <returns><span data-ttu-id="8d3d9-131">El nombre y el valor del parámetro.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-131">The parameter name and value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d3d9-132">El código siguiente muestra cómo convertir un valor con tipo en una representación de cadena del valor.</span><span class="sxs-lookup"><span data-stu-id="8d3d9-132">The following code shows how to convert a typed value into a string representation of the value.</span></span>  
  
 [!code-csharp[QueryStringConverter#3](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#3)]
 [!code-vb[QueryStringConverter#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
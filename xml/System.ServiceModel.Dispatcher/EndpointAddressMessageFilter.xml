<Type Name="EndpointAddressMessageFilter" FullName="System.ServiceModel.Dispatcher.EndpointAddressMessageFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d78d48c7f32a561e46511769af09532d8ceff451" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39944998" /></Metadata><TypeSignature Language="C#" Value="public class EndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EndpointAddressMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class EndpointAddressMessageFilter&#xA;Inherits MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointAddressMessageFilter : System::ServiceModel::Dispatcher::MessageFilter" />
  <TypeSignature Language="F#" Value="type EndpointAddressMessageFilter = class&#xA;    inherit MessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d24f1-101">Representa una consulta que prueba si un mensaje satisface los requisitos de una dirección de extremo especificada.</span><span class="sxs-lookup"><span data-stu-id="d24f1-101">Represents a query that tests whether a message satisfies the requirements of a specified endpoint address.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d24f1-102">Este filtro prueba si un mensaje satisface una dirección de extremo determinada.</span><span class="sxs-lookup"><span data-stu-id="d24f1-102">This filter tests whether a message satisfies a particular endpoint address.</span></span> <span data-ttu-id="d24f1-103">Un objeto <xref:System.ServiceModel.EndpointAddress> incluye un URI y una colección opcional de encabezados de direccionamiento.</span><span class="sxs-lookup"><span data-stu-id="d24f1-103">An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers.</span></span> <span data-ttu-id="d24f1-104">Los encabezados de mensaje y de direccionamiento se canonizan para compararlos y determinar si son iguales.</span><span class="sxs-lookup"><span data-stu-id="d24f1-104">The addressing and message headers are canonicalized in order to be compared for equality.</span></span> <span data-ttu-id="d24f1-105">Si un parámetro aparece más de una vez en un objeto <xref:System.ServiceModel.EndpointAddress>, el encabezado correspondiente debe aparecer en el mensaje al menos ese número veces.</span><span class="sxs-lookup"><span data-stu-id="d24f1-105">If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.</span></span>  
  
 <span data-ttu-id="d24f1-106">IIS y el sistema de archivos subyacente (NTFS o FAT) no distinguen entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="d24f1-106">IIS and the underlying file system (NTFS or FAT) are case-insensitive.</span></span> <span data-ttu-id="d24f1-107">Las comparaciones entre URI realizadas por esta clase tampoco distinguen entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="d24f1-107">URI comparisons done by this class are also case-insensitive.</span></span> <span data-ttu-id="d24f1-108">Por ejemplo, http://www.microsoft.com se evalúan como iguales a http://WWW.microsoft.com.</span><span class="sxs-lookup"><span data-stu-id="d24f1-108">So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d24f1-109">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />.</span><span class="sxs-lookup"><span data-stu-id="d24f1-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.EndpointAddressMessageFilter : System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" Usage="new System.ServiceModel.Dispatcher.EndpointAddressMessageFilter address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d24f1-110">Objeto <see cref="T:System.ServiceModel.EndpointAddress" /> con el que se prueban los mensajes.</span><span class="sxs-lookup"><span data-stu-id="d24f1-110">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <summary><span data-ttu-id="d24f1-111">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> con una dirección especificada, con la que se va a probar un mensaje.</span><span class="sxs-lookup"><span data-stu-id="d24f1-111">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class with a specified address against which to test a message.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d24f1-112"><paramref name="address" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d24f1-112"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, includeHostNameInComparison As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address, bool includeHostNameInComparison);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.EndpointAddressMessageFilter : System.ServiceModel.EndpointAddress * bool -&gt; System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" Usage="new System.ServiceModel.Dispatcher.EndpointAddressMessageFilter (address, includeHostNameInComparison)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="includeHostNameInComparison" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d24f1-113">Objeto <see cref="T:System.ServiceModel.EndpointAddress" /> con el que se prueban los mensajes.</span><span class="sxs-lookup"><span data-stu-id="d24f1-113">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <param name="includeHostNameInComparison"><span data-ttu-id="d24f1-114"><see langword="true" /> si el nombre de host se incluye en la comparación de direcciones de extremo; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d24f1-114"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d24f1-115">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />.</span><span class="sxs-lookup"><span data-stu-id="d24f1-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d24f1-116">Si tiene un servicio Web instalado en el equipo local, hay las muchas otras maneras de hacer referencia a él, como las siguientes:</span><span class="sxs-lookup"><span data-stu-id="d24f1-116">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="d24f1-117">http://[nombreDeMiEquipo]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="d24f1-117">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="d24f1-118">http://[nombreDeMiEquipo].[miEmpresa].com/foo.svc.</span><span class="sxs-lookup"><span data-stu-id="d24f1-118">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="d24f1-119">Si el valor del parámetro `includeHostNameInComparison` es `false`, todos los URI anteriores indican el mismo extremo.</span><span class="sxs-lookup"><span data-stu-id="d24f1-119">If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d24f1-120"><paramref name="address" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d24f1-120"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ Address { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d24f1-121">Obtiene la dirección con la que <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> prueba los mensajes.</span><span class="sxs-lookup"><span data-stu-id="d24f1-121">Gets the address that the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> tests messages against.</span></span></summary>
        <value><span data-ttu-id="d24f1-122"><see cref="T:System.ServiceModel.EndpointAddress" /> con la que <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> prueba los mensajes.</span><span class="sxs-lookup"><span data-stu-id="d24f1-122">The <see cref="T:System.ServiceModel.EndpointAddress" /> that the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> tests messages against.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="endpointAddressMessageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData"><span data-ttu-id="d24f1-123">Datos asociados a los filtros de la tabla.</span><span class="sxs-lookup"><span data-stu-id="d24f1-123">Data associated with the filters in the table.</span></span></typeparam>
        <summary><span data-ttu-id="d24f1-124">Crea una nueva tabla de filtros que prueba un mensaje con varias direcciones de punto de conexión simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="d24f1-124">Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.</span></span></summary>
        <returns><span data-ttu-id="d24f1-125">Objeto que implementa la interfaz <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> que puede contener objetos <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> con <paramref name="FilterData" /> asociados.</span><span class="sxs-lookup"><span data-stu-id="d24f1-125">An object that implements the <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> interface that can contain <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />s with associated <paramref name="FilterData" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d24f1-126">El método devuelve una instancia de <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> optimizada para probar extremos de mensaje específicos.</span><span class="sxs-lookup"><span data-stu-id="d24f1-126">The method returns an instance of <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> that is optimized to test for specific message endpoints.</span></span>  
  
 <span data-ttu-id="d24f1-127">Este método está dirigido para su uso exclusivo por <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="d24f1-127">This method is intended to be used by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span> <span data-ttu-id="d24f1-128">Use constructores <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> para crear instancias de la tabla de filtros.</span><span class="sxs-lookup"><span data-stu-id="d24f1-128">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> constructors to create filter table instances.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeHostNameInComparison">
      <MemberSignature Language="C#" Value="public bool IncludeHostNameInComparison { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostNameInComparison" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeHostNameInComparison As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostNameInComparison { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeHostNameInComparison : bool" Usage="System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d24f1-129">Obtiene un valor que indica si el nombre de host se incluye en la comparación de direcciones de punto de conexión.</span><span class="sxs-lookup"><span data-stu-id="d24f1-129">Gets a value that indicates whether the host name is included in the endpoint address comparison.</span></span></summary>
        <value><span data-ttu-id="d24f1-130"><see langword="true" /> si el nombre de host se incluye en la comparación de direcciones de extremo; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d24f1-130"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d24f1-131">Si tiene un servicio Web instalado en el equipo local, hay las muchas otras maneras de hacer referencia a él, como las siguientes:</span><span class="sxs-lookup"><span data-stu-id="d24f1-131">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="d24f1-132">http://[nombreDeMiEquipo]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="d24f1-132">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="d24f1-133">http://[nombreDeMiEquipo].[miEmpresa].com/foo.svc.</span><span class="sxs-lookup"><span data-stu-id="d24f1-133">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="d24f1-134">El valor predeterminado de esta propiedad es `false`, por lo que todos los URI anteriores indican el mismo extremo, a menos que se cambie esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="d24f1-134">The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d24f1-135">Prueba si un mensaje o un mensaje almacenado en búfer satisface los criterios del filtro de punto de conexión.</span><span class="sxs-lookup"><span data-stu-id="d24f1-135">Tests whether a message or buffered message satisfies the criteria of the endpoint filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d24f1-136">La diferencia entre las dos sobrecargas del método <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> es que la que toma el parámetro <xref:System.ServiceModel.Channels.MessageBuffer> puede examinar el cuerpo de un mensaje al comprobar si hay una coincidencia, mientras que la que toma el parámetro <xref:System.ServiceModel.Channels.Message> no puede hacerlo.</span><span class="sxs-lookup"><span data-stu-id="d24f1-136">The difference between the two overloads of the <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> method is that the one that takes the <xref:System.ServiceModel.Channels.MessageBuffer> parameter is permitted to examine the body of a message when testing for a match, while the one that takes the <xref:System.ServiceModel.Channels.Message> parameter is not.</span></span>  
  
 <span data-ttu-id="d24f1-137"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> no prueba el contenido del cuerpo de un mensaje, por lo que estos dos métodos son equivalentes.</span><span class="sxs-lookup"><span data-stu-id="d24f1-137"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> does not test the contents of the body of a message, so these two methods are equivalent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="endpointAddressMessageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="d24f1-138">Objeto <see cref="T:System.ServiceModel.Channels.Message" /> que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="d24f1-138">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span></span></param>
        <summary><span data-ttu-id="d24f1-139">Prueba si un mensaje satisface la dirección de punto de conexión especificada.</span><span class="sxs-lookup"><span data-stu-id="d24f1-139">Tests whether a message satisfies the specified endpoint address.</span></span></summary>
        <returns><span data-ttu-id="d24f1-140"><see langword="true" /> si el objeto <see cref="T:System.ServiceModel.Channels.Message" /> satisface la dirección de extremo especificada en el filtro; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d24f1-140"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the endpoint address specified in the filter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d24f1-141">Las dos sobrecargas de este método son equivalentes, porque las dos examinan sólo los encabezados de los mensajes.</span><span class="sxs-lookup"><span data-stu-id="d24f1-141">The two overloads of this method are equivalent because they both examine only message headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d24f1-142"><paramref name="message" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d24f1-142"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer messageBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="endpointAddressMessageFilter.Match messageBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="d24f1-143">Objeto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="d24f1-143">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span></span></param>
        <summary><span data-ttu-id="d24f1-144">Prueba si un mensaje almacenado en búfer satisface la dirección de punto de conexión especificada.</span><span class="sxs-lookup"><span data-stu-id="d24f1-144">Tests whether a buffered message satisfies the specified endpoint address.</span></span></summary>
        <returns><span data-ttu-id="d24f1-145"><see langword="true" /> si el objeto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> satisface la dirección de extremo; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d24f1-145"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the endpoint address; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d24f1-146">Las dos sobrecargas de este método son equivalentes, porque las dos examinan sólo los encabezados de los mensajes.</span><span class="sxs-lookup"><span data-stu-id="d24f1-146">The two overloads of this method are equivalent because they both examine only message headers.</span></span> <span data-ttu-id="d24f1-147">Esta sobrecarga se debe usar sólo si ya se tenía un objeto `messageBuffer` disponible y no un mensaje, porque este método convierte el objeto `messageBuffer` en un mensaje.</span><span class="sxs-lookup"><span data-stu-id="d24f1-147">The only reason to use this overload is if you already had a `messageBuffer` available and not a message, because this method converts the `messageBuffer` into a message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d24f1-148"><paramref name="messageBuffer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d24f1-148"><paramref name="messageBuffer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
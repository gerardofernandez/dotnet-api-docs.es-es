<Type Name="PrefixEndpointAddressMessageFilter" FullName="System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6139af882881c2dcd5cc6d02afc94652c83ceeac" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39936522" /></Metadata><TypeSignature Language="C#" Value="public class PrefixEndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrefixEndpointAddressMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class PrefixEndpointAddressMessageFilter&#xA;Inherits MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrefixEndpointAddressMessageFilter : System::ServiceModel::Dispatcher::MessageFilter" />
  <TypeSignature Language="F#" Value="type PrefixEndpointAddressMessageFilter = class&#xA;    inherit MessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7f230-101">Representa una consulta que prueba si un mensaje coincide con una dirección de punto de conexión usando una *coincidencia de prefijo más largo* para el componente URI.</span><span class="sxs-lookup"><span data-stu-id="7f230-101">Represents a query that tests whether a message matches an EndpointAddress using a *Longest-Prefix Match* for the URI component.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f230-102">Un objeto <xref:System.ServiceModel.EndpointAddress> incluye un URI y una colección opcional de encabezados de direccionamiento.</span><span class="sxs-lookup"><span data-stu-id="7f230-102">An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers.</span></span> <span data-ttu-id="7f230-103">Los encabezados de mensaje y de direccionamiento se canonizan para compararlos y determinar si son iguales.</span><span class="sxs-lookup"><span data-stu-id="7f230-103">The addressing and message headers are canonicalized to be compared for equality.</span></span> <span data-ttu-id="7f230-104">Si un parámetro aparece más de una vez en un objeto <xref:System.ServiceModel.EndpointAddress>, el encabezado correspondiente debe aparecer en el mensaje al menos ese número veces.</span><span class="sxs-lookup"><span data-stu-id="7f230-104">If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.</span></span>  
  
 <span data-ttu-id="7f230-105">Este filtro realiza la misma consulta como <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>, salvo que la prueba si un mensaje coincide con una dirección de punto de conexión se realiza mediante un *coincidencia de prefijo*.</span><span class="sxs-lookup"><span data-stu-id="7f230-105">This filter performs the same query as <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>, except that the test for whether a message matches an endpoint address is done by a *Longest-Prefix Match*.</span></span> <span data-ttu-id="7f230-106">Esto significa que el URI especificado en el filtro no tiene que coincidir exactamente con el URI del mensaje, pero debe formar parte de dicho URI como prefijo.</span><span class="sxs-lookup"><span data-stu-id="7f230-106">This means that the URI specified in the filter does not have to match the message's URI exactly, but must be contained in that URI as a prefix.</span></span> <span data-ttu-id="7f230-107">Por ejemplo, si un filtro especifica la dirección "www.foo.com" y un mensaje va dirigido a "www.foo.com/customerA", se satisface la parte del URI de la condición de consulta del filtro.</span><span class="sxs-lookup"><span data-stu-id="7f230-107">For example, if a filter specifies the address "www.foo.com", and a message is addressed to "www.foo.com/customerA", then the URI part of the filter query condition will be met.</span></span> <span data-ttu-id="7f230-108">Sin embargo, todavía se tiene que llevar a cabo la parte de encabezado de la consulta del filtro.</span><span class="sxs-lookup"><span data-stu-id="7f230-108">However, the header portion of the filter query still has to be done.</span></span>  
  
 <span data-ttu-id="7f230-109">Internet Information Services (IIS) y el sistema de archivos subyacente (NTFS o FAT) no distinguen entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="7f230-109">Internet Information Services (IIS) and the underlying file system (NTFS or FAT) are case-insensitive.</span></span> <span data-ttu-id="7f230-110">Las comparaciones entre URI realizadas por esta clase tampoco distinguen entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="7f230-110">URI comparisons done by this class are also case-insensitive.</span></span> <span data-ttu-id="7f230-111">Por ejemplo, http://www.microsoft.com se evalúan como iguales a http://WWW.microsoft.com.</span><span class="sxs-lookup"><span data-stu-id="7f230-111">So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7f230-112">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />.</span><span class="sxs-lookup"><span data-stu-id="7f230-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrefixEndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter : System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" Usage="new System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="7f230-113">Objeto <see cref="T:System.ServiceModel.EndpointAddress" /> con el que se prueban los mensajes.</span><span class="sxs-lookup"><span data-stu-id="7f230-113">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <summary><span data-ttu-id="7f230-114">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />.</span><span class="sxs-lookup"><span data-stu-id="7f230-114">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7f230-115"><paramref name="address" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7f230-115"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, includeHostNameInComparison As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrefixEndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address, bool includeHostNameInComparison);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter : System.ServiceModel.EndpointAddress * bool -&gt; System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" Usage="new System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter (address, includeHostNameInComparison)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="includeHostNameInComparison" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="7f230-116">Objeto <see cref="T:System.ServiceModel.EndpointAddress" /> con el que se prueban los mensajes.</span><span class="sxs-lookup"><span data-stu-id="7f230-116">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <param name="includeHostNameInComparison"><span data-ttu-id="7f230-117"><see langword="true" /> si el nombre de host se incluye en la comparación de direcciones de extremo; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7f230-117"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7f230-118">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />.</span><span class="sxs-lookup"><span data-stu-id="7f230-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f230-119">Si tiene un servicio Web instalado en el equipo local, hay las muchas otras maneras de hacer referencia a él, como las siguientes:</span><span class="sxs-lookup"><span data-stu-id="7f230-119">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="7f230-120">http://[nombreDeMiEquipo]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="7f230-120">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="7f230-121">http://[nombreDeMiEquipo].[miEmpresa].com/foo.svc.</span><span class="sxs-lookup"><span data-stu-id="7f230-121">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="7f230-122">Si el valor del parámetro `includeHostNameInComparison` es `false`, todos los URI anteriores indican el mismo extremo.</span><span class="sxs-lookup"><span data-stu-id="7f230-122">If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7f230-123"><paramref name="address" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7f230-123"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ Address { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f230-124">Obtiene la dirección de extremo con la que <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> prueba los mensajes.</span><span class="sxs-lookup"><span data-stu-id="7f230-124">Gets the Endpoint Address that the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> tests messages against.</span></span></summary>
        <value><span data-ttu-id="7f230-125"><see cref="T:System.ServiceModel.EndpointAddress" /> con la que <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> prueba los mensajes.</span><span class="sxs-lookup"><span data-stu-id="7f230-125">The <see cref="T:System.ServiceModel.EndpointAddress" /> that the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> tests messages against.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="prefixEndpointAddressMessageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData"><span data-ttu-id="7f230-126">Datos asociados a los filtros de la tabla.</span><span class="sxs-lookup"><span data-stu-id="7f230-126">Data associated with the filters in the table.</span></span></typeparam>
        <summary><span data-ttu-id="7f230-127">Crea una nueva tabla de filtros que prueba un mensaje con varias direcciones de punto de conexión simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="7f230-127">Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.</span></span></summary>
        <returns><span data-ttu-id="7f230-128">Objeto que implementa la interfaz <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> que puede contener objetos <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> con <paramref name="FilterData" /> asociados.</span><span class="sxs-lookup"><span data-stu-id="7f230-128">An object that implements the <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> interface that can contain <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />s with associated <paramref name="FilterData" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f230-129">El método devuelve una instancia de <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> optimizada para probar extremos de mensaje específicos.</span><span class="sxs-lookup"><span data-stu-id="7f230-129">The method returns an instance of <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> that is optimized to test for specific message endpoints.</span></span>  
  
 <span data-ttu-id="7f230-130">Este método está dirigido para su uso exclusivo por <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="7f230-130">This method is intended to be used by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeHostNameInComparison">
      <MemberSignature Language="C#" Value="public bool IncludeHostNameInComparison { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostNameInComparison" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeHostNameInComparison As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostNameInComparison { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeHostNameInComparison : bool" Usage="System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f230-131">Obtiene un valor que indica si el nombre de host se incluye en la comparación de direcciones de punto de conexión.</span><span class="sxs-lookup"><span data-stu-id="7f230-131">Gets a value that indicates whether the host name is included in the endpoint address comparison.</span></span></summary>
        <value><span data-ttu-id="7f230-132"><see langword="true" /> si el nombre de host se incluye en la comparación de direcciones de extremo; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7f230-132"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f230-133">Si tiene un servicio Web instalado en el equipo local, hay las muchas otras maneras de hacer referencia a él, como las siguientes:</span><span class="sxs-lookup"><span data-stu-id="7f230-133">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="7f230-134">http://[nombreDeMiEquipo]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="7f230-134">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="7f230-135">http://[nombreDeMiEquipo].[miEmpresa].com/foo.svc.</span><span class="sxs-lookup"><span data-stu-id="7f230-135">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="7f230-136">El valor predeterminado de esta propiedad es `false`, por lo que todos los URI anteriores indican el mismo extremo, a menos que se cambie esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="7f230-136">The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7f230-137">Prueba si un mensaje o un mensaje almacenado en búfer satisface los criterios del filtro de punto de conexión.</span><span class="sxs-lookup"><span data-stu-id="7f230-137">Tests whether a message or buffered message satisfies the criteria of the endpoint filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f230-138">Las dos sobrecargas de este método son equivalentes, porque este filtro no examina el cuerpo del mensaje, sólo la dirección, para realizar una coincidencia del prefijo más largo y, a continuación, examina los encabezados.</span><span class="sxs-lookup"><span data-stu-id="7f230-138">The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="prefixEndpointAddressMessageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="7f230-139">Objeto <see cref="T:System.ServiceModel.Channels.Message" /> que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="7f230-139">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span></span></param>
        <summary><span data-ttu-id="7f230-140">Prueba si un mensaje satisface la dirección de punto de conexión especificada.</span><span class="sxs-lookup"><span data-stu-id="7f230-140">Tests whether a message satisfies the specified endpoint address.</span></span></summary>
        <returns><span data-ttu-id="7f230-141"><see langword="true" /> si el objeto <see cref="T:System.ServiceModel.Channels.Message" /> satisface la dirección de extremo especificada en el filtro; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7f230-141"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the endpoint address specified in the filter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f230-142">Las dos sobrecargas de este método son equivalentes, porque este filtro no examina el cuerpo del mensaje, sólo la dirección, para realizar una coincidencia del prefijo más largo y, a continuación, examina los encabezados.</span><span class="sxs-lookup"><span data-stu-id="7f230-142">The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7f230-143"><paramref name="message" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7f230-143"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer messageBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="prefixEndpointAddressMessageFilter.Match messageBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="7f230-144">Objeto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="7f230-144">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span></span></param>
        <summary><span data-ttu-id="7f230-145">Prueba si un mensaje almacenado en búfer satisface la dirección de punto de conexión especificada.</span><span class="sxs-lookup"><span data-stu-id="7f230-145">Tests whether a buffered message satisfies the specified endpoint address.</span></span></summary>
        <returns><span data-ttu-id="7f230-146"><see langword="true" /> si el objeto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> satisface la dirección de extremo; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7f230-146"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the endpoint address; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f230-147">Las dos sobrecargas de este método son equivalentes, porque este filtro no examina el cuerpo del mensaje, sólo la dirección, para realizar una coincidencia del prefijo más largo y, a continuación, examina los encabezados.</span><span class="sxs-lookup"><span data-stu-id="7f230-147">The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7f230-148"><paramref name="messageBuffer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7f230-148"><paramref name="messageBuffer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
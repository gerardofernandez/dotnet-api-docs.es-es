<Type Name="MessageQuery" FullName="System.ServiceModel.Dispatcher.MessageQuery">
  <Metadata><Meta Name="ms.openlocfilehash" Value="398692b5704baefe2ac60469d9fe0ceee2d1e493" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39936418" /></Metadata><TypeSignature Language="C#" Value="public abstract class MessageQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageQuery" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQuery abstract" />
  <TypeSignature Language="F#" Value="type MessageQuery = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b8cc1-101">Define el comportamiento básico de clases empleado para buscar datos de correlación concretos en un mensaje.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-101">Defines the core behavior of classes used to search for specific correlating data in a message.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8cc1-102">La clase <xref:System.ServiceModel.Dispatcher.MessageQuery> es parecida a la clase <xref:System.ServiceModel.Dispatcher.MessageFilter>.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-102">The <xref:System.ServiceModel.Dispatcher.MessageQuery> class is similar to the <xref:System.ServiceModel.Dispatcher.MessageFilter> class.</span></span>  <span data-ttu-id="b8cc1-103">Sin embargo, en lugar de devolver coincidencias, el método <xref:System.ServiceModel.Dispatcher.MessageQuery.Evaluate%2A> devuelve los resultados de la evaluación de una consulta con respecto a un mensaje.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-103">However, instead of returning matches, the <xref:System.ServiceModel.Dispatcher.MessageQuery.Evaluate%2A> method returns the results of evaluating a query against a message.</span></span> <span data-ttu-id="b8cc1-104">El resultado de la consulta es un valor en el mensaje.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-104">The result of the query is a value in the message.</span></span> <span data-ttu-id="b8cc1-105">Utilice el valor como una clave para correlacionar el mensaje con otros mensajes.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-105">Use the value as a key to correlate the message to other messages.</span></span> <span data-ttu-id="b8cc1-106">Para agregar una propiedad nueva a los datos, use el método <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty.Add%2A> de la clase <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty>.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-106">To add a new property for the data, use the <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty.Add%2A> method of the <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b8cc1-107">Para obtener información sobre una implementación concreta de <xref:System.ServiceModel.Dispatcher.MessageQuery>, vea la clase <xref:System.ServiceModel.XPathMessageQuery>.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-107">For a concrete implementation of the <xref:System.ServiceModel.Dispatcher.MessageQuery>, see the <xref:System.ServiceModel.XPathMessageQuery> class.</span></span>  
  
## <a name="using-the-xpathmessagequery-and-messagequerycollection-classes"></a><span data-ttu-id="b8cc1-108">Utilizar las clases XPathMessageQuery y MessageQueryCollection</span><span class="sxs-lookup"><span data-stu-id="b8cc1-108">Using the XPathMessageQuery and MessageQueryCollection classes</span></span>  
 <span data-ttu-id="b8cc1-109">Puede optimizar el proceso de consulta creando un conjunto de objetos de consulta e insertándolos en una instancia de la clase <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-109">You can optimize the query process by creating a set of query objects and inserting them into an instance of the <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b8cc1-110">Para obtener información sobre una implementación concreta de <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>, vea la clase <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection>.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-110">For a concrete implementation of the <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>, see the <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> class.</span></span>  
  
 <span data-ttu-id="b8cc1-111">Un uso común es rellenar la colección con consultas que tienen el mismo predicado XPath y que solo se diferencian en el valor de hoja final.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-111">A common usage is to populate the collection with queries that have the same XPath predicate, but that differ only in the final leaf value.</span></span> <span data-ttu-id="b8cc1-112">Por ejemplo, las siguientes consultas XPath son idénticas, salvo por la última cláusula.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-112">For example, the following XPath queries are identical except for the final clause.</span></span> <span data-ttu-id="b8cc1-113">La primera consulta todos los elementos que hacen que el atributo de cantidad se establezca en 1, y la segunda consulta los elementos con el atributo de producto establecido en 'Contoso':</span><span class="sxs-lookup"><span data-stu-id="b8cc1-113">The first queries for all elements that have the quantity attribute set to 1, and the second queries for elements with the product attribute set to 'Contoso'):</span></span>  
  
```  
"/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 1]"  
"/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@product = 'Contoso']"  
```  
  
 <span data-ttu-id="b8cc1-114">La clase <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> le permite crear tablas de consultas que solo difieren ligeramente, permitiendo un procesamiento más eficaz.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-114">The <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> class allows you to create tables of queries that differ only slightly, enabling more efficient processing.</span></span>  
  
 <span data-ttu-id="b8cc1-115">También puede utilizar la clase <xref:System.ServiceModel.Dispatcher.MessageQueryTable%601> para almacenar y evaluar consultas de mensajes.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-115">Alternatively, you can use the <xref:System.ServiceModel.Dispatcher.MessageQueryTable%601> class to store and evaluate message queries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8cc1-116">En el siguiente ejemplo, se crean un mensaje y consultas de mensajes XPath.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-116">The following example creates a message and XPath message queries.</span></span> <span data-ttu-id="b8cc1-117">Los objetos <xref:System.ServiceModel.XPathMessageQuery> contenidos en un objeto <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> evalúan las consultas.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-117">The queries are evaluated by the <xref:System.ServiceModel.XPathMessageQuery> objects contained in an <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> object.</span></span> <span data-ttu-id="b8cc1-118">Los resultados de cada consulta se prueban utilizando la propiedad <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> de la clase <xref:System.ServiceModel.Dispatcher.XPathResult>.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-118">The results of each query are tested using the <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> property of the <xref:System.ServiceModel.Dispatcher.XPathResult> class.</span></span>  
  
 [!code-csharp[XPathMessageQuery#0](~/samples/snippets/csharp/VS_Snippets_CFX/xpathmessagequery/cs/source.cs#0)]
 [!code-vb[XPathMessageQuery#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xpathmessagequery/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.XPathMessageQuery" />
    <altmember cref="T:System.ServiceModel.Channels.CorrelationDataMessageProperty" />
    <altmember cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" />
    <altmember cref="T:System.ServiceModel.Dispatcher.XPathResult" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageQuery();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8cc1-119">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.MessageQuery" />.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-119">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageQuery" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageQueryCollection">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Dispatcher.MessageQueryCollection CreateMessageQueryCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Dispatcher.MessageQueryCollection CreateMessageQueryCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateMessageQueryCollection () As MessageQueryCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Dispatcher::MessageQueryCollection ^ CreateMessageQueryCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateMessageQueryCollection : unit -&gt; System.ServiceModel.Dispatcher.MessageQueryCollection&#xA;override this.CreateMessageQueryCollection : unit -&gt; System.ServiceModel.Dispatcher.MessageQueryCollection" Usage="messageQuery.CreateMessageQueryCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.MessageQueryCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8cc1-120">Crea una colección de consultas que devuelve un tipo específico de datos asociados a ésta.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-120">Creates a collection of queries that returns a specific type of data associated with it.</span></span></summary>
        <returns><span data-ttu-id="b8cc1-121"><see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" /> La colección de consultas asociadas al tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-121"><see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" /> The collection of queries associated with the data type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8cc1-122">Este método está previsto para su uso por parte de la clase <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-122">This method is intended to be used by the <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Evaluate&lt;TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b8cc1-123">Cuando se invalida en una clase derivada, ejecuta una consulta con respecto al mensaje y devuelve un valor que satisface la consulta.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-123">When overridden in a derived class, runs a query against the message and returns a value that satisfies the query.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8cc1-124">La diferencia entre las dos sobrecargas es que una toma un parámetro <xref:System.ServiceModel.Channels.Message> y no puede examinar el cuerpo, mientras que la otra toma un parámetro <xref:System.ServiceModel.Channels.MessageBuffer> y puede examinar cualquier parte del mensaje.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-124">The difference between the two overloads is that one takes a <xref:System.ServiceModel.Channels.Message> parameter and is not permitted to examine the body; the other takes a <xref:System.ServiceModel.Channels.MessageBuffer> parameter and can examine any part of the message.</span></span> <span data-ttu-id="b8cc1-125">Los encabezados del mensaje se almacenan en búfer automáticamente y pueden consultarse sin utilizarse.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-125">Message headers are automatically buffered and can be queried without being consumed.</span></span> <span data-ttu-id="b8cc1-126">Sin embargo, si se desea consultar el cuerpo, el mensaje completo debe estar almacenado en búfer porque la consulta puede utilizar un cuerpo del mensaje sin búfer.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-126">However, if the body is to be queried, then the entire message must be buffered because an unbuffered message body can be consumed by the query.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract TResult Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract TResult Evaluate(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.Message -&gt; 'Result" Usage="messageQuery.Evaluate message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="b8cc1-127">El tipo del valor que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-127">The type of the value to return.</span></span></typeparam>
        <param name="message"><span data-ttu-id="b8cc1-128">El mensaje que se va a consultar.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-128">The message to query.</span></span></param>
        <summary><span data-ttu-id="b8cc1-129">Cuando se invalida en una clase derivada, ejecuta una consulta con respecto al mensaje y devuelve un resultado.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-129">When overridden in a derived class, runs a query against the message and returns a result.</span></span> <span data-ttu-id="b8cc1-130">No se puede consultar el cuerpo.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-130">The body cannot be queried.</span></span></summary>
        <returns><see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />  
  
<span data-ttu-id="b8cc1-131">Una colección enumerable de resultados que satisface la consulta.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-131">An enumerable collection of results that satisfy the query.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract TResult Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Evaluate(Of TResult) (buffer As MessageBuffer) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract TResult Evaluate(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.MessageBuffer -&gt; 'Result" Usage="messageQuery.Evaluate buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="b8cc1-132">El tipo de objeto que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-132">The type of the object to return.</span></span></typeparam>
        <param name="buffer"><span data-ttu-id="b8cc1-133">El mensaje que se va a consultar.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-133">The message to query.</span></span></param>
        <summary><span data-ttu-id="b8cc1-134">Cuando se invalida en una clase derivada, ejecuta una consulta con respecto al mensaje y devuelve un resultado.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-134">When overridden in a derived class, runs a query against the message and returns a result.</span></span></summary>
        <returns><see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />  
  
<span data-ttu-id="b8cc1-135">Una colección enumerable de resultados que satisface la consulta.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-135">An enumerable collection of results that satisfy the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b8cc1-136">En el siguiente ejemplo, se crean un mensaje y consultas de mensajes XPath.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-136">The following example creates a message and XPath message queries.</span></span> <span data-ttu-id="b8cc1-137">Los objetos <xref:System.ServiceModel.XPathMessageQuery> contenidos en un objeto <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> evalúan las consultas.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-137">The queries are evaluated by the <xref:System.ServiceModel.XPathMessageQuery> objects contained in an <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> object.</span></span> <span data-ttu-id="b8cc1-138">Los resultados de cada consulta se prueban utilizando la propiedad <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> de la clase <xref:System.ServiceModel.Dispatcher.XPathResult>.</span><span class="sxs-lookup"><span data-stu-id="b8cc1-138">The results of each query are tested using the <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> property of the <xref:System.ServiceModel.Dispatcher.XPathResult> class.</span></span>  
  
 [!code-csharp[XPathMessageQuery#0](~/samples/snippets/csharp/VS_Snippets_CFX/xpathmessagequery/cs/source.cs#0)]
 [!code-vb[XPathMessageQuery#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xpathmessagequery/vb/source.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="MessageFilter" FullName="System.ServiceModel.Dispatcher.MessageFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eae5fa24eb364409ef0791dfed7914c12bf7535f" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64101198" /></Metadata><TypeSignature Language="C#" Value="public abstract class MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageFilter abstract" />
  <TypeSignature Language="F#" Value="type MessageFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4f090-101">Clase base <see langword="abstract" /> para distintas clases de filtros utilizadas para realizar consultas en mensajes.</span><span class="sxs-lookup"><span data-stu-id="4f090-101"><see langword="abstract" /> base class for different classes of filters used to query messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f090-102"><xref:System.ServiceModel.Dispatcher.MessageFilter> es una clase `abstract` que los desarrolladores implementan para especificar los criterios que se van a usar para inspeccionar los mensajes.</span><span class="sxs-lookup"><span data-stu-id="4f090-102"><xref:System.ServiceModel.Dispatcher.MessageFilter> is an `abstract` class that developers implement in order to specify the criteria to use for inspecting messages.</span></span> <span data-ttu-id="4f090-103">Normalmente, una aplicación de extremo utiliza filtros para determinar qué hacer con un mensaje en función de un examen de alguna parte del mensaje.</span><span class="sxs-lookup"><span data-stu-id="4f090-103">Typically, filters are used by an endpoint application to determine what to do with a message based on an examination of some part of the message.</span></span> <span data-ttu-id="4f090-104">Un proceso de cola, por ejemplo, puede utilizar una consulta de XPath 1.0 para comprobar el elemento de prioridad de un encabezado conocido para determinar si poner un mensaje al principio de la cola.</span><span class="sxs-lookup"><span data-stu-id="4f090-104">A queuing process, for example, can use an XPath 1.0 query to check the priority element of a known header to determine whether to move a message to the front of the queue.</span></span>  
  
 <span data-ttu-id="4f090-105">Los filtros se almacenan en una tabla de filtros que implementa <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="4f090-105">Filters are stored in a filter table that implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</span></span> <span data-ttu-id="4f090-106">Cada filtro de la tabla está asociado a datos de filtro especificados que se pueden utilizar para indicar qué acciones se deben tomar si un mensaje coincide con el filtro.</span><span class="sxs-lookup"><span data-stu-id="4f090-106">Each filter in the table is associated with specified filter data that can be used to indicate what actions to take if a message matches the filter.</span></span> <span data-ttu-id="4f090-107">Los métodos de <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> se utilizan para determinar si un mensaje satisface un filtro.</span><span class="sxs-lookup"><span data-stu-id="4f090-107">The <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> methods are used to determine if a message satisfies a filter.</span></span>  
  
 <span data-ttu-id="4f090-108">Los criterios utilizados por un filtro no se pueden cambiar una vez que se ha construido el filtro, porque las tablas de filtros no cuentan con una forma de detectar cambios.</span><span class="sxs-lookup"><span data-stu-id="4f090-108">The criteria used by a filter cannot be changed once the filter is constructed because the filter tables have no way to detect a change.</span></span> <span data-ttu-id="4f090-109">La única manera de modificar los criterios de un filtro es la de construir otro y eliminar el filtro existente.</span><span class="sxs-lookup"><span data-stu-id="4f090-109">The only way to modify the criteria of a filter is to construct a new one and delete the existing filter.</span></span>  
  
 <span data-ttu-id="4f090-110">Las clases siguientes implementan la clase `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter>:</span><span class="sxs-lookup"><span data-stu-id="4f090-110">The following classes implement the `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter> class:</span></span>  
  
-   <span data-ttu-id="4f090-111"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter> utiliza una expresión XPath 1.0 para especificar los criterios de una coincidencia.</span><span class="sxs-lookup"><span data-stu-id="4f090-111"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter> uses an XPath 1.0 expression to specify the criteria for a match.</span></span>  
  
-   <span data-ttu-id="4f090-112"><xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> hace que coincidan todos los mensajes.</span><span class="sxs-lookup"><span data-stu-id="4f090-112"><xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> matches all messages.</span></span>  
  
-   <span data-ttu-id="4f090-113"><xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> hace que no coincida ninguno de los mensajes.</span><span class="sxs-lookup"><span data-stu-id="4f090-113"><xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> matches none of the messages.</span></span>  
  
-   <span data-ttu-id="4f090-114"><xref:System.ServiceModel.Dispatcher.ActionMessageFilter> prueba si la acción de un mensaje forma parte de un conjunto especificado de acciones.</span><span class="sxs-lookup"><span data-stu-id="4f090-114"><xref:System.ServiceModel.Dispatcher.ActionMessageFilter> tests whether the action of a message is one of a specified set of actions.</span></span>  
  
-   <span data-ttu-id="4f090-115"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> prueba si un mensaje satisface una dirección de extremo especificada.</span><span class="sxs-lookup"><span data-stu-id="4f090-115"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> tests whether a message satisfies a specified endpoint address.</span></span>  
  
 <span data-ttu-id="4f090-116"><xref:System.ServiceModel.Channels.ChannelListenerBase%601> es una clase base `abstract` que se puede utilizar para escribir agentes de escucha que no se ponen en cola.</span><span class="sxs-lookup"><span data-stu-id="4f090-116"><xref:System.ServiceModel.Channels.ChannelListenerBase%601> is an `abstract` base class that you can use for writing non-queuing listeners.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f090-117">Cuando se llama en una clase derivada, inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />.</span><span class="sxs-lookup"><span data-stu-id="4f090-117">When called in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f090-118">Se protege el constructor de forma que sólo se puedan crear instancias de los filtros derivados de <xref:System.ServiceModel.Dispatcher.MessageFilter>.</span><span class="sxs-lookup"><span data-stu-id="4f090-118">The constructor is protected so that only filters that derive from <xref:System.ServiceModel.Dispatcher.MessageFilter> can be instantiated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; virtual System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;&#xA;override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="messageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData"><span data-ttu-id="4f090-119">Datos asociados a los filtros de la tabla.</span><span class="sxs-lookup"><span data-stu-id="4f090-119">Data associated with the filters in the table.</span></span></typeparam>
        <summary><span data-ttu-id="4f090-120">Crea una tabla de filtros para un filtro que tiene un tipo de datos especificado asociado.</span><span class="sxs-lookup"><span data-stu-id="4f090-120">Creates a filter table for a filter that has a specified type of data associated with it.</span></span></summary>
        <returns><span data-ttu-id="4f090-121">Objeto <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> al que se pueden agregar filtros asociados a <paramref name="FilterData" />.</span><span class="sxs-lookup"><span data-stu-id="4f090-121">An <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> object to which filters associated with <paramref name="FilterData" /> can be added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f090-122">Este método está pensado para que lo llame <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span><span class="sxs-lookup"><span data-stu-id="4f090-122">This method is intended to be called by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span> <span data-ttu-id="4f090-123">Los usuarios deben crear una tabla de filtros llamando a un constructor para la tabla de filtros.</span><span class="sxs-lookup"><span data-stu-id="4f090-123">Users should create a filter table by calling a constructor for the filter table.</span></span> <span data-ttu-id="4f090-124">La implementación predeterminada de este método devuelve una tabla de filtros que llama al método <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> de cada filtro de forma secuencial.</span><span class="sxs-lookup"><span data-stu-id="4f090-124">The default implementation of this method returns a filter table that calls the <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> method of each filter sequentially.</span></span> <span data-ttu-id="4f090-125">Invalide este método para asociar una tabla de filtros personalizada al implementar un filtro.</span><span class="sxs-lookup"><span data-stu-id="4f090-125">Override this method to associate a custom filter table when implementing a filter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f090-126">Si se invalida en una clase derivada, prueba si un mensaje o un mensaje almacenado en búfer satisface los criterios de un filtro.</span><span class="sxs-lookup"><span data-stu-id="4f090-126">When overridden in a derived class, tests whether a message or a buffered message satisfies the criteria of a filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f090-127">La diferencia entre las dos sobrecargas es que una toma un parámetro <xref:System.ServiceModel.Channels.Message> y no puede examinar el cuerpo del mensaje.</span><span class="sxs-lookup"><span data-stu-id="4f090-127">The difference between the two overloads is that one takes a <xref:System.ServiceModel.Channels.Message> parameter and is not permitted to examine the body.</span></span> <span data-ttu-id="4f090-128">La otra toma un parámetro <xref:System.ServiceModel.Channels.MessageBuffer> y puede examinar cualquier parte del mensaje.</span><span class="sxs-lookup"><span data-stu-id="4f090-128">The other takes a <xref:System.ServiceModel.Channels.MessageBuffer> parameter and can examine any part of the message.</span></span> <span data-ttu-id="4f090-129">Los encabezados de mensaje se almacenan en búfer automáticamente y un filtro puede inspeccionarlos sin utilizarse.</span><span class="sxs-lookup"><span data-stu-id="4f090-129">Message headers are automatically buffered and can be inspected by a filter without being consumed.</span></span> <span data-ttu-id="4f090-130">Pero si un filtro debe inspeccionar el cuerpo del mensaje, el mensaje completo debe estar almacenado en búfer porque el cuerpo de mensaje sin almacenar en búfer puede ser utilizado por una consulta, y su contenido se destruye.</span><span class="sxs-lookup"><span data-stu-id="4f090-130">But if the body is to be inspected by a filter, then the entire message must be buffered because an unbuffered message body can be consumed by a query and its contents destroyed.</span></span>  
  
 <span data-ttu-id="4f090-131">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> si no es necesario que se examine el cuerpo del mensaje.</span><span class="sxs-lookup"><span data-stu-id="4f090-131">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> if examination of the body is not required.</span></span> <span data-ttu-id="4f090-132">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> si es necesario que examinar el cuerpo del mensaje.</span><span class="sxs-lookup"><span data-stu-id="4f090-132">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> if examination of the message body is required.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4f090-133">Los mensajes 
            <see langword="Null" /> no son válidos y deben hacer que se inicie una <see cref="T:System.ArgumentNullException" />.</span><span class="sxs-lookup"><span data-stu-id="4f090-133">
            <see langword="Null" /> messages are invalid, and should cause an <see cref="T:System.ArgumentNullException" /> to be thrown.</span></span></para></block>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="messageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="4f090-134">Objeto <see cref="T:System.ServiceModel.Channels.Message" /> que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="4f090-134">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span></span></param>
        <summary><span data-ttu-id="4f090-135">Si se invalida en una clase derivada, prueba si un mensaje satisface los criterios del filtro.</span><span class="sxs-lookup"><span data-stu-id="4f090-135">When overridden in a derived class, tests whether a message satisfies the filter criteria.</span></span> <span data-ttu-id="4f090-136">No se puede examinar el cuerpo del mensaje.</span><span class="sxs-lookup"><span data-stu-id="4f090-136">The body cannot be examined.</span></span></summary>
        <returns><span data-ttu-id="4f090-137"><see langword="true" /> si el objeto <see cref="T:System.ServiceModel.Channels.Message" /> satisface los criterios del filtro; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4f090-137"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the filter criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f090-138">Este método no puede inspeccionar el contenido del cuerpo del mensaje.</span><span class="sxs-lookup"><span data-stu-id="4f090-138">This method cannot inspect the contents of the message body.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="4f090-139">Si un filtro intenta examinar el cuerpo de un mensaje no almacenado en búfer, dicho filtro debe iniciar <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />.</span><span class="sxs-lookup"><span data-stu-id="4f090-139">If the filter attempts to examine the body of an unbuffered message, then the filter must throw an <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />.</span></span> <span data-ttu-id="4f090-140">No debe devolver <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4f090-140">It should not return <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Match (buffer As MessageBuffer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="messageFilter.Match buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="4f090-141">Objeto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="4f090-141">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span></span></param>
        <summary><span data-ttu-id="4f090-142">Si se invalida en una clase derivada, prueba si un mensaje almacenado en búfer satisface los criterios de un filtro.</span><span class="sxs-lookup"><span data-stu-id="4f090-142">When overridden in a derived class, tests whether a buffered message satisfies the criteria of a filter.</span></span></summary>
        <returns><span data-ttu-id="4f090-143"><see langword="true" /> si el objeto <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> satisface los criterios del filtro; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4f090-143"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the filter criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f090-144">El mensaje debe estar totalmente almacenado en búfer si el filtro va a inspeccionar el cuerpo.</span><span class="sxs-lookup"><span data-stu-id="4f090-144">The message must be fully buffered if the body is to be inspected by the filter.</span></span> <span data-ttu-id="4f090-145">El cuerpo del <xref:System.ServiceModel.Channels.MessageBuffer> está totalmente almacenado en búfer y, por consiguiente, puede ser inspeccionado por un filtro.</span><span class="sxs-lookup"><span data-stu-id="4f090-145">The body of the <xref:System.ServiceModel.Channels.MessageBuffer> is fully buffered and therefore can be inspected by a filter.</span></span> <span data-ttu-id="4f090-146">El cuerpo de un <xref:System.ServiceModel.Channels.Message> no se ha almacenado totalmente en búfer y la inspección realizada por el filtro podría consumirlo.</span><span class="sxs-lookup"><span data-stu-id="4f090-146">The body of a <xref:System.ServiceModel.Channels.Message> that has not been fully buffered may be consumed by the filter inspection.</span></span> <span data-ttu-id="4f090-147">El elemento de encabezado de un <xref:System.ServiceModel.Channels.Message> se almacena en búfer automáticamente y, por consiguiente, se puede inspeccionar sin ser consumido.</span><span class="sxs-lookup"><span data-stu-id="4f090-147">The header element of a <xref:System.ServiceModel.Channels.Message> is automatically buffered and therefore can be inspected without being consumed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
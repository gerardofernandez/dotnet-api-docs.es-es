<Type Name="IErrorHandler" FullName="System.ServiceModel.Dispatcher.IErrorHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf69db03105ff28e278282b81cf258534a58baf3" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52611127" /></Metadata><TypeSignature Language="C#" Value="public interface IErrorHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IErrorHandler" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IErrorHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IErrorHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IErrorHandler" />
  <TypeSignature Language="F#" Value="type IErrorHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e712d-101">Permite a un implementador controlar el mensaje del error devuelto al autor de la llamada y, opcionalmente, realizar un procesamiento de errores personalizado, por ejemplo registrándolos.</span><span class="sxs-lookup"><span data-stu-id="e712d-101">Allows an implementer to control the fault message returned to the caller and optionally perform custom error processing such as logging.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e712d-102">Para controlar explícitamente el comportamiento de la aplicación cuando se produce una excepción, implemente el <xref:System.ServiceModel.Dispatcher.IErrorHandler> interfaz y agréguelo a la <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>del <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="e712d-102">To explicitly control the behavior of the application when an exception is thrown, implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler> interface and add it to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>'s <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span> <span data-ttu-id="e712d-103"><xref:System.ServiceModel.Dispatcher.IErrorHandler> le permite controlar explícitamente el error de SOAP generado, decidir si devolverlo al cliente y realizar tareas asociadas, como la creación de registros.</span><span class="sxs-lookup"><span data-stu-id="e712d-103"><xref:System.ServiceModel.Dispatcher.IErrorHandler> enables you to explicitly control the SOAP fault generated, decide whether to send it back to the client, and perform associated tasks, such as logging.</span></span> <span data-ttu-id="e712d-104">Se llama a los controladores de errores en el orden en que se agregaron a la propiedad <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="e712d-104">Error handlers are called in the order in which they were added to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 <span data-ttu-id="e712d-105">Implemente el método <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> para controlar el mensaje del error que se devuelve al cliente.</span><span class="sxs-lookup"><span data-stu-id="e712d-105">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method to control the fault message that is returned to the client.</span></span>  
  
 <span data-ttu-id="e712d-106">Implemente el método <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> para garantizar que se realizan los comportamientos relacionados con errores, como el registro de errores, , asegurar que se producen errores rápidos, el cierre de la aplicación, etc.</span><span class="sxs-lookup"><span data-stu-id="e712d-106">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method to ensure error-related behaviors, including error logging, assuring a fail fast, shutting down the application, and so on.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e712d-107">Dado que se puede llamar al método <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> desde muchos lugares diferentes no hay ninguna garantía acerca de en qué subproceso se llama al método.</span><span class="sxs-lookup"><span data-stu-id="e712d-107">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="e712d-108">No dependa del método <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> que se llama en el subproceso de la operación.</span><span class="sxs-lookup"><span data-stu-id="e712d-108">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method being called on the operation thread.</span></span>  
  
 <span data-ttu-id="e712d-109">Primero se llama a todas las implementaciones de <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A>, antes de enviar un mensaje de respuesta.</span><span class="sxs-lookup"><span data-stu-id="e712d-109">All <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations are called first, prior to sending a response message.</span></span> <span data-ttu-id="e712d-110">Cuando se ha llamado a todas las implementaciones de <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> y vuelven, y si `fault` es no `null`, se devuelve al cliente según el contrato de la operación.</span><span class="sxs-lookup"><span data-stu-id="e712d-110">When all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations have been called and return, and if `fault` is non-`null`, it is sent back to the client according to the operation contract.</span></span> <span data-ttu-id="e712d-111">Si `fault` es `null` una vez que se ha llamado a todas las implementaciones, el valor de la propiedad <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> controla el mensaje de respuesta.</span><span class="sxs-lookup"><span data-stu-id="e712d-111">If `fault` is `null` after all implementations have been called, the response message is controlled by the <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e712d-112">Se pueden producir excepciones una vez que se ha llamado a todas las implementaciones de <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> y se entrega al canal un mensaje de respuesta.</span><span class="sxs-lookup"><span data-stu-id="e712d-112">Exceptions can occur after all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations are called and a response message is handed to the channel.</span></span> <span data-ttu-id="e712d-113">Si se produce una excepción de canal (por ejemplo, problemas al deserializar el mensaje) <xref:System.ServiceModel.Dispatcher.IErrorHandler> se notifica a los objetos.</span><span class="sxs-lookup"><span data-stu-id="e712d-113">If a channel exception occurs (for example, difficulty serializing the message) <xref:System.ServiceModel.Dispatcher.IErrorHandler> objects are notified.</span></span> <span data-ttu-id="e712d-114">En este caso, debe todavía Asegúrese de que el entorno de desarrollo detecta y muestra dichas excepciones, o utiliza el seguimiento para detectar el problema.</span><span class="sxs-lookup"><span data-stu-id="e712d-114">In this case, you should still make sure that your development environment catches and displays such exceptions to you or makes use of tracing to discover the problem.</span></span> <span data-ttu-id="e712d-115">Para obtener más información acerca del seguimiento, vea [utilizando seguimiento de la solución de problemas de la aplicación](~/docs/framework/wcf/diagnostics/tracing/using-tracing-to-troubleshoot-your-application.md).</span><span class="sxs-lookup"><span data-stu-id="e712d-115">For more information about tracing, see [Using Tracing to Troubleshoot Your Application](~/docs/framework/wcf/diagnostics/tracing/using-tracing-to-troubleshoot-your-application.md).</span></span>  
  
 <span data-ttu-id="e712d-116">Una vez enviado el mensaje de respuesta, se llama a todas las implementaciones de <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> en el mismo orden.</span><span class="sxs-lookup"><span data-stu-id="e712d-116">After the response message has been sent, all <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> implementations are called in the same order.</span></span>  
  
 <span data-ttu-id="e712d-117">Normalmente, se agrega una implementación de <xref:System.ServiceModel.Dispatcher.IErrorHandler> a la propiedad <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> del servicio (y del cliente si la comunicación es dúplex).</span><span class="sxs-lookup"><span data-stu-id="e712d-117">Typically, an <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation is added to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property on the service (and the client in the case of duplex communication).</span></span>  
  
 <span data-ttu-id="e712d-118">Puede agregar la propiedad <xref:System.ServiceModel.Dispatcher.IErrorHandler> al tiempo de ejecución implementando un comportamiento (un objeto <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> o <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType> ) y utilizar el comportamiento mediante programación, de un archivo de configuración o con un atributo personalizado, para asociar <xref:System.ServiceModel.Dispatcher.IErrorHandler>.</span><span class="sxs-lookup"><span data-stu-id="e712d-118">You can add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> to the runtime by implementing a behavior (either an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>, or <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType> object) and use the behavior programmatically, from a configuration file or with a custom attribute to attach your <xref:System.ServiceModel.Dispatcher.IErrorHandler>.</span></span>  
  
 <span data-ttu-id="e712d-119">Para obtener más información sobre el uso de comportamientos para modificar el tiempo de ejecución, consulte [configurar y extender el tiempo de ejecución con comportamientos](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span><span class="sxs-lookup"><span data-stu-id="e712d-119">For more information about using behaviors to modify the runtime, see [Configuring and Extending the Runtime with Behaviors](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e712d-120">En el ejemplo de código siguiente se muestra un servicio que implementa <xref:System.ServiceModel.Dispatcher.IErrorHandler> que sólo devuelve <xref:System.ServiceModel.FaultException%601> de tipo `GreetingFault` cuando un método de servicio genera una excepción administrada.</span><span class="sxs-lookup"><span data-stu-id="e712d-120">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="e712d-121">En el ejemplo de código siguiente se muestra cómo utilizar un comportamiento de servicio para agregar la implementación de <xref:System.ServiceModel.Dispatcher.IErrorHandler> a la propiedad <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="e712d-121">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="e712d-122">En el ejemplo de código siguiente se muestra cómo configurar el servicio para cargar el comportamiento de servicio mediante un archivo de configuración de aplicación.</span><span class="sxs-lookup"><span data-stu-id="e712d-122">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="e712d-123">Para obtener más detalles sobre cómo exponer un comportamiento de servicio en un archivo de configuración, vea <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="e712d-123">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  

 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="HandleError">
      <MemberSignature Language="C#" Value="public bool HandleError (Exception error);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleError(class System.Exception error) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleError (error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HandleError(Exception ^ error);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public bool HandleError (Exception exception);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleError(class System.Exception exception) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.HandleError(System.Exception)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HandleError(Exception ^ exception);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member HandleError : Exception -&gt; bool" Usage="iErrorHandler.HandleError exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="e712d-124">Excepción iniciada durante el procesamiento.</span><span class="sxs-lookup"><span data-stu-id="e712d-124">The exception thrown during processing.</span></span></param>
        <param name="exception"><span data-ttu-id="e712d-125">Excepción iniciada durante el procesamiento.</span><span class="sxs-lookup"><span data-stu-id="e712d-125">The exception thrown during processing.</span></span></param>
        <summary><span data-ttu-id="e712d-126">Habilita el procesamiento relacionado con errores y devuelve un valor que indica si el distribuidor anula la sesión y el contexto de la instancia en ciertos casos.</span><span class="sxs-lookup"><span data-stu-id="e712d-126">Enables error-related processing and returns a value that indicates whether the dispatcher aborts the session and the instance context in certain cases.</span></span></summary>
        <returns><span data-ttu-id="e712d-127"><see langword="true" /> si Windows Communication Foundation (WCF) no debe anular la sesión (si la hay) y contexto de la instancia si este no es <see cref="F:System.ServiceModel.InstanceContextMode.Single" />; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e712d-127"><see langword="true" /> if Windows Communication Foundation (WCF) should not abort the session (if there is one) and instance context if the instance context is not <see cref="F:System.ServiceModel.InstanceContextMode.Single" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e712d-128">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e712d-128">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e712d-129">Utilice el método <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> para implementar comportamientos relacionados con errores como registros de errores, notificaciones del sistema, cierre de la aplicación, etc., y devuelva un valor que especifique si se ha administrado adecuadamente la excepción.</span><span class="sxs-lookup"><span data-stu-id="e712d-129">Use the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method to implement error-related behaviors such as error logging, system notifications, shutting down the application, and so on, and return a value that specifies whether the exception has been handled appropriately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e712d-130">Dado que se puede llamar al método <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> desde muchos lugares diferentes no hay ninguna garantía acerca de en qué subproceso se llama al método.</span><span class="sxs-lookup"><span data-stu-id="e712d-130">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="e712d-131">No dependa del método <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> que se llama en el subproceso de la operación.</span><span class="sxs-lookup"><span data-stu-id="e712d-131">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method being called on the operation thread.</span></span>  
  
 <span data-ttu-id="e712d-132">Se llama a todas las implementaciones <xref:System.ServiceModel.Dispatcher.IErrorHandler>.</span><span class="sxs-lookup"><span data-stu-id="e712d-132">All <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementations are called.</span></span> <span data-ttu-id="e712d-133">De forma predeterminada (cuando el valor devuelto es `false`), si hay una excepción, el distribuidor anula todas las sesiones y anula <xref:System.ServiceModel.InstanceContext> si <xref:System.ServiceModel.InstanceContextMode> es difiere de <xref:System.ServiceModel.InstanceContextMode.Single>.</span><span class="sxs-lookup"><span data-stu-id="e712d-133">By default (when the return value is `false`), if there is an exception, the dispatcher aborts any session and aborts the <xref:System.ServiceModel.InstanceContext> if the <xref:System.ServiceModel.InstanceContextMode> is anything other than <xref:System.ServiceModel.InstanceContextMode.Single>.</span></span>  <span data-ttu-id="e712d-134">En ese caso la excepción se considera no controlada y cualquier estado se considera dañado.</span><span class="sxs-lookup"><span data-stu-id="e712d-134">The exception is then considered unhandled and any state is considered corrupt.</span></span>  
  
 <span data-ttu-id="e712d-135">Devuelva `true` de <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> para evitar este comportamiento predeterminado.</span><span class="sxs-lookup"><span data-stu-id="e712d-135">Return `true` from <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> to prevent this default behavior.</span></span> <span data-ttu-id="e712d-136">Si cualquier controlador de errores devuelve `true` indica a WCF que es seguro continuar usando el estado asociado con la solicitud con error.</span><span class="sxs-lookup"><span data-stu-id="e712d-136">If any error handler returns `true` it instructs WCF that it is safe to continue using state associated with the failed request.</span></span>  
  
 <span data-ttu-id="e712d-137">Si ningún controlador de errores devuelve `true` del método <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>, la excepción se considera no controlada y se aplica la respuesta predeterminada, lo que puede producir potencialmente un canal y un <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> anulados al comunicar en un canal de la sesión, o que la propiedad <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> no se establezca como <xref:System.ServiceModel.InstanceContextMode.Single?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e712d-137">If no error handler returns `true` from the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method the exception is considered unhandled and the default response applies, potentially resulting in an aborted <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> and channel when communicating on a session channel or the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> property is not set to <xref:System.ServiceModel.InstanceContextMode.Single?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e712d-138">El parámetro `error` no es nunca `null` y contiene el objeto de excepción que se inició.</span><span class="sxs-lookup"><span data-stu-id="e712d-138">The `error` parameter is never `null` and contains the exception object that was thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e712d-139">En el ejemplo de código siguiente se muestra un servicio que implementa <xref:System.ServiceModel.Dispatcher.IErrorHandler> que sólo devuelve <xref:System.ServiceModel.FaultException%601> de tipo `GreetingFault` cuando un método de servicio genera una excepción administrada.</span><span class="sxs-lookup"><span data-stu-id="e712d-139">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="e712d-140">En el ejemplo de código siguiente se muestra cómo utilizar un comportamiento de servicio para agregar la implementación de <xref:System.ServiceModel.Dispatcher.IErrorHandler> a la propiedad <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="e712d-140">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="e712d-141">En el ejemplo de código siguiente se muestra cómo configurar el servicio para cargar el comportamiento de servicio mediante un archivo de configuración de aplicación.</span><span class="sxs-lookup"><span data-stu-id="e712d-141">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="e712d-142">Para obtener más detalles sobre cómo exponer un comportamiento de servicio en un archivo de configuración, vea <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="e712d-142">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideFault">
      <MemberSignature Language="C#" Value="public void ProvideFault (Exception error, System.ServiceModel.Channels.MessageVersion version, ref System.ServiceModel.Channels.Message fault);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProvideFault(class System.Exception error, class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.Channels.Message&amp; fault) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProvideFault (error As Exception, version As MessageVersion, ByRef fault As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProvideFault(Exception ^ error, System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::Channels::Message ^ % fault);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void ProvideFault (Exception exception, System.ServiceModel.Channels.MessageVersion version, ref System.ServiceModel.Channels.Message fault);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProvideFault(class System.Exception exception, class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.Channels.Message&amp; fault) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProvideFault(Exception ^ exception, System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::Channels::Message ^ % fault);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ProvideFault : Exception * System.ServiceModel.Channels.MessageVersion *  -&gt; unit" Usage="iErrorHandler.ProvideFault (exception, version, fault)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" Index="1" />
        <Parameter Name="fault" Type="System.ServiceModel.Channels.Message" RefType="ref" Index="2" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="e712d-143">Objeto <see cref="T:System.Exception" /> iniciado en el curso de la operación del servicio.</span><span class="sxs-lookup"><span data-stu-id="e712d-143">The <see cref="T:System.Exception" /> object thrown in the course of the service operation.</span></span></param>
        <param name="exception"><span data-ttu-id="e712d-144">Objeto <see cref="T:System.Exception" /> iniciado en el curso de la operación del servicio.</span><span class="sxs-lookup"><span data-stu-id="e712d-144">The <see cref="T:System.Exception" /> object thrown in the course of the service operation.</span></span></param>
        <param name="version"><span data-ttu-id="e712d-145">Versión de SOAP del mensaje.</span><span class="sxs-lookup"><span data-stu-id="e712d-145">The SOAP version of the message.</span></span></param>
        <param name="fault"><span data-ttu-id="e712d-146">Objeto <see cref="T:System.ServiceModel.Channels.Message" /> que se devuelve al cliente, o servicio, en el caso de comunicación dúplex.</span><span class="sxs-lookup"><span data-stu-id="e712d-146">The <see cref="T:System.ServiceModel.Channels.Message" /> object that is returned to the client, or service, in the duplex case.</span></span></param>
        <summary><span data-ttu-id="e712d-147">Permite la creación de un <see cref="T:System.ServiceModel.FaultException`1" /> personalizado que se devuelve de una excepción en el curso de un método de servicio.</span><span class="sxs-lookup"><span data-stu-id="e712d-147">Enables the creation of a custom <see cref="T:System.ServiceModel.FaultException`1" /> that is returned from an exception in the course of a service method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e712d-148">Implemente el método <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> para crear un mensaje de error personalizado que se devuelve al cliente.</span><span class="sxs-lookup"><span data-stu-id="e712d-148">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method to create a custom fault message that is returned to the client.</span></span>  <span data-ttu-id="e712d-149">El <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> siempre se llamará el método para las excepciones que dejan las operaciones, excepto cuando el tiempo de ejecución WCF reconoce la excepción como especialmente grave y se vuelve a producir la excepción propia.</span><span class="sxs-lookup"><span data-stu-id="e712d-149">The <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method will always be called for exceptions that leave operations, except when the WCF runtime recognizes the exception as especially fatal and rethrows the exception itself.</span></span> <span data-ttu-id="e712d-150">Cuando se ha llamado a todas las implementaciones de <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A>, el mensaje de error se devuelve al cliente (si `fault` es no `null`).</span><span class="sxs-lookup"><span data-stu-id="e712d-150">When all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations have been called, the fault message is sent back to the client (if `fault` is non-`null`).</span></span> <span data-ttu-id="e712d-151">Si el `fault` parámetro es `null` el error predeterminado se envía al cliente.</span><span class="sxs-lookup"><span data-stu-id="e712d-151">If the `fault` parameter is `null` the default fault is sent to the client.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e712d-152">El mensaje entrante que produjo el error de procesamiento está disponible mientras dura este método desde la propiedad <xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e712d-152">The inbound message that caused the processing error is available during this method from the <xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e712d-153">Dado que se puede llamar al método <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> desde muchos lugares diferentes no hay ninguna garantía acerca de en qué subproceso se llama al método.</span><span class="sxs-lookup"><span data-stu-id="e712d-153">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="e712d-154">No dependa del método <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> que se llama en el subproceso de la operación.</span><span class="sxs-lookup"><span data-stu-id="e712d-154">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method being called on the operation thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e712d-155">En el ejemplo de código siguiente se muestra un servicio que implementa <xref:System.ServiceModel.Dispatcher.IErrorHandler> que sólo devuelve <xref:System.ServiceModel.FaultException%601> de tipo `GreetingFault` cuando un método de servicio genera una excepción administrada.</span><span class="sxs-lookup"><span data-stu-id="e712d-155">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="e712d-156">En el ejemplo de código siguiente se muestra cómo utilizar un comportamiento de servicio para agregar la implementación de <xref:System.ServiceModel.Dispatcher.IErrorHandler> a la propiedad <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>.</span><span class="sxs-lookup"><span data-stu-id="e712d-156">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="e712d-157">En el ejemplo de código siguiente se muestra cómo configurar el servicio para cargar el comportamiento de servicio mediante un archivo de configuración de aplicación.</span><span class="sxs-lookup"><span data-stu-id="e712d-157">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="e712d-158">Para obtener más detalles sobre cómo exponer un comportamiento de servicio en un archivo de configuración, vea <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="e712d-158">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="XamlMemberInvoker" FullName="System.Xaml.Schema.XamlMemberInvoker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="243bd847b5407c0b553d0c054eac1c272bf164ea" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39994775" /></Metadata><TypeSignature Language="C#" Value="public class XamlMemberInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMemberInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlMemberInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMemberInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMemberInvoker" />
  <TypeSignature Language="F#" Value="type XamlMemberInvoker = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0db56-101">Proporciona un punto de extensión que puede tener acceso a las características de miembro de un miembro XAML a través de técnicas distintas de la reflexión.</span><span class="sxs-lookup"><span data-stu-id="0db56-101">Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0db56-102">El propósito de <xref:System.Xaml.Schema.XamlMemberInvoker> consiste en habilitar un sistema de tipos XAML extensible, esquema y un Runtime activo que no se basen completamente en características CLR como atributos de CLR, información de reflexión a través de <xref:System.Type> y <xref:System.Reflection.MemberInfo>, y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="0db56-102">The purpose of <xref:System.Xaml.Schema.XamlMemberInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="0db56-103">Las subclases de <xref:System.Xaml.Schema.XamlMemberInvoker> se usan como parámetros de entrada para los constructores de clases de esquema XAML alternativos, como <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="0db56-103">Subclasses of <xref:System.Xaml.Schema.XamlMemberInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="0db56-104">Subclase <xref:System.Xaml.XamlMember> y pasar el <xref:System.Xaml.Schema.XamlMemberInvoker> a través del constructor base.</span><span class="sxs-lookup"><span data-stu-id="0db56-104">You subclass <xref:System.Xaml.XamlMember> and pass the <xref:System.Xaml.Schema.XamlMemberInvoker> through to the base constructor.</span></span> <span data-ttu-id="0db56-105">Junto con la definición de un <xref:System.Xaml.Schema.XamlMemberInvoker> para el constructor, también debe proporcionar valores de reemplazo de al menos algunos de los `Lookup` métodos de <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="0db56-105">Along with defining a <xref:System.Xaml.Schema.XamlMemberInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlMember>.</span></span>  
  
 <span data-ttu-id="0db56-106"><xref:System.Xaml.Schema.XamlMemberInvoker> tiene una implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="0db56-106"><xref:System.Xaml.Schema.XamlMemberInvoker> has a default implementation.</span></span> <span data-ttu-id="0db56-107">La implementación predeterminada sigue un modelo similar a la implementación predeterminada de tipos de esquema XAML <xref:System.Xaml.XamlType> y <xref:System.Xaml.XamlMember>: el sistema de tipos CLR se usa para la creación de instancias, valores y las búsquedas, incluido el uso de atributos de CLR, <xref:System.Type> y <xref:System.Reflection.MemberInfo>, y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="0db56-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="0db56-108"><xref:System.Xaml.Schema.XamlMemberInvoker> Proporciona métodos para básico operaciones get y set (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span><span class="sxs-lookup"><span data-stu-id="0db56-108"><xref:System.Xaml.Schema.XamlMemberInvoker> provides methods for basic get and set operations (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span></span> <span data-ttu-id="0db56-109">También proporciona las propiedades <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> y <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, pero estos no son virtuales.</span><span class="sxs-lookup"><span data-stu-id="0db56-109">It also provides the properties <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> and <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, but these are not virtual.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0db56-110">Es posible obtener un <xref:System.Xaml.Schema.XamlMemberInvoker> valor que representa una directiva XAML, que se implementa como una clase privada en la implementación de System.Xaml.</span><span class="sxs-lookup"><span data-stu-id="0db56-110">It may be possible to obtain a <xref:System.Xaml.Schema.XamlMemberInvoker> value that represents a XAML directive, which is implemented as a private class in the System.Xaml implementation.</span></span> <span data-ttu-id="0db56-111">Si intenta llamar a <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> o <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> en este invocador, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="0db56-111">If you attempt to call <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> or <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> on this invoker, an exception is thrown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0db56-112">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="0db56-112">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlMemberInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlMemberInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0db56-113">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="0db56-113">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0db56-114">La implementación predeterminada está vacía.</span><span class="sxs-lookup"><span data-stu-id="0db56-114">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="0db56-115">Este constructor se invoca internamente para proporcionar un valor para <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="0db56-115">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="0db56-116">Para un <xref:System.Xaml.Schema.XamlMemberInvoker> subclase, se espera que usa el <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> firma para la construcción o proporcione una invalidación que llama a <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> como base.</span><span class="sxs-lookup"><span data-stu-id="0db56-116">For a <xref:System.Xaml.Schema.XamlMemberInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> as base.</span></span> <span data-ttu-id="0db56-117">Proporcionar la <xref:System.Xaml.XamlMember> implementa una predeterminada patrón where <xref:System.Xaml.Schema.XamlMemberInvoker> es inmutable.</span><span class="sxs-lookup"><span data-stu-id="0db56-117">Providing the <xref:System.Xaml.XamlMember> implements a default pattern where <xref:System.Xaml.Schema.XamlMemberInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMemberInvoker (System.Xaml.XamlMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMemberInvoker(System::Xaml::XamlMember ^ member);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlMemberInvoker : System.Xaml.XamlMember -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="new System.Xaml.Schema.XamlMemberInvoker member" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="0db56-118">Valor de <see cref="T:System.Xaml.XamlMember" /> para el miembro XAML concreto relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="0db56-118">The <see cref="T:System.Xaml.XamlMember" /> value for the specific XAML member relevant to this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></param>
        <summary><span data-ttu-id="0db56-119">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basándose en la clase <see cref="T:System.Xaml.XamlMember" /> proporcionada.</span><span class="sxs-lookup"><span data-stu-id="0db56-119">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0db56-120">Este constructor se llama internamente en función de la <xref:System.Xaml.XamlMember> donde el <xref:System.Xaml.Schema.XamlMemberInvoker> se usa para la construcción.</span><span class="sxs-lookup"><span data-stu-id="0db56-120">This constructor is called internally based on the <xref:System.Xaml.XamlMember> where the <xref:System.Xaml.Schema.XamlMemberInvoker> is used for construction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0db56-121"><paramref name="member" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0db56-121"><paramref name="member" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj&#xA;override this.GetValue : obj -&gt; obj" Usage="xamlMemberInvoker.GetValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="0db56-122">Instancia del tipo de propietario para el miembro.</span><span class="sxs-lookup"><span data-stu-id="0db56-122">An instance of the owner type for the member.</span></span></param>
        <summary><span data-ttu-id="0db56-123">Obtiene un valor de la propiedad relevante de una instancia.</span><span class="sxs-lookup"><span data-stu-id="0db56-123">Gets a value of the relevant property from an instance.</span></span></summary>
        <returns><span data-ttu-id="0db56-124">El valor de propiedad solicitado.</span><span class="sxs-lookup"><span data-stu-id="0db56-124">The requested property value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0db56-125"><paramref name="instance" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0db56-125"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0db56-126">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlMember" /> desconocida.</span><span class="sxs-lookup"><span data-stu-id="0db56-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span></span>  
  
 <span data-ttu-id="0db56-127">**-o bien-**</span><span class="sxs-lookup"><span data-stu-id="0db56-127">**-or-**</span></span>  
  
<span data-ttu-id="0db56-128">Se invoca este método en un miembro de solo escritura.</span><span class="sxs-lookup"><span data-stu-id="0db56-128">Invoked this method on a write-only member.</span></span>  
  
 <span data-ttu-id="0db56-129">**-o bien-**</span><span class="sxs-lookup"><span data-stu-id="0db56-129">**-or-**</span></span>  
  
 <span data-ttu-id="0db56-130"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0db56-130"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><span data-ttu-id="0db56-131"><para>La implementación base incluye una llamada a la aplicación auxiliar interna <c>ThrowIfUnknown</c>. Esta aplicación auxiliar siempre produce una excepción para los casos donde un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> se basa en un estado desconocido <see cref="T:System.Xaml.XamlMember" />, que incluye casos donde el <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> de la <see cref="T:System.Xaml.XamlMember" /> es <see langword="null" />.  Se produce si la implementación base <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> es <see langword="null" />.  Para las propiedades estáticas (<see cref="P:System.Reflection.MethodBase.IsStatic" /> es <see langword="true" /> por <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) la implementación predeterminada llama <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> en <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> pasando <see langword="null" /> como primer parámetro y empaquetadas <paramref name="instance" /> en el segundo. Para las propiedades no estáticas, llama a <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> y reenvía el <paramref name="instance" /> como el primer parámetro y un paquete vacío como segundo parámetro.</para></span><span class="sxs-lookup"><span data-stu-id="0db56-131"><para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.  The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.  For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> passing <see langword="null" /> as the first parameter and packaged <paramref name="instance" /> in the second. For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards the <paramref name="instance" /> as the first parameter and an empty package as the second parameter.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ instance, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit&#xA;override this.SetValue : obj * obj -&gt; unit" Usage="xamlMemberInvoker.SetValue (instance, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="0db56-132">Instancia del tipo de propietario para el miembro.</span><span class="sxs-lookup"><span data-stu-id="0db56-132">An instance of the owner type for the member.</span></span></param>
        <param name="value"><span data-ttu-id="0db56-133">Valor de la propiedad que se establecerá.</span><span class="sxs-lookup"><span data-stu-id="0db56-133">The property value to set.</span></span></param>
        <summary><span data-ttu-id="0db56-134">Establece un valor de la propiedad relevante en una instancia.</span><span class="sxs-lookup"><span data-stu-id="0db56-134">Sets a value of the relevant property on an instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0db56-135"><paramref name="instance" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0db56-135"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0db56-136">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlMember" /> desconocida.</span><span class="sxs-lookup"><span data-stu-id="0db56-136">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span></span>  
  
 <span data-ttu-id="0db56-137">**-o bien-**</span><span class="sxs-lookup"><span data-stu-id="0db56-137">**-or-**</span></span>  
  
<span data-ttu-id="0db56-138">Se invoca este método en un miembro de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="0db56-138">Invoked this method on a read-only member.</span></span>  
  
 <span data-ttu-id="0db56-139">**-o bien-**</span><span class="sxs-lookup"><span data-stu-id="0db56-139">**-or-**</span></span>  
  
 <span data-ttu-id="0db56-140"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0db56-140"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><span data-ttu-id="0db56-141"><para>La implementación base incluye una llamada a la aplicación auxiliar interna <c>ThrowIfUnknown</c>. Esta aplicación auxiliar siempre produce una excepción para los casos donde un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> se basa en un estado desconocido <see cref="T:System.Xaml.XamlMember" />, que incluye casos donde el <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> de la <see cref="T:System.Xaml.XamlMember" /> es <see langword="null" />.  Se produce si la implementación base <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> es <see langword="null" />.  Para las propiedades estáticas (<see cref="P:System.Reflection.MethodBase.IsStatic" /> es <see langword="true" /> por <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) la implementación predeterminada llama <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> en <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> pasando <see langword="null" /> como primer parámetro y empaquetado <paramref name="instance" /> y <paramref name="value" /> como la segundo parámetro. Para las propiedades no estáticas, llama a <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> y reenvía <paramref name="instance" /> como primer parámetro y <paramref name="value" /> como segundo parámetro.</para></span><span class="sxs-lookup"><span data-stu-id="0db56-141"><para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.  The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.  For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> passing <see langword="null" /> as the first parameter and packaging <paramref name="instance" /> and <paramref name="value" /> as the second parameter. For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards <paramref name="instance" /> as first parameter and <paramref name="value" /> as second parameter.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeValue (instance As Object) As ShouldSerializeResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::Schema::ShouldSerializeResult ShouldSerializeValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult&#xA;override this.ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult" Usage="xamlMemberInvoker.ShouldSerializeValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.ShouldSerializeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="0db56-142">Instancia con la propiedad cuya persistencia se va a examinar.</span><span class="sxs-lookup"><span data-stu-id="0db56-142">The instance with the property to be examined for persistence.</span></span></param>
        <summary><span data-ttu-id="0db56-143">Indica si se debe conservar el valor mediante procesos de serialización.</span><span class="sxs-lookup"><span data-stu-id="0db56-143">Indicates whether the value needs to be persisted by serialization processes.</span></span></summary>
        <returns><span data-ttu-id="0db56-144">Valor de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="0db56-144">A value of the enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0db56-145">La implementación predeterminada devuelve <xref:System.Xaml.Schema.ShouldSerializeResult.Default> si es el propio miembro XAML <xref:System.Xaml.XamlMember.IsUnknown%2A>, o si ningún pertinentes en reflexión de CLR `ShouldSerialize` método se encuentra en el miembro subyacente a través de reflexión de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="0db56-145">The default implementation returns <xref:System.Xaml.Schema.ShouldSerializeResult.Default> if the XAML member itself is <xref:System.Xaml.XamlMember.IsUnknown%2A>, or if no CLR-reflection relevant `ShouldSerialize` method is found on the underlying member through default reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingGetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingGetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingGetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingGetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingGetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0db56-146">Obtiene el objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que obtiene los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="0db56-146">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></summary>
        <value><span data-ttu-id="0db56-147">El objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que obtiene los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0db56-147">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0db56-148">Esta propiedad se basa en una llamada <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> en la construcción de <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="0db56-148">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="0db56-149">Para un estado desconocido <xref:System.Xaml.XamlMember>, o para los casos donde <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> devuelve `null`, esta propiedad devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="0db56-149">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingSetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingSetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0db56-150">Obtiene el objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que establece los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="0db56-150">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></summary>
        <value><span data-ttu-id="0db56-151">Objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que establece los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0db56-151">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0db56-152">Esta propiedad se basa en una llamada <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> en la construcción de <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="0db56-152">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="0db56-153">Para un estado desconocido <xref:System.Xaml.XamlMember>, o para los casos donde <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> devuelve `null`, esta propiedad devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="0db56-153">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlMemberInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlMemberInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnknownInvoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0db56-154">Proporciona un valor estático que representa un objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> desconocido y no implementado totalmente.</span><span class="sxs-lookup"><span data-stu-id="0db56-154">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></summary>
        <value><span data-ttu-id="0db56-155">Un valor estático que representa un objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> desconocido y no implementado totalmente.</span><span class="sxs-lookup"><span data-stu-id="0db56-155">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0db56-156">Proporciona este valor para un <xref:System.Xaml.Schema.XamlMemberInvoker> API definido por el parámetro de System.Xaml normalmente hará que el código llamado producir excepciones.</span><span class="sxs-lookup"><span data-stu-id="0db56-156">Supplying this value for a <xref:System.Xaml.Schema.XamlMemberInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
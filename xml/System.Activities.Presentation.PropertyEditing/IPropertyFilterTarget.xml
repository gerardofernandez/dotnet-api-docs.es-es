<Type Name="IPropertyFilterTarget" FullName="System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2cdc0baa1cffab5b2d493bee3206b686af4746cd" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63925274" /></Metadata><TypeSignature Language="C#" Value="public interface IPropertyFilterTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPropertyFilterTarget" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPropertyFilterTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPropertyFilterTarget" />
  <TypeSignature Language="F#" Value="type IPropertyFilterTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ffb63-101">Interfaz usada por la infraestructura del host para la edición de propiedades con el fin de controlar la funcionalidad de ordenación y filtrado.</span><span class="sxs-lookup"><span data-stu-id="ffb63-101">Interface that is used by the host infrastructure for property editing to handle sorting and filtering functionality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffb63-102">Se usa para determinar si un objeto determinado se debe filtrar.</span><span class="sxs-lookup"><span data-stu-id="ffb63-102">It is used to determine whether a particular object should be filtered out.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplyFilter">
      <MemberSignature Language="C#" Value="public void ApplyFilter (System.Activities.Presentation.PropertyEditing.PropertyFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyFilter(class System.Activities.Presentation.PropertyEditing.PropertyFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyFilter (filter As PropertyFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyFilter(System::Activities::Presentation::PropertyEditing::PropertyFilter ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member ApplyFilter : System.Activities.Presentation.PropertyEditing.PropertyFilter -&gt; unit" Usage="iPropertyFilterTarget.ApplyFilter filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Activities.Presentation.PropertyEditing.PropertyFilter" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="ffb63-103">La nueva instancia de <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" />.</span><span class="sxs-lookup"><span data-stu-id="ffb63-103">The new <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> instance.</span></span></param>
        <summary><span data-ttu-id="ffb63-104">Se usa para establecer un nuevo objeto <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> en la interfaz <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" />.</span><span class="sxs-lookup"><span data-stu-id="ffb63-104">Used to set a new <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> on the <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterApplied">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt; FilterApplied;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt; FilterApplied" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied" />
      <MemberSignature Language="VB.NET" Value="Event FilterApplied As EventHandler(Of PropertyFilterAppliedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Activities::Presentation::PropertyEditing::PropertyFilterAppliedEventArgs ^&gt; ^ FilterApplied;" />
      <MemberSignature Language="F#" Value="member this.FilterApplied : EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt; " Usage="member this.FilterApplied : System.EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffb63-105">Declaración del evento generado cuando se modifica una instancia de <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> mediante una llamada al método <see cref="M:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)" />.</span><span class="sxs-lookup"><span data-stu-id="ffb63-105">Declaration of the event raised when a <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> is changed through a call to <see cref="M:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesFilter">
      <MemberSignature Language="C#" Value="public bool MatchesFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchesFilter" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MatchesFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchesFilter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MatchesFilter : bool" Usage="System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffb63-106">Propiedad de solo lectura que devuelve <see langword="true" /> si la instancia de <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> es una coincidencia para el objeto.</span><span class="sxs-lookup"><span data-stu-id="ffb63-106">Read-only property that returns <see langword="true" /> if the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> is a match for the object.</span></span></summary>
        <value><span data-ttu-id="ffb63-107"><see langword="true" /> si el filtro de propiedad coincide con el destino de filtro de propiedad; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ffb63-107"><see langword="true" /> if the property filter matches the property filter target; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesPredicate">
      <MemberSignature Language="C#" Value="public bool MatchesPredicate (System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesPredicate(class System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)" />
      <MemberSignature Language="VB.NET" Value="Public Function MatchesPredicate (predicate As PropertyFilterPredicate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MatchesPredicate(System::Activities::Presentation::PropertyEditing::PropertyFilterPredicate ^ predicate);" />
      <MemberSignature Language="F#" Value="abstract member MatchesPredicate : System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate -&gt; bool" Usage="iPropertyFilterTarget.MatchesPredicate predicate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate" />
      </Parameters>
      <Docs>
        <param name="predicate"><span data-ttu-id="ffb63-108">La instancia de <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate" /> que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="ffb63-108">The <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate" /> to match against.</span></span></param>
        <summary><span data-ttu-id="ffb63-109">Se usa para determinar si esta interfaz <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> es una coincidencia para una instancia de <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate" /> determinada.</span><span class="sxs-lookup"><span data-stu-id="ffb63-109">Used to determine whether this <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> is a match for a particular <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate" />.</span></span></summary>
        <returns><span data-ttu-id="ffb63-110"><see langword="true" /> si un destino de filtro de propiedad y un predicado de filtro de propiedad coinciden; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ffb63-110"><see langword="true" /> if it there is a match between a property filter target and a property filter predicate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
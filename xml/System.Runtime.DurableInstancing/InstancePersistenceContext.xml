<Type Name="InstancePersistenceContext" FullName="System.Runtime.DurableInstancing.InstancePersistenceContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad341bed6953172fb3eba70952b4f8f56f0e65d7" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52611608" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class InstancePersistenceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InstancePersistenceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstancePersistenceContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InstancePersistenceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstancePersistenceContext sealed" />
  <TypeSignature Language="F#" Value="type InstancePersistenceContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0d5ee-101">Representa información de estado de ejecución mientras se ejecuta un comando de persistencia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d5ee-101">Represents execution state information while a persistence command is being executed.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-102">Una instancia de esta clase se pasa al método TryCommand de implementaciones de proveedor de persistencia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-102">An instance of this class is passed to the TryCommand method of persistence provider implementations.</span></span> <span data-ttu-id="0d5ee-103">Los proveedores de persistencia utilizan esta clase para inspeccionar la vista en memoria de la instancia además de indicar los resultados de las operaciones en el almacén externo, lo que puede afectar a la vista o a otro contexto en memoria.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-103">Persistence providers use this class to inspect the in-memory view of the instance as well as indicate the results of operations on the external store which may affect the view or other in-memory context.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AssociatedInstanceKey">
      <MemberSignature Language="C#" Value="public void AssociatedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociatedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociatedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssociatedInstanceKey(Guid key);" />
      <MemberSignature Language="F#" Value="member this.AssociatedInstanceKey : Guid -&gt; unit" Usage="instancePersistenceContext.AssociatedInstanceKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0d5ee-104">El identificador de la clave de instancia para la clave que se ha asociado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-104">The instance key identifier  for the key that has been associated.</span>
          </span>
          <span data-ttu-id="0d5ee-105">No debe ser Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-105">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-106">Indica que el proveedor de persistencia ha asociado correctamente una clave a la instancia actual en el almacén de instancias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-106">Indicates that the persistence provider has successfully associated a key to the current instance in the instance store.</span>
          </span>
          <span data-ttu-id="0d5ee-107">El identificador de la clave se especifica como un parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-107">The identifier of the key is specified as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-108">La clave de instancia no debe estar asociada.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-108">The instance key must be unassociated.</span></span> <span data-ttu-id="0d5ee-109">El identificador de instancia actual se debe enlazar a una instancia así como un bloqueo en esa instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-109">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginBindReclaimedLock">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginBindReclaimedLock (long instanceVersion, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginBindReclaimedLock(int64 instanceVersion, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginBindReclaimedLock (instanceVersion As Long, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginBindReclaimedLock(long instanceVersion, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginBindReclaimedLock : int64 * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instancePersistenceContext.BeginBindReclaimedLock (instanceVersion, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="0d5ee-110">Versión del bloqueo mantenido en la instancia o cero si el proveedor de persistencia no implementa las versiones de bloqueo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-110">The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="0d5ee-111">Período de tiempo de espera para la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-111">The timeout period for the asynchronous operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="0d5ee-112">Método al que se llama una vez completada la operación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-112">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0d5ee-113">Información de estado asociada a la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-113">The state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-114">Comience una operación asincrónica para enlazar un bloqueo existente en una instancia al identificador de instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-114">Begin an asynchronous operation to bind an existing lock on an instance to the current instance handle.</span>
          </span>
          <span data-ttu-id="0d5ee-115">La versión del bloqueo existente se pasa como parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-115">The version of the existing lock is passed as a parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d5ee-116">Estado de una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-116">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-117">Al intentar adquirir un bloqueo, el proveedor de persistencia puede decidir que la instancia actual ya está bloqueada en el almacén actual.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-117">When attempting to acquire a lock, the persistence provider may decide that the current instance is already locked in the current store.</span></span> <span data-ttu-id="0d5ee-118">Si el token de bloqueo coincide con token de bloqueo del identificador actual, el proveedor de persistencia puede intentar reclamar el bloqueo inspeccionando su versión y pasándola a BeginBindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-118">If the lock token matches the current handle's lock token, then the persistence provider can attempt to reclaim the lock by inspecting its version and passing it to BeginBindReclaimedLock.</span></span> <span data-ttu-id="0d5ee-119">El proveedor de persistencia no debe realizar cambios en la instancia hasta que el bloqueo se reclame correctamente.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-119">The persistence provider must not make changes to the instance until the lock is successfully reclaimed.</span></span> <span data-ttu-id="0d5ee-120">Si no hay ningún otro identificador enlazado al bloqueo, la operación BeginBindReclaimedLock se ejecuta correctamente y el identificador actual se enlaza al bloqueo.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-120">If no other handle is bound to the lock, then the BeginBindReclaimedLock operation succeeds and the current handle becomes bound to the lock.</span></span> <span data-ttu-id="0d5ee-121">De lo contrario, BeginBindReclaimedLock o EndBindReclaimedLock producen la excepción InstanceHandleConflictException.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-121">Otherwise, BeginBindReclaimedLock or EndBindReclaimedLock throws InstanceHandleConflictException.</span></span> <span data-ttu-id="0d5ee-122">Si los comandos están en curso en otros identificadores, la operación puede no completarse mientras espera el resultado de esos comandos para decidir si el bloqueo se puede reclamar.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-122">If commands are in progress on other handles, the operation may not complete while waiting for the outcome of those commands to decide whether the lock can be reclaimed.</span></span>  
  
 <span data-ttu-id="0d5ee-123">El identificador de instancia actual se debe enlazar al propietario de un bloqueo y una instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-123">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="0d5ee-124">No se debe completar la instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-124">The instance must not be completed.</span></span> <span data-ttu-id="0d5ee-125">El token de bloqueo asociado al propietario del bloqueo se utiliza para identificar a este.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-125">The lock token associated with the lock owner is used to identify the owner of the lock.</span></span>  
  
 <span data-ttu-id="0d5ee-126">Una vez enlazado un bloqueo a un identificador, sigue estando enlazado durante la vigencia de este.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-126">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="0d5ee-127">No se pueden cambiar ni el token de bloqueo ni la versión de la instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-127">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instancePersistenceContext.BeginExecute (command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="0d5ee-128">Comando de persistencia que se va a ejecutar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-128">The persistence command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="0d5ee-129">Valor de tiempo de espera para la operación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-129">The time-out value for the operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="0d5ee-130">Delegado que recibe la notificación de la recepción asincrónica que completa una operación de solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-130">The delegate that receives the notification of the asynchronous receive that a request operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="0d5ee-131">Información de estado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-131">The state information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-132">Comienza ejecutando un comando de persistencia de manera asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-132">Begins executing a persistence command asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d5ee-133">Estado de una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-133">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-134">Un proveedor de persistencia puede utilizar este método para ejecutar los subcomandos como parte de un comando.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-134">A persistence provider can use this method to execute sub-commands as part of a command.</span></span> <span data-ttu-id="0d5ee-135">El subcomando se ejecutará utilizando BeginTryCommand, de forma similar a los comandos pasados a InstanceStore.BeginExecute.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-135">The sub-command will be executed using BeginTryCommand, similar to commands passed to InstanceStore.BeginExecute.</span></span> <span data-ttu-id="0d5ee-136">Los comandos pueden estar anidados, pero un comando no debe ejecutar más de un subcomando a la vez.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-136">Commands can be nested, but a command must not execute more than one sub-command at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindAcquiredLock">
      <MemberSignature Language="C#" Value="public void BindAcquiredLock (long instanceVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindAcquiredLock(int64 instanceVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindAcquiredLock (instanceVersion As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindAcquiredLock(long instanceVersion);" />
      <MemberSignature Language="F#" Value="member this.BindAcquiredLock : int64 -&gt; unit" Usage="instancePersistenceContext.BindAcquiredLock instanceVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="0d5ee-137">La versión del bloqueo adquirido en la instancia o cero si el proveedor de persistencia no implementa las versiones de bloqueo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-137">Version of the lock acquired on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-138">Enlaza un bloqueo recién adquirido en una instancia al identificador de instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-138">Binds a newly acquired lock on an instance to the current instance handle.</span>
          </span>
          <span data-ttu-id="0d5ee-139">La versión del bloqueo adquirido se pasa como parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-139">The version of the acquired lock is passed as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-140">Si un proveedor de persistencia implementa las versiones de bloqueo, cada vez que un bloqueo se adquiera en la instancia, la versión debe incrementarse en uno en el almacén externo.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-140">If a persistence provider implements lock versioning, then each time a lock is acquired on the instance, the version must be incremented by one in the external store.</span></span> <span data-ttu-id="0d5ee-141">La primera vez que se bloquea la instancia, la versión debe ser 1.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-141">The first time the instance is locked, the version should be 1.</span></span> <span data-ttu-id="0d5ee-142">Cada adquisición de bloqueo invalida el bloqueo anterior.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-142">Each lock acquisition invalidates the previous lock.</span></span> <span data-ttu-id="0d5ee-143">El identificador de instancia actual se debe enlazar al propietario de un bloqueo y una instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-143">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="0d5ee-144">No se debe completar la instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-144">The instance must not be completed.</span></span> <span data-ttu-id="0d5ee-145">El token de bloqueo asociado al propietario del bloqueo se utiliza para identificar a este.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-145">The lock token associated with the lock owner is used to identify the owner of the lock</span></span>  
  
 <span data-ttu-id="0d5ee-146">Una vez enlazado un bloqueo a un identificador, sigue estando enlazado durante la vigencia de este.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-146">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="0d5ee-147">No se pueden cambiar ni el token de bloqueo ni la versión de la instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-147">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindEvent">
      <MemberSignature Language="C#" Value="public void BindEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindEvent (persistenceEvent As InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent);" />
      <MemberSignature Language="F#" Value="member this.BindEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent -&gt; unit" Usage="instancePersistenceContext.BindEvent persistenceEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">
          <span data-ttu-id="0d5ee-148">Objeto <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> que contiene información sobre el evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-148">An <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> object containing information about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-149">Enlaza un <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> a un identificador de instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-149">Binds an <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> to an instance handle.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindInstance">
      <MemberSignature Language="C#" Value="public void BindInstance (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindInstance(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindInstance (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindInstance(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.BindInstance : Guid -&gt; unit" Usage="instancePersistenceContext.BindInstance instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="0d5ee-150">Identificador de instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-150">An instance identifier.</span>
          </span>
          <span data-ttu-id="0d5ee-151">No debe ser Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-151">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-152">Enlaza una instancia cuyo identificador está especificado como un parámetro al identificador de la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-152">Binds an instance whose identifier is specified as a parameter to the current instance handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-153">Una vez enlazada una instancia a un identificador, sigue estando enlazada durante la vigencia de este.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-153">Once an instance is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="0d5ee-154">Ninguna otra instancia se puede enlazar al identificador.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-154">No other instance can ever be bound to the handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindInstanceOwner">
      <MemberSignature Language="C#" Value="public void BindInstanceOwner (Guid instanceOwnerId, Guid lockToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindInstanceOwner(valuetype System.Guid instanceOwnerId, valuetype System.Guid lockToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindInstanceOwner (instanceOwnerId As Guid, lockToken As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindInstanceOwner(Guid instanceOwnerId, Guid lockToken);" />
      <MemberSignature Language="F#" Value="member this.BindInstanceOwner : Guid * Guid -&gt; unit" Usage="instancePersistenceContext.BindInstanceOwner (instanceOwnerId, lockToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceOwnerId" Type="System.Guid" />
        <Parameter Name="lockToken" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceOwnerId">
          <span data-ttu-id="0d5ee-155">Identificador del propietario de la instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-155">The identifier for the instance owner.</span>
          </span>
        </param>
        <param name="lockToken">
          <span data-ttu-id="0d5ee-156">Token de bloqueo del propietario de la instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-156">The lock token of the instance owner.</span>
          </span>
          <span data-ttu-id="0d5ee-157">Un proveedor de persistencia puede decidir usar el mismo valor para el identificador del propietario de instancia y el token de bloqueo del propietario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-157">A persistence provider may choose to use the same value for the instance owner identifier and the owner's lock token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-158">Enlaza un propietario de instancia al identificador de instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-158">Binds an instance owner to the current instance handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-159">Una vez enlazado el propietario de una instancia a un identificador, sigue estando enlazado durante la vigencia de este.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-159">Once an instance owner is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="0d5ee-160">Ningún otro propietario de la instancia se puede enlazar al identificador.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-160">No other instance owner can ever be bound to the handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindReclaimedLock">
      <MemberSignature Language="C#" Value="public void BindReclaimedLock (long instanceVersion, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindReclaimedLock(int64 instanceVersion, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindReclaimedLock (instanceVersion As Long, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindReclaimedLock(long instanceVersion, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.BindReclaimedLock : int64 * TimeSpan -&gt; unit" Usage="instancePersistenceContext.BindReclaimedLock (instanceVersion, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="0d5ee-161">La versión del bloqueo mantenido en la instancia o cero si el proveedor de persistencia no implementa las versiones de bloqueo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-161">Version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="0d5ee-162">Valor de tiempo de espera para la operación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-162">The time-out value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-163">Enlaza un bloqueo existente en una instancia al identificador de instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-163">Binds an existing lock on an instance to the current instance handle.</span>
          </span>
          <span data-ttu-id="0d5ee-164">La versión del bloqueo existente se pasa como parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-164">The version of the existing lock is passed as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-165">Al intentar adquirir un bloqueo, el proveedor de persistencia puede decidir que la instancia actual ya está bloqueada en el almacén actual.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-165">When attempting to acquire a lock, the persistence provider may decide that the current instance is already locked in the current store.</span></span> <span data-ttu-id="0d5ee-166">Si el token de bloqueo coincide con token de bloqueo del identificador actual, el proveedor de persistencia puede intentar reclamar el bloqueo inspeccionando su versión y pasándola a BindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-166">If the lock token matches the current handle's lock token, then the persistence provider can attempt to reclaim the lock by inspecting its version and passing it to BindReclaimedLock.</span></span> <span data-ttu-id="0d5ee-167">El proveedor de persistencia no debe realizar cambios en la instancia hasta que el bloqueo se reclame correctamente.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-167">The persistence provider must not make changes to the instance until the lock is successfully reclaimed.</span></span> <span data-ttu-id="0d5ee-168">Si no hay ningún otro identificador enlazado al bloqueo, BindReclaimedLock se ejecuta correctamente y el identificador actual se enlaza al bloqueo.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-168">If no other handle is bound to the lock, then BindReclaimedLock succeeds and the current handle becomes bound to the lock.</span></span> <span data-ttu-id="0d5ee-169">De lo contrario, BindReclaimedLock produce la excepción InstanceHandleConflictException.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-169">Otherwise, BindReclaimedLock throws InstanceHandleConflictException.</span></span> <span data-ttu-id="0d5ee-170">Si hay comandos en curso en otros identificadores, BindReclaimedLock puede bloquear la espera del resultado de esos comandos antes de decidir si se puede reclamar el bloqueo.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-170">If commands are in progress on other handles, BindReclaimedLock may block waiting for the outcome of those commands before deciding whether the lock can be reclaimed.</span></span>  
  
 <span data-ttu-id="0d5ee-171">El identificador de instancia actual se debe enlazar al propietario de un bloqueo y una instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-171">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="0d5ee-172">No se debe completar la instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-172">The instance must not be completed.</span></span> <span data-ttu-id="0d5ee-173">El token de bloqueo asociado al propietario del bloqueo se utiliza para identificar a este.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-173">The lock token associated with the lock owner is used to identify the owner of the lock.</span></span>  
  
 <span data-ttu-id="0d5ee-174">Una vez enlazado un bloqueo a un identificador, sigue estando enlazado durante la vigencia de este.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-174">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="0d5ee-175">No se pueden cambiar ni el token de bloqueo ni la versión de la instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-175">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedInstance">
      <MemberSignature Language="C#" Value="public void CompletedInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompletedInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompletedInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompletedInstance();" />
      <MemberSignature Language="F#" Value="member this.CompletedInstance : unit -&gt; unit" Usage="instancePersistenceContext.CompletedInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d5ee-176">Indica que el proveedor de persistencia ha marcado correctamente la instancia actual como completa en el almacén de instancias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-176">Indicates that the persistence provider has successfully marked the current instance as complete in the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-177">El identificador de instancia actual se debe enlazar a una instancia así como un bloqueo en esa instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-177">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="0d5ee-178">La instancia debe inicializarse y no completarse aún.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-178">The instance must be initialized and not be already completed.</span></span> <span data-ttu-id="0d5ee-179">(Una instancia está inicializada si se ha conservado alguna vez en ella un conjunto de datos de instancia). Se deben completar todas las claves asociadas a la instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-179">(An instance is initialized if a set of instance data has ever been persisted to it.) All of the keys associated to the instance must be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedInstanceKey">
      <MemberSignature Language="C#" Value="public void CompletedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompletedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompletedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompletedInstanceKey(Guid key);" />
      <MemberSignature Language="F#" Value="member this.CompletedInstanceKey : Guid -&gt; unit" Usage="instancePersistenceContext.CompletedInstanceKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0d5ee-180">Identificador de la clave de instancia para la clave que se ha completado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-180">The instance key identifier for the key that has been completed.</span>
          </span>
          <span data-ttu-id="0d5ee-181">No debe ser Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-181">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-182">Indica que el proveedor de persistencia ha marcado correctamente una clave como completa en el almacén externo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-182">Indicates that the persistence provider has successfully marked a key as complete in the external store.</span>
          </span>
          <span data-ttu-id="0d5ee-183">El identificador de la clave se especifica como un parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-183">The identifier of the key is specified as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-184">El identificador de instancia actual se debe enlazar a una instancia así como un bloqueo en esa instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-184">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="0d5ee-185">La clave de instancia debe estar asociada a la instancia actual y no estar completada aún.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-185">The instance key must be associated to the current instance and not be already completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindReclaimedLockException">
      <MemberSignature Language="C#" Value="public Exception CreateBindReclaimedLockException (long instanceVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Exception CreateBindReclaimedLockException(int64 instanceVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBindReclaimedLockException (instanceVersion As Long) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ CreateBindReclaimedLockException(long instanceVersion);" />
      <MemberSignature Language="F#" Value="member this.CreateBindReclaimedLockException : int64 -&gt; Exception" Usage="instancePersistenceContext.CreateBindReclaimedLockException instanceVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="0d5ee-186">Versión del bloqueo mantenido en la instancia o cero si el proveedor de persistencia no implementa las versiones de bloqueo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-186">The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-187">Crea una instancia de una excepción que se puede producir desde TryCommand para desencadenar el comportamiento de BindReclaimedLock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-187">Creates an instance of an exception which can be thrown from TryCommand to trigger BindReclaimedLock behavior.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d5ee-188">Una excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-188">An exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-189">Código de ejemplo:</span><span class="sxs-lookup"><span data-stu-id="0d5ee-189">Sample code:</span></span>  
  
```  
  
protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)  
{  
    throw context.CreateBindReclaimedLockException(5);  
}  
is equivalent to  
protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)  
{  
    context.BindReclaimedLock(5, timeout);  
    throw new OperationCanceledException();  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBindReclaimedLock">
      <MemberSignature Language="C#" Value="public void EndBindReclaimedLock (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndBindReclaimedLock(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndBindReclaimedLock (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndBindReclaimedLock(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndBindReclaimedLock : IAsyncResult -&gt; unit" Usage="instancePersistenceContext.EndBindReclaimedLock result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="0d5ee-190">Resultado de la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-190">The result of the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-191">Finaliza la operación asincrónica iniciada por el método <see cref="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-191">Ends the asynchronous operation started by the <see cref="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public void EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndExecute (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndExecute(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; unit" Usage="instancePersistenceContext.EndExecute result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="0d5ee-192">Estado de una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-192">The status of an asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-193">Finaliza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-193">Ends the asynchronous operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (command As InstancePersistenceCommand, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; unit" Usage="instancePersistenceContext.Execute (command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="0d5ee-194">Comando de persistencia que se va a ejecutar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-194">The persistence command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="0d5ee-195">Valor de tiempo de espera para la operación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-195">The time-out value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-196">Ejecuta un comando de persistencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-196">Executes a persistence command.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-197">Un proveedor de persistencia puede utilizar este método para ejecutar los subcomandos como parte de un comando.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-197">A persistence provider can use this method to execute sub-commands as part of a command.</span></span> <span data-ttu-id="0d5ee-198">El subcomando se ejecutará utilizando TryCommand, de forma similar a los comandos pasados a InstanceStore.Execute.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-198">The sub-command will be executed using TryCommand, similar to commands passed to InstanceStore.Execute.</span></span> <span data-ttu-id="0d5ee-199">Los comandos pueden estar anidados, pero un comando no debe ejecutar más de un subcomando a la vez.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-199">Commands can be nested, but a command must not execute more than one sub-command at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle InstanceHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceHandle InstanceHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceHandle As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceHandle ^ InstanceHandle { System::Runtime::DurableInstancing::InstanceHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceHandle : System.Runtime.DurableInstancing.InstanceHandle" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d5ee-200">Obtiene el identificador de instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-200">Gets the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d5ee-201">Identificador de instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-201">The current instance handle.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceVersion">
      <MemberSignature Language="C#" Value="public long InstanceVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceVersion As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceVersion { long get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceVersion : int64" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d5ee-202">Obtiene la versión del bloqueo que el identificador de instancia actual mantiene en la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-202">Gets the version of the lock held on the current instance by the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d5ee-203">La versión del bloqueo de instancia enlazado al identificador de instancia actual, o -1 si el identificador no está enlazado a un bloqueo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-203">The version of the instance lock bound to the current instance handle, or -1 if the handle isn't bound to a lock.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-204">El proveedor de persistencia debe comprobar este valor con la versión del bloqueo que se mantiene en una instancia en el almacén de instancias al realizar una operación que requiere un bloqueo (como conservar los datos de la instancia) utilizando un identificador enlazado al bloqueo.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-204">The persistence provider should check this value against the lock version of the lock held on an instance in the instance store when performing an operation that requires a lock (such as persisting instance data) using a handle bound to the lock.</span></span> <span data-ttu-id="0d5ee-205">Si no coincide con la versión del bloqueo, el comando debe producir un error con la excepción InstanceLockLostException.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-205">If the lock version doesn't match, the command should fail with InstanceLockLostException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceView">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView InstanceView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceView InstanceView" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceView As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceView ^ InstanceView { System::Runtime::DurableInstancing::InstanceView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceView : System.Runtime.DurableInstancing.InstanceView" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d5ee-206">Obtiene el objeto de vista de instancia que representa el estado en memoria de la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-206">Gets the instance view object that represents the in-memory state of the current instance.</span>
          </span>
          <span data-ttu-id="0d5ee-207">Esta vista refleja las actualizaciones realizadas por el comando en curso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-207">This view reflects updates as they are made by the command in progress.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d5ee-208">Objeto de vista de instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-208">The instance view object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadedInstance">
      <MemberSignature Language="C#" Value="public void LoadedInstance (System.Runtime.DurableInstancing.InstanceState state, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; instanceData, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; instanceMetadata, System.Collections.Generic.IDictionary&lt;Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt; associatedInstanceKeyMetadata, System.Collections.Generic.IDictionary&lt;Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt; completedInstanceKeyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadedInstance(valuetype System.Runtime.DurableInstancing.InstanceState state, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; instanceData, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; instanceMetadata, class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt;&gt; associatedInstanceKeyMetadata, class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt;&gt; completedInstanceKeyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadedInstance (state As InstanceState, instanceData As IDictionary(Of XName, InstanceValue), instanceMetadata As IDictionary(Of XName, InstanceValue), associatedInstanceKeyMetadata As IDictionary(Of Guid, IDictionary(Of XName, InstanceValue)), completedInstanceKeyMetadata As IDictionary(Of Guid, IDictionary(Of XName, InstanceValue)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadedInstance(System::Runtime::DurableInstancing::InstanceState state, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ instanceData, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ instanceMetadata, System::Collections::Generic::IDictionary&lt;Guid, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^&gt; ^ associatedInstanceKeyMetadata, System::Collections::Generic::IDictionary&lt;Guid, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^&gt; ^ completedInstanceKeyMetadata);" />
      <MemberSignature Language="F#" Value="member this.LoadedInstance : System.Runtime.DurableInstancing.InstanceState * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * System.Collections.Generic.IDictionary&lt;Guid, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt;&gt; * System.Collections.Generic.IDictionary&lt;Guid, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt;&gt; -&gt; unit" Usage="instancePersistenceContext.LoadedInstance (state, instanceData, instanceMetadata, associatedInstanceKeyMetadata, completedInstanceKeyMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Runtime.DurableInstancing.InstanceState" />
        <Parameter Name="instanceData" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="instanceMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="associatedInstanceKeyMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt;" />
        <Parameter Name="completedInstanceKeyMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="0d5ee-209">Información del estado de la instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-209">The instance state information.</span>
          </span>
        </param>
        <param name="instanceData">
          <span data-ttu-id="0d5ee-210">Los datos de instancia como un diccionario de objetos <see cref="T:System.Xml.Linq.XName" /> y <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-210">The instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="instanceMetadata">
          <span data-ttu-id="0d5ee-211">Metadatos de instancia como una colección de objetos <see cref="T:System.Xml.Linq.XName" /> y <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-211">Instance metadata as a collection of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="associatedInstanceKeyMetadata">
          <span data-ttu-id="0d5ee-212">Metadatos de clave de instancia asociada como un diccionario de metadatos de identificador y de clave de instancia, que es un diccionario de objetos <see cref="T:System.Xml.Linq.XName" /> y <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-212">Associated instance key metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="completedInstanceKeyMetadata">
          <span data-ttu-id="0d5ee-213">Los metadatos de instancia completados como un diccionario de metadatos de identificador y de clave de instancia, que es un diccionario de objetos <see cref="T:System.Xml.Linq.XName" /> y <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-213">Completed instance metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-214">Indica que el proveedor de persistencia ha recuperado correctamente la instancia actual del almacén de instancias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-214">Indicates that the persistence provider has successfully retrieved the current instance from the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-215">El identificador de instancia actual se debe enlazar a una instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-215">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="0d5ee-216">Si el identificador de instancia se enlaza a un bloqueo o la instancia cargada se marca como completa, se considera que los datos cargados son coherentes; de lo contrario, se consideran dudosos.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-216">If the instance handle is bound to a lock or the loaded instance is marked as complete, the loaded data is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockToken">
      <MemberSignature Language="C#" Value="public Guid LockToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid LockToken" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LockToken As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid LockToken { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.LockToken : Guid" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d5ee-217">Obtiene el token de bloqueo del propietario de la instancia enlazado al identificador de instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-217">Gets the lock token of the instance owner bound to the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d5ee-218">El token de bloqueo enlazado al identificador de instancia actual o Guid.Empty si el identificador no está enlazado a un propietario de instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-218">The lock token bound to the current instance handle, or Guid.Empty if the handle isn't bound to an instance owner.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-219">El proveedor de persistencia debe comprobar este valor con el token del bloqueo que se mantiene en una instancia en el almacén de instancias al realizar una operación que requiere un bloqueo (como conservar los datos de la instancia) utilizando un identificador enlazado al bloqueo.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-219">The persistence provider should check this value against the lock token of the lock held on an instance in the instance store when performing an operation that requires a lock (such as persisting instance data) using a handle bound to the lock.</span></span> <span data-ttu-id="0d5ee-220">Si no coincide con el token de bloqueo, debe generar un error en el comando con la excepción InstanceLockLostException.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-220">If the lock token doesn't match, the command should fail with InstanceLockLostException.</span></span>  
  
 <span data-ttu-id="0d5ee-221">El proveedor de persistencia debe utilizar este valor como el token de bloqueo al adquirir un nuevo bloqueo en una instancia (por ejemplo, al conservar los datos de instancia usando un identificador que no está enlazado a un bloqueo).</span><span class="sxs-lookup"><span data-stu-id="0d5ee-221">The persistence provider should use this value as the lock token when acquiring a new lock on an instance (such as persisting instance data using a handle not already bound to a lock).</span></span> <span data-ttu-id="0d5ee-222">Si la instancia ya está bloqueada en el almacén de instancias y el token de bloqueo coincide con este token de bloqueo, el proveedor de persistencia puede intentar reclamar la instancia mediante BindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-222">If the instance is already locked in the instance store and the lock token matches this lock token, the persistence provider can attempt to reclaim the instance using BindReclaimedLock.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistedInstance">
      <MemberSignature Language="C#" Value="public void PersistedInstance (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PersistedInstance(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PersistedInstance (data As IDictionary(Of XName, InstanceValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PersistedInstance(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.PersistedInstance : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; -&gt; unit" Usage="instancePersistenceContext.PersistedInstance data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="0d5ee-223">Datos de instancia como un diccionario de objetos <see cref="T:System.Xml.Linq.XName" /> y <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-223">Instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-224">Indica que el proveedor de persistencia ha conservado correctamente un conjunto de datos de instancia en el almacén de instancias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-224">Indicates that the persistence provider has successfully persisted a set of instance data to the instance store.</span>
          </span>
          <span data-ttu-id="0d5ee-225">Esto tiene el efecto de inicializar la instancia si no estaba inicializada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-225">This has the effect of initializing the instance if it wasn't already.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-226">El identificador de instancia actual se debe enlazar a una instancia así como un bloqueo en esa instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-226">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="0d5ee-227">Cada conjunto de datos de instancia reemplaza el conjunto anterior por completo.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-227">Each set of instance data completely replaces the previous set.</span></span> <span data-ttu-id="0d5ee-228">El conjunto de datos de instancia puede ser nulo, que es igual que estar vacío.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-228">The set of instance data may be null – this is the same as empty.</span></span> <span data-ttu-id="0d5ee-229">Al conservar un conjunto nulo de datos de instancia, se elimina el conjunto existente de datos de instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-229">Persisting a null set of instance data deletes the existing set of instance data.</span></span> <span data-ttu-id="0d5ee-230">(Conservar un conjunto de datos de instancia no tiene ningún efecto en los metadatos de la instancia).</span><span class="sxs-lookup"><span data-stu-id="0d5ee-230">(Persisting a set of instance data has no effect on instance metadata.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueriedInstanceStore">
      <MemberSignature Language="C#" Value="public void QueriedInstanceStore (System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QueriedInstanceStore(class System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub QueriedInstanceStore (queryResult As InstanceStoreQueryResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void QueriedInstanceStore(System::Runtime::DurableInstancing::InstanceStoreQueryResult ^ queryResult);" />
      <MemberSignature Language="F#" Value="member this.QueriedInstanceStore : System.Runtime.DurableInstancing.InstanceStoreQueryResult -&gt; unit" Usage="instancePersistenceContext.QueriedInstanceStore queryResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryResult" Type="System.Runtime.DurableInstancing.InstanceStoreQueryResult" />
      </Parameters>
      <Docs>
        <param name="queryResult">
          <span data-ttu-id="0d5ee-231">Resultados de una consulta realizada en un almacén de instancias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-231">The results of a query against an instance store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-232">Agrega el objeto <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> pasado como parámetro a una lista de objetos <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> en una vista <see cref="T:System.Runtime.DurableInstancing.InstanceView" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-232">Adds the <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> passed as a parameter to a list of <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> objects in an <see cref="T:System.Runtime.DurableInstancing.InstanceView" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceKeyMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceKeyMetadata (Guid key, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceKeyMetadata(valuetype System.Guid key, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceKeyMetadata (key As Guid, metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceKeyMetadata(Guid key, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberSignature Language="F#" Value="member this.ReadInstanceKeyMetadata : Guid * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * bool -&gt; unit" Usage="instancePersistenceContext.ReadInstanceKeyMetadata (key, metadata, complete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0d5ee-233">Identificador de clave de instancia para la clave cuyos metadatos se leyeron.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-233">The instance key identifier for the key whose metadata was read.</span>
          </span>
          <span data-ttu-id="0d5ee-234">No debe ser Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-234">Must not be Guid.Empty.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="0d5ee-235">Metadatos como un diccionario de objetos <see cref="T:System.Xml.Linq.XName" /> y <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-235">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="complete">
          <span data-ttu-id="0d5ee-236">
            <see langword="True" /> si los metadatos representan todos los metadatos asociados a la clave de instancia; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-236">
              <see langword="True" /> if the metadata represents all of the metadata associated to the instance key, otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-237">Indica que el proveedor de persistencia ha leído correctamente algunos metadatos de clave de instancia para una clave asociada a la instancia actual del almacén de instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-237">Indicates that the persistence provider has successfully read some instance key metadata for a key associated to the current instance from the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-238">El identificador de instancia actual se debe enlazar a una instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-238">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="0d5ee-239">Si el identificador de instancia se enlaza a un bloqueo o la instancia actual se marca como completa, se considera que los metadatos son coherentes; de lo contrario, se consideran dudosos.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-239">If the instance handle is bound to a lock or the current instance is marked as complete, the metadata is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceMetadata (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceMetadata(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceMetadata (metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceMetadata(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberSignature Language="F#" Value="member this.ReadInstanceMetadata : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * bool -&gt; unit" Usage="instancePersistenceContext.ReadInstanceMetadata (metadata, complete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <span data-ttu-id="0d5ee-240">Metadatos como un diccionario de objetos <see cref="T:System.Xml.Linq.XName" /> y <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-240">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="complete">
          <span data-ttu-id="0d5ee-241">
            <see langword="True" /> si los metadatos representan todos los metadatos asociados a la instancia; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-241">
              <see langword="True" /> if the metadata represents all of the metadata associated to the instance, otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-242">Indica que el proveedor de persistencia ha leído correctamente algunos metadatos de instancia para la instancia actual del almacén de instancias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-242">Indicates that the persistence provider has successfully read some instance metadata for the current instance from the instance store.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceOwnerMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceOwnerMetadata (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceOwnerMetadata(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceOwnerMetadata (metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceOwnerMetadata(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberSignature Language="F#" Value="member this.ReadInstanceOwnerMetadata : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * bool -&gt; unit" Usage="instancePersistenceContext.ReadInstanceOwnerMetadata (metadata, complete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <span data-ttu-id="0d5ee-243">Diccionario de objetos <see cref="T:System.Xml.Linq.XName" /> y <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-243">The dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="complete">
          <span data-ttu-id="0d5ee-244">Valor para especificar si la coherencia se debe establecer en <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.InDoubt" /> o en <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.Partial" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-244">The value to specify whether the consistency to be set to <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.InDoubt" /> or <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.Partial" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-245">Establece los metadatos de propietario de instancia usando los datos pasados en el parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-245">Sets the instance owner metadata using the data passed in the parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-246">El identificador de instancia actual se debe enlazar a una instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-246">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="0d5ee-247">Si el identificador de instancia se enlaza a un bloqueo o la instancia actual se marca como completa, se considera que los metadatos son coherentes; de lo contrario, se consideran dudosos.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-247">If the instance handle is bound to a lock or the current instance is marked as complete, the metadata is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCancellationHandler">
      <MemberSignature Language="C#" Value="public void SetCancellationHandler (Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt; cancellationHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCancellationHandler(class System.Action`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceContext&gt; cancellationHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCancellationHandler (cancellationHandler As Action(Of InstancePersistenceContext))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCancellationHandler(Action&lt;System::Runtime::DurableInstancing::InstancePersistenceContext ^&gt; ^ cancellationHandler);" />
      <MemberSignature Language="F#" Value="member this.SetCancellationHandler : Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt; -&gt; unit" Usage="instancePersistenceContext.SetCancellationHandler cancellationHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationHandler" Type="System.Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt;" />
      </Parameters>
      <Docs>
        <param name="cancellationHandler">
          <span data-ttu-id="0d5ee-248">Referencia a una función que se debe invocar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-248">The reference to a function to be called.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-249">Establece el controlador de cancelación que se debe invocar cuando se solicita la cancelación de una operación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-249">Sets the cancellation handler to be called when the cancel of an operation is requested.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-250">Si se llama al controlador de cancelación, el proveedor de persistencia debe cancelar todas las operaciones pendientes y producir la excepción OperationCanceledException desde TryCommand para indicar que el comando de persistencia se interrumpió antes de que se pudiera completar.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-250">If the cancellation handler is called, the persistence provider should cancel all pending operations and throw OperationCanceledException from TryCommand to indicate that the persistence command was interrupted before it could be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnassociatedInstanceKey">
      <MemberSignature Language="C#" Value="public void UnassociatedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnassociatedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnassociatedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnassociatedInstanceKey(Guid key);" />
      <MemberSignature Language="F#" Value="member this.UnassociatedInstanceKey : Guid -&gt; unit" Usage="instancePersistenceContext.UnassociatedInstanceKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0d5ee-251">El identificador de la clave de instancia para la clave que se ha desasociado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-251">The instance key identifier for the key that has been unassociated.</span>
          </span>
          <span data-ttu-id="0d5ee-252">No debe ser Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-252">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-253">Indica que el proveedor de persistencia ha desasociado correctamente una clave de la instancia actual en el almacén de instancias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-253">Indicates that the persistence provider has successfully disassociated a key from the current instance in the instance store.</span>
          </span>
          <span data-ttu-id="0d5ee-254">El identificador de la clave se especifica como un parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-254">The identifier of the key is specified as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-255">El identificador de instancia actual se debe enlazar a una instancia así como un bloqueo en esa instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-255">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="0d5ee-256">La clave de instancia debe estar asociada a la instancia actual y debe marcarse como completa.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-256">The instance key must be associated to the current instance and must be marked complete.</span></span> <span data-ttu-id="0d5ee-257">La instancia actual no se debe marcar como completa.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-257">The current instance must not be marked complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserContext">
      <MemberSignature Language="C#" Value="public object UserContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserContext" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserContext { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserContext : obj" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d5ee-258">Obtiene la información de contexto del usuario adjuntada al identificador de instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-258">Gets the user context information attached to the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d5ee-259">Información de contexto de usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-259">The user context information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-260">El objeto es el que InstanceStore.OnNewInstanceHandle devuelve para el identificador de instancia actual.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-260">The object is the one that is returned from InstanceStore.OnNewInstanceHandle for the current instance handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceKeyMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceKeyMetadataValue (Guid key, System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceKeyMetadataValue(valuetype System.Guid key, class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceKeyMetadataValue (key As Guid, name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceKeyMetadataValue(Guid key, System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.WroteInstanceKeyMetadataValue : Guid * System.Xml.Linq.XName * System.Runtime.DurableInstancing.InstanceValue -&gt; unit" Usage="instancePersistenceContext.WroteInstanceKeyMetadataValue (key, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0d5ee-261">Identificador de clave de instancia para la clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-261">The instance key identifier for the key.</span>
          </span>
          <span data-ttu-id="0d5ee-262">No debe ser Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-262">Must not be Guid.Empty.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="0d5ee-263">Nombre de la propiedad de los metadatos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-263">The name of the metadata property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0d5ee-264">Valor de propiedad de los metadatos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-264">The value of the metadata property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-265">Indica que el proveedor de persistencia ha escrito correctamente un valor de metadatos para una clave de instancia que está asociada a la instancia actual del almacén de instancias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-265">Indicates that the persistence provider has successfully written a metadata value for an instance key that is associated with the current instance to the instance store</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-266">El identificador de instancia actual se debe enlazar a una instancia así como un bloqueo en esa instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-266">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="0d5ee-267">La clave de instancia debe estar asociada a la instancia actual y no debe completarse.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-267">The instance key must be associated with the current instance and must not be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceMetadataValue(class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceMetadataValue (name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceMetadataValue(System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.WroteInstanceMetadataValue : System.Xml.Linq.XName * System.Runtime.DurableInstancing.InstanceValue -&gt; unit" Usage="instancePersistenceContext.WroteInstanceMetadataValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0d5ee-268">Nombre de la propiedad de los metadatos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-268">The name of the metadata property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0d5ee-269">Valor de propiedad de los metadatos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-269">The value of the metadata property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-270">Indica que el proveedor de persistencia ha escrito correctamente un valor de metadatos para la instancia actual en el almacén de instancias externo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-270">Indicates that the persistence provider has successfully written a metadata value for the current instance to the external instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-271">El identificador de instancia actual se debe enlazar a una instancia así como un bloqueo en esa instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-271">The current instance handle must be bound to an instance as well as has a lock on that instance.</span></span> <span data-ttu-id="0d5ee-272">No se debe completar la instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-272">The instance must not be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceOwnerMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceOwnerMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceOwnerMetadataValue(class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceOwnerMetadataValue (name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceOwnerMetadataValue(System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.WroteInstanceOwnerMetadataValue : System.Xml.Linq.XName * System.Runtime.DurableInstancing.InstanceValue -&gt; unit" Usage="instancePersistenceContext.WroteInstanceOwnerMetadataValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0d5ee-273">Nombre de la propiedad de los metadatos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-273">The name of the metadata property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0d5ee-274">Valor de propiedad de los metadatos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-274">The value of the metadata property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d5ee-275">Indica que el proveedor de persistencia ha escrito correctamente un valor de metadatos para el propietario de la instancia actual en el almacén de instancias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d5ee-275">Indicates that the persistence provider has successfully written a metadata value for the current instance owner to the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d5ee-276">El identificador de instancia actual se debe enlazar al propietario de una instancia.</span><span class="sxs-lookup"><span data-stu-id="0d5ee-276">The current instance handle must be bound to an instance owner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
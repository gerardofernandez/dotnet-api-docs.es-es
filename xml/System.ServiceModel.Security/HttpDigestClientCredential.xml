<Type Name="HttpDigestClientCredential" FullName="System.ServiceModel.Security.HttpDigestClientCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="897459811ca12e3ae9fee9ca67baba2794be4903" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56767180" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpDigestClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpDigestClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.HttpDigestClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpDigestClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpDigestClientCredential sealed" />
  <TypeSignature Language="F#" Value="type HttpDigestClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="029a8-101">Se utiliza para la autenticación implícita de clientes HTTP.</span><span class="sxs-lookup"><span data-stu-id="029a8-101">Used for digest authentication of HTTP clients.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029a8-102">La autenticación implícita comprueba que ambas partes de una comunicación conocen un secreto compartido (una contraseña).</span><span class="sxs-lookup"><span data-stu-id="029a8-102">Digest authentication verifies that both parties to a communication know a shared secret (a password).</span></span> <span data-ttu-id="029a8-103">La autenticación se hace sin enviar la contraseña sin cifrar.</span><span class="sxs-lookup"><span data-stu-id="029a8-103">Authentication is done without sending the password in the clear.</span></span> <span data-ttu-id="029a8-104">La autenticación implícita está basada en un paradigma de desafío-respuesta.</span><span class="sxs-lookup"><span data-stu-id="029a8-104">Digest authentication is based on a challenge-response paradigm.</span></span> <span data-ttu-id="029a8-105">Los desafíos de esquema de resumen utilizan un valor de seguridad ("número utilizado una vez").</span><span class="sxs-lookup"><span data-stu-id="029a8-105">The Digest scheme challenges using a nonce ("number used once") value.</span></span> <span data-ttu-id="029a8-106">La respuesta debe contener una suma de comprobación del nombre de usuario, la contraseña, el valor de seguridad, el método HTTP y el URI solicitado.</span><span class="sxs-lookup"><span data-stu-id="029a8-106">The response must contain a checksum of the user name, the password, the nonce value, the HTTP method, and the requested URI.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowedImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowedImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel AllowedImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AllowedImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="029a8-107">Obtiene o establece el nivel de suplantación que el cliente permite con la credencial proporcionada del cliente.</span><span class="sxs-lookup"><span data-stu-id="029a8-107">Gets or sets the level of impersonation that the client allows with the client credential provided.</span></span></summary>
        <value><span data-ttu-id="029a8-108"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> que el cliente permite al servidor como parte de la autenticación implícita de HTTP.</span><span class="sxs-lookup"><span data-stu-id="029a8-108">The <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> that the client grants the server as part of HTTP digest authentication.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029a8-109">Inclusión de valores permitida:</span><span class="sxs-lookup"><span data-stu-id="029a8-109">Allowable values include:</span></span>  
  
 <span data-ttu-id="029a8-110"><xref:System.Security.Principal.TokenImpersonationLevel.Delegation>,</span><span class="sxs-lookup"><span data-stu-id="029a8-110"><xref:System.Security.Principal.TokenImpersonationLevel.Delegation>,</span></span>  
  
 <span data-ttu-id="029a8-111"><xref:System.Security.Principal.TokenImpersonationLevel.Identification> y </span><span class="sxs-lookup"><span data-stu-id="029a8-111"><xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and</span></span>  
  
 <span data-ttu-id="029a8-112"><xref:System.Security.Principal.TokenImpersonationLevel.Impersonation>.</span><span class="sxs-lookup"><span data-stu-id="029a8-112"><xref:System.Security.Principal.TokenImpersonationLevel.Impersonation>.</span></span>  
  
 <span data-ttu-id="029a8-113">Debido a las limitaciones de la autenticación implícita, cuando el cliente está utilizando las credenciales no predeterminadas, sólo se permiten los niveles `Impersonation` y `Delegation`.</span><span class="sxs-lookup"><span data-stu-id="029a8-113">Due to the limitations of Digest authentication, when the client is using non-default credentials, only `Impersonation` and `Delegation` levels are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="029a8-114">El siguiente ejemplo muestra cómo establecer esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="029a8-114">The following example shows how to set this property.</span></span>  
  
 [!code-csharp[S_UE_HttpDigestClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#1)]
 [!code-vb[S_UE_HttpDigestClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_httpdigestclientcredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential ClientCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential ClientCredential" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCredential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkCredential ^ ClientCredential { System::Net::NetworkCredential ^ get(); void set(System::Net::NetworkCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCredential : System.Net.NetworkCredential with get, set" Usage="System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="029a8-115">Obtiene o establece la credencial de red que se va a utilizar para la autenticación implícita.</span><span class="sxs-lookup"><span data-stu-id="029a8-115">Gets or sets the network credential to be used for digest-based authentication.</span></span></summary>
        <value><span data-ttu-id="029a8-116"><see cref="T:System.Net.NetworkCredential" /> que se va a utilizar para la autenticación implícita.</span><span class="sxs-lookup"><span data-stu-id="029a8-116">The <see cref="T:System.Net.NetworkCredential" /> to be used for digest-based authentication.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029a8-117">Si no se especifica, se utilizará la credencial predeterminada del subproceso.</span><span class="sxs-lookup"><span data-stu-id="029a8-117">If not specified, the default thread credential will be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="029a8-118">Los siguientes ejemplos de código muestran cómo autenticar al cliente como una entidad de seguridad diferente.</span><span class="sxs-lookup"><span data-stu-id="029a8-118">The following code examples show how to authenticate the client as a different principal.</span></span>  
  
 <span data-ttu-id="029a8-119">Así es como se cambian las propiedades de la instancia de la clase <xref:System.Net.NetworkCredential> que devuelve esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="029a8-119">This is how to change the properties of the instance of the <xref:System.Net.NetworkCredential> class that is returned by this property.</span></span>  
  
 [!code-csharp[S_UE_HttpDigestClientCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#2)]  
  
 <span data-ttu-id="029a8-120">Y aquí es cómo se crea una nueva instancia de la clase <xref:System.Net.NetworkCredential> y se asigna a esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="029a8-120">And here is how to create a new instance of the <xref:System.Net.NetworkCredential> class and assign it to this property.</span></span>  
  
 [!code-csharp[S_UE_HttpDigestClientCredential#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="ChannelOptions" FullName="System.Threading.Channels.ChannelOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="31550c438032609231234179d7062451e57d53c9" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56763631" /></Metadata><TypeSignature Language="C#" Value="public abstract class ChannelOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Channels.ChannelOptions" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelOptions abstract" />
  <TypeSignature Language="F#" Value="type ChannelOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Channels</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="765be-101">Proporciona opciones que controlan el comportamiento de las instancias del canal.</span><span class="sxs-lookup"><span data-stu-id="765be-101">Provides options that control the behavior of channel instances.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Channels.ChannelOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Channels</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSynchronousContinuations">
      <MemberSignature Language="C#" Value="public bool AllowSynchronousContinuations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSynchronousContinuations" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowSynchronousContinuations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowSynchronousContinuations { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowSynchronousContinuations : bool with get, set" Usage="System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Channels</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="765be-102"><see langword="true" /> si las operaciones realizadas en un canal pueden invocar sincrónicamente las continuaciones suscritas a notificaciones de operaciones asíncronicas pendientes; <see langword="false" /> si todas las continuaciones deben invocarse de forma asíncronica.</span><span class="sxs-lookup"><span data-stu-id="765be-102"><see langword="true" /> if operations performed on a channel may synchronously invoke continuations subscribed to notifications of pending async operations; <see langword="false" /> if all continuations should be invoked asynchronously.</span></span></summary>
        <value>To be added.</value>
        <remarks><span data-ttu-id="765be-103">Si esta opción <see langword="true" /> pueden proporcionar mejoras de aún más el rendimiento evitando la programación de elementos de trabajo adicionales.</span><span class="sxs-lookup"><span data-stu-id="765be-103">Setting this option to <see langword="true" /> can provide measurable throughput improvements by avoiding scheduling additional work items.</span></span> <span data-ttu-id="765be-104">Sin embargo, es posible que conllevan un coste reducido paralelismo, por ejemplo, un productor, a continuación, puede ser uno de ejecutar el trabajo asociado a un consumidor, y si no se ha hecho cuidadosamente, esto puede conducir a las interacciones inesperadas.</span><span class="sxs-lookup"><span data-stu-id="765be-104">However, it may come at the cost of reduced parallelism, as for example a producer may then be the one to execute work associated with a consumer, and if not done thoughtfully, this can lead to unexpected interactions.</span></span> <span data-ttu-id="765be-105">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="765be-105">The default is <see langword="false" />.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleReader">
      <MemberSignature Language="C#" Value="public bool SingleReader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SingleReader" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Channels.ChannelOptions.SingleReader" />
      <MemberSignature Language="VB.NET" Value="Public Property SingleReader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SingleReader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SingleReader : bool with get, set" Usage="System.Threading.Channels.ChannelOptions.SingleReader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Channels</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="765be-106"><see langword="true" /> lectores del canal garantizan que siempre habrá al menos una operación de lectura a la vez; <see langword="false" /> si no se garantiza ninguna restricción de este tipo.</span><span class="sxs-lookup"><span data-stu-id="765be-106"><see langword="true" /> readers from the channel guarantee that there will only ever be at most one read operation at a time; <see langword="false" /> if no such constraint is guaranteed.</span></span></summary>
        <value>To be added.</value>
        <remarks><span data-ttu-id="765be-107">Si <see langword="true" />, el canal puede ser capaz de optimizar determinadas operaciones basadas en conocimiento acerca de la garantía de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="765be-107">If <see langword="true" />, the channel may be able to optimize certain operations based on knowing about the single-reader guarantee.</span></span>
<span data-ttu-id="765be-108">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="765be-108">The default is <see langword="false" />.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleWriter">
      <MemberSignature Language="C#" Value="public bool SingleWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SingleWriter" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Channels.ChannelOptions.SingleWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property SingleWriter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SingleWriter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SingleWriter : bool with get, set" Usage="System.Threading.Channels.ChannelOptions.SingleWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Channels</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="765be-109"><see langword="true" /> si los escritores del canal garantizan que siempre habrá al menos una operación de escritura a la vez; <see langword="false" /> si no se garantiza ninguna restricción de este tipo.</span><span class="sxs-lookup"><span data-stu-id="765be-109"><see langword="true" /> if writers to the channel guarantee that there will only ever be at most one write operation at a time; <see langword="false" /> if no such constraint is guaranteed.</span></span></summary>
        <value>To be added.</value>
        <remarks><span data-ttu-id="765be-110">Si <see langword="true" />, el canal puede ser capaz de optimizar determinadas operaciones basadas en conocimiento acerca de la garantía único escritor.</span><span class="sxs-lookup"><span data-stu-id="765be-110">If <see langword="true" />, the channel may be able to optimize certain operations based on knowing about the single-writer guarantee.</span></span>
<span data-ttu-id="765be-111">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="765be-111">The default is <see langword="false" />.</span></span></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
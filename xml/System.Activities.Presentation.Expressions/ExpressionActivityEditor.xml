<Type Name="ExpressionActivityEditor" FullName="System.Activities.Presentation.Expressions.ExpressionActivityEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="060dd304c81a3f1b2221dbc906522e0e8da1d4eb" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53292840" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionActivityEditor : System.Windows.Controls.UserControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionActivityEditor extends System.Windows.Controls.UserControl" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Expressions.ExpressionActivityEditor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionActivityEditor&#xA;Inherits UserControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionActivityEditor abstract : System::Windows::Controls::UserControl" />
  <TypeSignature Language="F#" Value="type ExpressionActivityEditor = class&#xA;    inherit UserControl" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.UserControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a900a-101">Representa una editor de actividades.</span><span class="sxs-lookup"><span data-stu-id="a900a-101">Represents an expression activity editor.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionActivityEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionActivityEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionActivityEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a900a-102">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.Presentation.Expressions.ExpressionActivityEditor" />.</span><span class="sxs-lookup"><span data-stu-id="a900a-102">Initializes a new instance of the <see cref="T:System.Activities.Presentation.Expressions.ExpressionActivityEditor" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsReturn : bool with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-103">Obtiene o establece un valor que indica si la actividad de expresi贸n acepta retornos de carro.</span><span class="sxs-lookup"><span data-stu-id="a900a-103">Gets or sets a value that indicates whether the expression activity accepts returns.</span></span></summary>
        <value><span data-ttu-id="a900a-104"><see langword="true" /> si la actividad de la expresi贸n acepta devoluciones; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a900a-104"><see langword="true" /> if the expression activity accepts returns; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturnProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsReturnProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsReturnProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsReturnProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsReturnProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsReturnProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceptsReturnProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsReturnProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-105">Representa la propiedad de dependencia AcceptsReturn.</span><span class="sxs-lookup"><span data-stu-id="a900a-105">Represents the AcceptsReturn dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-106">Obtiene o establece un valor que indica si la actividad de expresi贸n acepta tabulaciones.</span><span class="sxs-lookup"><span data-stu-id="a900a-106">Gets or sets a value that indicates whether the expression activity accepts tabs.</span></span></summary>
        <value><span data-ttu-id="a900a-107"><see langword="true" /> si la actividad de la expresi贸n acepta tabulaciones; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a900a-107"><see langword="true" /> if the expression activity accepts tabs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsTabProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsTabProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsTabProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsTabProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsTabProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceptsTabProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsTabProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-108">Representa la propiedad de dependencia AcceptsTab.</span><span class="sxs-lookup"><span data-stu-id="a900a-108">Represents the AcceptsTab dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionActivityEditor.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginEdit();" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : unit -&gt; unit&#xA;override this.BeginEdit : unit -&gt; unit" Usage="expressionActivityEditor.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a900a-109">Inicia una operaci贸n de edici贸n.</span><span class="sxs-lookup"><span data-stu-id="a900a-109">Begins an edit.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCommit">
      <MemberSignature Language="C#" Value="public virtual bool CanCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionActivityEditor.CanCommit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanCommit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanCommit();" />
      <MemberSignature Language="F#" Value="abstract member CanCommit : unit -&gt; bool&#xA;override this.CanCommit : unit -&gt; bool" Usage="expressionActivityEditor.CanCommit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a900a-110">Indica si se puede confirmar el editor de actividad de la expresi贸n.</span><span class="sxs-lookup"><span data-stu-id="a900a-110">Indicates whether the expression activity editor can be committed.</span></span></summary>
        <returns><span data-ttu-id="a900a-111"><see langword="true" /> si el editor de la actividad de la expresi贸n se puede confirmar; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a900a-111"><see langword="true" /> if the expression activity editor can be committed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public abstract bool Commit (bool isExplicitCommit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Commit(bool isExplicitCommit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionActivityEditor.Commit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Commit (isExplicitCommit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Commit(bool isExplicitCommit);" />
      <MemberSignature Language="F#" Value="abstract member Commit : bool -&gt; bool" Usage="expressionActivityEditor.Commit isExplicitCommit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isExplicitCommit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isExplicitCommit"><span data-ttu-id="a900a-112">Es <see langword="true" /> para indicar que la confirmaci贸n es expl铆cita; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a900a-112"><see langword="true" /> to indicate that the commit is explicit; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a900a-113">Indica si se confirma el editor de actividad de la expresi贸n.</span><span class="sxs-lookup"><span data-stu-id="a900a-113">Indicates whether the expression activity editor is committed.</span></span></summary>
        <returns><span data-ttu-id="a900a-114"><see langword="true" /> si el editor de la actividad de la expresi贸n est谩 confirmado; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a900a-114"><see langword="true" /> if the expression activity editor is committed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected System.Activities.Presentation.EditingContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.EditingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.Context" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Context As EditingContext" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Activities::Presentation::EditingContext ^ Context { System::Activities::Presentation::EditingContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Activities.Presentation.EditingContext" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.EditingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-115">Obtiene el contexto de edici贸n de la actividad de expresi贸n.</span><span class="sxs-lookup"><span data-stu-id="a900a-115">Gets the editing context of the expression activity.</span></span></summary>
        <value><span data-ttu-id="a900a-116">Contexto de edici贸n de la actividad de expresi贸n.</span><span class="sxs-lookup"><span data-stu-id="a900a-116">The editing context of the expression activity.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExplicitCommit">
      <MemberSignature Language="C#" Value="public bool ExplicitCommit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExplicitCommit" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExplicitCommit" />
      <MemberSignature Language="VB.NET" Value="Public Property ExplicitCommit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExplicitCommit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExplicitCommit : bool with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExplicitCommit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-117">Obtiene o establece un valor que indica si la confirmaci贸n es expl铆cita.</span><span class="sxs-lookup"><span data-stu-id="a900a-117">Gets or sets a value that indicates whether the commit is explicit.</span></span></summary>
        <value><span data-ttu-id="a900a-118"><see langword="true" /> si la confirmaci贸n es expl铆cita; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a900a-118"><see langword="true" /> if the commit is explicit; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExplicitCommitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExplicitCommitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExplicitCommitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExplicitCommitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExplicitCommitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExplicitCommitProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExplicitCommitProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExplicitCommitProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-119">Representa la propiedad de dependencia ExplicitCommit.</span><span class="sxs-lookup"><span data-stu-id="a900a-119">Represents the ExplicitCommit dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Expression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ Expression { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.Activities.Presentation.Model.ModelItem with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-120">Obtiene o establece la actividad de expresi贸n.</span><span class="sxs-lookup"><span data-stu-id="a900a-120">Gets or sets the expression activity.</span></span></summary>
        <value><span data-ttu-id="a900a-121">Actividad de expresi贸n.</span><span class="sxs-lookup"><span data-stu-id="a900a-121">The expression activity.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpressionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpressionProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExpressionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-122">Representa la propiedad de dependencia Expression.</span><span class="sxs-lookup"><span data-stu-id="a900a-122">Represents the Expression dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionType">
      <MemberSignature Language="C#" Value="public Type ExpressionType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpressionType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpressionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ExpressionType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionType : Type with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExpressionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-123">Obtiene o establece la actividad del tipo de expresi贸n.</span><span class="sxs-lookup"><span data-stu-id="a900a-123">Gets or sets the expression type activity.</span></span></summary>
        <value><span data-ttu-id="a900a-124">Actividad del tipo de la expresi贸n.</span><span class="sxs-lookup"><span data-stu-id="a900a-124">The expression type activity.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpressionTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpressionTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExpressionTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpressionTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpressionTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpressionTypeProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExpressionTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-125">Representa la propiedad de dependencia ExpressionType.</span><span class="sxs-lookup"><span data-stu-id="a900a-125">Represents the ExpressionType dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressionActivityEditor">
      <MemberSignature Language="C#" Value="public static string GetExpressionActivityEditor (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExpressionActivityEditor(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionActivityEditor.GetExpressionActivityEditor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionActivityEditor (target As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetExpressionActivityEditor(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="static member GetExpressionActivityEditor : obj -&gt; string" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.GetExpressionActivityEditor target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="a900a-126">Propiedad del editor que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="a900a-126">The property of the editor to get.</span></span></param>
        <summary><span data-ttu-id="a900a-127">Obtiene el editor de actividades de expresi贸n que usa el destino especificado.</span><span class="sxs-lookup"><span data-stu-id="a900a-127">Gets the expression activity editor using the specified target.</span></span></summary>
        <returns><span data-ttu-id="a900a-128">Editor de actividad de expresi贸n.</span><span class="sxs-lookup"><span data-stu-id="a900a-128">The expression activity editor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintText">
      <MemberSignature Language="C#" Value="public string HintText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HintText" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.HintText" />
      <MemberSignature Language="VB.NET" Value="Public Property HintText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HintText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HintText : string with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.HintText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-129">Obtiene o establece el texto de la sugerencia.</span><span class="sxs-lookup"><span data-stu-id="a900a-129">Gets or sets the hint text.</span></span></summary>
        <value><span data-ttu-id="a900a-130">Texto de sugerencia.</span><span class="sxs-lookup"><span data-stu-id="a900a-130">The hint text.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HintTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HintTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.HintTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HintTextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HintTextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HintTextProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.HintTextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-131">Representa la propiedad de dependencia HintText.</span><span class="sxs-lookup"><span data-stu-id="a900a-131">Represents the HintText dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.HorizontalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-132">Obtiene o establece la visibilidad de la barra de desplazamiento horizontal.</span><span class="sxs-lookup"><span data-stu-id="a900a-132">Gets or sets the horizontal scroll bar visibility.</span></span></summary>
        <value><span data-ttu-id="a900a-133">Visibilidad de la barra de desplazamiento horizontal.</span><span class="sxs-lookup"><span data-stu-id="a900a-133">The horizontal scroll bar visibility.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalScrollBarVisibilityProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.HorizontalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-134">Representa la propiedad de dependencia HorizontalScrollBarVisibility.</span><span class="sxs-lookup"><span data-stu-id="a900a-134">Represents the HorizontalScrollBarVisibility dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIndependentExpression">
      <MemberSignature Language="C#" Value="public bool IsIndependentExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIndependentExpression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsIndependentExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property IsIndependentExpression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIndependentExpression { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsIndependentExpression : bool with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsIndependentExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-135">Obtiene o establece un valor que indica si la actividad de expresi贸n es una expresi贸n independiente.</span><span class="sxs-lookup"><span data-stu-id="a900a-135">Gets or sets a value that indicates whether the expression activity is an independent expression.</span></span></summary>
        <value><span data-ttu-id="a900a-136"><see langword="true" /> si la actividad de la expresi贸n es una expresi贸n independiente; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a900a-136"><see langword="true" /> if the expression activity is an independent expression; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIndependentExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsIndependentExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsIndependentExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsIndependentExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsIndependentExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsIndependentExpressionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsIndependentExpressionProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsIndependentExpressionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-137">Representa la propiedad de dependencia IsIndependentExpression.</span><span class="sxs-lookup"><span data-stu-id="a900a-137">Represents the IsIndependentExpression dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-138">Obtiene o establece un valor que indica si la actividad de expresi贸n es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a900a-138">Gets or sets a value that indicates whether the expression activity is read-only.</span></span></summary>
        <value><span data-ttu-id="a900a-139">Es <see langword="true" /> si la actividad de expresi贸n es de solo lectura; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a900a-139"><see langword="true" /> if the expression activity is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-140">Representa la propiedad de dependencia IsReadOnly.</span><span class="sxs-lookup"><span data-stu-id="a900a-140">Represents the IsReadOnly dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedExpression">
      <MemberSignature Language="C#" Value="public bool IsSupportedExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSupportedExpression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsSupportedExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSupportedExpression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSupportedExpression { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSupportedExpression : bool with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsSupportedExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-141">Obtiene o establece un valor que indica si la expresi贸n se admite.</span><span class="sxs-lookup"><span data-stu-id="a900a-141">Gets or sets a value that indicates whether the expression is supported.</span></span></summary>
        <value><span data-ttu-id="a900a-142"><see langword="true" /> si se admite la expresi贸n; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a900a-142"><see langword="true" /> if the expression is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSupportedExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSupportedExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsSupportedExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSupportedExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSupportedExpressionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSupportedExpressionProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsSupportedExpressionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-143">Representa la propiedad de dependencia IsSupportedExpression.</span><span class="sxs-lookup"><span data-stu-id="a900a-143">Represents the IsSupportedExpression dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerActivity">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem OwnerActivity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem OwnerActivity" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.OwnerActivity" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerActivity As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ OwnerActivity { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OwnerActivity : System.Activities.Presentation.Model.ModelItem with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.OwnerActivity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-144">Obtiene o establece la actividad de propietario.</span><span class="sxs-lookup"><span data-stu-id="a900a-144">Gets or sets the owner activity.</span></span></summary>
        <value><span data-ttu-id="a900a-145">La actividad de propietario.</span><span class="sxs-lookup"><span data-stu-id="a900a-145">The owner activity.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerActivityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OwnerActivityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OwnerActivityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.OwnerActivityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OwnerActivityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OwnerActivityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OwnerActivityProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.OwnerActivityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-146">Representa la propiedad de dependencia OwnerActivity.</span><span class="sxs-lookup"><span data-stu-id="a900a-146">Represents the OwnerActivity dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathToArgument">
      <MemberSignature Language="C#" Value="public string PathToArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathToArgument" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.PathToArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property PathToArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathToArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PathToArgument : string with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.PathToArgument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-147">Obtiene o establece la ruta de acceso del argumento.</span><span class="sxs-lookup"><span data-stu-id="a900a-147">Gets or sets the path to argument.</span></span></summary>
        <value><span data-ttu-id="a900a-148">Ruta de acceso al argumento.</span><span class="sxs-lookup"><span data-stu-id="a900a-148">The path to argument.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathToArgumentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PathToArgumentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PathToArgumentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.PathToArgumentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PathToArgumentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PathToArgumentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PathToArgumentProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.PathToArgumentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-149">Representa la propiedad de dependencia PathToArgument.</span><span class="sxs-lookup"><span data-stu-id="a900a-149">Represents the PathToArgument dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExpressionActivityEditor">
      <MemberSignature Language="C#" Value="public static void SetExpressionActivityEditor (object target, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetExpressionActivityEditor(object target, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionActivityEditor.SetExpressionActivityEditor(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetExpressionActivityEditor (target As Object, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetExpressionActivityEditor(System::Object ^ target, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member SetExpressionActivityEditor : obj * string -&gt; unit" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.SetExpressionActivityEditor (target, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="a900a-150">Propiedad del editor que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="a900a-150">The property of the editor to set.</span></span></param>
        <param name="name"><span data-ttu-id="a900a-151">Nombre del editor.</span><span class="sxs-lookup"><span data-stu-id="a900a-151">The name of the editor.</span></span></param>
        <summary><span data-ttu-id="a900a-152">Establece el editor de actividades de expresi贸n que usa el destino y nombre especificados.</span><span class="sxs-lookup"><span data-stu-id="a900a-152">Sets the expression activity editor using the specified target and name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLocationExpression">
      <MemberSignature Language="C#" Value="public bool UseLocationExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLocationExpression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.UseLocationExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLocationExpression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseLocationExpression { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseLocationExpression : bool with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.UseLocationExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-153">Obtiene o establece un valor que indica si la instancia usa la expresi贸n de ubicaci贸n.</span><span class="sxs-lookup"><span data-stu-id="a900a-153">Gets or sets a value that indicates whether the instance uses the location expression.</span></span></summary>
        <value><span data-ttu-id="a900a-154"><see langword="true" /> si la instancia usa la expresi贸n de ubicaci贸n; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a900a-154"><see langword="true" /> if the instance uses the location expression; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLocationExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UseLocationExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UseLocationExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.UseLocationExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UseLocationExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UseLocationExpressionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UseLocationExpressionProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.UseLocationExpressionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-155">Representa la propiedad de dependencia UseLocationExpression.</span><span class="sxs-lookup"><span data-stu-id="a900a-155">Represents the UseLocationExpression dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.VerticalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-156">Obtiene o establece la visibilidad de la barra de desplazamiento vertical.</span><span class="sxs-lookup"><span data-stu-id="a900a-156">Gets or sets the vertical scrollbar visibility.</span></span></summary>
        <value><span data-ttu-id="a900a-157">Visibilidad de Barra de desplazamiento vertical.</span><span class="sxs-lookup"><span data-stu-id="a900a-157">The vertical scrollbar visibility.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalScrollBarVisibilityProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.VerticalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a900a-158">Representa la propiedad de dependencia VerticalScrollBarVisibility.</span><span class="sxs-lookup"><span data-stu-id="a900a-158">Represents the VerticalScrollBarVisibility dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="MemberChangeConflict" FullName="System.Data.Linq.MemberChangeConflict">
  <Metadata><Meta Name="ms.openlocfilehash" Value="602eeeb1ff66312500808cd87b162b89af4c023a" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39793847" /></Metadata><TypeSignature Language="C#" Value="public sealed class MemberChangeConflict" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MemberChangeConflict extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.MemberChangeConflict" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MemberChangeConflict" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberChangeConflict sealed" />
  <TypeSignature Language="F#" Value="type MemberChangeConflict = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8fdff-101">Representa una situación en la que un intento de actualización genera un error porque los valores de los miembros se han actualizado desde la última vez que el cliente los leyó.</span><span class="sxs-lookup"><span data-stu-id="8fdff-101">Represents a situation in which an attempted update fails because member values have been updated since the client last read them.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fdff-102">El ejemplo siguiente muestra cómo recuperar información acerca de los miembros en conflicto.</span><span class="sxs-lookup"><span data-stu-id="8fdff-102">The following example shows how to retrieve information about members in conflict.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.MemberChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.memberchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.MemberChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.memberchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public object CurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : obj" Usage="System.Data.Linq.MemberChangeConflict.CurrentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fdff-103">Obtiene el valor actual del miembro en conflicto.</span><span class="sxs-lookup"><span data-stu-id="8fdff-103">Gets the current value of the member in conflict.</span></span></summary>
        <value><span data-ttu-id="8fdff-104">Objeto en conflicto.</span><span class="sxs-lookup"><span data-stu-id="8fdff-104">The object in conflict.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseValue">
      <MemberSignature Language="C#" Value="public object DatabaseValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DatabaseValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.DatabaseValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DatabaseValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DatabaseValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DatabaseValue : obj" Usage="System.Data.Linq.MemberChangeConflict.DatabaseValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fdff-105">Obtiene el valor de base de datos del miembro en conflicto.</span><span class="sxs-lookup"><span data-stu-id="8fdff-105">Gets the database value of the member in conflict.</span></span></summary>
        <value><span data-ttu-id="8fdff-106">Valor del objeto en conflicto.</span><span class="sxs-lookup"><span data-stu-id="8fdff-106">The value of the object in conflict.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="public bool IsModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModified" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.IsModified" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsModified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsModified { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsModified : bool" Usage="System.Data.Linq.MemberChangeConflict.IsModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fdff-107">Obtiene un valor que indica si han cambiado los datos de los miembros desde la última vez que se leyó o se actualizó la base de datos.</span><span class="sxs-lookup"><span data-stu-id="8fdff-107">Gets a value that indicates whether the member data has been changed since the last database read or refresh.</span></span></summary>
        <value><span data-ttu-id="8fdff-108"><see langword="True" />, si han cambiado los datos de los miembros.</span><span class="sxs-lookup"><span data-stu-id="8fdff-108"><see langword="True" /> if the member data has been changed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fdff-109">Use la propiedad para combinar los nuevos valores sin sobrescribir las actualizaciones pendientes.</span><span class="sxs-lookup"><span data-stu-id="8fdff-109">Use the property to merge new values without overwriting pending updates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResolved">
      <MemberSignature Language="C#" Value="public bool IsResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResolved" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.IsResolved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsResolved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResolved { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsResolved : bool" Usage="System.Data.Linq.MemberChangeConflict.IsResolved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fdff-110">Obtiene un valor que indica si se ha resuelto el conflicto.</span><span class="sxs-lookup"><span data-stu-id="8fdff-110">Gets a value that indicates whether the conflict has been resolved.</span></span></summary>
        <value><span data-ttu-id="8fdff-111"><see langword="True" />, si se ha resuelto el conflicto.</span><span class="sxs-lookup"><span data-stu-id="8fdff-111"><see langword="True" /> if the conflict has been resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fdff-112">Esta propiedad es de solo lectura y se actualiza automáticamente cuando se resuelven los conflictos.</span><span class="sxs-lookup"><span data-stu-id="8fdff-112">This property is read-only and is automatically updated as conflicts are resolved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.Member" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Reflection.MemberInfo" Usage="System.Data.Linq.MemberChangeConflict.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fdff-113">Obtiene información sobre los metadatos del miembro en conflicto.</span><span class="sxs-lookup"><span data-stu-id="8fdff-113">Gets metadata information about the member in conflict.</span></span></summary>
        <value><span data-ttu-id="8fdff-114">Información sobre el miembro en conflicto.</span><span class="sxs-lookup"><span data-stu-id="8fdff-114">Information about the member in conflict.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalValue">
      <MemberSignature Language="C#" Value="public object OriginalValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.OriginalValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalValue : obj" Usage="System.Data.Linq.MemberChangeConflict.OriginalValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fdff-115">Obtiene el valor original del miembro en conflicto.</span><span class="sxs-lookup"><span data-stu-id="8fdff-115">Gets the original value of the member in conflict.</span></span></summary>
        <value><span data-ttu-id="8fdff-116">Valor original del miembro en conflicto.</span><span class="sxs-lookup"><span data-stu-id="8fdff-116">The original value of the member in conflict.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8fdff-117">Resuelve los conflictos de miembros conservando los valores actuales y restableciendo los valores originales de la línea base para que coincidan con los valores más recientes de la base de datos.</span><span class="sxs-lookup"><span data-stu-id="8fdff-117">Resolves member conflicts by keeping current values and resetting the baseline original values to match the more recent database values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (System.Data.Linq.RefreshMode refreshMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(valuetype System.Data.Linq.RefreshMode refreshMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.MemberChangeConflict.Resolve(System.Data.Linq.RefreshMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Data::Linq::RefreshMode refreshMode);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Data.Linq.RefreshMode -&gt; unit" Usage="memberChangeConflict.Resolve refreshMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshMode" Type="System.Data.Linq.RefreshMode" />
      </Parameters>
      <Docs>
        <param name="refreshMode"><span data-ttu-id="8fdff-118">Vea <see cref="T:System.Data.Linq.RefreshMode" />.</span><span class="sxs-lookup"><span data-stu-id="8fdff-118">See <see cref="T:System.Data.Linq.RefreshMode" />.</span></span></param>
        <summary><span data-ttu-id="8fdff-119">Utiliza un parámetro de <see cref="T:System.Data.Linq.RefreshMode" /> para especificar automáticamente el valor que se va a establecer como valor actual del miembro en conflicto.</span><span class="sxs-lookup"><span data-stu-id="8fdff-119">Uses a <see cref="T:System.Data.Linq.RefreshMode" /> parameter to automatically specify the value to set as the current value for the member in conflict.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fdff-120">Los ejemplos siguientes muestran los resultados que se generan mediante el uso de los distintos valores para <xref:System.Data.Linq.RefreshMode>.</span><span class="sxs-lookup"><span data-stu-id="8fdff-120">The following examples show what results are produced by using the various values for <xref:System.Data.Linq.RefreshMode>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fdff-121">En el ejemplo siguiente, se sobrescribe los valores actuales con los valores de la base de datos.</span><span class="sxs-lookup"><span data-stu-id="8fdff-121">The following example overwrites current values with values from the database.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.RefreshMode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#1)]  
  
 <span data-ttu-id="8fdff-122">El ejemplo siguiente muestra cómo intercambiar el valor original con los valores recuperados de la base de datos.</span><span class="sxs-lookup"><span data-stu-id="8fdff-122">The following example shows how to swap the original value with the values retrieved from the database.</span></span> <span data-ttu-id="8fdff-123">No se modifica ningún valor actual.</span><span class="sxs-lookup"><span data-stu-id="8fdff-123">No current value is modified.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.RefreshMode#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#2)]  
  
 <span data-ttu-id="8fdff-124">El ejemplo siguiente mantiene los valores actuales que se han cambiado, pero actualizan los demás valores con los valores de la base de datos.</span><span class="sxs-lookup"><span data-stu-id="8fdff-124">The following example keeps the current values that have been changed, but updates the other values with database values.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#3](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#3)]
 [!code-vb[System.Data.Linq.RefreshMode#3](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.MemberChangeConflict.Resolve(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resolve (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Resolve : obj -&gt; unit" Usage="memberChangeConflict.Resolve value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8fdff-125">Valor que se va a establecer como valor actual.</span><span class="sxs-lookup"><span data-stu-id="8fdff-125">The value to set as the current value.</span></span></param>
        <summary><span data-ttu-id="8fdff-126">Especifica el valor que se va a establecer como valor actual del miembro en conflicto.</span><span class="sxs-lookup"><span data-stu-id="8fdff-126">Specifies the value to set as the current value for the member in conflict.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fdff-127">El valor establecido aquí es el valor que se usará en una posterior <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operación.</span><span class="sxs-lookup"><span data-stu-id="8fdff-127">The value set here is the value to be used in a subsequent <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
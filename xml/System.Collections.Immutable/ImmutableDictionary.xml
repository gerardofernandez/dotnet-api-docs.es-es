<Type Name="ImmutableDictionary" FullName="System.Collections.Immutable.ImmutableDictionary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a57d46aac66c7dbd73fa5a78fb0dd4dc37d83c47" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52596112" /></Metadata><TypeSignature Language="C#" Value="public static class ImmutableDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableDictionary extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableDictionary abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableDictionary = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e3749-101">Proporciona un conjunto de métodos de inicialización para las instancias de la clase <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="e3749-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /> class.</span></span>  
  
 <span data-ttu-id="e3749-102">**Paquete NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">sobre las colecciones inmutables y la instalación</see>)</span><span class="sxs-lookup"><span data-stu-id="e3749-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="e3749-103">Este tipo es seguro para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="e3749-103">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Contains&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; map, TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; map, !!TKey key, !!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TKey, TValue) (map As IImmutableDictionary(Of TKey, TValue), key As TKey, value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ map, TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Collections.Immutable.IImmutableDictionary&lt;'Key, 'Value&gt; * 'Key * 'Value -&gt; bool" Usage="System.Collections.Immutable.ImmutableDictionary.Contains (map, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="map" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="e3749-104">Tipo de las claves del diccionario inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-104">The type of the keys in the immutable dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-105">Tipo de los valores del diccionario inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-105">The type of the values in the immutable dictionary.</span></span></typeparam>
        <param name="map"><span data-ttu-id="e3749-106">Diccionario inmutable para buscar.</span><span class="sxs-lookup"><span data-stu-id="e3749-106">The immutable dictionary to search.</span></span></param>
        <param name="key"><span data-ttu-id="e3749-107">Clave que se va a buscar en el diccionario inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-107">The key to locate in the immutable dictionary.</span></span></param>
        <param name="value"><span data-ttu-id="e3749-108">Valor para buscar en la clave especificada, si se encuentra la clave.</span><span class="sxs-lookup"><span data-stu-id="e3749-108">The value to locate on the specified key, if the key is found.</span></span></param>
        <summary><span data-ttu-id="e3749-109">Determina si el diccionario inmutable especificado contiene el par de clave-valor especificado.</span><span class="sxs-lookup"><span data-stu-id="e3749-109">Determines whether the specified immutable dictionary contains the specified key/value pair.</span></span></summary>
        <returns><span data-ttu-id="e3749-110"><see langword="true" /> si esta asignación contiene el par clave-valor especificado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e3749-110"><see langword="true" /> if this map contains the specified key/value pair; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="e3749-111">Tipo de claves almacenadas por el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-111">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-112">Tipo de valores almacenados por el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-112">The type of values stored by the dictionary.</span></span></typeparam>
        <summary><span data-ttu-id="e3749-113">Crea un nuevo diccionario inmutable vacío.</span><span class="sxs-lookup"><span data-stu-id="e3749-113">Creates an empty immutable dictionary.</span></span></summary>
        <returns><span data-ttu-id="e3749-114">Diccionario inmutable vacío.</span><span class="sxs-lookup"><span data-stu-id="e3749-114">An empty immutable dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.Create keyComparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="e3749-115">Tipo de claves almacenadas por el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-115">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-116">Tipo de valores almacenados por el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-116">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="e3749-117">Implementación a utilizar para determinar la igualdad de claves en el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-117">The implementation to use to determine the equality of keys in the dictionary.</span></span></param>
        <summary><span data-ttu-id="e3749-118">Crea un diccionario inmutable vacío que usa el comparador de claves especificado.</span><span class="sxs-lookup"><span data-stu-id="e3749-118">Creates an empty immutable dictionary that uses the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="e3749-119">Diccionario inmutable vacío.</span><span class="sxs-lookup"><span data-stu-id="e3749-119">An empty immutable dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.Create (keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="e3749-120">Tipo de claves almacenadas por el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-120">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-121">Tipo de valores almacenados por el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-121">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="e3749-122">Implementación a utilizar para determinar la igualdad de claves en el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-122">The implementation to use to determine the equality of keys in the dictionary.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="e3749-123">Implementación a utilizar para determinar la igualdad de valores en el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-123">The implementation to use to determine the equality of values in the dictionary.</span></span></param>
        <summary><span data-ttu-id="e3749-124">Crea un diccionario inmutable vacío que usa los comparadores de claves y valores especificados.</span><span class="sxs-lookup"><span data-stu-id="e3749-124">Creates an empty immutable dictionary that uses the specified key and value comparers.</span></span></summary>
        <returns><span data-ttu-id="e3749-125">Diccionario inmutable vacío.</span><span class="sxs-lookup"><span data-stu-id="e3749-125">An empty immutable dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableDictionary.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="e3749-126">Tipo de claves almacenadas por el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-126">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-127">Tipo de valores almacenados por el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-127">The type of values stored by the dictionary.</span></span></typeparam>
        <summary><span data-ttu-id="e3749-128">Crea un nuevo generador de diccionarios inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-128">Creates a new immutable dictionary builder.</span></span></summary>
        <returns><span data-ttu-id="e3749-129">Generador nuevo.</span><span class="sxs-lookup"><span data-stu-id="e3749-129">The new builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableDictionary.CreateBuilder keyComparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="e3749-130">Tipo de claves almacenadas por el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-130">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-131">Tipo de valores almacenados por el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-131">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="e3749-132">Comparador de claves.</span><span class="sxs-lookup"><span data-stu-id="e3749-132">The key comparer.</span></span></param>
        <summary><span data-ttu-id="e3749-133">Crea un nuevo generador de diccionarios inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-133">Creates a new immutable dictionary builder.</span></span></summary>
        <returns><span data-ttu-id="e3749-134">Generador nuevo.</span><span class="sxs-lookup"><span data-stu-id="e3749-134">The new builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableDictionary.CreateBuilder (keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="e3749-135">Tipo de claves almacenadas por el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-135">The type of keys stored by the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-136">Tipo de valores almacenados por el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-136">The type of values stored by the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="e3749-137">Comparador de claves.</span><span class="sxs-lookup"><span data-stu-id="e3749-137">The key comparer.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="e3749-138">Comparador de claves.</span><span class="sxs-lookup"><span data-stu-id="e3749-138">The value comparer.</span></span></param>
        <summary><span data-ttu-id="e3749-139">Crea un nuevo generador de diccionarios inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-139">Creates a new immutable dictionary builder.</span></span></summary>
        <returns><span data-ttu-id="e3749-140">Generador nuevo.</span><span class="sxs-lookup"><span data-stu-id="e3749-140">The new builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="e3749-141">Tipo de claves del diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-141">The type of keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-142">Tipo de valores del diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-142">The type of values in the dictionary.</span></span></typeparam>
        <param name="items"><span data-ttu-id="e3749-143">Elementos que se usan para rellenar el diccionario antes de que se convierta en inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-143">The items used to populate the dictionary before it's immutable.</span></span></param>
        <summary><span data-ttu-id="e3749-144">Crea un nuevo diccionario inmutable que contiene los elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="e3749-144">Creates a new immutable dictionary that contains the specified items.</span></span></summary>
        <returns><span data-ttu-id="e3749-145">Nuevo diccionario inmutable que contiene los elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="e3749-145">A new immutable dictionary that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.CreateRange (keyComparer, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="e3749-146">Tipo de claves del diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-146">The type of keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-147">Tipo de valores del diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-147">The type of values in the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="e3749-148">Implementación de comparador que se va a utilizar para comparar las claves para la igualdad.</span><span class="sxs-lookup"><span data-stu-id="e3749-148">The comparer implementation to use to compare keys for equality.</span></span></param>
        <param name="items"><span data-ttu-id="e3749-149">Elementos que se van a agregar al diccionario antes de que se convierta en inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-149">The items to add to the dictionary before it's immutable.</span></span></param>
        <summary><span data-ttu-id="e3749-150">Crea un nuevo diccionario inmutable que contiene los elementos especificados y usa el comparador de claves especificado.</span><span class="sxs-lookup"><span data-stu-id="e3749-150">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="e3749-151">Nuevo diccionario inmutable que contiene los elementos especificados y usa el comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="e3749-151">A new immutable dictionary that contains the specified items and uses the specified comparer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.CreateRange (keyComparer, valueComparer, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="e3749-152">Tipo de claves del diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-152">The type of keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-153">Tipo de valores del diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-153">The type of values in the dictionary.</span></span></typeparam>
        <param name="keyComparer"><span data-ttu-id="e3749-154">Implementación de comparador que se va a utilizar para comparar las claves para la igualdad.</span><span class="sxs-lookup"><span data-stu-id="e3749-154">The comparer implementation to use to compare keys for equality.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="e3749-155">Implementación de comparador que se va a utilizar para comparar los valores para la igualdad.</span><span class="sxs-lookup"><span data-stu-id="e3749-155">The comparer implementation to use to compare values for equality.</span></span></param>
        <param name="items"><span data-ttu-id="e3749-156">Elementos que se van a agregar al diccionario antes de que se convierta en inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-156">The items to add to the dictionary before it's immutable.</span></span></param>
        <summary><span data-ttu-id="e3749-157">Crea un nuevo diccionario inmutable que contiene los elementos especificados y usa el comparador de claves especificado.</span><span class="sxs-lookup"><span data-stu-id="e3749-157">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="e3749-158">Nuevo diccionario inmutable que contiene los elementos especificados y usa el comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="e3749-158">A new immutable dictionary that contains the specified items and uses the specified comparer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key);" />
      <MemberSignature Language="F#" Value="static member GetValueOrDefault : System.Collections.Immutable.IImmutableDictionary&lt;'Key, 'Value&gt; * 'Key -&gt; 'Value" Usage="System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault (dictionary, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="e3749-159">Tipo de la clave.</span><span class="sxs-lookup"><span data-stu-id="e3749-159">The type of the key.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-160">Tipo del valor.</span><span class="sxs-lookup"><span data-stu-id="e3749-160">The type of the value.</span></span></typeparam>
        <param name="dictionary"><span data-ttu-id="e3749-161">Diccionario del que recuperar el valor.</span><span class="sxs-lookup"><span data-stu-id="e3749-161">The dictionary to retrieve the value from.</span></span></param>
        <param name="key"><span data-ttu-id="e3749-162">Clave que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="e3749-162">The key to search for.</span></span></param>
        <summary><span data-ttu-id="e3749-163">Obtiene el valor de una clave determinada si existe una clave coincidente en el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-163">Gets the value for a given key if a matching key exists in the dictionary.</span></span></summary>
        <returns><span data-ttu-id="e3749-164">Valor de la clave o <c>default(TValue)</c> si no se ha encontrado ninguna clave coincidente.</span><span class="sxs-lookup"><span data-stu-id="e3749-164">The value for the key, or <c>default(TValue)</c> if no matching key was found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key, TValue defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key, !!TValue defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey, defaultValue As TValue) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key, TValue defaultValue);" />
      <MemberSignature Language="F#" Value="static member GetValueOrDefault : System.Collections.Immutable.IImmutableDictionary&lt;'Key, 'Value&gt; * 'Key * 'Value -&gt; 'Value" Usage="System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault (dictionary, key, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="defaultValue" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="e3749-165">Tipo de la clave.</span><span class="sxs-lookup"><span data-stu-id="e3749-165">The type of the key.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-166">Tipo del valor.</span><span class="sxs-lookup"><span data-stu-id="e3749-166">The type of the value.</span></span></typeparam>
        <param name="dictionary"><span data-ttu-id="e3749-167">Diccionario del que recuperar el valor.</span><span class="sxs-lookup"><span data-stu-id="e3749-167">The dictionary to retrieve the value from.</span></span></param>
        <param name="key"><span data-ttu-id="e3749-168">Clave que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="e3749-168">The key to search for.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="e3749-169">Valor predeterminado para devolver si no se detecta ninguna clave coincidente en el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-169">The default value to return if no matching key is found in the dictionary.</span></span></param>
        <summary><span data-ttu-id="e3749-170">Obtiene el valor de una clave determinada si existe una clave coincidente en el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-170">Gets the value for a given key if a matching key exists in the dictionary.</span></span></summary>
        <returns><span data-ttu-id="e3749-171">El valor de la clave, o <paramref name="defaultValue" /> si no se ha encontrado ninguna clave coincidente.</span><span class="sxs-lookup"><span data-stu-id="e3749-171">The value for the key, or <paramref name="defaultValue" /> if no matching key was found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="e3749-172">Tipo de las claves del diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-172">The type of the keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-173">Tipo de los valores del diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-173">The type of the values in the dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="e3749-174">Secuencia de pares clave-valor a enumerar.</span><span class="sxs-lookup"><span data-stu-id="e3749-174">The sequence of key/value pairs to enumerate.</span></span></param>
        <summary><span data-ttu-id="e3749-175">Enumera una secuencia de pares de clave/valor y genera un diccionario ordenado inmutable de su contenido.</span><span class="sxs-lookup"><span data-stu-id="e3749-175">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents.</span></span></summary>
        <returns><span data-ttu-id="e3749-176">Diccionario inmutable que contiene los pares clave-valor en la secuencia especificada.</span><span class="sxs-lookup"><span data-stu-id="e3749-176">An immutable dictionary that contains the key/value pairs in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="e3749-177">Tipo de las claves del diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-177">The type of the keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-178">Tipo de los valores del diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-178">The type of the values in the dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="e3749-179">Secuencia de pares clave-valor a enumerar.</span><span class="sxs-lookup"><span data-stu-id="e3749-179">The sequence of key/value pairs to enumerate.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="e3749-180">Comparador de claves a utilizar al crear el diccionario inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-180">The key comparer to use when building the immutable dictionary.</span></span></param>
        <summary><span data-ttu-id="e3749-181">Enumera una secuencia de pares de clave-valor y genera un diccionario inmutable de su contenido mediante el comparador de claves especificado.</span><span class="sxs-lookup"><span data-stu-id="e3749-181">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="e3749-182">Diccionario inmutable que contiene los pares clave-valor en la secuencia especificada.</span><span class="sxs-lookup"><span data-stu-id="e3749-182">An immutable dictionary that contains the key/value pairs in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="e3749-183">Tipo de las claves del diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-183">The type of the keys in the dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-184">Tipo de los valores del diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-184">The type of the values in the dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="e3749-185">Secuencia de pares clave-valor a enumerar.</span><span class="sxs-lookup"><span data-stu-id="e3749-185">The sequence of key/value pairs to enumerate.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="e3749-186">Comparador de claves a utilizar al crear el diccionario inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-186">The key comparer to use when building the immutable dictionary.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="e3749-187">Comparador de valor que se usará para el diccionario inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-187">The value comparer to use for the immutable dictionary.</span></span></param>
        <summary><span data-ttu-id="e3749-188">Enumera una secuencia de pares de clave-valor y genera un diccionario inmutable de su contenido mediante el comparador de claves y valores especificado.</span><span class="sxs-lookup"><span data-stu-id="e3749-188">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key and value comparers.</span></span></summary>
        <returns><span data-ttu-id="e3749-189">Diccionario inmutable que contiene los pares clave-valor en la secuencia especificada.</span><span class="sxs-lookup"><span data-stu-id="e3749-189">An immutable dictionary that contains the key/value pairs in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Source&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="e3749-190">Tipo de elemento de la colección de origen.</span><span class="sxs-lookup"><span data-stu-id="e3749-190">The type of element in the source collection.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="e3749-191">Tipo de clave del diccionario inmutable resultante.</span><span class="sxs-lookup"><span data-stu-id="e3749-191">The type of key in the resulting immutable dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="e3749-192">Colección de origen que se usa para generar el diccionario inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-192">The source collection used to generate the immutable dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="e3749-193">Función que se utiliza para transformar las claves para el diccionario inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-193">The function used to transform keys for the immutable dictionary.</span></span></param>
        <summary><span data-ttu-id="e3749-194">Crea un diccionario inmutable de una colección de elementos existente, aplicando una función de transformación en las claves de origen.</span><span class="sxs-lookup"><span data-stu-id="e3749-194">Constructs an immutable dictionary from an existing collection of elements, applying a transformation function to the source keys.</span></span></summary>
        <returns><span data-ttu-id="e3749-195">Diccionario inmutable que contiene los elementos de <paramref name="source" />, con claves transformadas aplicando <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="e3749-195">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Source&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="e3749-196">Tipo de elemento de la colección de origen.</span><span class="sxs-lookup"><span data-stu-id="e3749-196">The type of element in the source collection.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="e3749-197">Tipo de clave del diccionario inmutable resultante.</span><span class="sxs-lookup"><span data-stu-id="e3749-197">The type of key in the resulting immutable dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="e3749-198">Colección de origen que se usa para generar el diccionario inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-198">The source collection used to generate the immutable dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="e3749-199">Función que se utiliza para transformar las claves para el diccionario inmutable.</span><span class="sxs-lookup"><span data-stu-id="e3749-199">The function used to transform keys for the immutable dictionary.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="e3749-200">Comparador de claves que se utilizará para el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-200">The key comparer to use for the dictionary.</span></span></param>
        <summary><span data-ttu-id="e3749-201">Crea un diccionario inmutable basado en alguna transformación de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="e3749-201">Constructs an immutable dictionary based on some transformation of a sequence.</span></span></summary>
        <returns><span data-ttu-id="e3749-202">Diccionario inmutable que contiene los elementos de <paramref name="source" />, con claves transformadas aplicando <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="e3749-202">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="e3749-203">Tipo de los elementos de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="e3749-203">The type of the elements in the sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="e3749-204">Tipo de las claves del diccionario resultante.</span><span class="sxs-lookup"><span data-stu-id="e3749-204">The type of the keys in the resulting dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-205">Tipo de los valores del diccionario resultante.</span><span class="sxs-lookup"><span data-stu-id="e3749-205">The type of the values in the resulting dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="e3749-206">Secuencia a enumerar para generar el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-206">The sequence to enumerate to generate the dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="e3749-207">Función que generará la clave del diccionario desde cada elemento de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="e3749-207">The function that will produce the key for the dictionary from each sequence element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="e3749-208">Función que generará el valor del diccionario desde cada elemento de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="e3749-208">The function that will produce the value for the dictionary from each sequence element.</span></span></param>
        <summary><span data-ttu-id="e3749-209">Enumera y transforma una secuencia y genera un diccionario inmutable de su contenido.</span><span class="sxs-lookup"><span data-stu-id="e3749-209">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents.</span></span></summary>
        <returns><span data-ttu-id="e3749-210">Diccionario inmutable que contiene los elementos en la secuencia especificada.</span><span class="sxs-lookup"><span data-stu-id="e3749-210">An immutable dictionary that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, elementSelector, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="e3749-211">Tipo de los elementos de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="e3749-211">The type of the elements in the sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="e3749-212">Tipo de las claves del diccionario resultante.</span><span class="sxs-lookup"><span data-stu-id="e3749-212">The type of the keys in the resulting dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-213">Tipo de los valores del diccionario resultante.</span><span class="sxs-lookup"><span data-stu-id="e3749-213">The type of the values in the resulting dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="e3749-214">Secuencia a enumerar para generar el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-214">The sequence to enumerate to generate the dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="e3749-215">Función que generará la clave del diccionario desde cada elemento de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="e3749-215">The function that will produce the key for the dictionary from each sequence element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="e3749-216">Función que generará el valor del diccionario desde cada elemento de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="e3749-216">The function that will produce the value for the dictionary from each sequence element.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="e3749-217">Comparador de claves que se utilizará para el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-217">The key comparer to use for the dictionary.</span></span></param>
        <summary><span data-ttu-id="e3749-218">Enumera y transforma una secuencia y genera un diccionario inmutable de su contenido mediante el comparador de claves especificado.</span><span class="sxs-lookup"><span data-stu-id="e3749-218">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key comparer.</span></span></summary>
        <returns><span data-ttu-id="e3749-219">Diccionario inmutable que contiene los elementos en la secuencia especificada.</span><span class="sxs-lookup"><span data-stu-id="e3749-219">An immutable dictionary that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, elementSelector, keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="e3749-220">Tipo de los elementos de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="e3749-220">The type of the elements in the sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="e3749-221">Tipo de las claves del diccionario resultante.</span><span class="sxs-lookup"><span data-stu-id="e3749-221">The type of the keys in the resulting dictionary.</span></span></typeparam>
        <typeparam name="TValue"><span data-ttu-id="e3749-222">Tipo de los valores del diccionario resultante.</span><span class="sxs-lookup"><span data-stu-id="e3749-222">The type of the values in the resulting dictionary.</span></span></typeparam>
        <param name="source"><span data-ttu-id="e3749-223">Secuencia a enumerar para generar el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-223">The sequence to enumerate to generate the dictionary.</span></span></param>
        <param name="keySelector"><span data-ttu-id="e3749-224">Función que generará la clave del diccionario desde cada elemento de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="e3749-224">The function that will produce the key for the dictionary from each sequence element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="e3749-225">Función que generará el valor del diccionario desde cada elemento de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="e3749-225">The function that will produce the value for the dictionary from each sequence element.</span></span></param>
        <param name="keyComparer"><span data-ttu-id="e3749-226">Comparador de claves que se utilizará para el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-226">The key comparer to use for the dictionary.</span></span></param>
        <param name="valueComparer"><span data-ttu-id="e3749-227">Comparador de valor que se usará para el diccionario.</span><span class="sxs-lookup"><span data-stu-id="e3749-227">The value comparer to use for the dictionary.</span></span></param>
        <summary><span data-ttu-id="e3749-228">Enumera y transforma una secuencia y genera un diccionario inmutable de su contenido mediante el comparador de claves y valores especificado.</span><span class="sxs-lookup"><span data-stu-id="e3749-228">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key and value comparers.</span></span></summary>
        <returns><span data-ttu-id="e3749-229">Diccionario inmutable que contiene los elementos en la secuencia especificada.</span><span class="sxs-lookup"><span data-stu-id="e3749-229">An immutable dictionary that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="ImmutableList" FullName="System.Collections.Immutable.ImmutableList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="638c481319d79aed144c3a8bdcad02e7af7a1fa7" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53228848" /></Metadata><TypeSignature Language="C#" Value="public static class ImmutableList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableList" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableList abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableList = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4e81c-101">Proporciona un conjunto de métodos de inicialización para las instancias de la clase <see cref="T:System.Collections.Immutable.ImmutableList`1" />.</span><span class="sxs-lookup"><span data-stu-id="4e81c-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableList`1" /> class.</span></span>  
  
 <span data-ttu-id="4e81c-102">**Paquete NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">sobre las colecciones inmutables y la instalación</see>)</span><span class="sxs-lookup"><span data-stu-id="4e81c-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="4e81c-103">Este tipo es seguro para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="4e81c-103">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-104">Tipo de elementos a almacenar en el .</span><span class="sxs-lookup"><span data-stu-id="4e81c-104">The type of items to be stored in the .</span></span></typeparam>
        <summary><span data-ttu-id="4e81c-105">Crea una lista inmutable vacía.</span><span class="sxs-lookup"><span data-stu-id="4e81c-105">Creates an empty immutable list.</span></span></summary>
        <returns><span data-ttu-id="4e81c-106"> vacío.</span><span class="sxs-lookup"><span data-stu-id="4e81c-106">An empty .</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create(T item);" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Create item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-107">Tipo de elementos del .</span><span class="sxs-lookup"><span data-stu-id="4e81c-107">The type of items in the .</span></span></typeparam>
        <param name="item"><span data-ttu-id="4e81c-108">Elemento con el que rellenar la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-108">The item to prepopulate the list with.</span></span></param>
        <summary><span data-ttu-id="4e81c-109">Crea una nueva lista inmutable que contiene el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="4e81c-109">Creates a new immutable list that contains the specified item.</span></span></summary>
        <returns><span data-ttu-id="4e81c-110">Nuevo  que contiene el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="4e81c-110">A new  that contains the specified item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Create items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-111">Tipo de elementos del .</span><span class="sxs-lookup"><span data-stu-id="4e81c-111">The type of items in the .</span></span></typeparam>
        <param name="items"><span data-ttu-id="4e81c-112">Matriz que contiene los elementos con los que rellenar la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-112">An array that contains the items to prepopulate the list with.</span></span></param>
        <summary><span data-ttu-id="4e81c-113">Crea una nueva lista que contiene la matriz especificada de elementos.</span><span class="sxs-lookup"><span data-stu-id="4e81c-113">Creates a new immutable list that contains the specified array of items.</span></span></summary>
        <returns><span data-ttu-id="4e81c-114">Nueva lista inmutable que contiene los elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="4e81c-114">A new immutable list that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableList(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableList.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-115">Tipo de elementos ordenados por colección.</span><span class="sxs-lookup"><span data-stu-id="4e81c-115">The type of items stored by the collection.</span></span></typeparam>
        <summary><span data-ttu-id="4e81c-116">Crea un nuevo generador de listas inmutable.</span><span class="sxs-lookup"><span data-stu-id="4e81c-116">Creates a new immutable list builder.</span></span></summary>
        <returns><span data-ttu-id="4e81c-117">Generador de colecciones inmutables.</span><span class="sxs-lookup"><span data-stu-id="4e81c-117">The immutable collection builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-118">Tipo de elementos del .</span><span class="sxs-lookup"><span data-stu-id="4e81c-118">The type of items in the .</span></span></typeparam>
        <param name="items"><span data-ttu-id="4e81c-119">Elementos que van a agregarse a la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-119">The items to add to the list.</span></span></param>
        <summary><span data-ttu-id="4e81c-120">Crea una nueva lista inmutable que contiene los elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="4e81c-120">Creates a new immutable list that contains the specified items.</span></span></summary>
        <returns><span data-ttu-id="4e81c-121">Devuelve una lista inmutable que contiene los elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="4e81c-121">Returns an immutable list that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-122">Tipo de elementos de la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-122">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="4e81c-123">Lista en la que buscar.</span><span class="sxs-lookup"><span data-stu-id="4e81c-123">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="4e81c-124">Objeto que se va a buscar en la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-124">The object to locate in the list.</span></span> <span data-ttu-id="4e81c-125">El valor puede ser null para los tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="4e81c-125">The value can be null for reference types.</span></span></param>
        <summary><span data-ttu-id="4e81c-126">Busca el objeto especificado y devuelve el índice de base cero de la primera aparición en la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-126">Searches for the specified object and returns the zero-based index of the first occurrence within the list.</span></span></summary>
        <returns><span data-ttu-id="4e81c-127">Índice de base cero de la primera aparición del elemento dentro del intervalo de elementos de la lista que abarca desde el índice hasta el último elemento, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="4e81c-127">The zero-based index of the first occurrence of item within the range of elements in the list that extends from index to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item, equalityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-128">Tipo de elementos de la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-128">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="4e81c-129">Lista en la que buscar.</span><span class="sxs-lookup"><span data-stu-id="4e81c-129">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="4e81c-130">Objeto que se va a buscar en la lista inmutable.</span><span class="sxs-lookup"><span data-stu-id="4e81c-130">The object to locate in the Immutable list.</span></span> <span data-ttu-id="4e81c-131">El valor puede ser null para los tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="4e81c-131">The value can be null for reference types.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="4e81c-132">Comparador de igualdad que se va a usar en la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="4e81c-132">The equality comparer to use in the search.</span></span></param>
        <summary><span data-ttu-id="4e81c-133">Busca el objeto especificado y devuelve el índice de base cero de la primera aparición en la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-133">Searches for the specified object and returns the zero-based index of the first occurrence within the list.</span></span></summary>
        <returns><span data-ttu-id="4e81c-134">Índice de base cero de la primera aparición del elemento dentro del intervalo de elementos de la lista inmutable que abarca desde el índice hasta el último elemento, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="4e81c-134">The zero-based index of the first occurrence of item within the range of elements in the immutable list that extends from index to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-135">Tipo de elementos de la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-135">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="4e81c-136">Lista en la que buscar.</span><span class="sxs-lookup"><span data-stu-id="4e81c-136">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="4e81c-137">Objeto que se va a buscar en la lista inmutable.</span><span class="sxs-lookup"><span data-stu-id="4e81c-137">The object to locate in the Immutable list.</span></span> <span data-ttu-id="4e81c-138">El valor puede ser null para los tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="4e81c-138">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="4e81c-139">Índice inicial de base cero de la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="4e81c-139">The zero-based starting index of the search.</span></span> <span data-ttu-id="4e81c-140">0 (cero) es válido en una lista vacía.</span><span class="sxs-lookup"><span data-stu-id="4e81c-140">0 (zero) is valid in an empty list.</span></span></param>
        <summary><span data-ttu-id="4e81c-141">Busca el objeto especificado y devuelve el índice de base cero de la primera aparición dentro del intervalo de elementos de la lista inmutable que abarca desde el índice especificado hasta el último elemento.</span><span class="sxs-lookup"><span data-stu-id="4e81c-141">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="4e81c-142">Índice de base cero de la primera aparición del elemento dentro del intervalo de elementos de la lista inmutable que abarca desde el índice hasta el último elemento, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="4e81c-142">The zero-based index of the first occurrence of item within the range of elements in the Immutable list that extends from index to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-143">Tipo de elementos de la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-143">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="4e81c-144">Lista en la que buscar.</span><span class="sxs-lookup"><span data-stu-id="4e81c-144">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="4e81c-145">Objeto que se va a buscar en la lista inmutable.</span><span class="sxs-lookup"><span data-stu-id="4e81c-145">The object to locate in the Immutable list.</span></span> <span data-ttu-id="4e81c-146">El valor puede ser null para los tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="4e81c-146">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="4e81c-147">Índice inicial de base cero de la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="4e81c-147">The zero-based starting index of the search.</span></span> <span data-ttu-id="4e81c-148">0 (cero) es válido en una lista vacía.</span><span class="sxs-lookup"><span data-stu-id="4e81c-148">0 (zero) is valid in an empty list.</span></span></param>
        <param name="count"><span data-ttu-id="4e81c-149">Número de elementos de la sección en la que se va a realizar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="4e81c-149">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="4e81c-150">Busca el objeto especificado y devuelve el índice de base cero de la primera aparición dentro del intervalo de elementos de la lista inmutable que abarca desde el índice especificado hasta el último elemento.</span><span class="sxs-lookup"><span data-stu-id="4e81c-150">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="4e81c-151">Índice de base cero de la primera aparición del elemento dentro del intervalo de elementos de la lista inmutable que abarca desde el índice hasta el último elemento, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="4e81c-151">The zero-based index of the first occurrence of item within the range of elements in the Immutable list that extends from index to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-152">Tipo de elementos de la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-152">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="4e81c-153">Lista en la que buscar.</span><span class="sxs-lookup"><span data-stu-id="4e81c-153">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="4e81c-154">Objeto que se va a buscar en la lista inmutable.</span><span class="sxs-lookup"><span data-stu-id="4e81c-154">The object to locate in the Immutable list.</span></span> <span data-ttu-id="4e81c-155">El valor puede ser null para los tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="4e81c-155">The value can be null for reference types.</span></span></param>
        <summary><span data-ttu-id="4e81c-156">Busca el objeto especificado y devuelve el índice de base cero de la última aparición en toda la lista inmutable.</span><span class="sxs-lookup"><span data-stu-id="4e81c-156">Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</span></span></summary>
        <returns><span data-ttu-id="4e81c-157">Índice de base cero de la última aparición del elemento en toda la lista inmutable, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="4e81c-157">The zero-based index of the last occurrence of item within the entire the Immutable list, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item, equalityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-158">Tipo de elementos de la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-158">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="4e81c-159">Lista en la que buscar.</span><span class="sxs-lookup"><span data-stu-id="4e81c-159">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="4e81c-160">Objeto que se va a buscar en la lista inmutable.</span><span class="sxs-lookup"><span data-stu-id="4e81c-160">The object to locate in the Immutable list.</span></span> <span data-ttu-id="4e81c-161">El valor puede ser null para los tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="4e81c-161">The value can be null for reference types.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="4e81c-162">Comparador de igualdad que se va a usar en la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="4e81c-162">The equality comparer to use in the search.</span></span></param>
        <summary><span data-ttu-id="4e81c-163">Busca el objeto especificado y devuelve el índice de base cero de la última aparición en toda la lista inmutable.</span><span class="sxs-lookup"><span data-stu-id="4e81c-163">Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</span></span></summary>
        <returns><span data-ttu-id="4e81c-164">Índice de base cero de la última aparición del elemento en toda la lista inmutable, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="4e81c-164">The zero-based index of the last occurrence of item within the entire the Immutable list, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-165">Tipo de elementos de la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-165">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="4e81c-166">Lista en la que buscar.</span><span class="sxs-lookup"><span data-stu-id="4e81c-166">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="4e81c-167">Objeto que se va a buscar en la lista inmutable.</span><span class="sxs-lookup"><span data-stu-id="4e81c-167">The object to locate in the Immutable list.</span></span> <span data-ttu-id="4e81c-168">El valor puede ser null para los tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="4e81c-168">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="4e81c-169">Índice inicial de base cero de la búsqueda hacia atrás.</span><span class="sxs-lookup"><span data-stu-id="4e81c-169">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="4e81c-170">Busca el objeto especificado y devuelve el índice de base cero de la última aparición dentro del intervalo de elementos de la lista inmutable que abarca desde el primer elemento hasta el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="4e81c-170">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="4e81c-171">Índice de base cero de la última aparición del elemento dentro del intervalo de elementos de la lista inmutable que abarca desde el primer elemento hasta el índice, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="4e81c-171">The zero-based index of the last occurrence of item within the range of elements in the Immutable list that extends from the first element to index, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-172">Tipo de elementos de la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-172">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="4e81c-173">Lista en la que buscar.</span><span class="sxs-lookup"><span data-stu-id="4e81c-173">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="4e81c-174">Objeto que se va a buscar en la lista inmutable.</span><span class="sxs-lookup"><span data-stu-id="4e81c-174">The object to locate in the Immutable list.</span></span> <span data-ttu-id="4e81c-175">El valor puede ser null para los tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="4e81c-175">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="4e81c-176">Índice inicial de base cero de la búsqueda hacia atrás.</span><span class="sxs-lookup"><span data-stu-id="4e81c-176">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="4e81c-177">Número de elementos de la sección en la que se va a realizar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="4e81c-177">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="4e81c-178">Busca el objeto especificado y devuelve el índice de base cero de la última aparición dentro del intervalo de elementos de la lista inmutable que abarca desde el primer elemento hasta el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="4e81c-178">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="4e81c-179">Índice de base cero de la última aparición del elemento dentro del intervalo de elementos de la lista inmutable que abarca desde el primer elemento hasta el índice, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="4e81c-179">The zero-based index of the last occurrence of item within the range of elements in the Immutable list that extends from the first element to index, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; Remove&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; Remove&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Remove(Of T) (list As IImmutableList(Of T), value As T) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ Remove(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T value);" />
      <MemberSignature Language="F#" Value="static member Remove : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T -&gt; System.Collections.Immutable.IImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Remove (list, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-180">Tipo de elementos de la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-180">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="4e81c-181">Lista en la que buscar.</span><span class="sxs-lookup"><span data-stu-id="4e81c-181">The list to search.</span></span></param>
        <param name="value"><span data-ttu-id="4e81c-182">Valor que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="4e81c-182">The value to remove.</span></span></param>
        <summary><span data-ttu-id="4e81c-183">Quita el valor especificado de la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-183">Removes the specified value from this list.</span></span></summary>
        <returns><span data-ttu-id="4e81c-184">Nueva lista inmutable con el elemento quitado o esta lista si el elemento no está en esta lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-184">A new immutable list with the element removed, or this list if the element is not in this list.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; RemoveRange&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; RemoveRange&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveRange(Of T) (list As IImmutableList(Of T), items As IEnumerable(Of T)) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ RemoveRange(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member RemoveRange : System.Collections.Immutable.IImmutableList&lt;'T&gt; * seq&lt;'T&gt; -&gt; System.Collections.Immutable.IImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.RemoveRange (list, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-185">Tipo de elementos de la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-185">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="4e81c-186">Lista en la que buscar.</span><span class="sxs-lookup"><span data-stu-id="4e81c-186">The list to search.</span></span></param>
        <param name="items"><span data-ttu-id="4e81c-187">Elementos a quitar si se encuentran coincidencias en esta lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-187">The items to remove if matches are found in this list.</span></span></param>
        <summary><span data-ttu-id="4e81c-188">Quita los valores especificados de esta lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-188">Removes the specified values from this list.</span></span></summary>
        <returns><span data-ttu-id="4e81c-189">Nueva lista inmutable con los elementos eliminados.</span><span class="sxs-lookup"><span data-stu-id="4e81c-189">A new immutable list with the elements removed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; Replace&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T oldValue, T newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; Replace&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T oldValue, !!T newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace(Of T) (list As IImmutableList(Of T), oldValue As T, newValue As T) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ Replace(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T oldValue, T newValue);" />
      <MemberSignature Language="F#" Value="static member Replace : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * 'T -&gt; System.Collections.Immutable.IImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Replace (list, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4e81c-190">Tipo de elementos de la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-190">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="4e81c-191">Lista en la que buscar.</span><span class="sxs-lookup"><span data-stu-id="4e81c-191">The list to search.</span></span></param>
        <param name="oldValue"><span data-ttu-id="4e81c-192">Elemento que se va a reemplazar.</span><span class="sxs-lookup"><span data-stu-id="4e81c-192">The element to replace.</span></span></param>
        <param name="newValue"><span data-ttu-id="4e81c-193">Elemento por el que se va a reemplazar el elemento antiguo.</span><span class="sxs-lookup"><span data-stu-id="4e81c-193">The element to replace the old element with.</span></span></param>
        <summary><span data-ttu-id="4e81c-194">Reemplaza el primer elemento igual de la lista por el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="4e81c-194">Replaces the first equal element in the list with the specified element.</span></span></summary>
        <returns><span data-ttu-id="4e81c-195">Nueva lista (incluso si el valor que se va a reemplazar es igual que el nuevo valor para esa posición).</span><span class="sxs-lookup"><span data-stu-id="4e81c-195">The new list -- even if the value being replaced is equal to the new value for that position.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e81c-196">Se produce cuando el valor antiguo no existe en la lista.</span><span class="sxs-lookup"><span data-stu-id="4e81c-196">Thrown when the old value does not exist in the list.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableList&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;TSource&gt; ToImmutableList&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!TSource&gt; ToImmutableList&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableList(Of TSource) (source As IEnumerable(Of TSource)) As ImmutableList(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableList&lt;TSource&gt; ^ ToImmutableList(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToImmutableList : seq&lt;'Source&gt; -&gt; System.Collections.Immutable.ImmutableList&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableList.ToImmutableList source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="4e81c-197">Tipo de los elementos de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="4e81c-197">The type of the elements in the sequence.</span></span></typeparam>
        <param name="source"><span data-ttu-id="4e81c-198">Secuencia que se va a enumerar.</span><span class="sxs-lookup"><span data-stu-id="4e81c-198">The sequence to enumerate.</span></span></param>
        <summary><span data-ttu-id="4e81c-199">Enumera una secuencia y genera una lista inmutable de su contenido.</span><span class="sxs-lookup"><span data-stu-id="4e81c-199">Enumerates a sequence and produces an immutable list of its contents.</span></span></summary>
        <returns><span data-ttu-id="4e81c-200">Lista inmutable que contiene los elementos en la secuencia especificada.</span><span class="sxs-lookup"><span data-stu-id="4e81c-200">An immutable list that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8d6968d1f8643e778c21e5e9ebd54a15fca8435" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37543292" /></Metadata><TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <TypeSignature Language="F#" Value="type MimeFormatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4418c-101">Proporciona una clase base abstracta para todos los sistemas de lectura y escritura destinados a los servicios y clientes Web implementados mediante HTTP pero sin SOAP.</span><span class="sxs-lookup"><span data-stu-id="4418c-101">Provides an abstract base class for all readers and writers for Web services and clients implemented using HTTP but without SOAP.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4418c-102">Los lectores y escritores de servicios web serializar y deserializan, respectivamente, entre los objetos de parámetro o valor devuelto de los métodos Web y las secuencias de solicitud o respuesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="4418c-102">Web service writers and readers serialize and deserialize, respectively, between the parameter or return objects of Web methods and the HTTP request or response streams.</span></span> <span data-ttu-id="4418c-103">La <xref:System.Web.Services.Protocols.MimeFormatter> clase establece una interfaz y funcionalidad comunes para las clases de lector y escritor, en el cliente y el lado del servicio.</span><span class="sxs-lookup"><span data-stu-id="4418c-103">The <xref:System.Web.Services.Protocols.MimeFormatter> class establishes a common interface and functionality for reader and writer classes, in both client and service-side .</span></span>  
  
 <span data-ttu-id="4418c-104">La <xref:System.Web.Services.Protocols.MimeFormatter> clase es compatible con las implementaciones de .NET Framework de servicios Web a través de las operaciones HTTP-GET y HTTP-POST.</span><span class="sxs-lookup"><span data-stu-id="4418c-104">The <xref:System.Web.Services.Protocols.MimeFormatter> class supports the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</span></span> <span data-ttu-id="4418c-105">En las operaciones GET de HTTP, los parámetros de solicitud se codifican del localizador de recursos uniforme (URL) en la solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="4418c-105">In HTTP-GET operations request parameters are encoded in the HTTP request's Uniform Resource Locator (URL).</span></span> <span data-ttu-id="4418c-106">En las operaciones HTTP-POST, los parámetros de solicitud se codifican en el cuerpo de solicitud HTTP, al igual que con un formulario HTML.</span><span class="sxs-lookup"><span data-stu-id="4418c-106">In HTTP-POST operations, request parameters are encoded in the HTTP request body, as with an HTML form.</span></span> <span data-ttu-id="4418c-107">Con ambas implementaciones, el valor devuelto aparece en el cuerpo de respuesta HTTP como un documento XML no SOAP.</span><span class="sxs-lookup"><span data-stu-id="4418c-107">With both implementations, the return value appears in the HTTP response body as a non-SOAP XML document.</span></span>  
  
 <span data-ttu-id="4418c-108">Normalmente, un desarrollador no necesita utilizar directamente <xref:System.Web.Services.Protocols.MimeFormatter> o sus clases descendientes.</span><span class="sxs-lookup"><span data-stu-id="4418c-108">A developer typically does not need to directly use <xref:System.Web.Services.Protocols.MimeFormatter> or its descendant classes.</span></span> <span data-ttu-id="4418c-109">En su lugar, cuando la herramienta Wsdl.exe genera código proxy del cliente según las implementaciones HTTP-GET o HTTP-POST, aplica el <xref:System.Web.Services.Protocols.HttpMethodAttribute> a cada método Web y establece el atributo <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> y <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> propiedades al tipo adecuado deriva el <xref:System.Web.Services.Protocols.MimeFormatter> clase.</span><span class="sxs-lookup"><span data-stu-id="4418c-109">Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> and <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> properties to the appropriate type derived from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="4418c-110">En el servidor, se usan los tipos derivados apropiados según la configuración de un archivo de configuración de ASP.NET (Web.config).</span><span class="sxs-lookup"><span data-stu-id="4418c-110">On the server, the appropriate derived types are used according to settings in an ASP.NET configuration file (Web.config).</span></span> <span data-ttu-id="4418c-111">En el cliente se determinan los tipos derivados apropiados desde WSDL.</span><span class="sxs-lookup"><span data-stu-id="4418c-111">On the client the appropriate derived types are determined from the WSDL.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4418c-112">Inicializa una nueva instancia de la clase <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="4418c-112">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj -&gt; System.Web.Services.Protocols.MimeFormatter" Usage="System.Web.Services.Protocols.MimeFormatter.CreateInstance (type, initializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4418c-113">Tipo, derivado de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, del que se va a crear una instancia.</span><span class="sxs-lookup"><span data-stu-id="4418c-113">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, of which to create an instance.</span></span></param>
        <param name="initializer"><span data-ttu-id="4418c-114">Objeto utilizado para inicializar la instancia obtenida previamente a través de la implementación de la clase derivada del método <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />.</span><span class="sxs-lookup"><span data-stu-id="4418c-114">An object used to initialize the instance obtained earlier through the derived class's implementation of the <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> method.</span></span></param>
        <summary><span data-ttu-id="4418c-115">Crea e inicializa una instancia de una clase concreta derivada de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="4418c-115">Creates and initializes an instance of a concrete class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="4418c-116">Un objeto <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="4418c-116">A <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4418c-117">El <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> método crea una instancia de la clase derivada e invoca la implementación de la clase derivada de la abstracta <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4418c-117">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method creates an instance of the derived class and invokes the derived class's implementation of the abstract <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="4418c-118">El <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> método se invoca en el momento en que se procesa una solicitud o respuesta.</span><span class="sxs-lookup"><span data-stu-id="4418c-118">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is invoked at the time a request or response is processed.</span></span>  
  
 <span data-ttu-id="4418c-119">Un inicializador es un objeto pasado como parámetro a la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4418c-119">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="4418c-120">El inicializador se pasa como parámetro a la <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> método se obtiene desde otra instancia de la clase derivada, invocando el <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> método durante la inicialización del cliente o servicio.</span><span class="sxs-lookup"><span data-stu-id="4418c-120">The initializer passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is obtained from another instance of the derived class, by invoking the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4418c-121">Cuando se reemplaza en una clase derivada, devuelve un inicializador para el método especificado.</span><span class="sxs-lookup"><span data-stu-id="4418c-121">When overridden in a derived class, returns an initializer for the specified method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="mimeFormatter.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="4418c-122"><see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> que especifica el método web para el que se obtiene el inicializador.</span><span class="sxs-lookup"><span data-stu-id="4418c-122">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="4418c-123">Cuando se reemplaza en una clase derivada, devuelve un inicializador para el método especificado.</span><span class="sxs-lookup"><span data-stu-id="4418c-123">When overridden in a derived class, returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="4418c-124"><see cref="T:System.Object" /> que contiene el inicializador del método especificado.</span><span class="sxs-lookup"><span data-stu-id="4418c-124">An <see cref="T:System.Object" /> that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4418c-125">Un inicializador es un objeto pasado como parámetro a la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4418c-125">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="4418c-126">Implementación de una clase derivada de la <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> se invoca el método de instancia durante la inicialización del cliente o servicio.</span><span class="sxs-lookup"><span data-stu-id="4418c-126">A derived class's implementation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method is invoked during client or service initialization.</span></span> <span data-ttu-id="4418c-127">Más adelante, al tiempo que se procesa una solicitud o respuesta, el objeto inicializador se pasa a estático <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> método, que crea una instancia de otro objeto de la clase derivada y, a continuación, en el <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método para inicializarlo.</span><span class="sxs-lookup"><span data-stu-id="4418c-127">Later, at the time a request or response is processed, the initializer object is passed to the static <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method, which creates an instance of another object of the derived class, and then to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method to initialize it.</span></span> <span data-ttu-id="4418c-128">El otro objeto realiza la lectura o escritura real.</span><span class="sxs-lookup"><span data-stu-id="4418c-128">The other object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="static member GetInitializer : Type * System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializer (type, methodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4418c-129">Tipo, derivado de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, para el que se obtiene un inicializador.</span><span class="sxs-lookup"><span data-stu-id="4418c-129">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />,- for which an initializer is obtained.</span></span></param>
        <param name="methodInfo"><span data-ttu-id="4418c-130"><see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> que especifica el método web para el que se obtiene el inicializador.</span><span class="sxs-lookup"><span data-stu-id="4418c-130">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="4418c-131">Devuelve un inicializador del método especificado.</span><span class="sxs-lookup"><span data-stu-id="4418c-131">Returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="4418c-132">Objeto <see cref="T:System.Object" /> que contiene el inicializador para el método especificado.</span><span class="sxs-lookup"><span data-stu-id="4418c-132">A <see cref="T:System.Object" /> object that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4418c-133">Un inicializador es un objeto pasado como parámetro a la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4418c-133">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="4418c-134">Estático <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> método invoca la clase derivada <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> método, crear implícitamente una instancia de la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="4418c-134">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method invokes the derived class's <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method, implicitly creating an instance of the derived class.</span></span> <span data-ttu-id="4418c-135">En el momento en que se procesa una solicitud o respuesta, el objeto inicializador se pasa a la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método de otra instancia de la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="4418c-135">At the time a request or response is processed, the initializer object is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="4418c-136">El último objeto realiza la lectura o escritura real.</span><span class="sxs-lookup"><span data-stu-id="4418c-136">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4418c-137">Cuando se reemplaza en una clase derivada, devuelve una matriz de objetos de inicializador que corresponde a una matriz de entrada de definiciones de método.</span><span class="sxs-lookup"><span data-stu-id="4418c-137">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]&#xA;override this.GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="mimeFormatter.GetInitializers methodInfos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos"><span data-ttu-id="4418c-138">Matriz de métodos Web en la que se obtiene, para cada método, el objeto del índice correspondiente en la matriz de inicializador devuelta.</span><span class="sxs-lookup"><span data-stu-id="4418c-138">An array of Web methods where, for each method, the object of the corresponding index in the returned initializer array is obtained.</span></span></param>
        <summary><span data-ttu-id="4418c-139">Cuando se reemplaza en una clase derivada, devuelve una matriz de objetos de inicializador que corresponde a una matriz de entrada de definiciones de método.</span><span class="sxs-lookup"><span data-stu-id="4418c-139">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span></span></summary>
        <returns><span data-ttu-id="4418c-140">Matriz de objetos de inicializador correspondiente a la matriz de entrada de definiciones de método.</span><span class="sxs-lookup"><span data-stu-id="4418c-140">An array of initializer objects corresponding to the input array of method definitions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4418c-141">Un inicializador es un objeto pasado como parámetro a la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4418c-141">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="4418c-142">El <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> invoca el método de instancia el <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> método de instancia para cada método Web de entrada.</span><span class="sxs-lookup"><span data-stu-id="4418c-142">The <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> instance method invokes the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method for each input Web method.</span></span> <span data-ttu-id="4418c-143">Esto significa que una instancia de una clase derivada de <xref:System.Web.Services.Protocols.MimeFormatter> ya se ha creado.</span><span class="sxs-lookup"><span data-stu-id="4418c-143">This means an instance of a class derived from <xref:System.Web.Services.Protocols.MimeFormatter> has already been created.</span></span> <span data-ttu-id="4418c-144">En el momento en que se procesa una solicitud o respuesta, el inicializador se pasa a la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método de otra instancia de la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="4418c-144">At the time a request or response is processed, the initializer is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="4418c-145">El último objeto realiza la lectura o escritura real.</span><span class="sxs-lookup"><span data-stu-id="4418c-145">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="static member GetInitializers : Type * System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializers (type, methodInfos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4418c-146">Tipo, derivado de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, para el que se obtienen inicializadores.</span><span class="sxs-lookup"><span data-stu-id="4418c-146">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, for which initializers are obtained.</span></span></param>
        <param name="methodInfos"><span data-ttu-id="4418c-147">Matriz de tipo <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> que especifica los métodos Web para los que se obtienen los inicializadores.</span><span class="sxs-lookup"><span data-stu-id="4418c-147">An array of type <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web methods for which the initializers are obtained.</span></span></param>
        <summary><span data-ttu-id="4418c-148">Devuelve una matriz de objetos de inicializador que corresponde a una matriz de entrada de definiciones de método para una clase especificada derivada de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="4418c-148">Returns an array of initializer objects corresponding to an input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="4418c-149">Matriz de objetos de inicializador que corresponde a una matriz de entrada de definiciones de método para una clase especificada derivada de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="4418c-149">An array of initializer objects corresponding to the input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4418c-150">Un inicializador es un objeto pasado como parámetro a la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4418c-150">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="4418c-151">Estático <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> método hace que la invocación de la <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> método perteneciente a la clase derivada especificada por el `type` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4418c-151">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> method causes the invocation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method belonging to the derived class specified by the `type` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="mimeFormatter.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer"><span data-ttu-id="4418c-152">Objeto de un tipo adecuado a la clase determinada que está implementando el método.</span><span class="sxs-lookup"><span data-stu-id="4418c-152">An object of a type appropriate to the particular class that is implementing the method.</span></span></param>
        <summary><span data-ttu-id="4418c-153">Cuando se reemplaza en una clase derivada, inicializa una instancia.</span><span class="sxs-lookup"><span data-stu-id="4418c-153">When overridden in a derived class, initializes an instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4418c-154">El <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> método se invoca en el momento en que se procesa una solicitud o respuesta; sin embargo, se obtiene el inicializador mediante una llamada a la <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> método en otra instancia durante la inicialización del cliente o servicio.</span><span class="sxs-lookup"><span data-stu-id="4418c-154">The <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method is invoked at the time a request or response is processed; however, the initializer is obtained by calling the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method on another instance during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="CustomAttributeExtensions" FullName="System.Reflection.CustomAttributeExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0daf2be81fed26d6c720546fba326f5c5d7e42f2" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52199033" /></Metadata><TypeSignature Language="C#" Value="public static class CustomAttributeExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CustomAttributeExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CustomAttributeExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type CustomAttributeExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9dd12-101">Contiene métodos estáticos para recuperar los atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="9dd12-101">Contains static methods for retrieving custom attributes.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9dd12-102">Recupera un atributo personalizado aplicado a un elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-102">Retrieves a custom attribute that is applied to a specified element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute (element As Assembly, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Assembly * Type -&gt; Attribute" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-103">Ensamblado que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-103">The assembly to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-104">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-104">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="9dd12-105">Recupera un atributo personalizado de un tipo especificado que se aplica a un ensamblado concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-105">Retrieves a custom attribute of a specified type that is applied to a specified assembly.</span></span></summary>
        <returns><span data-ttu-id="9dd12-106">Atributo personalizado que coincide con <paramref name="attributeType" />, o <see langword="null" /> si no se encuentra ningún atributo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-106">A custom attribute that matches <paramref name="attributeType" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd12-107">Use la <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> método de extensión si espera que más de un valor que se devolverán, o <xref:System.Reflection.AmbiguousMatchException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="9dd12-107">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-108">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-108"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-109"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-109"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9dd12-110">Se ha encontrado más de un atributo de los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="9dd12-110">More than one of the requested attributes was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute (element As MemberInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * Type -&gt; Attribute" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-111">Miembro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-111">The member to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-112">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-112">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="9dd12-113">Recupera un atributo personalizado de un tipo especificado que se aplica a un miembro concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-113">Retrieves a custom attribute of a specified type that is applied to a specified member.</span></span></summary>
        <returns><span data-ttu-id="9dd12-114">Atributo personalizado que coincide con <paramref name="attributeType" />, o <see langword="null" /> si no se encuentra ningún atributo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-114">A custom attribute that matches <paramref name="attributeType" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd12-115">Use la <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> método de extensión si espera que más de un valor que se devolverán, o <xref:System.Reflection.AmbiguousMatchException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="9dd12-115">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-116">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-116"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-117"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-117"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-118"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-118"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9dd12-119">Se ha encontrado más de un atributo de los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="9dd12-119">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-120">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-120">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute (element As Module, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Module * Type -&gt; Attribute" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-121">Módulo que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-121">The module to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-122">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-122">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="9dd12-123">Recupera un atributo personalizado de un tipo especificado que se aplica a un módulo concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-123">Retrieves a custom attribute of a specified type that is applied to a specified module.</span></span></summary>
        <returns><span data-ttu-id="9dd12-124">Atributo personalizado que coincide con <paramref name="attributeType" />, o <see langword="null" /> si no se encuentra ningún atributo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-124">A custom attribute that matches <paramref name="attributeType" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd12-125">Use la <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> método de extensión si espera que más de un valor que se devolverán, o <xref:System.Reflection.AmbiguousMatchException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="9dd12-125">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-126">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-126"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-127"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-127"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9dd12-128">Se ha encontrado más de un atributo de los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="9dd12-128">More than one of the requested attributes was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute (element As ParameterInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * Type -&gt; Attribute" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-129">Parámetro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-129">The parameter to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-130">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-130">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="9dd12-131">Recupera un atributo personalizado de un tipo especificado que se aplica a un parámetro concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-131">Retrieves a custom attribute of a specified type that is applied to a specified parameter.</span></span></summary>
        <returns><span data-ttu-id="9dd12-132">Atributo personalizado que coincide con <paramref name="attributeType" />, o <see langword="null" /> si no se encuentra ningún atributo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-132">A custom attribute that matches <paramref name="attributeType" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd12-133">Use la <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> método de extensión si espera que más de un valor que se devolverán, o <xref:System.Reflection.AmbiguousMatchException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="9dd12-133">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-134">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-134"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-135"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-135"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9dd12-136">Se ha encontrado más de un atributo de los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="9dd12-136">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-137">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-137">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute (element As MemberInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * Type * bool -&gt; Attribute" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-138">Miembro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-138">The member to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-139">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-139">The type of attribute to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="9dd12-140">Es <see langword="true" /> para inspeccionar los antecesores de <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-140"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9dd12-141">Recupera un atributo personalizado de un tipo especificado que se aplica a un miembro concreto y, opcionalmente, inspecciona los antecesores de dicho miembro.</span><span class="sxs-lookup"><span data-stu-id="9dd12-141">Retrieves a custom attribute of a specified type that is applied to a specified member, and optionally inspects the ancestors of that member.</span></span></summary>
        <returns><span data-ttu-id="9dd12-142">Atributo personalizado que coincide con <paramref name="attributeType" />, o <see langword="null" /> si no se encuentra ningún atributo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-142">A custom attribute that matches <paramref name="attributeType" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd12-143">Use la <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> método de extensión si espera que más de un valor que se devolverán, o <xref:System.Reflection.AmbiguousMatchException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="9dd12-143">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-144">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-144"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-145"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-145"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-146"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-146"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9dd12-147">Se ha encontrado más de un atributo de los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="9dd12-147">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-148">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-148">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * Type * bool -&gt; Attribute" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-149">Parámetro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-149">The parameter to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-150">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-150">The type of attribute to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="9dd12-151">Es <see langword="true" /> para inspeccionar los antecesores de <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-151"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9dd12-152">Recupera un atributo personalizado de un tipo especificado que se aplica a un parámetro concreto y, opcionalmente, inspecciona los antecesores de dicho parámetro.</span><span class="sxs-lookup"><span data-stu-id="9dd12-152">Retrieves a custom attribute of a specified type that is applied to a specified parameter, and optionally inspects the ancestors of that parameter.</span></span></summary>
        <returns><span data-ttu-id="9dd12-153">Atributo personalizado que coincide con <paramref name="attributeType" />, o <see langword="null" /> si no se encuentra ningún atributo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-153">A custom attribute matching <paramref name="attributeType" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd12-154">Use la <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> método de extensión si espera que más de un valor que se devolverán, o <xref:System.Reflection.AmbiguousMatchException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="9dd12-154">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-155">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-155"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-156"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-156"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9dd12-157">Se ha encontrado más de un atributo de los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="9dd12-157">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-158">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-158">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.Assembly element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute(Of T As Attribute) (element As Assembly) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static T GetCustomAttribute(System::Reflection::Assembly ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Assembly -&gt; 'T (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9dd12-159">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-159">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="9dd12-160">Ensamblado que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-160">The assembly to inspect.</span></span></param>
        <summary><span data-ttu-id="9dd12-161">Recupera un atributo personalizado de un tipo especificado que se aplica a un ensamblado concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-161">Retrieves a custom attribute of a specified type that is applied to a specified assembly.</span></span></summary>
        <returns><span data-ttu-id="9dd12-162">Atributo personalizado que coincide con <paramref name="T" />, o <see langword="null" /> si no se encuentra ningún atributo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-162">A custom attribute that matches <paramref name="T" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd12-163">Use la <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> método de extensión si espera que más de un valor que se devolverán, o <xref:System.Reflection.AmbiguousMatchException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="9dd12-163">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-164">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-164"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9dd12-165">Se ha encontrado más de un atributo de los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="9dd12-165">More than one of the requested attributes was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.MemberInfo element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute(Of T As Attribute) (element As MemberInfo) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static T GetCustomAttribute(System::Reflection::MemberInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo -&gt; 'T (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9dd12-166">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-166">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="9dd12-167">Miembro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-167">The member to inspect.</span></span></param>
        <summary><span data-ttu-id="9dd12-168">Recupera un atributo personalizado de un tipo especificado que se aplica a un miembro concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-168">Retrieves a custom attribute of a specified type that is applied to a specified member.</span></span></summary>
        <returns><span data-ttu-id="9dd12-169">Atributo personalizado que coincide con <paramref name="T" />, o <see langword="null" /> si no se encuentra ningún atributo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-169">A custom attribute that matches <paramref name="T" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd12-170">Use la <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> método de extensión si espera que más de un valor que se devolverán, o <xref:System.Reflection.AmbiguousMatchException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="9dd12-170">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-171">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-171"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-172"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-172"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9dd12-173">Se ha encontrado más de un atributo de los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="9dd12-173">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-174">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-174">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.Module element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute(Of T As Attribute) (element As Module) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static T GetCustomAttribute(System::Reflection::Module ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Module -&gt; 'T (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9dd12-175">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-175">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="9dd12-176">Módulo que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-176">The module to inspect.</span></span></param>
        <summary><span data-ttu-id="9dd12-177">Recupera un atributo personalizado de un tipo especificado que se aplica a un módulo concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-177">Retrieves a custom attribute of a specified type that is applied to a specified module.</span></span></summary>
        <returns><span data-ttu-id="9dd12-178">Atributo personalizado que coincide con <paramref name="T" />, o <see langword="null" /> si no se encuentra ningún atributo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-178">A custom attribute that matches <paramref name="T" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd12-179">Use la <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> método de extensión si espera que más de un valor que se devolverán, o <xref:System.Reflection.AmbiguousMatchException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="9dd12-179">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-180">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-180"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9dd12-181">Se ha encontrado más de un atributo de los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="9dd12-181">More than one of the requested attributes was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.ParameterInfo element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute(Of T As Attribute) (element As ParameterInfo) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static T GetCustomAttribute(System::Reflection::ParameterInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo -&gt; 'T (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9dd12-182">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-182">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="9dd12-183">Parámetro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-183">The parameter to inspect.</span></span></param>
        <summary><span data-ttu-id="9dd12-184">Recupera un atributo personalizado de un tipo especificado que se aplica a un parámetro concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-184">Retrieves a custom attribute of a specified type that is applied to a specified parameter.</span></span></summary>
        <returns><span data-ttu-id="9dd12-185">Atributo personalizado que coincide con <paramref name="T" />, o <see langword="null" /> si no se encuentra ningún atributo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-185">A custom attribute that matches <paramref name="T" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd12-186">Use la <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> método de extensión si espera que más de un valor que se devolverán, o <xref:System.Reflection.AmbiguousMatchException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="9dd12-186">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-187">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-187"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-188"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-188"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9dd12-189">Se ha encontrado más de un atributo de los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="9dd12-189">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-190">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-190">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.MemberInfo element, bool inherit) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute(Of T As Attribute) (element As MemberInfo, inherit As Boolean) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static T GetCustomAttribute(System::Reflection::MemberInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * bool -&gt; 'T (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9dd12-191">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-191">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="9dd12-192">Miembro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-192">The member to inspect.</span></span></param>
        <param name="inherit"><span data-ttu-id="9dd12-193">Es <see langword="true" /> para inspeccionar los antecesores de <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-193"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9dd12-194">Recupera un atributo personalizado de un tipo especificado que se aplica a un miembro concreto y, opcionalmente, inspecciona los antecesores de dicho miembro.</span><span class="sxs-lookup"><span data-stu-id="9dd12-194">Retrieves a custom attribute of a specified type that is applied to a specified member, and optionally inspects the ancestors of that member.</span></span></summary>
        <returns><span data-ttu-id="9dd12-195">Atributo personalizado que coincide con <paramref name="T" />, o <see langword="null" /> si no se encuentra ningún atributo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-195">A custom attribute that matches <paramref name="T" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd12-196">Use la <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> método de extensión si espera que más de un valor que se devolverán, o <xref:System.Reflection.AmbiguousMatchException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="9dd12-196">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-197">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-197"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-198"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-198"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9dd12-199">Se ha encontrado más de un atributo de los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="9dd12-199">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-200">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-200">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.ParameterInfo element, bool inherit) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute(Of T As Attribute) (element As ParameterInfo, inherit As Boolean) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static T GetCustomAttribute(System::Reflection::ParameterInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * bool -&gt; 'T (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9dd12-201">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-201">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="9dd12-202">Parámetro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-202">The parameter to inspect.</span></span></param>
        <param name="inherit"><span data-ttu-id="9dd12-203">Es <see langword="true" /> para inspeccionar los antecesores de <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-203"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9dd12-204">Recupera un atributo personalizado de un tipo especificado que se aplica a un parámetro concreto y, opcionalmente, inspecciona los antecesores de dicho parámetro.</span><span class="sxs-lookup"><span data-stu-id="9dd12-204">Retrieves a custom attribute of a specified type that is applied to a specified parameter, and optionally inspects the ancestors of that parameter.</span></span></summary>
        <returns><span data-ttu-id="9dd12-205">Atributo personalizado que coincide con <paramref name="T" />, o <see langword="null" /> si no se encuentra ningún atributo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-205">A custom attribute that matches <paramref name="T" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd12-206">Use la <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> método de extensión si espera que más de un valor que se devolverán, o <xref:System.Reflection.AmbiguousMatchException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="9dd12-206">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-207">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-207"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-208"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-208"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="9dd12-209">Se ha encontrado más de un atributo de los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="9dd12-209">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-210">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-210">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9dd12-211">Recupera una colección de atributos personalizados que se aplican a un elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-211">Retrieves a collection of custom attributes that are applied to a specified element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.Assembly element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As Assembly) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-212">Ensamblado que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-212">The assembly to inspect.</span></span></param>
        <summary><span data-ttu-id="9dd12-213">Recupera una colección de atributos personalizados que se aplican a un ensamblado especificado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-213">Retrieves a collection of custom attributes that are applied to a specified assembly.</span></span></summary>
        <returns><span data-ttu-id="9dd12-214">Colección de atributos personalizados que se aplican a <paramref name="element" /> o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-214">A collection of the custom attributes that are applied to <paramref name="element" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-215">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-215"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.MemberInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As MemberInfo) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-216">Miembro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-216">The member to inspect.</span></span></param>
        <summary><span data-ttu-id="9dd12-217">Recupera una colección de atributos personalizados que se aplican a un miembro especificado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-217">Retrieves a collection of custom attributes that are applied to a specified member.</span></span></summary>
        <returns><span data-ttu-id="9dd12-218">Colección de atributos personalizados que se aplican a <paramref name="element" /> o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-218">A collection of the custom attributes that are applied to <paramref name="element" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-219">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-219"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-220"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-220"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-221">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-221">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.Module element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As Module) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-222">Módulo que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-222">The module to inspect.</span></span></param>
        <summary><span data-ttu-id="9dd12-223">Recupera una colección de atributos personalizados que se aplican a un módulo especificado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-223">Retrieves a collection of custom attributes that are applied to a specified module.</span></span></summary>
        <returns><span data-ttu-id="9dd12-224">Colección de atributos personalizados que se aplican a <paramref name="element" /> o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-224">A collection of the custom attributes that are applied to <paramref name="element" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-225">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-225"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.ParameterInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As ParameterInfo) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-226">Parámetro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-226">The parameter to inspect.</span></span></param>
        <summary><span data-ttu-id="9dd12-227">Recupera una colección de atributos personalizados que se aplican a un parámetro especificado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-227">Retrieves a collection of custom attributes that are applied to a specified parameter.</span></span></summary>
        <returns><span data-ttu-id="9dd12-228">Colección de atributos personalizados que se aplican a <paramref name="element" /> o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-228">A collection of the custom attributes that are applied to <paramref name="element" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-229">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-229"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-230"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-230"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-231">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-231">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As Assembly, attributeType As Type) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * Type -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-232">Ensamblado que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-232">The assembly to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-233">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-233">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="9dd12-234">Recupera una colección de atributos personalizados de un tipo especificado que se aplican a un ensamblado concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-234">Retrieves a collection of custom attributes of a specified type that are applied to a specified assembly.</span></span></summary>
        <returns><span data-ttu-id="9dd12-235">Colección de atributos personalizados que se aplican a <paramref name="element" /> y que coinciden con <paramref name="attributeType" />, o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-235">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="attributeType" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-236">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-236"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-237"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-237"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.MemberInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As MemberInfo, inherit As Boolean) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * bool -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-238">Miembro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-238">The member to inspect.</span></span></param>
        <param name="inherit"><span data-ttu-id="9dd12-239">Es <see langword="true" /> para inspeccionar los antecesores de <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-239"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9dd12-240">Recupera una colección de atributos personalizados que se aplican a un miembro concreto y, opcionalmente, inspecciona los antecesores de dicho miembro.</span><span class="sxs-lookup"><span data-stu-id="9dd12-240">Retrieves a collection of custom attributes that are applied to a specified member, and optionally inspects the ancestors of that member.</span></span></summary>
        <returns><span data-ttu-id="9dd12-241">Colección de atributos personalizados que se aplican a <paramref name="element" /> y que coincide con los criterios especificados, o una colección vacía si no hay tales atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-241">A collection of the custom attributes that are applied to <paramref name="element" /> that match the specified criteria, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-242">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-242"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-243"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-243"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-244">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-244">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As MemberInfo, attributeType As Type) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * Type -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-245">Miembro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-245">The member to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-246">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-246">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="9dd12-247">Recupera una colección de atributos personalizados de un tipo especificado que se aplican a un miembro concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-247">Retrieves a collection of custom attributes of a specified type that are applied to a specified member.</span></span></summary>
        <returns><span data-ttu-id="9dd12-248">Colección de atributos personalizados que se aplican a <paramref name="element" /> y que coinciden con <paramref name="attributeType" />, o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-248">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="attributeType" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-249">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-249"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-250"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-250"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-251"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-251"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-252">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-252">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As Module, attributeType As Type) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * Type -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-253">Módulo que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-253">The module to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-254">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-254">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="9dd12-255">Recupera una colección de atributos personalizados de un tipo especificado que se aplican a un módulo concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-255">Retrieves a collection of custom attributes of a specified type that are applied to a specified module.</span></span></summary>
        <returns><span data-ttu-id="9dd12-256">Colección de atributos personalizados que se aplican a <paramref name="element" /> y que coinciden con <paramref name="attributeType" />, o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-256">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="attributeType" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-257">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-257"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-258"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-258"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.ParameterInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As ParameterInfo, inherit As Boolean) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * bool -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-259">Parámetro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-259">The parameter to inspect.</span></span></param>
        <param name="inherit"><span data-ttu-id="9dd12-260">Es <see langword="true" /> para inspeccionar los antecesores de <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-260"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9dd12-261">Recupera una colección de atributos personalizados que se aplican a un parámetro concreto y, opcionalmente, inspecciona los antecesores de dicho parámetro.</span><span class="sxs-lookup"><span data-stu-id="9dd12-261">Retrieves a collection of custom attributes that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.</span></span></summary>
        <returns><span data-ttu-id="9dd12-262">Colección de atributos personalizados que se aplican a <paramref name="element" /> o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-262">A collection of the custom attributes that are applied to <paramref name="element" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-263">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-263"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-264"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-264"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-265">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-265">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As ParameterInfo, attributeType As Type) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * Type -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-266">Parámetro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-266">The parameter to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-267">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-267">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="9dd12-268">Recupera una colección de atributos personalizados de un tipo especificado que se aplican a un parámetro concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-268">Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter.</span></span></summary>
        <returns><span data-ttu-id="9dd12-269">Colección de atributos personalizados que se aplican a <paramref name="element" /> y que coinciden con <paramref name="attributeType" />, o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-269">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="attributeType" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-270">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-270"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-271"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-271"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-272"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-272"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-273">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-273">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As MemberInfo, attributeType As Type, inherit As Boolean) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * Type * bool -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-274">Miembro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-274">The member to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-275">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-275">The type of attribute to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="9dd12-276">Es <see langword="true" /> para inspeccionar los antecesores de <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-276"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9dd12-277">Recupera una colección de atributos personalizados de un tipo especificado que se aplican a un miembro concreto y, opcionalmente, inspecciona los antecesores de dicho miembro.</span><span class="sxs-lookup"><span data-stu-id="9dd12-277">Retrieves a collection of custom attributes of a specified type that are applied to a specified member, and optionally inspects the ancestors of that member.</span></span></summary>
        <returns><span data-ttu-id="9dd12-278">Colección de atributos personalizados que se aplican a <paramref name="element" /> y que coinciden con <paramref name="attributeType" />, o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-278">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="attributeType" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-279">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-279"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-280"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-280"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-281"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-281"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-282">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-282">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As ParameterInfo, attributeType As Type, inherit As Boolean) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * Type * bool -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-283">Parámetro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-283">The parameter to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-284">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-284">The type of attribute to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="9dd12-285">Es <see langword="true" /> para inspeccionar los antecesores de <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-285"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9dd12-286">Recupera una colección de atributos personalizados de un tipo especificado que se aplican a un parámetro concreto y, opcionalmente, inspecciona los antecesores de dicho parámetro.</span><span class="sxs-lookup"><span data-stu-id="9dd12-286">Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.</span></span></summary>
        <returns><span data-ttu-id="9dd12-287">Colección de atributos personalizados que se aplican a <paramref name="element" /> y que coinciden con <paramref name="attributeType" />, o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-287">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="attributeType" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-288">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-288"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-289"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-289"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-290"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-290"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-291">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-291">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.Assembly element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes(Of T As Attribute) (element As Assembly) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; seq&lt;'T (requires 'T :&gt; Attribute)&gt; (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9dd12-292">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-292">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="9dd12-293">Ensamblado que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-293">The assembly to inspect.</span></span></param>
        <summary><span data-ttu-id="9dd12-294">Recupera una colección de atributos personalizados de un tipo especificado que se aplican a un ensamblado concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-294">Retrieves a collection of custom attributes of a specified type that are applied to a specified assembly.</span></span></summary>
        <returns><span data-ttu-id="9dd12-295">Colección de atributos personalizados que se aplican a <paramref name="element" /> y que coinciden con <paramref name="T" />, o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-295">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="T" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-296">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-296"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.MemberInfo element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes(Of T As Attribute) (element As MemberInfo) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; seq&lt;'T (requires 'T :&gt; Attribute)&gt; (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9dd12-297">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-297">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="9dd12-298">Miembro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-298">The member to inspect.</span></span></param>
        <summary><span data-ttu-id="9dd12-299">Recupera una colección de atributos personalizados de un tipo especificado que se aplican a un miembro concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-299">Retrieves a collection of custom attributes of a specified type that are applied to a specified member.</span></span></summary>
        <returns><span data-ttu-id="9dd12-300">Colección de atributos personalizados que se aplican a <paramref name="element" /> y que coinciden con <paramref name="T" />, o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-300">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="T" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-301">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-301"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-302"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-302"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-303">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-303">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.Module element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes(Of T As Attribute) (element As Module) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; seq&lt;'T (requires 'T :&gt; Attribute)&gt; (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9dd12-304">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-304">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="9dd12-305">Módulo que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-305">The module to inspect.</span></span></param>
        <summary><span data-ttu-id="9dd12-306">Recupera una colección de atributos personalizados de un tipo especificado que se aplican a un módulo concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-306">Retrieves a collection of custom attributes of a specified type that are applied to a specified module.</span></span></summary>
        <returns><span data-ttu-id="9dd12-307">Colección de atributos personalizados que se aplican a <paramref name="element" /> y que coinciden con <paramref name="T" />, o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-307">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="T" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-308">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-308"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.ParameterInfo element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes(Of T As Attribute) (element As ParameterInfo) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; seq&lt;'T (requires 'T :&gt; Attribute)&gt; (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9dd12-309">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-309">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="9dd12-310">Parámetro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-310">The parameter to inspect.</span></span></param>
        <summary><span data-ttu-id="9dd12-311">Recupera una colección de atributos personalizados de un tipo especificado que se aplican a un parámetro concreto.</span><span class="sxs-lookup"><span data-stu-id="9dd12-311">Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter.</span></span></summary>
        <returns><span data-ttu-id="9dd12-312">Colección de atributos personalizados que se aplican a <paramref name="element" /> y que coinciden con <paramref name="T" />, o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-312">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="T" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-313">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-313"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-314"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-314"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-315">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-315">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.MemberInfo element, bool inherit) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes(Of T As Attribute) (element As MemberInfo, inherit As Boolean) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * bool -&gt; seq&lt;'T (requires 'T :&gt; Attribute)&gt; (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9dd12-316">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-316">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="9dd12-317">Miembro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-317">The member to inspect.</span></span></param>
        <param name="inherit"><span data-ttu-id="9dd12-318">Es <see langword="true" /> para inspeccionar los antecesores de <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-318"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9dd12-319">Recupera una colección de atributos personalizados de un tipo especificado que se aplican a un miembro concreto y, opcionalmente, inspecciona los antecesores de dicho miembro.</span><span class="sxs-lookup"><span data-stu-id="9dd12-319">Retrieves a collection of custom attributes of a specified type that are applied to a specified member, and optionally inspects the ancestors of that member.</span></span></summary>
        <returns><span data-ttu-id="9dd12-320">Colección de atributos personalizados que se aplican a <paramref name="element" /> y que coinciden con <paramref name="T" />, o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-320">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="T" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-321">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-321"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-322"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-322"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-323">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-323">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.ParameterInfo element, bool inherit) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes(Of T As Attribute) (element As ParameterInfo, inherit As Boolean) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * bool -&gt; seq&lt;'T (requires 'T :&gt; Attribute)&gt; (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="9dd12-324">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-324">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="9dd12-325">Parámetro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-325">The parameter to inspect.</span></span></param>
        <param name="inherit"><span data-ttu-id="9dd12-326">Es <see langword="true" /> para inspeccionar los antecesores de <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-326"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9dd12-327">Recupera una colección de atributos personalizados de un tipo especificado que se aplican a un parámetro concreto y, opcionalmente, inspecciona los antecesores de dicho parámetro.</span><span class="sxs-lookup"><span data-stu-id="9dd12-327">Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.</span></span></summary>
        <returns><span data-ttu-id="9dd12-328">Colección de atributos personalizados que se aplican a <paramref name="element" /> y que coinciden con <paramref name="T" />, o una colección vacía si no existe ninguno de esos atributos.</span><span class="sxs-lookup"><span data-stu-id="9dd12-328">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="T" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-329">El valor de <paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-329"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-330"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-330"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="9dd12-331">No se puede cargar un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-331">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDefined">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9dd12-332">Indica si los atributos personalizados se aplican a un elemento.</span><span class="sxs-lookup"><span data-stu-id="9dd12-332">Indicates whether custom attributes are applied to an element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDefined (element As Assembly, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsDefined(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Assembly * Type -&gt; bool" Usage="System.Reflection.CustomAttributeExtensions.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-333">Ensamblado que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-333">The assembly to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-334">Tipo del atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-334">The type of the attribute to search for.</span></span></param>
        <summary><span data-ttu-id="9dd12-335">Indica si se deben aplicar atributos personalizados de un tipo especificado a un ensamblado especificado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-335">Indicates whether custom attributes of a specified type are applied to a specified assembly.</span></span></summary>
        <returns><span data-ttu-id="9dd12-336">Es <see langword="true" /> si un atributo del tipo especificado se aplica a <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-336"><see langword="true" /> if an attribute of the specified type is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-337">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-337"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-338"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-338"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDefined (element As MemberInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.MemberInfo * Type -&gt; bool" Usage="System.Reflection.CustomAttributeExtensions.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-339">Miembro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-339">The member to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-340">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-340">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="9dd12-341">Indica si se deben aplicar atributos personalizados de un tipo especificado a un miembro especificado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-341">Indicates whether custom attributes of a specified type are applied to a specified member.</span></span></summary>
        <returns><span data-ttu-id="9dd12-342">Es <see langword="true" /> si un atributo del tipo especificado se aplica a <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-342"><see langword="true" /> if an attribute of the specified type is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-343">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-343"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-344"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-344"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-345"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-345"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDefined (element As Module, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsDefined(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Module * Type -&gt; bool" Usage="System.Reflection.CustomAttributeExtensions.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-346">Módulo que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-346">The module to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-347">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-347">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="9dd12-348">Indica si se deben aplicar atributos personalizados de un tipo especificado a un módulo especificado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-348">Indicates whether custom attributes of a specified type are applied to a specified module.</span></span></summary>
        <returns><span data-ttu-id="9dd12-349">Es <see langword="true" /> si un atributo del tipo especificado se aplica a <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-349"><see langword="true" /> if an attribute of the specified type is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-350">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-350"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-351"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-351"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDefined (element As ParameterInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.ParameterInfo * Type -&gt; bool" Usage="System.Reflection.CustomAttributeExtensions.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-352">Parámetro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-352">The parameter to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-353">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-353">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="9dd12-354">Indica si se deben aplicar atributos personalizados de un tipo especificado a un parámetro especificado.</span><span class="sxs-lookup"><span data-stu-id="9dd12-354">Indicates whether custom attributes of a specified type are applied to a specified parameter.</span></span></summary>
        <returns><span data-ttu-id="9dd12-355">Es <see langword="true" /> si un atributo del tipo especificado se aplica a <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-355"><see langword="true" /> if an attribute of the specified type is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-356">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-356"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-357"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-357"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDefined (element As MemberInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.MemberInfo * Type * bool -&gt; bool" Usage="System.Reflection.CustomAttributeExtensions.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-358">Miembro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-358">The member to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-359">Tipo del atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-359">The type of the attribute to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="9dd12-360">Es <see langword="true" /> para inspeccionar los antecesores de <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-360"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9dd12-361">Indica si los atributos personalizados de un tipo especificado se aplican a un miembro especificado y, opcionalmente, se aplican a sus antecesores.</span><span class="sxs-lookup"><span data-stu-id="9dd12-361">Indicates whether custom attributes of a specified type are applied to a specified member, and, optionally, applied to its ancestors.</span></span></summary>
        <returns><span data-ttu-id="9dd12-362">Es <see langword="true" /> si un atributo del tipo especificado se aplica a <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-362"><see langword="true" /> if an attribute of the specified type is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-363">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-363"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-364"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-364"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dd12-365"><paramref name="element" /> no es un constructor, método, propiedad, evento, tipo o campo.</span><span class="sxs-lookup"><span data-stu-id="9dd12-365"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDefined (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.ParameterInfo * Type * bool -&gt; bool" Usage="System.Reflection.CustomAttributeExtensions.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="9dd12-366">Parámetro que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-366">The parameter to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="9dd12-367">El tipo de atributo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="9dd12-367">The type of attribute to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="9dd12-368">Es <see langword="true" /> para inspeccionar los antecesores de <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-368"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9dd12-369">Indica si los atributos personalizados de un tipo especificado se aplican a un parámetro especificado y, opcionalmente, se aplican a sus antecesores.</span><span class="sxs-lookup"><span data-stu-id="9dd12-369">Indicates whether custom attributes of a specified type are applied to a specified parameter, and, optionally, applied to its ancestors.</span></span></summary>
        <returns><span data-ttu-id="9dd12-370">Es <see langword="true" /> si un atributo del tipo especificado se aplica a <paramref name="element" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-370"><see langword="true" /> if an attribute of the specified type is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9dd12-371">El valor de <paramref name="element" /> o <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-371"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9dd12-372"><paramref name="attributeType" /> no se deriva de <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="9dd12-372"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="IReflect" FullName="System.Reflection.IReflect">
  <Metadata><Meta Name="ms.openlocfilehash" Value="219ff8b132ff6093e359a54ef339f48df3ffd3de" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52202332" /></Metadata><TypeSignature Language="C#" Value="public interface IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.IReflect" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReflect" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReflect" />
  <TypeSignature Language="F#" Value="type IReflect = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("AFBF15E5-C37C-11d2-B88E-00A0C9B471B8")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a62c0-101">Interopera con la <see href="https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">interfaz IDispatch</see>.</span><span class="sxs-lookup"><span data-stu-id="a62c0-101">Interoperates with the <see href="https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch interface</see>.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a62c0-102">El <xref:System.Reflection.IReflect> interfaz se usa para interactuar con el [interfaz IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span><span class="sxs-lookup"><span data-stu-id="a62c0-102">The <xref:System.Reflection.IReflect> interface is used to interoperate with the [IDispatch interface](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span></span> <span data-ttu-id="a62c0-103"><xref:System.Reflection.IReflect> define un subconjunto de los <xref:System.Type> métodos de reflexión.</span><span class="sxs-lookup"><span data-stu-id="a62c0-103"><xref:System.Reflection.IReflect> defines a subset of the <xref:System.Type> reflection methods.</span></span> <span data-ttu-id="a62c0-104">Implementa esta interfaz permite que un tipo personalizar su comportamiento cuando el objeto tiene acceso desde COM como una `IDispatch` objeto.</span><span class="sxs-lookup"><span data-stu-id="a62c0-104">Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an `IDispatch` object.</span></span> <span data-ttu-id="a62c0-105">El <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> clase puede usarse para serializar un objeto que implementa <xref:System.Reflection.IReflect> o <xref:System.Runtime.InteropServices.Expando.IExpando> como COM `IDispatch` objeto y viceversa.</span><span class="sxs-lookup"><span data-stu-id="a62c0-105">The <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> class can be used to marshal an object that implements <xref:System.Reflection.IReflect> or <xref:System.Runtime.InteropServices.Expando.IExpando> as a COM `IDispatch` object, and vice versa.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler" />
  </Docs>
  <Members>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="iReflect.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a62c0-106">Nombre del campo para buscar.</span><span class="sxs-lookup"><span data-stu-id="a62c0-106">The name of the field to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="a62c0-107">Atributos de enlace utilizados para controlar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-107">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="a62c0-108">Devuelve el objeto <see cref="T:System.Reflection.FieldInfo" /> que se corresponde con el campo y la marca de enlace especificados.</span><span class="sxs-lookup"><span data-stu-id="a62c0-108">Returns the <see cref="T:System.Reflection.FieldInfo" /> object that corresponds to the specified field and binding flag.</span></span></summary>
        <returns><span data-ttu-id="a62c0-109">Un objeto <see cref="T:System.Reflection.FieldInfo" /> que contiene la información de campos del objeto con nombre que cumple las restricciones de búsqueda especificadas en <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="a62c0-109">A <see cref="T:System.Reflection.FieldInfo" /> object containing the field information for the named object that meets the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="a62c0-110">El objeto implementa varios campos con el mismo nombre.</span><span class="sxs-lookup"><span data-stu-id="a62c0-110">The object implements multiple fields with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="iReflect.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="a62c0-111">Atributos de enlace utilizados para controlar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-111">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="a62c0-112">Devuelve una matriz de objetos <see cref="T:System.Reflection.FieldInfo" /> que se corresponden con todos los campos de la clase actual.</span><span class="sxs-lookup"><span data-stu-id="a62c0-112">Returns an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the current class.</span></span></summary>
        <returns><span data-ttu-id="a62c0-113">Una matriz de objetos <see cref="T:System.Reflection.FieldInfo" /> que contienen toda la información de campos de este objeto de reflexión que cumple las restricciones de búsqueda especificadas en <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="a62c0-113">An array of <see cref="T:System.Reflection.FieldInfo" /> objects containing all the field information for this reflection object that meets the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a62c0-114">La coincidencia se basa en un nombre.</span><span class="sxs-lookup"><span data-stu-id="a62c0-114">The match is based upon a name.</span></span> <span data-ttu-id="a62c0-115">Cada campo debe tener un nombre único.</span><span class="sxs-lookup"><span data-stu-id="a62c0-115">Each field must have a unique name.</span></span> <span data-ttu-id="a62c0-116">El <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> marcador especifica que se incluyen métodos no públicos en la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-116">The <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> flag specifies that non-public methods are included in the search.</span></span> <span data-ttu-id="a62c0-117">El <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> marcador especifica que se incluyen los métodos públicos en la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-117">The <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> flag specifies that public methods are included in the search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a62c0-118">Nombre del miembro que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="a62c0-118">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="a62c0-119">Atributos de enlace utilizados para controlar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-119">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="a62c0-120">Recupera una matriz de objetos <see cref="T:System.Reflection.MemberInfo" /> correspondientes a todos los miembros públicos o a todos los miembros que coincidan con un nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="a62c0-120">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding to all public members or to all members that match a specified name.</span></span></summary>
        <returns><span data-ttu-id="a62c0-121">Una matriz de objetos <see cref="T:System.Reflection.MemberInfo" /> que coinciden con el parámetro <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="a62c0-121">An array of <see cref="T:System.Reflection.MemberInfo" /> objects matching the <paramref name="name" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a62c0-122">El <xref:System.Reflection.IReflect.GetMember%2A> método recupera una matriz de <xref:System.Reflection.MemberInfo> objetos utilizando el nombre y el atributo de enlace que corresponden a todos los miembros públicos o a todos los miembros que coinciden con un nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="a62c0-122">The <xref:System.Reflection.IReflect.GetMember%2A> method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name.</span></span> <span data-ttu-id="a62c0-123">El caso de que el nombre especificado es observado o se omite, tal y como especifica <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a62c0-123">The case of the specified name is observed or ignored, as specified by <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="a62c0-124">Atributos de enlace utilizados para controlar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-124">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="a62c0-125">Recupera una matriz de objetos <see cref="T:System.Reflection.MemberInfo" /> que se corresponden con todos los miembros públicos o todos los miembros de la clase actual.</span><span class="sxs-lookup"><span data-stu-id="a62c0-125">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond either to all public members or to all members of the current class.</span></span></summary>
        <returns><span data-ttu-id="a62c0-126">Una matriz de objetos <see cref="T:System.Reflection.MemberInfo" /> que contiene toda la información de miembros de este objeto de reflexión.</span><span class="sxs-lookup"><span data-stu-id="a62c0-126">An array of <see cref="T:System.Reflection.MemberInfo" /> objects containing all the member information for this reflection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a62c0-127">Este método recupera una matriz de <xref:System.Reflection.MemberInfo> objetos mediante el atributo de enlace que corresponde a todos los miembros públicos o a todos los miembros de la clase actual.</span><span class="sxs-lookup"><span data-stu-id="a62c0-127">This method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the binding attribute that corresponds either to all public members or to all members of the current class.</span></span> <span data-ttu-id="a62c0-128">Devuelve una matriz de todos los miembros definidos para este objeto.</span><span class="sxs-lookup"><span data-stu-id="a62c0-128">It returns an array of all of the members defined for this object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a62c0-129">Recupera un objeto <see cref="T:System.Reflection.MethodInfo" /> que se corresponde con un método especificado.</span><span class="sxs-lookup"><span data-stu-id="a62c0-129">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a62c0-130">Nombre del miembro que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="a62c0-130">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="a62c0-131">Atributos de enlace utilizados para controlar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-131">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="a62c0-132">Recupera un objeto <see cref="T:System.Reflection.MethodInfo" /> que se corresponde con un método especificado con unas determinadas restricciones de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-132">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method under specified search constraints.</span></span></summary>
        <returns><span data-ttu-id="a62c0-133">Objeto <see cref="T:System.Reflection.MethodInfo" /> que contiene información del método, donde las coincidencias se establecen en función del nombre del método y con las restricciones de búsqueda especificadas en <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="a62c0-133">A <see cref="T:System.Reflection.MethodInfo" /> object containing the method information, with the match being based on the method name and search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="a62c0-134">El objeto implementa varios métodos con el mismo nombre.</span><span class="sxs-lookup"><span data-stu-id="a62c0-134">The object implements multiple methods with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr, binder, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a62c0-135">Nombre del miembro que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="a62c0-135">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="a62c0-136">Atributos de enlace utilizados para controlar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-136">The binding attributes used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="a62c0-137">Un objeto que implementa <see cref="T:System.Reflection.Binder" /> y que contiene propiedades relacionadas con este método.</span><span class="sxs-lookup"><span data-stu-id="a62c0-137">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="types"><span data-ttu-id="a62c0-138">Matriz utilizada para elegir entre varios métodos sobrecargados.</span><span class="sxs-lookup"><span data-stu-id="a62c0-138">An array used to choose among overloaded methods.</span></span></param>
        <param name="modifiers"><span data-ttu-id="a62c0-139">Matriz de modificadores de parámetro que se usa para que el enlace funcione con firmas de parámetro en las que se han modificado los tipos.</span><span class="sxs-lookup"><span data-stu-id="a62c0-139">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="a62c0-140">Recupera un objeto <see cref="T:System.Reflection.MethodInfo" /> correspondiente a un método especificado, utilizando una matriz <see cref="T:System.Type" /> para elegir entre varios métodos sobrecargados.</span><span class="sxs-lookup"><span data-stu-id="a62c0-140">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method, using a <see cref="T:System.Type" /> array to choose from among overloaded methods.</span></span></summary>
        <returns><span data-ttu-id="a62c0-141">Método solicitado que coincide con todos los parámetros especificados.</span><span class="sxs-lookup"><span data-stu-id="a62c0-141">The requested method that matches all the specified parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a62c0-142">El valor devuelto es una coincidencia según el nombre del método, <xref:System.Reflection.BindingFlags> miembro de enumeración, el tipo de conversión del tipo especificado por el `binder` parámetro, la sobrecarga y la <xref:System.Reflection.ParameterInfo> que describe la firma del método.</span><span class="sxs-lookup"><span data-stu-id="a62c0-142">The return value is a match based on the method name, <xref:System.Reflection.BindingFlags> enum member, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo> that describes the signature of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="a62c0-143">El objeto implementa varios métodos con el mismo nombre.</span><span class="sxs-lookup"><span data-stu-id="a62c0-143">The object implements multiple methods with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.ParameterModifier" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="iReflect.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="a62c0-144">Atributos de enlace utilizados para controlar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-144">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="a62c0-145">Recupera una matriz de objetos <see cref="T:System.Reflection.MethodInfo" /> con todos los métodos públicos o todos los métodos de la clase actual.</span><span class="sxs-lookup"><span data-stu-id="a62c0-145">Retrieves an array of <see cref="T:System.Reflection.MethodInfo" /> objects with all public methods or all methods of the current class.</span></span></summary>
        <returns><span data-ttu-id="a62c0-146">Una matriz de objetos <see cref="T:System.Reflection.MethodInfo" /> que contiene todos los métodos definidos para este objeto de reflexión y que cumplen las restricciones de búsqueda especificadas en <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="a62c0-146">An array of <see cref="T:System.Reflection.MethodInfo" /> objects containing all the methods defined for this reflection object that meet the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a62c0-147">El atributo no públicos de `bindingAttr` se indica únicamente si se devuelven los métodos públicos.</span><span class="sxs-lookup"><span data-stu-id="a62c0-147">The non-public attribute of `bindingAttr` is indicated only if public methods are returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="iReflect.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="a62c0-148">Atributo de enlace utilizado para controlar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-148">The binding attribute used to control the search.</span></span></param>
        <summary><span data-ttu-id="a62c0-149">Recupera una matriz de objetos <see cref="T:System.Reflection.PropertyInfo" /> correspondientes a todas las propiedades públicas o a todas las propiedades de la clase actual.</span><span class="sxs-lookup"><span data-stu-id="a62c0-149">Retrieves an array of <see cref="T:System.Reflection.PropertyInfo" /> objects corresponding to all public properties or to all properties of the current class.</span></span></summary>
        <returns><span data-ttu-id="a62c0-150">Una matriz de objetos <see cref="T:System.Reflection.PropertyInfo" /> por cada una de las propiedades definidas en el objeto de reflexión.</span><span class="sxs-lookup"><span data-stu-id="a62c0-150">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects for all the properties defined on the reflection object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a62c0-151">Recupera un objeto <see cref="T:System.Reflection.PropertyInfo" /> correspondiente a una propiedad especificada.</span><span class="sxs-lookup"><span data-stu-id="a62c0-151">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a62c0-152">Nombre de la propiedad que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="a62c0-152">The name of the property to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="a62c0-153">Atributos de enlace utilizados para controlar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-153">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="a62c0-154">Recupera un objeto <see cref="T:System.Reflection.PropertyInfo" /> correspondiente a una propiedad especificada con unas determinadas restricciones de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-154">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property under specified search constraints.</span></span></summary>
        <returns><span data-ttu-id="a62c0-155">Un objeto <see cref="T:System.Reflection.PropertyInfo" /> de la propiedad encontrada que cumple las restricciones de búsqueda especificadas en <paramref name="bindingAttr" />, o <see langword="null" /> si no se encontró la propiedad.</span><span class="sxs-lookup"><span data-stu-id="a62c0-155">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property that meets the search constraints specified in <paramref name="bindingAttr" />, or <see langword="null" /> if the property was not located.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="a62c0-156">El objeto implementa varios campos con el mismo nombre.</span><span class="sxs-lookup"><span data-stu-id="a62c0-156">The object implements multiple fields with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr, binder, returnType, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a62c0-157">Nombre del miembro que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="a62c0-157">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="a62c0-158">Atributo de enlace utilizado para controlar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-158">The binding attribute used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="a62c0-159">Un objeto que implementa <see cref="T:System.Reflection.Binder" /> y que contiene propiedades relacionadas con este método.</span><span class="sxs-lookup"><span data-stu-id="a62c0-159">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="returnType"><span data-ttu-id="a62c0-160">Tipo de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="a62c0-160">The type of the property.</span></span></param>
        <param name="types"><span data-ttu-id="a62c0-161">Matriz utilizada para elegir entre varios métodos sobrecargados con el mismo nombre.</span><span class="sxs-lookup"><span data-stu-id="a62c0-161">An array used to choose among overloaded methods with the same name.</span></span></param>
        <param name="modifiers"><span data-ttu-id="a62c0-162">Matriz utilizada para elegir los modificadores de parámetro.</span><span class="sxs-lookup"><span data-stu-id="a62c0-162">An array used to choose the parameter modifiers.</span></span></param>
        <summary><span data-ttu-id="a62c0-163">Recupera un objeto <see cref="T:System.Reflection.PropertyInfo" /> que se corresponde con una propiedad especificada con unas determinadas restricciones de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-163">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object that corresponds to a specified property with specified search constraints.</span></span></summary>
        <returns><span data-ttu-id="a62c0-164">Un objeto <see cref="T:System.Reflection.PropertyInfo" /> de la propiedad encontrada si se encontró una propiedad con el nombre especificado en este objeto de reflexión; <see langword="null" /> si no se encontró la propiedad.</span><span class="sxs-lookup"><span data-stu-id="a62c0-164">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property, if a property with the specified name was located in this reflection object, or <see langword="null" /> if the property was not located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a62c0-165">Este método recupera un <xref:System.Reflection.PropertyInfo> objeto correspondiente a una propiedad especificada con unas determinadas restricciones de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a62c0-165">This method retrieves a <xref:System.Reflection.PropertyInfo> object corresponding to a specified property under specified search constraints.</span></span> <span data-ttu-id="a62c0-166">Una matriz de tipo se utiliza para elegir entre varios métodos sobrecargados.</span><span class="sxs-lookup"><span data-stu-id="a62c0-166">A type array is used to choose from among overloaded methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.ParameterModifier" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj" Usage="iReflect.InvokeMember (name, invokeAttr, binder, target, args, modifiers, culture, namedParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a62c0-167">Nombre del miembro que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="a62c0-167">The name of the member to find.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="a62c0-168">Uno de los atributos de invocación <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="a62c0-168">One of the <see cref="T:System.Reflection.BindingFlags" /> invocation attributes.</span></span> <span data-ttu-id="a62c0-169">El parámetro <paramref name="invokeAttr" /> puede ser un constructor, método, propiedad o campo.</span><span class="sxs-lookup"><span data-stu-id="a62c0-169">The <paramref name="invokeAttr" /> parameter may be a constructor, method, property, or field.</span></span> <span data-ttu-id="a62c0-170">Debe especificarse un atributo de invocación apropiado.</span><span class="sxs-lookup"><span data-stu-id="a62c0-170">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="a62c0-171">Para invocar el miembro predeterminado de una clase, pase la cadena vacía ("") como nombre del miembro.</span><span class="sxs-lookup"><span data-stu-id="a62c0-171">Invoke the default member of a class by passing the empty string ("") as the name of the member.</span></span></param>
        <param name="binder"><span data-ttu-id="a62c0-172">Una de las marcas de bits <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="a62c0-172">One of the <see cref="T:System.Reflection.BindingFlags" /> bit flags.</span></span> <span data-ttu-id="a62c0-173">Implementa <see cref="T:System.Reflection.Binder" />, que contiene propiedades relacionadas con este método.</span><span class="sxs-lookup"><span data-stu-id="a62c0-173">Implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="target"><span data-ttu-id="a62c0-174">Objeto donde debe invocarse al miembro especificado.</span><span class="sxs-lookup"><span data-stu-id="a62c0-174">The object on which to invoke the specified member.</span></span> <span data-ttu-id="a62c0-175">Este parámetro se omite para los miembros estáticos.</span><span class="sxs-lookup"><span data-stu-id="a62c0-175">This parameter is ignored for static members.</span></span></param>
        <param name="args"><span data-ttu-id="a62c0-176">Matriz de objetos que contiene el número, orden y tipo de los parámetros del miembro que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="a62c0-176">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span></span> <span data-ttu-id="a62c0-177">Si no hay parámetros, es una matriz vacía.</span><span class="sxs-lookup"><span data-stu-id="a62c0-177">This is an empty array if there are no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="a62c0-178">Matriz de objetos <see cref="T:System.Reflection.ParameterModifier" />.</span><span class="sxs-lookup"><span data-stu-id="a62c0-178">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects.</span></span> <span data-ttu-id="a62c0-179">Esta matriz tiene la misma longitud que el parámetro <paramref name="args" />, que representa los atributos de argumento del miembro invocado en los metadatos.</span><span class="sxs-lookup"><span data-stu-id="a62c0-179">This array has the same length as the <paramref name="args" /> parameter, representing the invoked member's argument attributes in the metadata.</span></span> <span data-ttu-id="a62c0-180">Un parámetro puede tener los siguientes atributos: <see langword="pdIn" />, <see langword="pdOut" />, <see langword="pdRetval" />, <see langword="pdOptional" /> y <see langword="pdHasDefault" />.</span><span class="sxs-lookup"><span data-stu-id="a62c0-180">A parameter can have the following attributes: <see langword="pdIn" />, <see langword="pdOut" />, <see langword="pdRetval" />, <see langword="pdOptional" />, and <see langword="pdHasDefault" />.</span></span> <span data-ttu-id="a62c0-181">Representan a [In], [Out], [retval], [optional] y a un parámetro predeterminado, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="a62c0-181">These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</span></span> <span data-ttu-id="a62c0-182">Diversos servicios de interoperabilidad utilizan estos atributos.</span><span class="sxs-lookup"><span data-stu-id="a62c0-182">These attributes are used by various interoperability services.</span></span></param>
        <param name="culture"><span data-ttu-id="a62c0-183">Instancia de <see cref="T:System.Globalization.CultureInfo" /> usada para regir la conversión de tipos.</span><span class="sxs-lookup"><span data-stu-id="a62c0-183">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="a62c0-184">Por ejemplo, <paramref name="culture" /> convierte un valor <see langword="String" /> que representa 1000 a un valor <see langword="Double" />, ya que 1000 se representa de distinta manera en diferentes referencias culturales.</span><span class="sxs-lookup"><span data-stu-id="a62c0-184">For example, <paramref name="culture" /> converts a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, since 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="a62c0-185">Si este parámetro es <see langword="null" />, se utiliza <see cref="T:System.Globalization.CultureInfo" /> para el subproceso actual.</span><span class="sxs-lookup"><span data-stu-id="a62c0-185">If this parameter is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="namedParameters"><span data-ttu-id="a62c0-186">Matriz <see langword="String" /> de parámetros.</span><span class="sxs-lookup"><span data-stu-id="a62c0-186">A <see langword="String" /> array of parameters.</span></span></param>
        <summary><span data-ttu-id="a62c0-187">Invoca el miembro especificado.</span><span class="sxs-lookup"><span data-stu-id="a62c0-187">Invokes a specified member.</span></span></summary>
        <returns><span data-ttu-id="a62c0-188">El miembro especificado.</span><span class="sxs-lookup"><span data-stu-id="a62c0-188">The specified member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a62c0-189">El método que se va a invocar debe ser accesible y proporcionar la coincidencia más específica con la lista de argumentos dada, bajo las restricciones del enlazador y los atributos de invocación indicados.</span><span class="sxs-lookup"><span data-stu-id="a62c0-189">The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</span></span>  
  
 <span data-ttu-id="a62c0-190">Si el número de parámetros en la declaración del método es igual al número de argumentos de la lista de argumentos especificados, y se puede convertir el tipo de cada argumento por el enlazador para el tipo del parámetro, se invoca un método.</span><span class="sxs-lookup"><span data-stu-id="a62c0-190">A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a62c0-191">La matriz de modificadores de parámetro se pasa a la <xref:System.Reflection.IReflect.InvokeMember%2A> el método debe contener un único modificador de parámetro.</span><span class="sxs-lookup"><span data-stu-id="a62c0-191">The array of parameter modifiers passed to the <xref:System.Reflection.IReflect.InvokeMember%2A> method must contain a single parameter modifier.</span></span> <span data-ttu-id="a62c0-192">Solo el primer modificador de parámetro se considera al determinar qué argumento debe pasarse por referencia cuando se expone a COM.</span><span class="sxs-lookup"><span data-stu-id="a62c0-192">Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.</span></span>  
  
 <span data-ttu-id="a62c0-193">El enlazador busca todos los métodos de coincidencia, según el tipo de enlace solicitado (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>, <xref:System.Reflection.IReflect.GetProperties%2A>, y así sucesivamente).</span><span class="sxs-lookup"><span data-stu-id="a62c0-193">The binder finds all matching methods, in accordance with the type of binding requested (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>, <xref:System.Reflection.IReflect.GetProperties%2A>, and so on).</span></span> <span data-ttu-id="a62c0-194">El conjunto de métodos se filtra por el nombre, número de argumentos y un conjunto de modificadores de búsqueda definidos en el enlazador.</span><span class="sxs-lookup"><span data-stu-id="a62c0-194">The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</span></span> <span data-ttu-id="a62c0-195">Después de selecciona el método, se invoca y se comprueba la accesibilidad en ese momento.</span><span class="sxs-lookup"><span data-stu-id="a62c0-195">After the method is selected, it is invoked, and accessibility is checked at that point.</span></span> <span data-ttu-id="a62c0-196">La búsqueda puede controlar qué conjunto de métodos que se busca basándose en el atributo de accesibilidad asociado con el método.</span><span class="sxs-lookup"><span data-stu-id="a62c0-196">The search may control which set of methods is searched based upon the accessibility attribute associated with the method.</span></span> <span data-ttu-id="a62c0-197"><xref:System.Reflection.Binder.BindToMethod%2A> selecciona el método que se debe invocar.</span><span class="sxs-lookup"><span data-stu-id="a62c0-197"><xref:System.Reflection.Binder.BindToMethod%2A> selects the method to be invoked.</span></span> <span data-ttu-id="a62c0-198">El enlazador predeterminado, selecciona a la coincidencia más específica.</span><span class="sxs-lookup"><span data-stu-id="a62c0-198">The default binder selects the most specific match.</span></span>  
  
 <span data-ttu-id="a62c0-199">Se omiten las restricciones de acceso para el código de plena confianza.</span><span class="sxs-lookup"><span data-stu-id="a62c0-199">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="a62c0-200">Es decir, propiedades, métodos, campos y constructores privados pueden tener acceso a y se invocan mediante reflexión siempre que el código es de plena confianza.</span><span class="sxs-lookup"><span data-stu-id="a62c0-200">That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a62c0-201">En el ejemplo siguiente se obtiene el valor de la <xref:System.DateTime.Now%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a62c0-201">The following example obtains the value of the <xref:System.DateTime.Now%2A> property.</span></span>  
  
 [!code-cpp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CPP/source.cpp#1)]
 [!code-csharp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CS/source.cs#1)]
 [!code-vb[Classic IReflect.InvokeMember Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a62c0-202">Se especifica más de un argumento para un campo <see langword="set" />.</span><span class="sxs-lookup"><span data-stu-id="a62c0-202">More than one argument is specified for a field <see langword="set" />.</span></span></exception>
        <exception cref="T:System.MissingFieldException"><span data-ttu-id="a62c0-203">No se encuentran el campo o la propiedad.</span><span class="sxs-lookup"><span data-stu-id="a62c0-203">The field or property cannot be found.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="a62c0-204">No se encuentra el método.</span><span class="sxs-lookup"><span data-stu-id="a62c0-204">The method cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a62c0-205">Se invoca un miembro privado sin el objeto <see cref="T:System.Security.Permissions.ReflectionPermission" /> necesario.</span><span class="sxs-lookup"><span data-stu-id="a62c0-205">A private member is invoked without the necessary <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span></span></exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSystemType : Type" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a62c0-206">Obtiene el tipo subyacente que representa el objeto <see cref="T:System.Reflection.IReflect" />.</span><span class="sxs-lookup"><span data-stu-id="a62c0-206">Gets the underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span></span></summary>
        <value><span data-ttu-id="a62c0-207">Tipo subyacente que representa el objeto <see cref="T:System.Reflection.IReflect" />.</span><span class="sxs-lookup"><span data-stu-id="a62c0-207">The underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>
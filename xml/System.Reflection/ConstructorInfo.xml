<Type Name="ConstructorInfo" FullName="System.Reflection.ConstructorInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a430cc4f4251aa5d6ea495b41fafa48358e6b777" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53231955" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConstructorInfo : System.Reflection.MethodBase, System.Runtime.InteropServices._ConstructorInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ConstructorInfo extends System.Reflection.MethodBase implements class System.Runtime.InteropServices._ConstructorInfo" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ConstructorInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConstructorInfo&#xA;Inherits MethodBase&#xA;Implements _ConstructorInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConstructorInfo abstract : System::Reflection::MethodBase, System::Runtime::InteropServices::_ConstructorInfo" />
  <TypeSignature Language="F#" Value="type ConstructorInfo = class&#xA;    inherit MethodBase&#xA;    interface _ConstructorInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.MethodBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._ConstructorInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ConstructorInfo))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f0e1e-101">Detecta los atributos de un constructor de clase y proporciona acceso a los metadatos del constructor.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-101">Discovers the attributes of a class constructor and provides access to constructor metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e1e-102">`ConstructorInfo` se usa para detectar los atributos de un constructor, así como para invocar un constructor.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-102">`ConstructorInfo` is used to discover the attributes of a constructor as well as to invoke a constructor.</span></span> <span data-ttu-id="f0e1e-103">Los objetos se crean mediante una llamada a <xref:System.Reflection.ConstructorInfo.Invoke%2A> en un `ConstructorInfo` devuelto por la <xref:System.Type.GetConstructors%2A> o <xref:System.Type.GetConstructor%2A> método de un <xref:System.Type> objeto.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-103">Objects are created by calling <xref:System.Reflection.ConstructorInfo.Invoke%2A> on a `ConstructorInfo` returned by either the <xref:System.Type.GetConstructors%2A> or <xref:System.Type.GetConstructor%2A> method of a <xref:System.Type> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0e1e-104"><xref:System.Reflection.ConstructorInfo> hereda de <xref:System.Reflection.MethodBase> varios miembros, como <xref:System.Reflection.MethodBase.IsGenericMethod%2A>, que puede utilizarse para examinar los métodos genéricos.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-104"><xref:System.Reflection.ConstructorInfo> inherits from <xref:System.Reflection.MethodBase> several members, such as <xref:System.Reflection.MethodBase.IsGenericMethod%2A>, that can be used to examine generic methods.</span></span> <span data-ttu-id="f0e1e-105">En .NET Framework versión 2.0 constructores no pueden ser genéricos, por lo que estos miembros devuelven `false` o `null`.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-105">In the .NET Framework version 2.0 constructors cannot be generic, so these members return `false` or `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e1e-106">En el ejemplo siguiente se usa `ConstructorInfo` con <xref:System.Type.GetConstructor%2A> y <xref:System.Reflection.BindingFlags> para buscar los constructores que coinciden con los criterios de búsqueda especificados.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-106">The following example uses `ConstructorInfo` with <xref:System.Type.GetConstructor%2A> and <xref:System.Reflection.BindingFlags> to find the constructors that match the specified search criteria.</span></span>  
  
 [!code-cpp[type_getconstructor3#1](~/samples/snippets/cpp/VS_Snippets_CLR/Type_GetConstructor3/CPP/type_getconstructor3.cpp#1)]
 [!code-csharp[type_getconstructor3#1](~/samples/snippets/csharp/VS_Snippets_CLR/Type_GetConstructor3/CS/type_getconstructor3.cs#1)]
 [!code-vb[type_getconstructor3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Type_GetConstructor3/VB/type_getconstructor3.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="f0e1e-107">para plena confianza para los herederos.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-107">for full trust for inheritors.</span></span> <span data-ttu-id="f0e1e-108">No se puede heredar esta clase por código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-108">This class cannot be inherited by partially trusted code.</span></span></permission>
    <threadsafe><span data-ttu-id="f0e1e-109">Este tipo es seguro para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-109">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="f0e1e-110">Al heredar de <see langword="ConstructorInfo" />, debe invalidar el miembro sobrecargado siguiente: <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-110">When you inherit from <see langword="ConstructorInfo" />, you must override the following member overload: <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConstructorInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConstructorInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0e1e-111">Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.ConstructorInfo" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-111">Initializes a new instance of the <see cref="T:System.Reflection.ConstructorInfo" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="f0e1e-112">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-112">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="f0e1e-113">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-113">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ConstructorName">
      <MemberSignature Language="C#" Value="public static readonly string ConstructorName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ConstructorName" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ConstructorInfo.ConstructorName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConstructorName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ConstructorName;" />
      <MemberSignature Language="F#" Value=" staticval mutable ConstructorName : string" Usage="System.Reflection.ConstructorInfo.ConstructorName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e1e-114">Representa el nombre del método constructor de clase tal y como está almacenado en los metadatos.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-114">Represents the name of the class constructor method as it is stored in metadata.</span></span> <span data-ttu-id="f0e1e-115">Este nombre es siempre ".ctor".</span><span class="sxs-lookup"><span data-stu-id="f0e1e-115">This name is always ".ctor".</span></span> <span data-ttu-id="f0e1e-116">Este campo es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-116">This field is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="constructorInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="f0e1e-117">Objeto que se va a comparar con esta instancia o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-117">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="f0e1e-118">Devuelve un valor que indica si esta instancia es igual que un objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-118">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="f0e1e-119">Es <see langword="true" /> si <paramref name="obj" /> es igual al tipo y valor de esta instancia; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-119"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="constructorInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0e1e-120">Devuelve el código hash de esta instancia.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-120">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="f0e1e-121">Código hash de un entero de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-121">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="constructorInfo.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e1e-122">Invoca al constructor que refleja esta instancia.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-122">Invokes the constructor reflected by this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.Invoke(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="override this.Invoke : obj[] -&gt; obj" Usage="constructorInfo.Invoke parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="f0e1e-123">Matriz de valores que coincide con el número, orden y tipo (bajo las restricciones del enlazador predeterminado) de los parámetros de este constructor.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-123">An array of values that matches the number, order and type (under the constraints of the default binder) of the parameters for this constructor.</span></span> <span data-ttu-id="f0e1e-124">Si este constructor no adopta ningún parámetro, debe utilizarse bien una matriz con cero elementos o bien <see langword="null" />, al igual que en Object[] parameters = new Object[0].</span><span class="sxs-lookup"><span data-stu-id="f0e1e-124">If this constructor takes no parameters, then use either an array with zero elements or <see langword="null" />, as in Object[] parameters = new Object[0].</span></span> <span data-ttu-id="f0e1e-125">Cualquier objeto de esta matriz que no se inicialice explícitamente con un valor contendrá el valor predeterminado de este tipo de objeto.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-125">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="f0e1e-126">Para los elementos de tipo de referencia, este valor es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-126">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="f0e1e-127">Para los elementos de tipo de valor, este valor es 0, 0.0 o <see langword="false" />, en función del tipo de elemento específico.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-127">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <summary><span data-ttu-id="f0e1e-128">Invoca al constructor reflejado por la instancia que tiene los parámetros especificados, proporcionando valores predeterminados para los parámetros que no se usan habitualmente.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-128">Invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.</span></span></summary>
        <returns><span data-ttu-id="f0e1e-129">Instancia de la clase asociada al constructor.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-129">An instance of the class associated with the constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e1e-130">El número, tipo y orden de los elementos en el `parameters` matriz debe ser idéntica al número, tipo y orden de los parámetros del constructor reflejado por esta instancia.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-130">The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.</span></span> <span data-ttu-id="f0e1e-131">Antes de llamar al constructor, `Invoke` garantiza que el llamador tiene permiso de acceso y comprueba que los parámetros son válidos.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-131">Before calling the constructor, `Invoke` ensures that the caller has access permission and verifies that the parameters are valid.</span></span>  
  
 <span data-ttu-id="f0e1e-132">Se omiten las restricciones de acceso para el código de plena confianza.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-132">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="f0e1e-133">Es decir, las propiedades, métodos, campos y constructores privados se pueden tener acceso e invocan mediante reflexión, siempre que el código es de plena confianza.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-133">That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0e1e-134">Para crear una instancia de un tipo de valor que no tiene ningún constructor de instancia, utilice el <xref:System.Activator.CreateInstance%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-134">To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.</span></span>  
  
 <span data-ttu-id="f0e1e-135">Este método es un método de conveniencia para la siguiente versión sobrecargada con los valores predeterminados.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-135">This method is a convenience method for the following overloaded version, using default values.</span></span> <span data-ttu-id="f0e1e-136">Este método no se puede invalidar.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-136">This method cannot be overridden.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0e1e-137">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], este método puede utilizarse para tener acceso a miembros no públicos, si el llamador tiene concedidos <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> marca y si el conjunto de permisos de los miembros no públicos se restringe al llamador conceder el conjunto o un subconjunto en ella.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-137">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="f0e1e-138">(Consulte [consideraciones de seguridad para la reflexión](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="f0e1e-138">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="f0e1e-139">Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-139">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="f0e1e-140">La clase es abstracta.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-140">The class is abstract.</span></span>  
  
<span data-ttu-id="f0e1e-141">O bien</span><span class="sxs-lookup"><span data-stu-id="f0e1e-141">-or-</span></span> 
<span data-ttu-id="f0e1e-142">El constructor es un inicializador de clase.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-142">The constructor is a class initializer.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="f0e1e-143">En <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET para aplicaciones de la Tienda Windows</see> o la <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Biblioteca de clases portable</see>, capture en su lugar la excepción de clase base, <see cref="T:System.MemberAccessException" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-143">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="f0e1e-144">El constructor es privado o protegido y al autor de la llamada le falta <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-144">The constructor is private or protected, and the caller lacks <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0e1e-145">La matriz <paramref name="parameters" /> no contiene valores que coincidan con los tipos aceptados por este constructor.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-145">The <paramref name="parameters" /> array does not contain values that match the types accepted by this constructor.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="f0e1e-146">El constructor invocado produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-146">The invoked constructor throws an exception.</span></span></exception>
        <exception cref="T:System.Reflection.TargetParameterCountException"><span data-ttu-id="f0e1e-147">Se pasó un número de parámetros incorrecto.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-147">An incorrect number of parameters was passed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f0e1e-148">No se admite la creación de los tipos <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" /> y <see cref="T:System.RuntimeArgumentHandle" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-148">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, and <see cref="T:System.RuntimeArgumentHandle" /> types is not supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f0e1e-149">El autor de la llamada no tiene los permisos necesarios para acceder al código.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-149">The caller does not have the necessary code access permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="f0e1e-150">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-150">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="f0e1e-151">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-151">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public abstract object Invoke (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Invoke(System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="override this.Invoke : System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="constructorInfo.Invoke (invokeAttr, binder, parameters, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="invokeAttr"><span data-ttu-id="f0e1e-152">Uno de los valores <see langword="BindingFlags" /> que especifica el tipo de enlace.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-152">One of the <see langword="BindingFlags" /> values that specifies the type of binding.</span></span></param>
        <param name="binder"><span data-ttu-id="f0e1e-153"><see langword="Binder" /> que define un conjunto de propiedades y permite el enlace, la conversión de tipos de argumentos y la invocación de miembros mediante la reflexión.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-153">A <see langword="Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span></span> <span data-ttu-id="f0e1e-154">Si el valor de <paramref name="binder" /> es <see langword="null" />, se usa <see langword="Binder.DefaultBinding" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-154">If <paramref name="binder" /> is <see langword="null" />, then <see langword="Binder.DefaultBinding" /> is used.</span></span></param>
        <param name="parameters"><span data-ttu-id="f0e1e-155">Matriz de tipo <see langword="Object" /> que se utiliza para encontrar coincidencias con el número, tipo y orden de los parámetros de este constructor, bajo las restricciones del enlazador (<paramref name="binder" />).</span><span class="sxs-lookup"><span data-stu-id="f0e1e-155">An array of type <see langword="Object" /> used to match the number, order and type of the parameters for this constructor, under the constraints of <paramref name="binder" />.</span></span> <span data-ttu-id="f0e1e-156">Si este constructor no requiere parámetros, debe utilizarse una matriz con cero elementos, al igual que en Object[] parameters = new Object[0].</span><span class="sxs-lookup"><span data-stu-id="f0e1e-156">If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0].</span></span> <span data-ttu-id="f0e1e-157">Cualquier objeto de esta matriz que no se inicialice explícitamente con un valor contendrá el valor predeterminado de este tipo de objeto.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-157">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="f0e1e-158">Para los elementos de tipo de referencia, este valor es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-158">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="f0e1e-159">Para los elementos de tipo de valor, este valor es 0, 0.0 o <see langword="false" />, en función del tipo de elemento específico.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-159">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <param name="culture"><span data-ttu-id="f0e1e-160"><see cref="T:System.Globalization.CultureInfo" /> que se usa para regir la conversión de tipos.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-160">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="f0e1e-161">Si es <see langword="null" />, se utiliza <see cref="T:System.Globalization.CultureInfo" /> para el subproceso actual.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-161">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="f0e1e-162">Al implementarse en una clase derivada, invoca al constructor reflejado por esta instancia de <see langword="ConstructorInfo" /> con los argumentos especificados, bajo las restricciones del enlazador (<see langword="Binder" />) especificado.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-162">When implemented in a derived class, invokes the constructor reflected by this <see langword="ConstructorInfo" /> with the specified arguments, under the constraints of the specified <see langword="Binder" />.</span></span></summary>
        <returns><span data-ttu-id="f0e1e-163">Instancia de la clase asociada al constructor.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-163">An instance of the class associated with the constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e1e-164">El número, tipo y orden de los elementos en el `parameters` matriz debe ser idéntica al número, tipo y orden de los parámetros del constructor reflejado por esta instancia.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-164">The number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.</span></span>  
  
 <span data-ttu-id="f0e1e-165">Antes de llamar al constructor, `Invoke` garantiza que el llamador tiene permiso de acceso y que los parámetros tienen el número correcto, orden y tipo.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-165">Before calling the constructor, `Invoke` ensures that the caller has access permission and that the parameters are of the correct number, order and type.</span></span>  
  
 <span data-ttu-id="f0e1e-166">Se omiten las restricciones de acceso para el código de plena confianza.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-166">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="f0e1e-167">Es decir, las propiedades, métodos, campos y constructores privados se pueden tener acceso e invocan mediante reflexión, siempre que el código es de plena confianza.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-167">That is, private constructors, methods, fields, and properties can be accessed and invoked using reflection whenever the code is fully trusted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0e1e-168">Para crear una instancia de un tipo de valor que no tiene ningún constructor de instancia, utilice el <xref:System.Activator.CreateInstance%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-168">To create an instance of a value type that has no instance constructors, use the <xref:System.Activator.CreateInstance%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0e1e-169">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], este método puede utilizarse para tener acceso a miembros no públicos, si el llamador tiene concedidos <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> marca y si el conjunto de permisos de los miembros no públicos se restringe al llamador conceder el conjunto o un subconjunto en ella.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-169">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="f0e1e-170">(Consulte [consideraciones de seguridad para la reflexión](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="f0e1e-170">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="f0e1e-171">Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-171">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0e1e-172">La matriz <paramref name="parameters" /> no contiene valores que coincidan con los tipos aceptados por este constructor, de acuerdo con las restricciones del <paramref name="binder" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-172">The <paramref name="parameters" /> array does not contain values that match the types accepted by this constructor, under the constraints of the <paramref name="binder" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="f0e1e-173">El constructor invocado produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-173">The invoked constructor throws an exception.</span></span></exception>
        <exception cref="T:System.Reflection.TargetParameterCountException"><span data-ttu-id="f0e1e-174">Se pasó un número de parámetros incorrecto.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-174">An incorrect number of parameters was passed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f0e1e-175">No se admite la creación de los tipos <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" /> y <see cref="T:System.RuntimeArgumentHandle" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-175">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, and <see cref="T:System.RuntimeArgumentHandle" /> types is not supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f0e1e-176">El llamador no tiene los permisos de acceso a código necesarios.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-176">The caller does not have the necessary code access permissions.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="f0e1e-177">La clase es abstracta.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-177">The class is abstract.</span></span>  
  
<span data-ttu-id="f0e1e-178">O bien</span><span class="sxs-lookup"><span data-stu-id="f0e1e-178">-or-</span></span> 
<span data-ttu-id="f0e1e-179">El constructor es un inicializador de clase.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-179">The constructor is a class initializer.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="f0e1e-180">El constructor es privado o protegido y al autor de la llamada le falta <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-180">The constructor is private or protected, and the caller lacks <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="f0e1e-181">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-181">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="f0e1e-182">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-182">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ConstructorInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Reflection.ConstructorInfo.MemberType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._ConstructorInfo.MemberType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e1e-183">Obtiene un valor de <see cref="T:System.Reflection.MemberTypes" /> que indica que este miembro es un constructor.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-183">Gets a <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a constructor.</span></span></summary>
        <value><span data-ttu-id="f0e1e-184">Valor de <see cref="T:System.Reflection.MemberTypes" /> que indica que este miembro es un constructor.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-184">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a constructor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e1e-185">Esta propiedad invalida <xref:System.Reflection.MemberInfo.MemberType%2A>.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-185">This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>.</span></span> <span data-ttu-id="f0e1e-186">Por lo tanto, cuando se examina un conjunto de <xref:System.Reflection.MemberInfo> objetos: por ejemplo, la matriz devuelta por <xref:System.Type.GetMembers%2A> : la <xref:System.Reflection.MemberInfo.MemberType%2A> propiedad devuelve <xref:System.Reflection.MemberTypes.Constructor> sólo cuando un miembro determinado es un constructor.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-186">Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects - for example, the array returned by <xref:System.Type.GetMembers%2A> - the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Constructor> only when a given member is a constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0e1e-187">En el ejemplo siguiente se usa el <xref:System.Reflection.ConstructorInfo.MemberType%2A> propiedad para identificar un <xref:System.Reflection.MemberInfo> objeto como un constructor.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-187">The following example uses the <xref:System.Reflection.ConstructorInfo.MemberType%2A> property to identify a <xref:System.Reflection.MemberInfo> object as a constructor.</span></span>  
  
 [!code-cpp[Classic MemberInfo.MemberType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MemberInfo.MemberType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/CS/source.cs#1)]
 [!code-vb[Classic MemberInfo.MemberType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.MemberTypes" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.ConstructorInfo left, System.Reflection.ConstructorInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.ConstructorInfo left, class System.Reflection.ConstructorInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ConstructorInfo, right As ConstructorInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::ConstructorInfo ^ left, System::Reflection::ConstructorInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.ConstructorInfo * System.Reflection.ConstructorInfo -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="right" Type="System.Reflection.ConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f0e1e-188">Primer objeto <see cref="T:System.Reflection.ConstructorInfo" /> que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-188">The first <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="f0e1e-189">Segundo objeto <see cref="T:System.Reflection.ConstructorInfo" /> que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-189">The second <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span></span></param>
        <summary><span data-ttu-id="f0e1e-190">Indica si dos objetos <see cref="T:System.Reflection.ConstructorInfo" /> son iguales.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-190">Indicates whether two <see cref="T:System.Reflection.ConstructorInfo" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="f0e1e-191">Es <see langword="true" /> si <paramref name="left" /> es igual a <paramref name="right" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-191"><see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.ConstructorInfo left, System.Reflection.ConstructorInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.ConstructorInfo left, class System.Reflection.ConstructorInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ConstructorInfo, right As ConstructorInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::ConstructorInfo ^ left, System::Reflection::ConstructorInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.ConstructorInfo * System.Reflection.ConstructorInfo -&gt; bool" Usage="System.Reflection.ConstructorInfo.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="right" Type="System.Reflection.ConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f0e1e-192">Primer objeto <see cref="T:System.Reflection.ConstructorInfo" /> que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-192">The first <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="f0e1e-193">Segundo objeto <see cref="T:System.Reflection.ConstructorInfo" /> que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-193">The second <see cref="T:System.Reflection.ConstructorInfo" /> to compare.</span></span></param>
        <summary><span data-ttu-id="f0e1e-194">Indica si dos objetos <see cref="T:System.Reflection.ConstructorInfo" /> no son iguales.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-194">Indicates whether two <see cref="T:System.Reflection.ConstructorInfo" /> objects are not equal.</span></span></summary>
        <returns><span data-ttu-id="f0e1e-195">Es <see langword="true" /> si <paramref name="left" /> no es igual a <paramref name="right" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-195"><see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _ConstructorInfo.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_ConstructorInfo::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="f0e1e-196">Reservado para un uso futuro.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-196">Reserved for future use.</span></span> <span data-ttu-id="f0e1e-197">Debe ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-197">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="f0e1e-198">Matriz que se pasa con los nombres que se van a asignar.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-198">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="f0e1e-199">Número de nombres que se van a asignar.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-199">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="f0e1e-200">Contexto de configuración regional en el que se van a interpretar los nombres.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-200">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="f0e1e-201">Matriz asignada por el llamador que recibe los identificadores que corresponden a los nombres.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-201">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="f0e1e-202">Asigna un conjunto de nombres a un conjunto correspondiente de identificadores de envío.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-202">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e1e-203">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-203">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="f0e1e-204">Para obtener más información sobre `IDispatch::GetIDsOfNames`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-204">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="f0e1e-205">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-205">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetType">
      <MemberSignature Language="C#" Value="Type _ConstructorInfo.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._ConstructorInfo.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _ConstructorInfo.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._ConstructorInfo.GetType() = System::Runtime::InteropServices::_ConstructorInfo::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0e1e-206">Obtiene un objeto <see cref="T:System.Type" /> que representa el tipo de <see cref="T:System.Reflection.ConstructorInfo" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-206">Gets a <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.ConstructorInfo" /> type.</span></span></summary>
        <returns><span data-ttu-id="f0e1e-207">Objeto <see cref="T:System.Type" /> que representa el tipo <see cref="T:System.Reflection.ConstructorInfo" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-207">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.ConstructorInfo" /> type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _ConstructorInfo.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_ConstructorInfo::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="f0e1e-208">Información de tipos que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-208">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="f0e1e-209">Identificador de la configuración regional de la información de tipo.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-209">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="f0e1e-210">Recibe un puntero al objeto de información de tipo solicitado.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-210">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="f0e1e-211">Recupera la información de tipo de un objeto, que se puede usar después para obtener la información de tipo de una interfaz.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-211">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e1e-212">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-212">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="f0e1e-213">Para obtener más información sobre `IDispatch::GetTypeInfo`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-213">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="f0e1e-214">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-214">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _ConstructorInfo.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_ConstructorInfo::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="f0e1e-215">Señala a una ubicación que recibe el número de interfaces de información de tipo proporcionado por el objeto.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-215">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="f0e1e-216">Recupera el número de interfaces de información de tipo que proporciona un objeto (0 ó 1).</span><span class="sxs-lookup"><span data-stu-id="f0e1e-216">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e1e-217">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-217">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="f0e1e-218">Para obtener más información sobre `IDispatch::GetTypeInfoCount`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-218">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="f0e1e-219">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-219">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke">
      <MemberSignature Language="C#" Value="void _ConstructorInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorInfo.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _ConstructorInfo.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorInfo.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_ConstructorInfo::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="f0e1e-220">Identifica el miembro.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-220">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="f0e1e-221">Reservado para un uso futuro.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-221">Reserved for future use.</span></span> <span data-ttu-id="f0e1e-222">Debe ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-222">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="f0e1e-223">Contexto de la configuración regional en que se interpretan los argumentos.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-223">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="f0e1e-224">Marcas que describen el contexto de la llamada.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-224">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="f0e1e-225">Puntero a una estructura que contiene una matriz de argumentos, una matriz de valores DISPID de argumento para argumentos con nombre y recuentos del número de elementos de cada matriz.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-225">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="f0e1e-226">Puntero a la ubicación donde se va a almacenar el resultado.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-226">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="f0e1e-227">Puntero a una estructura que contiene información de excepciones.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-227">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="f0e1e-228">Índice del primer argumento que tiene un error.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-228">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="f0e1e-229">Proporciona acceso a las propiedades y los métodos expuestos por un objeto.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-229">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e1e-230">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-230">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="f0e1e-231">Para obtener más información sobre `IDispatch::Invoke`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-231">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="f0e1e-232">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-232">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_2">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_2 (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_2(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_2;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="f0e1e-233">Instancia que creó este método.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-233">The instance that created this method.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="f0e1e-234">Uno de los valores <see cref="T:System.Reflection.BindingFlags" /> que especifica el tipo de enlace.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-234">One of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies the type of binding.</span></span></param>
        <param name="binder"><span data-ttu-id="f0e1e-235"><see cref="T:System.Reflection.Binder" /> que define un conjunto de propiedades y permite el enlace, la conversión de tipos de argumentos y la invocación de miembros mediante la reflexión.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-235">A <see cref="T:System.Reflection.Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span></span> <span data-ttu-id="f0e1e-236">Si el valor de <paramref name="binder" /> es <see langword="null" />, se usa <see cref="P:System.Type.DefaultBinder" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-236">If <paramref name="binder" /> is <see langword="null" />, then <see cref="P:System.Type.DefaultBinder" /> is used.</span></span></param>
        <param name="parameters"><span data-ttu-id="f0e1e-237">Matriz de objetos que se utiliza para encontrar coincidencias con el número, tipo y orden de los parámetros de este constructor, bajo las restricciones de <paramref name="binder" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-237">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <paramref name="binder" />.</span></span> <span data-ttu-id="f0e1e-238">Si este constructor no requiere parámetros, pase una matriz con cero elementos.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-238">If this constructor does not require parameters, pass an array with zero elements.</span></span> <span data-ttu-id="f0e1e-239">Cualquier objeto de esta matriz que no se inicialice explícitamente con un valor contendrá el valor predeterminado de este tipo de objeto.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-239">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="f0e1e-240">Para los elementos de tipo de referencia, este valor es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-240">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="f0e1e-241">Para los elementos de tipo de valor, este valor es 0, 0.0 o <see langword="false" />, en función del tipo de elemento específico.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-241">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <param name="culture"><span data-ttu-id="f0e1e-242"><see cref="T:System.Globalization.CultureInfo" /> que se usa para regir la conversión de tipos.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-242">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="f0e1e-243">Si es <see langword="null" />, se utiliza <see cref="T:System.Globalization.CultureInfo" /> para el subproceso actual.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-243">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="f0e1e-244">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-244">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <returns><span data-ttu-id="f0e1e-245">Instancia del tipo.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-245">An instance of the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e1e-246">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-246">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f0e1e-247">Solo se puede utilizar cuando la instancia de <xref:System.Reflection.ConstructorInfo> se convierte en una interfaz <xref:System.Runtime.InteropServices._ConstructorInfo>.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-247">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_3">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_3 (object obj, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_3(object obj, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Function Invoke_3 (obj As Object, parameters As Object()) As Object Implements _ConstructorInfo.Invoke_3" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ parameters) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_3;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System.Object,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="f0e1e-248">Instancia que creó este método.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-248">The instance that created this method.</span></span></param>
        <param name="parameters"><span data-ttu-id="f0e1e-249">Matriz de objetos que se utiliza para encontrar coincidencias con el número, tipo y orden de los parámetros de este constructor, bajo las restricciones de <paramref name="binder" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-249">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <paramref name="binder" />.</span></span> <span data-ttu-id="f0e1e-250">Si este constructor no requiere parámetros, pase una matriz con cero elementos.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-250">If this constructor does not require parameters, pass an array with zero elements.</span></span> <span data-ttu-id="f0e1e-251">Cualquier objeto de esta matriz que no se inicialice explícitamente con un valor contendrá el valor predeterminado de este tipo de objeto.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-251">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="f0e1e-252">Para los elementos de tipo de referencia, este valor es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-252">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="f0e1e-253">Para los elementos de tipo de valor, este valor es 0, 0.0 o <see langword="false" />, en función del tipo de elemento específico.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-253">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <summary><span data-ttu-id="f0e1e-254">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-254">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="f0e1e-255">Instancia del tipo.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-255">An instance of the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e1e-256">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-256">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f0e1e-257">Solo se puede utilizar cuando la instancia de <xref:System.Reflection.ConstructorInfo> se convierte en una interfaz <xref:System.Runtime.InteropServices._ConstructorInfo>.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-257">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_4">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_4 (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_4(valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_4;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="invokeAttr"><span data-ttu-id="f0e1e-258">Uno de los valores <see cref="T:System.Reflection.BindingFlags" /> que especifica el tipo de enlace.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-258">One of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies the type of binding.</span></span></param>
        <param name="binder"><span data-ttu-id="f0e1e-259"><see cref="T:System.Reflection.Binder" /> que define un conjunto de propiedades y permite el enlace, la conversión de tipos de argumentos y la invocación de miembros mediante la reflexión.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-259">A <see cref="T:System.Reflection.Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span></span> <span data-ttu-id="f0e1e-260">Si el valor de <paramref name="binder" /> es <see langword="null" />, se usa <see cref="P:System.Type.DefaultBinder" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-260">If <paramref name="binder" /> is <see langword="null" />, then <see cref="P:System.Type.DefaultBinder" /> is used.</span></span></param>
        <param name="parameters"><span data-ttu-id="f0e1e-261">Matriz de objetos que se utiliza para encontrar coincidencias con el número, tipo y orden de los parámetros de este constructor, bajo las restricciones de <paramref name="binder" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-261">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <paramref name="binder" />.</span></span> <span data-ttu-id="f0e1e-262">Si este constructor no requiere parámetros, pase una matriz con cero elementos.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-262">If this constructor does not require parameters, pass an array with zero elements.</span></span> <span data-ttu-id="f0e1e-263">Cualquier objeto de esta matriz que no se inicialice explícitamente con un valor contendrá el valor predeterminado de este tipo de objeto.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-263">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="f0e1e-264">Para los elementos de tipo de referencia, este valor es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-264">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="f0e1e-265">Para los elementos de tipo de valor, este valor es 0, 0.0 o <see langword="false" />, en función del tipo de elemento específico.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-265">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <param name="culture"><span data-ttu-id="f0e1e-266"><see cref="T:System.Globalization.CultureInfo" /> que se usa para regir la conversión de tipos.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-266">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="f0e1e-267">Si es <see langword="null" />, se utiliza <see cref="T:System.Globalization.CultureInfo" /> para el subproceso actual.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-267">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="f0e1e-268">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-268">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <returns><span data-ttu-id="f0e1e-269">Instancia del tipo.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-269">An instance of the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e1e-270">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-270">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f0e1e-271">Solo se puede utilizar cuando la instancia de <xref:System.Reflection.ConstructorInfo> se convierte en una interfaz <xref:System.Runtime.InteropServices._ConstructorInfo>.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-271">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorInfo.Invoke_5">
      <MemberSignature Language="C#" Value="object _ConstructorInfo.Invoke_5 (object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.InteropServices._ConstructorInfo.Invoke_5(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Function Invoke_5 (parameters As Object()) As Object Implements _ConstructorInfo.Invoke_5" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.InteropServices._ConstructorInfo.Invoke_5(cli::array &lt;System::Object ^&gt; ^ parameters) = System::Runtime::InteropServices::_ConstructorInfo::Invoke_5;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorInfo.Invoke_5(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="f0e1e-272">Matriz de objetos que se utiliza para encontrar coincidencias con el número, tipo y orden de los parámetros de este constructor, bajo las restricciones de <paramref name="binder" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-272">An array of objects used to match the number, order, and type of the parameters for this constructor, under the constraints of <paramref name="binder" />.</span></span> <span data-ttu-id="f0e1e-273">Si este constructor no requiere parámetros, pase una matriz con cero elementos.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-273">If this constructor does not require parameters, pass an array with zero elements.</span></span> <span data-ttu-id="f0e1e-274">Cualquier objeto de esta matriz que no se inicialice explícitamente con un valor contendrá el valor predeterminado de este tipo de objeto.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-274">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="f0e1e-275">Para los elementos de tipo de referencia, este valor es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-275">For reference-type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="f0e1e-276">Para los elementos de tipo de valor, este valor es 0, 0.0 o <see langword="false" />, en función del tipo de elemento específico.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-276">For value-type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <summary><span data-ttu-id="f0e1e-277">Proporciona el acceso independiente de la versión de los objetos COM al método <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Object[])" />.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-277">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Object[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="f0e1e-278">Instancia del tipo.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-278">An instance of the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e1e-279">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-279">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f0e1e-280">Solo se puede utilizar cuando la instancia de <xref:System.Reflection.ConstructorInfo> se convierte en una interfaz <xref:System.Runtime.InteropServices._ConstructorInfo>.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-280">It can be used only when the <xref:System.Reflection.ConstructorInfo> instance is cast to an <xref:System.Runtime.InteropServices._ConstructorInfo> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConstructorName">
      <MemberSignature Language="C#" Value="public static readonly string TypeConstructorName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string TypeConstructorName" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ConstructorInfo.TypeConstructorName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TypeConstructorName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ TypeConstructorName;" />
      <MemberSignature Language="F#" Value=" staticval mutable TypeConstructorName : string" Usage="System.Reflection.ConstructorInfo.TypeConstructorName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e1e-281">Representa el nombre del método constructor de tipo tal y como está almacenado en los metadatos.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-281">Represents the name of the type constructor method as it is stored in metadata.</span></span> <span data-ttu-id="f0e1e-282">Este nombre es siempre ".cctor".</span><span class="sxs-lookup"><span data-stu-id="f0e1e-282">This name is always ".cctor".</span></span> <span data-ttu-id="f0e1e-283">Esta propiedad es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="f0e1e-283">This property is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
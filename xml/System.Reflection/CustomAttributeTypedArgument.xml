<Type Name="CustomAttributeTypedArgument" FullName="System.Reflection.CustomAttributeTypedArgument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0725314f5970fec6088e4b0fc8fb3d6f23951696" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58713106" /></Metadata><TypeSignature Language="C#" Value="public struct CustomAttributeTypedArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CustomAttributeTypedArgument extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeTypedArgument" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomAttributeTypedArgument" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomAttributeTypedArgument" />
  <TypeSignature Language="F#" Value="type CustomAttributeTypedArgument = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="13bb7-101">Representa un argumento de un atributo personalizado en el contexto de solo reflexión o un elemento de un argumento de matriz.</span><span class="sxs-lookup"><span data-stu-id="13bb7-101">Represents an argument of a custom attribute in the reflection-only context, or an element of an array argument.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13bb7-102">No se puede ejecutar código que se examina en el contexto de solo reflexión, por lo que no siempre es posible examinar los atributos personalizados mediante la creación de instancias de ellos y, a continuación, examinar sus propiedades, utilizando métodos como <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, etc. .</span><span class="sxs-lookup"><span data-stu-id="13bb7-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="13bb7-103">Si el código para el propio tipo de atributo se carga en el contexto de solo reflexión, no se puede ejecutar.</span><span class="sxs-lookup"><span data-stu-id="13bb7-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="13bb7-104">El <xref:System.Reflection.CustomAttributeNamedArgument> estructura la usa el <xref:System.Reflection.CustomAttributeData> clase para proporcionar acceso al tipo y valor de un argumento posicional especificado para una instancia de atributo personalizado, sin ejecutar el constructor de atributo.</span><span class="sxs-lookup"><span data-stu-id="13bb7-104">The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to the type and value of a positional argument specified for a custom attribute instance, without executing the attribute constructor.</span></span> <span data-ttu-id="13bb7-105">También proporciona acceso al tipo y valor de un argumento con nombre sin ejecutar el código de la propiedad correspondiente del tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="13bb7-105">It also provides access to the type and value of a named argument without executing the code of the corresponding property of the custom attribute type.</span></span>  
  
 <span data-ttu-id="13bb7-106">Proporcionan los tipos y valores de todos los argumentos posicionales y con nombre de una instancia de atributo <xref:System.Reflection.CustomAttributeTypedArgument> estructuras.</span><span class="sxs-lookup"><span data-stu-id="13bb7-106">The types and values of all the positional and named arguments of an attribute instance are provided by <xref:System.Reflection.CustomAttributeTypedArgument> structures.</span></span> <span data-ttu-id="13bb7-107">Los atributos de posición devueltos por la <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType> propiedad directamente se representan mediante <xref:System.Reflection.CustomAttributeTypedArgument> estructuras, pero los argumentos con nombre devueltos por la <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType> propiedad están representadas por <xref:System.Reflection.CustomAttributeNamedArgument> estructuras; para obtener el <xref:System.Reflection.CustomAttributeTypedArgument> estructura de un argumento con nombre, use la <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="13bb7-107">The positional attributes returned by the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType> property are directly represented by <xref:System.Reflection.CustomAttributeTypedArgument> structures, but the named arguments returned by the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType> property are represented by <xref:System.Reflection.CustomAttributeNamedArgument> structures; to get the <xref:System.Reflection.CustomAttributeTypedArgument> structure for a named argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="13bb7-108">Si un argumento es una matriz de valores, el <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propiedad de la <xref:System.Reflection.CustomAttributeTypedArgument> que representa el argumento devuelve un tipo genérico <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> de <xref:System.Reflection.CustomAttributeTypedArgument> objetos.</span><span class="sxs-lookup"><span data-stu-id="13bb7-108">If an argument is an array of values, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property of the <xref:System.Reflection.CustomAttributeTypedArgument> that represents the argument returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="13bb7-109">Cada <xref:System.Reflection.CustomAttributeTypedArgument> objeto de la colección representa el elemento correspondiente de la matriz.</span><span class="sxs-lookup"><span data-stu-id="13bb7-109">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="13bb7-110">Para crear instancias de la <xref:System.Reflection.CustomAttributeData> clase, use la `static` <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> método de fábrica.</span><span class="sxs-lookup"><span data-stu-id="13bb7-110">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13bb7-111">El ejemplo siguiente define un atributo personalizado con cuatro constructores y cuatro propiedades.</span><span class="sxs-lookup"><span data-stu-id="13bb7-111">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="13bb7-112">Dos de las propiedades son de solo lectura y se establecen mediante el uso de los parámetros posicionales de los constructores.</span><span class="sxs-lookup"><span data-stu-id="13bb7-112">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="13bb7-113">Las otras dos propiedades son de lectura/escritura, y puede ser conjunto sólo mediante argumentos con nombre.</span><span class="sxs-lookup"><span data-stu-id="13bb7-113">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="13bb7-114">Una propiedad posicional es una matriz de cadenas y una propiedad con nombre es una matriz de enteros.</span><span class="sxs-lookup"><span data-stu-id="13bb7-114">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="13bb7-115">El atributo se aplica al ensamblado, a un tipo declarado en el ensamblado, a un método del tipo y a un parámetro del método.</span><span class="sxs-lookup"><span data-stu-id="13bb7-115">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="13bb7-116">En estos casos, se usan diferentes constructores.</span><span class="sxs-lookup"><span data-stu-id="13bb7-116">Different constructors are used for these cases.</span></span> <span data-ttu-id="13bb7-117">Cuando se ejecuta, el ensamblado se carga en el contexto de solo reflexión y muestra los atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="13bb7-117">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="13bb7-118">El atributo que se aplica al tipo muestra las propiedades de la matriz, con argumentos posicionales y con nombre.</span><span class="sxs-lookup"><span data-stu-id="13bb7-118">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.CustomAttributeData" />
    <altmember cref="T:System.Reflection.CustomAttributeNamedArgument" />
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13bb7-119">Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.CustomAttributeTypedArgument" />.</span><span class="sxs-lookup"><span data-stu-id="13bb7-119">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeTypedArgument : obj -&gt; System.Reflection.CustomAttributeTypedArgument" Usage="new System.Reflection.CustomAttributeTypedArgument value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="13bb7-120">Valor del argumento del atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="13bb7-120">The value of the custom attribute argument.</span></span></param>
        <summary><span data-ttu-id="13bb7-121">Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> con el valor especificado.</span><span class="sxs-lookup"><span data-stu-id="13bb7-121">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class with the specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13bb7-122">El `value` parámetro no puede ser `null` para este constructor, porque el tipo de argumento se deduce el tipo de `value`.</span><span class="sxs-lookup"><span data-stu-id="13bb7-122">The `value` parameter cannot be `null` for this constructor, because the argument type is inferred from the type of `value`.</span></span> <span data-ttu-id="13bb7-123">Para especificar un `null` valor, use la <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="13bb7-123">To specify a `null` value, use the <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> constructor.</span></span>  
  
 <span data-ttu-id="13bb7-124">Este constructor es para su uso por los herederos de la <xref:System.Reflection.CustomAttributeTypedArgument> clase.</span><span class="sxs-lookup"><span data-stu-id="13bb7-124">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class.</span></span> <span data-ttu-id="13bb7-125">No está pensado para su uso en código de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="13bb7-125">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13bb7-126"><paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13bb7-126"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (Type argumentType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type argumentType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (argumentType As Type, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(Type ^ argumentType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeTypedArgument : Type * obj -&gt; System.Reflection.CustomAttributeTypedArgument" Usage="new System.Reflection.CustomAttributeTypedArgument (argumentType, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="argumentType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="argumentType"><span data-ttu-id="13bb7-127">Tipo del argumento del atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="13bb7-127">The type of the custom attribute argument.</span></span></param>
        <param name="value"><span data-ttu-id="13bb7-128">Valor del argumento del atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="13bb7-128">The value of the custom attribute argument.</span></span></param>
        <summary><span data-ttu-id="13bb7-129">Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> con el tipo y el valor especificados.</span><span class="sxs-lookup"><span data-stu-id="13bb7-129">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class with the specified type and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13bb7-130">Este constructor es para su uso por los herederos de la <xref:System.Reflection.CustomAttributeTypedArgument> clase.</span><span class="sxs-lookup"><span data-stu-id="13bb7-130">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class.</span></span> <span data-ttu-id="13bb7-131">No está pensado para su uso en código de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="13bb7-131">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13bb7-132"><paramref name="argumentType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="13bb7-132"><paramref name="argumentType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ArgumentType">
      <MemberSignature Language="C#" Value="public Type ArgumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ArgumentType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ArgumentType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentType : Type" Usage="System.Reflection.CustomAttributeTypedArgument.ArgumentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13bb7-133">Obtiene el tipo del argumento o del elemento de argumento de matriz.</span><span class="sxs-lookup"><span data-stu-id="13bb7-133">Gets the type of the argument or of the array argument element.</span></span></summary>
        <value><span data-ttu-id="13bb7-134">Objeto <see cref="T:System.Type" /> que representa el tipo del argumento o del elemento de matriz.</span><span class="sxs-lookup"><span data-stu-id="13bb7-134">A <see cref="T:System.Type" /> object representing the type of the argument or of the array element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13bb7-135">Argumentos simples o de los elementos de argumentos de matriz, esta propiedad identifica el tipo real del valor devuelto por la <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="13bb7-135">For simple arguments or for elements of array arguments, this property identifies the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property.</span></span> <span data-ttu-id="13bb7-136">Para los argumentos de matriz, esta propiedad devuelve el tipo de matriz, pero la <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propiedad devuelve un `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` en Visual Basic) en el que cada elemento de la colección representa el elemento correspondiente del argumento de matriz.</span><span class="sxs-lookup"><span data-stu-id="13bb7-136">For array arguments, this property returns the array type, but the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic) in which each element of the collection represents the corresponding element of the array argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13bb7-137">El ejemplo siguiente define un atributo personalizado con cuatro constructores y cuatro propiedades.</span><span class="sxs-lookup"><span data-stu-id="13bb7-137">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="13bb7-138">Dos de las propiedades son de solo lectura y se establecen mediante el uso de los parámetros posicionales de los constructores.</span><span class="sxs-lookup"><span data-stu-id="13bb7-138">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="13bb7-139">Las otras dos propiedades son de lectura/escritura, y puede ser conjunto sólo mediante argumentos con nombre.</span><span class="sxs-lookup"><span data-stu-id="13bb7-139">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="13bb7-140">Una propiedad posicional es una matriz de cadenas y una propiedad con nombre es una matriz de enteros.</span><span class="sxs-lookup"><span data-stu-id="13bb7-140">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="13bb7-141">El atributo se aplica al ensamblado, a un tipo declarado en el ensamblado, a un método del tipo y a un parámetro del método.</span><span class="sxs-lookup"><span data-stu-id="13bb7-141">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="13bb7-142">En estos casos, se usan diferentes constructores.</span><span class="sxs-lookup"><span data-stu-id="13bb7-142">Different constructors are used for these cases.</span></span> <span data-ttu-id="13bb7-143">Cuando se ejecuta, el ensamblado se carga en el contexto de solo reflexión y muestra los atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="13bb7-143">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="13bb7-144">El atributo que se aplica al tipo muestra las propiedades de la matriz, con argumentos posicionales y con nombre.</span><span class="sxs-lookup"><span data-stu-id="13bb7-144">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="13bb7-145">El <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> propiedad se utiliza en el `ShowValueOrArray` método que muestra datos de atributos personalizados, para mostrar los tipos de atributos.</span><span class="sxs-lookup"><span data-stu-id="13bb7-145">The <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property is used in the `ShowValueOrArray` method that displays custom attribute data, to display the types of attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeTypedArgument.Value" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeTypedArgument.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="13bb7-146">Otro objeto con el que se va a realizar la comparación.</span><span class="sxs-lookup"><span data-stu-id="13bb7-146">Another object to compare to.</span></span></param>
        <summary><span data-ttu-id="13bb7-147">Indica si esta instancia y un objeto especificado son iguales.</span><span class="sxs-lookup"><span data-stu-id="13bb7-147">Indicates whether this instance and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="13bb7-148"><see langword="true" /> si <paramref name="obj" /> y esta instancia son del mismo tipo y representan el mismo valor; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13bb7-148"><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeTypedArgument.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13bb7-149">Devuelve el código hash de esta instancia.</span><span class="sxs-lookup"><span data-stu-id="13bb7-149">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="13bb7-150">Entero de 32 bits con signo, que es el código hash de esta instancia.</span><span class="sxs-lookup"><span data-stu-id="13bb7-150">A 32-bit signed integer that is the hash code for this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.CustomAttributeTypedArgument * System.Reflection.CustomAttributeTypedArgument -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="13bb7-151">Estructura <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> situada a la izquierda del operador de igualdad.</span><span class="sxs-lookup"><span data-stu-id="13bb7-151">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the left of the equality operator.</span></span></param>
        <param name="right"><span data-ttu-id="13bb7-152">Estructura <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> situada a la derecha del operador de igualdad.</span><span class="sxs-lookup"><span data-stu-id="13bb7-152">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the right of the equality operator.</span></span></param>
        <summary><span data-ttu-id="13bb7-153">Prueba si dos estructuras <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> son equivalentes.</span><span class="sxs-lookup"><span data-stu-id="13bb7-153">Tests whether two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are equivalent.</span></span></summary>
        <returns><span data-ttu-id="13bb7-154"><see langword="true" /> si las dos estructuras <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> son iguales; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13bb7-154"><see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="13bb7-155">El método equivalente para este operador es <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13bb7-155">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.CustomAttributeTypedArgument * System.Reflection.CustomAttributeTypedArgument -&gt; bool" Usage="System.Reflection.CustomAttributeTypedArgument.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="13bb7-156">Estructura <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> situada a la izquierda del operador de desigualdad.</span><span class="sxs-lookup"><span data-stu-id="13bb7-156">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the left of the inequality operator.</span></span></param>
        <param name="right"><span data-ttu-id="13bb7-157">Estructura <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> situada a la derecha del operador de no igualdad.</span><span class="sxs-lookup"><span data-stu-id="13bb7-157">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the right of the inequality operator.</span></span></param>
        <summary><span data-ttu-id="13bb7-158">Prueba si dos estructuras de <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> son diferentes.</span><span class="sxs-lookup"><span data-stu-id="13bb7-158">Tests whether two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are different.</span></span></summary>
        <returns><span data-ttu-id="13bb7-159"><see langword="true" /> si las dos estructuras <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> son diferentes; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13bb7-159"><see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are different; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="13bb7-160">El método equivalente para este operador es <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13bb7-160">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeTypedArgument.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13bb7-161">Devuelve una cadena formada por el nombre de argumento, el signo igual y una representación de cadena del valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="13bb7-161">Returns a string consisting of the argument name, the equal sign, and a string representation of the argument value.</span></span></summary>
        <returns><span data-ttu-id="13bb7-162">Cadena formada por el nombre de argumento, el signo igual y una representación de cadena del valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="13bb7-162">A string consisting of the argument name, the equal sign, and a string representation of the argument value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Reflection.CustomAttributeTypedArgument.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13bb7-163">Obtiene el valor del argumento para un argumento simple o para un elemento de un argumento de matriz; obtiene una colección de valores para un argumento de matriz.</span><span class="sxs-lookup"><span data-stu-id="13bb7-163">Gets the value of the argument for a simple argument or for an element of an array argument; gets a collection of values for an array argument.</span></span></summary>
        <value><span data-ttu-id="13bb7-164">Objeto que representa el valor del argumento o elemento, o colección <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> genérica de objetos <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> que representa los valores de un argumento de tipo matriz.</span><span class="sxs-lookup"><span data-stu-id="13bb7-164">An object that represents the value of the argument or element, or a generic <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> objects that represent the values of an array-type argument.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13bb7-165">Si el <xref:System.Reflection.CustomAttributeTypedArgument> representa un argumento de matriz, esta propiedad devuelve un `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="13bb7-165">If the <xref:System.Reflection.CustomAttributeTypedArgument> represents an array argument, this property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic).</span></span> <span data-ttu-id="13bb7-166">Cada elemento de la colección representa el elemento correspondiente del argumento de matriz.</span><span class="sxs-lookup"><span data-stu-id="13bb7-166">Each element of the collection represents the corresponding element of the array argument.</span></span>  
  
 <span data-ttu-id="13bb7-167">El tipo del valor puede obtenerse utilizando el <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="13bb7-167">The type of the value can be obtained by using the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property.</span></span> <span data-ttu-id="13bb7-168"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> Obtiene el tipo real del valor devuelto por la <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propiedad argumentos simples o de los elementos de argumentos de matriz.</span><span class="sxs-lookup"><span data-stu-id="13bb7-168"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> gets the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property for simple arguments or for elements of array arguments.</span></span> <span data-ttu-id="13bb7-169">Devuelve el tipo de matriz de argumentos de matriz.</span><span class="sxs-lookup"><span data-stu-id="13bb7-169">It returns the array type for array arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13bb7-170">El ejemplo siguiente define un atributo personalizado con cuatro constructores y cuatro propiedades.</span><span class="sxs-lookup"><span data-stu-id="13bb7-170">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="13bb7-171">Dos de las propiedades son de solo lectura y se establecen mediante el uso de los parámetros posicionales de los constructores.</span><span class="sxs-lookup"><span data-stu-id="13bb7-171">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="13bb7-172">Las otras dos propiedades son de lectura/escritura, y puede ser conjunto sólo mediante argumentos con nombre.</span><span class="sxs-lookup"><span data-stu-id="13bb7-172">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="13bb7-173">Una propiedad posicional es una matriz de cadenas y una propiedad con nombre es una matriz de enteros.</span><span class="sxs-lookup"><span data-stu-id="13bb7-173">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="13bb7-174">El atributo se aplica al ensamblado, a un tipo declarado en el ensamblado, a un método del tipo y a un parámetro del método.</span><span class="sxs-lookup"><span data-stu-id="13bb7-174">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="13bb7-175">En estos casos, se usan diferentes constructores.</span><span class="sxs-lookup"><span data-stu-id="13bb7-175">Different constructors are used for these cases.</span></span> <span data-ttu-id="13bb7-176">Cuando se ejecuta, el ensamblado se carga en el contexto de solo reflexión y muestra los atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="13bb7-176">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="13bb7-177">El atributo que se aplica al tipo muestra las propiedades de la matriz, con argumentos posicionales y con nombre.</span><span class="sxs-lookup"><span data-stu-id="13bb7-177">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="13bb7-178">El <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propiedad se utiliza en el `ShowValueOrArray` método que muestra datos de atributos personalizados, para mostrar los valores de atributos.</span><span class="sxs-lookup"><span data-stu-id="13bb7-178">The <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property is used in the `ShowValueOrArray` method that displays custom attribute data, to display the values of attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 <span data-ttu-id="13bb7-179"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> &#124; <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A></span><span class="sxs-lookup"><span data-stu-id="13bb7-179"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> &#124; <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
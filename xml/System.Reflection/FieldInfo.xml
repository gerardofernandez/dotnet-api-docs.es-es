<Type Name="FieldInfo" FullName="System.Reflection.FieldInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a9a4c9a7f675d904b825830f569b76b25392e59f" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53232709" /></Metadata><TypeSignature Language="C#" Value="public abstract class FieldInfo : System.Reflection.MemberInfo, System.Runtime.InteropServices._FieldInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit FieldInfo extends System.Reflection.MemberInfo implements class System.Runtime.InteropServices._FieldInfo" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.FieldInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FieldInfo&#xA;Inherits MemberInfo&#xA;Implements _FieldInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class FieldInfo abstract : System::Reflection::MemberInfo, System::Runtime::InteropServices::_FieldInfo" />
  <TypeSignature Language="F#" Value="type FieldInfo = class&#xA;    inherit MemberInfo&#xA;    interface _FieldInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.MemberInfo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._FieldInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._FieldInfo))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fb25f-101">Detecta los atributos de un campo y proporciona acceso a sus metadatos.</span><span class="sxs-lookup"><span data-stu-id="fb25f-101">Discovers the attributes of a field and provides access to field metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-102">Se obtiene la información del campo de metadatos.</span><span class="sxs-lookup"><span data-stu-id="fb25f-102">The field information is obtained from metadata.</span></span> <span data-ttu-id="fb25f-103">La <xref:System.Reflection.FieldInfo> clase no tiene un constructor público.</span><span class="sxs-lookup"><span data-stu-id="fb25f-103">The <xref:System.Reflection.FieldInfo> class does not have a public constructor.</span></span> <span data-ttu-id="fb25f-104"><xref:System.Reflection.FieldInfo> los objetos se obtienen llamando el <xref:System.Type.GetFields%2A> o <xref:System.Type.GetField%2A> método de un `Type` objeto.</span><span class="sxs-lookup"><span data-stu-id="fb25f-104"><xref:System.Reflection.FieldInfo> objects are obtained by calling either the <xref:System.Type.GetFields%2A> or <xref:System.Type.GetField%2A> method of a `Type` object.</span></span>  
  
 <span data-ttu-id="fb25f-105">Los campos son variables definidas en la clase.</span><span class="sxs-lookup"><span data-stu-id="fb25f-105">Fields are variables defined in the class.</span></span> <span data-ttu-id="fb25f-106"><xref:System.Reflection.FieldInfo> proporciona acceso a los metadatos de un campo dentro de una clase y proporciona el conjunto dinámico y la funcionalidad get del campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-106"><xref:System.Reflection.FieldInfo> provides access to the metadata for a field within a class and provides dynamic set and get functionality for the field.</span></span> <span data-ttu-id="fb25f-107">La clase no se carga en memoria hasta que invoke o se llama a get en el objeto.</span><span class="sxs-lookup"><span data-stu-id="fb25f-107">The class is not loaded into memory until invoke or get is called on the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-108">En el ejemplo siguiente se usa el <xref:System.Type.GetFields%2A?displayProperty=nameWithType> método para obtener la información relacionada con el campo desde el <xref:System.Reflection.FieldInfo> clase y, a continuación, muestra los atributos de campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-108">The following example uses the <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method to get the field-related information from the <xref:System.Reflection.FieldInfo> class, and then displays field attributes.</span></span>  
  
 [!code-cpp[FieldInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo/CPP/fieldinfo.cpp#1)]
 [!code-csharp[FieldInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo/CS/fieldinfo.cs#1)]
 [!code-vb[FieldInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo/VB/fieldinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="fb25f-109">para plena confianza para los herederos.</span><span class="sxs-lookup"><span data-stu-id="fb25f-109">for full trust for inheritors.</span></span> <span data-ttu-id="fb25f-110">No se puede heredar esta clase por código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="fb25f-110">This class cannot be inherited by partially trusted code.</span></span></permission>
    <threadsafe><span data-ttu-id="fb25f-111">Este tipo es seguro para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="fb25f-111">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="fb25f-112">Al heredar de <see cref="T:System.Reflection.FieldInfo" />, es necesario reemplazar los miembros siguientes: <see cref="M:System.Reflection.FieldInfo.GetValue(System.Object)" /> y <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-112">When you inherit from <see cref="T:System.Reflection.FieldInfo" />, you must override the following members: <see cref="M:System.Reflection.FieldInfo.GetValue(System.Object)" /> and <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" />.</span></span></para></block>
    <altmember cref="T:System.Type" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FieldInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FieldInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb25f-113">Inicializa una nueva instancia de la clase <see langword="FieldInfo" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-113">Initializes a new instance of the <see langword="FieldInfo" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fb25f-114">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-114">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fb25f-115">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-115">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.FieldAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.FieldAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As FieldAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::FieldAttributes Attributes { System::Reflection::FieldAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.FieldAttributes" Usage="System.Reflection.FieldInfo.Attributes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-116">Obtiene los atributos asociados a este campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-116">Gets the attributes associated with this field.</span></span></summary>
        <value><span data-ttu-id="fb25f-117"><see langword="FieldAttributes" /> de este campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-117">The <see langword="FieldAttributes" /> for this field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-118">Todos los miembros tienen un conjunto de atributos que se definen en relación con el tipo específico de miembros.</span><span class="sxs-lookup"><span data-stu-id="fb25f-118">All members have a set of attributes, which are defined in relation to the specific type of member.</span></span> <span data-ttu-id="fb25f-119">`FieldAttributes` informa al usuario si este campo es el campo privado, un campo estático y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="fb25f-119">`FieldAttributes` informs the user whether this field is the private field, a static field, and so on.</span></span>  
  
 <span data-ttu-id="fb25f-120">Para obtener el `Attributes` propiedad, obtenga primero la clase `Type`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-120">To get the `Attributes` property, first get the class `Type`.</span></span> <span data-ttu-id="fb25f-121">Desde el `Type`, obtener el `FieldInfo`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-121">From the `Type`, get the `FieldInfo`.</span></span> <span data-ttu-id="fb25f-122">Desde el `FieldInfo`, obtener el `Attributes`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-122">From the `FieldInfo`, get the `Attributes`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-123">El siguiente ejemplo de código genera tres campos y muestra sus atributos de campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-123">The following code example builds three fields and displays their field attributes.</span></span> <span data-ttu-id="fb25f-124">Un `FieldAttributes` valor puede contener más de un atributo, por ejemplo, ambos `Public` y `Literal`, tal y como se muestra en el tercer campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-124">A `FieldAttributes` value can contain more than one attribute, such as both `Public` and `Literal`, as shown in the third field.</span></span>  
  
 [!code-cpp[Classic FieldAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic FieldAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="fieldInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fb25f-125">Objeto que se va a comparar con esta instancia o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-125">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fb25f-126">Devuelve un valor que indica si esta instancia es igual que un objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-126">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="fb25f-127">Es <see langword="true" /> si <paramref name="obj" /> es igual al tipo y valor de esta instancia; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-127"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldHandle">
      <MemberSignature Language="C#" Value="public abstract RuntimeFieldHandle FieldHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeFieldHandle FieldHandle" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.FieldHandle" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property FieldHandle As RuntimeFieldHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property RuntimeFieldHandle FieldHandle { RuntimeFieldHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldHandle : RuntimeFieldHandle" Usage="System.Reflection.FieldInfo.FieldHandle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.FieldHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeFieldHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-128">Obtiene una estructura <see langword="RuntimeFieldHandle" />, que es un identificador para la representación interna de los metadatos de un campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-128">Gets a <see langword="RuntimeFieldHandle" />, which is a handle to the internal metadata representation of a field.</span></span></summary>
        <value><span data-ttu-id="fb25f-129">Identificador para la representación interna de metadatos de un campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-129">A handle to the internal metadata representation of a field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-130">Los identificadores sólo son válidos en el appdomain en el que se obtuvieron.</span><span class="sxs-lookup"><span data-stu-id="fb25f-130">The handles are valid only in the appdomain in which they were obtained.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-131">El ejemplo siguiente recupera información del campo MyClass.MyField y muestra el campo asociado con el identificador de campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-131">The following example retrieves MyClass.MyField field information and displays the field associated with the field handle.</span></span>  
  
 [!code-cpp[FieldInfo_FieldHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_FieldHandle/CPP/fieldinfo_fieldhandle.cpp#1)]
 [!code-csharp[FieldInfo_FieldHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_FieldHandle/CS/fieldinfo_fieldhandle.cs#1)]
 [!code-vb[FieldInfo_FieldHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_FieldHandle/VB/fieldinfo_fieldhandle.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldType">
      <MemberSignature Language="C#" Value="public abstract Type FieldType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FieldType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.FieldType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property FieldType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ FieldType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldType : Type" Usage="System.Reflection.FieldInfo.FieldType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.FieldType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-132">Obtiene el tipo de este objeto de campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-132">Gets the type of this field object.</span></span></summary>
        <value><span data-ttu-id="fb25f-133">Tipo de este objeto de campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-133">The type of this field object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-134">El tipo es algún tipo de datos primitivos, como `String`, `Boolean`, o `GUID`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-134">The type is some primitive data type, such as `String`, `Boolean`, or `GUID`.</span></span>  
  
 <span data-ttu-id="fb25f-135">Para obtener el `FieldType` propiedad, obtenga primero la clase `Type`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-135">To get the `FieldType` property, first get the class `Type`.</span></span> <span data-ttu-id="fb25f-136">Desde el `Type`, obtener el `FieldInfo`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-136">From the `Type`, get the `FieldInfo`.</span></span> <span data-ttu-id="fb25f-137">Desde el `FieldInfo`, obtener el `FieldType` valor.</span><span class="sxs-lookup"><span data-stu-id="fb25f-137">From the `FieldInfo`, get the `FieldType` value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-138">El ejemplo siguiente se crea un campo, obtiene su tipo y <xref:System.Reflection.FieldInfo>y muestra su <xref:System.Reflection.FieldInfo.FieldType%2A>.</span><span class="sxs-lookup"><span data-stu-id="fb25f-138">The following example creates a field, gets its type and <xref:System.Reflection.FieldInfo>, and displays its <xref:System.Reflection.FieldInfo.FieldType%2A>.</span></span>  
  
 [!code-cpp[Classic FieldInfo.FieldType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.FieldType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.FieldType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.FieldType Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.FieldType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.FieldType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFieldFromHandle">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb25f-139">Obtiene <see cref="T:System.Reflection.FieldInfo" /> para el campo representado por un identificador.</span><span class="sxs-lookup"><span data-stu-id="fb25f-139">Gets a <see cref="T:System.Reflection.FieldInfo" /> for the field represented by a handle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFieldFromHandle">
      <MemberSignature Language="C#" Value="public static System.Reflection.FieldInfo GetFieldFromHandle (RuntimeFieldHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.FieldInfo GetFieldFromHandle(valuetype System.RuntimeFieldHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFieldFromHandle (handle As RuntimeFieldHandle) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::FieldInfo ^ GetFieldFromHandle(RuntimeFieldHandle handle);" />
      <MemberSignature Language="F#" Value="static member GetFieldFromHandle : RuntimeFieldHandle -&gt; System.Reflection.FieldInfo" Usage="System.Reflection.FieldInfo.GetFieldFromHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.RuntimeFieldHandle" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="fb25f-140">Estructura <see cref="T:System.RuntimeFieldHandle" /> que contiene el identificador para la representación interna de los metadatos de un campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-140">A <see cref="T:System.RuntimeFieldHandle" /> structure that contains the handle to the internal metadata representation of a field.</span></span></param>
        <summary><span data-ttu-id="fb25f-141">Obtiene <see cref="T:System.Reflection.FieldInfo" /> para el campo representado por el identificador especificado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-141">Gets a <see cref="T:System.Reflection.FieldInfo" /> for the field represented by the specified handle.</span></span></summary>
        <returns><span data-ttu-id="fb25f-142">Objeto <see cref="T:System.Reflection.FieldInfo" /> que representa el campo especificado por <paramref name="handle" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-142">A <see cref="T:System.Reflection.FieldInfo" /> object representing the field specified by <paramref name="handle" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-143">Identificadores son válidos únicamente en el dominio de aplicación en el que se obtuvieron.</span><span class="sxs-lookup"><span data-stu-id="fb25f-143">Handles are valid only in the application domain in which they were obtained.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-144">El siguiente ejemplo de código utiliza el <xref:System.Type.GetFields%2A?displayProperty=nameWithType> método para obtener <xref:System.Reflection.FieldInfo> objetos para los campos de un tipo, obtiene un <xref:System.RuntimeFieldHandle> estructura para cada campo y, a continuación, recupera el <xref:System.Reflection.FieldInfo> objetos desde los controladores de utilizar esta sobrecarga de la <xref:System.Reflection.FieldInfo.GetFieldFromHandle%2A>método.</span><span class="sxs-lookup"><span data-stu-id="fb25f-144">The following code example uses the <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method to get <xref:System.Reflection.FieldInfo> objects for the fields of a type, gets a <xref:System.RuntimeFieldHandle> structure for each field, and then retrieves the <xref:System.Reflection.FieldInfo> objects from the handles using this overload of the <xref:System.Reflection.FieldInfo.GetFieldFromHandle%2A> method.</span></span>  
  
 [!code-cpp[FieldInfo_GetFieldFromHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_GetFieldFromHandle/CPP/fieldinfo_getfieldfromhandle.cpp#1)]
 [!code-csharp[FieldInfo_GetFieldFromHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_GetFieldFromHandle/CS/fieldinfo_getfieldfromhandle.cs#1)]
 [!code-vb[FieldInfo_GetFieldFromHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_GetFieldFromHandle/VB/fieldinfo_getfieldfromhandle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fb25f-145"><paramref name="handle" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="fb25f-145"><paramref name="handle" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fb25f-146">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-146">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fb25f-147">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-147">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetFieldFromHandle">
      <MemberSignature Language="C#" Value="public static System.Reflection.FieldInfo GetFieldFromHandle (RuntimeFieldHandle handle, RuntimeTypeHandle declaringType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.FieldInfo GetFieldFromHandle(valuetype System.RuntimeFieldHandle handle, valuetype System.RuntimeTypeHandle declaringType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFieldFromHandle (handle As RuntimeFieldHandle, declaringType As RuntimeTypeHandle) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::FieldInfo ^ GetFieldFromHandle(RuntimeFieldHandle handle, RuntimeTypeHandle declaringType);" />
      <MemberSignature Language="F#" Value="static member GetFieldFromHandle : RuntimeFieldHandle * RuntimeTypeHandle -&gt; System.Reflection.FieldInfo" Usage="System.Reflection.FieldInfo.GetFieldFromHandle (handle, declaringType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.RuntimeFieldHandle" />
        <Parameter Name="declaringType" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="fb25f-148">Estructura <see cref="T:System.RuntimeFieldHandle" /> que contiene el identificador para la representación interna de los metadatos de un campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-148">A <see cref="T:System.RuntimeFieldHandle" /> structure that contains the handle to the internal metadata representation of a field.</span></span></param>
        <param name="declaringType"><span data-ttu-id="fb25f-149">Estructura <see cref="T:System.RuntimeTypeHandle" /> que contiene el identificador para el tipo genérico que define el campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-149">A <see cref="T:System.RuntimeTypeHandle" /> structure that contains the handle to the generic type that defines the field.</span></span></param>
        <summary><span data-ttu-id="fb25f-150">Obtiene <see cref="T:System.Reflection.FieldInfo" /> para el campo representado por el identificador especificado, para el tipo genérico especificado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-150">Gets a <see cref="T:System.Reflection.FieldInfo" /> for the field represented by the specified handle, for the specified generic type.</span></span></summary>
        <returns><span data-ttu-id="fb25f-151">Objeto <see cref="T:System.Reflection.FieldInfo" /> que representa el campo especificado por <paramref name="handle" />, en el tipo genérico especificado por <paramref name="declaringType" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-151">A <see cref="T:System.Reflection.FieldInfo" /> object representing the field specified by <paramref name="handle" />, in the generic type specified by <paramref name="declaringType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-152">Identificadores son válidos únicamente en el dominio de aplicación en el que se obtuvieron.</span><span class="sxs-lookup"><span data-stu-id="fb25f-152">Handles are valid only in the application domain in which they were obtained.</span></span>  
  
 <span data-ttu-id="fb25f-153">La práctica recomendada es que `declaringType` siempre debe ser el identificador de tipo en tiempo de ejecución de construido que escriba `handle` pertenece.</span><span class="sxs-lookup"><span data-stu-id="fb25f-153">The recommended practice is that `declaringType` should always be the runtime type handle of the constructed type that `handle` belongs to.</span></span> <span data-ttu-id="fb25f-154">Es decir, si `handle` es un identificador de campo en tiempo de ejecución para un campo perteneciente a `MyType<int>` (`MyType(Of Integer)` en Visual Basic), `declaringType` es el identificador de tipo en tiempo de ejecución de `MyType<int>`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-154">That is, if `handle` is a runtime field handle for a field that belongs to `MyType<int>` (`MyType(Of Integer)` in Visual Basic), `declaringType` is the runtime type handle for `MyType<int>`.</span></span> <span data-ttu-id="fb25f-155">No use el identificador de tipo en tiempo de ejecución de la definición de tipo genérico, a menos que el identificador de campo en tiempo de ejecución representa un campo de la definición de tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="fb25f-155">Do not use the runtime type handle of the generic type definition, unless the runtime field handle represents a field on the generic type definition.</span></span>  
  
 <span data-ttu-id="fb25f-156">Las implementaciones son compatibles en algunos casos.</span><span class="sxs-lookup"><span data-stu-id="fb25f-156">Implementations are compatible in some cases.</span></span> <span data-ttu-id="fb25f-157">Por ejemplo, una sola implementación se comparte entre todos los tipos que se construyen a partir de una definición de tipo genérico concreto mediante el uso de tipos de referencia para los argumentos de tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="fb25f-157">For example, a single implementation is shared by all types that are constructed from a particular generic type definition by using reference types for the generic type arguments.</span></span> <span data-ttu-id="fb25f-158">Por ejemplo, `MyType<string>`, `MyType<object>`, y `MyType<ArrayList>` todos comparten la misma implementación.</span><span class="sxs-lookup"><span data-stu-id="fb25f-158">For example, `MyType<string>`, `MyType<object>`, and `MyType<ArrayList>` all share the same implementation.</span></span> <span data-ttu-id="fb25f-159">En esta situación, el <xref:System.Reflection.FieldInfo> objeto que se devuelve representa un campo en el tipo que `declaringType` especifica, independientemente del origen de `handle`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-159">In this situation, the <xref:System.Reflection.FieldInfo> object that is returned represents a field on the type that `declaringType` specifies, regardless of the original source of `handle`.</span></span> <span data-ttu-id="fb25f-160">No se recomienda esta práctica, porque funciona únicamente si los argumentos de tipo genérico del tipo construido son tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="fb25f-160">This practice is not recommended, because it works only if the generic type arguments of the constructed type are reference types.</span></span>  
  
 <span data-ttu-id="fb25f-161">Si un argumento genérico es un tipo de valor, el identificador de tipo en tiempo de ejecución del tipo construido no es compatible con identificadores de campo en tiempo de ejecución de las construcciones que tiene una referencia de tipo en la misma posición de parámetro genérico, o que tienen un valor diferente escriba en esa posición .</span><span class="sxs-lookup"><span data-stu-id="fb25f-161">If a generic argument is a value type, the runtime type handle of the constructed type is not compatible with runtime field handles from constructions that have a reference type in the same generic parameter position, or that have a different value type in that position.</span></span> <span data-ttu-id="fb25f-162">En ese caso, la única forma de usar el <xref:System.Reflection.FieldInfo.GetFieldFromHandle%28System.RuntimeFieldHandle%2CSystem.RuntimeTypeHandle%29?displayProperty=nameWithType> sobrecarga es para asegurarse de que `declaringType` es el identificador de tipo en tiempo de ejecución para el tipo construido que `handle` pertenece.</span><span class="sxs-lookup"><span data-stu-id="fb25f-162">In that case, the only way to use the <xref:System.Reflection.FieldInfo.GetFieldFromHandle%28System.RuntimeFieldHandle%2CSystem.RuntimeTypeHandle%29?displayProperty=nameWithType> overload is to ensure that `declaringType` is the runtime type handle for the constructed type that `handle` belongs to.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-163">El ejemplo siguiente muestra cómo recuperar <xref:System.Reflection.FieldInfo> objetos para los campos en clases genéricas construidas.</span><span class="sxs-lookup"><span data-stu-id="fb25f-163">The following example shows how to retrieve <xref:System.Reflection.FieldInfo> objects for fields on constructed generic classes.</span></span> <span data-ttu-id="fb25f-164">En el ejemplo se define el tipo genérico `Test<T>` (`Test(Of T)` en Visual Basic) con un solo campo denominado `TestField`, del tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-164">The example defines the generic type `Test<T>` (`Test(Of T)` in Visual Basic) with a single field named `TestField`, of type `T`.</span></span> <span data-ttu-id="fb25f-165">El ejemplo se obtiene el <xref:System.RuntimeFieldHandle> y <xref:System.RuntimeTypeHandle> para el caso donde `T` es <xref:System.String>y muestra lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="fb25f-165">The example gets the <xref:System.RuntimeFieldHandle> and <xref:System.RuntimeTypeHandle> for the case where `T` is <xref:System.String>, and demonstrates the following:</span></span>  
  
-   <span data-ttu-id="fb25f-166">Se produce una excepción si el <xref:System.Reflection.FieldInfo.GetFieldFromHandle%28System.RuntimeFieldHandle%29> se usa la sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="fb25f-166">An exception is thrown if the <xref:System.Reflection.FieldInfo.GetFieldFromHandle%28System.RuntimeFieldHandle%29> method overload is used.</span></span> <span data-ttu-id="fb25f-167">Esto ocurre incluso si el campo no es de tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-167">This is true even if the field is not of type `T`.</span></span>  
  
-   <span data-ttu-id="fb25f-168">Un <xref:System.Reflection.FieldInfo> se recupera correctamente si el identificador de tipo en tiempo de ejecución es de la misma construcción que el identificador de campo en tiempo de ejecución, en este caso `Test<string>`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-168">A <xref:System.Reflection.FieldInfo> is retrieved successfully if the runtime type handle is from the same construction as the runtime field handle, in this case `Test<string>`.</span></span>  
  
-   <span data-ttu-id="fb25f-169">Si el identificador de tipo en tiempo de ejecución es de una construcción compatible, en este caso `Test<object>`, un <xref:System.Reflection.FieldInfo> para el campo en la construcción compatible se recupera.</span><span class="sxs-lookup"><span data-stu-id="fb25f-169">If the runtime type handle is from a compatible construction, in this case `Test<object>`, a <xref:System.Reflection.FieldInfo> for the field on the compatible construction is retrieved.</span></span>  
  
-   <span data-ttu-id="fb25f-170">Si el identificador de tipo en tiempo de ejecución no es de una construcción compatible, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="fb25f-170">If the runtime type handle is not from a compatible construction, an exception is thrown.</span></span> <span data-ttu-id="fb25f-171">En este caso, se especifica un tipo de valor para `T`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-171">In this case, a value type is specified for `T`.</span></span>  
  
 [!code-csharp[FieldInfo_GetFieldFromHandle2#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_GetFieldFromHandle2/cs/source.cs#1)]
 [!code-vb[FieldInfo_GetFieldFromHandle2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_GetFieldFromHandle2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fb25f-172"><paramref name="handle" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="fb25f-172"><paramref name="handle" /> is invalid.</span></span>  
  
<span data-ttu-id="fb25f-173">O bien</span><span class="sxs-lookup"><span data-stu-id="fb25f-173">-or-</span></span> 
 <span data-ttu-id="fb25f-174"><paramref name="declaringType" /> no es compatible con <paramref name="handle" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-174"><paramref name="declaringType" /> is not compatible with <paramref name="handle" />.</span></span> <span data-ttu-id="fb25f-175">Por ejemplo, <paramref name="declaringType" /> es el identificador de tipo en tiempo de ejecución de la definición de tipo genérico, y <paramref name="handle" /> viene de un tipo construido.</span><span class="sxs-lookup"><span data-stu-id="fb25f-175">For example, <paramref name="declaringType" /> is the runtime type handle of the generic type definition, and <paramref name="handle" /> comes from a constructed type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fb25f-176">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-176">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fb25f-177">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-177">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="fieldInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb25f-178">Devuelve el código hash de esta instancia.</span><span class="sxs-lookup"><span data-stu-id="fb25f-178">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="fb25f-179">Código hash de un entero de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-179">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOptionalCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetOptionalCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetOptionalCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetOptionalCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOptionalCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetOptionalCustomModifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetOptionalCustomModifiers : unit -&gt; Type[]&#xA;override this.GetOptionalCustomModifiers : unit -&gt; Type[]" Usage="fieldInfo.GetOptionalCustomModifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb25f-180">Obtiene una matriz de tipos que identifican los modificadores personalizados opcionales del campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-180">Gets an array of types that identify the optional custom modifiers of the field.</span></span></summary>
        <returns><span data-ttu-id="fb25f-181">Matriz de objetos <see cref="T:System.Type" /> que identifican los modificadores personalizados opcionales del campo actual, como <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-181">An array of <see cref="T:System.Type" /> objects that identify the optional custom modifiers of the current field, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-182">El <xref:System.Reflection.FieldInfo.GetOptionalCustomModifiers%2A> y <xref:System.Reflection.FieldInfo.GetRequiredCustomModifiers%2A> se proporcionan métodos para los diseñadores de compiladores administrados.</span><span class="sxs-lookup"><span data-stu-id="fb25f-182">The <xref:System.Reflection.FieldInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.FieldInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="fb25f-183">Para obtener más información sobre los modificadores personalizados, vea <xref:System.Runtime.CompilerServices.IsBoxed> y clases relacionadas del <xref:System.Runtime.CompilerServices> espacio de nombres y la especificación de metadatos en la documentación de ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="fb25f-183">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="fb25f-184">La documentación está disponible en línea; vea [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) (Estándares de ECMA C# y Common Language Infrastructure) en MSDN y [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) (Estándar ECMA-335: Common Language Infrastructure [CLI]) en el sitio web de Ecma International.</span><span class="sxs-lookup"><span data-stu-id="fb25f-184">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawConstantValue">
      <MemberSignature Language="C#" Value="public virtual object GetRawConstantValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRawConstantValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetRawConstantValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRawConstantValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetRawConstantValue();" />
      <MemberSignature Language="F#" Value="abstract member GetRawConstantValue : unit -&gt; obj&#xA;override this.GetRawConstantValue : unit -&gt; obj" Usage="fieldInfo.GetRawConstantValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb25f-185">Devuelve un valor literal asociado al campo mediante un compilador.</span><span class="sxs-lookup"><span data-stu-id="fb25f-185">Returns a literal value associated with the field by a compiler.</span></span></summary>
        <returns><span data-ttu-id="fb25f-186"><see cref="T:System.Object" /> que contiene el valor literal asociado al campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-186">An <see cref="T:System.Object" /> that contains the literal value associated with the field.</span></span> <span data-ttu-id="fb25f-187">Si el valor literal es un tipo de clase con un valor de elemento de cero, el valor devuelto es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-187">If the literal value is a class type with an element value of zero, the return value is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-188">Este método se proporciona para los diseñadores de compiladores administrados y analizadores de código.</span><span class="sxs-lookup"><span data-stu-id="fb25f-188">This method is provided for designers of managed compilers and code analyzers.</span></span>  
  
 <span data-ttu-id="fb25f-189">Este método puede utilizarse en el contexto de ejecución y el contexto de solo reflexión.</span><span class="sxs-lookup"><span data-stu-id="fb25f-189">This method can be used in both the execution context and the reflection-only context.</span></span>  
  
 <span data-ttu-id="fb25f-190">En los metadatos no administrados, la tabla de constantes se utiliza para almacenar valores constantes para los campos, parámetros y propiedades.</span><span class="sxs-lookup"><span data-stu-id="fb25f-190">In unmanaged metadata, the Constant table is used to store constant values for fields, parameters, and properties.</span></span> <span data-ttu-id="fb25f-191">Constante de información no afecta directamente al comportamiento en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="fb25f-191">Constant information does not directly influence runtime behavior.</span></span> <span data-ttu-id="fb25f-192">Los compiladores inspeccionan esta información en tiempo de compilación, al importar los metadatos.</span><span class="sxs-lookup"><span data-stu-id="fb25f-192">Compilers inspect this information, at compile time, when importing metadata.</span></span> <span data-ttu-id="fb25f-193">Si se utiliza, el valor de una constante se incrusta en la secuencia del lenguaje intermedio (MSIL) de Microsoft que el compilador emite.</span><span class="sxs-lookup"><span data-stu-id="fb25f-193">If used, the value of a constant is embedded in the Microsoft intermediate language (MSIL) stream the compiler emits.</span></span> <span data-ttu-id="fb25f-194">No hay ninguna instrucción MSIL que se puede usar para tener acceso a la tabla de constantes en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="fb25f-194">There are no MSIL instructions that can be used to access the Constant table at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb25f-195">Para obtener más información sobre valores constantes y la tabla de constantes, consulte la documentación de ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="fb25f-195">For more information on constant values and the Constant table, see the ECMA Partition II documentation.</span></span> <span data-ttu-id="fb25f-196">La documentación está disponible en línea; vea [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) (Estándares de ECMA C# y Common Language Infrastructure) en MSDN y [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) (Estándar ECMA-335: Common Language Infrastructure [CLI]) en el sitio web de Ecma International.</span><span class="sxs-lookup"><span data-stu-id="fb25f-196">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fb25f-197">La tabla Constant en metadatos no administrados no contiene un valor constante para el campo actual.</span><span class="sxs-lookup"><span data-stu-id="fb25f-197">The Constant table in unmanaged metadata does not contain a constant value for the current field.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="fb25f-198">El tipo del valor no es uno de los tipos permitidos por la Common Language Specification (CLS).</span><span class="sxs-lookup"><span data-stu-id="fb25f-198">The type of the value is not one of the types permitted by the Common Language Specification (CLS).</span></span> <span data-ttu-id="fb25f-199">Vea la especificación de ECMA Partition II Metadata Logical Format: Other Structures, Element Types used in Signatures (Formato lógico de metadatos: Otras estructuras, tipos de elementos usados en las firmas).</span><span class="sxs-lookup"><span data-stu-id="fb25f-199">See the ECMA Partition II specification Metadata Logical Format: Other Structures, Element Types used in Signatures.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fb25f-200">No se establece el valor constante para el campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-200">The constant value for the field is not set.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetRequiredCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetRequiredCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetRequiredCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequiredCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetRequiredCustomModifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetRequiredCustomModifiers : unit -&gt; Type[]&#xA;override this.GetRequiredCustomModifiers : unit -&gt; Type[]" Usage="fieldInfo.GetRequiredCustomModifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb25f-201">Obtiene una matriz de tipos que identifican los modificadores personalizados necesarios de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="fb25f-201">Gets an array of types that identify the required custom modifiers of the property.</span></span></summary>
        <returns><span data-ttu-id="fb25f-202">Matriz de objetos <see cref="T:System.Type" /> que identifican los modificadores personalizados necesarios de la propiedad actual, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> o <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-202">An array of <see cref="T:System.Type" /> objects that identify the required custom modifiers of the current property, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-203">El <xref:System.Reflection.FieldInfo.GetOptionalCustomModifiers%2A> y <xref:System.Reflection.FieldInfo.GetRequiredCustomModifiers%2A> se proporcionan métodos para los diseñadores de compiladores administrados.</span><span class="sxs-lookup"><span data-stu-id="fb25f-203">The <xref:System.Reflection.FieldInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.FieldInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="fb25f-204">Para obtener más información sobre los modificadores personalizados, vea <xref:System.Runtime.CompilerServices.IsBoxed> y clases relacionadas del <xref:System.Runtime.CompilerServices> espacio de nombres y la especificación de metadatos en la documentación de ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="fb25f-204">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="fb25f-205">La documentación está disponible en línea; vea [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) (Estándares de ECMA C# y Common Language Infrastructure) en MSDN y [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) (Estándar ECMA-335: Common Language Infrastructure [CLI]) en el sitio web de Ecma International.</span><span class="sxs-lookup"><span data-stu-id="fb25f-205">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="fieldInfo.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValue (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj" Usage="fieldInfo.GetValue obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.GetValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fb25f-206">Objeto cuyo valor de campo se devolverá.</span><span class="sxs-lookup"><span data-stu-id="fb25f-206">The object whose field value will be returned.</span></span></param>
        <summary><span data-ttu-id="fb25f-207">Cuando se reemplaza en una clase derivada, devuelve el valor de un campo compatible con un objeto concreto.</span><span class="sxs-lookup"><span data-stu-id="fb25f-207">When overridden in a derived class, returns the value of a field supported by a given object.</span></span></summary>
        <returns><span data-ttu-id="fb25f-208">Objeto que contiene el valor del campo reflejado por esta instancia.</span><span class="sxs-lookup"><span data-stu-id="fb25f-208">An object containing the value of the field reflected by this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-209">Si el campo es estático, `obj` se omite.</span><span class="sxs-lookup"><span data-stu-id="fb25f-209">If the field is static, `obj` is ignored.</span></span> <span data-ttu-id="fb25f-210">Para los campos no estáticos, `obj` debe ser una instancia de una clase que hereda o declara el campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-210">For non-static fields, `obj` should be an instance of a class that inherits or declares the field.</span></span> <span data-ttu-id="fb25f-211">Tenga en cuenta que el tipo de devolución de `GetValue` es `Object`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-211">Note that the return type of `GetValue` is `Object`.</span></span> <span data-ttu-id="fb25f-212">Por ejemplo, si el campo contiene un valor booleano valor primitivo, una instancia de `Object` con el valor booleano correspondiente se devuelve el valor.</span><span class="sxs-lookup"><span data-stu-id="fb25f-212">For example, if the field holds a Boolean primitive value, an instance of `Object` with the appropriate Boolean value is returned.</span></span> <span data-ttu-id="fb25f-213">Antes de devolver el valor, `GetValue` comprueba si el usuario tiene permiso de acceso.</span><span class="sxs-lookup"><span data-stu-id="fb25f-213">Before returning the value, `GetValue` checks to see if the user has access permission.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb25f-214">Se omiten las restricciones de acceso para el código de plena confianza.</span><span class="sxs-lookup"><span data-stu-id="fb25f-214">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="fb25f-215">Es decir, propiedades, métodos, campos y constructores privados pueden tener acceso a y se invocan mediante reflexión siempre que el código es de plena confianza.</span><span class="sxs-lookup"><span data-stu-id="fb25f-215">That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb25f-216">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], este método puede utilizarse para tener acceso a miembros no públicos, si el llamador tiene concedidos <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> marca y si el conjunto de permisos de los miembros no públicos se restringe al llamador conceder el conjunto o un subconjunto en ella.</span><span class="sxs-lookup"><span data-stu-id="fb25f-216">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="fb25f-217">(Consulte [consideraciones de seguridad para la reflexión](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="fb25f-217">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="fb25f-218">Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="fb25f-218">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-219">En el ejemplo siguiente se usa el <xref:System.Reflection.FieldInfo.GetValue%2A> método para recuperar el valor de un campo estático.</span><span class="sxs-lookup"><span data-stu-id="fb25f-219">The following example uses the <xref:System.Reflection.FieldInfo.GetValue%2A> method to retrieve the value of a static field.</span></span> <span data-ttu-id="fb25f-220">Tenga en cuenta que el valor de la `obj` argumento es `null`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-220">Note that the value of the `obj` argument is `null`.</span></span>  
  
 [!code-cpp[getfldval#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetFldVal/CPP/getfldval.cpp#1)]
 [!code-csharp[getfldval#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetFldVal/CS/getfldval.cs#1)]
 [!code-vb[getfldval#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetFldVal/VB/getfldval.vb#1)]  
  
 <span data-ttu-id="fb25f-221">El ejemplo siguiente recupera una matriz de <xref:System.Reflection.FieldInfo> objetos que representan los campos de la `FieldsClass` tipo y, a continuación, llama a la <xref:System.Reflection.FieldInfo.GetValue%2A> para mostrar el valor de cada campo para el `fieldsInst` objeto.</span><span class="sxs-lookup"><span data-stu-id="fb25f-221">The following example retrieves an array of <xref:System.Reflection.FieldInfo> objects that represents the fields of the `FieldsClass` type, and then calls the <xref:System.Reflection.FieldInfo.GetValue%2A> to display the value of each field for the `fieldsInst` object.</span></span>  
  
 [!code-cpp[FieldInfo_GetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_GetValue/CPP/fieldinfo_getvalue.cpp#1)]
 [!code-csharp[FieldInfo_GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_GetValue/CS/fieldinfo_getvalue.cs#1)]
 [!code-vb[FieldInfo_GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_GetValue/VB/fieldinfo_getvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="fb25f-222">En <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET para aplicaciones de la Tienda Windows</see> o la <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Biblioteca de clases portable</see>, capture <see cref="T:System.Exception" /> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="fb25f-222">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="fb25f-223">El campo no es estático y <paramref name="obj" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-223">The field is non-static and <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fb25f-224">Un campo está marcado como literal, pero el campo no tiene uno de los tipos literales aceptados.</span><span class="sxs-lookup"><span data-stu-id="fb25f-224">A field is marked literal, but the field does not have one of the accepted literal types.</span></span></exception>
        <exception cref="T:System.FieldAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="fb25f-225">En <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET para aplicaciones de la Tienda Windows</see> o la <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Biblioteca de clases portable</see>, capture en su lugar la excepción de clase base, <see cref="T:System.MemberAccessException" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-225">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="fb25f-226">El autor de la llamada no tiene permiso para acceder a este campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-226">The caller does not have permission to access this field.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fb25f-227">La clase de <paramref name="obj" /> no declara ni hereda el método.</span><span class="sxs-lookup"><span data-stu-id="fb25f-227">The method is neither declared nor inherited by the class of <paramref name="obj" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fb25f-228">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-228">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fb25f-229">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-229">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetValueDirect">
      <MemberSignature Language="C#" Value="public virtual object GetValueDirect (TypedReference obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValueDirect(valuetype System.TypedReference obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValueDirect (obj As TypedReference) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValueDirect(TypedReference obj);" />
      <MemberSignature Language="F#" Value="abstract member GetValueDirect : TypedReference -&gt; obj&#xA;override this.GetValueDirect : TypedReference -&gt; obj" Usage="fieldInfo.GetValueDirect obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.GetValueDirect(System.TypedReference)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.TypedReference" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fb25f-230">Estructura <see cref="T:System.TypedReference" /> que encapsula un puntero administrado a una ubicación y una representación en tiempo de ejecución del tipo que debe almacenarse en esa ubicación.</span><span class="sxs-lookup"><span data-stu-id="fb25f-230">A <see cref="T:System.TypedReference" /> structure that encapsulates a managed pointer to a location and a runtime representation of the type that might be stored at that location.</span></span></param>
        <summary><span data-ttu-id="fb25f-231">Devuelve el valor de un campo compatible con un objeto dado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-231">Returns the value of a field supported by a given object.</span></span></summary>
        <returns><span data-ttu-id="fb25f-232"><see langword="Object" /> que contiene un valor de campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-232">An <see langword="Object" /> containing a field value.</span></span></returns>
        <remarks>To be added.</remarks>
        <altCompliant cref="M:System.Reflection.FieldInfo.GetValue(System.Object)" />
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fb25f-233">El autor de la llamada requiere la alternativa Common Language Specification (CLS), pero llama a este método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="fb25f-233">The caller requires the Common Language Specification (CLS) alternative, but called this method instead.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fb25f-234">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-234">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fb25f-235">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-235">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsAssembly">
      <MemberSignature Language="C#" Value="public bool IsAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAssembly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAssembly : bool" Usage="System.Reflection.FieldInfo.IsAssembly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.IsAssembly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-236">Obtiene un valor que indica si <see cref="F:System.Reflection.FieldAttributes.Assembly" /> describe la visibilidad posible de este campo; es decir, el campo es visible como mucho para otros tipos del mismo ensamblado y no es visible para los tipos derivados fuera del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-236">Gets a value indicating whether the potential visibility of this field is described by <see cref="F:System.Reflection.FieldAttributes.Assembly" />; that is, the field is visible at most to other types in the same assembly, and is not visible to derived types outside the assembly.</span></span></summary>
        <value><span data-ttu-id="fb25f-237"><see langword="true" /> si <see cref="F:System.Reflection.FieldAttributes.Assembly" /> describe exactamente la visibilidad de este campo; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-237"><see langword="true" /> if the visibility of this field is exactly described by <see cref="F:System.Reflection.FieldAttributes.Assembly" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-238">La visibilidad real de un campo está limitada por la visibilidad de su tipo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-238">The actual visibility of a field is limited by the visibility of its type.</span></span> <span data-ttu-id="fb25f-239">El <xref:System.Reflection.FieldInfo.IsAssembly%2A> podría ser propiedad `true` para un campo, pero si es un campo de un tipo anidado privado, a continuación, el campo no está visible fuera del tipo contenedor.</span><span class="sxs-lookup"><span data-stu-id="fb25f-239">The <xref:System.Reflection.FieldInfo.IsAssembly%2A> property might be `true` for a field, but if it is a field of a private nested type then the field is not visible outside the containing type.</span></span>  
  
 <span data-ttu-id="fb25f-240">Describe exactamente la visibilidad de un campo <xref:System.Reflection.FieldAttributes.Assembly?displayProperty=nameWithType> si es el único modificador de visibilidad `internal` (`Friend` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fb25f-240">The visibility of a field is exactly described by <xref:System.Reflection.FieldAttributes.Assembly?displayProperty=nameWithType> if the only visibility modifier is `internal` (`Friend` in Visual Basic).</span></span> <span data-ttu-id="fb25f-241">Esta propiedad es `false` para los campos que son `protected internal` en C# (`Protected Friend` en Visual Basic, `protected public` en C++); use el <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> propiedad para identificar esos campos.</span><span class="sxs-lookup"><span data-stu-id="fb25f-241">This property is `false` for fields that are `protected internal` in C# (`Protected Friend` in Visual Basic, `protected public` in C++); use the <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> property to identify such fields.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-242">El ejemplo de código siguiente define los campos con diferentes niveles de visibilidad y muestra los valores de sus <xref:System.Reflection.FieldInfo.IsAssembly%2A>, <xref:System.Reflection.FieldInfo.IsFamily%2A>, <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A>, y <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="fb25f-242">The following code example defines fields with varying levels of visibility, and displays the values of their <xref:System.Reflection.FieldInfo.IsAssembly%2A>, <xref:System.Reflection.FieldInfo.IsFamily%2A>, <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A>, and <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb25f-243">Los lenguajes Visual Basic y C# no pueden definir los campos con <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> visibilidad; que el nivel de acceso aparece solo en el ejemplo de C++.</span><span class="sxs-lookup"><span data-stu-id="fb25f-243">The Visual Basic and C# languages cannot define fields with <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> visibility; that access level appears only in the C++ example.</span></span>  
  
 [!code-cpp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="P:System.Reflection.FieldInfo.IsFamily" />
        <altmember cref="P:System.Reflection.FieldInfo.IsFamilyOrAssembly" />
        <altmember cref="P:System.Reflection.FieldInfo.IsFamilyAndAssembly" />
      </Docs>
    </Member>
    <Member MemberName="IsFamily">
      <MemberSignature Language="C#" Value="public bool IsFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamily" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamily As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamily { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFamily : bool" Usage="System.Reflection.FieldInfo.IsFamily" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.IsFamily</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-244">Obtiene un valor que indica si <see cref="F:System.Reflection.FieldAttributes.Family" /> describe la visibilidad de este campo; es decir, el campo sólo es visible dentro de su clase y clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fb25f-244">Gets a value indicating whether the visibility of this field is described by <see cref="F:System.Reflection.FieldAttributes.Family" />; that is, the field is visible only within its class and derived classes.</span></span></summary>
        <value><span data-ttu-id="fb25f-245">Es <see langword="true" /> si <see cref="F:System.Reflection.FieldAttributes.Family" /> describe exactamente el acceso a este campo; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-245"><see langword="true" /> if access to this field is exactly described by <see cref="F:System.Reflection.FieldAttributes.Family" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-246">Describe exactamente la visibilidad de un campo <xref:System.Reflection.FieldAttributes.Family?displayProperty=nameWithType> si es el único modificador de visibilidad `protected`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-246">The visibility of a field is exactly described by <xref:System.Reflection.FieldAttributes.Family?displayProperty=nameWithType> if the only visibility modifier is `protected`.</span></span> <span data-ttu-id="fb25f-247">Esta propiedad es `false` para los campos que son `protected internal` en C# (`Protected Friend` en Visual Basic, `protected public` en C++); use el <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> propiedad para identificar esos campos.</span><span class="sxs-lookup"><span data-stu-id="fb25f-247">This property is `false` for fields that are `protected internal` in C# (`Protected Friend` in Visual Basic, `protected public` in C++); use the <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> property to identify such fields.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-248">El ejemplo de código siguiente define los campos con diferentes niveles de visibilidad y muestra los valores de sus <xref:System.Reflection.FieldInfo.IsAssembly%2A>, <xref:System.Reflection.FieldInfo.IsFamily%2A>, <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A>, y <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="fb25f-248">The following code example defines fields with varying levels of visibility, and displays the values of their <xref:System.Reflection.FieldInfo.IsAssembly%2A>, <xref:System.Reflection.FieldInfo.IsFamily%2A>, <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A>, and <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb25f-249">Los lenguajes Visual Basic y C# no pueden definir los campos con <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> visibilidad; que el nivel de acceso aparece solo en el ejemplo de C++.</span><span class="sxs-lookup"><span data-stu-id="fb25f-249">The Visual Basic and C# languages cannot define fields with <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> visibility; that access level appears only in the C++ example.</span></span>  
  
 [!code-cpp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="T:System.Type" />
        <altmember cref="P:System.Reflection.FieldInfo.IsAssembly" />
        <altmember cref="P:System.Reflection.FieldInfo.IsFamilyOrAssembly" />
        <altmember cref="P:System.Reflection.FieldInfo.IsFamilyAndAssembly" />
      </Docs>
    </Member>
    <Member MemberName="IsFamilyAndAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyAndAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyAndAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsFamilyAndAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyAndAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyAndAssembly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFamilyAndAssembly : bool" Usage="System.Reflection.FieldInfo.IsFamilyAndAssembly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.IsFamilyAndAssembly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-250">Obtiene un valor que indica si <see cref="F:System.Reflection.FieldAttributes.FamANDAssem" /> describe la visibilidad de este campo; es decir, se puede tener acceso al campo desde clases derivadas, pero sólo si están en el mismo ensamblado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-250">Gets a value indicating whether the visibility of this field is described by <see cref="F:System.Reflection.FieldAttributes.FamANDAssem" />; that is, the field can be accessed from derived classes, but only if they are in the same assembly.</span></span></summary>
        <value><span data-ttu-id="fb25f-251">Es <see langword="true" /> si <see cref="F:System.Reflection.FieldAttributes.FamANDAssem" /> describe exactamente el acceso a este campo; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-251"><see langword="true" /> if access to this field is exactly described by <see cref="F:System.Reflection.FieldAttributes.FamANDAssem" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-252">Si tiene un campo <xref:System.Reflection.FieldAttributes.FamANDAssem> visibilidad de nivel, puede llamarla desde cualquier miembro de una clase derivada que se encuentra también en el mismo ensamblado, pero no de cualquier otro tipo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-252">If a field has <xref:System.Reflection.FieldAttributes.FamANDAssem> level visibility, it can be called from any member in a derived class that is also in the same assembly, but not from any other type.</span></span>  
  
 <span data-ttu-id="fb25f-253">Describe exactamente la visibilidad de un campo <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> si el modificador de visibilidad es `protected private` en C++.</span><span class="sxs-lookup"><span data-stu-id="fb25f-253">The visibility of a field is exactly described by <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> if the visibility modifier is `protected private` in C++.</span></span> <span data-ttu-id="fb25f-254">No se puede definir campos con esta visibilidad en Visual Basic o C#.</span><span class="sxs-lookup"><span data-stu-id="fb25f-254">Fields with this visibility cannot be defined in Visual Basic or C#.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-255">El ejemplo de código siguiente define los campos con diferentes niveles de visibilidad y muestra los valores de sus <xref:System.Reflection.FieldInfo.IsAssembly%2A>, <xref:System.Reflection.FieldInfo.IsFamily%2A>, <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A>, y <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="fb25f-255">The following code example defines fields with varying levels of visibility, and displays the values of their <xref:System.Reflection.FieldInfo.IsAssembly%2A>, <xref:System.Reflection.FieldInfo.IsFamily%2A>, <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A>, and <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb25f-256">Los lenguajes Visual Basic y C# no pueden definir los campos con <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> visibilidad; que el nivel de acceso aparece solo en el ejemplo de C++.</span><span class="sxs-lookup"><span data-stu-id="fb25f-256">The Visual Basic and C# languages cannot define fields with <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> visibility; that access level appears only in the C++ example.</span></span>  
  
 [!code-cpp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.FieldInfo.IsFamilyOrAssembly" />
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="P:System.Reflection.FieldInfo.IsAssembly" />
        <altmember cref="P:System.Reflection.FieldInfo.IsFamily" />
      </Docs>
    </Member>
    <Member MemberName="IsFamilyOrAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyOrAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyOrAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsFamilyOrAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyOrAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyOrAssembly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFamilyOrAssembly : bool" Usage="System.Reflection.FieldInfo.IsFamilyOrAssembly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.IsFamilyOrAssembly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-257">Obtiene un valor que indica si <see cref="F:System.Reflection.FieldAttributes.FamORAssem" /> describe la visibilidad posible de este campo; es decir, las clases derivadas pueden tener acceso al campo con independencia de dónde se encuentren, así como las clases del mismo ensamblado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-257">Gets a value indicating whether the potential visibility of this field is described by <see cref="F:System.Reflection.FieldAttributes.FamORAssem" />; that is, the field can be accessed by derived classes wherever they are, and by classes in the same assembly.</span></span></summary>
        <value><span data-ttu-id="fb25f-258">Es <see langword="true" /> si <see cref="F:System.Reflection.FieldAttributes.FamORAssem" /> describe exactamente el acceso a este campo; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-258"><see langword="true" /> if access to this field is exactly described by <see cref="F:System.Reflection.FieldAttributes.FamORAssem" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-259">Si tiene un campo <xref:System.Reflection.FieldAttributes.FamORAssem> visibilidad de nivel, puede llamarla desde cualquier miembro de una clase derivada o cualquier miembro del mismo ensamblado, pero no desde cualquier otro tipo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-259">If a field has <xref:System.Reflection.FieldAttributes.FamORAssem> level visibility, it can be called from any member in a derived class or any member in the same assembly, but not from any other type.</span></span>  
  
 <span data-ttu-id="fb25f-260">La visibilidad real de un campo está limitada por la visibilidad de su tipo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-260">The actual visibility of a field is limited by the visibility of its type.</span></span> <span data-ttu-id="fb25f-261">El <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> podría ser propiedad `true` para un campo, pero si es un campo de un tipo anidado privado, a continuación, el campo no está visible fuera del tipo contenedor.</span><span class="sxs-lookup"><span data-stu-id="fb25f-261">The <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> property might be `true` for a field, but if it is a field of a private nested type then the field is not visible outside the containing type.</span></span>  
  
 <span data-ttu-id="fb25f-262">Describe exactamente la visibilidad de un campo <xref:System.Reflection.FieldAttributes.FamORAssem?displayProperty=nameWithType> si el modificador de visibilidad es `protected internal` en C# (`Protected Friend` en Visual Basic, `protected public` en C++).</span><span class="sxs-lookup"><span data-stu-id="fb25f-262">The visibility of a field is exactly described by <xref:System.Reflection.FieldAttributes.FamORAssem?displayProperty=nameWithType> if the visibility modifier is `protected internal` in C# (`Protected Friend` in Visual Basic, `protected public` in C++).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-263">El ejemplo de código siguiente define los campos con diferentes niveles de visibilidad y muestra los valores de sus <xref:System.Reflection.FieldInfo.IsAssembly%2A>, <xref:System.Reflection.FieldInfo.IsFamily%2A>, <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A>, y <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="fb25f-263">The following code example defines fields with varying levels of visibility, and displays the values of their <xref:System.Reflection.FieldInfo.IsAssembly%2A>, <xref:System.Reflection.FieldInfo.IsFamily%2A>, <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A>, and <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb25f-264">Los lenguajes Visual Basic y C# no pueden definir los campos con <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> visibilidad; que el nivel de acceso aparece solo en el ejemplo de C++.</span><span class="sxs-lookup"><span data-stu-id="fb25f-264">The Visual Basic and C# languages cannot define fields with <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> visibility; that access level appears only in the C++ example.</span></span>  
  
 [!code-cpp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="P:System.Reflection.FieldInfo.IsAssembly" />
        <altmember cref="P:System.Reflection.FieldInfo.IsFamily" />
      </Docs>
    </Member>
    <Member MemberName="IsInitOnly">
      <MemberSignature Language="C#" Value="public bool IsInitOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitOnly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsInitOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitOnly : bool" Usage="System.Reflection.FieldInfo.IsInitOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.IsInitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-265">Obtiene un valor que indica si el campo sólo se puede establecer en el cuerpo del constructor.</span><span class="sxs-lookup"><span data-stu-id="fb25f-265">Gets a value indicating whether the field can only be set in the body of the constructor.</span></span></summary>
        <value><span data-ttu-id="fb25f-266">Es <see langword="true" /> si el campo tiene establecido el atributo <see langword="InitOnly" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-266"><see langword="true" /> if the field has the <see langword="InitOnly" /> attribute set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-267">Si el valor devuelto es `true`, solo se puede inicializar el campo y es de solo lectura a partir de entonces.</span><span class="sxs-lookup"><span data-stu-id="fb25f-267">If the returned value is `true`, the field can only be initialized, and is read-only thereafter.</span></span>  
  
 <span data-ttu-id="fb25f-268">Para obtener el `IsInitOnly` propiedad, obtenga primero la clase `Type`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-268">To get the `IsInitOnly` property, first get the class `Type`.</span></span> <span data-ttu-id="fb25f-269">Desde el `Type`, obtener el `FieldInfo`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-269">From the `Type`, get the `FieldInfo`.</span></span> <span data-ttu-id="fb25f-270">Desde el `FieldInfo`, obtener el `IsInitOnly` propiedad.</span><span class="sxs-lookup"><span data-stu-id="fb25f-270">From the `FieldInfo`, get the `IsInitOnly` property.</span></span> <span data-ttu-id="fb25f-271">Para obtener acceso a un campo no público, combinar <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> con uno o ambos <xref:System.Reflection.BindingFlags.Static?displayProperty=nameWithType> y <xref:System.Reflection.BindingFlags.Instance?displayProperty=nameWithType> en el `GetField` método.</span><span class="sxs-lookup"><span data-stu-id="fb25f-271">To access a non-public field, combine <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> with either or both of <xref:System.Reflection.BindingFlags.Static?displayProperty=nameWithType> and <xref:System.Reflection.BindingFlags.Instance?displayProperty=nameWithType> in the `GetField` method.</span></span>  
  
 <span data-ttu-id="fb25f-272">El `IsInitOnly` propiedad se establece cuando el <xref:System.Reflection.FieldAttributes.InitOnly?displayProperty=nameWithType> está establecido.</span><span class="sxs-lookup"><span data-stu-id="fb25f-272">The `IsInitOnly` property is set when the <xref:System.Reflection.FieldAttributes.InitOnly?displayProperty=nameWithType> attribute is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-273">En el ejemplo siguiente, se crean dos campos.</span><span class="sxs-lookup"><span data-stu-id="fb25f-273">In the following example, two fields are created.</span></span> <span data-ttu-id="fb25f-274">El segundo campo es de solo lectura, no tener ningún descriptor de acceso set, y `IsInitOnly` está establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-274">The second field is read-only, having no set accessor, and `IsInitOnly` is set to `true`.</span></span>  
  
 [!code-cpp[Classic FieldInfo.IsInitOnly Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.IsInitOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.IsInitOnly Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.IsInitOnly Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.IsInitOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.IsInitOnly Example/VB/source.vb#1)]  
  
 <span data-ttu-id="fb25f-275">Este código genera el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="fb25f-275">This code produces the following output:</span></span>  
  
 <span data-ttu-id="fb25f-276">Reflection.FieldInfo</span><span class="sxs-lookup"><span data-stu-id="fb25f-276">Reflection.FieldInfo</span></span>  
  
 <span data-ttu-id="fb25f-277">Myfielda - A - modificado, IsInitOnly = False</span><span class="sxs-lookup"><span data-stu-id="fb25f-277">Myfielda - A- modified, IsInitOnly = False</span></span>  
  
 <span data-ttu-id="fb25f-278">Myfieldb - campo de solo lectura de B, IsInitOnly = True</span><span class="sxs-lookup"><span data-stu-id="fb25f-278">Myfieldb - B readonly field, IsInitOnly = True</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="IsLiteral">
      <MemberSignature Language="C#" Value="public bool IsLiteral { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLiteral" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsLiteral" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLiteral As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLiteral { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLiteral : bool" Usage="System.Reflection.FieldInfo.IsLiteral" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.IsLiteral</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-279">Obtiene un valor que indica si el valor se escribe en tiempo de compilación y no puede cambiarse.</span><span class="sxs-lookup"><span data-stu-id="fb25f-279">Gets a value indicating whether the value is written at compile time and cannot be changed.</span></span></summary>
        <value><span data-ttu-id="fb25f-280">Es <see langword="true" /> si el campo tiene establecido el atributo <see langword="Literal" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-280"><see langword="true" /> if the field has the <see langword="Literal" /> attribute set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-281">El `IsLiteral` propiedad se establece cuando el `FieldAttributes.Literal` está establecido.</span><span class="sxs-lookup"><span data-stu-id="fb25f-281">The `IsLiteral` property is set when the `FieldAttributes.Literal` attribute is set.</span></span> <span data-ttu-id="fb25f-282">Si se establece este atributo, el campo no se puede cambiar y es constante.</span><span class="sxs-lookup"><span data-stu-id="fb25f-282">If this attribute is set, the field cannot be changed and is constant.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IsNotSerialized">
      <MemberSignature Language="C#" Value="public bool IsNotSerialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNotSerialized" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsNotSerialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNotSerialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNotSerialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNotSerialized : bool" Usage="System.Reflection.FieldInfo.IsNotSerialized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.IsNotSerialized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-283">Obtiene un valor que indica si este campo dispone del atributo <see langword="NotSerialized" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-283">Gets a value indicating whether this field has the <see langword="NotSerialized" /> attribute.</span></span></summary>
        <value><span data-ttu-id="fb25f-284">Es <see langword="true" /> si el campo tiene establecido el atributo <see langword="NotSerialized" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-284"><see langword="true" /> if the field has the <see langword="NotSerialized" /> attribute set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-285">El `IsNotSerialized` propiedad devuelve `true` cuando el campo se marca con el `FieldAttributes.NotSerialized` marca.</span><span class="sxs-lookup"><span data-stu-id="fb25f-285">The `IsNotSerialized` property returns `true` when the field is marked with the `FieldAttributes.NotSerialized` flag.</span></span> <span data-ttu-id="fb25f-286">Cuando esta marca se establece en un campo, indica que el campo no tiene que se puede serializar cuando el tipo es remoto.</span><span class="sxs-lookup"><span data-stu-id="fb25f-286">When this flag is set on a field, it indicates that the field does not have to be serialized when the type is remoted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-287">El ejemplo siguiente se obtiene la información de los campos de MyClass, determina si los campos se pueden serializar y muestra los resultados.</span><span class="sxs-lookup"><span data-stu-id="fb25f-287">The following example gets the field information of the fields of MyClass, determines if the fields can be serialized, and displays the results.</span></span>  
  
 [!code-cpp[FieldInfo_IsNotSerialized#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_IsNotSerialized/CPP/fieldinfo_isnotserialized.cpp#1)]
 [!code-csharp[FieldInfo_IsNotSerialized#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_IsNotSerialized/CS/fieldinfo_isnotserialized.cs#1)]
 [!code-vb[FieldInfo_IsNotSerialized#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_IsNotSerialized/VB/fieldinfo_isnotserialized.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IsPinvokeImpl">
      <MemberSignature Language="C#" Value="public bool IsPinvokeImpl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPinvokeImpl" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsPinvokeImpl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPinvokeImpl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPinvokeImpl { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPinvokeImpl : bool" Usage="System.Reflection.FieldInfo.IsPinvokeImpl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.IsPinvokeImpl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-288">Obtiene un valor que indica si el atributo <see langword="PinvokeImpl" /> correspondiente está definido en <see cref="T:System.Reflection.FieldAttributes" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-288">Gets a value indicating whether the corresponding <see langword="PinvokeImpl" /> attribute is set in <see cref="T:System.Reflection.FieldAttributes" />.</span></span></summary>
        <value><span data-ttu-id="fb25f-289"><see langword="true" /> si <see langword="PinvokeImpl" /> se encuentra establecido en <see cref="T:System.Reflection.FieldAttributes" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-289"><see langword="true" /> if the <see langword="PinvokeImpl" /> attribute is set in <see cref="T:System.Reflection.FieldAttributes" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fb25f-290">El ejemplo siguiente se crea una clase y muestra el nombre de campo y <xref:System.Reflection.FieldInfo.IsPinvokeImpl%2A> valor de propiedad del campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-290">The following example creates a class and displays the name, field and <xref:System.Reflection.FieldInfo.IsPinvokeImpl%2A> property value of the field.</span></span>  
  
 [!code-cpp[FieldInfo_IsPInvokeImpl#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_IsPInvokeImpl/CPP/fieldinfo_ispinvokeimpl.cpp#1)]
 [!code-csharp[FieldInfo_IsPInvokeImpl#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_IsPInvokeImpl/CS/fieldinfo_ispinvokeimpl.cs#1)]
 [!code-vb[FieldInfo_IsPInvokeImpl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_IsPInvokeImpl/VB/fieldinfo_ispinvokeimpl.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IsPrivate">
      <MemberSignature Language="C#" Value="public bool IsPrivate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivate" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsPrivate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrivate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrivate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrivate : bool" Usage="System.Reflection.FieldInfo.IsPrivate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.IsPrivate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-291">Obtiene un valor que indica si el campo es privado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-291">Gets a value indicating whether the field is private.</span></span></summary>
        <value><span data-ttu-id="fb25f-292"><see langword="true" /> si el campo es privado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-292"><see langword="true" /> if the field is private; otherwise; <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-293">Los campos privados solo son accesibles desde las funciones miembro.</span><span class="sxs-lookup"><span data-stu-id="fb25f-293">Private fields are accessible only from member functions.</span></span>  
  
 <span data-ttu-id="fb25f-294">El `IsPrivate` propiedad se establece cuando el `FieldAttributes.Private` está establecido.</span><span class="sxs-lookup"><span data-stu-id="fb25f-294">The `IsPrivate` property is set when the `FieldAttributes.Private` attribute is set.</span></span>  
  
 <span data-ttu-id="fb25f-295">Para obtener el `IsPrivate` propiedad, obtenga primero la clase `Type`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-295">To get the `IsPrivate` property, first get the class `Type`.</span></span> <span data-ttu-id="fb25f-296">Desde el `Type`, obtener el `FieldInfo`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-296">From the `Type`, get the `FieldInfo`.</span></span> <span data-ttu-id="fb25f-297">Desde el `FieldInfo`, obtener el `IsPrivate` propiedad.</span><span class="sxs-lookup"><span data-stu-id="fb25f-297">From the `FieldInfo`, get the `IsPrivate` property.</span></span> <span data-ttu-id="fb25f-298">Para acceder a un campo no público, establezca el `BindingFlags` a `NonPublic`y `Static` o `Instance` en el `GetField` método.</span><span class="sxs-lookup"><span data-stu-id="fb25f-298">To access a non-public field, set the `BindingFlags` to `NonPublic`, and either `Static` or `Instance` in the `GetField` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-299">El ejemplo siguiente devuelve un valor que indica si el campo de la clase es privado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-299">The following example returns a value indicating whether or not the field of the class is private.</span></span>  
  
 [!code-cpp[FieldInfo_IsPrivate#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_IsPrivate/CPP/fieldinfo_isprivate.cpp#1)]
 [!code-csharp[FieldInfo_IsPrivate#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_IsPrivate/CS/fieldinfo_isprivate.cs#1)]
 [!code-vb[FieldInfo_IsPrivate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_IsPrivate/VB/fieldinfo_isprivate.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Reflection.FieldInfo.IsPublic" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.IsPublic</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-300">Obtiene un valor que indica si el campo es público.</span><span class="sxs-lookup"><span data-stu-id="fb25f-300">Gets a value indicating whether the field is public.</span></span></summary>
        <value><span data-ttu-id="fb25f-301"><see langword="true" /> si este campo es público; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-301"><see langword="true" /> if this field is public; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-302">Los campos públicos son accesibles en todas partes que sus clases correspondientes sean visibles.</span><span class="sxs-lookup"><span data-stu-id="fb25f-302">Public fields are accessible everywhere their corresponding classes are visible.</span></span>  
  
 <span data-ttu-id="fb25f-303">El `IsPublic` propiedad se establece cuando el `FieldAttributes.Public` está establecido.</span><span class="sxs-lookup"><span data-stu-id="fb25f-303">The `IsPublic` property is set when the `FieldAttributes.Public` attribute is set.</span></span>  
  
 <span data-ttu-id="fb25f-304">Para obtener el `IsPublic` propiedad, obtenga primero la clase `Type`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-304">To get the `IsPublic` property, first get the class `Type`.</span></span> <span data-ttu-id="fb25f-305">Desde el `Type`, obtener el `FieldInfo`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-305">From the `Type`, get the `FieldInfo`.</span></span> <span data-ttu-id="fb25f-306">Desde el `FieldInfo`, obtener el `IsPublic` propiedad.</span><span class="sxs-lookup"><span data-stu-id="fb25f-306">From the `FieldInfo`, get the `IsPublic` property.</span></span> <span data-ttu-id="fb25f-307">Si el campo no es público, está protegido y no se puede obtener acceso inmediato.</span><span class="sxs-lookup"><span data-stu-id="fb25f-307">If the field is other than public, it is protected and cannot be readily accessed.</span></span> <span data-ttu-id="fb25f-308">Para acceder a un campo no público, establezca el `BindingFlags` a `NonPublic`, especifique `BindingFlags.Instance` o `BindingFlags.Static`y úsela para la `GetField` método.</span><span class="sxs-lookup"><span data-stu-id="fb25f-308">To access a nonpublic field, set the `BindingFlags` to `NonPublic`, specify either `BindingFlags.Instance` or `BindingFlags.Static`, and use this for the `GetField` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-309">El ejemplo siguiente devuelve un valor que indica si el campo de la clase es público o privado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-309">The following example returns a value indicating whether or not the field of the class is public or private.</span></span>  
  
 [!code-cpp[Classic FieldInfo.IsPublic Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.IsPublic Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.IsPublic Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.IsPublic Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.IsPublic Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.IsPublic Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="IsSecurityCritical">
      <MemberSignature Language="C#" Value="public virtual bool IsSecurityCritical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecurityCritical" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsSecurityCritical" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSecurityCritical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecurityCritical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityCritical : bool" Usage="System.Reflection.FieldInfo.IsSecurityCritical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-310">Obtiene un valor que indica si el campo actual es crítico para la seguridad o crítico para la seguridad y disponible desde código transparente en el nivel de confianza actual.</span><span class="sxs-lookup"><span data-stu-id="fb25f-310">Gets a value that indicates whether the current field is security-critical or security-safe-critical at the current trust level.</span></span></summary>
        <value><span data-ttu-id="fb25f-311"><see langword="true" /> si el campo actual es crítico para la seguridad o crítico para la seguridad y disponible desde código transparente en el nivel de confianza actual; <see langword="false" /> si es transparente.</span><span class="sxs-lookup"><span data-stu-id="fb25f-311"><see langword="true" /> if the current field is security-critical or security-safe-critical at the current trust level; <see langword="false" /> if it is transparent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-312">El <xref:System.Reflection.FieldInfo.IsSecurityCritical%2A>, <xref:System.Reflection.FieldInfo.IsSecuritySafeCritical%2A>, y <xref:System.Reflection.FieldInfo.IsSecurityTransparent%2A> notifican el nivel de transparencia del campo en su nivel de confianza actual, determinado por common language runtime (CLR).</span><span class="sxs-lookup"><span data-stu-id="fb25f-312">The <xref:System.Reflection.FieldInfo.IsSecurityCritical%2A>, <xref:System.Reflection.FieldInfo.IsSecuritySafeCritical%2A>, and <xref:System.Reflection.FieldInfo.IsSecurityTransparent%2A> properties report the transparency level of the field at its current trust level, as determined by the common language runtime (CLR).</span></span> <span data-ttu-id="fb25f-313">Las combinaciones de estas propiedades se muestran en la tabla siguiente:</span><span class="sxs-lookup"><span data-stu-id="fb25f-313">The combinations of these properties are shown in the following table:</span></span>  
  
|<span data-ttu-id="fb25f-314">Nivel de seguridad</span><span class="sxs-lookup"><span data-stu-id="fb25f-314">Security level</span></span>|<span data-ttu-id="fb25f-315">IsSecurityCritical</span><span class="sxs-lookup"><span data-stu-id="fb25f-315">IsSecurityCritical</span></span>|<span data-ttu-id="fb25f-316">IsSecuritySafeCritical</span><span class="sxs-lookup"><span data-stu-id="fb25f-316">IsSecuritySafeCritical</span></span>|<span data-ttu-id="fb25f-317">IsSecurityTransparent</span><span class="sxs-lookup"><span data-stu-id="fb25f-317">IsSecurityTransparent</span></span>|  
|--------------------|------------------------|----------------------------|---------------------------|  
|<span data-ttu-id="fb25f-318">Crítico</span><span class="sxs-lookup"><span data-stu-id="fb25f-318">Critical</span></span>|`true`|`false`|`false`|  
|<span data-ttu-id="fb25f-319">Crítico seguro</span><span class="sxs-lookup"><span data-stu-id="fb25f-319">Safe critical</span></span>|`true`|`true`|`false`|  
|<span data-ttu-id="fb25f-320">Transparente</span><span class="sxs-lookup"><span data-stu-id="fb25f-320">Transparent</span></span>|`false`|`false`|`true`|  
  
 <span data-ttu-id="fb25f-321">Uso de estas propiedades es mucho más fácil que examinar las anotaciones de seguridad de un ensamblado y sus tipos y miembros, comprobar el nivel de confianza actual e intentar duplicar las reglas del runtime.</span><span class="sxs-lookup"><span data-stu-id="fb25f-321">Using these properties is much simpler than examining the security annotations of an assembly and its types and members, checking the current trust level, and attempting to duplicate the runtime's rules.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fb25f-322">Para los ensamblados de confianza parcial, el valor de esta propiedad depende del nivel de confianza actual del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-322">For partial-trust assemblies, the value of this property depends on the current trust level of the assembly.</span></span> <span data-ttu-id="fb25f-323">Si el ensamblado se carga en un dominio de aplicación de confianza parcial (por ejemplo, en un dominio de aplicación en espacio aislado), el runtime omite las anotaciones de seguridad del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-323">If the assembly is loaded into a partially trusted application domain (for example, into a sandboxed application domain), then the runtime ignores the security annotations of the assembly.</span></span> <span data-ttu-id="fb25f-324">El ensamblado y todos sus tipos se tratan como transparentes.</span><span class="sxs-lookup"><span data-stu-id="fb25f-324">The assembly and all its types are treated as transparent.</span></span> <span data-ttu-id="fb25f-325">El tiempo de ejecución presta atención a las anotaciones de seguridad de un ensamblado de confianza parcial sólo cuando ese ensamblado se carga en un dominio de aplicación de plena confianza (por ejemplo, en el dominio de aplicación predeterminado de una aplicación de escritorio).</span><span class="sxs-lookup"><span data-stu-id="fb25f-325">The runtime pays attention to the security annotations of a partial-trust assembly only when that assembly is loaded into a fully trusted application domain (for example, into the default application domain of a desktop application).</span></span> <span data-ttu-id="fb25f-326">Por el contrario, un ensamblado de confianza (es decir, un ensamblado con nombre seguro que se instala en la caché global de ensamblados) siempre se carga con plena confianza, independientemente del nivel de confianza del dominio de aplicación, por lo que su nivel de confianza actual siempre es de plena confianza.</span><span class="sxs-lookup"><span data-stu-id="fb25f-326">By contrast, a trusted assembly (that is, a strong-named assembly that is installed in the global assembly cache) is always loaded with full trust regardless of the trust level of the application domain, so its current trust level is always fully trusted.</span></span> <span data-ttu-id="fb25f-327">Puede determinar los niveles de confianza actuales de ensamblados y dominios de aplicación mediante el <xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=nameWithType> y <xref:System.AppDomain.IsFullyTrusted%2A?displayProperty=nameWithType> propiedades.</span><span class="sxs-lookup"><span data-stu-id="fb25f-327">You can determine the current trust levels of assemblies and application domains by using the <xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=nameWithType> and <xref:System.AppDomain.IsFullyTrusted%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="fb25f-328">Para obtener más información sobre la reflexión y transparencia, consulte [consideraciones de seguridad para la reflexión](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).</span><span class="sxs-lookup"><span data-stu-id="fb25f-328">For more information about reflection and transparency, see [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).</span></span> <span data-ttu-id="fb25f-329">Para obtener información acerca de la transparencia, consulte [cambios de seguridad](~/docs/framework/security/security-changes.md).</span><span class="sxs-lookup"><span data-stu-id="fb25f-329">For information about transparency, see [Security Changes](~/docs/framework/security/security-changes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.FieldInfo.IsSecuritySafeCritical" />
        <altmember cref="P:System.Reflection.FieldInfo.IsSecurityTransparent" />
      </Docs>
    </Member>
    <Member MemberName="IsSecuritySafeCritical">
      <MemberSignature Language="C#" Value="public virtual bool IsSecuritySafeCritical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecuritySafeCritical" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsSecuritySafeCritical" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSecuritySafeCritical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecuritySafeCritical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecuritySafeCritical : bool" Usage="System.Reflection.FieldInfo.IsSecuritySafeCritical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-330">Obtiene un valor que indica si el campo actual es crítico para la seguridad y disponible desde código transparente en el nivel de confianza actual.</span><span class="sxs-lookup"><span data-stu-id="fb25f-330">Gets a value that indicates whether the current field is security-safe-critical at the current trust level.</span></span></summary>
        <value><span data-ttu-id="fb25f-331"><see langword="true" /> si el campo actual es crítico para la seguridad y disponible desde código transparente en el nivel de confianza actual; <see langword="false" /> si es crítico para la seguridad o transparente.</span><span class="sxs-lookup"><span data-stu-id="fb25f-331"><see langword="true" /> if the current field is security-safe-critical at the current trust level; <see langword="false" /> if it is security-critical or transparent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-332">El <xref:System.Reflection.FieldInfo.IsSecurityCritical%2A>, <xref:System.Reflection.FieldInfo.IsSecuritySafeCritical%2A>, y <xref:System.Reflection.FieldInfo.IsSecurityTransparent%2A> notifican el nivel de transparencia del campo en su nivel de confianza actual, determinado por common language runtime (CLR).</span><span class="sxs-lookup"><span data-stu-id="fb25f-332">The <xref:System.Reflection.FieldInfo.IsSecurityCritical%2A>, <xref:System.Reflection.FieldInfo.IsSecuritySafeCritical%2A>, and <xref:System.Reflection.FieldInfo.IsSecurityTransparent%2A> properties report the transparency level of the field at its current trust level, as determined by the common language runtime (CLR).</span></span> <span data-ttu-id="fb25f-333">Las combinaciones de estas propiedades se muestran en la tabla siguiente:</span><span class="sxs-lookup"><span data-stu-id="fb25f-333">The combinations of these properties are shown in the following table:</span></span>  
  
|<span data-ttu-id="fb25f-334">Nivel de seguridad</span><span class="sxs-lookup"><span data-stu-id="fb25f-334">Security level</span></span>|<span data-ttu-id="fb25f-335">IsSecurityCritical</span><span class="sxs-lookup"><span data-stu-id="fb25f-335">IsSecurityCritical</span></span>|<span data-ttu-id="fb25f-336">IsSecuritySafeCritical</span><span class="sxs-lookup"><span data-stu-id="fb25f-336">IsSecuritySafeCritical</span></span>|<span data-ttu-id="fb25f-337">IsSecurityTransparent</span><span class="sxs-lookup"><span data-stu-id="fb25f-337">IsSecurityTransparent</span></span>|  
|--------------------|------------------------|----------------------------|---------------------------|  
|<span data-ttu-id="fb25f-338">Crítico</span><span class="sxs-lookup"><span data-stu-id="fb25f-338">Critical</span></span>|`true`|`false`|`false`|  
|<span data-ttu-id="fb25f-339">Crítico seguro</span><span class="sxs-lookup"><span data-stu-id="fb25f-339">Safe critical</span></span>|`true`|`true`|`false`|  
|<span data-ttu-id="fb25f-340">Transparente</span><span class="sxs-lookup"><span data-stu-id="fb25f-340">Transparent</span></span>|`false`|`false`|`true`|  
  
 <span data-ttu-id="fb25f-341">Uso de estas propiedades es mucho más fácil que examinar las anotaciones de seguridad de un ensamblado y sus tipos y miembros, comprobar el nivel de confianza actual e intentar duplicar las reglas del runtime.</span><span class="sxs-lookup"><span data-stu-id="fb25f-341">Using these properties is much simpler than examining the security annotations of an assembly and its types and members, checking the current trust level, and attempting to duplicate the runtime's rules.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fb25f-342">Para los ensamblados de confianza parcial, el valor de esta propiedad depende del nivel de confianza actual del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-342">For partial-trust assemblies, the value of this property depends on the current trust level of the assembly.</span></span> <span data-ttu-id="fb25f-343">Si el ensamblado se carga en un dominio de aplicación de confianza parcial (por ejemplo, en un dominio de aplicación en espacio aislado), el runtime omite las anotaciones de seguridad del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-343">If the assembly is loaded into a partially trusted application domain (for example, into a sandboxed application domain), then the runtime ignores the security annotations of the assembly.</span></span> <span data-ttu-id="fb25f-344">El ensamblado y todos sus tipos se tratan como transparentes.</span><span class="sxs-lookup"><span data-stu-id="fb25f-344">The assembly and all its types are treated as transparent.</span></span> <span data-ttu-id="fb25f-345">El tiempo de ejecución presta atención a las anotaciones de seguridad de un ensamblado de confianza parcial sólo cuando ese ensamblado se carga en un dominio de aplicación de plena confianza (por ejemplo, en el dominio de aplicación predeterminado de una aplicación de escritorio).</span><span class="sxs-lookup"><span data-stu-id="fb25f-345">The runtime pays attention to the security annotations of a partial-trust assembly only when that assembly is loaded into a fully trusted application domain (for example, into the default application domain of a desktop application).</span></span> <span data-ttu-id="fb25f-346">Por el contrario, un ensamblado de confianza (es decir, un ensamblado con nombre seguro que se instala en la caché global de ensamblados) siempre se carga con plena confianza, independientemente del nivel de confianza del dominio de aplicación, por lo que su nivel de confianza actual siempre es de plena confianza.</span><span class="sxs-lookup"><span data-stu-id="fb25f-346">By contrast, a trusted assembly (that is, a strong-named assembly that is installed in the global assembly cache) is always loaded with full trust regardless of the trust level of the application domain, so its current trust level is always fully trusted.</span></span> <span data-ttu-id="fb25f-347">Puede determinar los niveles de confianza actuales de ensamblados y dominios de aplicación mediante el <xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=nameWithType> y <xref:System.AppDomain.IsFullyTrusted%2A?displayProperty=nameWithType> propiedades.</span><span class="sxs-lookup"><span data-stu-id="fb25f-347">You can determine the current trust levels of assemblies and application domains by using the <xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=nameWithType> and <xref:System.AppDomain.IsFullyTrusted%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="fb25f-348">Para obtener más información sobre la reflexión y transparencia, consulte [consideraciones de seguridad para la reflexión](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).</span><span class="sxs-lookup"><span data-stu-id="fb25f-348">For more information about reflection and transparency, see [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).</span></span> <span data-ttu-id="fb25f-349">Para obtener información acerca de la transparencia, consulte [cambios de seguridad](~/docs/framework/security/security-changes.md).</span><span class="sxs-lookup"><span data-stu-id="fb25f-349">For information about transparency, see [Security Changes](~/docs/framework/security/security-changes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.FieldInfo.IsSecurityCritical" />
        <altmember cref="P:System.Reflection.FieldInfo.IsSecurityTransparent" />
      </Docs>
    </Member>
    <Member MemberName="IsSecurityTransparent">
      <MemberSignature Language="C#" Value="public virtual bool IsSecurityTransparent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecurityTransparent" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsSecurityTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSecurityTransparent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecurityTransparent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityTransparent : bool" Usage="System.Reflection.FieldInfo.IsSecurityTransparent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-350">Obtiene un valor que indica si el campo actual es transparente en el nivel de confianza actual.</span><span class="sxs-lookup"><span data-stu-id="fb25f-350">Gets a value that indicates whether the current field is transparent at the current trust level.</span></span></summary>
        <value><span data-ttu-id="fb25f-351">Es <see langword="true" /> si el campo es transparente para la seguridad en el nivel de confianza actual; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-351"><see langword="true" /> if the field is security-transparent at the current trust level; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-352">El <xref:System.Reflection.FieldInfo.IsSecurityCritical%2A>, <xref:System.Reflection.FieldInfo.IsSecuritySafeCritical%2A>, y <xref:System.Reflection.FieldInfo.IsSecurityTransparent%2A> notifican el nivel de transparencia del campo en su nivel de confianza actual, determinado por common language runtime (CLR).</span><span class="sxs-lookup"><span data-stu-id="fb25f-352">The <xref:System.Reflection.FieldInfo.IsSecurityCritical%2A>, <xref:System.Reflection.FieldInfo.IsSecuritySafeCritical%2A>, and <xref:System.Reflection.FieldInfo.IsSecurityTransparent%2A> properties report the transparency level of the field at its current trust level, as determined by the common language runtime (CLR).</span></span> <span data-ttu-id="fb25f-353">Las combinaciones de estas propiedades se muestran en la tabla siguiente:</span><span class="sxs-lookup"><span data-stu-id="fb25f-353">The combinations of these properties are shown in the following table:</span></span>  
  
|<span data-ttu-id="fb25f-354">Nivel de seguridad</span><span class="sxs-lookup"><span data-stu-id="fb25f-354">Security level</span></span>|<span data-ttu-id="fb25f-355">IsSecurityCritical</span><span class="sxs-lookup"><span data-stu-id="fb25f-355">IsSecurityCritical</span></span>|<span data-ttu-id="fb25f-356">IsSecuritySafeCritical</span><span class="sxs-lookup"><span data-stu-id="fb25f-356">IsSecuritySafeCritical</span></span>|<span data-ttu-id="fb25f-357">IsSecurityTransparent</span><span class="sxs-lookup"><span data-stu-id="fb25f-357">IsSecurityTransparent</span></span>|  
|--------------------|------------------------|----------------------------|---------------------------|  
|<span data-ttu-id="fb25f-358">Crítico</span><span class="sxs-lookup"><span data-stu-id="fb25f-358">Critical</span></span>|`true`|`false`|`false`|  
|<span data-ttu-id="fb25f-359">Crítico seguro</span><span class="sxs-lookup"><span data-stu-id="fb25f-359">Safe critical</span></span>|`true`|`true`|`false`|  
|<span data-ttu-id="fb25f-360">Transparente</span><span class="sxs-lookup"><span data-stu-id="fb25f-360">Transparent</span></span>|`false`|`false`|`true`|  
  
 <span data-ttu-id="fb25f-361">Uso de estas propiedades es mucho más fácil que examinar las anotaciones de seguridad de un ensamblado y sus tipos y miembros, comprobar el nivel de confianza actual e intentar duplicar las reglas del runtime.</span><span class="sxs-lookup"><span data-stu-id="fb25f-361">Using these properties is much simpler than examining the security annotations of an assembly and its types and members, checking the current trust level, and attempting to duplicate the runtime's rules.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fb25f-362">Para los ensamblados de confianza parcial, el valor de esta propiedad depende del nivel de confianza actual del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-362">For partial-trust assemblies, the value of this property depends on the current trust level of the assembly.</span></span> <span data-ttu-id="fb25f-363">Si el ensamblado se carga en un dominio de aplicación de confianza parcial (por ejemplo, en un dominio de aplicación en espacio aislado), el runtime omite las anotaciones de seguridad del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-363">If the assembly is loaded into a partially trusted application domain (for example, into a sandboxed application domain), then the runtime ignores the security annotations of the assembly.</span></span> <span data-ttu-id="fb25f-364">El ensamblado y todos sus tipos se tratan como transparentes.</span><span class="sxs-lookup"><span data-stu-id="fb25f-364">The assembly and all its types are treated as transparent.</span></span> <span data-ttu-id="fb25f-365">El tiempo de ejecución presta atención a las anotaciones de seguridad de un ensamblado de confianza parcial sólo cuando ese ensamblado se carga en un dominio de aplicación de plena confianza (por ejemplo, en el dominio de aplicación predeterminado de una aplicación de escritorio).</span><span class="sxs-lookup"><span data-stu-id="fb25f-365">The runtime pays attention to the security annotations of a partial-trust assembly only when that assembly is loaded into a fully trusted application domain (for example, into the default application domain of a desktop application).</span></span> <span data-ttu-id="fb25f-366">Por el contrario, un ensamblado de confianza (es decir, un ensamblado con nombre seguro que se instala en la caché global de ensamblados) siempre se carga con plena confianza, independientemente del nivel de confianza del dominio de aplicación, por lo que su nivel de confianza actual siempre es de plena confianza.</span><span class="sxs-lookup"><span data-stu-id="fb25f-366">By contrast, a trusted assembly (that is, a strong-named assembly that is installed in the global assembly cache) is always loaded with full trust regardless of the trust level of the application domain, so its current trust level is always fully trusted.</span></span> <span data-ttu-id="fb25f-367">Puede determinar los niveles de confianza actuales de ensamblados y dominios de aplicación mediante el <xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=nameWithType> y <xref:System.AppDomain.IsFullyTrusted%2A?displayProperty=nameWithType> propiedades.</span><span class="sxs-lookup"><span data-stu-id="fb25f-367">You can determine the current trust levels of assemblies and application domains by using the <xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=nameWithType> and <xref:System.AppDomain.IsFullyTrusted%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="fb25f-368">Para obtener más información sobre la reflexión y transparencia, consulte [consideraciones de seguridad para la reflexión](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).</span><span class="sxs-lookup"><span data-stu-id="fb25f-368">For more information about reflection and transparency, see [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).</span></span> <span data-ttu-id="fb25f-369">Para obtener información acerca de la transparencia, consulte [cambios de seguridad](~/docs/framework/security/security-changes.md).</span><span class="sxs-lookup"><span data-stu-id="fb25f-369">For information about transparency, see [Security Changes](~/docs/framework/security/security-changes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.FieldInfo.IsSecurityCritical" />
        <altmember cref="P:System.Reflection.FieldInfo.IsSecuritySafeCritical" />
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpecialName : bool" Usage="System.Reflection.FieldInfo.IsSpecialName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.IsSpecialName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-370">Obtiene un valor que indica si el atributo <see langword="SpecialName" /> correspondiente está definido en el enumerador <see cref="T:System.Reflection.FieldAttributes" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-370">Gets a value indicating whether the corresponding <see langword="SpecialName" /> attribute is set in the <see cref="T:System.Reflection.FieldAttributes" /> enumerator.</span></span></summary>
        <value><span data-ttu-id="fb25f-371"><see langword="true" /> si <see langword="SpecialName" /> se encuentra establecido en <see cref="T:System.Reflection.FieldAttributes" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-371"><see langword="true" /> if the <see langword="SpecialName" /> attribute is set in <see cref="T:System.Reflection.FieldAttributes" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-372">Los nombres que comienzan por o contengan un carácter de subrayado (_), los descriptores de acceso de propiedad y métodos de sobrecarga de operadores son ejemplos de nombres que pueden requerir un tratamiento especial por algunos compiladores.</span><span class="sxs-lookup"><span data-stu-id="fb25f-372">Names that begin with or contain an underscore character (_), property accessors, and operator overloading methods are examples of names that might require special treatment by some compilers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-373">El ejemplo siguiente devuelve un valor que indica si los campos de la clase contienen un atributo SpecialName.</span><span class="sxs-lookup"><span data-stu-id="fb25f-373">The following example returns a value indicating whether or not the fields in the class contain a SpecialName attribute.</span></span>  
  
 [!code-cpp[FieldInfo_IsSpecialName#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_IsSpecialName/CPP/fieldinfo_isspecialname.cpp#1)]
 [!code-csharp[FieldInfo_IsSpecialName#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_IsSpecialName/CS/fieldinfo_isspecialname.cs#1)]
 [!code-vb[FieldInfo_IsSpecialName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_IsSpecialName/VB/fieldinfo_isspecialname.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsStatic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStatic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStatic : bool" Usage="System.Reflection.FieldInfo.IsStatic" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.IsStatic</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-374">Obtiene un valor que indica si el campo es estático.</span><span class="sxs-lookup"><span data-stu-id="fb25f-374">Gets a value indicating whether the field is static.</span></span></summary>
        <value><span data-ttu-id="fb25f-375"><see langword="true" /> si este campo es estático; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-375"><see langword="true" /> if this field is static; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-376">Cuando un campo es estático, una copia del campo es compartida por todas las instancias del tipo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-376">When a field is static, one copy of the field is shared by all instances of the type.</span></span>  
  
 <span data-ttu-id="fb25f-377">El `IsStatic` propiedad se establece cuando el `FieldAttributes.Static` está establecido.</span><span class="sxs-lookup"><span data-stu-id="fb25f-377">The `IsStatic` property is set when the `FieldAttributes.Static` attribute is set.</span></span>  
  
 <span data-ttu-id="fb25f-378">Para obtener el `IsStatic` propiedad, obtenga primero la clase `Type`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-378">To get the `IsStatic` property, first get the class `Type`.</span></span> <span data-ttu-id="fb25f-379">Desde el `Type`, obtener el `FieldInfo`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-379">From the `Type`, get the `FieldInfo`.</span></span> <span data-ttu-id="fb25f-380">Desde el `FieldInfo`, obtener el `IsStatic` propiedad.</span><span class="sxs-lookup"><span data-stu-id="fb25f-380">From the `FieldInfo`, get the `IsStatic` property.</span></span> <span data-ttu-id="fb25f-381">Para acceder a un campo no público, establezca el `BindingFlags` a `NonPublic` en el `GetField` método y establezca la accesibilidad `Instance` o `Static`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-381">To access a non-public field, set the `BindingFlags` to `NonPublic` in the `GetField` method and set the accessibility to `Instance` or `Static`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-382">El ejemplo siguiente determina si el campo especificado es estático y muestra el resultado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-382">The following example determines whether the specified field is static and displays the result.</span></span>  
  
 [!code-cpp[Classic FieldInfo.IsStatic Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.IsStatic Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.IsStatic Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.IsStatic Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.IsStatic Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.IsStatic Example/VB/source.vb#1)]  
  
 <span data-ttu-id="fb25f-383">Este código genera el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="fb25f-383">This code produces the following output:</span></span>  
  
 <span data-ttu-id="fb25f-384">Reflection.FieldInfo</span><span class="sxs-lookup"><span data-stu-id="fb25f-384">Reflection.FieldInfo</span></span>  
  
 <span data-ttu-id="fb25f-385">Myfielda - un campo privado; IsStatic - False</span><span class="sxs-lookup"><span data-stu-id="fb25f-385">Myfielda - A private field; IsStatic - False</span></span>  
  
 <span data-ttu-id="fb25f-386">Myfieldb - campo estático de B; IsStatic - True</span><span class="sxs-lookup"><span data-stu-id="fb25f-386">Myfieldb - B static field; IsStatic - True</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Reflection.FieldInfo.MemberType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._FieldInfo.MemberType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb25f-387">Obtiene un valor de <see cref="T:System.Reflection.MemberTypes" /> que indica que este miembro es un campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-387">Gets a <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a field.</span></span></summary>
        <value><span data-ttu-id="fb25f-388">Valor de <see cref="T:System.Reflection.MemberTypes" /> que indica que este miembro es un campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-388">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-389">Esta propiedad invalida <xref:System.Reflection.MemberInfo.MemberType%2A>.</span><span class="sxs-lookup"><span data-stu-id="fb25f-389">This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>.</span></span> <span data-ttu-id="fb25f-390">Por lo tanto, cuando se examina un conjunto de <xref:System.Reflection.MemberInfo> objetos: por ejemplo, la matriz devuelta por <xref:System.Type.GetMembers%2A> : la <xref:System.Reflection.MemberInfo.MemberType%2A> propiedad devuelve <xref:System.Reflection.MemberTypes.Field?displayProperty=nameWithType> sólo cuando un miembro determinado es un campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-390">Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects - for example, the array returned by <xref:System.Type.GetMembers%2A> - the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Field?displayProperty=nameWithType> only when a given member is a field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-391">El ejemplo siguiente determina si el miembro especificado es un campo y muestra el resultado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-391">The following example determines whether the specified member is a field and displays the result.</span></span>  
  
 [!code-cpp[Classic FieldInfo.MemberType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.MemberType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.MemberType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.MemberType Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.MemberType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.MemberType Example/VB/source.vb#1)]  
  
 <span data-ttu-id="fb25f-392">Este código genera el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="fb25f-392">This code produces the following output:</span></span>  
  
 <span data-ttu-id="fb25f-393">Reflection.FieldInfo</span><span class="sxs-lookup"><span data-stu-id="fb25f-393">Reflection.FieldInfo</span></span>  
  
 <span data-ttu-id="fb25f-394">MyField.Field - un campo privado; MemberType es un campo</span><span class="sxs-lookup"><span data-stu-id="fb25f-394">Myfield.field - a private field; MemberType is a Field</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.FieldInfo left, System.Reflection.FieldInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.FieldInfo left, class System.Reflection.FieldInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.op_Equality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As FieldInfo, right As FieldInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::FieldInfo ^ left, System::Reflection::FieldInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.FieldInfo * System.Reflection.FieldInfo -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.FieldInfo" />
        <Parameter Name="right" Type="System.Reflection.FieldInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="fb25f-395">Primer objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="fb25f-395">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="fb25f-396">Segundo objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="fb25f-396">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="fb25f-397">Indica si dos objetos <see cref="T:System.Reflection.FieldInfo" /> son iguales.</span><span class="sxs-lookup"><span data-stu-id="fb25f-397">Indicates whether two <see cref="T:System.Reflection.FieldInfo" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="fb25f-398"><see langword="true" /> si <paramref name="left" /> es igual a <paramref name="right" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-398"><see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.FieldInfo left, System.Reflection.FieldInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.FieldInfo left, class System.Reflection.FieldInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.op_Inequality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As FieldInfo, right As FieldInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::FieldInfo ^ left, System::Reflection::FieldInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.FieldInfo * System.Reflection.FieldInfo -&gt; bool" Usage="System.Reflection.FieldInfo.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.FieldInfo" />
        <Parameter Name="right" Type="System.Reflection.FieldInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="fb25f-399">Primer objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="fb25f-399">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="fb25f-400">Segundo objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="fb25f-400">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="fb25f-401">Indica si dos objetos <see cref="T:System.Reflection.FieldInfo" /> no son iguales.</span><span class="sxs-lookup"><span data-stu-id="fb25f-401">Indicates whether two <see cref="T:System.Reflection.FieldInfo" /> objects are not equal.</span></span></summary>
        <returns><span data-ttu-id="fb25f-402">Es <see langword="true" /> si <paramref name="left" /> no es igual a <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-402"><see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb25f-403">Establece el valor del campo para el objeto especificado en el valor indicado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-403">Sets the value of the field for the given object to the given value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (obj As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ obj, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit&#xA;override this.SetValue : obj * obj -&gt; unit" Usage="fieldInfo.SetValue (obj, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.SetValue(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fb25f-404">Objeto cuyo valor de campo se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="fb25f-404">The object whose field value will be set.</span></span></param>
        <param name="value"><span data-ttu-id="fb25f-405">Valor que se va a asignar al campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-405">The value to assign to the field.</span></span></param>
        <summary><span data-ttu-id="fb25f-406">Establece el valor del campo admitido por el objeto determinado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-406">Sets the value of the field supported by the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-407">Este método asignará `value` al campo reflejado por esta instancia en el objeto `obj`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-407">This method will assign `value` to the field reflected by this instance on object `obj`.</span></span> <span data-ttu-id="fb25f-408">Si el campo es estático, `obj` se pasará por alto.</span><span class="sxs-lookup"><span data-stu-id="fb25f-408">If the field is static, `obj` will be ignored.</span></span> <span data-ttu-id="fb25f-409">Para los campos no estáticos, `obj` debe ser una instancia de una clase que hereda o declara el campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-409">For non-static fields, `obj` should be an instance of a class that inherits or declares the field.</span></span> <span data-ttu-id="fb25f-410">El nuevo valor se pasa como un `Object`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-410">The new value is passed as an `Object`.</span></span> <span data-ttu-id="fb25f-411">Por ejemplo, si el tipo del campo es booleano, una instancia de `Object` con el valor booleano correspondiente valor se pasa.</span><span class="sxs-lookup"><span data-stu-id="fb25f-411">For example, if the field's type is Boolean, an instance of `Object` with the appropriate Boolean value is passed.</span></span> <span data-ttu-id="fb25f-412">Antes de establecer el valor de `SetValue` comprueba si el usuario tiene permiso de acceso.</span><span class="sxs-lookup"><span data-stu-id="fb25f-412">Before setting the value, `SetValue` checks to see if the user has access permission.</span></span> <span data-ttu-id="fb25f-413">Este último método es un método de conveniencia para llamar al siguiente `SetValue` método.</span><span class="sxs-lookup"><span data-stu-id="fb25f-413">This final method is a convenience method for calling the following `SetValue` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb25f-414">Código de plena confianza tiene los permisos necesarios para obtener acceso e invocar constructores privados, métodos, campos y propiedades mediante reflexión.</span><span class="sxs-lookup"><span data-stu-id="fb25f-414">Fully trusted code has the permissions that are needed to access and invoke private constructors, methods, fields, and properties using reflection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb25f-415">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], este método puede utilizarse para tener acceso a miembros no públicos, si el llamador tiene concedidos <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> marca y si el conjunto de permisos de los miembros no públicos se restringe al llamador conceder el conjunto o un subconjunto en ella.</span><span class="sxs-lookup"><span data-stu-id="fb25f-415">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="fb25f-416">(Consulte [consideraciones de seguridad para la reflexión](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="fb25f-416">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="fb25f-417">Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="fb25f-417">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb25f-418">El ejemplo siguiente establece el valor de un campo, obtiene y muestra el valor, modifica el campo y muestra el resultado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-418">The following example sets the value of a field, gets and displays the value, modifies the field, and displays the result.</span></span>  
  
 [!code-cpp[FieldInfo_SetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_SetValue/CPP/fieldinfo_setvalue.cpp#1)]
 [!code-csharp[FieldInfo_SetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_SetValue/CS/fieldinfo_setvalue.cs#1)]
 [!code-vb[FieldInfo_SetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_SetValue/VB/fieldinfo_setvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FieldAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="fb25f-419">En <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET para aplicaciones de la Tienda Windows</see> o la <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Biblioteca de clases portable</see>, capture en su lugar la excepción de clase base, <see cref="T:System.MemberAccessException" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-419">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="fb25f-420">El autor de la llamada no tiene permiso para acceder a este campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-420">The caller does not have permission to access this field.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="fb25f-421">En <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET para aplicaciones de la Tienda Windows</see> o la <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Biblioteca de clases portable</see>, capture <see cref="T:System.Exception" /> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="fb25f-421">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="fb25f-422">El parámetro <paramref name="obj" /> es <see langword="null" /> y el campo es un campo de instancia.</span><span class="sxs-lookup"><span data-stu-id="fb25f-422">The <paramref name="obj" /> parameter is <see langword="null" /> and the field is an instance field.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fb25f-423">Este campo no existe en el objeto.</span><span class="sxs-lookup"><span data-stu-id="fb25f-423">The field does not exist on the object.</span></span>  
  
<span data-ttu-id="fb25f-424">O bien</span><span class="sxs-lookup"><span data-stu-id="fb25f-424">-or-</span></span> 
<span data-ttu-id="fb25f-425">El parámetro <paramref name="value" /> no puede convertirse y almacenarse en el campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-425">The <paramref name="value" /> parameter cannot be converted and stored in the field.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fb25f-426">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-426">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fb25f-427">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-427">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fb25f-428">Para actualizar los campos de solo init.</span><span class="sxs-lookup"><span data-stu-id="fb25f-428">for updating init-only fields.</span></span> <span data-ttu-id="fb25f-429">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-429">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public abstract void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * System.Reflection.BindingFlags * System.Reflection.Binder * System.Globalization.CultureInfo -&gt; unit" Usage="fieldInfo.SetValue (obj, value, invokeAttr, binder, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fb25f-430">Objeto cuyo valor de campo se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="fb25f-430">The object whose field value will be set.</span></span></param>
        <param name="value"><span data-ttu-id="fb25f-431">Valor que se va a asignar al campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-431">The value to assign to the field.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="fb25f-432">Campo de <see langword="Binder" /> que especifica el tipo de enlace deseado (por ejemplo, <see langword="Binder.CreateInstance" /> o <see langword="Binder.ExactBinding" />).</span><span class="sxs-lookup"><span data-stu-id="fb25f-432">A field of <see langword="Binder" /> that specifies the type of binding that is desired (for example, <see langword="Binder.CreateInstance" /> or <see langword="Binder.ExactBinding" />).</span></span></param>
        <param name="binder"><span data-ttu-id="fb25f-433">Conjunto de propiedades que habilitan el enlace, la conversión de tipos de argumentos y las llamadas a miembros mediante Reflection.</span><span class="sxs-lookup"><span data-stu-id="fb25f-433">A set of properties that enables the binding, coercion of argument types, and invocation of members through reflection.</span></span> <span data-ttu-id="fb25f-434">Si el valor de <paramref name="binder" /> es <see langword="null" />, se usa <see langword="Binder.DefaultBinding" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-434">If <paramref name="binder" /> is <see langword="null" />, then <see langword="Binder.DefaultBinding" /> is used.</span></span></param>
        <param name="culture"><span data-ttu-id="fb25f-435">Preferencias de software de una referencia cultural determinada.</span><span class="sxs-lookup"><span data-stu-id="fb25f-435">The software preferences of a particular culture.</span></span></param>
        <summary><span data-ttu-id="fb25f-436">Cuando se reemplaza en una clase derivada, se establece el valor del campo compatible con el objeto dado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-436">When overridden in a derived class, sets the value of the field supported by the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-437">Este método asignará `value` al campo reflejado por esta instancia en `obj`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-437">This method will assign `value` to the field reflected by this instance on `obj`.</span></span> <span data-ttu-id="fb25f-438">Si el campo es estático, `obj` se pasará por alto.</span><span class="sxs-lookup"><span data-stu-id="fb25f-438">If the field is static, `obj` will be ignored.</span></span> <span data-ttu-id="fb25f-439">Para los campos no estáticos, `obj` debe ser una instancia de una clase que hereda o declara el campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-439">For non-static fields, `obj` should be an instance of a class that inherits or declares the field.</span></span> <span data-ttu-id="fb25f-440">El nuevo valor se pasa como un `Object`.</span><span class="sxs-lookup"><span data-stu-id="fb25f-440">The new value is passed as an `Object`.</span></span> <span data-ttu-id="fb25f-441">Por ejemplo, si el tipo del campo es `Boolean`, una instancia de `Object` con el valor booleano correspondiente valor se pasa.</span><span class="sxs-lookup"><span data-stu-id="fb25f-441">For example, if the field's type is `Boolean`, an instance of `Object` with the appropriate Boolean value is passed.</span></span> <span data-ttu-id="fb25f-442">Antes de establecer el valor de `SetValue` comprueba si el usuario tiene permiso de acceso.</span><span class="sxs-lookup"><span data-stu-id="fb25f-442">Before setting the value, `SetValue` checks to see if the user has access permission.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb25f-443">Código de plena confianza tiene los permisos necesarios para obtener acceso e invocar constructores privados, métodos, campos y propiedades mediante reflexión.</span><span class="sxs-lookup"><span data-stu-id="fb25f-443">Fully trusted code has the permissions that are needed to access and invoke private constructors, methods, fields, and properties using reflection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb25f-444">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], este método puede utilizarse para tener acceso a miembros no públicos, si el llamador tiene concedidos <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> marca y si el conjunto de permisos de los miembros no públicos se restringe al llamador conceder el conjunto o un subconjunto en ella.</span><span class="sxs-lookup"><span data-stu-id="fb25f-444">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="fb25f-445">(Consulte [consideraciones de seguridad para la reflexión](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="fb25f-445">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="fb25f-446">Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="fb25f-446">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FieldAccessException"><span data-ttu-id="fb25f-447">El autor de la llamada no tiene permiso para acceder a este campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-447">The caller does not have permission to access this field.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException"><span data-ttu-id="fb25f-448">El parámetro <paramref name="obj" /> es <see langword="null" /> y el campo es un campo de instancia.</span><span class="sxs-lookup"><span data-stu-id="fb25f-448">The <paramref name="obj" /> parameter is <see langword="null" /> and the field is an instance field.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fb25f-449">Este campo no existe en el objeto.</span><span class="sxs-lookup"><span data-stu-id="fb25f-449">The field does not exist on the object.</span></span>  
  
<span data-ttu-id="fb25f-450">O bien</span><span class="sxs-lookup"><span data-stu-id="fb25f-450">-or-</span></span> 
<span data-ttu-id="fb25f-451">El parámetro <paramref name="value" /> no puede convertirse y almacenarse en el campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-451">The <paramref name="value" /> parameter cannot be converted and stored in the field.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fb25f-452">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-452">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fb25f-453">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-453">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fb25f-454">Para actualizar los campos de solo init.</span><span class="sxs-lookup"><span data-stu-id="fb25f-454">for updating init-only fields.</span></span> <span data-ttu-id="fb25f-455">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-455">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetValueDirect">
      <MemberSignature Language="C#" Value="public virtual void SetValueDirect (TypedReference obj, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValueDirect(valuetype System.TypedReference obj, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValueDirect (obj As TypedReference, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValueDirect(TypedReference obj, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValueDirect : TypedReference * obj -&gt; unit&#xA;override this.SetValueDirect : TypedReference * obj -&gt; unit" Usage="fieldInfo.SetValueDirect (obj, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.SetValueDirect(System.TypedReference,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.TypedReference" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fb25f-456">Estructura <see cref="T:System.TypedReference" /> que contiene un puntero administrado a una ubicación y una representación en tiempo de ejecución del tipo que se puede almacenar en esa ubicación.</span><span class="sxs-lookup"><span data-stu-id="fb25f-456">A <see cref="T:System.TypedReference" /> structure that encapsulates a managed pointer to a location and a runtime representation of the type that can be stored at that location.</span></span></param>
        <param name="value"><span data-ttu-id="fb25f-457">Valor que se va a asignar al campo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-457">The value to assign to the field.</span></span></param>
        <summary><span data-ttu-id="fb25f-458">Establece el valor del campo admitido por el objeto determinado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-458">Sets the value of the field supported by the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fb25f-459">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], este método puede utilizarse para tener acceso a miembros no públicos, si el llamador tiene concedidos <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> marca y si el conjunto de permisos de los miembros no públicos se restringe al llamador conceder el conjunto o un subconjunto en ella.</span><span class="sxs-lookup"><span data-stu-id="fb25f-459">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="fb25f-460">(Consulte [consideraciones de seguridad para la reflexión](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="fb25f-460">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="fb25f-461">Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="fb25f-461">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" />
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fb25f-462">El autor de la llamada requiere la alternativa Common Language Specification (CLS), pero llama a este método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="fb25f-462">The caller requires the Common Language Specification (CLS) alternative, but called this method instead.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fb25f-463">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-463">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fb25f-464">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-464">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._FieldInfo.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _FieldInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._FieldInfo.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _FieldInfo.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_FieldInfo::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="fb25f-465">Reservado para un uso futuro.</span><span class="sxs-lookup"><span data-stu-id="fb25f-465">Reserved for future use.</span></span> <span data-ttu-id="fb25f-466">Debe ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="fb25f-466">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="fb25f-467">Matriz que se pasa con los nombres que se van a asignar.</span><span class="sxs-lookup"><span data-stu-id="fb25f-467">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="fb25f-468">Número de nombres que se van a asignar.</span><span class="sxs-lookup"><span data-stu-id="fb25f-468">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="fb25f-469">Contexto de configuración regional en el que se van a interpretar los nombres.</span><span class="sxs-lookup"><span data-stu-id="fb25f-469">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="fb25f-470">Matriz asignada por el llamador que recibe los identificadores que corresponden a los nombres.</span><span class="sxs-lookup"><span data-stu-id="fb25f-470">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="fb25f-471">Asigna un conjunto de nombres a un conjunto correspondiente de identificadores de envío.</span><span class="sxs-lookup"><span data-stu-id="fb25f-471">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-472">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-472">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="fb25f-473">Para obtener más información sobre `IDispatch::GetIDsOfNames`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="fb25f-473">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="fb25f-474">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="fb25f-474">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._FieldInfo.GetType">
      <MemberSignature Language="C#" Value="Type _FieldInfo.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._FieldInfo.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _FieldInfo.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._FieldInfo.GetType() = System::Runtime::InteropServices::_FieldInfo::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb25f-475">Obtiene un objeto <see cref="T:System.Type" /> que representa el tipo de <see cref="T:System.Reflection.FieldInfo" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-475">Gets a <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.FieldInfo" /> type.</span></span></summary>
        <returns><span data-ttu-id="fb25f-476">Objeto <see cref="T:System.Type" /> que representa el tipo <see cref="T:System.Reflection.FieldInfo" />.</span><span class="sxs-lookup"><span data-stu-id="fb25f-476">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.FieldInfo" /> type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._FieldInfo.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _FieldInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._FieldInfo.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _FieldInfo.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._FieldInfo.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_FieldInfo::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="fb25f-477">Información de tipos que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="fb25f-477">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="fb25f-478">Identificador de la configuración regional de la información de tipo.</span><span class="sxs-lookup"><span data-stu-id="fb25f-478">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="fb25f-479">Recibe un puntero al objeto de información de tipo solicitado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-479">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="fb25f-480">Recupera la información de tipo de un objeto, que se puede usar después para obtener la información de tipo de una interfaz.</span><span class="sxs-lookup"><span data-stu-id="fb25f-480">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-481">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-481">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="fb25f-482">Para obtener más información sobre `IDispatch::GetTypeInfo`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="fb25f-482">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="fb25f-483">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="fb25f-483">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _FieldInfo.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _FieldInfo.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_FieldInfo::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="fb25f-484">Señala a una ubicación que recibe el número de interfaces de información de tipo proporcionado por el objeto.</span><span class="sxs-lookup"><span data-stu-id="fb25f-484">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="fb25f-485">Recupera el número de interfaces de información de tipo que proporciona un objeto (0 ó 1).</span><span class="sxs-lookup"><span data-stu-id="fb25f-485">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-486">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-486">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="fb25f-487">Para obtener más información sobre `IDispatch::GetTypeInfoCount`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="fb25f-487">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="fb25f-488">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="fb25f-488">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._FieldInfo.Invoke">
      <MemberSignature Language="C#" Value="void _FieldInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._FieldInfo.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _FieldInfo.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._FieldInfo.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_FieldInfo::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="fb25f-489">Identifica el miembro.</span><span class="sxs-lookup"><span data-stu-id="fb25f-489">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="fb25f-490">Reservado para un uso futuro.</span><span class="sxs-lookup"><span data-stu-id="fb25f-490">Reserved for future use.</span></span> <span data-ttu-id="fb25f-491">Debe ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="fb25f-491">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="fb25f-492">Contexto de la configuración regional en que se interpretan los argumentos.</span><span class="sxs-lookup"><span data-stu-id="fb25f-492">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="fb25f-493">Marcas que describen el contexto de la llamada.</span><span class="sxs-lookup"><span data-stu-id="fb25f-493">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="fb25f-494">Puntero a una estructura que contiene una matriz de argumentos, una matriz de valores DISPID de argumento para argumentos con nombre y recuentos del número de elementos de cada matriz.</span><span class="sxs-lookup"><span data-stu-id="fb25f-494">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="fb25f-495">Puntero a la ubicación donde se va a almacenar el resultado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-495">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="fb25f-496">Puntero a una estructura que contiene información de excepciones.</span><span class="sxs-lookup"><span data-stu-id="fb25f-496">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="fb25f-497">Índice del primer argumento que tiene un error.</span><span class="sxs-lookup"><span data-stu-id="fb25f-497">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="fb25f-498">Proporciona acceso a las propiedades y los métodos expuestos por un objeto.</span><span class="sxs-lookup"><span data-stu-id="fb25f-498">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb25f-499">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="fb25f-499">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="fb25f-500">Para obtener más información sobre `IDispatch::Invoke`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="fb25f-500">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="fb25f-501">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="fb25f-501">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
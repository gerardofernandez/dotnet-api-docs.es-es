<Type Name="Project" FullName="Microsoft.Build.Evaluation.Project">
  <Metadata><Meta Name="ms.openlocfilehash" Value="be67c66acf5965e34367a1f0a1fea321d2677ccc" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63879136" /></Metadata><TypeSignature Language="C#" Value="public class Project" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Project extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.Project" />
  <TypeSignature Language="VB.NET" Value="Public Class Project" />
  <TypeSignature Language="C++ CLI" Value="public ref class Project" />
  <TypeSignature Language="F#" Value="type Project = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={data.globalProperties.Count} #Properties={data.Properties.Count} #ItemTypes={data.ItemTypes.Count} #ItemDefinitions={data.ItemDefinitions.Count} #Items={data.Items.Count} #Targets={data.Targets.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="914a3-101">Representa un proyecto con semántica en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="914a3-101">Represents a project with design time semantics.</span></span> <span data-ttu-id="914a3-102">Esta clase puede cargar archivos de proyecto, editar elementos y propiedades, y compilar proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-102">This class can load project files, edit items and properties and build projects.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="914a3-103">Construye un proyecto vacío usando las propiedades globales de la colección global de proyectos y la versión de herramientas predeterminada.</span><span class="sxs-lookup"><span data-stu-id="914a3-103">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="914a3-104">Construye un proyecto vacío usando las propiedades globales de la colección global de proyectos y la versión de herramientas predeterminada.</span><span class="sxs-lookup"><span data-stu-id="914a3-104">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-105">Este proyecto se agrega a la colección global de proyectos cuando se proporciona la ruta de acceso completa al archivo de proyecto de origen, normalmente por guardar el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-105">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="914a3-106">ProjectRootElement que se va a usar para la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-106">ProjectRootElement to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="914a3-107">Construye un proyecto vacío y lo evalúa usando la raíz de proyecto dada, y las propiedades globales de la colección global de proyectos y la versión de herramientas predeterminada.</span><span class="sxs-lookup"><span data-stu-id="914a3-107">Constructs an empty project and evaluates it using the given project root and the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-108">Este proyecto se agrega a la colección global de proyectos cuando este proyecto o la raíz de proyecto dada se proporciona la ruta de acceso completa al archivo de proyecto de origen.</span><span class="sxs-lookup"><span data-stu-id="914a3-108">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="914a3-109">InvalidProjectFileException se produce si se produce un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-109">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="914a3-110">Produce InvalidOperationException si ya existe un proyecto equivalente se carga en la colección de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-110">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectCollection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectCollection"><span data-ttu-id="914a3-111">Colección de proyectos a la que se va a agregar el nuevo proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-111">The project collection that the new project is added to.</span></span></param>
        <summary><span data-ttu-id="914a3-112">Construye un proyecto vacío usando las propiedades globales de la colección de proyectos dada y la versión de herramientas predeterminada.</span><span class="sxs-lookup"><span data-stu-id="914a3-112">Constructs an empty project using the given project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-113">Este proyecto se agrega a la colección de proyectos dada cuando se proporciona la ruta de acceso completa al archivo de proyecto de origen, normalmente por guardar el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-113">This project is added to the given project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="914a3-114">Archivo de proyecto de origen que se va a evaluar.</span><span class="sxs-lookup"><span data-stu-id="914a3-114">The source project file to be evaluated.</span></span></param>
        <summary><span data-ttu-id="914a3-115">Construye un proyecto y lo evalúa a partir del archivo de proyecto de origen dado, y con las propiedades globales de la colección global de proyectos y la versión de herramientas predeterminada.</span><span class="sxs-lookup"><span data-stu-id="914a3-115">Constructs a project and evaluates it from the given source project file and with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-116">El proyecto se agrega a la colección global de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-116">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="914a3-117">Inicia la excepción InvalidOperationException si ya existe un proyecto en la colección de proyectos que se evalúa como este archivo de proyecto de origen.</span><span class="sxs-lookup"><span data-stu-id="914a3-117">Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file.</span></span> <span data-ttu-id="914a3-118">Puede producir excepciones relacionadas con E/S.</span><span class="sxs-lookup"><span data-stu-id="914a3-118">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="914a3-119">Si se genera un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-119">If the evaluation fails.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xmlReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="914a3-120">Lector XML del que se va a leer el código fuente del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-120">Xml reader to read project source code from.</span></span></param>
        <summary><span data-ttu-id="914a3-121">Construye un proyecto y evalúa el código fuente a partir del lector XML especificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-121">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="914a3-122">El código fuente se evalúa con las propiedades globales de la colección global de proyectos y la versión de herramientas predeterminada.</span><span class="sxs-lookup"><span data-stu-id="914a3-122">The source code is evaluated with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-123">Este proyecto se agrega a la colección global de proyectos cuando se proporciona la ruta de acceso completa al archivo de proyecto de origen, normalmente por guardar el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-123">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="914a3-124">InvalidProjectFileException se produce si se produce un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-124">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="914a3-125">Produce InvalidOperationException si ya existe un proyecto equivalente se carga en la colección de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-125">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="914a3-126">Raíz de proyecto que se va a usar para la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-126">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="914a3-127">Propiedades globales con las que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-127">Global properties to evaluate with.</span></span> <span data-ttu-id="914a3-128">Puede ser null, en cuyo caso se usarán las propiedades globales de la colección de proyectos contenedora.</span><span class="sxs-lookup"><span data-stu-id="914a3-128">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="914a3-129">Versión de herramientas con la que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-129">Tools version to evaluate with.</span></span> <span data-ttu-id="914a3-130">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-130">May be null.</span></span></param>
        <summary><span data-ttu-id="914a3-131">Construye un proyecto vacío y lo evalúa usando la raíz de proyecto dada, y con las propiedades globales y la versión de herramientas especificadas.</span><span class="sxs-lookup"><span data-stu-id="914a3-131">Constructs an empty project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-132">Este proyecto se agrega a la colección global de proyectos cuando este proyecto o la raíz de proyecto dada se proporciona la ruta de acceso completa al archivo de proyecto de origen.</span><span class="sxs-lookup"><span data-stu-id="914a3-132">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="914a3-133">InvalidProjectFileException se produce si se produce un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-133">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="914a3-134">Produce InvalidOperationException si ya existe un proyecto equivalente se carga en la colección de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-134">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="globalProperties"><span data-ttu-id="914a3-135">Propiedades globales con las que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-135">Global properties to evaluate with.</span></span> <span data-ttu-id="914a3-136">Puede ser null, en cuyo caso se usarán las propiedades globales de la colección de proyectos contenedora.</span><span class="sxs-lookup"><span data-stu-id="914a3-136">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="914a3-137">Versión de herramientas que se va a usar para evaluar el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-137">The tools version used to evaluate the project.</span></span> <span data-ttu-id="914a3-138">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-138">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="914a3-139">Colección de proyectos a la que se agregará el nuevo proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-139">The project collection the new project will be added to.</span></span></param>
        <summary><span data-ttu-id="914a3-140">Construye un proyecto vacío que se va a evaluar con la colección de proyectos dada, y con las propiedades globales y la versión de herramientas especificadas.</span><span class="sxs-lookup"><span data-stu-id="914a3-140">Constructs an empty project, to be evaluated with the given project collection and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-141">El proyecto se agrega a la colección de proyectos especificada cuando se proporciona la ruta de acceso completa al archivo de proyecto de origen, normalmente por guardar el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-141">The project is added to the specified project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="914a3-142">Ruta de acceso al archivo de proyecto de origen que se va a evaluar.</span><span class="sxs-lookup"><span data-stu-id="914a3-142">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="914a3-143">Propiedades globales con las que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-143">Global properties to evaluate with.</span></span> <span data-ttu-id="914a3-144">Puede ser null, en cuyo caso se usarán las propiedades globales de la colección de proyectos contenedora.</span><span class="sxs-lookup"><span data-stu-id="914a3-144">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="914a3-145">Versión de herramientas con la que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-145">Tools version to evaluate with.</span></span> <span data-ttu-id="914a3-146">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-146">May be null.</span></span></param>
        <summary><span data-ttu-id="914a3-147">Construye un proyecto y lo evalúa a partir del archivo de proyecto de origen dado, y con las propiedades globales y la versión de herramientas especificadas.</span><span class="sxs-lookup"><span data-stu-id="914a3-147">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-148">El proyecto se agrega a la colección global de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-148">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="914a3-149">InvalidProjectFileException se produce si se produce un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-149">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="914a3-150">Produce InvalidOperationException si ya existe un proyecto equivalente se carga en la colección de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-150">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="914a3-151">Puede producir excepciones relacionadas con E/S.</span><span class="sxs-lookup"><span data-stu-id="914a3-151">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="914a3-152">Lector XML del que se va a leer el código fuente del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-152">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="914a3-153">Propiedades globales con las que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-153">Global properties to evaluate with.</span></span> <span data-ttu-id="914a3-154">Puede ser null, en cuyo caso se usarán las propiedades globales de la colección de proyectos contenedora.</span><span class="sxs-lookup"><span data-stu-id="914a3-154">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="914a3-155">Versión de herramientas con la que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-155">Tools version to evaluate with.</span></span> <span data-ttu-id="914a3-156">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-156">May be null.</span></span></param>
        <summary><span data-ttu-id="914a3-157">Construye un proyecto y evalúa el código fuente a partir del lector XML especificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-157">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="914a3-158">El código fuente se evalúa con las propiedades globales y la versión de herramientas especificadas.</span><span class="sxs-lookup"><span data-stu-id="914a3-158">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-159">Este proyecto se agrega a la colección global de proyectos cuando se proporciona la ruta de acceso completa al archivo de proyecto de origen, normalmente por guardar el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-159">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="914a3-160">InvalidProjectFileException se produce si se produce un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-160">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="914a3-161">Produce InvalidOperationException si ya existe un proyecto equivalente se carga en la colección de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-161">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="914a3-162">Raíz de proyecto que se va a usar para la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-162">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="914a3-163">Propiedades globales con las que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-163">Global properties to evaluate with.</span></span> <span data-ttu-id="914a3-164">Puede ser null, en cuyo caso se usarán las propiedades globales de la colección de proyectos contenedora.</span><span class="sxs-lookup"><span data-stu-id="914a3-164">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="914a3-165">Versión de herramientas con la que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-165">Tools version to evaluate with.</span></span> <span data-ttu-id="914a3-166">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-166">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="914a3-167">Colección de proyectos a la que se agrega el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-167">The project collection the project is added to.</span></span></param>
        <summary><span data-ttu-id="914a3-168">Construye un proyecto y lo evalúa usando la raíz de proyecto dada, y con las propiedades globales y la versión de herramientas especificadas.</span><span class="sxs-lookup"><span data-stu-id="914a3-168">Constructs a project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-169">Este proyecto se agrega a la colección de proyectos dada cuando este proyecto o la raíz de proyecto dada se proporciona la ruta de acceso completa al archivo de proyecto de origen.</span><span class="sxs-lookup"><span data-stu-id="914a3-169">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="914a3-170">InvalidProjectFileException se produce si se produce un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-170">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="914a3-171">Produce InvalidOperationException si ya existe un proyecto equivalente se carga en la colección de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-171">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="914a3-172">Ruta de acceso al archivo de proyecto de origen que se va a evaluar.</span><span class="sxs-lookup"><span data-stu-id="914a3-172">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="914a3-173">Propiedades globales.</span><span class="sxs-lookup"><span data-stu-id="914a3-173">The global properties.</span></span> <span data-ttu-id="914a3-174">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-174">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="914a3-175">Versión de herramientas.</span><span class="sxs-lookup"><span data-stu-id="914a3-175">The tools version.</span></span> <span data-ttu-id="914a3-176">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-176">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="914a3-177">Colección de proyectos a la que se agrega el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-177">The project collection the project is added to.</span></span> <span data-ttu-id="914a3-178">No puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-178">May not be null.</span></span></param>
        <summary><span data-ttu-id="914a3-179">Construye un proyecto y lo evalúa a partir del archivo de proyecto de origen dado, y con las propiedades globales y la versión de herramientas especificadas.</span><span class="sxs-lookup"><span data-stu-id="914a3-179">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-180">El proyecto se agrega a la colección de proyectos dada.</span><span class="sxs-lookup"><span data-stu-id="914a3-180">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="914a3-181">InvalidProjectFileException se produce si se produce un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-181">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="914a3-182">Produce InvalidOperationException si ya existe un proyecto equivalente se carga en la colección de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-182">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="914a3-183">Puede producir excepciones relacionadas con E/S.</span><span class="sxs-lookup"><span data-stu-id="914a3-183">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="914a3-184">Lector XML del que se va a leer el código fuente del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-184">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="914a3-185">Propiedades globales con las que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-185">Global properties to evaluate with.</span></span> <span data-ttu-id="914a3-186">Puede ser null, en cuyo caso se usarán las propiedades globales de la colección de proyectos contenedora.</span><span class="sxs-lookup"><span data-stu-id="914a3-186">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="914a3-187">Versión de herramientas con la que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-187">Tools version to evaluate with.</span></span> <span data-ttu-id="914a3-188">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-188">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="914a3-189">Colección de proyectos a la que se agrega el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-189">The project collection the project is added to.</span></span> <span data-ttu-id="914a3-190">No puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-190">May not be null.</span></span></param>
        <summary><span data-ttu-id="914a3-191">Construye un proyecto y evalúa el código fuente a partir del lector XML especificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-191">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="914a3-192">El código fuente se evalúa con las propiedades globales y la versión de herramientas especificadas.</span><span class="sxs-lookup"><span data-stu-id="914a3-192">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-193">Este proyecto se agrega a la colección de proyectos dada cuando este proyecto o la raíz de proyecto dada se proporciona la ruta de acceso completa al archivo de proyecto de origen.</span><span class="sxs-lookup"><span data-stu-id="914a3-193">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="914a3-194">InvalidProjectFileException se produce si se produce un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-194">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="914a3-195">Produce InvalidOperationException si ya existe un proyecto equivalente se carga en la colección de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-195">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="914a3-196">Raíz de proyecto que se va a usar para la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-196">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="914a3-197">Propiedades globales con las que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-197">Global properties to evaluate with.</span></span> <span data-ttu-id="914a3-198">Puede ser null, en cuyo caso se usarán las propiedades globales de la colección de proyectos contenedora.</span><span class="sxs-lookup"><span data-stu-id="914a3-198">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="914a3-199">Versión de herramientas con la que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-199">Tools version to evaluate with.</span></span> <span data-ttu-id="914a3-200">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-200">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="914a3-201">Colección de proyectos a la que se agrega el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-201">The project collection the project is added to.</span></span> <span data-ttu-id="914a3-202">No puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-202">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="914a3-203">Configuración de carga que se va a usar para la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-203">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="914a3-204">Construye un proyecto y lo evalúa usando la raíz de proyecto dada, y con las propiedades globales, la versión de herramientas y la configuración de carga especificadas.</span><span class="sxs-lookup"><span data-stu-id="914a3-204">Constructs a project and evaluates it using the given project root and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-205">Este proyecto se agrega a la colección de proyectos dada cuando este proyecto o la raíz de proyecto dada se proporciona la ruta de acceso completa al archivo de proyecto de origen.</span><span class="sxs-lookup"><span data-stu-id="914a3-205">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="914a3-206">InvalidProjectFileException se produce si se produce un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-206">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="914a3-207">Produce InvalidOperationException si ya existe un proyecto equivalente se carga en la colección de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-207">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="914a3-208">Ruta de acceso al archivo de proyecto de origen que se va a evaluar.</span><span class="sxs-lookup"><span data-stu-id="914a3-208">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="914a3-209">Propiedades globales con las que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-209">Global properties to evaluate with.</span></span> <span data-ttu-id="914a3-210">Puede ser null, en cuyo caso se usarán las propiedades globales de la colección de proyectos contenedora.</span><span class="sxs-lookup"><span data-stu-id="914a3-210">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="914a3-211">Versión de herramientas.</span><span class="sxs-lookup"><span data-stu-id="914a3-211">The tools version.</span></span> <span data-ttu-id="914a3-212">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-212">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="914a3-213">Colección de proyectos a la que se agrega el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-213">The project collection the project is added to.</span></span> <span data-ttu-id="914a3-214">No puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-214">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="914a3-215">Configuración de carga que se va a usar para la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-215">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="914a3-216">Construye un proyecto y lo evalúa a partir del archivo de proyecto de origen dado, y con las propiedades globales, la versión de herramientas y la configuración de carga especificadas.</span><span class="sxs-lookup"><span data-stu-id="914a3-216">Constructs a project and evaluates it from the given source project file and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-217">El proyecto se agrega a la colección de proyectos dada.</span><span class="sxs-lookup"><span data-stu-id="914a3-217">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="914a3-218">InvalidProjectFileException se produce si se produce un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-218">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="914a3-219">Produce InvalidOperationException si ya existe un proyecto equivalente se carga en la colección de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-219">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="914a3-220">Puede producir excepciones relacionadas con E/S.</span><span class="sxs-lookup"><span data-stu-id="914a3-220">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="914a3-221">Lector XML del que se va a leer el código fuente del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-221">Xml reader from which to read project source code.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="914a3-222">Propiedades globales con las que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-222">Global properties to evaluate with.</span></span> <span data-ttu-id="914a3-223">Puede ser null, en cuyo caso se usarán las propiedades globales de la colección de proyectos contenedora.</span><span class="sxs-lookup"><span data-stu-id="914a3-223">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="914a3-224">Versión de herramientas con la que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-224">Tools version to evaluate with.</span></span> <span data-ttu-id="914a3-225">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-225">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="914a3-226">Colección de proyectos a la que se agrega el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-226">The project collection the project is added to.</span></span> <span data-ttu-id="914a3-227">No puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-227">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="914a3-228">Configuración de carga que se va a usar para la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-228">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="914a3-229">Construye un proyecto y evalúa el código fuente a partir del lector XML especificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-229">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="914a3-230">El código fuente se evalúa con las propiedades globales y la versión de herramientas especificadas.</span><span class="sxs-lookup"><span data-stu-id="914a3-230">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-231">Este proyecto se agrega a la colección de proyectos dada cuando este proyecto o la raíz de proyecto dada se proporciona la ruta de acceso completa al archivo de proyecto de origen.</span><span class="sxs-lookup"><span data-stu-id="914a3-231">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="914a3-232">InvalidProjectFileException se produce si se produce un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-232">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="914a3-233">Produce InvalidOperationException si ya existe un proyecto equivalente se carga en la colección de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-233">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="914a3-234">Raíz de proyecto que se va a usar para la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-234">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="914a3-235">Propiedades globales con las que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-235">Global properties to evaluate with.</span></span> <span data-ttu-id="914a3-236">Puede ser null, en cuyo caso se usarán las propiedades globales de la colección de proyectos contenedora.</span><span class="sxs-lookup"><span data-stu-id="914a3-236">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="914a3-237">Versión de herramientas con la que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-237">Tools version to evaluate with.</span></span> <span data-ttu-id="914a3-238">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-238">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="914a3-239">Versión de subconjunto de herramientas con la que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-239">Sub toolset version to evaluate with.</span></span> <span data-ttu-id="914a3-240">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-240">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="914a3-241">Colección de proyectos a la que se agrega el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-241">The project collection the project is added to.</span></span> <span data-ttu-id="914a3-242">No puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-242">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="914a3-243">Configuración de carga que se va a usar para la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-243">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="914a3-244">Construye un proyecto y lo evalúa mediante el archivo de proyecto raíz dado, y con las propiedades, las versiones de herramientas y del subconjunto de herramientas globales, la colección de proyectos y la configuración de carga.</span><span class="sxs-lookup"><span data-stu-id="914a3-244">Constructs a project and evaluates it using the given project root and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-245">Este proyecto se agrega a la colección de proyectos dada cuando este proyecto o la raíz de proyecto dada se proporciona la ruta de acceso completa al archivo de proyecto de origen.</span><span class="sxs-lookup"><span data-stu-id="914a3-245">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="914a3-246">InvalidProjectFileException se produce si se produce un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-246">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="914a3-247">Produce InvalidOperationException si ya existe un proyecto equivalente se carga en la colección de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-247">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="914a3-248">Ruta de acceso al archivo de proyecto de origen que se va a evaluar.</span><span class="sxs-lookup"><span data-stu-id="914a3-248">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="914a3-249">Propiedades globales con las que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-249">Global properties to evaluate with.</span></span> <span data-ttu-id="914a3-250">Puede ser null, en cuyo caso se usarán las propiedades globales de la colección de proyectos contenedora.</span><span class="sxs-lookup"><span data-stu-id="914a3-250">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="914a3-251">Versión de herramientas.</span><span class="sxs-lookup"><span data-stu-id="914a3-251">The tools version.</span></span> <span data-ttu-id="914a3-252">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-252">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="914a3-253">La versión del subconjunto de herramientas.</span><span class="sxs-lookup"><span data-stu-id="914a3-253">The sub toolset version.</span></span> <span data-ttu-id="914a3-254">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-254">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="914a3-255">Colección de proyectos a la que se agrega el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-255">The project collection the project is added to.</span></span> <span data-ttu-id="914a3-256">No puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-256">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="914a3-257">Configuración de carga que se va a usar para la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-257">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="914a3-258">Construye un proyecto y lo evalúa a partir del archivo de proyecto de origen dado, y con las propiedades, las versiones de la herramientas y del subconjunto de herramientas globales, la colección de proyectos y la configuración de carga.</span><span class="sxs-lookup"><span data-stu-id="914a3-258">Constructs a project and evaluates it from the given source project file and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-259">El proyecto se agrega a la colección de proyectos dada.</span><span class="sxs-lookup"><span data-stu-id="914a3-259">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="914a3-260">InvalidProjectFileException se produce si se produce un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-260">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="914a3-261">Produce InvalidOperationException si ya existe un proyecto equivalente se carga en la colección de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-261">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="914a3-262">Puede producir excepciones relacionadas con E/S.</span><span class="sxs-lookup"><span data-stu-id="914a3-262">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="914a3-263">Lector XML del que se va a leer el código fuente del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-263">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="914a3-264">Propiedades globales con las que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-264">Global properties to evaluate with.</span></span> <span data-ttu-id="914a3-265">Puede ser null, en cuyo caso se usarán las propiedades globales de la colección de proyectos contenedora.</span><span class="sxs-lookup"><span data-stu-id="914a3-265">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="914a3-266">Versión de herramientas con la que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-266">Tools version to evaluate with.</span></span> <span data-ttu-id="914a3-267">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-267">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="914a3-268">Versión de subconjunto de herramientas con la que se va a realizar la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-268">Sub Toolset version to evaluate with.</span></span> <span data-ttu-id="914a3-269">Su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-269">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="914a3-270">Colección de proyectos a la que se agrega el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-270">The project collection the project is added to.</span></span> <span data-ttu-id="914a3-271">No puede ser null.</span><span class="sxs-lookup"><span data-stu-id="914a3-271">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="914a3-272">Configuración de carga que se va a usar para la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-272">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="914a3-273">Construye un proyecto y evalúa el código fuente a partir del lector XML especificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-273">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="914a3-274">El código fuente se evalúa con las propiedades globales proporcionadas, versiones de herramientas y de subconjuntos de herramientas globales, la colección de proyectos y la configuración de carga.</span><span class="sxs-lookup"><span data-stu-id="914a3-274">The source code is evaluated with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-275">Este proyecto se agrega a la colección de proyectos dada cuando este proyecto o la raíz de proyecto dada se proporciona la ruta de acceso completa al archivo de proyecto de origen.</span><span class="sxs-lookup"><span data-stu-id="914a3-275">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="914a3-276">InvalidProjectFileException se produce si se produce un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-276">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="914a3-277">Produce InvalidOperationException si ya existe un proyecto equivalente se carga en la colección de proyectos.</span><span class="sxs-lookup"><span data-stu-id="914a3-277">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="914a3-278">Agrega un elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-278">Adds an item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="914a3-279">Tipo de elemento del elemento agregado.</span><span class="sxs-lookup"><span data-stu-id="914a3-279">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="914a3-280">Atributo Include del elemento que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="914a3-280">Include attribute of the item to be added.</span></span></param>
        <summary><span data-ttu-id="914a3-281">Agrega al proyecto un elemento sin metadatos.</span><span class="sxs-lookup"><span data-stu-id="914a3-281">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="914a3-282">Elemento agregado.</span><span class="sxs-lookup"><span data-stu-id="914a3-282">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-283">Los metadatos se pueden agregar más adelante.</span><span class="sxs-lookup"><span data-stu-id="914a3-283">Any metadata can be added later.</span></span> <span data-ttu-id="914a3-284">No modifica el origen del proyecto si una expresión comodín ya incluye el nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-284">Does not modify the project source if a wildcard expression already includes the new item.</span></span>  
  
 <span data-ttu-id="914a3-285">Evaluación realiza de forma óptima.</span><span class="sxs-lookup"><span data-stu-id="914a3-285">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="914a3-286">Los elementos que se definen en el origen del proyecto siguiendo el nuevo elemento se pueden usar para la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-286">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="914a3-287">Se evalúa solo este elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-287">Only this item is evaluated.</span></span> <span data-ttu-id="914a3-288">No afecta a otros elementos que podrían depender de él.</span><span class="sxs-lookup"><span data-stu-id="914a3-288">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="914a3-289">Tipo de elemento del elemento agregado.</span><span class="sxs-lookup"><span data-stu-id="914a3-289">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="914a3-290">Atributo Include del elemento que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="914a3-290">Include attribute of the item to be added.</span></span></param>
        <param name="metadata"><span data-ttu-id="914a3-291">Metadatos del elemento agregado.</span><span class="sxs-lookup"><span data-stu-id="914a3-291">The metadata of the added item.</span></span></param>
        <summary><span data-ttu-id="914a3-292">Agrega al proyecto un elemento con los metadatos especificados.</span><span class="sxs-lookup"><span data-stu-id="914a3-292">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="914a3-293">Elemento agregado.</span><span class="sxs-lookup"><span data-stu-id="914a3-293">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-294">Los metadatos pueden ser null, lo que indica que no hay metadatos.</span><span class="sxs-lookup"><span data-stu-id="914a3-294">The metadata may be null, which indicates no metadata.</span></span>  
  
 <span data-ttu-id="914a3-295">Evaluación realiza de forma óptima.</span><span class="sxs-lookup"><span data-stu-id="914a3-295">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="914a3-296">Los elementos que se definen en el origen del proyecto siguiendo el nuevo elemento se pueden usar para la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-296">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="914a3-297">Se evalúa solo este elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-297">Only this item is evaluated.</span></span> <span data-ttu-id="914a3-298">No afecta a otros elementos que podrían depender de él.</span><span class="sxs-lookup"><span data-stu-id="914a3-298">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItemFast">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="914a3-299">Agrega al proyecto un elemento sin metadatos.</span><span class="sxs-lookup"><span data-stu-id="914a3-299">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="914a3-300">No realiza ningún esfuerzo para ver si un carácter comodín existente ya coincide con el nuevo elemento, a menos que sea el primer elemento de un grupo de elementos.</span><span class="sxs-lookup"><span data-stu-id="914a3-300">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="914a3-301">No realiza ningún esfuerzo para buscar el nuevo elemento cerca de elementos similares.</span><span class="sxs-lookup"><span data-stu-id="914a3-301">Makes no effort to locate the new item near similar items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="914a3-302">Tipo de elemento que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="914a3-302">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="914a3-303">Atributo Include no evaluado que se va a agregar al elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-303">The unevaluated Include attribute to be added to the item.</span></span></param>
        <summary><span data-ttu-id="914a3-304">Agrega al proyecto un elemento sin metadatos.</span><span class="sxs-lookup"><span data-stu-id="914a3-304">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="914a3-305">No realiza ningún esfuerzo para ver si un carácter comodín existente ya coincide con el nuevo elemento, a menos que sea el primer elemento de un grupo de elementos.</span><span class="sxs-lookup"><span data-stu-id="914a3-305">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="914a3-306">No realiza ningún esfuerzo para buscar el nuevo elemento cerca de elementos similares.</span><span class="sxs-lookup"><span data-stu-id="914a3-306">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="914a3-307">Lista de los elementos de proyecto agregados.</span><span class="sxs-lookup"><span data-stu-id="914a3-307">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-308">Anexa el elemento al primer grupo de elementos que no tiene una condición y no tiene ningún elemento secundario o cuyo primer elemento secundario es un elemento del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="914a3-308">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="914a3-309">Se evalúa como un mejor esfuerzo:-se expande con todos los elementos.</span><span class="sxs-lookup"><span data-stu-id="914a3-309">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="914a3-310">Los elementos que se definen en el XML por debajo del elemento nuevo pueden utilizarse, aunque en una evaluación real no serán.</span><span class="sxs-lookup"><span data-stu-id="914a3-310">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="914a3-311">Se evalúa solo este elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-311">Only this item is evaluated.</span></span> <span data-ttu-id="914a3-312">No afecta a otros elementos que podrían depender de él.</span><span class="sxs-lookup"><span data-stu-id="914a3-312">Other items that might depend on it are not affected.</span></span>  
  
 <span data-ttu-id="914a3-313">Esto resulta práctico que se entiende necesariamente no se deja el proyecto en un estado coherente perfectamente propio hasta una nueva evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-313">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="914a3-314">Tipo de elemento que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="914a3-314">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="914a3-315">Atributo Include no evaluado que se va a agregar al elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-315">The unevaluated Include attribute to be added to the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="914a3-316">Metadatos que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="914a3-316">The metadata to be added.</span></span></param>
        <summary><span data-ttu-id="914a3-317">Agrega al proyecto un elemento con metadatos.</span><span class="sxs-lookup"><span data-stu-id="914a3-317">Adds an item with metadata to the project.</span></span> <span data-ttu-id="914a3-318">Los metadatos pueden ser nulos, lo que indica que no hay metadatos.</span><span class="sxs-lookup"><span data-stu-id="914a3-318">Metadata may be null, indicating no metadata.</span></span> <span data-ttu-id="914a3-319">No realiza ningún esfuerzo para ver si un carácter comodín existente ya coincide con el nuevo elemento, a menos que sea el primer elemento de un grupo de elementos.</span><span class="sxs-lookup"><span data-stu-id="914a3-319">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span> <span data-ttu-id="914a3-320">No realiza ningún esfuerzo para buscar el nuevo elemento cerca de elementos similares.</span><span class="sxs-lookup"><span data-stu-id="914a3-320">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="914a3-321">Lista de los elementos de proyecto agregados.</span><span class="sxs-lookup"><span data-stu-id="914a3-321">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-322">Anexa el elemento al primer grupo de elementos que no tiene una condición y no tiene ningún elemento secundario o cuyo primer elemento secundario es un elemento del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="914a3-322">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="914a3-323">Se evalúa como un mejor esfuerzo:-se expande con todos los elementos.</span><span class="sxs-lookup"><span data-stu-id="914a3-323">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="914a3-324">Los elementos que se definen en el XML por debajo del elemento nuevo pueden utilizarse, aunque en una evaluación real no serán.</span><span class="sxs-lookup"><span data-stu-id="914a3-324">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="914a3-325">Se evalúa solo este elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-325">Only this item is evaluated.</span></span> <span data-ttu-id="914a3-326">No afecta a otros elementos que podrían depender de él.</span><span class="sxs-lookup"><span data-stu-id="914a3-326">Other items that might depend on it is not affected.</span></span>  
  
 <span data-ttu-id="914a3-327">Esto resulta práctico que se entiende necesariamente no se deja el proyecto en un estado coherente perfectamente propio hasta una nueva evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-327">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItemDefinitionMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItemDefinitionMetadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ AllEvaluatedItemDefinitionMetadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItemDefinitionMetadata : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-328">Obtiene todos los metadatos de definición de elementos encontrados durante la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-328">Gets all item definition metadata encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="914a3-329">Metadatos de definición de todos los elementos encontrados durante la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-329">All item definition metadata encountered during evaluation.</span></span> <span data-ttu-id="914a3-330">Esto no incluye ningún elemento cuyas condiciones no se evaluaran como true ni ningún metadato de definición de elementos agregado desde la última evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-330">This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-331">Metadatos del elemento se leen durante el segundo paso de la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-331">Item metadata is read during the second evaluation pass.</span></span> <span data-ttu-id="914a3-332">A diferencia de los metadatos devueltos por la propiedad ItemDefinitions, estos metadatos se ordenan e incluyen cualquier metadato que posteriormente se reemplaza con el mismo nombre y tipo de elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-332">Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItems As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AllEvaluatedItems { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItems : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-333">Obtiene un enumerador de todos los elementos encontrados durante la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-333">Gets an enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="914a3-334">Se leen durante el tercer paso de la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-334">These are read during the third evaluation pass.</span></span></summary>
        <value><span data-ttu-id="914a3-335">Enumerador de todos los elementos encontrados durante la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-335">An enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="914a3-336">Se leen durante el tercer paso de la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-336">These are read during the third evaluation pass.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-337">A diferencia de los elementos devueltos por la propiedad Items, éstos se ordenan con respecto a todos los demás elementos encontrados durante la evaluación, que no sólo se ordenan con respecto a los elementos del mismo tipo de elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-337">Unlike those items returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.</span></span>  
  
 <span data-ttu-id="914a3-338">En algunas aplicaciones, esta clasificación mutua completa es significativa y tales hosts pueden usar esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="914a3-338">In some applications, this complete mutual ordering is significant, and such hosts can use this property.</span></span>  
  
 <span data-ttu-id="914a3-339">La enumeración no incluye ningún elemento cuyas condiciones no se evaluaran como true ni incluye todos los elementos agregados desde la última evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-339">The enumeration does not include any elements whose conditions did not evaluate to true, nor does it include any items added since the last evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedProperties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ AllEvaluatedProperties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedProperties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-340">Obtiene todas las propiedades encontradas durante la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-340">Gets all properties encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="914a3-341">Todas las propiedades encontradas durante la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-341">All properties encountered during evaluation.</span></span> <span data-ttu-id="914a3-342">Esto no incluye ninguna propiedad cuyas condiciones no se evaluaran como true ni ninguna propiedad agregada desde la última evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-342">This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-343">Estas propiedades se leen durante el primer paso de la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-343">These properties are read during the first evaluation pass.</span></span> <span data-ttu-id="914a3-344">A diferencia de las propiedades devueltas por la propiedad Properties, estos se ordenan e incluye las propiedades que posteriormente se reemplaza con el mismo nombre.</span><span class="sxs-lookup"><span data-stu-id="914a3-344">Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="914a3-345">Compila este proyecto usando los destinos predeterminados.</span><span class="sxs-lookup"><span data-stu-id="914a3-345">Builds this project, using the default targets.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="project.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="914a3-346">Compila este proyecto usando los destinos predeterminados.</span><span class="sxs-lookup"><span data-stu-id="914a3-346">Builds this project, using the default targets.</span></span></summary>
        <returns><span data-ttu-id="914a3-347"><see langword="true" /> si se realiza correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-347"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-348">Para establecer u obtener elementos virtuales con fines de compilación, clone explícitamente una instancia de proyecto y compile.</span><span class="sxs-lookup"><span data-stu-id="914a3-348">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="914a3-349">Este método no modifica el objeto de proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-349">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (logger As ILogger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.Build : Microsoft.Build.Framework.ILogger -&gt; bool" Usage="project.Build logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="914a3-350">Registrador que se va a usar durante la compilación.</span><span class="sxs-lookup"><span data-stu-id="914a3-350">The logger to be used during the build.</span></span></param>
        <summary><span data-ttu-id="914a3-351">Compila este proyecto usando los destinos predeterminados y el registrador especificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-351">Builds this project, using the default targets and the given logger.</span></span></summary>
        <returns><span data-ttu-id="914a3-352"><see langword="true" /> si se realiza correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-352"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-353">Para establecer u obtener elementos virtuales con fines de compilación, clone explícitamente una instancia de proyecto y compile.</span><span class="sxs-lookup"><span data-stu-id="914a3-353">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="914a3-354">Este método no modifica el objeto de proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-354">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="914a3-355">Enumerador de todos los registradores que se va a usar durante la compilación.</span><span class="sxs-lookup"><span data-stu-id="914a3-355">An enumerator over all loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="914a3-356">Compila este proyecto usando los destinos predeterminados y los registradores especificados.</span><span class="sxs-lookup"><span data-stu-id="914a3-356">Builds this project, using the default targets and the given loggers.</span></span></summary>
        <returns><span data-ttu-id="914a3-357"><see langword="true" /> si se realiza correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-357"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-358">Para establecer u obtener elementos virtuales con fines de compilación, clone explícitamente una instancia de proyecto y compile.</span><span class="sxs-lookup"><span data-stu-id="914a3-358">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="914a3-359">Este método no modifica el objeto de proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-359">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target);" />
      <MemberSignature Language="F#" Value="member this.Build : string -&gt; bool" Usage="project.Build target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="914a3-360">Destino que se va a compilar.</span><span class="sxs-lookup"><span data-stu-id="914a3-360">The target to be built.</span></span></param>
        <summary><span data-ttu-id="914a3-361">Compila este proyecto, compilando el destino especificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-361">Builds this project, building the given target.</span></span></summary>
        <returns><span data-ttu-id="914a3-362"><see langword="true" /> si se realiza correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-362"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-363">Para establecer u obtener elementos virtuales con fines de compilación, clone explícitamente una instancia de proyecto y compile.</span><span class="sxs-lookup"><span data-stu-id="914a3-363">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="914a3-364">Este método no modifica el objeto de proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-364">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] -&gt; bool" Usage="project.Build targets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="914a3-365">Matriz de destinos que se van a compilar.</span><span class="sxs-lookup"><span data-stu-id="914a3-365">An array of targets to be built.</span></span></param>
        <summary><span data-ttu-id="914a3-366">Compila este proyecto, compilando los destinos especificados.</span><span class="sxs-lookup"><span data-stu-id="914a3-366">Builds this project, building the given targets.</span></span></summary>
        <returns><span data-ttu-id="914a3-367"><see langword="true" /> si se realiza correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-367"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-368">Para establecer u obtener elementos virtuales con fines de compilación, clone explícitamente una instancia de proyecto y compile.</span><span class="sxs-lookup"><span data-stu-id="914a3-368">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="914a3-369">Este método no modifica el objeto de proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-369">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="914a3-370">Registradores que se van a usar durante la compilación.</span><span class="sxs-lookup"><span data-stu-id="914a3-370">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="914a3-371">Registradores remotos que se van a usar durante la compilación.</span><span class="sxs-lookup"><span data-stu-id="914a3-371">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="914a3-372">Compila este proyecto usando los destinos predeterminados, y los registradores y los registradores remotos especificados.</span><span class="sxs-lookup"><span data-stu-id="914a3-372">Builds this project, using the default targets and the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="914a3-373"><see langword="true" /> si se realiza correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-373"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-374">Para establecer u obtener elementos virtuales con fines de compilación, clone explícitamente una instancia de proyecto y compile.</span><span class="sxs-lookup"><span data-stu-id="914a3-374">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="914a3-375">Este método no modifica el objeto de proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-375">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="914a3-376">Destino que se va a compilar.</span><span class="sxs-lookup"><span data-stu-id="914a3-376">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="914a3-377">Registradores que se van a usar durante la compilación.</span><span class="sxs-lookup"><span data-stu-id="914a3-377">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="914a3-378">Compila este proyecto compilando el destino especificado y usando los registradores indicados.</span><span class="sxs-lookup"><span data-stu-id="914a3-378">Builds this project, building the given target and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="914a3-379"><see langword="true" /> si se realiza correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-379"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-380">Para establecer u obtener elementos virtuales con fines de compilación, clone explícitamente una instancia de proyecto y compile.</span><span class="sxs-lookup"><span data-stu-id="914a3-380">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="914a3-381">Este método no modifica el objeto de proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-381">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="914a3-382">Destinos que se van a compilar.</span><span class="sxs-lookup"><span data-stu-id="914a3-382">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="914a3-383">Registradores que se van a usar durante la compilación.</span><span class="sxs-lookup"><span data-stu-id="914a3-383">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="914a3-384">Compila este proyecto compilando los destinos especificados y usando los registradores indicados.</span><span class="sxs-lookup"><span data-stu-id="914a3-384">Builds this project, building the given targets and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="914a3-385"><see langword="true" /> si se realiza correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-385"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-386">Para establecer u obtener elementos virtuales con fines de compilación, clone explícitamente una instancia de proyecto y compile.</span><span class="sxs-lookup"><span data-stu-id="914a3-386">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="914a3-387">Este método no modifica el objeto de proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-387">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="914a3-388">Destino que se va a compilar.</span><span class="sxs-lookup"><span data-stu-id="914a3-388">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="914a3-389">Registradores que se van a usar durante la compilación.</span><span class="sxs-lookup"><span data-stu-id="914a3-389">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="914a3-390">Registradores remotos que se van a usar durante la compilación.</span><span class="sxs-lookup"><span data-stu-id="914a3-390">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="914a3-391">Compila este proyecto compilando el destino especificado, y usando los registradores y los registradores remotos indicados.</span><span class="sxs-lookup"><span data-stu-id="914a3-391">Builds this project, building the given target and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="914a3-392"><see langword="true" /> si se realiza correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-392"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-393">Para establecer u obtener elementos virtuales con fines de compilación, clone explícitamente una instancia de proyecto y compile.</span><span class="sxs-lookup"><span data-stu-id="914a3-393">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="914a3-394">Este método no modifica el objeto de proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-394">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="914a3-395">Destinos que se van a compilar.</span><span class="sxs-lookup"><span data-stu-id="914a3-395">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="914a3-396">Registradores que se van a usar durante la compilación.</span><span class="sxs-lookup"><span data-stu-id="914a3-396">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="914a3-397">Registradores remotos que se van a usar durante la compilación.</span><span class="sxs-lookup"><span data-stu-id="914a3-397">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="914a3-398">Compila este proyecto compilando los destinos especificados, y usando los registradores y los registradores remotos indicados.</span><span class="sxs-lookup"><span data-stu-id="914a3-398">Builds this project, building the given targets and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="914a3-399"><see langword="true" /> si se realiza correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-399"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-400">Para establecer u obtener elementos virtuales con fines de compilación, clone explícitamente una instancia de proyecto y compile.</span><span class="sxs-lookup"><span data-stu-id="914a3-400">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="914a3-401">Este método no modifica el objeto de proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-401">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; ConditionedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; ConditionedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionedProperties As IDictionary(Of String, List(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ ConditionedProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionedProperties : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt;" Usage="Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-402">Obtiene una colección de posibles valores de propiedades usados para evaluar condiciones encontradas en propiedades, grupos de propiedades, importaciones y whens.</span><span class="sxs-lookup"><span data-stu-id="914a3-402">Gets a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span></summary>
        <value><span data-ttu-id="914a3-403">Una colección de posibles valores para las propiedades usadas para evaluar condiciones encontradas en Propiedades, grupos de propiedades, importaciones y cuándo del.</span><span class="sxs-lookup"><span data-stu-id="914a3-403">A collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span> <span data-ttu-id="914a3-404">La colección está en forma canónica.</span><span class="sxs-lookup"><span data-stu-id="914a3-404">The collection is in canonical form.</span></span> <span data-ttu-id="914a3-405">El nombre de la entrada es el nombre de la propiedad que se va a evaluar y el valor es una lista de posibles valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="914a3-405">The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-406">Por ejemplo, si existían las siguientes condiciones en las propiedades de un proyecto: Condition&#124;$(plataforma)' == ' depurar&#124;x 86' "Condition ' == 'Versión'" en la tabla se rellenaría con {"configuración", {"Debug", "Release"}} {"plataforma", {"x86"}} se utiliza esta colección Visual Studio para determinar las configuraciones definidas en el proyecto</span><span class="sxs-lookup"><span data-stu-id="914a3-406">For example, if the following conditions existed on properties in a project: Condition="'$(Configuration)&#124;$(Platform)' == 'Debug&#124;x86'" Condition="'$(Configuration)' == 'Release'" the table would be populated with { "Configuration", { "Debug", "Release" }} { "Platform", { "x86" }} This collection is used by Visual Studio to determine the configurations defined in the project</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProjectInstance">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="914a3-407">Crea una instancia del proyecto basada en este proyecto, pero desconectada completamente de él.</span><span class="sxs-lookup"><span data-stu-id="914a3-407">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-408">Puede usarse para crear de forma independiente.</span><span class="sxs-lookup"><span data-stu-id="914a3-408">Can be used to build independently.</span></span> <span data-ttu-id="914a3-409">El proyecto original se evalúa antes de crear la instancia, si es necesario, para que el proyecto original se marca como sin modificar.</span><span class="sxs-lookup"><span data-stu-id="914a3-409">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="914a3-410">Crea una instancia del proyecto basada en este proyecto, pero desconectada completamente de él.</span><span class="sxs-lookup"><span data-stu-id="914a3-410">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="914a3-411">Instancia del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-411">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-412">Puede usarse para crear de forma independiente.</span><span class="sxs-lookup"><span data-stu-id="914a3-412">Can be used to build independently.</span></span> <span data-ttu-id="914a3-413">El proyecto original se evalúa antes de crear la instancia, si es necesario, para que el proyecto original se marca como sin modificar.</span><span class="sxs-lookup"><span data-stu-id="914a3-413">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance (Microsoft.Build.Execution.ProjectInstanceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance(valuetype Microsoft.Build.Execution.ProjectInstanceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance (settings As ProjectInstanceSettings) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance(Microsoft::Build::Execution::ProjectInstanceSettings settings);" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : Microsoft.Build.Execution.ProjectInstanceSettings -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.Build.Execution.ProjectInstanceSettings" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="914a3-414">Determina si la instancia creada a partir del proyecto es inmutable y si contiene una tabla de búsqueda para mejorar el rendimiento.</span><span class="sxs-lookup"><span data-stu-id="914a3-414">Determines whether created project instance is immutable and whether it contains a look up table to improve performance.</span></span></param>
        <summary><span data-ttu-id="914a3-415">Crea una instancia del proyecto basada en este proyecto, pero desconectada completamente de él.</span><span class="sxs-lookup"><span data-stu-id="914a3-415">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="914a3-416">Instancia del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-416">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-417">Puede usarse para crear de forma independiente.</span><span class="sxs-lookup"><span data-stu-id="914a3-417">Can be used to build independently.</span></span> <span data-ttu-id="914a3-418">El proyecto original se evalúa antes de crear la instancia, si es necesario, para que el proyecto original se marca como sin modificar.</span><span class="sxs-lookup"><span data-stu-id="914a3-418">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryPath : string" Usage="Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-419">Obtiene el directorio raíz de este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-419">Gets the root directory for this project.</span></span></summary>
        <value><span data-ttu-id="914a3-420">El directorio raíz para este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-420">The root directory for this project.</span></span> <span data-ttu-id="914a3-421">El directorio raíz nunca es null; los proyectos en memoria usan el directorio actual en el momento de la carga del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-421">The root directory is never null; in-memory projects use the current directory at the time of project load.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMarkDirty">
      <MemberSignature Language="C#" Value="public bool DisableMarkDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableMarkDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableMarkDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableMarkDirty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableMarkDirty : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-422">Obtiene o establece un valor que indica si <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> se ha deshabilitado temporalmente.</span><span class="sxs-lookup"><span data-stu-id="914a3-422">Gets or sets a value that indicates whether <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> is temporarily disabled.</span></span> <span data-ttu-id="914a3-423">Esto permite, por ejemplo, establecer una propiedad global sin marcar el proyecto como modificado para que se vuelva a evaluar como consecuencia.</span><span class="sxs-lookup"><span data-stu-id="914a3-423">This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.</span></span></summary>
        <value><span data-ttu-id="914a3-424"><see langword="true" /> para indicar <see langword="MarkDirty" /> está temporalmente deshabilitada; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-424"><see langword="true" /> to indicate <see langword="MarkDirty" /> is temporarily disabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationCounter">
      <MemberSignature Language="C#" Value="public int EvaluationCounter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EvaluationCounter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluationCounter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EvaluationCounter { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluationCounter : int" Usage="Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-425">Obtiene un número que se incrementa cada vez que se vuelve a evaluar el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-425">Gets a number that is incremented every time that project is re-evaluated.</span></span></summary>
        <value><span data-ttu-id="914a3-426">Valor incrementado.</span><span class="sxs-lookup"><span data-stu-id="914a3-426">The incremented value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-427">Este valor se debe comparar con los valores anteriores para ver si se ha vuelto a evaluar el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-427">This value should be compared with previous values to see if the project has been re-evaluated.</span></span> <span data-ttu-id="914a3-428">No debe usarse para determinar cuántas veces ha sido vuelve a evaluar el proyecto ya que se puede incrementar en más de uno por una nueva evaluación determinada.</span><span class="sxs-lookup"><span data-stu-id="914a3-428">It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="member this.ExpandString : string -&gt; string" Usage="project.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="914a3-429">Cadena que se va a evaluar.</span><span class="sxs-lookup"><span data-stu-id="914a3-429">The string to be evaluated.</span></span></param>
        <summary><span data-ttu-id="914a3-430">Evalúa la cadena especificada expandiendo elementos y propiedades.</span><span class="sxs-lookup"><span data-stu-id="914a3-430">Evaluates the given string by expanding items and properties.</span></span> <span data-ttu-id="914a3-431">La cadena se evalúa como si estuviera al final del archivo de proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-431">The string is evaluated as if it were found at the very end of the project file.</span></span></summary>
        <returns><span data-ttu-id="914a3-432">Cadena evaluada.</span><span class="sxs-lookup"><span data-stu-id="914a3-432">The evaluated string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-433">Este método puede usarse cuando la evaluación de mejor esfuerzo es suficiente.</span><span class="sxs-lookup"><span data-stu-id="914a3-433">This method can be used when best-effort evaluation is sufficient.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string with get, set" Usage="Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-434">Obtiene o establece la ruta de acceso completa al archivo de código fuente del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-434">Gets or sets the full path to the project source file.</span></span></summary>
        <value><span data-ttu-id="914a3-435">La ruta de acceso completa para el archivo de código fuente del proyecto o una cadena vacía si el proyecto no se cargó desde el disco.</span><span class="sxs-lookup"><span data-stu-id="914a3-435">The full path to the project source file, or an empty string if the project was not loaded from disk.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-436">Al establecer esta propiedad en un proyecto en una colección de proyectos, cambia el nombre del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-436">Setting this property on a project in a project collection renames the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="914a3-437">Obtiene el valor de escape evaluado del atributo Include de los elementos proporcionados.</span><span class="sxs-lookup"><span data-stu-id="914a3-437">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItem) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItem -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="914a3-438">Elemento que se va a evaluar y para el que se van a generar secuencias de escape.</span><span class="sxs-lookup"><span data-stu-id="914a3-438">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="914a3-439">Obtiene el valor de escape evaluado del atributo Include de los elementos proporcionados.</span><span class="sxs-lookup"><span data-stu-id="914a3-439">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
        <returns><span data-ttu-id="914a3-440">Valor de escape evaluado del atributo de inclusión de los elementos que se hayan proporcionado.</span><span class="sxs-lookup"><span data-stu-id="914a3-440">The evaluated, escaped value of the Include attribute of the provided items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinition) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="914a3-441">Definición de elemento que se va a evaluar y para la que se van a generar secuencias de escape.</span><span class="sxs-lookup"><span data-stu-id="914a3-441">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="914a3-442">Obtiene el valor de escape evaluado del atributo Include de la definición de elemento proporcionada.</span><span class="sxs-lookup"><span data-stu-id="914a3-442">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="914a3-443">Valor del atributo de inclusión.</span><span class="sxs-lookup"><span data-stu-id="914a3-443">The value of the Include attribute.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItems itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="914a3-444">Tipo de elemento que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="914a3-444">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="914a3-445">Obtiene todos los elementos del proyecto que son del tipo de elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-445">Gets all the items in the project of the given item type.</span></span> <span data-ttu-id="914a3-446">Si no hay ninguno, devuelve una lista vacía.</span><span class="sxs-lookup"><span data-stu-id="914a3-446">If there are none, returns an empty list.</span></span> <span data-ttu-id="914a3-447">Use AddItem o RemoveItem para modificar los elementos de este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-447">Use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="914a3-448">Todos los elementos del proyecto del tipo de elemento especificado, o bien una lista vacía si no hay ningún elemento con el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-448">All the items in the project of the given item type, or an empty list if there are no items with the given item name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-449">Use AddItem o RemoveItem para modificar los elementos de este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-449">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude (string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude(string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByEvaluatedInclude (evaluatedInclude As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsByEvaluatedInclude(System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByEvaluatedInclude : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsByEvaluatedInclude evaluatedInclude" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="evaluatedInclude"><span data-ttu-id="914a3-450">Atributo Include evaluado.</span><span class="sxs-lookup"><span data-stu-id="914a3-450">The evaluated Include attribute.</span></span></param>
        <summary><span data-ttu-id="914a3-451">Obtiene todos los elementos que tienen el atributo Include evaluado especificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-451">Gets all items that have the given evaluated Include attribute.</span></span></summary>
        <returns><span data-ttu-id="914a3-452">Todos los elementos que tienen el atributo de inclusión evaluado que se haya especificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-452">All items that have the given evaluated Include attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-453">Por ejemplo, este método podría devolver todos los elementos que tienen el atributo Include evaluado "Component.cpp evaluado".</span><span class="sxs-lookup"><span data-stu-id="914a3-453">For example, this method might return all items that have the evaluated Include attribute "component.cpp".</span></span> <span data-ttu-id="914a3-454">Normalmente, se devuelven cero o uno de los elementos.</span><span class="sxs-lookup"><span data-stu-id="914a3-454">Typically zero or one items are returned.</span></span> <span data-ttu-id="914a3-455">Sin embargo, puede haber varios elementos con la misma ruta de acceso y los diferentes tipos de elementos, o incluso con los mismos tipos de elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-455">However, there may be multiple items with the same path and different item types, or even with the same item types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsIgnoringCondition (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsIgnoringCondition(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItemsIgnoringCondition : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsIgnoringCondition itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="914a3-456">Tipo de elemento que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="914a3-456">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="914a3-457">Obtiene todos los elementos del proyecto del tipo especificado, tanto si su atributo Condition se evalúa como true o no.</span><span class="sxs-lookup"><span data-stu-id="914a3-457">Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span> <span data-ttu-id="914a3-458">Es una lista de solo lectura; use AddItem o RemoveItem para modificar los elementos de este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-458">This is a read-only list: use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="914a3-459">Todos los elementos del proyecto del tipo dado, tanto si su atributo Condition se evalúa como "true" o no.</span><span class="sxs-lookup"><span data-stu-id="914a3-459">All the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-460">Es una lista de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="914a3-460">This is a read-only list.</span></span> <span data-ttu-id="914a3-461">Use AddItem o RemoveItem para modificar los elementos de este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-461">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalProject">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetLogicalProject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLogicalProject () As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ GetLogicalProject();" />
      <MemberSignature Language="F#" Value="member this.GetLogicalProject : unit -&gt; seq&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="project.GetLogicalProject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="914a3-462">Obtiene un enumerador de todos los elementos del "proyecto lógico".</span><span class="sxs-lookup"><span data-stu-id="914a3-462">Gets an enumerator over all the elements in the "logical project".</span></span> <span data-ttu-id="914a3-463">El proyecto lógico se define como el proyecto no evaluado obtenido a partir del único archivo de MSBuild que resulta de alinear el texto de todas las importaciones del archivo de manifiesto del proyecto de MSBuild original.</span><span class="sxs-lookup"><span data-stu-id="914a3-463">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.</span></span></summary>
        <returns><span data-ttu-id="914a3-464">Enumerador de todos los elementos del "proyecto lógico".</span><span class="sxs-lookup"><span data-stu-id="914a3-464">An enumerator over all the elements in the "logical project".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-465">El proyecto lógico se define como el proyecto no evaluado había obtenido en el archivo de MSBuild único que es el resultado de incluir alineado en el texto de todas las importaciones del archivo de manifiesto de proyecto de MSBuild original.</span><span class="sxs-lookup"><span data-stu-id="914a3-465">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of including inline the text of all imports of the original MSBuild project manifest file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="914a3-466">Obtiene el valor con escape del metadato con el nombre especificado en el elemento proporcionado.</span><span class="sxs-lookup"><span data-stu-id="914a3-466">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectMetadata metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectMetadata metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadata) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectMetadata ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectMetadata -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="914a3-467">Metadato para el que se van a generar secuencias de escape.</span><span class="sxs-lookup"><span data-stu-id="914a3-467">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="914a3-468">Obtiene el valor con escape del metadato proporcionado.</span><span class="sxs-lookup"><span data-stu-id="914a3-468">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="914a3-469">Valor con escape del metadato que se haya proporcionado.</span><span class="sxs-lookup"><span data-stu-id="914a3-469">The escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItem item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItem item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItem, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItem * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="914a3-470">Elemento para cuyos metadatos se van a generar secuencias de escape.</span><span class="sxs-lookup"><span data-stu-id="914a3-470">The item whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="914a3-471">Nombre de los metadatos para el que se van a generar secuencias de escape.</span><span class="sxs-lookup"><span data-stu-id="914a3-471">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="914a3-472">Obtiene el valor con escape del metadato con el nombre especificado en el elemento proporcionado.</span><span class="sxs-lookup"><span data-stu-id="914a3-472">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="914a3-473">Valor con escape del metadato con el nombre especificado en el elemento que se haya proporcionado.</span><span class="sxs-lookup"><span data-stu-id="914a3-473">The escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinition, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="914a3-474">Definición de elemento para cuyos metadatos se van a generar secuencias de escape.</span><span class="sxs-lookup"><span data-stu-id="914a3-474">The item definition whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="914a3-475">Nombre de los metadatos para el que se van a generar secuencias de escape.</span><span class="sxs-lookup"><span data-stu-id="914a3-475">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="914a3-476">Obtiene el valor con escape del metadato con el nombre especificado en la definición de elemento proporcionada.</span><span class="sxs-lookup"><span data-stu-id="914a3-476">Gets the escaped value of the metadatum with the provided name on the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="914a3-477">Valor con escape del metadato con el nombre especificado en la definición de elemento que se haya proporcionado.</span><span class="sxs-lookup"><span data-stu-id="914a3-477">The escaped value of the metadatum with the provided name on the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="914a3-478">Nombre de la propiedad que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="914a3-478">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="914a3-479">Obtiene cualquier propiedad del proyecto que tenga el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-479">Gets any property in the project that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="914a3-480">Cualquier propiedad del proyecto que tenga el nombre especificado, o bien <see langword="null" /> si no existe ninguna propiedad con ese nombre.</span><span class="sxs-lookup"><span data-stu-id="914a3-480">Any property in the project that has the specified name, or <see langword="null" /> if no property of that name exists.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="project.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="914a3-481">Nombre de la propiedad cuyo valor se recupera.</span><span class="sxs-lookup"><span data-stu-id="914a3-481">The name of the property whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="914a3-482">Obtiene el valor de la propiedad especificada en este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-482">Gets the value of the given property in this project.</span></span></summary>
        <returns><span data-ttu-id="914a3-483">Valor de la propiedad especificada de este proyecto, o bien una cadena vacía si no existe ninguna propiedad con ese nombre.</span><span class="sxs-lookup"><span data-stu-id="914a3-483">The value of the given property in this project, or an empty string if no property of that name exists.</span></span> <span data-ttu-id="914a3-484">Las secuencias de escape se convierten antes de devolver la cadena.</span><span class="sxs-lookup"><span data-stu-id="914a3-484">Escape sequences are converted before returning the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-485">Una propiedad con un valor de cadena vacía y ninguna propiedad en absoluto no distinguen entre este método.</span><span class="sxs-lookup"><span data-stu-id="914a3-485">A property with a value of empty string and no property at all are not distinguished between by this method.</span></span> <span data-ttu-id="914a3-486">Para determinar si una propiedad se establece en absoluto en el proyecto, use GetProperty (nombre).</span><span class="sxs-lookup"><span data-stu-id="914a3-486">To determine if a property is set at all in the project, use GetProperty(name).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Evaluation.ProjectProperty -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="914a3-487">Propiedad para la que se van a generar secuencias de escape.</span><span class="sxs-lookup"><span data-stu-id="914a3-487">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="914a3-488">Obtiene el valor con escape de la propiedad que se haya proporcionado.</span><span class="sxs-lookup"><span data-stu-id="914a3-488">Gets the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="914a3-489">Valor con escape de la propiedad que se haya proporcionado.</span><span class="sxs-lookup"><span data-stu-id="914a3-489">The escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-490">Obtiene un diccionario de las propiedades globales usadas para la evaluación de este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-490">Gets a dictionary of the global properties used for the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="914a3-491">Un diccionario de las propiedades globales usadas para la evaluación de este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-491">A dictionary of the global properties used for the evaluation of this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-492">Este es el captador expuesto públicamente, que se traduce en un IDictionary muerto de solo lectura\<string, string >.</span><span class="sxs-lookup"><span data-stu-id="914a3-492">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 <span data-ttu-id="914a3-493">Con el fin de distinguir con facilidad cuando nos estamos desfasadas, establecer y quitar propiedades globales se realizan con <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> y <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="914a3-493">In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; Imports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; Imports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Imports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Imports As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ Imports { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Imports : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.Imports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-494">Obtiene una lista de todos los archivos que contribuyeron a la evaluación de este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-494">Gets a list of all the files that contributed to the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="914a3-495">Una lista de todos los archivos que contribuyeron a la evaluación de este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-495">A list of all the files that contributed to the evaluation of this project.</span></span>  
  
 <span data-ttu-id="914a3-496">El nombre de cada elemento es el elemento Import que produjo la importación del archivo.</span><span class="sxs-lookup"><span data-stu-id="914a3-496">The name of each item is the Import element that caused the file to be imported.</span></span> <span data-ttu-id="914a3-497">El valor de cada elemento es la raíz de proyecto del proyecto importado.</span><span class="sxs-lookup"><span data-stu-id="914a3-497">The value of each item is the project root of the imported project.</span></span> <span data-ttu-id="914a3-498">No se incluyen los elementos Import cuyo atributo Condition se evaluó como false.</span><span class="sxs-lookup"><span data-stu-id="914a3-498">Import elements whose Condition attribute evaluated to false are not included.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-499">No se incluye la raíz del proyecto de este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-499">The project root of this project is not included.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportsIncludingDuplicates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportsIncludingDuplicates As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ ImportsIncludingDuplicates { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportsIncludingDuplicates : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-500">Obtiene una lista de importaciones duplicadas si una importación se importó varias veces.</span><span class="sxs-lookup"><span data-stu-id="914a3-500">Gets a list of duplicate imports if an import was imported multiple times.</span></span> <span data-ttu-id="914a3-501">Sin embargo, en la evaluación solo se usó la primera importación.</span><span class="sxs-lookup"><span data-stu-id="914a3-501">However, only the first import was used in evaluation.</span></span></summary>
        <value><span data-ttu-id="914a3-502">Una lista de importaciones duplicadas.</span><span class="sxs-lookup"><span data-stu-id="914a3-502">A list of duplicate imports.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuildEnabled">
      <MemberSignature Language="C#" Value="public bool IsBuildEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuildEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBuildEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuildEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBuildEnabled : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-503">Obtiene o establece una propiedad que selecciona si se pueden compilar los destinos y tareas de este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-503">Gets or sets a property that selects whether the targets and tasks of this project can be built.</span></span></summary>
        <value><span data-ttu-id="914a3-504"><see langword="true" /> Si se pueden compilar los destinos y tareas de este proyecto; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-504"><see langword="true" /> if the targets and tasks of this project can be built; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-505">Puede utilizarse por motivos de seguridad.</span><span class="sxs-lookup"><span data-stu-id="914a3-505">Can be used for security purposes.</span></span> <span data-ttu-id="914a3-506">De forma predeterminada, un nuevo proyecto tiene el mismo valor IsBuildEnabled como la colección de proyectos principal que lo contiene.</span><span class="sxs-lookup"><span data-stu-id="914a3-506">By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it.</span></span> <span data-ttu-id="914a3-507">Cuando IsBuildEnabled es false, se produce un error en el método de compilación en este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-507">When IsBuildEnabled is false, the Build method on this project fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-508">Obtiene un valor que indica si se ha modificado este proyecto, por lo que se debe volver a evaluar.</span><span class="sxs-lookup"><span data-stu-id="914a3-508">Gets a value that indicates whether this project has been modified so that it must be reevaluated.</span></span></summary>
        <value><span data-ttu-id="914a3-509"><see langword="true" /> Si se ha modificado este proyecto para que se debe volver a evaluar; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-509"><see langword="true" /> if this project has been modified so that it must be reevaluated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-510">Un proyecto se modifica y se debe volver a evaluar cuando subyacente código fuente del proyecto, incluidos los cambios en los archivos importados.</span><span class="sxs-lookup"><span data-stu-id="914a3-510">A project is modified and must be reevaluated when the underlying project source code, including changes to imported files.</span></span> <span data-ttu-id="914a3-511">También se ha modificado un proyecto debe volver a evaluar si los cambios del conjunto de la herramienta de proyección.</span><span class="sxs-lookup"><span data-stu-id="914a3-511">A project is also modified must be reevaluated if the project tool set changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Evaluation.ProjectItemDefinition&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Evaluation.ProjectItemDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-512">Obtiene un diccionario de definiciones de elementos de este proyecto, organizado por tipo de elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-512">Gets a dictionary of item definitions in this project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="914a3-513">Un diccionario de definiciones de elementos de este proyecto, organizado por tipo de elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-513">A dictionary of item definitions in this project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-514">Obtiene un enumerador de todos los elementos de este proyecto, ordenado dentro de los grupos de tipos de elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-514">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="914a3-515">Enumerador de todos los elementos de este proyecto, ordenado dentro de los grupos de tipos de elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-515">An enumerator over all items in this project, ordered within groups of item types.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemsIgnoringCondition As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ ItemsIgnoringCondition { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemsIgnoringCondition : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-516">Obtiene un enumerador de todos los elementos de este proyecto, ordenado dentro de los grupos de tipos de elemento.</span><span class="sxs-lookup"><span data-stu-id="914a3-516">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="914a3-517">Enumerador de todos los elementos de este proyecto, ordenado dentro de los grupos de tipos de elemento, incluidos los elementos cuyas condiciones se evalúan como false o que están contenidos dentro de grupos de elementos cuya condición se evalúa como <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-517">An enumerator over all items in this project, ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-518">Puede utilizarse para mostrar todos los elementos, aunque no forman parte de la compilación en la configuración actual.</span><span class="sxs-lookup"><span data-stu-id="914a3-518">Can be used to display all items, even if they are not part of the build in the current configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-519">Obtiene un enumerador de todos los tipos de elemento de este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-519">Gets an enumerator over all item types in this project.</span></span></summary>
        <value><span data-ttu-id="914a3-520">Enumerador de todos los tipos de elemento de este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-520">An enumerator over all item types in this project.</span></span> <span data-ttu-id="914a3-521">Es una colección ordenada.</span><span class="sxs-lookup"><span data-stu-id="914a3-521">This is an ordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkDirty">
      <MemberSignature Language="C#" Value="public void MarkDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.MarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarkDirty();" />
      <MemberSignature Language="F#" Value="member this.MarkDirty : unit -&gt; unit" Usage="project.MarkDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="914a3-522">Marca este proyecto como modificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-522">Marks this project as modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-523">Rara vez es necesario llamar a este método explícitamente, ya que todas las modificaciones que afectan a un proyecto automáticamente marcan como modificada.</span><span class="sxs-lookup"><span data-stu-id="914a3-523">It is seldom necessary to call this method explicitly, because all edits affecting a project automatically mark it as modified.</span></span>  
  
 <span data-ttu-id="914a3-524">A veces, sin embargo, este método debe llamarse.</span><span class="sxs-lookup"><span data-stu-id="914a3-524">Sometimes, however, this method must be called.</span></span> <span data-ttu-id="914a3-525">Por ejemplo, un proyecto puede tener un elemento Import cuya condición depende de un archivo que existe en un disco.</span><span class="sxs-lookup"><span data-stu-id="914a3-525">For example, a project may have an Import element whose condition depends on a file that exists on a disk.</span></span> <span data-ttu-id="914a3-526">Si no existe ese archivo en tiempo de evaluación y se crea después de la evaluación, a continuación, el proyecto debe marcarse explícitamente como modificada.</span><span class="sxs-lookup"><span data-stu-id="914a3-526">If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.</span></span>  
  
 <span data-ttu-id="914a3-527">El <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> método utiliza esta propiedad para determinar si es necesario realizar una evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-527">The <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> method uses this property to determine if an evaluation is necessary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectCollection">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectCollection ProjectCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectCollection ProjectCollection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectCollection As ProjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectCollection ^ ProjectCollection { Microsoft::Build::Evaluation::ProjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectCollection : Microsoft.Build.Evaluation.ProjectCollection" Usage="Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-528">Obtiene la colección de proyectos que contiene este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-528">Gets the project collection which contains this project.</span></span></summary>
        <value><span data-ttu-id="914a3-529">La colección de proyectos que contiene este proyecto, el cual nunca es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-529">The project collection that contains this project, which is never <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-530">La ubicación del propio archivo de origen, no de ningún contenido específico dentro de él.</span><span class="sxs-lookup"><span data-stu-id="914a3-530">The location of the originating file itself, not any specific content within it.</span></span> <span data-ttu-id="914a3-531">Si al archivo no se le ha especificado un nombre, es una ubicación vacía.</span><span class="sxs-lookup"><span data-stu-id="914a3-531">If the file has not been given a name, this is an empty location.</span></span> <span data-ttu-id="914a3-532">Este es un caso legítimo de no tener ninguna ubicación.</span><span class="sxs-lookup"><span data-stu-id="914a3-532">This is a legitimate case of having no location.</span></span></summary>
        <value><span data-ttu-id="914a3-533">El que se origina ubicación del archivo, o una ubicación vacía si el archivo no se asignó un nombre.</span><span class="sxs-lookup"><span data-stu-id="914a3-533">The originating file location, or an empty location if the file has not been given a name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-534">Obtiene un enumerador de todas las propiedades de este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-534">Gets an enumerator over all properties in this project.</span></span> <span data-ttu-id="914a3-535">Es una colección desordenada.</span><span class="sxs-lookup"><span data-stu-id="914a3-535">This is an unordered collection.</span></span></summary>
        <value><span data-ttu-id="914a3-536">Un enumerador sobre todas las propiedades de este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-536">An enumerator over all properties in this project.</span></span> <span data-ttu-id="914a3-537">Puesto que las propiedades se evalúan a medida que aparecen, es una colección desordenada.</span><span class="sxs-lookup"><span data-stu-id="914a3-537">Since properties are evaluated as they appear, this is an unordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReevaluateIfNecessary">
      <MemberSignature Language="C#" Value="public void ReevaluateIfNecessary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReevaluateIfNecessary() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReevaluateIfNecessary ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReevaluateIfNecessary();" />
      <MemberSignature Language="F#" Value="member this.ReevaluateIfNecessary : unit -&gt; unit" Usage="project.ReevaluateIfNecessary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="914a3-538">Vuelve a evaluar el proyecto para incorporar los cambios realizados.</span><span class="sxs-lookup"><span data-stu-id="914a3-538">Reevaluates the project to incorporate any changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-539">El proyecto se vuelve a evaluar solo si está marcado como modificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-539">The project is reevaluated only if it is marked as modified.</span></span> <span data-ttu-id="914a3-540">Reevaluación incorpora todos los cambios realizados en el código fuente del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-540">Reevaluation incorporates all changes made to the project source code.</span></span>  
  
 <span data-ttu-id="914a3-541">InvalidProjectFileException se produce si se produce un error en la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-541">Throws InvalidProjectFileException if the evaluation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGlobalProperty">
      <MemberSignature Language="C#" Value="public bool RemoveGlobalProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveGlobalProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveGlobalProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveGlobalProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveGlobalProperty : string -&gt; bool" Usage="project.RemoveGlobalProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="914a3-542">Nombre de la propiedad global que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="914a3-542">The name of the global property to be removed.</span></span></param>
        <summary><span data-ttu-id="914a3-543">Quita una propiedad global y marca el proyecto como modificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-543">Removes a global property and marks the project as modified.</span></span></summary>
        <returns><span data-ttu-id="914a3-544"><see langword="true" /> si se ha establecido el valor de la propiedad global.</span><span class="sxs-lookup"><span data-stu-id="914a3-544"><see langword="true" /> if the value of the global property was set.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Evaluation.ProjectItem -&gt; bool" Usage="project.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="914a3-545">Elemento que va a quitarse.</span><span class="sxs-lookup"><span data-stu-id="914a3-545">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="914a3-546">Quita un elemento del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-546">Removes an item from the project.</span></span> <span data-ttu-id="914a3-547">El elemento que se va a quitar debe estar presente en el proyecto y no debe originarse a partir de un archivo importado.</span><span class="sxs-lookup"><span data-stu-id="914a3-547">The item to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="914a3-548"><see langword="true" /> si el elemento está presente en este proyecto evaluado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-548"><see langword="true" /> if the item is present in this evaluated project; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="914a3-549">Normalmente este método devuelve true, ya que si el elemento solicitado no está presente, el método produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="914a3-549">Normally this method returns true, since if the requested item is not present, the method throws an exception.</span></span> <span data-ttu-id="914a3-550">Sin embargo, si el elemento solo está presente en la colección ItemsIgnoringCondition, el método devuelve false.</span><span class="sxs-lookup"><span data-stu-id="914a3-550">If the item is present only in the ItemsIgnoringCondition collection, however, the method returns false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-551">Si el grupo de elementos que contiene el elemento se queda vacío, también se quita.</span><span class="sxs-lookup"><span data-stu-id="914a3-551">If the item group containing the item becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="914a3-552">Si el elemento se origina en un carácter comodín o expresiones separadas por punto y coma, la expresión se expande primero en varios elementos.</span><span class="sxs-lookup"><span data-stu-id="914a3-552">If the item originates from a wildcard or semicolon-separated expression, the expression is first expanded into multiple items.</span></span>  
  
 <span data-ttu-id="914a3-553">El proyecto se actualiza, pero se produce ninguna evaluación adicional hasta una nueva evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-553">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="914a3-554">Por ejemplo, si un elemento se quita el tipo "i", "j" que se evalúa de "@(i)" no se modifica hasta una nueva evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-554">For example, if an item of type "i" is removed, "j" which is evaluated from "@(i)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="public void RemoveItems (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItems(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItems (items As IEnumerable(Of ProjectItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItems(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.RemoveItems : seq&lt;Microsoft.Build.Evaluation.ProjectItem&gt; -&gt; unit" Usage="project.RemoveItems items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="914a3-555">Elementos que se van a quitar.</span><span class="sxs-lookup"><span data-stu-id="914a3-555">The items to be removed.</span></span></param>
        <summary><span data-ttu-id="914a3-556">Quita todos los elementos especificados del proyecto, a menos que se originen a partir de un proyecto importado.</span><span class="sxs-lookup"><span data-stu-id="914a3-556">Removes all the given items from the project, unless they originate from an imported project.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-557">Si un elemento se origina en un proyecto importado, simplemente se omite.</span><span class="sxs-lookup"><span data-stu-id="914a3-557">If an item originates from an imported project, it is simply skipped.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (property As ProjectProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : Microsoft.Build.Evaluation.ProjectProperty -&gt; bool" Usage="project.RemoveProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="914a3-558">Propiedad que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="914a3-558">The property to remove.</span></span></param>
        <summary><span data-ttu-id="914a3-559">Quita una propiedad del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-559">Removes an property from the project.</span></span> <span data-ttu-id="914a3-560">La propiedad que se va a quitar debe estar presente en el proyecto y no debe originarse a partir de un archivo importado.</span><span class="sxs-lookup"><span data-stu-id="914a3-560">The property to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="914a3-561"><see langword="true" /> si la propiedad está presente en este proyecto evaluado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-561"><see langword="true" /> if the property is present in this evaluated project; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-562">Si el grupo de propiedades que contiene la propiedad no está vacío, también se quita.</span><span class="sxs-lookup"><span data-stu-id="914a3-562">If the property group containing the property becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="914a3-563">El proyecto se actualiza, pero se produce ninguna evaluación adicional hasta una nueva evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-563">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="914a3-564">Por ejemplo, si se quita "p", "q" que se evalúa de "$(p)" no se modifica hasta una nueva evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-564">For example, if "p" is removed, "q" which is evaluated from "$(p)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="914a3-565">Guarda el proyecto en el sistema de archivos, si se modifica, usando la codificación de caracteres predeterminada.</span><span class="sxs-lookup"><span data-stu-id="914a3-565">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; unit" Usage="project.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="914a3-566">Guarda el proyecto en el sistema de archivos, si se modifica, usando la codificación de caracteres predeterminada.</span><span class="sxs-lookup"><span data-stu-id="914a3-566">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="project.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="914a3-567">Escritor de texto en el que se va a guardar el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-567">The text writer to save the project to.</span></span></param>
        <summary><span data-ttu-id="914a3-568">Guarda el proyecto en el escritor de texto proporcionado, independientemente de que el proyecto se haya modificado o no.</span><span class="sxs-lookup"><span data-stu-id="914a3-568">Saves the project to the provided text writer, whether or not the project has been modified.</span></span> <span data-ttu-id="914a3-569">Usa la codificación de caracteres del escritor de texto y marca el proyecto como no modificado.</span><span class="sxs-lookup"><span data-stu-id="914a3-569">Uses the character encoding of the text writer and marks the project as unmodified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="project.Save path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="914a3-570">Ruta de acceso al código fuente del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-570">The path to the project source code.</span></span></param>
        <summary><span data-ttu-id="914a3-571">Guarda el proyecto en el sistema de archivos, si se modifica o si la ruta de acceso al código fuente del proyecto cambia, usando la codificación de caracteres predeterminada.</span><span class="sxs-lookup"><span data-stu-id="914a3-571">Saves the project to the file system, if modified or if the path to the project source code changes, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Text.Encoding -&gt; unit" Usage="project.Save encoding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="encoding"><span data-ttu-id="914a3-572">Codificación de caracteres que se usa para guardar el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-572">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="914a3-573">Guarda el proyecto en el sistema de archivos, si se modifica, usando la codificación de caracteres especificada.</span><span class="sxs-lookup"><span data-stu-id="914a3-573">Saves the project to the file system, if modified, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Text.Encoding -&gt; unit" Usage="project.Save (path, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="914a3-574">Ruta de acceso al código fuente del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-574">The path to the project source code.</span></span></param>
        <param name="encoding"><span data-ttu-id="914a3-575">Codificación de caracteres que se usa para guardar el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-575">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="914a3-576">Guarda el proyecto en el sistema de archivos, si se modifica o si la ruta de acceso al código fuente del proyecto cambia, usando la codificación de caracteres especificada.</span><span class="sxs-lookup"><span data-stu-id="914a3-576">Saves the project to the file system, if modified or if the path to the project source code changes, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLogicalProject">
      <MemberSignature Language="C#" Value="public void SaveLogicalProject (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveLogicalProject(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveLogicalProject (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveLogicalProject(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.SaveLogicalProject : System.IO.TextWriter -&gt; unit" Usage="project.SaveLogicalProject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="914a3-577">Sistema de escritura que guarda el archivo de proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-577">The writer that saves the project file.</span></span></param>
        <summary><span data-ttu-id="914a3-578">Guarda un archivo de proyecto "lógico" o "preprocesado", que incluye todos los archivos importados como si formaran un único archivo.</span><span class="sxs-lookup"><span data-stu-id="914a3-578">Saves a "logical" or "preprocessed" project file, that includes all the imported files as if they formed a single file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGlobalProperty">
      <MemberSignature Language="C#" Value="public bool SetGlobalProperty (string name, string escapedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetGlobalProperty(string name, string escapedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGlobalProperty (name As String, escapedValue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetGlobalProperty(System::String ^ name, System::String ^ escapedValue);" />
      <MemberSignature Language="F#" Value="member this.SetGlobalProperty : string * string -&gt; bool" Usage="project.SetGlobalProperty (name, escapedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="escapedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="914a3-579">Nombre de la propiedad global que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="914a3-579">The name of the global property to set.</span></span></param>
        <param name="escapedValue"><span data-ttu-id="914a3-580">Nuevo valor de la propiedad global.</span><span class="sxs-lookup"><span data-stu-id="914a3-580">The new value of the global property.</span></span></param>
        <summary><span data-ttu-id="914a3-581">Establece una propiedad global una vez evaluado el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-581">Sets a global property after the project has been evaluated.</span></span> <span data-ttu-id="914a3-582">Si el valor cambia, el proyecto se marca para solicitar una nueva evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-582">If the value changes, the project is marked to require reevaluation.</span></span></summary>
        <returns><span data-ttu-id="914a3-583"><see langword="true" /> si cambia el valor; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-583"><see langword="true" /> if the value changes; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty SetProperty (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty SetProperty(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, unevaluatedValue As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ SetProperty(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.SetProperty (name, unevaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="914a3-584">Nombre de la propiedad que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="914a3-584">The name of the property to set.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="914a3-585">Nuevo valor no evaluado de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="914a3-585">The new unevaluated value of the property.</span></span></param>
        <summary><span data-ttu-id="914a3-586">Establece o agrega al proyecto una propiedad con el nombre y el valor especificados.</span><span class="sxs-lookup"><span data-stu-id="914a3-586">Sets or adds a property with the given name and value to the project.</span></span> <span data-ttu-id="914a3-587">Sobrescribe el valor de una propiedad con el mismo nombre si no se originó en un archivo importado.</span><span class="sxs-lookup"><span data-stu-id="914a3-587">Overwrites the value of a property with the same name if it did not originate in an imported file.</span></span></summary>
        <returns><span data-ttu-id="914a3-588">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="914a3-588">The property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-589">Si no hay ninguna propiedad con el nombre especificado, actualiza la última propiedad existente con el nombre especificado que no tiene ninguna condición en sí mismo o a su grupo de propiedades, a menos que se originó en un archivo importado.</span><span class="sxs-lookup"><span data-stu-id="914a3-589">If there is no property with the given name, updates the last existing property with the given name that has no condition on itself or its property group, unless it originated in an imported file.</span></span>  
  
 <span data-ttu-id="914a3-590">En caso contrario, se agrega una nueva propiedad en el primer grupo de propiedades sin una condición, crear un grupo de propiedades si es necesario tras el último grupo de propiedades existente, más al principio del proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-590">Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.</span></span>  
  
 <span data-ttu-id="914a3-591">Evaluación realiza de forma óptima.</span><span class="sxs-lookup"><span data-stu-id="914a3-591">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="914a3-592">Las propiedades que se definen en el origen del proyecto siguiendo la nueva propiedad se pueden usar para la evaluación.</span><span class="sxs-lookup"><span data-stu-id="914a3-592">Properties that are defined in the project source following the new property may be used for evaluation.</span></span> <span data-ttu-id="914a3-593">Esta propiedad solo se evalúa.</span><span class="sxs-lookup"><span data-stu-id="914a3-593">Only this property is evaluated.</span></span> <span data-ttu-id="914a3-594">No se ven afectadas otras propiedades que pueden depender de él.</span><span class="sxs-lookup"><span data-stu-id="914a3-594">Other properties that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipEvaluation">
      <MemberSignature Language="C#" Value="public bool SkipEvaluation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipEvaluation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipEvaluation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipEvaluation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipEvaluation : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-595">Obtiene o establece un valor que indica si ReevaluateIfNecessary está deshabilitado temporalmente.</span><span class="sxs-lookup"><span data-stu-id="914a3-595">Gets or sets a value that indicates whether ReevaluateIfNecessary is temporarily disabled.</span></span> <span data-ttu-id="914a3-596">Esto es útil cuando el host espera realizar varias lecturas y escrituras en el proyecto, y desea sacrificar temporalmente la exactitud por el rendimiento.</span><span class="sxs-lookup"><span data-stu-id="914a3-596">This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.</span></span></summary>
        <value><span data-ttu-id="914a3-597">Una marca que determina si ReevaluateIfNecessary está deshabilitado temporalmente.</span><span class="sxs-lookup"><span data-stu-id="914a3-597">A flag that determines whether ReevaluateIfNecessary is temporarily disabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubToolsetVersion">
      <MemberSignature Language="C#" Value="public string SubToolsetVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubToolsetVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubToolsetVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SubToolsetVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubToolsetVersion : string" Usage="Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-598">Obtiene el valor del atributo SubToolsetVersion, si lo hubiera.</span><span class="sxs-lookup"><span data-stu-id="914a3-598">Gets the value of the SubToolsetVersion attribute, if any.</span></span> <span data-ttu-id="914a3-599">Este valor se combinó con el valor del atributo ToolsVersion para determinar las propiedades de conjunto de herramientas para este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-599">This value was combined with the value of the ToolsVersion attribute to determine the toolset properties for this project.</span></span></summary>
        <value><span data-ttu-id="914a3-600">El valor del atributo SubToolsetVersion, o una cadena vacía si el atributo no está presente.</span><span class="sxs-lookup"><span data-stu-id="914a3-600">The SubToolsetVersion attribute value, or an empty string if the attribute is not present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Evaluation.Project.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-601">Obtiene un diccionario de todos los destinos de este proyecto, ordenado por nombre de destino.</span><span class="sxs-lookup"><span data-stu-id="914a3-601">Gets a dictionary of all targets in this project, keyed by target name.</span></span></summary>
        <value><span data-ttu-id="914a3-602">Un diccionario de solo lectura de todos los destinos de este proyecto, ordenado por nombre de destino.</span><span class="sxs-lookup"><span data-stu-id="914a3-602">A read-only dictionary of all targets in this project, keyed by target name.</span></span> <span data-ttu-id="914a3-603">Los destinos invalidados no se incluyen en esta colección.</span><span class="sxs-lookup"><span data-stu-id="914a3-603">Overridden targets are not included in this collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-604">Obtiene la versión de herramientas con las que se evaluó este proyecto, si hay alguna.</span><span class="sxs-lookup"><span data-stu-id="914a3-604">Gets the tools version that this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="914a3-605">La versión de herramientas que se usó para evaluar este proyecto, si existe.</span><span class="sxs-lookup"><span data-stu-id="914a3-605">The tools version that this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-606">Establecido por el constructor.</span><span class="sxs-lookup"><span data-stu-id="914a3-606">Set by the constructor.</span></span> <span data-ttu-id="914a3-607">Esto no es necesariamente el mismo que la versión de herramientas en la etiqueta de proyecto, si lo hay; externamente especificado, por ejemplo con un modificador /tv en la línea de comandos.</span><span class="sxs-lookup"><span data-stu-id="914a3-607">This is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch on the command line.</span></span> <span data-ttu-id="914a3-608">Se puede obtener la versión de herramientas real en la etiqueta de proyecto de <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span><span class="sxs-lookup"><span data-stu-id="914a3-608">The actual tools version on the Project tag can be obtained from <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span></span> <span data-ttu-id="914a3-609">No se puede cambiar la versión de herramientas una vez creado el proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-609">The tools version cannot be changed once the project has been created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectRootElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectRootElement ^ Xml { Microsoft::Build::Construction::ProjectRootElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Evaluation.Project.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="914a3-610">Obtiene el proyecto raíz asociado a este proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-610">Gets the root project associated with this project.</span></span> <span data-ttu-id="914a3-611">Nunca puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-611">Can never be <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="914a3-612">El proyecto raíz asociado a este proyecto, que nunca puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="914a3-612">The root project associated with this project, which can never be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="914a3-613">No hay ninguna manera de establecer esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="914a3-613">There is no way to set this property.</span></span> <span data-ttu-id="914a3-614">Si tiene una nueva raíz del proyecto, puede evaluar en un nuevo proyecto.</span><span class="sxs-lookup"><span data-stu-id="914a3-614">If you have a new project root, evaluate it into a new project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
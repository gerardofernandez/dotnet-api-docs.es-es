<Type Name="ProjectItem" FullName="Microsoft.Build.Evaluation.ProjectItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="102e8fca83a0d7cc5abe0a48818c81df9a0c042a" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48746653" /></Metadata><TypeSignature Language="C#" Value="public class ProjectItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectItem" />
  <TypeSignature Language="F#" Value="type ProjectItem = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{ItemType}={EvaluatedInclude} [{UnevaluatedInclude}] #DirectMetadata={DirectMetadataCount}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="912e6-101">Representa un elemento de proyecto en tiempo de diseño evaluado.</span><span class="sxs-lookup"><span data-stu-id="912e6-101">Represents an evaluated design-time project item.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DirectMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; DirectMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; DirectMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectMetadata As IEnumerable(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ DirectMetadata { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectMetadata : seq&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" Usage="Microsoft.Build.Evaluation.ProjectItem.DirectMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="912e6-102">Obtiene un enumerador de todos los metadatos de elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-102">Gets an enumerator over all item metadata.</span></span></summary>
        <value><span data-ttu-id="912e6-103">Devuelve un enumerador de todos los metadatos de elemento, que nunca puede ser null.</span><span class="sxs-lookup"><span data-stu-id="912e6-103">Returns an enumerator over all item metadata, which can never be null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912e6-104">No incluye metadatos de las definiciones de elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-104">Does not include metadata from item definitions.</span></span> <span data-ttu-id="912e6-105">No incluye metadatos integrados, como "FullPath".</span><span class="sxs-lookup"><span data-stu-id="912e6-105">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectMetadataCount">
      <MemberSignature Language="C#" Value="public int DirectMetadataCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DirectMetadataCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectMetadataCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DirectMetadataCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectMetadataCount : int" Usage="Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="912e6-106">Obtiene el recuento de metadatos para este elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-106">Gets the count of metadata for this item.</span></span></summary>
        <value><span data-ttu-id="912e6-107">Devuelve el recuento de metadatos para este elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-107">Returns the count of metadata for this item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912e6-108">No incluye metadatos de las definiciones de elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-108">Does not include metadata from item definitions.</span></span> <span data-ttu-id="912e6-109">No incluye metadatos integrados, como "FullPath".</span><span class="sxs-lookup"><span data-stu-id="912e6-109">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedInclude">
      <MemberSignature Language="C#" Value="public string EvaluatedInclude { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedInclude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedInclude As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedInclude { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluatedInclude : string" Usage="Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IItem.EvaluatedInclude</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="912e6-110">Obtiene el valor evaluado del atributo Include.</span><span class="sxs-lookup"><span data-stu-id="912e6-110">Gets the evaluated value of the Include attribute.</span></span></summary>
        <value><span data-ttu-id="912e6-111">Devuelve el valor evaluado del atributo Include.</span><span class="sxs-lookup"><span data-stu-id="912e6-111">Returns the evaluated value of the Include attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912e6-112">Caracteres de escape no están presentes.</span><span class="sxs-lookup"><span data-stu-id="912e6-112">Escaped characters are not present.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadata">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata GetMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectMetadata GetMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadata (name As String) As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectMetadata ^ GetMetadata(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetMetadata : string -&gt; Microsoft.Build.Evaluation.ProjectMetadata" Usage="projectItem.GetMetadata name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItem`1.GetMetadata(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="912e6-113">Nombre de los metadatos cuyo valor se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="912e6-113">The name of the metadata whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="912e6-114">Obtiene el valor evaluado de los metadatos dados para este elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-114">Gets the evaluated value of the given metadata for this item.</span></span></summary>
        <returns><span data-ttu-id="912e6-115">Obtiene el valor evaluado de los metadatos dados para este elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-115">Gets the evaluated value of the given metadata for this item.</span></span> <span data-ttu-id="912e6-116">Devuelve null si no existe ningún metadato con el nombre dado.</span><span class="sxs-lookup"><span data-stu-id="912e6-116">Returns null if no metadata exists with the given name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912e6-117">Puede incluir metadatos de una definición de elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-117">May include metadata from an item definition.</span></span> <span data-ttu-id="912e6-118">No incluye metadatos integrados, como "FullPath".</span><span class="sxs-lookup"><span data-stu-id="912e6-118">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValue">
      <MemberSignature Language="C#" Value="public string GetMetadataValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetMetadataValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetMetadataValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetMetadataValue : string -&gt; string&#xA;override this.GetMetadataValue : string -&gt; string" Usage="projectItem.GetMetadataValue name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItem.GetMetadataValue(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="912e6-119">Nombre de los metadatos cuyo valor se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="912e6-119">The name of the metadata whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="912e6-120">Obtiene el valor evaluado de los metadatos dados para este elemento, incluyendo los metadatos que se originan a partir de una definición de elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-120">Get the evaluated value of the given metadata for this item, including metadata originating from an item definition.</span></span></summary>
        <returns><span data-ttu-id="912e6-121">Devuelve el valor evaluado de los metadatos dados para este elemento, incluyendo los metadatos que se originan a partir de una definición de elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-121">Returns the evaluated value of the given metadata for this item, including metadata originating from an item definition.</span></span> <span data-ttu-id="912e6-122">Devuelve una cadena vacía si no existe ningún metadato con el nombre dado.</span><span class="sxs-lookup"><span data-stu-id="912e6-122">Returns an empty string if no metadata exists with the given name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912e6-123">Para determinar si existen metadatos, si tiene un valor o no, use <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>.</span><span class="sxs-lookup"><span data-stu-id="912e6-123">To determine whether metadata exist, whether it has a value or not, use <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>.</span></span>  
  
 <span data-ttu-id="912e6-124">Este método puede utilizarse para tener acceso al valor de metadatos integrados, como "FullPath".</span><span class="sxs-lookup"><span data-stu-id="912e6-124">This method may be used to access the value of built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMetadata">
      <MemberSignature Language="C#" Value="public bool HasMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasMetadata (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasMetadata(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.HasMetadata : string -&gt; bool" Usage="projectItem.HasMetadata name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="912e6-125">Nombre de los metadatos que se van a buscar.</span><span class="sxs-lookup"><span data-stu-id="912e6-125">The name of the metadata to be searched for.</span></span></param>
        <summary><span data-ttu-id="912e6-126">Determina si los metadatos con el nombre dado están definidos en este elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-126">Determines whether metadata with the given name is defined on this item.</span></span></summary>
        <returns><span data-ttu-id="912e6-127">Devuelve true si los metadatos con el nombre dado están definidos en este elemento; de lo contrario, devuelve false.</span><span class="sxs-lookup"><span data-stu-id="912e6-127">Returns true if metadata with the given name is defined on this item; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912e6-128">Incluye metadatos integrados y metadatos que se originan las definiciones de elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-128">Includes built-in metadata and metadata originating from item definitions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImported : bool" Usage="Microsoft.Build.Evaluation.ProjectItem.IsImported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="912e6-129">Determina si este elemento se origina a partir de un archivo importado.</span><span class="sxs-lookup"><span data-stu-id="912e6-129">Determines if this item originates from an imported file.</span></span></summary>
        <value><span data-ttu-id="912e6-130">Devuelve true si este elemento se origina a partir de un archivo importado; de lo contrario, devuelve false.</span><span class="sxs-lookup"><span data-stu-id="912e6-130">Return true if this item originates from an imported file; false otherwise.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : string with get, set" Usage="Microsoft.Build.Evaluation.ProjectItem.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="912e6-131">Obtiene o establece el tipo de este elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-131">Gets or sets the type of this item.</span></span></summary>
        <value><span data-ttu-id="912e6-132">Devuelve el tipo de elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-132">Returns the item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ Metadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" Usage="Microsoft.Build.Evaluation.ProjectItem.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="912e6-133">Obtiene todos los metadatos para este elemento, incluidos los metadatos que se originan a partir de definiciones de elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-133">Gets all the metadata for this item, including metadata originating from item definitions.</span></span></summary>
        <value><span data-ttu-id="912e6-134">Devuelve todos los metadatos para este elemento, incluidos los metadatos que se originan a partir de definiciones de elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-134">Returns all the metadata for this item, including metadata originating from item definitions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912e6-135">No incluye metadatos integrados, como "FullPath".</span><span class="sxs-lookup"><span data-stu-id="912e6-135">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 <span data-ttu-id="912e6-136">Para agregar, quitar, o cambiar los valores de metadatos integrados, use <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A> y <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="912e6-136">To add, remove, or change the values of built-in metadata, use <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A> and <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataCount">
      <MemberSignature Language="C#" Value="public int MetadataCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.MetadataCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MetadataCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataCount : int" Usage="Microsoft.Build.Evaluation.ProjectItem.MetadataCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="912e6-137">Obtiene el recuento de metadatos para este elemento, incluyendo cualesquiera metadatos que se originen a partir de definiciones de elemento y cualesquiera metadatos integrados.</span><span class="sxs-lookup"><span data-stu-id="912e6-137">Gets the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.</span></span></summary>
        <value><span data-ttu-id="912e6-138">Devuelve el recuento de metadatos para este elemento, incluyendo cualesquiera metadatos que se originen a partir de definiciones de elemento y cualesquiera metadatos integrados.</span><span class="sxs-lookup"><span data-stu-id="912e6-138">Returns the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Project : Microsoft.Build.Evaluation.Project" Usage="Microsoft.Build.Evaluation.ProjectItem.Project" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IProjectMetadataParent.Project</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="912e6-139">Obtiene el proyecto que contiene este elemento de proyecto.</span><span class="sxs-lookup"><span data-stu-id="912e6-139">Gets the project that contains this project item.</span></span></summary>
        <value><span data-ttu-id="912e6-140">Devuelve el proyecto que contiene este elemento de proyecto.</span><span class="sxs-lookup"><span data-stu-id="912e6-140">Returns the project that contains this project item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912e6-141">Un proyecto siempre contiene los elementos de proyecto.</span><span class="sxs-lookup"><span data-stu-id="912e6-141">Project items are always contained by a project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMetadata">
      <MemberSignature Language="C#" Value="public bool RemoveMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveMetadata (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveMetadata(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveMetadata : string -&gt; bool" Usage="projectItem.RemoveMetadata name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="912e6-142">Nombre de los metadatos que se van a quitar.</span><span class="sxs-lookup"><span data-stu-id="912e6-142">The name of the metadata to remove.</span></span></param>
        <summary><span data-ttu-id="912e6-143">Quita los metadatos con el nombre dado.</span><span class="sxs-lookup"><span data-stu-id="912e6-143">Removes any metadata with the given name.</span></span></summary>
        <returns><span data-ttu-id="912e6-144">Devuelve true si los metadatos con el nombre dado existen antes de la eliminación; de lo contrario, devuelve false.</span><span class="sxs-lookup"><span data-stu-id="912e6-144">Returns true if metadata with the given name exists before removal; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912e6-145">Produce InvalidArgumentException si el nombre de metadatos hace referencia a metadatos integrados, como "FullPath".</span><span class="sxs-lookup"><span data-stu-id="912e6-145">Throws InvalidArgumentException if the metadata name refers to built-in metadata, like "FullPath".</span></span>  
  
 <span data-ttu-id="912e6-146">Inicia la excepción InvalidOperationException si el nombre de metadatos hace referencia a los metadatos que se originan en una definición de elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-146">Throws InvalidOperationException if the metadata name refers to metadata that originates from an item definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public void Rename (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rename(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rename (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rename(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Rename : string -&gt; unit" Usage="projectItem.Rename name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="912e6-147">Nuevo nombre del elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-147">The new name of the item.</span></span></param>
        <summary><span data-ttu-id="912e6-148">Cambia el nombre del elemento al nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="912e6-148">Renames the item to the given name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912e6-149">Equivalente a establecer el <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="912e6-149">Equivalent to setting the <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> value.</span></span> <span data-ttu-id="912e6-150">Por lo general, se produce ninguna evaluación, porque esto podría resultar en varios elementos, que no tiene ningún significado en el contexto de cambiar el nombre de un solo elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-150">Generally, no evaluation occurs, because this could result in several items, which has no meaning in the context of renaming a single item.</span></span> <span data-ttu-id="912e6-151">Sin embargo si no es necesario dividir el elemento y el nuevo valor se evalúa como exactamente un elemento, su atributo Include evaluado se actualiza con el valor evaluado.</span><span class="sxs-lookup"><span data-stu-id="912e6-151">However if the item does not need to be split, and the new value evaluates to exactly one item, then its evaluated Include attribute is updated with the evaluated value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataValue">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetMetadataValue (name As String, unevaluatedValue As String) As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectMetadata ^ SetMetadataValue(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetMetadataValue : string * string -&gt; Microsoft.Build.Evaluation.ProjectMetadata" Usage="projectItem.SetMetadataValue (name, unevaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="912e6-152">Nombre de los metadatos que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="912e6-152">The name of the metadata to add.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="912e6-153">Valor no evaluado de los metadatos que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="912e6-153">The unevaluated value of the metadata to add.</span></span></param>
        <summary><span data-ttu-id="912e6-154">Agrega metadatos con el nombre dado y el valor no evaluado al elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-154">Adds metadata with the given name and unevaluated value to the item.</span></span></summary>
        <returns><span data-ttu-id="912e6-155">Devuelve los nuevos metadatos.</span><span class="sxs-lookup"><span data-stu-id="912e6-155">Returns the new metadata.</span></span> <span data-ttu-id="912e6-156">Si los metadatos con el nombre dado ya existen, devuelve estos metadatos.</span><span class="sxs-lookup"><span data-stu-id="912e6-156">If metadata with the given name already exists, returns this metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912e6-157">Actualiza el valor de metadatos existente si ya existen metadatos con el nombre especificado en el elemento, siempre y cuando no se originó desde una definición de elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-157">Updates the value of existing metadata if metadata already exists with the given name on the item, as long as it does not originate from an item definition.</span></span> <span data-ttu-id="912e6-158">Actualiza el proyecto evaluado, pero no afecta a cualquier otra cosa en el proyecto hasta una nueva evaluación.</span><span class="sxs-lookup"><span data-stu-id="912e6-158">Updates the evaluated project, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="912e6-159">Por ejemplo, si se agrega un elemento de metadatos denominado "m" en el elemento de tipo "i", no afecta a "j" que se evalúa de "@(j -> '% (m)')" hasta una nueva evaluación.</span><span class="sxs-lookup"><span data-stu-id="912e6-159">For example, if a piece of metadata named "m" is added on item of type "i", it does not affect "j" which is evaluated from "@(j->'%(m)')" until reevaluation.</span></span> <span data-ttu-id="912e6-160">También si el valor no evaluado de "m" se establece en algo que modifica la evaluación, por ejemplo, "$(p)", el valor evaluado se establecerá para literalmente "$(p)" hasta una nueva evaluación.</span><span class="sxs-lookup"><span data-stu-id="912e6-160">Also if the unevaluated value of "m" is set to something that is modified by evaluation, such as "$(p)", the evaluated value will be set to literally "$(p)" until reevaluation.</span></span>  
  
 <span data-ttu-id="912e6-161">Caracteres especiales en el valor no evaluado se deben convertir a caracteres de escape.</span><span class="sxs-lookup"><span data-stu-id="912e6-161">Special characters in the unevaluated value should be converted to escape characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedInclude">
      <MemberSignature Language="C#" Value="public string UnevaluatedInclude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedInclude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude" />
      <MemberSignature Language="VB.NET" Value="Public Property UnevaluatedInclude As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnevaluatedInclude { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UnevaluatedInclude : string with get, set" Usage="Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="912e6-162">Obtiene o establece el valor no evaluado del atributo Include.</span><span class="sxs-lookup"><span data-stu-id="912e6-162">Gets or sets the unevaluated value of the Include attribute.</span></span></summary>
        <value><span data-ttu-id="912e6-163">Devuelve el valor no evaluado del atributo Include.</span><span class="sxs-lookup"><span data-stu-id="912e6-163">Returns the unevaluated value of the Include attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectItemElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectItemElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectItemElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectItemElement ^ Xml { Microsoft::Build::Construction::ProjectItemElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectItemElement" Usage="Microsoft.Build.Evaluation.ProjectItem.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectItemElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="912e6-164">Obtiene el elemento asociado a este elemento.</span><span class="sxs-lookup"><span data-stu-id="912e6-164">Gets the item element that is associated with this item.</span></span></summary>
        <value><span data-ttu-id="912e6-165">Devuelve el elemento asociado a este elemento, que nunca puede ser null.</span><span class="sxs-lookup"><span data-stu-id="912e6-165">Returns the item element that is associated with this item, which can never be null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
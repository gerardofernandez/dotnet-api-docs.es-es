<Type Name="IDebugVsaScriptCodeItem" FullName="Microsoft.JScript.IDebugVsaScriptCodeItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c34a3aad55b2fc9ece1872c98ed9fa9d235dd30f" /><Meta Name="ms.sourcegitcommit" Value="662f143e6be46d519ff8ab4451d543d91e651478" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/18/2018" /><Meta Name="ms.locfileid" Value="53564656" /></Metadata><TypeSignature Language="C#" Value="public interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDebugVsaScriptCodeItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IDebugVsaScriptCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDebugVsaScriptCodeItem" />
  <TypeSignature Language="F#" Value="type IDebugVsaScriptCodeItem = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="57808-101">Define los métodos que evalúan expresiones y analizan cadenas.</span><span class="sxs-lookup"><span data-stu-id="57808-101">Defines methods that evaluate expressions and parse strings.</span></span> <span data-ttu-id="57808-102">Esta interfaz la suele implementar un objeto que representa un bloque de código y las llamadas a esta interfaz provienen normalmente de un depurador.</span><span class="sxs-lookup"><span data-stu-id="57808-102">This interface is typically implemented by an object that represents a code block, and it is typically called by a debugger.</span></span> <span data-ttu-id="57808-103">Esta interfaz proporciona la funcionalidad adicional que un host de IActiveScript necesita.</span><span class="sxs-lookup"><span data-stu-id="57808-103">This interface provides extra functionality that is needed by an IActiveScript host.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate();" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : unit -&gt; obj" Usage="iDebugVsaScriptCodeItem.Evaluate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57808-104">Cuando se implementa en una clase, evalúa el bloque, la expresión o la instrucción representada por el elemento de código y devuelve el valor.</span><span class="sxs-lookup"><span data-stu-id="57808-104">When implemented in a class, evaluates the block, expression, or statement represented by the code item and returns the value.</span></span> <span data-ttu-id="57808-105">Las llamadas a este método suelen provenir de un depurador que necesita evaluar una expresión (por ejemplo, en una ventana Inspección).</span><span class="sxs-lookup"><span data-stu-id="57808-105">It is typically called by a debugger that needs to evaluate an expression (in a Watch window, for example).</span></span> <span data-ttu-id="57808-106">En las expresiones, el valor es el resultado de la expresión.</span><span class="sxs-lookup"><span data-stu-id="57808-106">For expressions, the value is the result of the expression.</span></span> <span data-ttu-id="57808-107">En los bloques e instrucciones, la expresión resultante es la última expresión calculada por el bloque o instrucción.</span><span class="sxs-lookup"><span data-stu-id="57808-107">For blocks and statements, the resulting expression is the last expression calculated by the block or statement.</span></span></summary>
        <returns><span data-ttu-id="57808-108">Valor que representa la evaluación de la instrucción, la expresión o el bloque.</span><span class="sxs-lookup"><span data-stu-id="57808-108">A value that represents the evaluation of the statement, expression, or block.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57808-109">Tenga en cuenta que el <xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A> es funcionalmente idéntico al método el <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> método.</span><span class="sxs-lookup"><span data-stu-id="57808-109">Note that the <xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A> method is functionally identical to the <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> method.</span></span> <span data-ttu-id="57808-110">Difieren solo los atributos de serialización.</span><span class="sxs-lookup"><span data-stu-id="57808-110">Only the marshaling attributes differ.</span></span> <span data-ttu-id="57808-111">Esta versión de la interfaz permite que un depurador no administrado obtener el valor devuelto como un `IUnknown` puntero en lugar de un `VARIANT`.</span><span class="sxs-lookup"><span data-stu-id="57808-111">This version of the interface allows an unmanaged debugger to obtain the return value as an `IUnknown` pointer rather than a `VARIANT`.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ParseNamedBreakPoint">
      <MemberSignature Language="C#" Value="public bool ParseNamedBreakPoint (string input, out string functionName, out int nargs, out string arguments, out string returnType, out ulong offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ParseNamedBreakPoint(string input, [out] string&amp; functionName, [out] int32&amp; nargs, [out] string&amp; arguments, [out] string&amp; returnType, [out] unsigned int64&amp; offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseNamedBreakPoint (input As String, ByRef functionName As String, ByRef nargs As Integer, ByRef arguments As String, ByRef returnType As String, ByRef offset As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ParseNamedBreakPoint(System::String ^ input, [Runtime::InteropServices::Out] System::String ^ % functionName, [Runtime::InteropServices::Out] int % nargs, [Runtime::InteropServices::Out] System::String ^ % arguments, [Runtime::InteropServices::Out] System::String ^ % returnType, [Runtime::InteropServices::Out] System::UInt64 % offset);" />
      <MemberSignature Language="F#" Value="abstract member ParseNamedBreakPoint : string *  *  *  *  *  -&gt; bool" Usage="iDebugVsaScriptCodeItem.ParseNamedBreakPoint (input, functionName, nargs, arguments, returnType, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="functionName" Type="System.String" RefType="out" />
        <Parameter Name="nargs" Type="System.Int32" RefType="out" />
        <Parameter Name="arguments" Type="System.String" RefType="out" />
        <Parameter Name="returnType" Type="System.String" RefType="out" />
        <Parameter Name="offset" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="57808-112">Cadena de punto de interrupción con nombre y con el formato correcto que proporciona una función, una lista de argumentos opcionales y el desplazamiento IL opcional.</span><span class="sxs-lookup"><span data-stu-id="57808-112">A well-formed named breakpoint string giving a function, optional argument list, and optional IL offset.</span></span></param>
        <param name="functionName"><span data-ttu-id="57808-113">Parámetro Out que devuelve el nombre de la función analizada fuera de la cadena de entrada, o bien la cadena vacía si la cadena de entrada no tiene el formato correcto.</span><span class="sxs-lookup"><span data-stu-id="57808-113">Out parameter returning the name of the function parsed out of the input string, or the empty string if the input string is not well formed.</span></span></param>
        <param name="nargs"><span data-ttu-id="57808-114">Parámetro Out que devuelve el número de argumentos en la lista de argumentos opcionales.</span><span class="sxs-lookup"><span data-stu-id="57808-114">Out parameter returning the number of arguments in the optional argument list.</span></span> <span data-ttu-id="57808-115">Devuelve cero si no hay ninguna lista de argumentos o si la cadena no tiene el formato correcto.</span><span class="sxs-lookup"><span data-stu-id="57808-115">Returns zero if there is no arguments list or if the string is not well formed.</span></span></param>
        <param name="arguments"><span data-ttu-id="57808-116">Parámetro Out que devuelve una lista separada por espacios de los nombres de los tipos de todos los argumentos de la lista de argumentos, o bien una cadena vacía si falta la lista de argumentos o la cadena de entrada no tiene el formato correcto.</span><span class="sxs-lookup"><span data-stu-id="57808-116">Out parameter returning a space-separated list of the names of the types of all the arguments in the arguments list, or an empty string if the arguments list was missing or the input string was not well formed.</span></span></param>
        <param name="returnType"><span data-ttu-id="57808-117">Parámetro Out que devuelve una cadena que contiene el tipo de valor devuelto de la función citada en la entrada, o bien la cadena vacía si faltaba el tipo de valor devuelto o la cadena de entrada no tenía el formato correcto.</span><span class="sxs-lookup"><span data-stu-id="57808-117">Out parameter returning a string containing the return type of the function named in the input, or the empty string if the return type was missing or the input string was not well formed.</span></span></param>
        <param name="offset"><span data-ttu-id="57808-118">Entero largo sin signo que da el desplazamiento IL a partir de la cadena de entrada, o bien cero si no hubo ningún desplazamiento o la cadena no tenía el formato correcto.</span><span class="sxs-lookup"><span data-stu-id="57808-118">Unsigned long integer giving the IL offset from the input string, or zero if there was no IL offset or the string was not well formed.</span></span></param>
        <summary><span data-ttu-id="57808-119">Cuando se implementa en una clase, analiza las cadenas y devuelve la información analizada.</span><span class="sxs-lookup"><span data-stu-id="57808-119">When implemented in a class, parses strings and returns the parsed-out information.</span></span> <span data-ttu-id="57808-120">Las llamadas a este método suelen provenir de un depurador que necesita analizar la información de un punto de interrupción que se representa como una <see langword="string" />.</span><span class="sxs-lookup"><span data-stu-id="57808-120">This method is typically called by a debugger that needs to parse information about a breakpoint that is represented as a <see langword="string" />.</span></span> <span data-ttu-id="57808-121">Puede que el depurador tenga un punto de interrupción escrito por el usuario con el formato *functionname-arguments-ILoffset*.</span><span class="sxs-lookup"><span data-stu-id="57808-121">The debugger might have a breakpoint typed in by the user in the form *functionname-arguments-ILoffset*.</span></span> <span data-ttu-id="57808-122">Una cadena de punto de interrupción con nombre puede tener un formato complejo, por ejemplo, <c>F.B(C.D[], int, arg : double ) : C.Abc + 123.</c></span><span class="sxs-lookup"><span data-stu-id="57808-122">A named breakpoint string can have a complex format, for example, <c>F.B(C.D[], int, arg : double ) : C.Abc + 123.</c></span></span> <span data-ttu-id="57808-123">La lista de parámetros es opcional, al igual que el desplazamiento IL.</span><span class="sxs-lookup"><span data-stu-id="57808-123">The parameter list is optional, as is the IL offset.</span></span></summary>
        <returns><span data-ttu-id="57808-124"><see langword="true" /> si se analiza correctamente el punto de interrupción con nombre; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="57808-124"><see langword="true" /> if the named breakpoint is successfully parsed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
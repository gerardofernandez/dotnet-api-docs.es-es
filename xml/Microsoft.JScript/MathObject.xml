<Type Name="MathObject" FullName="Microsoft.JScript.MathObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ab9668b59a3703bdabe3dcca44a3257146143e4f" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57949152" /></Metadata><TypeSignature Language="C#" Value="public class MathObject : Microsoft.JScript.JSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MathObject extends Microsoft.JScript.JSObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.MathObject" />
  <TypeSignature Language="VB.NET" Value="Public Class MathObject&#xA;Inherits JSObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class MathObject : Microsoft::JScript::JSObject" />
  <TypeSignature Language="F#" Value="type MathObject = class&#xA;    inherit JSObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.JSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f7fda-101">Proporciona constantes y métodos estáticos para las funciones trigonométricas, logarítmicas y otras funciones matemáticas comunes.</span><span class="sxs-lookup"><span data-stu-id="f7fda-101">Provides constants and static methods for trigonometric functions, logarithmic functions, and other common mathematical functions.</span></span> <span data-ttu-id="f7fda-102">Esta clase pertenece a la categoría de modelos de objetos integrados.</span><span class="sxs-lookup"><span data-stu-id="f7fda-102">This class belongs to the built-in object model category.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="abs">
      <MemberSignature Language="C#" Value="public static double abs (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 abs(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.abs(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function abs (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double abs(double d);" />
      <MemberSignature Language="F#" Value="static member abs : double -&gt; double" Usage="Microsoft.JScript.MathObject.abs d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_abs)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_abs)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7fda-103">Número cuyo valor absoluto se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="f7fda-103">The number to calculate the absolute value of.</span></span></param>
        <summary><span data-ttu-id="f7fda-104">Calcula el valor absoluto del número especificado.</span><span class="sxs-lookup"><span data-stu-id="f7fda-104">Calculates the absolute value of the specified number.</span></span></summary>
        <returns><span data-ttu-id="f7fda-105">Valor absoluto de <paramref name="d" />.</span><span class="sxs-lookup"><span data-stu-id="f7fda-105">The absolute value of <paramref name="d" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="acos">
      <MemberSignature Language="C#" Value="public static double acos (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 acos(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function acos (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double acos(double x);" />
      <MemberSignature Language="F#" Value="static member acos : double -&gt; double" Usage="Microsoft.JScript.MathObject.acos x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_acos)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_acos)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7fda-106">Número del que se va a calcular el coseno inverso.</span><span class="sxs-lookup"><span data-stu-id="f7fda-106">The number to calculate the inverse cosine of.</span></span></param>
        <summary><span data-ttu-id="f7fda-107">Calcula el coseno inverso del número especificado.</span><span class="sxs-lookup"><span data-stu-id="f7fda-107">Calculates the inverse cosine of the specified number.</span></span></summary>
        <returns><span data-ttu-id="f7fda-108">Coseno inverso de <paramref name="x" />, medido en radianes.</span><span class="sxs-lookup"><span data-stu-id="f7fda-108">The inverse cosine of <paramref name="x" />, measured in radians.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Acos(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="asin">
      <MemberSignature Language="C#" Value="public static double asin (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 asin(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function asin (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double asin(double x);" />
      <MemberSignature Language="F#" Value="static member asin : double -&gt; double" Usage="Microsoft.JScript.MathObject.asin x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_asin)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_asin)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7fda-109">Número del que se va a calcular el seno inverso.</span><span class="sxs-lookup"><span data-stu-id="f7fda-109">The number to calculate the inverse sine of.</span></span></param>
        <summary><span data-ttu-id="f7fda-110">Calcula el seno inverso del número especificado.</span><span class="sxs-lookup"><span data-stu-id="f7fda-110">Calculates the inverse sine of the specified number.</span></span></summary>
        <returns><span data-ttu-id="f7fda-111">Seno inverso de <paramref name="x" />, medido en radianes.</span><span class="sxs-lookup"><span data-stu-id="f7fda-111">The inverse sine of <paramref name="x" />, measured in radians.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Asin(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="atan">
      <MemberSignature Language="C#" Value="public static double atan (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 atan(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.atan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function atan (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double atan(double x);" />
      <MemberSignature Language="F#" Value="static member atan : double -&gt; double" Usage="Microsoft.JScript.MathObject.atan x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_atan)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_atan)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7fda-112">Número del que se va a calcular la tangente inversa.</span><span class="sxs-lookup"><span data-stu-id="f7fda-112">The number to calculate the inverse tangent of.</span></span></param>
        <summary><span data-ttu-id="f7fda-113">Calcula la tangente inversa del número especificado.</span><span class="sxs-lookup"><span data-stu-id="f7fda-113">Calculates the inverse tangent of the specified number.</span></span></summary>
        <returns><span data-ttu-id="f7fda-114">Tangente inversa de <paramref name="x" />, medida en radianes.</span><span class="sxs-lookup"><span data-stu-id="f7fda-114">The inverse tangent of <paramref name="x" />, measured in radians.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Atan(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="atan2">
      <MemberSignature Language="C#" Value="public static double atan2 (double dy, double dx);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 atan2(float64 dy, float64 dx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function atan2 (dy As Double, dx As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double atan2(double dy, double dx);" />
      <MemberSignature Language="F#" Value="static member atan2 : double * double -&gt; double" Usage="Microsoft.JScript.MathObject.atan2 (dy, dx)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_atan2)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_atan2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dy" Type="System.Double" />
        <Parameter Name="dx" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="dy"><span data-ttu-id="f7fda-115">Numerador del cociente del que se va a calcular la tangente inversa.</span><span class="sxs-lookup"><span data-stu-id="f7fda-115">The numerator of the quotient to calculate the inverse tangent of.</span></span></param>
        <param name="dx"><span data-ttu-id="f7fda-116">Denominador del cociente del que se va a calcular la tangente inversa.</span><span class="sxs-lookup"><span data-stu-id="f7fda-116">The denominator of the quotient to calculate the inverse tangent of.</span></span></param>
        <summary><span data-ttu-id="f7fda-117">Calcula la tangente inversa del cociente de los números especificados.</span><span class="sxs-lookup"><span data-stu-id="f7fda-117">Calculates the inverse tangent of the quotient of the specified numbers.</span></span></summary>
        <returns><span data-ttu-id="f7fda-118">Tangente inversa de <paramref name="dy" />/<paramref name="dx" />, medida en radianes.</span><span class="sxs-lookup"><span data-stu-id="f7fda-118">The inverse tangent of <paramref name="dy" />/<paramref name="dx" />, measured in radians.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Atan2(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ceil">
      <MemberSignature Language="C#" Value="public static double ceil (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ceil(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.ceil(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ceil (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ceil(double x);" />
      <MemberSignature Language="F#" Value="static member ceil : double -&gt; double" Usage="Microsoft.JScript.MathObject.ceil x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_ceil)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_ceil)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7fda-119">Número cuyo valor superior se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="f7fda-119">The number to calculate the ceiling of.</span></span></param>
        <summary><span data-ttu-id="f7fda-120">Calcula el valor superior del número especificado, que es el entero más pequeño mayor o igual que el número especificado.</span><span class="sxs-lookup"><span data-stu-id="f7fda-120">Calculates the ceiling of the specified number, which is the smallest integer that is greater than or equal to the specified number.</span></span></summary>
        <returns><span data-ttu-id="f7fda-121">Valor superior de <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="f7fda-121">The ceiling of <paramref name="x" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="cos">
      <MemberSignature Language="C#" Value="public static double cos (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 cos(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.cos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function cos (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double cos(double x);" />
      <MemberSignature Language="F#" Value="static member cos : double -&gt; double" Usage="Microsoft.JScript.MathObject.cos x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_cos)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_cos)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7fda-122">Ángulo, medido en radianes.</span><span class="sxs-lookup"><span data-stu-id="f7fda-122">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="f7fda-123">Calcula el coseno del ángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="f7fda-123">Calculates the cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="f7fda-124">Coseno de <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="f7fda-124">The cosine of <paramref name="x" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Cos(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const double E = 2.71828182845905;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 E = (2.71828182845905)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Double  = 2.71828182845905" />
      <MemberSignature Language="C++ CLI" Value="public: double E = 2.71828182845905;" />
      <MemberSignature Language="F#" Value="val mutable E : double" Usage="Microsoft.JScript.MathObject.E" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.71828182845905</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f7fda-125">Almacena un valor que representa la constante de Euler, que es la base del logaritmo natural y se especifica mediante la constante e.</span><span class="sxs-lookup"><span data-stu-id="f7fda-125">Stores a value that represents Euler's constant, which is the base of the natural logarithm, specified by the constant e.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="exp">
      <MemberSignature Language="C#" Value="public static double exp (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 exp(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.exp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function exp (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double exp(double x);" />
      <MemberSignature Language="F#" Value="static member exp : double -&gt; double" Usage="Microsoft.JScript.MathObject.exp x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_exp)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_exp)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7fda-126">Potencia a la que se va a elevar <c>e</c>.</span><span class="sxs-lookup"><span data-stu-id="f7fda-126">The power to raise <c>e</c> to.</span></span></param>
        <summary><span data-ttu-id="f7fda-127">Calcula el número e elevado a la potencia especificada, donde e es la constante de Euler, base del logaritmo natural.</span><span class="sxs-lookup"><span data-stu-id="f7fda-127">Calculates the number e to the raised specified power, where e is Euler's constant, the base of the natural logarithm.</span></span></summary>
        <returns><span data-ttu-id="f7fda-128">Número e elevado a la potencia <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="f7fda-128">The number e raised to the <paramref name="x" /> power.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Exp(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="floor">
      <MemberSignature Language="C#" Value="public static double floor (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 floor(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.floor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function floor (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double floor(double x);" />
      <MemberSignature Language="F#" Value="static member floor : double -&gt; double" Usage="Microsoft.JScript.MathObject.floor x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_floor)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_floor)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7fda-129">Número cuyo valor inferior se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="f7fda-129">The number to calculate the floor of.</span></span></param>
        <summary><span data-ttu-id="f7fda-130">Calcula el valor inferior del número especificado, que es el entero más grande menor o igual que el número especificado.</span><span class="sxs-lookup"><span data-stu-id="f7fda-130">Calculates the floor of the specified number, which is the largest integer that is less than or equal to the specified number.</span></span></summary>
        <returns><span data-ttu-id="f7fda-131">Valor inferior de <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="f7fda-131">The floor of <paramref name="x" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="LN10">
      <MemberSignature Language="C#" Value="public const double LN10 = 2.30258509299405;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 LN10 = (2.30258509299405)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.LN10" />
      <MemberSignature Language="VB.NET" Value="Public Const LN10 As Double  = 2.30258509299405" />
      <MemberSignature Language="C++ CLI" Value="public: double LN10 = 2.30258509299405;" />
      <MemberSignature Language="F#" Value="val mutable LN10 : double" Usage="Microsoft.JScript.MathObject.LN10" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.30258509299405</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f7fda-132">Almacena un valor que representa el logaritmo en base e de 10, el logaritmo natural de 10.</span><span class="sxs-lookup"><span data-stu-id="f7fda-132">Stores a value that represents the logarithm base e of 10, the natural logarithm of 10.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LN2">
      <MemberSignature Language="C#" Value="public const double LN2 = 0.693147180559945;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 LN2 = (0.693147180559945)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.LN2" />
      <MemberSignature Language="VB.NET" Value="Public Const LN2 As Double  = 0.693147180559945" />
      <MemberSignature Language="C++ CLI" Value="public: double LN2 = 0.693147180559945;" />
      <MemberSignature Language="F#" Value="val mutable LN2 : double" Usage="Microsoft.JScript.MathObject.LN2" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>0.693147180559945</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f7fda-133">Almacena un valor que representa el logaritmo en base e de 2, el logaritmo natural de 2.</span><span class="sxs-lookup"><span data-stu-id="f7fda-133">Stores a value that represents the logarithm base e of 2, the natural logarithm of 2.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="log">
      <MemberSignature Language="C#" Value="public static double log (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 log(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.log(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function log (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double log(double x);" />
      <MemberSignature Language="F#" Value="static member log : double -&gt; double" Usage="Microsoft.JScript.MathObject.log x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_log)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_log)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7fda-134">Número del que se va a calcular el logaritmo natural.</span><span class="sxs-lookup"><span data-stu-id="f7fda-134">The number to calculate the natural logarithm of.</span></span></param>
        <summary><span data-ttu-id="f7fda-135">Calcula la base de logaritmo e del número especificado, que es el logaritmo natural del número especificado.</span><span class="sxs-lookup"><span data-stu-id="f7fda-135">Calculates the logarithm base e of the specified number, which is the natural logarithm of the specified number.</span></span></summary>
        <returns><span data-ttu-id="f7fda-136">Logaritmo natural de <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="f7fda-136">The natural logarithm of <paramref name="x" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Log(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="LOG10E">
      <MemberSignature Language="C#" Value="public const double LOG10E = 0.434294481903252;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 LOG10E = (0.434294481903252)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.LOG10E" />
      <MemberSignature Language="VB.NET" Value="Public Const LOG10E As Double  = 0.434294481903252" />
      <MemberSignature Language="C++ CLI" Value="public: double LOG10E = 0.434294481903252;" />
      <MemberSignature Language="F#" Value="val mutable LOG10E : double" Usage="Microsoft.JScript.MathObject.LOG10E" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>0.434294481903252</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f7fda-137">Almacena un valor que representa el logaritmo en base 10 de e, el logaritmo común de e.</span><span class="sxs-lookup"><span data-stu-id="f7fda-137">Stores a value that represents the logarithm base 10 of e, the common logarithm of e.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LOG2E">
      <MemberSignature Language="C#" Value="public const double LOG2E = 1.44269504088896;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 LOG2E = (1.44269504088896)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.LOG2E" />
      <MemberSignature Language="VB.NET" Value="Public Const LOG2E As Double  = 1.44269504088896" />
      <MemberSignature Language="C++ CLI" Value="public: double LOG2E = 1.44269504088896;" />
      <MemberSignature Language="F#" Value="val mutable LOG2E : double" Usage="Microsoft.JScript.MathObject.LOG2E" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>1.44269504088896</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f7fda-138">Almacena un valor que representa el logaritmo en base 2 de e, el logaritmo binario de e.</span><span class="sxs-lookup"><span data-stu-id="f7fda-138">Stores a value that represents the logarithm base 2 of e, the binary logarithm of e.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="max">
      <MemberSignature Language="C#" Value="public static double max (object x, object y, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 max(object x, object y, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.max(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function max (x As Object, y As Object, ParamArray args As Object()) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double max(System::Object ^ x, System::Object ^ y, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member max : obj * obj * obj[] -&gt; double" Usage="Microsoft.JScript.MathObject.max (x, y, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.HasVarArgs, Microsoft.JScript.JSBuiltin.Math_max)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7fda-139">Primer número que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="f7fda-139">The first number to compare.</span></span></param>
        <param name="y"><span data-ttu-id="f7fda-140">Segundo número que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="f7fda-140">The second number to compare.</span></span></param>
        <param name="args"><span data-ttu-id="f7fda-141">Números adicionales que se van a comparar.</span><span class="sxs-lookup"><span data-stu-id="f7fda-141">Additional numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f7fda-142">Devuelve el mayor de dos o más números especificados.</span><span class="sxs-lookup"><span data-stu-id="f7fda-142">Returns the largest of two or more specified numbers.</span></span></summary>
        <returns><span data-ttu-id="f7fda-143">Número mayor de <paramref name="x" />, <paramref name="y" /> y los números que el parámetro <paramref name="args" /> contiene.</span><span class="sxs-lookup"><span data-stu-id="f7fda-143">The largest of <paramref name="x" />, <paramref name="y" />, and the numbers that are contained in <paramref name="args" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="min">
      <MemberSignature Language="C#" Value="public static double min (object x, object y, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 min(object x, object y, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.min(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function min (x As Object, y As Object, ParamArray args As Object()) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double min(System::Object ^ x, System::Object ^ y, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member min : obj * obj * obj[] -&gt; double" Usage="Microsoft.JScript.MathObject.min (x, y, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.HasVarArgs, Microsoft.JScript.JSBuiltin.Math_min)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7fda-144">Primer número que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="f7fda-144">The first number to compare.</span></span></param>
        <param name="y"><span data-ttu-id="f7fda-145">Segundo número que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="f7fda-145">The second number to compare.</span></span></param>
        <param name="args"><span data-ttu-id="f7fda-146">Números adicionales que se van a comparar.</span><span class="sxs-lookup"><span data-stu-id="f7fda-146">Additional numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f7fda-147">Devuelve el menor de dos o más números especificados.</span><span class="sxs-lookup"><span data-stu-id="f7fda-147">Returns the smallest of two or more specified numbers.</span></span></summary>
        <returns><span data-ttu-id="f7fda-148">Número menor de <paramref name="x" />, <paramref name="y" /> y los números que el parámetro <paramref name="args" /> contiene.</span><span class="sxs-lookup"><span data-stu-id="f7fda-148">The smallest of <paramref name="x" />, <paramref name="y" />, and the numbers that are contained in <paramref name="args" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const double PI = 3.14159265358979;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PI = (3.14159265358979)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Double  = 3.14159265358979" />
      <MemberSignature Language="C++ CLI" Value="public: double PI = 3.14159265358979;" />
      <MemberSignature Language="F#" Value="val mutable PI : double" Usage="Microsoft.JScript.MathObject.PI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>3.14159265358979</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f7fda-149">Almacena un valor que representa la proporción de la circunferencia de un círculo en relación con su diámetro, especificado por la constante π.</span><span class="sxs-lookup"><span data-stu-id="f7fda-149">Stores a value that represents the ratio of the circumference of a circle to its diameter, specified by the constant π.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="pow">
      <MemberSignature Language="C#" Value="public static double pow (double dx, double dy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 pow(float64 dx, float64 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.pow(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function pow (dx As Double, dy As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double pow(double dx, double dy);" />
      <MemberSignature Language="F#" Value="static member pow : double * double -&gt; double" Usage="Microsoft.JScript.MathObject.pow (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_pow)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_pow)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Double" />
        <Parameter Name="dy" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="f7fda-150">Número que se va a elevar a la potencia especificada por <paramref name="dy" />.</span><span class="sxs-lookup"><span data-stu-id="f7fda-150">The number to raise to the <paramref name="dy" /> power.</span></span></param>
        <param name="dy"><span data-ttu-id="f7fda-151">Potencia a la que se va a elevar <paramref name="dx" />.</span><span class="sxs-lookup"><span data-stu-id="f7fda-151">The power to raise <paramref name="dx" /> to.</span></span></param>
        <summary><span data-ttu-id="f7fda-152">Calcula el número especificado elevado a la potencia indicada.</span><span class="sxs-lookup"><span data-stu-id="f7fda-152">Calculates the specified number raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="f7fda-153">Número <paramref name="dx" /> elevado a la potencia <paramref name="dy" />.</span><span class="sxs-lookup"><span data-stu-id="f7fda-153">The number <paramref name="dx" /> raised to the <paramref name="dy" /> power.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="random">
      <MemberSignature Language="C#" Value="public static double random ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 random() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.random" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function random () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double random();" />
      <MemberSignature Language="F#" Value="static member random : unit -&gt; double" Usage="Microsoft.JScript.MathObject.random " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_random)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_random)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7fda-154">Genera un número aleatorio comprendido entre 0 y 1.</span><span class="sxs-lookup"><span data-stu-id="f7fda-154">Generates a random number between 0 and 1.</span></span> <span data-ttu-id="f7fda-155">Este método no genera un número aleatorio criptográficamente seguro.</span><span class="sxs-lookup"><span data-stu-id="f7fda-155">This method does not generate a cryptographically secure random number.</span></span></summary>
        <returns><span data-ttu-id="f7fda-156">Número mayor o igual que 0 y menor que 1.</span><span class="sxs-lookup"><span data-stu-id="f7fda-156">A number that is greater than or equal to 0, and less than 1.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Random" />
      </Docs>
    </Member>
    <Member MemberName="round">
      <MemberSignature Language="C#" Value="public static double round (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 round(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.round(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function round (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double round(double d);" />
      <MemberSignature Language="F#" Value="static member round : double -&gt; double" Usage="Microsoft.JScript.MathObject.round d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_round)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_round)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7fda-157">Número que se va a redondear.</span><span class="sxs-lookup"><span data-stu-id="f7fda-157">The number to round.</span></span></param>
        <summary><span data-ttu-id="f7fda-158">Redondea el número especificado hacia abajo o hacia arriba al entero más próximo.</span><span class="sxs-lookup"><span data-stu-id="f7fda-158">Rounds the specified number down or up to the nearest integer.</span></span></summary>
        <returns><span data-ttu-id="f7fda-159">Si la parte fraccionaria de <paramref name="d" /> es menor que la mitad de un entero, devuelve <paramref name="d" /> redondeado hacia abajo.</span><span class="sxs-lookup"><span data-stu-id="f7fda-159">If the fractional part of <paramref name="d" /> is less than halfway to the next integer, <paramref name="d" /> rounded down.</span></span> <span data-ttu-id="f7fda-160">Si la parte fraccionaria de <paramref name="d" /> es igual o mayor que la mitad de un entero, devuelve <paramref name="d" /> redondeado hacia arriba.</span><span class="sxs-lookup"><span data-stu-id="f7fda-160">If the fractional part of <paramref name="d" /> is halfway or more to the next integer, <paramref name="d" /> rounded up.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="sin">
      <MemberSignature Language="C#" Value="public static double sin (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 sin(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.sin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function sin (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double sin(double x);" />
      <MemberSignature Language="F#" Value="static member sin : double -&gt; double" Usage="Microsoft.JScript.MathObject.sin x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_sin)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_sin)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7fda-161">Ángulo, medido en radianes.</span><span class="sxs-lookup"><span data-stu-id="f7fda-161">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="f7fda-162">Calcula el seno del ángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="f7fda-162">Calculates the sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="f7fda-163">Seno de <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="f7fda-163">The sine of <paramref name="x" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Sin(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="sqrt">
      <MemberSignature Language="C#" Value="public static double sqrt (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 sqrt(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.sqrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function sqrt (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double sqrt(double x);" />
      <MemberSignature Language="F#" Value="static member sqrt : double -&gt; double" Usage="Microsoft.JScript.MathObject.sqrt x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_sqrt)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_sqrt)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7fda-164">Número del que se va a calcular la raíz cuadrada.</span><span class="sxs-lookup"><span data-stu-id="f7fda-164">The number to calculate the square root of.</span></span></param>
        <summary><span data-ttu-id="f7fda-165">Calcula la raíz cuadrada del número especificado.</span><span class="sxs-lookup"><span data-stu-id="f7fda-165">Calculates the square root of the specified number.</span></span></summary>
        <returns><span data-ttu-id="f7fda-166">Raíz cuadrada de <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="f7fda-166">The square root of <paramref name="x" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Sqrt(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SQRT1_2">
      <MemberSignature Language="C#" Value="public const double SQRT1_2 = 0.707106781186548;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 SQRT1_2 = (0.707106781186548)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.SQRT1_2" />
      <MemberSignature Language="VB.NET" Value="Public Const SQRT1_2 As Double  = 0.707106781186548" />
      <MemberSignature Language="C++ CLI" Value="public: double SQRT1_2 = 0.707106781186548;" />
      <MemberSignature Language="F#" Value="val mutable SQRT1_2 : double" Usage="Microsoft.JScript.MathObject.SQRT1_2" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>0.707106781186548</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f7fda-167">Almacena un valor que representa los siguientes valores equivalentes: (√2)/2, √(½) y 1/(√2).</span><span class="sxs-lookup"><span data-stu-id="f7fda-167">Stores a value that represents the following equivalent values: (√2)/2, √(½), and 1/(√2).</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SQRT2">
      <MemberSignature Language="C#" Value="public const double SQRT2 = 1.4142135623731;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 SQRT2 = (1.4142135623731)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.MathObject.SQRT2" />
      <MemberSignature Language="VB.NET" Value="Public Const SQRT2 As Double  = 1.4142135623731" />
      <MemberSignature Language="C++ CLI" Value="public: double SQRT2 = 1.4142135623731;" />
      <MemberSignature Language="F#" Value="val mutable SQRT2 : double" Usage="Microsoft.JScript.MathObject.SQRT2" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>1.4142135623731</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f7fda-168">Almacena un valor que representa √2.</span><span class="sxs-lookup"><span data-stu-id="f7fda-168">Stores a value that represents √2.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="tan">
      <MemberSignature Language="C#" Value="public static double tan (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 tan(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.MathObject.tan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function tan (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double tan(double x);" />
      <MemberSignature Language="F#" Value="static member tan : double -&gt; double" Usage="Microsoft.JScript.MathObject.tan x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.JScript.JSFunction(Microsoft.JScript.JSFunctionAttributeEnum.None, Microsoft.JScript.JSBuiltin.Math_tan)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>Microsoft.JScript.JSFunction((Microsoft.JScript.JSFunctionAttributeEnum) 0, Microsoft.JScript.JSBuiltin.Math_tan)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7fda-169">Ángulo, medido en radianes.</span><span class="sxs-lookup"><span data-stu-id="f7fda-169">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="f7fda-170">Calcula la tangente del ángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="f7fda-170">Calculates the tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="f7fda-171">Tangente de <paramref name="x" />.</span><span class="sxs-lookup"><span data-stu-id="f7fda-171">The tangent of <paramref name="x" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Math.Tan(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>
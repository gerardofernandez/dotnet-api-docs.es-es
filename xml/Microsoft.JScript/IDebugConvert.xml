<Type Name="IDebugConvert" FullName="Microsoft.JScript.IDebugConvert">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6bdf3398f8de38618b1af104b26a81049517589d" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57938726" /></Metadata><TypeSignature Language="C#" Value="public interface IDebugConvert" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDebugConvert" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IDebugConvert" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDebugConvert" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDebugConvert" />
  <TypeSignature Language="F#" Value="type IDebugConvert = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("AA51516D-C0F2-49fe-9D38-61D20456904C")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d6038-101">Define un conjunto de métodos de utilidad que convierten los datos de un tipo a otro.</span><span class="sxs-lookup"><span data-stu-id="d6038-101">Defines a set of utility methods that convert data from one type to another.</span></span> <span data-ttu-id="d6038-102">Incluye métodos que convierten los valores en objetos <see cref="T:System.String" /> para que el depurador los pueda mostrar.</span><span class="sxs-lookup"><span data-stu-id="d6038-102">Includes methods that convert values to <see cref="T:System.String" /> objects so that they can be displayed by the debugger.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.DebugConvert" />
    <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
  </Docs>
  <Members>
    <Member MemberName="BooleanToString">
      <MemberSignature Language="C#" Value="public string BooleanToString (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BooleanToString(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.BooleanToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BooleanToString (value As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ BooleanToString(bool value);" />
      <MemberSignature Language="F#" Value="abstract member BooleanToString : bool -&gt; string" Usage="iDebugConvert.BooleanToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6038-103">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-103">The value to convert.</span></span></param>
        <summary><span data-ttu-id="d6038-104">Cuando se implementa en una clase, convierte el valor <see cref="T:System.Boolean" /> especificado en un objeto <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-104">When implemented in a class, converts the specified <see cref="T:System.Boolean" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d6038-105">Cadena literal "true" o "false".</span><span class="sxs-lookup"><span data-stu-id="d6038-105">The literal string "true" or the literal string "false".</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="ByteToString">
      <MemberSignature Language="C#" Value="public string ByteToString (byte value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ByteToString(unsigned int8 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.ByteToString(System.Byte,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ByteToString (value As Byte, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ByteToString(System::Byte value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member ByteToString : byte * int -&gt; string" Usage="iDebugConvert.ByteToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6038-106">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-106">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="d6038-107">Base del valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="d6038-107">The base of the return value.</span></span> <span data-ttu-id="d6038-108">La base debe ser 2, 8, 10 ó 16.</span><span class="sxs-lookup"><span data-stu-id="d6038-108">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d6038-109">Cuando se implementa en una clase, convierte el valor <see cref="T:System.Byte" /> especificado en un objeto <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-109">When implemented in a class, converts the specified <see cref="T:System.Byte" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d6038-110">Representación de cadena de <paramref name="value" /> en la base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-110">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="DoubleToDateString">
      <MemberSignature Language="C#" Value="public string DoubleToDateString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DoubleToDateString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.DoubleToDateString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoubleToDateString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DoubleToDateString(double value);" />
      <MemberSignature Language="F#" Value="abstract member DoubleToDateString : double -&gt; string" Usage="iDebugConvert.DoubleToDateString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6038-111">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-111">The value to convert.</span></span></param>
        <summary><span data-ttu-id="d6038-112">Cuando se implementa en una clase, crea una representación de cadena del valor <see cref="T:System.Double" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d6038-112">When implemented in a class, creates a string representation of the specified <see cref="T:System.Double" />.</span></span> <span data-ttu-id="d6038-113">La representación de cadena contiene el día de la semana, el mes, la fecha, la hora, la zona horaria y el año.</span><span class="sxs-lookup"><span data-stu-id="d6038-113">The string representation contains the day of the week, the month, the date, the time, the time zone, and the year.</span></span></summary>
        <returns><span data-ttu-id="d6038-114">Representación de cadena de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-114">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="DoubleToString">
      <MemberSignature Language="C#" Value="public string DoubleToString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DoubleToString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.DoubleToString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoubleToString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DoubleToString(double value);" />
      <MemberSignature Language="F#" Value="abstract member DoubleToString : double -&gt; string" Usage="iDebugConvert.DoubleToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6038-115">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-115">The value to convert.</span></span></param>
        <summary><span data-ttu-id="d6038-116">Cuando se implementa en una clase, convierte el valor <see cref="T:System.Double" /> especificado en un objeto <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-116">When implemented in a class, converts the specified <see cref="T:System.Double" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d6038-117">Representación de cadena de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-117">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorMessageForHR">
      <MemberSignature Language="C#" Value="public string GetErrorMessageForHR (int hr, Microsoft.JScript.Vsa.IJSVsaEngine engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetErrorMessageForHR(int32 hr, class Microsoft.JScript.Vsa.IJSVsaEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrorMessageForHR (hr As Integer, engine As IJSVsaEngine) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetErrorMessageForHR(int hr, Microsoft::JScript::Vsa::IJSVsaEngine ^ engine);" />
      <MemberSignature Language="F#" Value="abstract member GetErrorMessageForHR : int * Microsoft.JScript.Vsa.IJSVsaEngine -&gt; string" Usage="iDebugConvert.GetErrorMessageForHR (hr, engine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hr" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="engine" Type="Microsoft.JScript.Vsa.IJSVsaEngine" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="hr"><span data-ttu-id="d6038-118">Código de error HRESULT.</span><span class="sxs-lookup"><span data-stu-id="d6038-118">The HRESULT error code.</span></span></param>
        <param name="engine"><span data-ttu-id="d6038-119">Referencia al motor de scripting.</span><span class="sxs-lookup"><span data-stu-id="d6038-119">A reference to the scripting engine.</span></span></param>
        <summary><span data-ttu-id="d6038-120">Cuando se implementa en una clase, obtiene un mensaje de error que se crea a partir del código de error <see cref="P:System.Exception.HResult" /> especificado y la información <see cref="T:System.Globalization.CultureInfo" /> del motor <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d6038-120">When implemented in a class, gets an error message that is created from the specified <see cref="P:System.Exception.HResult" /> and the <see cref="T:System.Globalization.CultureInfo" /> of the specified <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" />.</span></span></summary>
        <returns><span data-ttu-id="d6038-121">Cadena adaptada que contiene información sobre el error.</span><span class="sxs-lookup"><span data-stu-id="d6038-121">A localized string that contains information about the error.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorMessageForHR">
      <MemberSignature Language="C#" Value="public string GetErrorMessageForHR (int hr, Microsoft.Vsa.IVsaEngine engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetErrorMessageForHR(int32 hr, class Microsoft.Vsa.IVsaEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.Vsa.IVsaEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrorMessageForHR (hr As Integer, engine As IVsaEngine) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetErrorMessageForHR(int hr, Microsoft::Vsa::IVsaEngine ^ engine);" />
      <MemberSignature Language="F#" Value="abstract member GetErrorMessageForHR : int * Microsoft.Vsa.IVsaEngine -&gt; string" Usage="iDebugConvert.GetErrorMessageForHR (hr, engine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hr" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
        <Parameter Name="engine" Type="Microsoft.Vsa.IVsaEngine" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      </Parameters>
      <Docs>
        <param name="hr"><span data-ttu-id="d6038-122">Código de error HRESULT.</span><span class="sxs-lookup"><span data-stu-id="d6038-122">The HRESULT error code.</span></span></param>
        <param name="engine"><span data-ttu-id="d6038-123">Referencia al motor de scripting.</span><span class="sxs-lookup"><span data-stu-id="d6038-123">A reference to the scripting engine.</span></span></param>
        <summary>To be added.</summary>
        <returns><span data-ttu-id="d6038-124">Cadena adaptada que contiene información sobre el error.</span><span class="sxs-lookup"><span data-stu-id="d6038-124">A localized string that contains information about the error.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedCharObject">
      <MemberSignature Language="C#" Value="public object GetManagedCharObject (ushort i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedCharObject(unsigned int16 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetManagedCharObject(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedCharObject (i As UShort) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetManagedCharObject(System::UInt16 i);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedCharObject : uint16 -&gt; obj" Usage="iDebugConvert.GetManagedCharObject i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="d6038-125">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-125">The value to convert.</span></span></param>
        <summary><span data-ttu-id="d6038-126">Cuando se implementa en una clase, crea un objeto administrado que tiene el valor <see cref="T:System.Char" /> primitivo especificado.</span><span class="sxs-lookup"><span data-stu-id="d6038-126">When implemented in a class, creates a managed object that has the specified primitive <see cref="T:System.Char" /> value.</span></span></summary>
        <returns><span data-ttu-id="d6038-127"><paramref name="i" /> convertido en un valor de tipo <see cref="T:System.Char" /> y, a continuación, en <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-127"><paramref name="i" /> converted to a <see cref="T:System.Char" /> and then an <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedInt64Object">
      <MemberSignature Language="C#" Value="public object GetManagedInt64Object (long i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedInt64Object(int64 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetManagedInt64Object(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedInt64Object (i As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetManagedInt64Object(long i);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInt64Object : int64 -&gt; obj" Usage="iDebugConvert.GetManagedInt64Object i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="d6038-128">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-128">The value to convert.</span></span></param>
        <summary><span data-ttu-id="d6038-129">Cuando se implementa en una clase, crea un objeto administrado que tiene el valor <see cref="T:System.Int64" /> primitivo especificado.</span><span class="sxs-lookup"><span data-stu-id="d6038-129">When implemented in a class, creates a managed object that has the specified primitive <see cref="T:System.Int64" /> value.</span></span></summary>
        <returns><span data-ttu-id="d6038-130"><paramref name="i" /> convertido en <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-130"><paramref name="i" /> converted to an <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedObject">
      <MemberSignature Language="C#" Value="public object GetManagedObject (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedObject(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetManagedObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedObject (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetManagedObject(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedObject : obj -&gt; obj" Usage="iDebugConvert.GetManagedObject value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6038-131">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-131">The value to convert.</span></span></param>
        <summary><span data-ttu-id="d6038-132">Cuando se implementa en una clase, crea un objeto administrado que tiene el valor primitivo especificado.</span><span class="sxs-lookup"><span data-stu-id="d6038-132">When implemented in a class, creates a managed object that has the specified primitive value.</span></span></summary>
        <returns><span data-ttu-id="d6038-133"><paramref name="value" /> convertido en un <see cref="T:System.Object" /> administrado.</span><span class="sxs-lookup"><span data-stu-id="d6038-133"><paramref name="value" /> converted to a managed <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedUInt64Object">
      <MemberSignature Language="C#" Value="public object GetManagedUInt64Object (ulong i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedUInt64Object(unsigned int64 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetManagedUInt64Object(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedUInt64Object (i As ULong) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetManagedUInt64Object(System::UInt64 i);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedUInt64Object : uint64 -&gt; obj" Usage="iDebugConvert.GetManagedUInt64Object i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="d6038-134">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-134">The value to convert.</span></span></param>
        <summary><span data-ttu-id="d6038-135">Cuando se implementa en una clase, crea un objeto administrado que tiene el valor <see cref="T:System.UInt64" /> primitivo especificado.</span><span class="sxs-lookup"><span data-stu-id="d6038-135">When implemented in a class, creates a managed object that has the specified primitive <see cref="T:System.UInt64" /> value.</span></span></summary>
        <returns><span data-ttu-id="d6038-136"><paramref name="i" /> convertido en <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-136"><paramref name="i" /> converted to an <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="Int16ToString">
      <MemberSignature Language="C#" Value="public string Int16ToString (short value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Int16ToString(int16 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.Int16ToString(System.Int16,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int16ToString (value As Short, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Int16ToString(short value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member Int16ToString : int16 * int -&gt; string" Usage="iDebugConvert.Int16ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6038-137">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-137">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="d6038-138">Base del valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="d6038-138">The base of the return value.</span></span> <span data-ttu-id="d6038-139">La base debe ser 2, 8, 10 ó 16.</span><span class="sxs-lookup"><span data-stu-id="d6038-139">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d6038-140">Cuando se implementa en una clase, convierte el valor <see cref="T:System.Int16" /> especificado en un objeto <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-140">When implemented in a class, converts the specified <see cref="T:System.Int16" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d6038-141">Representación de cadena de <paramref name="value" /> en la base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-141">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="Int32ToString">
      <MemberSignature Language="C#" Value="public string Int32ToString (int value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Int32ToString(int32 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.Int32ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int32ToString (value As Integer, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Int32ToString(int value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member Int32ToString : int * int -&gt; string" Usage="iDebugConvert.Int32ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6038-142">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-142">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="d6038-143">Base del valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="d6038-143">The base of the return value.</span></span> <span data-ttu-id="d6038-144">La base debe ser 2, 8, 10 ó 16.</span><span class="sxs-lookup"><span data-stu-id="d6038-144">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d6038-145">Cuando se implementa en una clase, convierte el valor <see cref="T:System.Int32" /> especificado en un objeto <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-145">When implemented in a class, converts the specified <see cref="T:System.Int32" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d6038-146">Representación de cadena de <paramref name="value" /> en la base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-146">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="Int64ToString">
      <MemberSignature Language="C#" Value="public string Int64ToString (long value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Int64ToString(int64 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.Int64ToString(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int64ToString (value As Long, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Int64ToString(long value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member Int64ToString : int64 * int -&gt; string" Usage="iDebugConvert.Int64ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6038-147">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-147">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="d6038-148">Base del valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="d6038-148">The base of the return value.</span></span> <span data-ttu-id="d6038-149">La base debe ser 2, 8, 10 ó 16.</span><span class="sxs-lookup"><span data-stu-id="d6038-149">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d6038-150">Cuando se implementa en una clase, convierte el valor <see cref="T:System.Int64" /> especificado en un objeto <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-150">When implemented in a class, converts the specified <see cref="T:System.Int64" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d6038-151">Representación de cadena de <paramref name="value" /> en la base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-151">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="RegexpToString">
      <MemberSignature Language="C#" Value="public string RegexpToString (string source, bool ignoreCase, bool global, bool multiline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RegexpToString(string source, bool ignoreCase, bool global, bool multiline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegexpToString (source As String, ignoreCase As Boolean, global As Boolean, multiline As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ RegexpToString(System::String ^ source, bool ignoreCase, bool global, bool multiline);" />
      <MemberSignature Language="F#" Value="abstract member RegexpToString : string * bool * bool * bool -&gt; string" Usage="iDebugConvert.RegexpToString (source, ignoreCase, global, multiline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="global" Type="System.Boolean" />
        <Parameter Name="multiline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6038-152">Patrón de expresión regular del que van a buscarse coincidencias.</span><span class="sxs-lookup"><span data-stu-id="d6038-152">The regular expression pattern to match.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="d6038-153">Es <see langword="true" /> si la búsqueda de coincidencias no distingue mayúsculas de minúsculas; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-153"><see langword="true" /> to use case-insensitive matching; otherwise, <see langword="false" />.</span></span></param>
        <param name="global"><span data-ttu-id="d6038-154">Es <see langword="true" /> para utilizar una coincidencia global; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-154"><see langword="true" /> to use a global match; otherwise, <see langword="false" />.</span></span></param>
        <param name="multiline"><span data-ttu-id="d6038-155">Es <see langword="true" /> para utilizar una coincidencia de varias líneas; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-155"><see langword="true" /> to use a multiline match; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d6038-156">Cuando se implementa en una clase, convierte la información de expresión regular especificada en un objeto <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-156">When implemented in a class, converts the specified regular expression information to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d6038-157">Representación de cadena de la información de expresión regular.</span><span class="sxs-lookup"><span data-stu-id="d6038-157">The string representation of the regular expression information.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="SByteToString">
      <MemberSignature Language="C#" Value="public string SByteToString (sbyte value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SByteToString(int8 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.SByteToString(System.SByte,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SByteToString (value As SByte, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SByteToString(System::SByte value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member SByteToString : sbyte * int -&gt; string" Usage="iDebugConvert.SByteToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6038-158">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-158">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="d6038-159">Base del valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="d6038-159">The base of the return value.</span></span> <span data-ttu-id="d6038-160">La base debe ser 2, 8, 10 ó 16.</span><span class="sxs-lookup"><span data-stu-id="d6038-160">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d6038-161">Cuando se implementa en una clase, convierte el valor <see cref="T:System.SByte" /> especificado en un objeto <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-161">When implemented in a class, converts the specified <see cref="T:System.SByte" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d6038-162">Representación de cadena de <paramref name="value" /> en la base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-162">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="SingleToString">
      <MemberSignature Language="C#" Value="public string SingleToString (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SingleToString(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.SingleToString(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function SingleToString (value As Single) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SingleToString(float value);" />
      <MemberSignature Language="F#" Value="abstract member SingleToString : single -&gt; string" Usage="iDebugConvert.SingleToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6038-163">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-163">The value to convert.</span></span></param>
        <summary><span data-ttu-id="d6038-164">Cuando se implementa en una clase, convierte el valor <see cref="T:System.Single" /> especificado en un objeto <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-164">When implemented in a class, converts the specified <see cref="T:System.Single" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d6038-165">Representación de cadena de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-165">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="StringToPrintable">
      <MemberSignature Language="C#" Value="public string StringToPrintable (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string StringToPrintable(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.StringToPrintable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StringToPrintable (source As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ StringToPrintable(System::String ^ source);" />
      <MemberSignature Language="F#" Value="abstract member StringToPrintable : string -&gt; string" Usage="iDebugConvert.StringToPrintable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d6038-166">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-166">The value to convert.</span></span></param>
        <summary><span data-ttu-id="d6038-167">Cuando se implementa en una clase, convierte el objeto <see cref="T:System.String" /> especificado en un objeto <see cref="T:System.String" /> que contiene caracteres de escape para los caracteres no imprimibles.</span><span class="sxs-lookup"><span data-stu-id="d6038-167">When implemented in a class, converts the specified <see cref="T:System.String" /> to a <see cref="T:System.String" /> that contains escape characters for non-printable characters.</span></span></summary>
        <returns><span data-ttu-id="d6038-168">Representación de cadena de <paramref name="source" /> que contiene caracteres de escape.</span><span class="sxs-lookup"><span data-stu-id="d6038-168">The string representation of <paramref name="source" /> that contains escape characters.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="ToPrimitive">
      <MemberSignature Language="C#" Value="public object ToPrimitive (object value, TypeCode typeCode, bool truncationPermitted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ToPrimitive(object value, valuetype System.TypeCode typeCode, bool truncationPermitted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ToPrimitive(System::Object ^ value, TypeCode typeCode, bool truncationPermitted);" />
      <MemberSignature Language="F#" Value="abstract member ToPrimitive : obj * TypeCode * bool -&gt; obj" Usage="iDebugConvert.ToPrimitive (value, typeCode, truncationPermitted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
        <Parameter Name="truncationPermitted" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6038-169">Valor que se va a convertir en un tipo nuevo.</span><span class="sxs-lookup"><span data-stu-id="d6038-169">The value to convert to a new type.</span></span></param>
        <param name="typeCode"><span data-ttu-id="d6038-170">Tipo en el que convertir <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-170">The type to convert <paramref name="value" /> to.</span></span></param>
        <param name="truncationPermitted"><span data-ttu-id="d6038-171">Es <see langword="true" /> para permitir la pérdida de datos; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-171"><see langword="true" /> to allow data loss; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d6038-172">Cuando se implementa en una clase, convierte el valor especificado en el tipo <see cref="T:System.TypeCode" /> especificado, permitiendo opcionalmente la pérdida de datos.</span><span class="sxs-lookup"><span data-stu-id="d6038-172">When implemented in a class, converts the specified value to the specified <see cref="T:System.TypeCode" />, optionally allowing data loss.</span></span></summary>
        <returns><span data-ttu-id="d6038-173"><paramref name="value" /> convertido en el tipo <paramref name="typeCode" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-173"><paramref name="value" /> converted to the <paramref name="typeCode" /> type.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="UInt16ToString">
      <MemberSignature Language="C#" Value="public string UInt16ToString (ushort value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UInt16ToString(unsigned int16 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.UInt16ToString(System.UInt16,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UInt16ToString (value As UShort, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UInt16ToString(System::UInt16 value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member UInt16ToString : uint16 * int -&gt; string" Usage="iDebugConvert.UInt16ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6038-174">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-174">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="d6038-175">Base del valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="d6038-175">The base of the return value.</span></span> <span data-ttu-id="d6038-176">La base debe ser 2, 8, 10 ó 16.</span><span class="sxs-lookup"><span data-stu-id="d6038-176">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d6038-177">Cuando se implementa en una clase, convierte el valor <see cref="T:System.UInt16" /> especificado en un objeto <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-177">When implemented in a class, converts the specified <see cref="T:System.UInt16" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d6038-178">Representación de cadena de <paramref name="value" /> en la base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-178">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="UInt32ToString">
      <MemberSignature Language="C#" Value="public string UInt32ToString (uint value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UInt32ToString(unsigned int32 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.UInt32ToString(System.UInt32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UInt32ToString (value As UInteger, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UInt32ToString(System::UInt32 value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member UInt32ToString : uint32 * int -&gt; string" Usage="iDebugConvert.UInt32ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6038-179">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-179">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="d6038-180">Base del valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="d6038-180">The base of the return value.</span></span> <span data-ttu-id="d6038-181">La base debe ser 2, 8, 10 ó 16.</span><span class="sxs-lookup"><span data-stu-id="d6038-181">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d6038-182">Cuando se implementa en una clase, convierte el valor <see cref="T:System.UInt32" /> especificado en un objeto <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-182">When implemented in a class, converts the specified <see cref="T:System.UInt32" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d6038-183">Representación de cadena de <paramref name="value" /> en la base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-183">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="UInt64ToString">
      <MemberSignature Language="C#" Value="public string UInt64ToString (ulong value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UInt64ToString(unsigned int64 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.UInt64ToString(System.UInt64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UInt64ToString (value As ULong, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UInt64ToString(System::UInt64 value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member UInt64ToString : uint64 * int -&gt; string" Usage="iDebugConvert.UInt64ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d6038-184">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d6038-184">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="d6038-185">Base del valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="d6038-185">The base of the return value.</span></span> <span data-ttu-id="d6038-186">La base debe ser 2, 8, 10 ó 16.</span><span class="sxs-lookup"><span data-stu-id="d6038-186">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="d6038-187">Cuando se implementa en una clase, convierte el valor <see cref="T:System.UInt64" /> especificado en un objeto <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-187">When implemented in a class, converts the specified <see cref="T:System.UInt64" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d6038-188">Representación de cadena de <paramref name="value" /> en la base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="d6038-188">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
  </Members>
</Type>
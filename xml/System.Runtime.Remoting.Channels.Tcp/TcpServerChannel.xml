<Type Name="TcpServerChannel" FullName="System.Runtime.Remoting.Channels.Tcp.TcpServerChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="92b6e1288a575f24d6a0297add5392805435543d" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53475183" /></Metadata><TypeSignature Language="C#" Value="public class TcpServerChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpServerChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpServerChannel&#xA;Implements IChannelReceiver, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpServerChannel : System::Runtime::Remoting::Channels::IChannelReceiver, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <TypeSignature Language="F#" Value="type TcpServerChannel = class&#xA;    interface IChannelReceiver&#xA;    interface IChannel&#xA;    interface ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1b370-101">Implementa un canal de servidor para llamadas remotas que utiliza el protocolo TCP para transmitir los mensajes.</span><span class="sxs-lookup"><span data-stu-id="1b370-101">Implements a server channel for remote calls that uses the TCP protocol to transmit messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="1b370-102">Los canales transportan mensajes entre los límites de comunicación remota (por ejemplo, equipos o dominios de aplicación).</span><span class="sxs-lookup"><span data-stu-id="1b370-102">Channels transport messages across remoting boundaries (for example, computers or application domains).</span></span> <span data-ttu-id="1b370-103">La <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> clase transporta los mensajes mediante el protocolo TCP.</span><span class="sxs-lookup"><span data-stu-id="1b370-103">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> class transports messages using the TCP protocol.</span></span>  
  
 <span data-ttu-id="1b370-104">Los canales se utilizan la infraestructura de comunicación remota de .NET Framework para transportar llamadas remotas.</span><span class="sxs-lookup"><span data-stu-id="1b370-104">Channels are used by the .NET Framework remoting infrastructure to transport remote calls.</span></span> <span data-ttu-id="1b370-105">Cuando un cliente realiza una llamada a un objeto remoto, la llamada se serializa en un mensaje que se envía por un canal de cliente y recibido por un canal de servidor.</span><span class="sxs-lookup"><span data-stu-id="1b370-105">When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.</span></span> <span data-ttu-id="1b370-106">A continuación, se deserializa y se procesa.</span><span class="sxs-lookup"><span data-stu-id="1b370-106">It is then deserialized and processed.</span></span> <span data-ttu-id="1b370-107">Los valores devueltos son transmitidos por el canal de servidor y recibe el canal de cliente.</span><span class="sxs-lookup"><span data-stu-id="1b370-107">Any returned values are transmitted by the server channel and received by the client channel.</span></span>  
  
 <span data-ttu-id="1b370-108">Para realizar un procesamiento adicional de mensajes en el servidor, puede especificar una implementación de la <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interfaz a través de que todos los mensajes procesados por el <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> se pasa la instancia.</span><span class="sxs-lookup"><span data-stu-id="1b370-108">To perform additional processing of messages on the server side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance are passed.</span></span>  
  
 <span data-ttu-id="1b370-109">El <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instancia acepta mensajes serializados en binario o formato SOAP.</span><span class="sxs-lookup"><span data-stu-id="1b370-109">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance accepts messages serialized in either binary or SOAP format.</span></span>  
  
 <span data-ttu-id="1b370-110">Un <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> objeto tiene asociados a las propiedades de configuración que se pueden establecer en tiempo de ejecución en un archivo de configuración (invocando estático <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> método) o mediante programación (pasando un <xref:System.Collections.IDictionary> colección a la <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.%23ctor%2A> constructor).</span><span class="sxs-lookup"><span data-stu-id="1b370-110">A <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.%23ctor%2A> constructor).</span></span> <span data-ttu-id="1b370-111">Para obtener una lista de estas propiedades de configuración, consulte [Channel y propiedades de configuración del formateador](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="1b370-111">For a list of these configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b370-112">Si el equipo del servidor se está ejecutando Windows 95/98/Me, el <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> no se puede especificar como seguro.</span><span class="sxs-lookup"><span data-stu-id="1b370-112">If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b370-113">En el ejemplo de código siguiente se muestra el uso de un tipo utilizable de forma remota.</span><span class="sxs-lookup"><span data-stu-id="1b370-113">The following code example shows the use of a remotable type.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/remotable.cpp#10)]
 [!code-csharp[Remoting_TcpInfo#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/remotable.cs#10)]  
  
 <span data-ttu-id="1b370-114">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> clase para exponer un tipo utilizable de forma remota.</span><span class="sxs-lookup"><span data-stu-id="1b370-114">The following code example shows the use of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> class to expose a remotable type.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#30](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#30)]
 [!code-csharp[Remoting_TcpInfo#30](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#30)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1b370-115">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> que escucha en el puerto especificado.</span><span class="sxs-lookup"><span data-stu-id="1b370-115">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class that listens on the specified port.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpServerChannel(int port);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Tcp.TcpServerChannel : int -&gt; System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" Usage="new System.Runtime.Remoting.Channels.Tcp.TcpServerChannel port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="1b370-116">El puerto donde el canal realiza la escucha.</span><span class="sxs-lookup"><span data-stu-id="1b370-116">The port on which the channel listens.</span></span></param>
        <summary><span data-ttu-id="1b370-117">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> que escucha en el puerto especificado.</span><span class="sxs-lookup"><span data-stu-id="1b370-117">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class that listens on the specified port.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b370-118">Para solicitar la asignación dinámica de un puerto disponible, establezca el `port` parámetro en 0 (cero).</span><span class="sxs-lookup"><span data-stu-id="1b370-118">To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b370-119">En el ejemplo de código siguiente se muestra el uso de este constructor.</span><span class="sxs-lookup"><span data-stu-id="1b370-119">The following code example shows the use of this constructor.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#31](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#31)]
 [!code-csharp[Remoting_TcpInfo#31](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Tcp.TcpServerChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IServerChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" Usage="new System.Runtime.Remoting.Channels.Tcp.TcpServerChannel (properties, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="1b370-120">Colección de <see cref="T:System.Collections.IDictionary" /> que especifica valores para las propiedades de configuración que va a utilizar el canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-120">A <see cref="T:System.Collections.IDictionary" /> collection specifying values for configuration properties to be used by the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="1b370-121">Implementación de <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> que va a utilizar el canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-121">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="1b370-122">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> con las propiedades de canal y el receptor especificados.</span><span class="sxs-lookup"><span data-stu-id="1b370-122">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class with the specified channel properties and sink.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b370-123">Para obtener más información acerca de las propiedades de configuración de canal, vea [Channel y propiedades de configuración del formateador](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="1b370-123">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b370-124">Si el equipo del servidor se está ejecutando Windows 95/98/Me, el <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> no se puede especificar como seguro.</span><span class="sxs-lookup"><span data-stu-id="1b370-124">If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure.</span></span>  
  
 <span data-ttu-id="1b370-125">Si no necesita funcionalidad del receptor, establezca el `sinkProvider` parámetro `null`.</span><span class="sxs-lookup"><span data-stu-id="1b370-125">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b370-126">En el ejemplo de código siguiente se muestra el uso de este constructor para crear un <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> objeto con propiedades de configuración específicas.</span><span class="sxs-lookup"><span data-stu-id="1b370-126">The following code example shows the use of this constructor to create a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> object with specific configuration properties.</span></span>  
  
 [!code-cpp[Remoting_TcpAuth#21](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpAuth/CPP/server.cpp#21)]
 [!code-csharp[Remoting_TcpAuth#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpAuth/CS/server.cs#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1b370-127">Una de las propiedades del canal especificadas tenía un formato incorrecto.</span><span class="sxs-lookup"><span data-stu-id="1b370-127">A provided channel property was badly formatted.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)"><span data-ttu-id="1b370-128">Propiedades de configuración del canal y del formateador</span><span class="sxs-lookup"><span data-stu-id="1b370-128">Channel and Formatter Configuration Properties</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (string name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpServerChannel(System::String ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Tcp.TcpServerChannel : string * int -&gt; System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" Usage="new System.Runtime.Remoting.Channels.Tcp.TcpServerChannel (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1b370-129">Nombre del canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-129">The name of the channel.</span></span></param>
        <param name="port"><span data-ttu-id="1b370-130">El puerto donde el canal realiza la escucha.</span><span class="sxs-lookup"><span data-stu-id="1b370-130">The port on which the channel listens.</span></span></param>
        <summary><span data-ttu-id="1b370-131">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> con el nombre indicado y que realiza la escucha en el puerto especificado.</span><span class="sxs-lookup"><span data-stu-id="1b370-131">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class with the given name and that listens on the specified port.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b370-132">Este constructor establece la <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> propiedad utilizando el `name` parámetro.</span><span class="sxs-lookup"><span data-stu-id="1b370-132">This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> property by using the `name` parameter.</span></span> <span data-ttu-id="1b370-133">Si desea registrar más de un canal, cada canal debe tener un nombre único.</span><span class="sxs-lookup"><span data-stu-id="1b370-133">If you want to register more than one channel, each channel must have a unique name.</span></span>  
  
 <span data-ttu-id="1b370-134">Para solicitar la asignación dinámica de un puerto disponible, establezca el `port` parámetro en 0 (cero).</span><span class="sxs-lookup"><span data-stu-id="1b370-134">To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b370-135">El ejemplo de código siguiente muestra cómo construir un <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>.</span><span class="sxs-lookup"><span data-stu-id="1b370-135">The following code example shows how to construct a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2#21](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2/CPP/server.cpp#21)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2#21](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2/CS/server.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection authorizeCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, class System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection authorizeCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider, authorizeCallback As IAuthorizeRemotingConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider, System::Runtime::Remoting::Channels::IAuthorizeRemotingConnection ^ authorizeCallback);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Tcp.TcpServerChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IServerChannelSinkProvider * System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection -&gt; System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" Usage="new System.Runtime.Remoting.Channels.Tcp.TcpServerChannel (properties, sinkProvider, authorizeCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
        <Parameter Name="authorizeCallback" Type="System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="1b370-136">Una colección <see cref="T:System.Collections.IDictionary" /> que especifica valores para las propiedades de configuración que va a utilizar el canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-136">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="1b370-137">Implementación de <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> que va a utilizar el canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-137">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <param name="authorizeCallback"><span data-ttu-id="1b370-138">Implementación de <see cref="T:System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection" /> que va a utilizar el canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-138">The <see cref="T:System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="1b370-139">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> con las propiedades de canal, el receptor y el proveedor de autorización especificados.</span><span class="sxs-lookup"><span data-stu-id="1b370-139">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class with the specified channel properties, sink, and authorization provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b370-140">Para obtener más información acerca de las propiedades de configuración de canal, vea [Channel y propiedades de configuración del formateador](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="1b370-140">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b370-141">Si el equipo del servidor se está ejecutando Windows 95/98/Me, el <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> no se puede especificar como seguro.</span><span class="sxs-lookup"><span data-stu-id="1b370-141">If the server computer is running Windows 95/98/Me, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> cannot be specified as secure.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1b370-142">Una de las propiedades del canal especificadas tenía un formato incorrecto.</span><span class="sxs-lookup"><span data-stu-id="1b370-142">A provided channel property was badly formatted.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)"><span data-ttu-id="1b370-143">Propiedades de configuración del canal y del formateador</span><span class="sxs-lookup"><span data-stu-id="1b370-143">Channel and Formatter Configuration Properties</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (string name, int port, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 port, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, port As Integer, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpServerChannel(System::String ^ name, int port, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Tcp.TcpServerChannel : string * int * System.Runtime.Remoting.Channels.IServerChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" Usage="new System.Runtime.Remoting.Channels.Tcp.TcpServerChannel (name, port, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1b370-144">Nombre del canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-144">The name of the channel.</span></span></param>
        <param name="port"><span data-ttu-id="1b370-145">El puerto donde el canal realiza la escucha.</span><span class="sxs-lookup"><span data-stu-id="1b370-145">The port on which the channel listens.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="1b370-146">Implementación de <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> que va a utilizar el canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-146">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="1b370-147">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> con el nombre de pila indicado, que realiza la escucha en el puerto especificado y utiliza el receptor especificado.</span><span class="sxs-lookup"><span data-stu-id="1b370-147">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class with the given name, which listens on the specified port, and uses the specified sink.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b370-148">Este constructor establece la <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> propiedad utilizando el `name` parámetro.</span><span class="sxs-lookup"><span data-stu-id="1b370-148">This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> property by using the `name` parameter.</span></span> <span data-ttu-id="1b370-149">Si desea registrar más de un canal, cada canal debe tener un nombre único.</span><span class="sxs-lookup"><span data-stu-id="1b370-149">If you want to register more than one channel, each channel must have a unique name.</span></span>  
  
 <span data-ttu-id="1b370-150">Para solicitar la asignación dinámica de un puerto disponible, establezca el `port` parámetro en 0 (cero).</span><span class="sxs-lookup"><span data-stu-id="1b370-150">To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero).</span></span>  
  
 <span data-ttu-id="1b370-151">Si no necesita funcionalidad del receptor, establezca el `sinkProvider` parámetro `null`.</span><span class="sxs-lookup"><span data-stu-id="1b370-151">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b370-152">El ejemplo de código siguiente muestra cómo construir un <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>.</span><span class="sxs-lookup"><span data-stu-id="1b370-152">The following code example shows how to construct a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#21](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CPP/server.cpp#21)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#21](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CS/server.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChannelData { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelData : obj" Usage="System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannelReceiver.ChannelData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b370-153">Obtiene los datos específicos del canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-153">Gets channel-specific data.</span></span></summary>
        <value><span data-ttu-id="1b370-154">Instancia de <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> que contiene los datos específicos del canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-154">A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> instance containing channel-specific data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b370-155">Aunque se devuelva como una instancia de <xref:System.Object?displayProperty=nameWithType>, el valor de esta propiedad se puede convertir en una instancia de <xref:System.Runtime.Remoting.Channels.ChannelDataStore> que describe el canal al que el <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> objeto escucha.</span><span class="sxs-lookup"><span data-stu-id="1b370-155">Although returned as an instance of <xref:System.Object?displayProperty=nameWithType>, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> describing the channel to which the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> object listens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b370-156">En el ejemplo de código siguiente se muestra el uso de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="1b370-156">The following code example shows the use of this property.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#33](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#33)]
 [!code-csharp[Remoting_TcpInfo#33](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelName : string" Usage="System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b370-157">Obtiene el nombre del canal actual.</span><span class="sxs-lookup"><span data-stu-id="1b370-157">Gets the name of the current channel.</span></span></summary>
        <value><span data-ttu-id="1b370-158">Instancia de <see cref="T:System.String" /> que contiene el nombre del canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-158">A <see cref="T:System.String" /> instance that contains the name of the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b370-159">Cada canal registrado tiene un nombre único.</span><span class="sxs-lookup"><span data-stu-id="1b370-159">Every registered channel has a unique name.</span></span> <span data-ttu-id="1b370-160">El nombre se usa para recuperar un canal concreto al llamar a <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.</span><span class="sxs-lookup"><span data-stu-id="1b370-160">The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b370-161">En el ejemplo de código siguiente se muestra el uso de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="1b370-161">The following code example shows the use of this property.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#32](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#32)]
 [!code-csharp[Remoting_TcpInfo#32](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelPriority : int" Usage="System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelPriority" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelPriority</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b370-162">Obtiene la prioridad del canal actual.</span><span class="sxs-lookup"><span data-stu-id="1b370-162">Gets the priority of the current channel.</span></span></summary>
        <value><span data-ttu-id="1b370-163">Un entero que representa la prioridad asignada al canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-163">An integer that represents the priority assigned to the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b370-164">La prioridad controla el orden en qué canal de datos aparecen en un <xref:System.Runtime.Remoting.ObjRef> instancia; canales de mayor prioridad aparecen antes que los canales de prioridad inferior.</span><span class="sxs-lookup"><span data-stu-id="1b370-164">The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels.</span></span> <span data-ttu-id="1b370-165">Los clientes intentan conectarse a los canales del servidor en el orden en que aparecen en la <xref:System.Runtime.Remoting.ObjRef> instancia.</span><span class="sxs-lookup"><span data-stu-id="1b370-165">Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance.</span></span> <span data-ttu-id="1b370-166">La prioridad predeterminada es 1; se permiten las prioridades negativo.</span><span class="sxs-lookup"><span data-stu-id="1b370-166">The default priority is 1; negative priorities are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b370-167">En el ejemplo de código siguiente se muestra el uso de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="1b370-167">The following code example shows the use of this property.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#32](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#32)]
 [!code-csharp[Remoting_TcpInfo#32](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChannelUri">
      <MemberSignature Language="C#" Value="public string GetChannelUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetChannelUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetChannelUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChannelUri () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetChannelUri();" />
      <MemberSignature Language="F#" Value="member this.GetChannelUri : unit -&gt; string" Usage="tcpServerChannel.GetChannelUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b370-168">Devuelve la dirección URI del canal actual.</span><span class="sxs-lookup"><span data-stu-id="1b370-168">Returns the URI of the current channel.</span></span></summary>
        <returns><span data-ttu-id="1b370-169">URI del canal actual.</span><span class="sxs-lookup"><span data-stu-id="1b370-169">The URI of the current channel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1b370-170">En el ejemplo de código siguiente se muestra el uso de este método.</span><span class="sxs-lookup"><span data-stu-id="1b370-170">The following code example shows the use this method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#22](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CPP/server.cpp#22)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#22](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CS/server.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public virtual string[] GetUrlsForUri (string objectUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUrlsForUri (objectUri As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetUrlsForUri(System::String ^ objectUri);" />
      <MemberSignature Language="F#" Value="abstract member GetUrlsForUri : string -&gt; string[]&#xA;override this.GetUrlsForUri : string -&gt; string[]" Usage="tcpServerChannel.GetUrlsForUri objectUri" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.GetUrlsForUri(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectUri"><span data-ttu-id="1b370-171">URI del objeto para el que se requieren direcciones URL.</span><span class="sxs-lookup"><span data-stu-id="1b370-171">The URI of the object for which URLs are required.</span></span></param>
        <summary><span data-ttu-id="1b370-172">Devuelve una matriz de todas las direcciones URL de un objeto con la dirección URI especificada, hospedadas en la instancia de <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> actual.</span><span class="sxs-lookup"><span data-stu-id="1b370-172">Returns an array of all the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> instance.</span></span></summary>
        <returns><span data-ttu-id="1b370-173">Matriz de todas las direcciones URL de un objeto con la dirección URI especificada, hospedadas en la instancia de <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> actual.</span><span class="sxs-lookup"><span data-stu-id="1b370-173">An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b370-174">Este método lo usa <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1b370-174">This method is used by <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b370-175">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri%2A> método.</span><span class="sxs-lookup"><span data-stu-id="1b370-175">The following code example shows the use of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri%2A> method.</span></span>  
  
 [!code-cpp[TcpServerChannel.GetUrlsForUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpServerChannel.GetUrlsForUri/CPP/class1.cpp#1)]
 [!code-csharp[TcpServerChannel.GetUrlsForUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpServerChannel.GetUrlsForUri/CS/class1.cs#1)]
 [!code-vb[TcpServerChannel.GetUrlsForUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpServerChannel.GetUrlsForUri/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecured : bool with get, set" Usage="System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.IsSecured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.ISecurableChannel.IsSecured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b370-176">Obtiene o establece un valor booleano que indica si el canal actual es seguro.</span><span class="sxs-lookup"><span data-stu-id="1b370-176">Gets or sets a Boolean value that indicates whether the current channel is secure.</span></span></summary>
        <value><span data-ttu-id="1b370-177">Valor booleano que indica si la instancia actual es segura.</span><span class="sxs-lookup"><span data-stu-id="1b370-177">A Boolean value that indicates whether the current instance is secure.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member Parse : string *  -&gt; string&#xA;override this.Parse : string *  -&gt; string" Usage="tcpServerChannel.Parse (url, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="1b370-178">Dirección URL de la que se extrae la dirección URI del objeto conocido remoto.</span><span class="sxs-lookup"><span data-stu-id="1b370-178">The URL from which to extract the URI of the remote well-known object.</span></span></param>
        <param name="objectURI"><span data-ttu-id="1b370-179">Cuando este método finaliza, contiene una instancia de <see cref="T:System.String" /> con la dirección URI del objeto conocido remoto.</span><span class="sxs-lookup"><span data-stu-id="1b370-179">When this method returns, contains a <see cref="T:System.String" /> instance that holds the URI of the remote well-known object.</span></span> <span data-ttu-id="1b370-180">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="1b370-180">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="1b370-181">Extrae el identificador URI del canal y el identificador URI del objeto conocido remoto de la dirección URL especificada.</span><span class="sxs-lookup"><span data-stu-id="1b370-181">Extracts the channel URI and the remote well-known object URI from the specified URL.</span></span></summary>
        <returns><span data-ttu-id="1b370-182">URI del canal actual.</span><span class="sxs-lookup"><span data-stu-id="1b370-182">The URI of the current channel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b370-183">El URI de un objeto es un valor que identifica una instancia de objeto específico.</span><span class="sxs-lookup"><span data-stu-id="1b370-183">The URI of an object is a value that uniquely identifies a specific object instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b370-184">En el ejemplo de código siguiente se muestra el uso de este método.</span><span class="sxs-lookup"><span data-stu-id="1b370-184">The following code example shows the use this method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#23](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CPP/server.cpp#23)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel#23](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CS/server.cs#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StartListening : obj -&gt; unit&#xA;override this.StartListening : obj -&gt; unit" Usage="tcpServerChannel.StartListening data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.StartListening(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1b370-185">Información de inicialización opcional.</span><span class="sxs-lookup"><span data-stu-id="1b370-185">Optional initialization information.</span></span></param>
        <summary><span data-ttu-id="1b370-186">Indica al canal actual que empiece a escuchar en un canal después de llamar al método <see cref="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)" /> para detener la escucha en el canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-186">Instructs the current channel to start listening on a channel after the <see cref="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)" /> method has been called to stop listening on the channel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b370-187">El <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> constructor llama automáticamente a `StartListening`, por lo que no debería llamar a este método, a menos que <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> se llamaba anteriormente.</span><span class="sxs-lookup"><span data-stu-id="1b370-187">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> constructor automatically calls `StartListening`, so you shouldn't call this method unless <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> was previously called.</span></span>  
  
 <span data-ttu-id="1b370-188">Una llamada a `StartListening` en un canal de escucha ya puede dar lugar a comportamientos inesperados y debe evitarse.</span><span class="sxs-lookup"><span data-stu-id="1b370-188">Calling `StartListening` on an already listening channel may lead to unexpected behaviors and should be avoided.</span></span>  
  
 <span data-ttu-id="1b370-189">Si el canal utiliza un número de puerto asignado dinámicamente, puede cambiar el número de puerto al reiniciar la escucha.</span><span class="sxs-lookup"><span data-stu-id="1b370-189">If your channel uses a dynamically assigned port number, your port number might change when you restart listening.</span></span>  
  
 <span data-ttu-id="1b370-190">El objeto de datos puede utilizarse para pasar un estado de inicialización específico al canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-190">The data object can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="1b370-191">Si no desea pasar un estado concreto al canal, establezca `data` a `null`.</span><span class="sxs-lookup"><span data-stu-id="1b370-191">If you do not want to pass a specific state to the channel, set `data` to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StopListening : obj -&gt; unit&#xA;override this.StopListening : obj -&gt; unit" Usage="tcpServerChannel.StopListening data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.StopListening(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="1b370-192">Información opcional de estado para el canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-192">Optional state information for the channel.</span></span></param>
        <summary><span data-ttu-id="1b370-193">Indica al canal actual que detenga la escucha de solicitudes.</span><span class="sxs-lookup"><span data-stu-id="1b370-193">Instructs the current channel to stop listening for requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b370-194">Use este método para detener la escucha en un canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-194">Use this method to stop listening on a channel.</span></span> <span data-ttu-id="1b370-195">Para reiniciar la escucha, utilice el <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> método.</span><span class="sxs-lookup"><span data-stu-id="1b370-195">To restart listening, use the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> method.</span></span>  
  
 <span data-ttu-id="1b370-196">Si el canal utiliza un número de puerto asignado dinámicamente, puede cambiar el número de puerto al reiniciar la escucha.</span><span class="sxs-lookup"><span data-stu-id="1b370-196">If your channel uses a dynamically assigned port number, your port number might change when you restart listening.</span></span>  
  
 <span data-ttu-id="1b370-197">El objeto de datos puede utilizarse para pasar un estado de inicialización específico al canal.</span><span class="sxs-lookup"><span data-stu-id="1b370-197">The data object can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="1b370-198">Si no desea pasar un estado concreto al canal, establezca `data` a `null`.</span><span class="sxs-lookup"><span data-stu-id="1b370-198">If you do not want to pass a specific state to the channel, set `data` to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="SecurityTokenHandler" FullName="System.IdentityModel.Tokens.SecurityTokenHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="150d892884e4958b20bdde55fc1889994ef6ee77" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52604885" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenHandler : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenHandler extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenHandler&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenHandler abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type SecurityTokenHandler = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c2af3-101">La clase base abstracta para los controladores de token de seguridad.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c2af3-101">The abstract base class for security token handlers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-102">El <xref:System.IdentityModel.Tokens.SecurityTokenHandler> es la clase base desde la seguridad de todos los controladores de token derivan.</span><span class="sxs-lookup"><span data-stu-id="c2af3-102">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class is the base class from which all security token handlers derive.</span></span> <span data-ttu-id="c2af3-103">Un controlador de token de seguridad es responsable de:</span><span class="sxs-lookup"><span data-stu-id="c2af3-103">A security token handler is responsible for:</span></span>  
  
-   <span data-ttu-id="c2af3-104">Validación de tokens de seguridad (<xref:System.IdentityModel.Tokens.SecurityToken>) del tipo está diseñado para procesar y empaquetado de las notificaciones contenidas en el token en un <xref:System.Security.Claims.ClaimsIdentity> objeto.</span><span class="sxs-lookup"><span data-stu-id="c2af3-104">Validating security tokens (<xref:System.IdentityModel.Tokens.SecurityToken>) of the type it is designed to process and packaging the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity> object.</span></span>  
  
-   <span data-ttu-id="c2af3-105">Serializar y deserializar los tokens de seguridad del tipo está diseñado para procesar.</span><span class="sxs-lookup"><span data-stu-id="c2af3-105">Serializing and deserializing security tokens of the type it is designed to process.</span></span>  
  
-   <span data-ttu-id="c2af3-106">Serializar y deserializar las cláusulas de identificador de clave (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) que hacen referencia a tokens del tipo está diseñado para procesar y viceversa `<wsse:SecurityTokenReference>` elementos.</span><span class="sxs-lookup"><span data-stu-id="c2af3-106">Serializing and deserializing key identifier clauses (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that refer to tokens of the type it is designed to process to and from `<wsse:SecurityTokenReference>` elements.</span></span>  
  
-   <span data-ttu-id="c2af3-107">Creación de tokens de seguridad desde un <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> objeto pasado por implementaciones de la <xref:System.IdentityModel.SecurityTokenService> clase.</span><span class="sxs-lookup"><span data-stu-id="c2af3-107">Creating security tokens from a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> object passed by implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
-   <span data-ttu-id="c2af3-108">Creación de cláusulas de identificador de clave de un token de seguridad para las implementaciones de la <xref:System.IdentityModel.SecurityTokenService> clase.</span><span class="sxs-lookup"><span data-stu-id="c2af3-108">Creating key identifier clauses from a security token for implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="c2af3-109">Windows Identity Foundation (WIF) incluye los siguientes controladores de token de seguridad de fábrica:</span><span class="sxs-lookup"><span data-stu-id="c2af3-109">Windows Identity Foundation (WIF) ships the following security token handlers out of the box:</span></span>  
  
-   <xref:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler>  
  
 <span data-ttu-id="c2af3-110">La mayoría de estas clases expone a miembros adicionales que implementan la funcionalidad que es específica para el procesamiento de los tokens para el que la clase está diseñada.</span><span class="sxs-lookup"><span data-stu-id="c2af3-110">Most of these classes expose additional members that implement functionality that is specific to the processing of the tokens for which the class is designed.</span></span> <span data-ttu-id="c2af3-111">En muchos casos, es posible que convenga derivar de una de estas clases en lugar de directamente desde el <xref:System.IdentityModel.Tokens.SecurityTokenHandler> clase.</span><span class="sxs-lookup"><span data-stu-id="c2af3-111">In many cases it may be better to derive from one of these classes rather than directly from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class.</span></span>  
  
 <span data-ttu-id="c2af3-112">Un controlador de token de seguridad se puede agregar o quitar de una colección de controladores de token especificando el [ &lt;agregar&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [ &lt;quitar&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md), o [ &lt;borrar&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) elementos bajo la [ &lt;securityTokenHandlers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) elemento en un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="c2af3-112">A security token handler can be added or removed from  a token handler collection by specifying the [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md), or [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) elements under the [&lt;securityTokenHandlers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element in a configuration file.</span></span> <span data-ttu-id="c2af3-113">El <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> puede acceder al objeto que contiene los valores de configuración de la colección de controladores a través de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propiedad y la colección de controladores que el controlador de token es un miembro de se pueden acceder desde el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c2af3-113">The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> object that contains the configuration settings for the handler collection can be accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property and the handler collection that the token handler is a member of can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> property.</span></span> <span data-ttu-id="c2af3-114">Puede invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> método para procesar los elementos de configuración personalizada que toma el controlador.</span><span class="sxs-lookup"><span data-stu-id="c2af3-114">You can override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method to process any custom configuration elements that your handler takes.</span></span>  
  
 <span data-ttu-id="c2af3-115">La <xref:System.IdentityModel.Tokens.SecurityTokenHandler> clase expone varias otras propiedades y métodos.</span><span class="sxs-lookup"><span data-stu-id="c2af3-115">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class exposes several other properties and methods.</span></span> <span data-ttu-id="c2af3-116">Dependiendo de la funcionalidad que desee implementar, puede invalidar algunos o todos estos miembros.</span><span class="sxs-lookup"><span data-stu-id="c2af3-116">Depending on the functionality that you choose to implement, you may override some or all of these members.</span></span>  
  
 <span data-ttu-id="c2af3-117">Se debe reemplazar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> propiedad y el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> método para proporcionar la infraestructura WIF con información sobre el tipo de token de seguridad que su clase está diseñada para procesar.</span><span class="sxs-lookup"><span data-stu-id="c2af3-117">You must override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to provide the WIF infrastructure with information about the type of security token that your class is designed to process.</span></span>  
  
 <span data-ttu-id="c2af3-118">Validación, la serialización y deserialización funcionalidad se expone a través de las propiedades o métodos que indican si el controlador puede realizar una función específica que se combina con el método o métodos que implementan la funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="c2af3-118">Validation, serialization, and deserialization functionality is exposed through properties or methods that indicate whether the handler can perform a specific function combined with the method or methods that implement the functionality.</span></span> <span data-ttu-id="c2af3-119">La siguiente lista de pares de las propiedades o métodos que indican la funcionalidad con los métodos que implementan dicha funcionalidad:</span><span class="sxs-lookup"><span data-stu-id="c2af3-119">The following list pairs the properties or methods that indicate functionality with the methods that implement that functionality:</span></span>  
  
-   <span data-ttu-id="c2af3-120">El <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> propiedad y el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método: valida un token y empaqueta las notificaciones contenidas en el token en un <xref:System.Security.Claims.ClaimsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="c2af3-120">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property and  the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method: Validates a token and packages the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity>.</span></span>  
  
-   <span data-ttu-id="c2af3-121">El <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> propiedad y el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> métodos: serialización del Token.</span><span class="sxs-lookup"><span data-stu-id="c2af3-121">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods: Token serialization.</span></span>  
  
-   <span data-ttu-id="c2af3-122">El <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> métodos y <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> métodos: símbolo (token) de deserialización.</span><span class="sxs-lookup"><span data-stu-id="c2af3-122">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> methods and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> methods: Token deserialization.</span></span>  
  
-   <span data-ttu-id="c2af3-123">El <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> método y el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> método: deserializar las cláusulas de identificador de clave.</span><span class="sxs-lookup"><span data-stu-id="c2af3-123">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method: Deserializing key identifier clauses.</span></span>  
  
-   <span data-ttu-id="c2af3-124">El <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> método y el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> método: serializar las cláusulas de identificador de clave.</span><span class="sxs-lookup"><span data-stu-id="c2af3-124">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method: Serializing key identifier clauses.</span></span>  
  
 <span data-ttu-id="c2af3-125">El <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> y <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> se llama a métodos de la canalización en las implementaciones de la <xref:System.IdentityModel.SecurityTokenService> clase.</span><span class="sxs-lookup"><span data-stu-id="c2af3-125">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> methods are called from the pipeline in implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="c2af3-126">El <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> se llama al método por la infraestructura WIF para determinar si se ha recibido el token especificado.</span><span class="sxs-lookup"><span data-stu-id="c2af3-126">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is called by the WIF infrastructure to determine whether the specified token has already been received.</span></span> <span data-ttu-id="c2af3-127">De forma predeterminada, este método devuelve `false`, lo que indica que el token ya no se ha recibido.</span><span class="sxs-lookup"><span data-stu-id="c2af3-127">By default this method returns `false`, which indicates that the token has not already been received.</span></span> <span data-ttu-id="c2af3-128">Puede invalidar el método y proporcionar lógica para detectar tokens reproducidos.</span><span class="sxs-lookup"><span data-stu-id="c2af3-128">You can override the method and provide logic to detect replayed tokens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2af3-129">Los ejemplos de código en todos los <xref:System.IdentityModel.Tokens.SecurityTokenHandler> temas se toman de la `Custom Token` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c2af3-129">The code examples in all of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="c2af3-130">Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="c2af3-130">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="c2af3-131">Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="c2af3-131">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="c2af3-132">El siguiente XML muestra cómo agregar el controlador de token SWT a la colección de controladores de token.</span><span class="sxs-lookup"><span data-stu-id="c2af3-132">The following XML shows how to add the SWT token handler to the token handlers collection.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration saveBootstrapContext="true">  
    <issuerTokenResolver type="SimpleWebToken.CustomIssuerTokenResolver, SimpleWebToken">  
      <AddAudienceKeyPair  symmetricKey="wAVkldQiFypTQ+kdNdGWCYCHRcee8XmXxOvgmak8vSY=" audience="http://localhost:19851/" />  
    </issuerTokenResolver>  
    <issuerNameRegistry type="RelyingParty.TrustedIssuerNameRegistry, RelyingParty"/>  
    <audienceUris>  
      <add value="http://localhost:19851/"/>  
    </audienceUris>  
    <securityTokenHandlers>  
      <add type="SimpleWebToken.SimpleWebTokenHandler, SimpleWebToken" />  
    </securityTokenHandlers>  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c2af3-133">Se llama desde constructores de clases derivadas para inicializar la clase <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-133">Called from constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool&#xA;override this.CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="securityTokenHandler.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="c2af3-134">Lector XML situado en el elemento de inicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-134">An XML reader positioned at the start element.</span>
          </span>
          <span data-ttu-id="c2af3-135">Este método no debe avanzar el lector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-135">The reader should not be advanced by this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-136">Devuelve un valor que indica si el elemento XML al que hace referencia el lector XML especificado es una cláusula de identificador de clave que esta instancia puede deserializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-136">Returns a value that indicates whether the XML element referred to by the specified XML reader is a key identifier clause that can be deserialized by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2af3-137">
            <see langword="true" /> si el método <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> puede leer el elemento; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-137">
              <see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c2af3-138">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-138">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-139">La implementación predeterminada devuelve `false` para indicar que no se puede leer la cláusula de identificador de clave.</span><span class="sxs-lookup"><span data-stu-id="c2af3-139">The default implementation returns `false` to indicate that the key identifier clause cannot be read.</span></span>  
  
 <span data-ttu-id="c2af3-140">Una clase derivada, comprueba el elemento al que el lector se hace referencia con el fin de determinar si la instancia puede deserializar una cláusula de identificador de clave.</span><span class="sxs-lookup"><span data-stu-id="c2af3-140">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a key identifier clause.</span></span> <span data-ttu-id="c2af3-141">Normalmente, esto se logra mediante una llamada a la <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> método con las cadenas adecuadas de elemento y espacio de nombres especificado.</span><span class="sxs-lookup"><span data-stu-id="c2af3-141">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="c2af3-142">Si invalida <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, también debe invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> método para proporcionar la lógica para deserializar la cláusula de identificador de clave.</span><span class="sxs-lookup"><span data-stu-id="c2af3-142">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c2af3-143">Devuelve un valor que indica si el token especificado se puede deserializar como token del tipo procesado por esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-143">Returns a value that indicates whether the specified token can be deserialized as a token of the type processed by this instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (tokenString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::String ^ tokenString);" />
      <MemberSignature Language="F#" Value="abstract member CanReadToken : string -&gt; bool&#xA;override this.CanReadToken : string -&gt; bool" Usage="securityTokenHandler.CanReadToken tokenString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString">
          <span data-ttu-id="c2af3-144">La cadena de token para leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-144">The token string to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-145">Devuelve un valor que indica si la cadena especificada se puede deserializar como token del tipo procesado por esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-145">Returns a value that indicates whether the specified string can be deserialized as a token of the type processed by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2af3-146">
            <see langword="true" /> si el método <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /> puede leer el elemento; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-146">
              <see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /> method can read the element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c2af3-147">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-147">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-148">La implementación predeterminada siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="c2af3-148">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="c2af3-149">Si invalida este método, también debe invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> método para proporcionar la lógica para deserializar el token.</span><span class="sxs-lookup"><span data-stu-id="c2af3-149">If you override this method, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadToken : System.Xml.XmlReader -&gt; bool&#xA;override this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="securityTokenHandler.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="c2af3-150">Lector XML situado en un elemento de inicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-150">An XML reader positioned at a start element.</span>
          </span>
          <span data-ttu-id="c2af3-151">Este método no debe avanzar el lector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-151">The reader should not be advanced by this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-152">Devuelve un valor que indica si el elemento XML al que el lector XML especificado hace referencia se puede leer como token del tipo procesado por esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-152">Returns a value that indicates whether the XML element referenced by the specified XML reader can be read as a token of the type processed by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2af3-153">
            <see langword="true" /> si el método <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> puede leer el elemento; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-153">
              <see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c2af3-154">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-154">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-155">La implementación predeterminada siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="c2af3-155">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="c2af3-156">Una clase derivada, comprueba el elemento al que el lector se hace referencia con el fin de determinar si la instancia puede deserializar un token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="c2af3-156">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a security token.</span></span> <span data-ttu-id="c2af3-157">Normalmente, esto se logra mediante una llamada a la <xref:System.Xml.XmlReader.IsStartElement%2A> método con las cadenas adecuadas de elemento y espacio de nombres especificado.</span><span class="sxs-lookup"><span data-stu-id="c2af3-157">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="c2af3-158">Si invalida <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, también debe invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> método o la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> método para proporcionar la lógica para deserializar la cláusula de identificador de clave.</span><span class="sxs-lookup"><span data-stu-id="c2af3-158">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method or the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2af3-159">El código siguiente muestra cómo invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> método para determinar si se puede leer un token mediante un controlador.</span><span class="sxs-lookup"><span data-stu-id="c2af3-159">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> method to determine whether a token can be read by a handler.</span></span> <span data-ttu-id="c2af3-160">El código se toma de la `Custom Token` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c2af3-160">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="c2af3-161">Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="c2af3-161">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="c2af3-162">Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="c2af3-162">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public virtual bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanValidateToken : bool" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2af3-163">Obtiene un valor que indica si el identificador admite la validación de tokens de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-163">Gets a value that indicates whether the handler supports validation of security tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2af3-164">
            <see langword="true" /> si la clase es capaz de validar tokens de seguridad; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-164">
              <see langword="true" /> if the class is capable of validating security tokens; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c2af3-165">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-165">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-166">Para implementar la validación en una clase derivada, invalide esta propiedad para devolver `true` e invalidar la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método para implementar la lógica de validación.</span><span class="sxs-lookup"><span data-stu-id="c2af3-166">To implement validation in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method to implement the validation logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2af3-167">El código siguiente muestra cómo invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> propiedad para indicar que un controlador personalizado puede validar tokens.</span><span class="sxs-lookup"><span data-stu-id="c2af3-167">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property to indicate that a custom handler can validate tokens.</span></span> <span data-ttu-id="c2af3-168">El código se toma de la `Custom Token` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c2af3-168">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="c2af3-169">Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="c2af3-169">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="c2af3-170">Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="c2af3-170">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityTokenHandler.CanWriteKeyIdentifierClause securityKeyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause">
          <span data-ttu-id="c2af3-171">Cláusula de identificador de clave que se va a activar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-171">The key identifier clause to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-172">Devuelve un valor que indica si la instancia puede serializar la cláusula de identificador de clave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-172">Returns a value that indicates whether the specified key identifier clause can be serialized by this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2af3-173">
            <see langword="true" /> si se puede serializar la cláusula de identificador clave; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-173">
              <see langword="true" /> if the key identifier clause can be serialized; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c2af3-174">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-174">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-175">La implementación predeterminada siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="c2af3-175">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="c2af3-176">Si invalida <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>, también debe invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> método para proporcionar la lógica para serializar la cláusula de identificador de clave.</span><span class="sxs-lookup"><span data-stu-id="c2af3-176">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method to provide the logic to serialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : bool" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2af3-177">Obtiene un valor que indica si el identificador puede serializar tokens de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-177">Gets a value that indicates whether the handler can serialize security tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2af3-178">Es <see langword="true" /> si la clase es capaz de realizar la serialización de tokens; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-178">
              <see langword="true" /> if the class is capable of serializing tokens; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c2af3-179">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-179">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-180">Para implementar la serialización en una clase derivada, invalide esta propiedad para devolver `true` e invalidar la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> métodos para implementar la lógica de serialización.</span><span class="sxs-lookup"><span data-stu-id="c2af3-180">To implement serialization in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods to implement the serialization logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2af3-181">El código siguiente muestra cómo invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> propiedad para indicar que un controlador personalizado puede serializar tokens.</span><span class="sxs-lookup"><span data-stu-id="c2af3-181">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property to indicate that a custom handler can serialize tokens.</span></span> <span data-ttu-id="c2af3-182">El código se toma de la `Custom Token` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c2af3-182">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="c2af3-183">Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="c2af3-183">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="c2af3-184">Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="c2af3-184">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
      <MemberSignature Language="VB.NET" Value="Public Property Configuration As SecurityTokenHandlerConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ Configuration { System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Configuration : System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration with get, set" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2af3-185">Obtiene o establece el objeto <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> que proporciona la configuración de la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-185">Gets or sets the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> object that provides configuration for the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2af3-186">El objeto de configuración de la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-186">The configuration object for the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-187">El <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> normalmente se establece la propiedad por la infraestructura de configuración de la [ &lt;securityTokenHandlerConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) inician el elemento en el archivo de configuración durante la aplicación.</span><span class="sxs-lookup"><span data-stu-id="c2af3-187">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property is typically set by the configuration infrastructure from the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element in the configuration file during application start up.</span></span>  
  
 <span data-ttu-id="c2af3-188">En las clases derivadas, use el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propiedad para acceder a la configuración; por ejemplo, el registro de nombre del emisor para usar en el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método se puede acceder desde el <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> propiedad del objeto de configuración.</span><span class="sxs-lookup"><span data-stu-id="c2af3-188">In derived classes, you use the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property to access configuration settings; for example, the issuer name registry to use in the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> property of the configuration object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainingCollection">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainingCollection As SecurityTokenHandlerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ ContainingCollection { System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainingCollection : System.IdentityModel.Tokens.SecurityTokenHandlerCollection" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2af3-189">Obtiene la colección controladores de token que contiene la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-189">Gets the token handler collection that contains the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2af3-190">La colección de controladores de token que contiene la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-190">The token handler collection that contains the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-191">Cuando se agrega el controlador de token a un <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> instancia, esta propiedad se establece automáticamente.</span><span class="sxs-lookup"><span data-stu-id="c2af3-191">When the token handler is added to a <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> instance, this property is automatically set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenReference">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference(class System.IdentityModel.Tokens.SecurityToken token, bool attached) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSecurityTokenReference (token As SecurityToken, attached As Boolean) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ CreateSecurityTokenReference(System::IdentityModel::Tokens::SecurityToken ^ token, bool attached);" />
      <MemberSignature Language="F#" Value="abstract member CreateSecurityTokenReference : System.IdentityModel.Tokens.SecurityToken * bool -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause&#xA;override this.CreateSecurityTokenReference : System.IdentityModel.Tokens.SecurityToken * bool -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenHandler.CreateSecurityTokenReference (token, attached)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="attached" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="c2af3-192">El token para el que se va a crear la referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-192">The token for which the reference is to be created.</span>
          </span>
        </param>
        <param name="attached">
          <span data-ttu-id="c2af3-193">
            <see langword="true" /> si se debe crear una referencia adjunta; <see langword="false" /> si se debe crear una referencia sin adjuntar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-193">
              <see langword="true" /> if an attached reference should be created; <see langword="false" /> if an unattached reference should be created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-194">Cuando se reemplaza en una clase derivada, crea la referencia del token de seguridad para tokens procesados por esa clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-194">When overridden in a derived class, creates the security token reference for tokens processed by that class.</span>
          </span>
          <span data-ttu-id="c2af3-195">Un servicio de token de seguridad (STS) llama normalmente a este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-195">This method is typically called by a security token service (STS).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2af3-196">Cláusula de identificador de clave que hace referencia al token especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-196">A key identifier clause that references the specified token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-197">De forma predeterminada, este método produce una <xref:System.NotImplementedException> excepción.</span><span class="sxs-lookup"><span data-stu-id="c2af3-197">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="c2af3-198">Las clases derivadas invalidar este método para devolver una cláusula de identificador de clave (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) que puede utilizarse para crear un `<wsse:SecurityTokenReference>` (elemento) para el token especificado.</span><span class="sxs-lookup"><span data-stu-id="c2af3-198">Derived classes override this method to return a key identifier clause (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that can be used to create a `<wsse:SecurityTokenReference>` element for the specified token.</span></span>  
  
 <span data-ttu-id="c2af3-199">Se llama desde las implementaciones de la <xref:System.IdentityModel.SecurityTokenService> clase.</span><span class="sxs-lookup"><span data-stu-id="c2af3-199">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="c2af3-200">Normalmente, un <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> no necesita ser utilizado, excepto cuando se crea un servicio de token de seguridad personalizado.</span><span class="sxs-lookup"><span data-stu-id="c2af3-200">Typically, a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="c2af3-201">Cuando un servicio de token de seguridad devuelve un token de seguridad, el token de seguridad emitido contiene las referencias a los tokens de seguridad adjuntas y no adjuntas.</span><span class="sxs-lookup"><span data-stu-id="c2af3-201">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="c2af3-202">Las referencias adjuntas hacen referencia a los tokens de seguridad que están contenidos dentro del encabezado de seguridad de un mensaje SOAP y las referencias no adjuntas hacen referencia a tokens de seguridad que no están incluidos dentro del encabezado de seguridad de un mensaje SOAP.</span><span class="sxs-lookup"><span data-stu-id="c2af3-202">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="c2af3-203">Normalmente, estas referencias afirman la autenticidad del token de seguridad emitido.</span><span class="sxs-lookup"><span data-stu-id="c2af3-203">These references typically affirm the authenticity of the issued security token.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2af3-204">El código siguiente muestra cómo invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> método para crear una cláusula de identificador de clave del token especificado.</span><span class="sxs-lookup"><span data-stu-id="c2af3-204">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> method to create a key identifier clause from the specified token.</span></span> <span data-ttu-id="c2af3-205">El código se toma de la `Custom Token` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c2af3-205">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="c2af3-206">Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="c2af3-206">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="c2af3-207">Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="c2af3-207">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member CreateToken : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.CreateToken : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.CreateToken tokenDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor">
          <span data-ttu-id="c2af3-208">El descriptor de token de seguridad del que se va a crear el token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-208">The security token descriptor from which the token is to be created.</span>
          </span>
          <span data-ttu-id="c2af3-209">Las propiedades del descriptor de token se establecen antes de llamar a este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-209">Properties of the token descriptor are set before this method is called.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-210">Cuando se reemplaza en una clase derivada, crea un token de seguridad usando el descriptor del token especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-210">When overridden in a derived class, creates a security token using the specified token descriptor.</span>
          </span>
          <span data-ttu-id="c2af3-211">Un servicio de token de seguridad (STS) llama a este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-211">This method is called by a security token service (STS).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2af3-212">Token de seguridad que coincide con las propiedades del descriptor de token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-212">A security token that matches the properties of the token descriptor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-213">De forma predeterminada, este método produce una <xref:System.NotImplementedException> excepción.</span><span class="sxs-lookup"><span data-stu-id="c2af3-213">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="c2af3-214">Se llama desde las implementaciones de la <xref:System.IdentityModel.SecurityTokenService> clase.</span><span class="sxs-lookup"><span data-stu-id="c2af3-214">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2af3-215">El código siguiente muestra cómo invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> método para crear y devolver un token de un descriptor de token.</span><span class="sxs-lookup"><span data-stu-id="c2af3-215">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> method to create and return a token from a token descriptor.</span></span> <span data-ttu-id="c2af3-216">El código se toma de la `Custom Token` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c2af3-216">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="c2af3-217">Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="c2af3-217">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="c2af3-218">Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="c2af3-218">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectReplayedToken">
      <MemberSignature Language="C#" Value="protected virtual void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DetectReplayedToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DetectReplayedToken (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DetectReplayedToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member DetectReplayedToken : System.IdentityModel.Tokens.SecurityToken -&gt; unit&#xA;override this.DetectReplayedToken : System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenHandler.DetectReplayedToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="c2af3-219">El token cuya reproducción se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-219">The token to check for replay.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-220">Cuando se reemplaza en una clase derivada, produce una excepción si el token especificado se detecta como que se está volviendo a reproducir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-220">When overridden in a derived class, throws an exception if the specified token is detected as being replayed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-221">La implementación predeterminada no hace nada.</span><span class="sxs-lookup"><span data-stu-id="c2af3-221">The default implementation does nothing.</span></span>  
  
 <span data-ttu-id="c2af3-222">Las clases derivadas se deben producir una <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> si ya se ha utilizado el token.</span><span class="sxs-lookup"><span data-stu-id="c2af3-222">Derived classes should throw a <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> if the token has already been used.</span></span>  
  
 <span data-ttu-id="c2af3-223">Windows Identity Foundation (WIF) proporciona la <xref:System.IdentityModel.Tokens.TokenReplayCache> clase desde qué reproducción se pueden derivar las memorias caché y la [ &lt;tokenReplayCache&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) elemento de configuración, que se puede usar para configurar el memoria caché de reproducción utilizada por los controladores de token en una aplicación; Sin embargo, la implementación exacta de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> método es hasta el Diseñador de la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c2af3-223">Windows Identity Foundation (WIF) provides the <xref:System.IdentityModel.Tokens.TokenReplayCache> class from which replay caches may be derived and the [&lt;tokenReplayCache&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) configuration element, which can be used to configure the replay cache used by token handlers in an application; however, the exact implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is up to the designer of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public abstract string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetTokenTypeIdentifiers : unit -&gt; string[]" Usage="securityTokenHandler.GetTokenTypeIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c2af3-224">Cuando se reemplaza en una clase derivada, devuelve el conjunto de identificadores URI que se usan en solicitudes para identificar un token del tipo procesado por la clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-224">When overridden in a derived class, returns the set of URIs that are used in requests to identify a token of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2af3-225">El conjunto de URI que identifican el tipo de token que este controlador admite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-225">The set of URIs that identify the token type that this handler supports.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-226">El <xref:System.Type> del token procesado por la instancia actual se accede a través del <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c2af3-226">The <xref:System.Type> of the token processed by the current instance is accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property.</span></span> <span data-ttu-id="c2af3-227">El <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> método devuelve el conjunto de identificadores aceptables que se puede usar en los mensajes para hacer referencia al tipo de token.</span><span class="sxs-lookup"><span data-stu-id="c2af3-227">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method returns the set of acceptable identifiers that can be used in messages to refer to the token type.</span></span> <span data-ttu-id="c2af3-228">Por ejemplo, el valor del URI utilizado en el `<wst:TokenType>` elemento bajo el `<wst:RequestSecurityToken>` elemento para solicitar un tipo específico de token (representado por la <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> propiedad del modelo de objetos).</span><span class="sxs-lookup"><span data-stu-id="c2af3-228">For example, the URI value used in the `<wst:TokenType>` element under the `<wst:RequestSecurityToken>` element to request a specific kind of token (represented by the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> property in the object model).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2af3-229">El código siguiente muestra cómo invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> método para devolver los identificadores de tipo de token para un token personalizado.</span><span class="sxs-lookup"><span data-stu-id="c2af3-229">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to return the token type identifiers for a custom token.</span></span> <span data-ttu-id="c2af3-230">El código se toma de la `Custom Token` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c2af3-230">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="c2af3-231">Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="c2af3-231">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="c2af3-232">Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="c2af3-232">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#17](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#17)]  
[!code-csharp[WifRcCustomToken#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="securityTokenHandler.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">
          <span data-ttu-id="c2af3-233">Elementos XML de configuración.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-233">The configuration XML elements.</span>
          </span>
          <span data-ttu-id="c2af3-234">Todos los nodos de la lista son de tipo <see cref="T:System.Xml.XmlElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-234">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-235">Cuando se reemplaza en una clase derivada, carga la configuración personalizada de XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-235">When overridden in a derived class, loads custom configuration from XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-236">El <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> se llama al método mediante la infraestructura de configuración.</span><span class="sxs-lookup"><span data-stu-id="c2af3-236">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="c2af3-237">Cuando se llama a este método, el `nodelist` contendrá los elementos secundarios de nivel superior de la del controlador de token [ &lt;agregar&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) elemento desde el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="c2af3-237">When this method is called, the `nodelist` will contain the top-level child elements of the token handler's [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element from the configuration file.</span></span> <span data-ttu-id="c2af3-238">A su vez, cada una de ellas puede, contener atributos o elementos secundarios según el esquema de configuración que define para la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c2af3-238">Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span>  
  
 <span data-ttu-id="c2af3-239">La implementación predeterminada inicia un <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="c2af3-239">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="c2af3-240">Invalide este método en una clase derivada para habilitar la inicialización del controlador de token de seguridad desde un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="c2af3-240">Override this method in your derived class to enable initialization of your security token handler from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause&#xA;override this.ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenHandler.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="c2af3-241">Un lector XML colocado en el elemento inicial del XML que se va a deserializar en la cláusula del identificador de clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-241">An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-242">Cuando se reemplaza en una clase derivada, deserializa el código XML al que hace referencia el lector XML especificado en una cláusula de identificador de clave que hace referencia a un token procesado por la clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-242">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a key identifier clause that references a token processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2af3-243">Cláusula de identificador de clave que se deserializó de XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-243">The key identifier clause that was deserialized from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-244">De forma predeterminada, este método produce una <xref:System.NotImplementedException> excepción.</span><span class="sxs-lookup"><span data-stu-id="c2af3-244">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="c2af3-245">Invalide este método para proporcionar la lógica para deserializar una cláusula de identificador de clave desde XML.</span><span class="sxs-lookup"><span data-stu-id="c2af3-245">Override this method to provide the logic to deserialize a key identifier clause from XML.</span></span> <span data-ttu-id="c2af3-246">Si invalida este método, también debe invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c2af3-246">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c2af3-247">Cuando se reemplaza en una clase derivada, deserializa el XLM especificado a un token del tipo procesado por la clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-247">When overridden in a derived class, deserializes the specified XML to a token of the type processed by the derived class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (tokenString As String) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::String ^ tokenString);" />
      <MemberSignature Language="F#" Value="abstract member ReadToken : string -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.ReadToken : string -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.ReadToken tokenString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString">
          <span data-ttu-id="c2af3-248">Cadena que se va a deserializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-248">The string to be deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-249">Cuando se reemplaza en una clase derivada, deserializa la cadena especificada a un token del tipo procesado por la clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-249">When overridden in a derived class, deserializes the specified string to a token of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2af3-250">El token de seguridad que se ha deserializado desde la cadena especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-250">The security token that was deserialized from the specified string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="c2af3-251">De forma predeterminada, este método produce una <xref:System.NotImplementedException> excepción.</span><span class="sxs-lookup"><span data-stu-id="c2af3-251">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="c2af3-252">Invalide este método para proporcionar la funcionalidad que puede deserializar un token de seguridad de una cadena.</span><span class="sxs-lookup"><span data-stu-id="c2af3-252">Override this method to provide functionality that can deserialize a security token from a string.</span></span> <span data-ttu-id="c2af3-253">Si se reemplaza, este método, también debe invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c2af3-253">If you override, this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.ReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="c2af3-254">Lector XML situado en el elemento de inicio del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-254">An XML reader positioned at the start element of the token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-255">Cuando se reemplaza en una clase derivada, deserializa el código XML al que hace referencia el lector XML a un token del tipo procesado por la clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-255">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2af3-256">El token de seguridad que se ha deserializado desde XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-256">The security token that was deserialized from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="c2af3-257">De forma predeterminada, este método produce una <xref:System.NotImplementedException> excepción.</span><span class="sxs-lookup"><span data-stu-id="c2af3-257">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="c2af3-258">Invalide este método para proporcionar la lógica para deserializar un token de seguridad de XML.</span><span class="sxs-lookup"><span data-stu-id="c2af3-258">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="c2af3-259">Si invalida este método, también debe invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c2af3-259">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c2af3-260">Normalmente, en las clases derivadas, si el método no puede deserializar el token del archivo XML que se hace referencia, genera un <xref:System.Xml.XmlException>.</span><span class="sxs-lookup"><span data-stu-id="c2af3-260">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2af3-261">El código siguiente muestra cómo invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> método para leer un token personalizado desde el lector XML especificado.</span><span class="sxs-lookup"><span data-stu-id="c2af3-261">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> method to read a custom token from the specified XML reader.</span></span> <span data-ttu-id="c2af3-262">El código se toma de la `Custom Token` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c2af3-262">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="c2af3-263">Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="c2af3-263">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="c2af3-264">Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="c2af3-264">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#7)]  
[!code-csharp[WifRcCustomToken#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#8)]  
[!code-csharp[WifRcCustomToken#14](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.ReadToken (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="c2af3-265">Lector XML situado en el elemento de inicio del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-265">An XML reader positioned at the start element of the token.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="c2af3-266">Una resolución de tokens que contiene los tokens fuera de banda y almacenados en memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-266">A token resolver that contains out-of-band and cached tokens.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-267">Cuando se reemplaza en una clase derivada, deserializa el código XML al que hace referencia el lector XML especificado en token del tipo procesado por la clase derivada mediante el solucionador de token especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-267">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class by using the specified token resolver.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2af3-268">El token de seguridad que se ha deserializado desde XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-268">The security token that was deserialized from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="c2af3-269">La implementación predeterminada omite la `tokenResolver` parámetro y delega la llamada a la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c2af3-269">The default implementation ignores the `tokenResolver` parameter and delegates the call to the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="c2af3-270">Invalide este método para proporcionar la lógica para deserializar un token de seguridad de XML.</span><span class="sxs-lookup"><span data-stu-id="c2af3-270">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="c2af3-271">Si invalida este método, también debe invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c2af3-271">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c2af3-272">Normalmente, en las clases derivadas, si el método no puede deserializar el token del archivo XML que se hace referencia, genera un <xref:System.Xml.XmlException>.</span><span class="sxs-lookup"><span data-stu-id="c2af3-272">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public abstract Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ TokenType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenType : Type" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c2af3-273">Cuando se invalida en una clase derivada, obtiene el tipo del token de seguridad que procesa esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-273">When overridden in a derived class, gets the type of the security token that is processed by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c2af3-274">El tipo de token de seguridad procesados por esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-274">The type of the security token that is processed by this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-275">Debe invalidar esta propiedad en las clases derivadas y devolver el <xref:System.Type> del token de seguridad (<xref:System.IdentityModel.Tokens.SecurityToken>) que es procesado por la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c2af3-275">You must override this property in derived classes and return the <xref:System.Type> of the security token (<xref:System.IdentityModel.Tokens.SecurityToken>) that is processed by the derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2af3-276">El código siguiente muestra cómo invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> propiedad para devolver el <xref:System.Type> de los tokens de seguridad que se procesan mediante un controlador personalizado.</span><span class="sxs-lookup"><span data-stu-id="c2af3-276">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property to return the <xref:System.Type> of the security tokens that are processed by a custom handler.</span></span> <span data-ttu-id="c2af3-277">El código se toma de la `Custom Token` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c2af3-277">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="c2af3-278">Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="c2af3-278">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="c2af3-279">Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="c2af3-279">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#18](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationFailure">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationFailure (System.IdentityModel.Tokens.SecurityToken token, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationFailure(class System.IdentityModel.Tokens.SecurityToken token, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationFailure (token As SecurityToken, errorMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationFailure(System::IdentityModel::Tokens::SecurityToken ^ token, System::String ^ errorMessage);" />
      <MemberSignature Language="F#" Value="member this.TraceTokenValidationFailure : System.IdentityModel.Tokens.SecurityToken * string -&gt; unit" Usage="securityTokenHandler.TraceTokenValidationFailure (token, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="c2af3-280">El token de seguridad que se está validando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-280">The security token that is being validated.</span>
          </span>
        </param>
        <param name="errorMessage">
          <span data-ttu-id="c2af3-281">Mensaje que se va a escribir en el seguimiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-281">The message to write to the trace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-282">Hace un seguimiento del evento de error durante la validación de tokens de seguridad cuando está habilitado el seguimiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-282">Traces the failure event during the validation of security tokens when tracing is enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-283">Este método debe llamarse desde el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método cuando se produce un error de validación del token.</span><span class="sxs-lookup"><span data-stu-id="c2af3-283">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method when validation of the token fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationSuccess">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationSuccess (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationSuccess(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationSuccess (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationSuccess(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.TraceTokenValidationSuccess : System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenHandler.TraceTokenValidationSuccess token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="c2af3-284">El token que se validó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-284">The token that was validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-285">Hace un seguimiento de la validación correcta del evento de tokens de seguridad cuando está habilitado el seguimiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-285">Traces the successful validation of security tokens event when tracing is enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-286">Este método debe llamarse desde el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método después de que se ha validado correctamente el token.</span><span class="sxs-lookup"><span data-stu-id="c2af3-286">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method after the token has been successfully validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;&#xA;override this.ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="securityTokenHandler.ValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="c2af3-287">Token que se va a validar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-287">The token to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-288">Cuando se reemplaza en una clase derivada, valida el token de seguridad especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-288">When overridden in a derived class, validates the specified security token.</span>
          </span>
          <span data-ttu-id="c2af3-289">El token debe ser del tipo procesado por la clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-289">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2af3-290">Identidades contenidas en el token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-290">The identities contained in the token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-291">De forma predeterminada, este método produce una <xref:System.NotImplementedException> excepción.</span><span class="sxs-lookup"><span data-stu-id="c2af3-291">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="c2af3-292">El <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> se llama al método por la infraestructura para validar y extraer las notificaciones del token de seguridad deserializado.</span><span class="sxs-lookup"><span data-stu-id="c2af3-292">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method is called by the infrastructure to validate and extract the claims from the deserialized security token.</span></span> <span data-ttu-id="c2af3-293">Estas notificaciones se devuelven en la colección de <xref:System.Security.Claims.ClaimsIdentity> los objetos devueltos por el método.</span><span class="sxs-lookup"><span data-stu-id="c2af3-293">These claims are returned in the collection of <xref:System.Security.Claims.ClaimsIdentity> objects returned by the method.</span></span> <span data-ttu-id="c2af3-294">En el caso típico, esta colección contendrá una identidad única.</span><span class="sxs-lookup"><span data-stu-id="c2af3-294">In the typical case, this collection will contain a single identity.</span></span>  
  
 <span data-ttu-id="c2af3-295">En las clases derivadas, validación normalmente incluye la validación de los destinatarios especificados en el símbolo (token) frente a la audiencia URI especificados en el <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> propiedad del objeto de configuración de controlador de token especificado en el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c2af3-295">In derived classes, validation typically includes validating the intended audience specified in the token against the audience URIs specified in the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> property of the token handler configuration object specified on the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="c2af3-296">Normalmente se establecen en el archivo de configuración de estos URI el [ &lt;audienceUris&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) elemento.</span><span class="sxs-lookup"><span data-stu-id="c2af3-296">These URIs are typically set in the configuration file under the [&lt;audienceUris&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) element.</span></span> <span data-ttu-id="c2af3-297">Si no se puede validar la audiencia, un <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> se produce la excepción.</span><span class="sxs-lookup"><span data-stu-id="c2af3-297">If the audience cannot be validated, an <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> exception should be thrown.</span></span>  
  
 <span data-ttu-id="c2af3-298">Al procesar el token, el emisor normalmente se valida al pasar el token del emisor en uno de los <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> métodos en el <xref:System.IdentityModel.Tokens.IssuerNameRegistry> objeto que está configurado para el controlador a través de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c2af3-298">When processing the token, the issuer is typically validated by passing the issuer token to one of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> methods on the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> object that is configured for the handler through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="c2af3-299">El registro de nombre del emisor se configura normalmente a través de la [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) elemento en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="c2af3-299">The issuer name registry is typically configured through the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element in the configuration file.</span></span> <span data-ttu-id="c2af3-300">El <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> devuelve el nombre del emisor.</span><span class="sxs-lookup"><span data-stu-id="c2af3-300">The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns the name of the issuer.</span></span> <span data-ttu-id="c2af3-301">Este nombre se debe utilizar para establecer el <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> propiedad en las notificaciones contenidas en el token.</span><span class="sxs-lookup"><span data-stu-id="c2af3-301">This name should be used to set the <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> property in claims contained in the token.</span></span> <span data-ttu-id="c2af3-302">Si el registro de nombre del emisor no contiene una entrada para el token del emisor, <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="c2af3-302">If the issuer name registry does not contain an entry for the issuer token, <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns `null`.</span></span> <span data-ttu-id="c2af3-303">En este caso un <xref:System.IdentityModel.Tokens.SecurityTokenException> normalmente se produce en las clases derivadas, pero este comportamiento es hasta el Diseñador de la clase.</span><span class="sxs-lookup"><span data-stu-id="c2af3-303">In this case a <xref:System.IdentityModel.Tokens.SecurityTokenException> is typically thrown in derived classes, but this behavior is up to the designer of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2af3-304">El código siguiente muestra un reemplazo del <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método para un controlador de token de seguridad que procesa tokens web simples (SWT).</span><span class="sxs-lookup"><span data-stu-id="c2af3-304">The following code shows an override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method for a security token handler that processes simple web tokens (SWT).</span></span> <span data-ttu-id="c2af3-305">El código se toma de la `CustomToken` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c2af3-305">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="c2af3-306">Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="c2af3-306">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#9](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#9)]  
  
 <span data-ttu-id="c2af3-307">El siguiente código muestra `CreateClaims` método que se invoca desde la invalidación de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método en el ejemplo anterior.</span><span class="sxs-lookup"><span data-stu-id="c2af3-307">The following code shows `CreateClaims` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the previous example.</span></span> <span data-ttu-id="c2af3-308">Este método devuelve un <xref:System.Security.Claims.ClaimsIdentity> objeto que se crea a partir de las notificaciones del token.</span><span class="sxs-lookup"><span data-stu-id="c2af3-308">This method returns a <xref:System.Security.Claims.ClaimsIdentity> object that is created from the claims in the token.</span></span> <span data-ttu-id="c2af3-309">El código se toma de la `CustomToken` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c2af3-309">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="c2af3-310">Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="c2af3-310">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#15](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#15)]  
  
 <span data-ttu-id="c2af3-311">El siguiente código muestra `ValidateSignature` método que se invoca desde la invalidación de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método en el controlador de token web simple.</span><span class="sxs-lookup"><span data-stu-id="c2af3-311">The following code shows `ValidateSignature` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="c2af3-312">Este método valida la firma del token mediante el uso de la configurada <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span><span class="sxs-lookup"><span data-stu-id="c2af3-312">This method validates the signature on the token by using the configured <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span></span> <span data-ttu-id="c2af3-313">El código se toma de la `CustomToken` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c2af3-313">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="c2af3-314">Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="c2af3-314">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#12](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#12)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 <span data-ttu-id="c2af3-315">El siguiente código muestra `ValidateAudience` método que se invoca desde la invalidación de la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> método en el controlador de token web simple.</span><span class="sxs-lookup"><span data-stu-id="c2af3-315">The following code shows `ValidateAudience` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="c2af3-316">Este método valida la audiencia contenida en el símbolo (token) frente a la audiencia de los identificadores URI que se han especificado en la configuración.</span><span class="sxs-lookup"><span data-stu-id="c2af3-316">This method validates the audience contained in the token against the audience URIs that were specified in configuration.</span></span> <span data-ttu-id="c2af3-317">El código se toma de la `CustomToken` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c2af3-317">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="c2af3-318">Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="c2af3-318">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#13](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit&#xA;override this.WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="securityTokenHandler.WriteKeyIdentifierClause (writer, securityKeyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="c2af3-319">Sistema de escritura XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-319">The XML writer.</span>
          </span>
        </param>
        <param name="securityKeyIdentifierClause">
          <span data-ttu-id="c2af3-320">Cláusula de identificador de clave que se va a serializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-320">The key identifier clause to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-321">Cuando se invalida en una clase derivada, serializa la cláusula del identificador de clave especificada a XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-321">When overridden in a derived class, serializes the specified key identifier clause to XML.</span>
          </span>
          <span data-ttu-id="c2af3-322">La cláusula de identificador de clave debe ser del tipo admitido por la clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-322">The key identifier clause must be of the type supported by the derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-323">De forma predeterminada, este método produce una <xref:System.NotImplementedException> excepción.</span><span class="sxs-lookup"><span data-stu-id="c2af3-323">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="c2af3-324">Invalide este método para proporcionar la lógica para serializar una cláusula de identificador de clave para XML.</span><span class="sxs-lookup"><span data-stu-id="c2af3-324">Override this method to provide the logic to serialize a key identifier clause to XML.</span></span> <span data-ttu-id="c2af3-325">Si invalida este método, también debe invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c2af3-325">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c2af3-326">Cuando se reemplaza en una clase derivada, serializa el token de seguridad especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-326">When overridden in a derived class, serializes the specified security token.</span>
          </span>
          <span data-ttu-id="c2af3-327">El token debe ser del tipo procesado por la clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-327">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual string WriteToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WriteToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (token As SecurityToken) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ WriteToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member WriteToken : System.IdentityModel.Tokens.SecurityToken -&gt; string&#xA;override this.WriteToken : System.IdentityModel.Tokens.SecurityToken -&gt; string" Usage="securityTokenHandler.WriteToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="c2af3-328">Token que se va a serializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-328">The token to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-329">Cuando se reemplaza en una clase derivada, serializa el token de seguridad especificado en una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-329">When overridden in a derived class, serializes the specified security token to a string.</span>
          </span>
          <span data-ttu-id="c2af3-330">El token debe ser del tipo procesado por la clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-330">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c2af3-331">Token que se va a serializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-331">The serialized token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-332">De forma predeterminada, este método produce una <xref:System.NotImplementedException> excepción.</span><span class="sxs-lookup"><span data-stu-id="c2af3-332">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="c2af3-333">Invalide este método para proporcionar la lógica para serializar un token de seguridad en XML.</span><span class="sxs-lookup"><span data-stu-id="c2af3-333">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="c2af3-334">Si invalida este método, también debe invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c2af3-334">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit&#xA;override this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenHandler.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="c2af3-335">Sistema de escritura XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-335">The XML writer.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="c2af3-336">Token que se va a serializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-336">The token to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2af3-337">Cuando se reemplaza en una clase derivada, serializa el token de seguridad especificado en XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-337">When overridden in a derived class, serializes the specified security token to XML.</span>
          </span>
          <span data-ttu-id="c2af3-338">El token debe ser del tipo procesado por la clase derivada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2af3-338">The token must be of the type processed by the derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2af3-339">De forma predeterminada, este método produce una <xref:System.NotImplementedException> excepción.</span><span class="sxs-lookup"><span data-stu-id="c2af3-339">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="c2af3-340">Invalide este método para proporcionar la lógica para serializar un token de seguridad en XML.</span><span class="sxs-lookup"><span data-stu-id="c2af3-340">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="c2af3-341">Si invalida este método, también debe invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c2af3-341">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2af3-342">El código siguiente muestra cómo invalidar el <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> método para serializar un token personalizado.</span><span class="sxs-lookup"><span data-stu-id="c2af3-342">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> method to serialize a custom token.</span></span> <span data-ttu-id="c2af3-343">El código se toma de la `Custom Token` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c2af3-343">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="c2af3-344">Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT).</span><span class="sxs-lookup"><span data-stu-id="c2af3-344">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="c2af3-345">Para obtener información acerca de este ejemplo y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="c2af3-345">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#10](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#10)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="SigningCredentials" FullName="System.IdentityModel.Tokens.SigningCredentials">
  <Metadata><Meta Name="ms.openlocfilehash" Value="140c62d9db3584a88ef4f227bc55294b864beaa7" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37757662" /></Metadata><TypeSignature Language="C#" Value="public class SigningCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SigningCredentials extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SigningCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Class SigningCredentials" />
  <TypeSignature Language="C++ CLI" Value="public ref class SigningCredentials" />
  <TypeSignature Language="F#" Value="type SigningCredentials = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="51115-101">Representa los algoritmos de seguridad y clave criptográfica que se utilizan para generar una firma digital.</span><span class="sxs-lookup"><span data-stu-id="51115-101">Represents the cryptographic key and security algorithms that are used to generate a digital signature.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-102">Use la <xref:System.IdentityModel.Tokens.SigningCredentials> clase para especificar la clave de firma, firmando el identificador clave y algoritmos de seguridad que se usan WCF para generar la firma digital para un <xref:System.IdentityModel.Tokens.SamlAssertion>.</span><span class="sxs-lookup"><span data-stu-id="51115-102">Use the <xref:System.IdentityModel.Tokens.SigningCredentials> class to specify the signing key, signing key identifier, and security algorithms that are used by WCF to generate the digital signature for a <xref:System.IdentityModel.Tokens.SamlAssertion>.</span></span> <span data-ttu-id="51115-103">Para establecer los detalles de la firma digital, establezca la propiedad <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> de la clase <xref:System.IdentityModel.Tokens.SamlAssertion>.</span><span class="sxs-lookup"><span data-stu-id="51115-103">To set the digital signature details, set the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property of the <xref:System.IdentityModel.Tokens.SamlAssertion> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51115-104">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SigningCredentials" />.</span><span class="sxs-lookup"><span data-stu-id="51115-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signingKey As SecurityKey, signatureAlgorithm As String, digestAlgorithm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SigningCredentials(System::IdentityModel::Tokens::SecurityKey ^ signingKey, System::String ^ signatureAlgorithm, System::String ^ digestAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SigningCredentials : System.IdentityModel.Tokens.SecurityKey * string * string -&gt; System.IdentityModel.Tokens.SigningCredentials" Usage="new System.IdentityModel.Tokens.SigningCredentials (signingKey, signatureAlgorithm, digestAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signingKey" Type="System.IdentityModel.Tokens.SecurityKey" />
        <Parameter Name="signatureAlgorithm" Type="System.String" />
        <Parameter Name="digestAlgorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="signingKey"><span data-ttu-id="51115-105"><see cref="T:System.IdentityModel.Tokens.SecurityKey" /> que contiene la clave criptográfica que se utiliza para generar la firma digital.</span><span class="sxs-lookup"><span data-stu-id="51115-105">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to generate the digital signature.</span></span></param>
        <param name="signatureAlgorithm"><span data-ttu-id="51115-106">Un URI que representa el algoritmo criptográfico que se utiliza para generar la firma digital.</span><span class="sxs-lookup"><span data-stu-id="51115-106">A URI that represents the cryptographic algorithm that is used to generate the digital signature.</span></span></param>
        <param name="digestAlgorithm"><span data-ttu-id="51115-107">Un URI que representa el algoritmo criptográfico que se utiliza para calcular el resumen para la parte del mensaje SOAP que debe estar firmado digitalmente.</span><span class="sxs-lookup"><span data-stu-id="51115-107">A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</span></span></param>
        <summary><span data-ttu-id="51115-108">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SigningCredentials" />.</span><span class="sxs-lookup"><span data-stu-id="51115-108">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-109">Utilice la clase <xref:System.IdentityModel.Tokens.SecurityAlgorithms> para especificar los parámetros `signatureAlgorithm` y `digestAlgorithm`.</span><span class="sxs-lookup"><span data-stu-id="51115-109">Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters.</span></span> <span data-ttu-id="51115-110">La clase <xref:System.IdentityModel.Tokens.SecurityAlgorithms> contiene un conjunto de cadenas constantes y estáticas que representan los algoritmos criptográficos.</span><span class="sxs-lookup"><span data-stu-id="51115-110">The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static, constant strings that represent cryptographic algorithms.</span></span> <span data-ttu-id="51115-111">Los miembros que tienen un sufijo `Signature` se pueden utilizar para especificar el parámetro `signatureAlgoritm` y los miembros que tienen un sufijo `Digest` se puede utilizar para especificar el parámetro `digestAlgorithm`.</span><span class="sxs-lookup"><span data-stu-id="51115-111">The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, class System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signingKey As SecurityKey, signatureAlgorithm As String, digestAlgorithm As String, signingKeyIdentifier As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SigningCredentials(System::IdentityModel::Tokens::SecurityKey ^ signingKey, System::String ^ signatureAlgorithm, System::String ^ digestAlgorithm, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ signingKeyIdentifier);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SigningCredentials : System.IdentityModel.Tokens.SecurityKey * string * string * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; System.IdentityModel.Tokens.SigningCredentials" Usage="new System.IdentityModel.Tokens.SigningCredentials (signingKey, signatureAlgorithm, digestAlgorithm, signingKeyIdentifier)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signingKey" Type="System.IdentityModel.Tokens.SecurityKey" />
        <Parameter Name="signatureAlgorithm" Type="System.String" />
        <Parameter Name="digestAlgorithm" Type="System.String" />
        <Parameter Name="signingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="signingKey"><span data-ttu-id="51115-112"><see cref="T:System.IdentityModel.Tokens.SecurityKey" /> que contiene la clave criptográfica que se utiliza para generar la firma digital.</span><span class="sxs-lookup"><span data-stu-id="51115-112">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to generate the digital signature.</span></span></param>
        <param name="signatureAlgorithm"><span data-ttu-id="51115-113">Un URI que representa el algoritmo criptográfico que se utiliza para generar la firma digital.</span><span class="sxs-lookup"><span data-stu-id="51115-113">A URI that represents the cryptographic algorithm that is used to generate the digital signature.</span></span></param>
        <param name="digestAlgorithm"><span data-ttu-id="51115-114">Un URI que representa el algoritmo criptográfico que se utiliza para calcular el resumen para la parte del mensaje SOAP que debe estar firmado digitalmente.</span><span class="sxs-lookup"><span data-stu-id="51115-114">A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</span></span></param>
        <param name="signingKeyIdentifier"><span data-ttu-id="51115-115"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> que especifica el identificador que representa la clave que se utiliza para crear una firma digital.</span><span class="sxs-lookup"><span data-stu-id="51115-115">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that specifies the identifier that represents the key that is used to create a digital signature.</span></span></param>
        <summary><span data-ttu-id="51115-116">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SigningCredentials" />.</span><span class="sxs-lookup"><span data-stu-id="51115-116">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-117">Utilice la clase <xref:System.IdentityModel.Tokens.SecurityAlgorithms> para especificar los parámetros `signatureAlgorithm` y `digestAlgorithm`.</span><span class="sxs-lookup"><span data-stu-id="51115-117">Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters.</span></span> <span data-ttu-id="51115-118">La clase <xref:System.IdentityModel.Tokens.SecurityAlgorithms> contiene un conjunto de cadenas constantes y estáticas que representan los algoritmos criptográficos.</span><span class="sxs-lookup"><span data-stu-id="51115-118">The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static constant strings that represent cryptographic algorithms.</span></span> <span data-ttu-id="51115-119">Los miembros que tienen un sufijo `Signature` se pueden utilizar para especificar el parámetro `signatureAlgoritm` y los miembros que tienen un sufijo `Digest` se puede utilizar para especificar el parámetro `digestAlgorithm`.</span><span class="sxs-lookup"><span data-stu-id="51115-119">The members that have a `Signature` suffix can be used to specify the `signatureAlgoritm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DigestAlgorithm">
      <MemberSignature Language="C#" Value="public string DigestAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DigestAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DigestAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DigestAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DigestAlgorithm : string" Usage="System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51115-120">Obtiene el algoritmo criptográfico que se utiliza para calcular el resumen para la parte del mensaje SOAP que debe estar firmado digitalmente.</span><span class="sxs-lookup"><span data-stu-id="51115-120">Gets the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</span></span></summary>
        <value><span data-ttu-id="51115-121">Un URI que representa el algoritmo criptográfico que se utiliza para calcular el resumen para la parte del mensaje SOAP que debe estar firmado digitalmente.</span><span class="sxs-lookup"><span data-stu-id="51115-121">A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-122">Para establecer la propiedad <xref:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm%2A>, utilice uno de los constructores que toman un parámetro `digestAlgorithm`.</span><span class="sxs-lookup"><span data-stu-id="51115-122">To set the <xref:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm%2A> property, use one of the constructors that take a `digestAlgorithm` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : string" Usage="System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51115-123">Obtiene el algoritmo criptográfico que se utiliza para generar la firma digital.</span><span class="sxs-lookup"><span data-stu-id="51115-123">Gets the cryptographic algorithm that is used to generate the digital signature.</span></span></summary>
        <value><span data-ttu-id="51115-124">Un URI que representa el algoritmo criptográfico que se utiliza para generar la firma digital.</span><span class="sxs-lookup"><span data-stu-id="51115-124">A URI that represents the cryptographic algorithm that is used to generate the digital signature.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-125">Para establecer la propiedad <xref:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm%2A>, utilice uno de los constructores que toman un parámetro `signatureAlgorithm`.</span><span class="sxs-lookup"><span data-stu-id="51115-125">To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm%2A> property, use one of the constructors that take a `signatureAlgorithm` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKey">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKey SigningKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKey SigningKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.SigningKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningKey As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKey ^ SigningKey { System::IdentityModel::Tokens::SecurityKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SigningKey : System.IdentityModel.Tokens.SecurityKey" Usage="System.IdentityModel.Tokens.SigningCredentials.SigningKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51115-126">Obtiene la clave criptográfica que se utiliza para generar la firma digital.</span><span class="sxs-lookup"><span data-stu-id="51115-126">Gets the cryptographic key that is used to generate the digital signature.</span></span></summary>
        <value><span data-ttu-id="51115-127"><see cref="T:System.IdentityModel.Tokens.SecurityKey" /> que contiene la clave criptográfica que se utiliza para generar la firma digital.</span><span class="sxs-lookup"><span data-stu-id="51115-127">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to generate the digital signature.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-128">Para establecer la propiedad <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKey%2A>, utilice un constructor que toma un parámetro `signingKey`.</span><span class="sxs-lookup"><span data-stu-id="51115-128">To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKey%2A> property, use a constructor that takes a `signingKey` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKeyIdentifier">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningKeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ SigningKeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SigningKeyIdentifier : System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51115-129">Obtiene el identificador que representa la clave que se utiliza para crear una firma digital.</span><span class="sxs-lookup"><span data-stu-id="51115-129">Gets the identifier that represents the key that is used to create a digital signature.</span></span></summary>
        <value><span data-ttu-id="51115-130"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> que especifica el identificador que representa la clave que se utiliza para crear una firma digital.</span><span class="sxs-lookup"><span data-stu-id="51115-130">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that specifies the identifier that represents the key that is used to create a digital signature.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51115-131">Para establecer la propiedad <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier%2A>, utilice el constructor que toma un parámetro `signingKeyIdentifier`.</span><span class="sxs-lookup"><span data-stu-id="51115-131">To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier%2A> property, use the constructor that takes a `signingKeyIdentifier` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
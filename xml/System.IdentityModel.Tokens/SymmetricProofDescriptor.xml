<Type Name="SymmetricProofDescriptor" FullName="System.IdentityModel.Tokens.SymmetricProofDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61b7b4d8188756da14f649c20e9b9df1355ead6e" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52612544" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SymmetricProofDescriptor : System.IdentityModel.Tokens.ProofDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymmetricProofDescriptor extends System.IdentityModel.Tokens.ProofDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public Class SymmetricProofDescriptor&#xA;Inherits ProofDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymmetricProofDescriptor : System::IdentityModel::Tokens::ProofDescriptor" />
  <TypeSignature Language="F#" Value="type SymmetricProofDescriptor = class&#xA;    inherit ProofDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.ProofDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="86a4a-101">Esta clase se puede usar para emitir el token basado en clave simétrica.</span>
      <span class="sxs-lookup">
        <span data-stu-id="86a4a-101">This class can be used for issuing the symmetric key based token.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86a4a-102">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-102">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor targetWrappingCredentials" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="86a4a-103">
            <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> que se va a utilizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-103">The <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> to be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86a4a-104">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> con las credenciales de cifrado especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with the specified encrypting credentials.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86a4a-105">Utilice este constructor si desea que el STS para utilizar especificado <xref:System.IdentityModel.Tokens.EncryptingCredentials>.</span><span class="sxs-lookup"><span data-stu-id="86a4a-105">Use this constructor if you want the STS to use the specified <xref:System.IdentityModel.Tokens.EncryptingCredentials>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (byte[] key, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte(), targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(cli::array &lt;System::Byte&gt; ^ key, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : byte[] * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (key, targetWrappingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="86a4a-106">La clave simétrica que se usa dentro del token emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-106">The symmetric key that is used inside the issued token.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="86a4a-107">Credenciales de cifrado de clave para el usuario de confianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-107">The key encrypting credentials for the relying party.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86a4a-108">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> con el material de clave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-108">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with the specified key material.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86a4a-109">Utilice este constructor si desea que el STS para utilizar los bytes de clave especificados.</span><span class="sxs-lookup"><span data-stu-id="86a4a-109">Use this constructor if you want the STS to use the specified key bytes.</span></span> <span data-ttu-id="86a4a-110">Esto sucede cuando el cliente envía la entropía y el STS podría usar simplemente como la clave para el token emitido.</span><span class="sxs-lookup"><span data-stu-id="86a4a-110">This happens when client sends the entropy, and the STS would just use that as the key for the issued token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86a4a-111">El valor de <paramref name="key" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-111">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="86a4a-112">Tamaño de la clave simétrica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-112">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="86a4a-113">Credenciales de cifrado de clave para el destino de la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-113">The key encrypting credentials for the target of the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86a4a-114">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> con una clave generada automáticamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-114">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with an auto-generated key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86a4a-115">Utilice este constructor si desea que el STS para generar automáticamente la clave mediante un generador de números aleatorios y enviarlo en el token de prueba como un secreto binario.</span><span class="sxs-lookup"><span data-stu-id="86a4a-115">Use this constructor if you want the STS to auto-generate the key using a random number generator and send it in the proof token as a binary secret.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="86a4a-116">Tamaño de la clave simétrica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-116">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="86a4a-117">Credenciales de cifrado de clave para el destino de la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-117">The key encrypting credentials for the target of the request.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="86a4a-118">Credenciales de cifrado de clave para el solicitante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-118">The key encrypting credentials for the requestor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86a4a-119">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> con una clave generada automáticamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-119">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with an auto-generated key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86a4a-120">Utilice este constructor si desea que el STS para generar la clave automáticamente y enviarlo en el token de prueba como clave cifrada.</span><span class="sxs-lookup"><span data-stu-id="86a4a-120">Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</span></span> <span data-ttu-id="86a4a-121">Dos casos se pueden cubrir mediante el uso de este constructor:</span><span class="sxs-lookup"><span data-stu-id="86a4a-121">Two cases can be covered by using this constructor:</span></span>  
  
1.  <span data-ttu-id="86a4a-122">El cliente envía la entropía, pero el servidor la rechaza.</span><span class="sxs-lookup"><span data-stu-id="86a4a-122">The client sends the entropy, but the server rejects it.</span></span>  
  
2.  <span data-ttu-id="86a4a-123">El cliente no envía la entropía, por lo que se usa la entropía del servidor.</span><span class="sxs-lookup"><span data-stu-id="86a4a-123">The client does not send the entropy, so the server's entropy is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86a4a-124">
            <paramref name="keySizeInBits" /> es menor o igual que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-124">
              <paramref name="keySizeInBits" /> is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, unsigned int8[] sourceEntropy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, sourceEntropy As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, cli::array &lt;System::Byte&gt; ^ sourceEntropy);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials * byte[] -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials, sourceEntropy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="sourceEntropy" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="86a4a-125">Tamaño de la clave simétrica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-125">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="86a4a-126">Credenciales de cifrado de clave para el destino de la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-126">The key encrypting credentials for the target of the request.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="86a4a-127">Credenciales de cifrado para el solicitante usadas para cifrar la entropía o el token de prueba.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-127">The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</span>
          </span>
        </param>
        <param name="sourceEntropy">
          <span data-ttu-id="86a4a-128">La entropía del solicitante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-128">The requestor's entropy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86a4a-129">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> que se va a usar para enviar entropía combinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-129">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class to use for sending combined entropy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86a4a-130">Utilice este constructor si desea enviar una entropía combinada.</span><span class="sxs-lookup"><span data-stu-id="86a4a-130">Use this constructor if you want to send a combined entropy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86a4a-131">
            <paramref name="sourceEntropy" /> es <see langword="null" /> o es una matriz vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-131">
              <paramref name="sourceEntropy" /> is <see langword="null" /> or an empty array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86a4a-132">
            <paramref name="keySize" /> es menor que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-132">
              <paramref name="keySize" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, string encryptWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, string encryptWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, encryptWith As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, System::String ^ encryptWith);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials * string -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials, encryptWith)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="encryptWith" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="86a4a-133">Tamaño de la clave simétrica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-133">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="86a4a-134">Credenciales de cifrado de clave para el usuario de confianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-134">The key encrypting credentials for the relying party.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="86a4a-135">Credenciales de cifrado de clave para el solicitante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-135">The key encrypting credentials for the requestor.</span>
          </span>
        </param>
        <param name="encryptWith">
          <span data-ttu-id="86a4a-136">El algoritmo (URI) especificado en el elemento <see langword="&lt;EncryptWith&gt;" /> de RST.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-136">The algorithm (URI) specified in the <see langword="&lt;EncryptWith&gt;" /> element of the RST.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86a4a-137">Use este constructor para que el STS genere automáticamente una clave y la envíe en el token de prueba como clave cifrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-137">Use this constructor to have the STS autogenerate a key and send it in the proof token as encrypted key.</span>
          </span>
          <span data-ttu-id="86a4a-138">Aquí se abordan dos casos 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-138">Two cases are covered here 1.</span>
          </span>
          <span data-ttu-id="86a4a-139">el cliente envía la entropía, pero el servidor la rechaza 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-139">client sends the entropy, but server rejects it 2.</span>
          </span>
          <span data-ttu-id="86a4a-140">el cliente no envió una entropía, usar solo la entropía de servidor</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-140">client did not send a entropy, so just use server's entropy</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86a4a-141">Si `encryptWith` es un algoritmo DES, la clave se garantiza que no sea una clave DES débil.</span><span class="sxs-lookup"><span data-stu-id="86a4a-141">If `encryptWith` is a DES algorithm, the key is guaranteed not to be a weak DES key.</span></span>  
  
 <span data-ttu-id="86a4a-142">Utilice este constructor si desea que el STS para generar la clave automáticamente y enviarlo en el token de prueba como clave cifrada.</span><span class="sxs-lookup"><span data-stu-id="86a4a-142">Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</span></span> <span data-ttu-id="86a4a-143">Dos casos se pueden cubrir mediante el uso de este constructor:</span><span class="sxs-lookup"><span data-stu-id="86a4a-143">Two cases can be covered by using this constructor:</span></span>  
  
1.  <span data-ttu-id="86a4a-144">El cliente envía la entropía, pero el servidor la rechaza.</span><span class="sxs-lookup"><span data-stu-id="86a4a-144">The client sends the entropy, but the server rejects it.</span></span>  
  
2.  <span data-ttu-id="86a4a-145">El cliente no envía la entropía, por lo que se usa la entropía del servidor.</span><span class="sxs-lookup"><span data-stu-id="86a4a-145">The client does not send the entropy, so the server's entropy is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86a4a-146">
            <paramref name="keySizeInBits" /> es menor o igual que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-146">
              <paramref name="keySizeInBits" /> is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy, string encryptWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, unsigned int8[] sourceEntropy, string encryptWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, sourceEntropy As Byte(), encryptWith As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, cli::array &lt;System::Byte&gt; ^ sourceEntropy, System::String ^ encryptWith);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials * byte[] * string -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials, sourceEntropy, encryptWith)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="sourceEntropy" Type="System.Byte[]" />
        <Parameter Name="encryptWith" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="86a4a-147">Tamaño de la clave simétrica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-147">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="86a4a-148">Credenciales de cifrado para el usuario de confianza usadas para cifrar la clave en la propiedad SecurityKeyIdentifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-148">The encrypting credentials for the relying party used to encrypt the key in the SecurityKeyIdentifier property.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="86a4a-149">Credenciales de cifrado para el solicitante usadas para cifrar la entropía o el token de prueba.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-149">The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</span>
          </span>
        </param>
        <param name="sourceEntropy">
          <span data-ttu-id="86a4a-150">La entropía del solicitante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-150">The requestor's entropy.</span>
          </span>
        </param>
        <param name="encryptWith">
          <span data-ttu-id="86a4a-151">El URI del algoritmo que se va a usar para cifrar la clave de prueba.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-151">The URI of the algorithm to use to encrypt the proof key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86a4a-152">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> que se va a usar para enviar entropía combinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-152">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class to use for sending combined entropy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86a4a-153">Utilice este constructor para enviar entropía combinada.</span><span class="sxs-lookup"><span data-stu-id="86a4a-153">Use this constructor to send combined entropy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86a4a-154">
            <paramref name="keySizeInBits" /> es menor o igual que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-154">
              <paramref name="keySizeInBits" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86a4a-155">
            <paramref name="sourceEntropy" /> es <see langword="null" /> o es una matriz vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-155">
              <paramref name="sourceEntropy" /> is <see langword="null" /> or an empty array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyTo">
      <MemberSignature Language="C#" Value="public override void ApplyTo (System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyTo(class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ApplyTo (response As RequestSecurityTokenResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyTo(System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ response);" />
      <MemberSignature Language="F#" Value="override this.ApplyTo : System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse -&gt; unit" Usage="symmetricProofDescriptor.ApplyTo response" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />
      </Parameters>
      <Docs>
        <param name="response">
          <span data-ttu-id="86a4a-156">RSTR al que se va a aplicar el descriptor de prueba.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-156">The RSTR to which to apply the proof descriptor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86a4a-157">Modifica el RSTR especificado en función de los valores de este descriptor de pruebas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-157">Modifies the specified RSTR based on the settings in this proof descriptor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86a4a-158">Establece los artefactos adecuados, como el token de prueba solicitado, dentro de RSTR según lo que está dentro de la instancia del descriptor de prueba.</span><span class="sxs-lookup"><span data-stu-id="86a4a-158">Sets the appropriate artifacts, such as the requested proof token, inside the RSTR based on what is inside the proof descriptor instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86a4a-159">El valor de <paramref name="response" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-159">
              <paramref name="response" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyBytes">
      <MemberSignature Language="C#" Value="public byte[] GetKeyBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetKeyBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKeyBytes () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetKeyBytes();" />
      <MemberSignature Language="F#" Value="member this.GetKeyBytes : unit -&gt; byte[]" Usage="symmetricProofDescriptor.GetKeyBytes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86a4a-160">Obtiene el material de la clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-160">Gets the key material.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86a4a-161">Matriz de bytes que contiene el material de clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-161">A byte array that contains the key material.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceEntropy">
      <MemberSignature Language="C#" Value="protected byte[] GetSourceEntropy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetSourceEntropy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSourceEntropy () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Byte&gt; ^ GetSourceEntropy();" />
      <MemberSignature Language="F#" Value="member this.GetSourceEntropy : unit -&gt; byte[]" Usage="symmetricProofDescriptor.GetSourceEntropy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86a4a-162">Obtiene la entropía de origen en bytes sin formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-162">Gets the source entropy in plain bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86a4a-163">Matriz de bytes que contiene la entropía de origen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-163">A byte array that contains the source entropy.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetEntropy">
      <MemberSignature Language="C#" Value="protected byte[] GetTargetEntropy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetTargetEntropy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTargetEntropy () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Byte&gt; ^ GetTargetEntropy();" />
      <MemberSignature Language="F#" Value="member this.GetTargetEntropy : unit -&gt; byte[]" Usage="symmetricProofDescriptor.GetTargetEntropy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86a4a-164">Obtiene la entropía de destino en bytes sin formato</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-164">Gets the target entropy in plain bytes</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86a4a-165">Matriz de bytes que contiene la entropía de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-165">A byte array that contains the target entropy.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyIdentifier">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ KeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyIdentifier : System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86a4a-166">Obtiene el identificador de clave que se puede usar en el token emitido para definir la clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-166">Gets the key identifier that can be used inside the issued token to define the key.</span>
          </span>
          <span data-ttu-id="86a4a-167">Suele ser el secreto binario o la clave cifrada;</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-167">It is usually the binary secret or the encrypted key;</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86a4a-168">Identificador de clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-168">The key identifier.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestorEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.EncryptingCredentials RequestorEncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials RequestorEncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RequestorEncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::EncryptingCredentials ^ RequestorEncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestorEncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials" Usage="System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86a4a-169">Obtiene las credenciales de cifrado del solicitante, que se pueden usar para cifrar el token de prueba solicitado o la entropía en la respuesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-169">Gets the requestor's encrypting credentials, which may be used to encrypt the requested proof token or the entropy in the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86a4a-170">Credenciales de cifrado del solicitante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-170">The requestor's encrypting credentials.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.EncryptingCredentials TargetEncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials TargetEncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property TargetEncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::EncryptingCredentials ^ TargetEncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetEncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials" Usage="System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86a4a-171">Obtiene las credenciales de cifrado del usuario de confianza, que se pueden usar para cifrar el token de seguridad solicitado en la respuesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-171">Gets the relying party encrypting credentials, which may be used to encrypt the requested security token in the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86a4a-172">Credenciales de cifrado del usuario de confianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a4a-172">The relying party encrypting credentials.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="AttributedModelServices" FullName="System.ComponentModel.Composition.AttributedModelServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="afeeef0b48118722ce522e724c51c6e0120d904b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39868958" /></Metadata><TypeSignature Language="C#" Value="public static class AttributedModelServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AttributedModelServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.AttributedModelServices" />
  <TypeSignature Language="VB.NET" Value="Public Module AttributedModelServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributedModelServices abstract sealed" />
  <TypeSignature Language="F#" Value="type AttributedModelServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="26f86-101">Contiene métodos auxiliares para usar el modelo de programación con atributos MEF con composición.</span><span class="sxs-lookup"><span data-stu-id="26f86-101">Contains helper methods for using the MEF attributed programming model with composition.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddExportedValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="26f86-102">Crea un elemento a partir de un valor especificado y lo agrega a un lote de composición.</span><span class="sxs-lookup"><span data-stu-id="26f86-102">Creates a part from a specified value and adds it to a composition batch.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionBatch batch, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddExportedValue(Of T) (batch As CompositionBatch, exportedValue As T) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ AddExportedValue(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch, T exportedValue);" />
      <MemberSignature Language="F#" Value="static member AddExportedValue : System.ComponentModel.Composition.Hosting.CompositionBatch * 'T -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.AddExportedValue (batch, exportedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" RefType="this" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="26f86-103">Tipo del nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="26f86-103">The type of the new part.</span></span></typeparam>
        <param name="batch"><span data-ttu-id="26f86-104">Lote al que se va a agregar el objeto.</span><span class="sxs-lookup"><span data-stu-id="26f86-104">The batch to add to.</span></span></param>
        <param name="exportedValue"><span data-ttu-id="26f86-105">El valor que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="26f86-105">The value to add.</span></span></param>
        <summary><span data-ttu-id="26f86-106">Crea un elemento a partir del valor especificado y lo agrega al lote indicado.</span><span class="sxs-lookup"><span data-stu-id="26f86-106">Creates a part from the specified value and adds it to the specified batch.</span></span></summary>
        <returns><span data-ttu-id="26f86-107">Nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="26f86-107">The new part.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, string contractName, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionBatch batch, string contractName, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddExportedValue(Of T) (batch As CompositionBatch, contractName As String, exportedValue As T) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ AddExportedValue(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch, System::String ^ contractName, T exportedValue);" />
      <MemberSignature Language="F#" Value="static member AddExportedValue : System.ComponentModel.Composition.Hosting.CompositionBatch * string * 'T -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.AddExportedValue (batch, contractName, exportedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="26f86-108">Tipo del nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="26f86-108">The type of the new part.</span></span></typeparam>
        <param name="batch"><span data-ttu-id="26f86-109">Lote al que se va a agregar el objeto.</span><span class="sxs-lookup"><span data-stu-id="26f86-109">The batch to add to.</span></span></param>
        <param name="contractName"><span data-ttu-id="26f86-110">Nombre del contrato de la exportación.</span><span class="sxs-lookup"><span data-stu-id="26f86-110">The contract name of the export.</span></span></param>
        <param name="exportedValue"><span data-ttu-id="26f86-111">El valor que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="26f86-111">The value to add.</span></span></param>
        <summary><span data-ttu-id="26f86-112">Crea un elemento a partir del valor especificado y lo agrega al lote indicado con el nombre de contrato especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-112">Creates a part from the specified value and adds it to the specified batch with the specified contract name.</span></span></summary>
        <returns><span data-ttu-id="26f86-113">Nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="26f86-113">The new part.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart AddPart (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart AddPart(class System.ComponentModel.Composition.Hosting.CompositionBatch batch, object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddPart (batch As CompositionBatch, attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ AddPart(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch, System::Object ^ attributedPart);" />
      <MemberSignature Language="F#" Value="static member AddPart : System.ComponentModel.Composition.Hosting.CompositionBatch * obj -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.AddPart (batch, attributedPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" RefType="this" />
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="batch"><span data-ttu-id="26f86-114">Lote al que se va a agregar el objeto.</span><span class="sxs-lookup"><span data-stu-id="26f86-114">The batch to add to.</span></span></param>
        <param name="attributedPart"><span data-ttu-id="26f86-115">Objeto que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="26f86-115">The object to add.</span></span></param>
        <summary><span data-ttu-id="26f86-116">Crea un elemento que se puede crear a partir del objeto con atributos especificado y lo agrega al lote de composición indicado.</span><span class="sxs-lookup"><span data-stu-id="26f86-116">Creates a composable part from the specified attributed object, and adds it to the specified composition batch.</span></span></summary>
        <returns><span data-ttu-id="26f86-117">Nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="26f86-117">The new part.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComposeExportedValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="26f86-118">Crea un elemento a partir de un objeto especificado y lo compone con un contenedor de composición especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-118">Creates a part from a specified object and composes it with a specified composition container.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComposeExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ComposeExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionContainer container, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComposeExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionContainer container, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ComposeExportedValue(Of T) (container As CompositionContainer, exportedValue As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ComposeExportedValue(System::ComponentModel::Composition::Hosting::CompositionContainer ^ container, T exportedValue);" />
      <MemberSignature Language="F#" Value="static member ComposeExportedValue : System.ComponentModel.Composition.Hosting.CompositionContainer * 'T -&gt; unit" Usage="System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue (container, exportedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.Composition.Hosting.CompositionContainer" RefType="this" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="26f86-119">Tipo del nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="26f86-119">The type of the new part.</span></span></typeparam>
        <param name="container"><span data-ttu-id="26f86-120">Contenedor de composición en el que se va a realizar la composición.</span><span class="sxs-lookup"><span data-stu-id="26f86-120">The composition container to perform composition in.</span></span></param>
        <param name="exportedValue"><span data-ttu-id="26f86-121">Valor que se va componer.</span><span class="sxs-lookup"><span data-stu-id="26f86-121">The value to compose.</span></span></param>
        <summary><span data-ttu-id="26f86-122">Crea un elemento a partir del valor especificado y lo compone en el contenedor de composición especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-122">Creates a part from the specified value and composes it in the specified composition container.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ComposeExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionContainer container, string contractName, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComposeExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionContainer container, string contractName, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ComposeExportedValue(Of T) (container As CompositionContainer, contractName As String, exportedValue As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ComposeExportedValue(System::ComponentModel::Composition::Hosting::CompositionContainer ^ container, System::String ^ contractName, T exportedValue);" />
      <MemberSignature Language="F#" Value="static member ComposeExportedValue : System.ComponentModel.Composition.Hosting.CompositionContainer * string * 'T -&gt; unit" Usage="System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue (container, contractName, exportedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.Composition.Hosting.CompositionContainer" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="26f86-123">Tipo del nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="26f86-123">The type of the new part.</span></span></typeparam>
        <param name="container"><span data-ttu-id="26f86-124">Contenedor de composición en el que se va a realizar la composición.</span><span class="sxs-lookup"><span data-stu-id="26f86-124">The composition container to perform composition in.</span></span></param>
        <param name="contractName"><span data-ttu-id="26f86-125">Nombre de contrato bajo el que se va a exportar el elemento.</span><span class="sxs-lookup"><span data-stu-id="26f86-125">The contract name to export the part under.</span></span></param>
        <param name="exportedValue"><span data-ttu-id="26f86-126">Valor que se va componer.</span><span class="sxs-lookup"><span data-stu-id="26f86-126">The value to compose.</span></span></param>
        <summary><span data-ttu-id="26f86-127">Crea un elemento a partir del objeto especificado bajo el nombre de contrato indicado y lo compone en el contenedor de composición especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-127">Creates a part from the specified object under the specified contract name and composes it in the specified composition container.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeParts">
      <MemberSignature Language="C#" Value="public static void ComposeParts (this System.ComponentModel.Composition.Hosting.CompositionContainer container, params object[] attributedParts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComposeParts(class System.ComponentModel.Composition.Hosting.CompositionContainer container, object[] attributedParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ComposeParts (container As CompositionContainer, ParamArray attributedParts As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ComposeParts(System::ComponentModel::Composition::Hosting::CompositionContainer ^ container, ... cli::array &lt;System::Object ^&gt; ^ attributedParts);" />
      <MemberSignature Language="F#" Value="static member ComposeParts : System.ComponentModel.Composition.Hosting.CompositionContainer * obj[] -&gt; unit" Usage="System.ComponentModel.Composition.AttributedModelServices.ComposeParts (container, attributedParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.Composition.Hosting.CompositionContainer" RefType="this" />
        <Parameter Name="attributedParts" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="26f86-128">Contenedor de composición en el que se va a realizar la composición.</span><span class="sxs-lookup"><span data-stu-id="26f86-128">The composition container to perform composition in.</span></span></param>
        <param name="attributedParts"><span data-ttu-id="26f86-129">Matriz de objetos con atributos que se van a componer.</span><span class="sxs-lookup"><span data-stu-id="26f86-129">An array of attributed objects to compose.</span></span></param>
        <summary><span data-ttu-id="26f86-130">Crea elementos a partir de una matriz de objetos con atributos y los compone en el contenedor de composición especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-130">Creates composable parts from an array of attributed objects and composes them in the specified composition container.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePart">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="26f86-131">Crea un elemento que admite composición.</span><span class="sxs-lookup"><span data-stu-id="26f86-131">Creates a composable part.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart CreatePart(object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ CreatePart(System::Object ^ attributedPart);" />
      <MemberSignature Language="F#" Value="static member CreatePart : obj -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.CreatePart attributedPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="attributedPart"><span data-ttu-id="26f86-132">Objeto con atributos.</span><span class="sxs-lookup"><span data-stu-id="26f86-132">The attributed object.</span></span></param>
        <summary><span data-ttu-id="26f86-133">Crea un elemento que se puede crear a partir del objeto con atributos especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-133">Creates a composable part from the specified attributed object.</span></span></summary>
        <returns><span data-ttu-id="26f86-134">El elemento creado.</span><span class="sxs-lookup"><span data-stu-id="26f86-134">The created part.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart CreatePart(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (partDefinition As ComposablePartDefinition, attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ CreatePart(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ partDefinition, System::Object ^ attributedPart);" />
      <MemberSignature Language="F#" Value="static member CreatePart : System.ComponentModel.Composition.Primitives.ComposablePartDefinition * obj -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.CreatePart (partDefinition, attributedPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partDefinition" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="partDefinition"><span data-ttu-id="26f86-135">Definición de la nueva parte.</span><span class="sxs-lookup"><span data-stu-id="26f86-135">The definition of the new part.</span></span></param>
        <param name="attributedPart"><span data-ttu-id="26f86-136">Objeto con atributos.</span><span class="sxs-lookup"><span data-stu-id="26f86-136">The attributed object.</span></span></param>
        <summary><span data-ttu-id="26f86-137">Crea un elemento que se puede crear a partir del objeto con atributos especificado, usando la definición de la parte especificada.</span><span class="sxs-lookup"><span data-stu-id="26f86-137">Creates a composable part from the specified attributed object, using the specified part definition.</span></span></summary>
        <returns><span data-ttu-id="26f86-138">El elemento creado.</span><span class="sxs-lookup"><span data-stu-id="26f86-138">The created part.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart CreatePart(object attributedPart, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ CreatePart(System::Object ^ attributedPart, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="static member CreatePart : obj * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.CreatePart (attributedPart, reflectionContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributedPart" Type="System.Object" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="attributedPart"><span data-ttu-id="26f86-139">Objeto con atributos.</span><span class="sxs-lookup"><span data-stu-id="26f86-139">The attributed object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="26f86-140">El contexto de reflexión para el elemento.</span><span class="sxs-lookup"><span data-stu-id="26f86-140">The reflection context for the part.</span></span></param>
        <summary><span data-ttu-id="26f86-141">Crea un elemento que se puede crear a partir del objeto con atributos especificado, usando el contexto de reflexión especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-141">Creates a composable part from the specified attributed object, using the specified reflection context.</span></span></summary>
        <returns><span data-ttu-id="26f86-142">El elemento creado.</span><span class="sxs-lookup"><span data-stu-id="26f86-142">The created part.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26f86-143"><paramref name="reflectionContext" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="26f86-143"><paramref name="reflectionContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePartDefinition">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="26f86-144">Crea una definición de elemento con el tipo y el origen especificados.</span><span class="sxs-lookup"><span data-stu-id="26f86-144">Creates a part definition with the specified type and origin.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePartDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition(class System.Type type, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ CreatePartDefinition(Type ^ type, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberSignature Language="F#" Value="static member CreatePartDefinition : Type * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Primitives.ComposablePartDefinition" Usage="System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition (type, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="26f86-145">Tipo de la definición.</span><span class="sxs-lookup"><span data-stu-id="26f86-145">The type of the definition.</span></span></param>
        <param name="origin"><span data-ttu-id="26f86-146">Origen de la definición.</span><span class="sxs-lookup"><span data-stu-id="26f86-146">The origin of the definition.</span></span></param>
        <summary><span data-ttu-id="26f86-147">Crea una definición de elemento con el tipo y el origen especificados.</span><span class="sxs-lookup"><span data-stu-id="26f86-147">Creates a part definition with the specified type and origin.</span></span></summary>
        <returns><span data-ttu-id="26f86-148">Definición del nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="26f86-148">The new part definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePartDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin, bool ensureIsDiscoverable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition(class System.Type type, class System.ComponentModel.Composition.Primitives.ICompositionElement origin, bool ensureIsDiscoverable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ CreatePartDefinition(Type ^ type, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin, bool ensureIsDiscoverable);" />
      <MemberSignature Language="F#" Value="static member CreatePartDefinition : Type * System.ComponentModel.Composition.Primitives.ICompositionElement * bool -&gt; System.ComponentModel.Composition.Primitives.ComposablePartDefinition" Usage="System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition (type, origin, ensureIsDiscoverable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
        <Parameter Name="ensureIsDiscoverable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="26f86-149">Tipo de la definición.</span><span class="sxs-lookup"><span data-stu-id="26f86-149">The type of the definition.</span></span></param>
        <param name="origin"><span data-ttu-id="26f86-150">Origen de la definición.</span><span class="sxs-lookup"><span data-stu-id="26f86-150">The origin of the definition.</span></span></param>
        <param name="ensureIsDiscoverable"><span data-ttu-id="26f86-151">Valor que indica si la nueva definición debe ser reconocible o no.</span><span class="sxs-lookup"><span data-stu-id="26f86-151">A value indicating whether or not the new definition should be discoverable.</span></span></param>
        <summary><span data-ttu-id="26f86-152">Crea una definición de elemento con el tipo y el origen especificados.</span><span class="sxs-lookup"><span data-stu-id="26f86-152">Creates a part definition with the specified type and origin.</span></span></summary>
        <returns><span data-ttu-id="26f86-153">Definición del nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="26f86-153">The new part definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exports">
      <MemberSignature Language="C#" Value="public static bool Exports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exports (part As ComposablePartDefinition, contractType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Exports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="static member Exports : System.ComponentModel.Composition.Primitives.ComposablePartDefinition * Type -&gt; bool" Usage="System.ComponentModel.Composition.AttributedModelServices.Exports (part, contractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="26f86-154">Elemento que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="26f86-154">The part to search.</span></span></param>
        <param name="contractType"><span data-ttu-id="26f86-155">El tipo de contrato.</span><span class="sxs-lookup"><span data-stu-id="26f86-155">The contract type.</span></span></param>
        <summary><span data-ttu-id="26f86-156">Devuelve un valor que indica si la parte especificada contiene una exportación que coincide con el tipo de contrato especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-156">Returns a value that indicates whether the specified part contains an export that matches the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="26f86-157"><see langword="true" /> si <paramref name="part" /> contiene una definición de exportación que coincide con <paramref name="contractType" />; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="26f86-157"><see langword="true" /> if <paramref name="part" /> contains an export definition that matches <paramref name="contractType" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Exports&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exports&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exports(Of T) (part As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Exports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part);" />
      <MemberSignature Language="F#" Value="static member Exports : System.ComponentModel.Composition.Primitives.ComposablePartDefinition -&gt; bool" Usage="System.ComponentModel.Composition.AttributedModelServices.Exports part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="26f86-158">El tipo de contrato.</span><span class="sxs-lookup"><span data-stu-id="26f86-158">The contract type.</span></span></typeparam>
        <param name="part"><span data-ttu-id="26f86-159">Elemento que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="26f86-159">The part to search.</span></span></param>
        <summary><span data-ttu-id="26f86-160">Devuelve un valor que indica si la parte especificada contiene una exportación que coincide con el tipo de contrato especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-160">Returns a value that indicates whether the specified part contains an export that matches the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="26f86-161"><see langword="true" /> si <paramref name="part" /> contiene una definición de exportación de tipo <paramref name="T" />; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="26f86-161"><see langword="true" /> if <paramref name="part" /> contains an export definition of type <paramref name="T" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContractName">
      <MemberSignature Language="C#" Value="public static string GetContractName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetContractName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetContractName(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetContractName : Type -&gt; string" Usage="System.ComponentModel.Composition.AttributedModelServices.GetContractName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="26f86-162">Tipo que se va a usar.</span><span class="sxs-lookup"><span data-stu-id="26f86-162">The type to use.</span></span></param>
        <summary><span data-ttu-id="26f86-163">Obtiene un nombre de contrato canónico para el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-163">Gets a canonical contract name for the specified type.</span></span></summary>
        <returns><span data-ttu-id="26f86-164">Nombre de contrato creado a partir del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-164">A contract name created from the specified type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataView&lt;TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public static TMetadataView GetMetadataView&lt;TMetadataView&gt; (System.Collections.Generic.IDictionary&lt;string,object&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TMetadataView GetMetadataView&lt;TMetadataView&gt;(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataView(Of TMetadataView) (metadata As IDictionary(Of String, Object)) As TMetadataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TMetadataView&gt;&#xA; static TMetadataView GetMetadataView(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="static member GetMetadataView : System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; 'MetadataView" Usage="System.ComponentModel.Composition.AttributedModelServices.GetMetadataView metadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TMetadataView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TMetadataView"><span data-ttu-id="26f86-165">Tipo del objeto de vista de metadatos que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="26f86-165">The type of the metadata view object to get.</span></span></typeparam>
        <param name="metadata"><span data-ttu-id="26f86-166">Colección de metadatos separados.</span><span class="sxs-lookup"><span data-stu-id="26f86-166">A collection of loose metadata.</span></span></param>
        <summary><span data-ttu-id="26f86-167">Obtiene un objeto de vista de metadatos a partir de un diccionario de metadatos separados.</span><span class="sxs-lookup"><span data-stu-id="26f86-167">Gets a metadata view object from a dictionary of loose metadata.</span></span></summary>
        <returns><span data-ttu-id="26f86-168">Vista de metadatos que contiene los metadatos especificados.</span><span class="sxs-lookup"><span data-stu-id="26f86-168">A metadata view containing the specified metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeIdentity">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="26f86-169">Obtiene el identificador único de un método o un tipo.</span><span class="sxs-lookup"><span data-stu-id="26f86-169">Gets the unique identifier for a method or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeIdentity">
      <MemberSignature Language="C#" Value="public static string GetTypeIdentity (System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeIdentity(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeIdentity (method As MethodInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeIdentity(System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member GetTypeIdentity : System.Reflection.MethodInfo -&gt; string" Usage="System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="26f86-170">Método que se va a examinar.</span><span class="sxs-lookup"><span data-stu-id="26f86-170">The method to examine.</span></span></param>
        <summary><span data-ttu-id="26f86-171">Obtiene el identificador único del método especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-171">Gets the unique identifier for the specified method.</span></span></summary>
        <returns><span data-ttu-id="26f86-172">Identificador único del método.</span><span class="sxs-lookup"><span data-stu-id="26f86-172">The unique identifier for the method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeIdentity">
      <MemberSignature Language="C#" Value="public static string GetTypeIdentity (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeIdentity(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeIdentity(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetTypeIdentity : Type -&gt; string" Usage="System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="26f86-173">Tipo que se va a examinar.</span><span class="sxs-lookup"><span data-stu-id="26f86-173">The type to examine.</span></span></param>
        <summary><span data-ttu-id="26f86-174">Obtiene el identificador único del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-174">Gets the unique identifier for the specified type.</span></span></summary>
        <returns><span data-ttu-id="26f86-175">Identificador único del tipo.</span><span class="sxs-lookup"><span data-stu-id="26f86-175">The unique identifier for the type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Imports">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="26f86-176">Devuelve un valor que indica si una parte especificada contiene una importación que coincide con un contrato especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-176">Returns a value that indicates whether a specified part contains an inport that matches a specified contract.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Imports (part As ComposablePartDefinition, contractType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="static member Imports : System.ComponentModel.Composition.Primitives.ComposablePartDefinition * Type -&gt; bool" Usage="System.ComponentModel.Composition.AttributedModelServices.Imports (part, contractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="26f86-177">Elemento que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="26f86-177">The part to search.</span></span></param>
        <param name="contractType"><span data-ttu-id="26f86-178">El tipo de contrato.</span><span class="sxs-lookup"><span data-stu-id="26f86-178">The contract type.</span></span></param>
        <summary><span data-ttu-id="26f86-179">Devuelve un valor que indica si la parte especificada contiene una importación que coincide con el tipo de contrato especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-179">Returns a value that indicates whether the specified part contains an import that matches the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="26f86-180"><see langword="true" /> si <paramref name="part" /> contiene una definición de importación que coincide con <paramref name="contractType" />; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="26f86-180"><see langword="true" /> if <paramref name="part" /> contains an import definition that matches <paramref name="contractType" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, class System.Type contractType, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, Type ^ contractType, System::ComponentModel::Composition::Primitives::ImportCardinality importCardinality);" />
      <MemberSignature Language="F#" Value="static member Imports : System.ComponentModel.Composition.Primitives.ComposablePartDefinition * Type * System.ComponentModel.Composition.Primitives.ImportCardinality -&gt; bool" Usage="System.ComponentModel.Composition.AttributedModelServices.Imports (part, contractType, importCardinality)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="importCardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="26f86-181">Elemento que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="26f86-181">The part to search.</span></span></param>
        <param name="contractType"><span data-ttu-id="26f86-182">El tipo de contrato.</span><span class="sxs-lookup"><span data-stu-id="26f86-182">The contract type.</span></span></param>
        <param name="importCardinality"><span data-ttu-id="26f86-183">Cardinalidad de la importación.</span><span class="sxs-lookup"><span data-stu-id="26f86-183">The import cardinality.</span></span></param>
        <summary><span data-ttu-id="26f86-184">Devuelve un valor que indica si la parte especificada contiene una importación que coincide con el tipo de contrato y la cardinalidad de importación especificados.</span><span class="sxs-lookup"><span data-stu-id="26f86-184">Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.</span></span></summary>
        <returns><span data-ttu-id="26f86-185"><see langword="true" /> si <paramref name="part" /> contiene una definición de importación que coincide con <paramref name="contractType" /> y <paramref name="importCardinality" />; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="26f86-185"><see langword="true" /> if <paramref name="part" /> contains an import definition that matches <paramref name="contractType" /> and <paramref name="importCardinality" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Imports&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Imports(Of T) (part As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part);" />
      <MemberSignature Language="F#" Value="static member Imports : System.ComponentModel.Composition.Primitives.ComposablePartDefinition -&gt; bool" Usage="System.ComponentModel.Composition.AttributedModelServices.Imports part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="26f86-186">El tipo de contrato.</span><span class="sxs-lookup"><span data-stu-id="26f86-186">The contract type.</span></span></typeparam>
        <param name="part"><span data-ttu-id="26f86-187">Elemento que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="26f86-187">The part to search.</span></span></param>
        <summary><span data-ttu-id="26f86-188">Devuelve un valor que indica si la parte especificada contiene una importación que coincide con el tipo de contrato especificado.</span><span class="sxs-lookup"><span data-stu-id="26f86-188">Returns a value that indicates whether the specified part contains an import that matches the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="26f86-189"><see langword="true" /> si <paramref name="part" /> contiene una definición de importación de tipo <paramref name="T" />; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="26f86-189"><see langword="true" /> if <paramref name="part" /> contains an import definition of type <paramref name="T" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Imports&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, System::ComponentModel::Composition::Primitives::ImportCardinality importCardinality);" />
      <MemberSignature Language="F#" Value="static member Imports : System.ComponentModel.Composition.Primitives.ComposablePartDefinition * System.ComponentModel.Composition.Primitives.ImportCardinality -&gt; bool" Usage="System.ComponentModel.Composition.AttributedModelServices.Imports (part, importCardinality)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="importCardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="26f86-190">El tipo de contrato.</span><span class="sxs-lookup"><span data-stu-id="26f86-190">The contract type.</span></span></typeparam>
        <param name="part"><span data-ttu-id="26f86-191">Elemento que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="26f86-191">The part to search.</span></span></param>
        <param name="importCardinality"><span data-ttu-id="26f86-192">Cardinalidad de la importación.</span><span class="sxs-lookup"><span data-stu-id="26f86-192">The import cardinality.</span></span></param>
        <summary><span data-ttu-id="26f86-193">Devuelve un valor que indica si la parte especificada contiene una importación que coincide con el tipo de contrato y la cardinalidad de importación especificados.</span><span class="sxs-lookup"><span data-stu-id="26f86-193">Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.</span></span></summary>
        <returns><span data-ttu-id="26f86-194"><see langword="true" /> si <paramref name="part" /> contiene una definición de importación de tipo <paramref name="T" /> con la cardinalidad de importación especificada; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="26f86-194"><see langword="true" /> if <paramref name="part" /> contains an import definition of type <paramref name="T" /> that has the specified import cardinality; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SatisfyImportsOnce">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="26f86-195">Constituye una parte especificada.</span><span class="sxs-lookup"><span data-stu-id="26f86-195">Composes a specified part.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce(class System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SatisfyImportsOnce (compositionService As ICompositionService, attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ SatisfyImportsOnce(System::ComponentModel::Composition::ICompositionService ^ compositionService, System::Object ^ attributedPart);" />
      <MemberSignature Language="F#" Value="static member SatisfyImportsOnce : System.ComponentModel.Composition.ICompositionService * obj -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce (compositionService, attributedPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositionService" Type="System.ComponentModel.Composition.ICompositionService" RefType="this" />
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="compositionService"><span data-ttu-id="26f86-196">Servicio de composición que se va a usar.</span><span class="sxs-lookup"><span data-stu-id="26f86-196">The composition service to use.</span></span></param>
        <param name="attributedPart"><span data-ttu-id="26f86-197">Parte de la que se va a realizar la composición.</span><span class="sxs-lookup"><span data-stu-id="26f86-197">The part to compose.</span></span></param>
        <summary><span data-ttu-id="26f86-198">Crea el elemento especificado usando el servicio de composición indicado, con la recomposición deshabilitada.</span><span class="sxs-lookup"><span data-stu-id="26f86-198">Composes the specified part by using the specified composition service, with recomposition disabled.</span></span></summary>
        <returns><span data-ttu-id="26f86-199">Elemento creado.</span><span class="sxs-lookup"><span data-stu-id="26f86-199">The composed part.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26f86-200">A diferencia de composición normal, las partes compuestas con este método no se garantiza que siguen siendo válidos si el catálogo subyacente`compositionService` cambios.</span><span class="sxs-lookup"><span data-stu-id="26f86-200">Unlike ordinary composition, parts composed with this method are not guaranteed to remain valid if the catalog behind`compositionService` changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce(class System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ SatisfyImportsOnce(System::ComponentModel::Composition::ICompositionService ^ compositionService, System::Object ^ attributedPart, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="static member SatisfyImportsOnce : System.ComponentModel.Composition.ICompositionService * obj * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce (compositionService, attributedPart, reflectionContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositionService" Type="System.ComponentModel.Composition.ICompositionService" RefType="this" />
        <Parameter Name="attributedPart" Type="System.Object" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="compositionService"><span data-ttu-id="26f86-201">Servicio de composición que se va a usar.</span><span class="sxs-lookup"><span data-stu-id="26f86-201">The composition service to use.</span></span></param>
        <param name="attributedPart"><span data-ttu-id="26f86-202">Parte de la que se va a realizar la composición.</span><span class="sxs-lookup"><span data-stu-id="26f86-202">The part to compose.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="26f86-203">El contexto de reflexión para el elemento.</span><span class="sxs-lookup"><span data-stu-id="26f86-203">The reflection context for the part.</span></span></param>
        <summary><span data-ttu-id="26f86-204">Constituye la parte especificada mediante el servicio especificado de composición, con la recomposición deshabilitada y utilizando el contexto especificado de reflexión.</span><span class="sxs-lookup"><span data-stu-id="26f86-204">Composes the specified part by using the specified composition service, with recomposition disabled and using the specified reflection context.</span></span></summary>
        <returns><span data-ttu-id="26f86-205">Elemento creado.</span><span class="sxs-lookup"><span data-stu-id="26f86-205">The composed part.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26f86-206"><paramref name="reflectionContext" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="26f86-206"><paramref name="reflectionContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="Point" FullName="System.Windows.Point">
  <Metadata><Meta Name="ms.openlocfilehash" Value="656bf6a484a46164e7da6c818efeae44503e9c85" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52359321" /></Metadata><TypeSignature Language="C#" Value="public struct Point : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Point extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Point" />
  <TypeSignature Language="VB.NET" Value="Public Structure Point&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Point : IFormattable" />
  <TypeSignature Language="F#" Value="type Point = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PointConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.PointValueSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="94023-101">Representa un par de coordenadas x e y en un espacio bidimensional.</span><span class="sxs-lookup"><span data-stu-id="94023-101">Represents an x- and y-coordinate pair in two-dimensional space.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94023-102">En XAML, el delimitador entre los <xref:System.Windows.Point.X%2A> y <xref:System.Windows.Point.Y%2A> valores de un <xref:System.Windows.Point> puede ser una coma o un espacio.</span><span class="sxs-lookup"><span data-stu-id="94023-102">In XAML, the delimiter between the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a <xref:System.Windows.Point> can be either a comma or a space.</span></span>  
  
 <span data-ttu-id="94023-103">Algunas referencias culturales podrían utilizar el carácter de coma como delimitador decimal en lugar del punto.</span><span class="sxs-lookup"><span data-stu-id="94023-103">Some cultures might use the comma character as the decimal delimiter instead of the period character.</span></span> <span data-ttu-id="94023-104">XAML de procesamiento para la referencia cultural de todos el valor predeterminado es en-US, en la mayoría de las implementaciones de procesadores XAML y espera que el punto como delimitador decimal.</span><span class="sxs-lookup"><span data-stu-id="94023-104">XAML processing for invariant culture defaults to en-US in most XAML processor implementations, and expects the period to be the decimal delimiter.</span></span> <span data-ttu-id="94023-105">Debe evitar utilizando la coma como delimitador decimal si especifica un <xref:System.Windows.Point> en XAML, ya que entren en conflicto con la conversión de tipos de cadena de un <xref:System.Windows.Point> atributo valor en el <xref:System.Windows.Point.X%2A> y <xref:System.Windows.Point.Y%2A> componentes.</span><span class="sxs-lookup"><span data-stu-id="94023-105">You should avoid using the comma character as the decimal delimiter if specifying a <xref:System.Windows.Point> in XAML, because that will clash with the string type conversion of a <xref:System.Windows.Point> attribute value into the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> components.</span></span>  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="94023-106">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="94023-106">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y"/>  
-or-  
<object property="x y"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="94023-107">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="94023-107">XAML Values</span></span>  
 <span data-ttu-id="94023-108">*x*</span><span class="sxs-lookup"><span data-stu-id="94023-108">*x*</span></span>  
 <span data-ttu-id="94023-109">La coordenada x de esta estructura <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="94023-109">The x-coordinate of this <xref:System.Windows.Point>.</span></span>  
  
 <span data-ttu-id="94023-110">*y*</span><span class="sxs-lookup"><span data-stu-id="94023-110">*y*</span></span>  
 <span data-ttu-id="94023-111">La coordenada y de esta estructura <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="94023-111">The y-coordinate of this <xref:System.Windows.Point>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94023-112">El ejemplo siguiente muestra cómo comprobar si dos <xref:System.Windows.Point> estructuras no son iguales.</span><span class="sxs-lookup"><span data-stu-id="94023-112">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="94023-113">También muestra cómo asignar valores a un <xref:System.Windows.Point> estructurar cuando se declara la estructura y después de la estructura se ha declarado.</span><span class="sxs-lookup"><span data-stu-id="94023-113">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point(double x, double y);" />
      <MemberSignature Language="F#" Value="new System.Windows.Point : double * double -&gt; System.Windows.Point" Usage="new System.Windows.Point (x, y)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="94023-114">Coordenada X de la nueva estructura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-114">The x-coordinate of the new <see cref="T:System.Windows.Point" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="94023-115">Coordenada Y de la nueva estructura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-115">The y-coordinate of the new <see cref="T:System.Windows.Point" /> structure.</span></span></param>
        <summary><span data-ttu-id="94023-116">Crea una nueva estructura <see cref="T:System.Windows.Point" /> que contiene las coordenadas especificadas.</span><span class="sxs-lookup"><span data-stu-id="94023-116">Creates a new <see cref="T:System.Windows.Point" /> structure that contains the specified coordinates.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Add (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Add(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Add(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member Add : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="System.Windows.Point.Add (point, vector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="94023-117">Estructura <see cref="T:System.Windows.Point" /> que se va a sumar.</span><span class="sxs-lookup"><span data-stu-id="94023-117">The <see cref="T:System.Windows.Point" /> structure to add.</span></span></param>
        <param name="vector"><span data-ttu-id="94023-118">Estructura <see cref="T:System.Windows.Vector" /> que se va a sumar.</span><span class="sxs-lookup"><span data-stu-id="94023-118">The <see cref="T:System.Windows.Vector" /> structure to add.</span></span></param>
        <summary><span data-ttu-id="94023-119">Suma una estructura <see cref="T:System.Windows.Vector" /> a una estructura <see cref="T:System.Windows.Point" /> y devuelve el resultado como una estructura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-119">Adds a <see cref="T:System.Windows.Vector" /> to a <see cref="T:System.Windows.Point" /> and returns the result as a <see cref="T:System.Windows.Point" /> structure.</span></span></summary>
        <returns><span data-ttu-id="94023-120">Devuelve la suma de <paramref name="point" /> y <paramref name="vector" />.</span><span class="sxs-lookup"><span data-stu-id="94023-120">Returns the sum of <paramref name="point" /> and <paramref name="vector" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94023-121">Agregar un <xref:System.Windows.Point> estructura a un <xref:System.Windows.Point> estructura está prohibida.</span><span class="sxs-lookup"><span data-stu-id="94023-121">Adding a <xref:System.Windows.Point> structure to a <xref:System.Windows.Point> structure is prohibited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94023-122">Este ejemplo se agrega un <xref:System.Windows.Point> a un <xref:System.Windows.Vector> y devuelve el resultado como un <xref:System.Windows.Vector> estructura.</span><span class="sxs-lookup"><span data-stu-id="94023-122">This example adds a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> and returns the result as a <xref:System.Windows.Vector> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#AddPointAndVectorExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#addpointandvectorexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94023-123">Compara dos estructuras <see cref="T:System.Windows.Point" /> para determinar si son iguales.</span><span class="sxs-lookup"><span data-stu-id="94023-123">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="point.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="94023-124"><see cref="T:System.Object" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="94023-124">The <see cref="T:System.Object" /> to compare.</span></span></param>
        <summary><span data-ttu-id="94023-125">Determina si el <see cref="T:System.Object" /> especificado es una estructura <see cref="T:System.Windows.Point" /> y si contiene las mismas coordenadas que esta estructura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-125">Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.Point" /> and whether it contains the same coordinates as this <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="94023-126">Es <see langword="true" /> si <paramref name="o" /> es una estructura <see cref="T:System.Windows.Point" /> y contiene los mismos valores de <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> que esta estructura <see cref="T:System.Windows.Point" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="94023-126"><see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Point" /> and contains the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values as this <see cref="T:System.Windows.Point" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94023-127"><xref:System.Windows.Point> las coordenadas se describen mediante <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="94023-127"><xref:System.Windows.Point> coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="94023-128">Dado que el valor de un <xref:System.Double> puede perder precisión cuando se realizan operaciones con ellos, una comparación entre dos <xref:System.Windows.Point> podrían producir un error en los valores que son lógicamente iguales.</span><span class="sxs-lookup"><span data-stu-id="94023-128">Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94023-129">El ejemplo siguiente muestra cómo comprobar si dos <xref:System.Windows.Point> estructuras son iguales utilizando el nestatické <xref:System.Windows.Point.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="94023-129">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the non-static <xref:System.Windows.Point.Equals%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#NonStaticEqualsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#nonstaticequalsexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Point value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Point value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Point value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Point -&gt; bool" Usage="point.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="94023-130">Punto que se va a comparar con esta instancia.</span><span class="sxs-lookup"><span data-stu-id="94023-130">The point to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="94023-131">Compara dos estructuras <see cref="T:System.Windows.Point" /> para determinar si son iguales.</span><span class="sxs-lookup"><span data-stu-id="94023-131">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span></span></summary>
        <returns><span data-ttu-id="94023-132">Es <see langword="true" /> si ambas estructuras <see cref="T:System.Windows.Point" /> contienen los mismos valores de <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="94023-132"><see langword="true" /> if both <see cref="T:System.Windows.Point" /> structures contain the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94023-133"><xref:System.Windows.Point> las coordenadas se expresan mediante <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="94023-133"><xref:System.Windows.Point> coordinates are expressed using <xref:System.Double> values.</span></span> <span data-ttu-id="94023-134">Dado que el valor de un <xref:System.Double> puede perder precisión cuando funcione con una comparación entre dos <xref:System.Windows.Point> podrían producir un error en los valores que son lógicamente iguales.</span><span class="sxs-lookup"><span data-stu-id="94023-134">Because the value of a <xref:System.Double> can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="System.Windows.Point.Equals (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="94023-135">Primer punto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="94023-135">The first point to compare.</span></span></param>
        <param name="point2"><span data-ttu-id="94023-136">Segundo punto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="94023-136">The second point to compare.</span></span></param>
        <summary><span data-ttu-id="94023-137">Compara dos estructuras <see cref="T:System.Windows.Point" /> para determinar si son iguales.</span><span class="sxs-lookup"><span data-stu-id="94023-137">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span></span></summary>
        <returns><span data-ttu-id="94023-138">Es <see langword="true" /> si <paramref name="point1" /> y <paramref name="point2" /> contienen los mismos valores de <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="94023-138"><see langword="true" /> if <paramref name="point1" /> and <paramref name="point2" /> contain the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94023-139">Las coordenadas del punto se describen mediante <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="94023-139">Point coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="94023-140">Dado que el valor de un <xref:System.Double> puede perder precisión cuando se realizan operaciones con ellos, una comparación entre dos <xref:System.Windows.Point> podrían producir un error en los valores que son lógicamente iguales.</span><span class="sxs-lookup"><span data-stu-id="94023-140">Because the value of a <xref:System.Double> can lose precision when operated upon, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94023-141">El ejemplo siguiente muestra cómo comprobar si dos <xref:System.Windows.Point> estructuras son iguales utilizando estático <xref:System.Windows.Point.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="94023-141">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the static <xref:System.Windows.Point.Equals%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#StaticEqualsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#staticequalsexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="point.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94023-142">Devuelve el código hash de este objeto <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-142">Returns the hash code for this <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="94023-143">Código hash para esta estructura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-143">The hash code for this <see cref="T:System.Windows.Point" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94023-144">El ejemplo siguiente muestra cómo obtener el código hash de un <xref:System.Windows.Point> estructura.</span><span class="sxs-lookup"><span data-stu-id="94023-144">The following example shows how to get the hash code of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Multiply (System.Windows.Point point, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Multiply(valuetype System.Windows.Point point, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Multiply(System::Windows::Point point, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Windows.Point * System.Windows.Media.Matrix -&gt; System.Windows.Point" Usage="System.Windows.Point.Multiply (point, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="94023-145">El punto que se va a transformar.</span><span class="sxs-lookup"><span data-stu-id="94023-145">The point to transform.</span></span></param>
        <param name="matrix"><span data-ttu-id="94023-146">Matriz de transformación.</span><span class="sxs-lookup"><span data-stu-id="94023-146">The transformation matrix.</span></span></param>
        <summary><span data-ttu-id="94023-147">Transforma la estructura <see cref="T:System.Windows.Point" /> especificada por la estructura <see cref="T:System.Windows.Media.Matrix" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="94023-147">Transforms the specified <see cref="T:System.Windows.Point" /> structure by the specified <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="94023-148">Punto transformado.</span><span class="sxs-lookup"><span data-stu-id="94023-148">The transformed point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94023-149">El ejemplo siguiente muestra cómo multiplicar una <xref:System.Windows.Point> estructura por un <xref:System.Windows.Media.Matrix> estructura mediante la <xref:System.Windows.Point.Multiply%2A> método.</span><span class="sxs-lookup"><span data-stu-id="94023-149">The following example shows how to multiply a <xref:System.Windows.Point> structure by a <xref:System.Windows.Media.Matrix> structure using the <xref:System.Windows.Point.Multiply%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#MultiplyPointByMatrixExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#multiplypointbymatrixexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Offset : double * double -&gt; unit" Usage="point.Offset (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="94023-150">Magnitud según la que se va a desplazar</span><span class="sxs-lookup"><span data-stu-id="94023-150">The amount to offset the point's</span></span> 
 <span data-ttu-id="94023-151">la coordenada <see cref="P:System.Windows.Point.X" /> del punto.</span><span class="sxs-lookup"><span data-stu-id="94023-151"><see cref="P:System.Windows.Point.X" /> coordinate.</span></span></param>
        <param name="offsetY"><span data-ttu-id="94023-152">Magnitud según la que se va a desplazar</span><span class="sxs-lookup"><span data-stu-id="94023-152">The amount to offset the</span></span> 
<span data-ttu-id="94023-153">la coordenada <see cref="P:System.Windows.Point.Y" /> del punto.</span><span class="sxs-lookup"><span data-stu-id="94023-153">point's <see cref="P:System.Windows.Point.Y" /> coordinate.</span></span></param>
        <summary><span data-ttu-id="94023-154">Desplaza las coordenadas <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> de un punto según las magnitudes especificadas.</span><span class="sxs-lookup"><span data-stu-id="94023-154">Offsets a point's <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates by the specified amounts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94023-155">Esta operación equivale a agregar un <xref:System.Windows.Point> a un <xref:System.Windows.Vector>.</span><span class="sxs-lookup"><span data-stu-id="94023-155">This operation is equivalent to adding a <xref:System.Windows.Point> to a <xref:System.Windows.Vector>.</span></span>  
  
 <span data-ttu-id="94023-156">Tenga en cuenta que al llamar a la <xref:System.Windows.Point.Offset%2A> método tendrá un efecto solo si puede cambiar el <xref:System.Windows.Point.X%2A> y <xref:System.Windows.Point.Y%2A> propiedades directamente.</span><span class="sxs-lookup"><span data-stu-id="94023-156">Note that calling the <xref:System.Windows.Point.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties directly.</span></span> <span data-ttu-id="94023-157">Dado que <xref:System.Windows.Point> es un tipo de valor, si hace referencia a un <xref:System.Windows.Point> objeto mediante el uso de una propiedad o indizador, obtendrá una copia del objeto, no una referencia al objeto.</span><span class="sxs-lookup"><span data-stu-id="94023-157">Because <xref:System.Windows.Point> is a value type, if you reference a <xref:System.Windows.Point> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="94023-158">Si se intenta cambiar <xref:System.Windows.Point.X%2A> o <xref:System.Windows.Point.Y%2A> en una referencia de propiedad o indizador, se produce un error del compilador.</span><span class="sxs-lookup"><span data-stu-id="94023-158">If you attempt to change <xref:System.Windows.Point.X%2A> or <xref:System.Windows.Point.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="94023-159">De forma similar, una llamada a <xref:System.Windows.Point.Offset%2A> en la propiedad o indizador no cambiará el objeto subyacente.</span><span class="sxs-lookup"><span data-stu-id="94023-159">Similarly, calling <xref:System.Windows.Point.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="94023-160">Si desea cambiar el valor de un <xref:System.Windows.Point> que se hace referencia como una propiedad o indizador, cree un nuevo <xref:System.Windows.Point>, modificar sus campos y, a continuación, asigne el <xref:System.Windows.Point> a la propiedad o indizador.</span><span class="sxs-lookup"><span data-stu-id="94023-160">If you want to change the value of a <xref:System.Windows.Point> that is referenced as a property or indexer, create a new <xref:System.Windows.Point>, modify its fields, and then assign the <xref:System.Windows.Point> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94023-161">En el ejemplo siguiente se muestra cómo se va a desplazar la <xref:System.Windows.Point.X%2A> y <xref:System.Windows.Point.Y%2A> valores de un <xref:System.Windows.Point> estructura.</span><span class="sxs-lookup"><span data-stu-id="94023-161">The following example shows how to offset the <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#OffsetExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#offsetexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator + (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Addition(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator +(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="point + vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="94023-162">Punto que se va a trasladar.</span><span class="sxs-lookup"><span data-stu-id="94023-162">The point to translate.</span></span></param>
        <param name="vector"><span data-ttu-id="94023-163">Magnitud según la que se va a trasladar <paramref name="point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-163">The amount by which to translate <paramref name="point" />.</span></span></param>
        <summary><span data-ttu-id="94023-164">Traslada la estructura <see cref="T:System.Windows.Point" /> especificada mediante la estructura <see cref="T:System.Windows.Vector" /> especificada y devuelve el resultado.</span><span class="sxs-lookup"><span data-stu-id="94023-164">Translates the specified <see cref="T:System.Windows.Point" /> by the specified <see cref="T:System.Windows.Vector" /> and returns the result.</span></span></summary>
        <returns><span data-ttu-id="94023-165">Resultado de trasladar el punto especificado mediante el vector especificado.</span><span class="sxs-lookup"><span data-stu-id="94023-165">The result of translating the specified point by the specified vector.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94023-166">El ejemplo siguiente muestra cómo agregar un <xref:System.Windows.Point> a un <xref:System.Windows.Vector> mediante sobrecargado (+) operador.</span><span class="sxs-lookup"><span data-stu-id="94023-166">The following example shows how to add a <xref:System.Windows.Point> to a <xref:System.Windows.Vector> using the overloaded (+) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedAdditionOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedadditionoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedAdditionOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedadditionoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="point1 = point2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="94023-167">Primera estructura <see cref="T:System.Windows.Point" /> que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="94023-167">The first <see cref="T:System.Windows.Point" /> structure to compare.</span></span></param>
        <param name="point2"><span data-ttu-id="94023-168">Segunda estructura <see cref="T:System.Windows.Point" /> que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="94023-168">The second <see cref="T:System.Windows.Point" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="94023-169">Compara dos estructuras <see cref="T:System.Windows.Point" /> para determinar si son iguales.</span><span class="sxs-lookup"><span data-stu-id="94023-169">Compares two <see cref="T:System.Windows.Point" /> structures for equality.</span></span></summary>
        <returns><span data-ttu-id="94023-170">Es <see langword="true" /> si las coordenadas <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> de <paramref name="point1" /> y de <paramref name="point2" /> son iguales; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="94023-170"><see langword="true" /> if both the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates of <paramref name="point1" /> and <paramref name="point2" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94023-171">Coordenadas de un punto se describen mediante <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="94023-171">A point's coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="94023-172">Dado que el valor de <xref:System.Double> puede perder precisión cuando se realizan operaciones aritméticas en ellos, una comparación entre dos <xref:System.Windows.Point> podrían producir un error en los valores que son lógicamente iguales.</span><span class="sxs-lookup"><span data-stu-id="94023-172">Because the value of <xref:System.Double> can lose precision when arithmetic operations are performed on them, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94023-173">El ejemplo siguiente muestra cómo comprobar si dos <xref:System.Windows.Point> estructuras son iguales utilizando el operador (==) sobrecargado.</span><span class="sxs-lookup"><span data-stu-id="94023-173">The following example shows how to check if two <xref:System.Windows.Point> structures are equal using the overloaded (==) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Point.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94023-174">Convierte una estructura <see cref="T:System.Windows.Point" /> en una estructura <see cref="T:System.Windows.Size" /> o <see cref="T:System.Windows.Vector" />.</span><span class="sxs-lookup"><span data-stu-id="94023-174">Converts a <see cref="T:System.Windows.Point" /> into a <see cref="T:System.Windows.Size" /> or a <see cref="T:System.Windows.Vector" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Size (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Size op_Explicit(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Size(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Point -&gt; System.Windows.Size" Usage="System.Windows.Point.op_Explicit point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="94023-175">Punto que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="94023-175">The point to convert.</span></span></param>
        <summary><span data-ttu-id="94023-176">Crea una estructura <see cref="T:System.Windows.Size" /> con un valor de <see cref="P:System.Windows.Size.Width" /> igual al valor de <see cref="P:System.Windows.Point.X" /> de este punto y con un valor de <see cref="P:System.Windows.Size.Height" /> igual al valor de <see cref="P:System.Windows.Point.Y" /> de este punto.</span><span class="sxs-lookup"><span data-stu-id="94023-176">Creates a <see cref="T:System.Windows.Size" /> structure with a <see cref="P:System.Windows.Size.Width" /> equal to this point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Size.Height" /> equal to this point's <see cref="P:System.Windows.Point.Y" /> value.</span></span></summary>
        <returns><span data-ttu-id="94023-177">Estructura <see cref="T:System.Windows.Size" /> con un valor de <see cref="P:System.Windows.Size.Width" /> igual al valor de <see cref="P:System.Windows.Point.X" /> de este punto y con un valor de <see cref="P:System.Windows.Size.Height" /> igual al valor de <see cref="P:System.Windows.Point.Y" /> de este punto.</span><span class="sxs-lookup"><span data-stu-id="94023-177">A <see cref="T:System.Windows.Size" /> structure with a <see cref="P:System.Windows.Size.Width" /> equal to this point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Size.Height" /> equal to this point's <see cref="P:System.Windows.Point.Y" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94023-178">Dado que un <xref:System.Windows.Size> estructura no puede ser negativa, los valores absolutos del punto <xref:System.Windows.Point.X%2A> y <xref:System.Windows.Point.Y%2A> se usan las propiedades.</span><span class="sxs-lookup"><span data-stu-id="94023-178">Because a <xref:System.Windows.Size> structure cannot be negative, the absolute values of the point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> properties are used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94023-179">El ejemplo siguiente muestra cómo convertir explícitamente una <xref:System.Windows.Point> en un <xref:System.Windows.Size>.</span><span class="sxs-lookup"><span data-stu-id="94023-179">The following example shows how to explicitly convert a <xref:System.Windows.Point> into a <xref:System.Windows.Size>.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedExplicitOperatorSizeExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedexplicitoperatorsizeexample)]
 [!code-vb[PointExamples_snip#OverloadedExplicitOperatorSizeExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedexplicitoperatorsizeexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Vector (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Explicit(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Vector(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Point -&gt; System.Windows.Vector" Usage="System.Windows.Point.op_Explicit point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="94023-180">Punto que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="94023-180">The point to convert.</span></span></param>
        <summary><span data-ttu-id="94023-181">Crea una estructura <see cref="T:System.Windows.Vector" /> con un valor de <see cref="P:System.Windows.Vector.X" /> igual al valor de <see cref="P:System.Windows.Point.X" /> del punto y con un valor de <see cref="P:System.Windows.Vector.Y" /> igual al valor de <see cref="P:System.Windows.Point.Y" /> del punto.</span><span class="sxs-lookup"><span data-stu-id="94023-181">Creates a <see cref="T:System.Windows.Vector" /> structure with an <see cref="P:System.Windows.Vector.X" /> value equal to the point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Vector.Y" /> value equal to the point's <see cref="P:System.Windows.Point.Y" /> value.</span></span></summary>
        <returns><span data-ttu-id="94023-182">Vector con un valor de <see cref="P:System.Windows.Vector.X" /> igual al valor de <see cref="P:System.Windows.Point.X" /> del punto y con un valor de <see cref="P:System.Windows.Vector.Y" /> igual al valor de <see cref="P:System.Windows.Point.Y" /> del punto.</span><span class="sxs-lookup"><span data-stu-id="94023-182">A vector with an <see cref="P:System.Windows.Vector.X" /> value equal to the point's <see cref="P:System.Windows.Point.X" /> value and a <see cref="P:System.Windows.Vector.Y" /> value equal to the point's <see cref="P:System.Windows.Point.Y" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94023-183">El ejemplo siguiente muestra cómo convertir explícitamente una <xref:System.Windows.Point> en un <xref:System.Windows.Vector>.</span><span class="sxs-lookup"><span data-stu-id="94023-183">The following example shows how to explicitly convert a <xref:System.Windows.Point> into a <xref:System.Windows.Vector>.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedExplicitOperatorVectorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedexplicitoperatorvectorexample)]
 [!code-vb[PointExamples_snip#OverloadedExplicitOperatorVectorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedexplicitoperatorvectorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="System.Windows.Point.op_Inequality (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="94023-184">Primer punto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="94023-184">The first point to compare.</span></span></param>
        <param name="point2"><span data-ttu-id="94023-185">Segundo punto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="94023-185">The second point to compare.</span></span></param>
        <summary><span data-ttu-id="94023-186">Compara la desigualdad de dos estructuras <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-186">Compares two <see cref="T:System.Windows.Point" /> structures for inequality.</span></span></summary>
        <returns><span data-ttu-id="94023-187">Es <see langword="true" /> si <paramref name="point1" /> y <paramref name="point2" /> tienen coordenadas <see cref="P:System.Windows.Point.X" /> o <see cref="P:System.Windows.Point.Y" /> diferentes; es <see langword="false" /> si <paramref name="point1" /> y <paramref name="point2" /> tienen las mismas coordenadas <see cref="P:System.Windows.Point.X" /> y <see cref="P:System.Windows.Point.Y" />.</span><span class="sxs-lookup"><span data-stu-id="94023-187"><see langword="true" /> if <paramref name="point1" /> and <paramref name="point2" /> have different <see cref="P:System.Windows.Point.X" /> or <see cref="P:System.Windows.Point.Y" /> coordinates; <see langword="false" /> if <paramref name="point1" /> and <paramref name="point2" /> have the same <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94023-188">Un punto <xref:System.Windows.Point.X%2A> y <xref:System.Windows.Point.Y%2A> coordenadas se describen mediante <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="94023-188">A point's <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> coordinates are described using <xref:System.Double> values.</span></span> <span data-ttu-id="94023-189">Dado que <xref:System.Double> valores pueden perder precisión cuando funcione con una comparación entre dos <xref:System.Windows.Point> podrían producir un error en los valores que son lógicamente iguales.</span><span class="sxs-lookup"><span data-stu-id="94023-189">Because <xref:System.Double> values can lose precision when operated on, a comparison between two <xref:System.Windows.Point> values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94023-190">El ejemplo siguiente muestra cómo comprobar si dos <xref:System.Windows.Point> estructuras no son iguales, utilizando sobrecargado (! =) (operador).</span><span class="sxs-lookup"><span data-stu-id="94023-190">The following example shows how to check whether two <xref:System.Windows.Point> structures are not equal, using the overloaded (!=) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator * (System.Windows.Point point, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Multiply(valuetype System.Windows.Point point, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator *(System::Windows::Point point, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Windows.Point * System.Windows.Media.Matrix -&gt; System.Windows.Point" Usage="point * matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="94023-191">El punto que se va a transformar.</span><span class="sxs-lookup"><span data-stu-id="94023-191">The point to transform.</span></span></param>
        <param name="matrix"><span data-ttu-id="94023-192">Matriz de transformación.</span><span class="sxs-lookup"><span data-stu-id="94023-192">The transformation matrix.</span></span></param>
        <summary><span data-ttu-id="94023-193">Transforma la estructura <see cref="T:System.Windows.Point" /> especificada mediante la estructura <see cref="T:System.Windows.Media.Matrix" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="94023-193">Transforms the specified <see cref="T:System.Windows.Point" /> by the specified <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="94023-194">Resultado de transformar el punto especificado mediante la matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="94023-194">The result of transforming the specified point using the specified matrix.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94023-195">El ejemplo siguiente muestra cómo multiplicar una <xref:System.Windows.Point> por un <xref:System.Windows.Media.Matrix> mediante el operador sobrecargado (\*).</span><span class="sxs-lookup"><span data-stu-id="94023-195">The following example shows how to multiply a <xref:System.Windows.Point> by a <xref:System.Windows.Media.Matrix> using the overloaded (\*) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedmultiplypointbymatrixoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedmultiplypointbymatrixoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94023-196">Resta la estructura <see cref="T:System.Windows.Vector" /> o <see cref="T:System.Windows.Point" /> especificada de la estructura <see cref="T:System.Windows.Point" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="94023-196">Subtracts the specified <see cref="T:System.Windows.Vector" /> or <see cref="T:System.Windows.Point" /> from the specified <see cref="T:System.Windows.Point" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector operator - (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Subtraction(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (point1 As Point, point2 As Point) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector operator -(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Vector" Usage="point1 - point2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="94023-197">Punto del que se resta <paramref name="point2" />.</span><span class="sxs-lookup"><span data-stu-id="94023-197">The point from which <paramref name="point2" /> is subtracted.</span></span></param>
        <param name="point2"><span data-ttu-id="94023-198">Punto que se va a restar de <paramref name="point1" />.</span><span class="sxs-lookup"><span data-stu-id="94023-198">The point to subtract from <paramref name="point1" />.</span></span></param>
        <summary><span data-ttu-id="94023-199">Resta la estructura <see cref="T:System.Windows.Point" /> especificada de otra estructura <see cref="T:System.Windows.Point" /> y devuelve la diferencia como una estructura <see cref="T:System.Windows.Vector" />.</span><span class="sxs-lookup"><span data-stu-id="94023-199">Subtracts the specified <see cref="T:System.Windows.Point" /> from another specified <see cref="T:System.Windows.Point" /> and returns the difference as a <see cref="T:System.Windows.Vector" />.</span></span></summary>
        <returns><span data-ttu-id="94023-200">Diferencia entre <paramref name="point1" /> y <paramref name="point2" />.</span><span class="sxs-lookup"><span data-stu-id="94023-200">The difference between <paramref name="point1" /> and <paramref name="point2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94023-201">En el ejemplo siguiente se muestra cómo se va a restar un <xref:System.Windows.Point> desde otro <xref:System.Windows.Point> y devolver un <xref:System.Windows.Vector> mediante el operador sobrecargado (-).</span><span class="sxs-lookup"><span data-stu-id="94023-201">The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> and return a <xref:System.Windows.Vector> using the overloaded (-) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedsubtractionoperatorexample2)]
 [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedsubtractionoperatorexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator - (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Subtraction(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator -(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="point - vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="94023-202">Punto del que se resta <paramref name="vector" />.</span><span class="sxs-lookup"><span data-stu-id="94023-202">The point from which <paramref name="vector" /> is subtracted.</span></span></param>
        <param name="vector"><span data-ttu-id="94023-203">Vector que se va a restar de <paramref name="point1" />.</span><span class="sxs-lookup"><span data-stu-id="94023-203">The vector to subtract from <paramref name="point1" /></span></span></param>
        <summary><span data-ttu-id="94023-204">Resta la estructura <see cref="T:System.Windows.Vector" /> especificada de la estructura <see cref="T:System.Windows.Point" /> especificada y devuelve la estructura <see cref="T:System.Windows.Point" /> resultante.</span><span class="sxs-lookup"><span data-stu-id="94023-204">Subtracts the specified <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" /> and returns the resulting <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="94023-205">Diferencia entre <paramref name="point" /> y <paramref name="vector" />.</span><span class="sxs-lookup"><span data-stu-id="94023-205">The difference between <paramref name="point" /> and <paramref name="vector" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94023-206">En el ejemplo siguiente se muestra cómo se va a restar un <xref:System.Windows.Vector> desde un <xref:System.Windows.Point> mediante el operador sobrecargado (-).</span><span class="sxs-lookup"><span data-stu-id="94023-206">The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the overloaded (-) operator.</span></span>  
  
 [!code-csharp[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedsubtractionoperatorexample1)]
 [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedsubtractionoperatorexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Point" Usage="System.Windows.Point.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="94023-207">Representación de cadena de un punto.</span><span class="sxs-lookup"><span data-stu-id="94023-207">A string representation of a point.</span></span></param>
        <summary><span data-ttu-id="94023-208">Construye un <see cref="T:System.Windows.Point" /> a partir de la <see cref="T:System.String" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="94023-208">Constructs a <see cref="T:System.Windows.Point" /> from the specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="94023-209">Estructura <see cref="T:System.Windows.Point" /> equivalente.</span><span class="sxs-lookup"><span data-stu-id="94023-209">The equivalent <see cref="T:System.Windows.Point" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94023-210">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Point.Parse%2A> método para convertir un <xref:System.String> representación de un punto en un <xref:System.Windows.Point> estructura.</span><span class="sxs-lookup"><span data-stu-id="94023-210">The following example shows how to use the <xref:System.Windows.Point.Parse%2A> method to convert a <xref:System.String> representation of a point into a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#parseexample)]
 [!code-vb[PointExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="94023-211"><paramref name="source" /> no se compone de dos valores double delimitados por comas o espacios.</span><span class="sxs-lookup"><span data-stu-id="94023-211"><paramref name="source" /> is not composed of two comma- or space-delimited double values.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="94023-212"><paramref name="source" /> no contiene dos números.</span><span class="sxs-lookup"><span data-stu-id="94023-212"><paramref name="source" /> does not contain two numbers.</span></span>  
  
<span data-ttu-id="94023-213">O bien</span><span class="sxs-lookup"><span data-stu-id="94023-213">-or-</span></span> 
 <span data-ttu-id="94023-214"><paramref name="source" /> contiene demasiados delimitadores.</span><span class="sxs-lookup"><span data-stu-id="94023-214"><paramref name="source" /> contains too many delimiters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94023-215">Resta la estructura <see cref="T:System.Windows.Point" /> o <see cref="T:System.Windows.Vector" /> especificada de la estructura <see cref="T:System.Windows.Point" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="94023-215">Subtracts the specified <see cref="T:System.Windows.Point" /> or <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector Subtract (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector Subtract(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (point1 As Point, point2 As Point) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector Subtract(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Vector" Usage="System.Windows.Point.Subtract (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="94023-216">Punto del que se resta <paramref name="point2" />.</span><span class="sxs-lookup"><span data-stu-id="94023-216">The point from which <paramref name="point2" /> is subtracted.</span></span></param>
        <param name="point2"><span data-ttu-id="94023-217">Punto que se va a restar de <paramref name="point1" />.</span><span class="sxs-lookup"><span data-stu-id="94023-217">The point to subtract from <paramref name="point1" />.</span></span></param>
        <summary><span data-ttu-id="94023-218">Resta la estructura <see cref="T:System.Windows.Point" /> especificada de otra estructura <see cref="T:System.Windows.Point" /> y devuelve la diferencia como una estructura <see cref="T:System.Windows.Vector" />.</span><span class="sxs-lookup"><span data-stu-id="94023-218">Subtracts the specified <see cref="T:System.Windows.Point" /> from another specified <see cref="T:System.Windows.Point" /> and returns the difference as a <see cref="T:System.Windows.Vector" />.</span></span></summary>
        <returns><span data-ttu-id="94023-219">Diferencia entre <paramref name="point1" /> y <paramref name="point2" />.</span><span class="sxs-lookup"><span data-stu-id="94023-219">The difference between <paramref name="point1" /> and <paramref name="point2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94023-220">En el ejemplo siguiente se muestra cómo se va a restar un <xref:System.Windows.Point> desde otro <xref:System.Windows.Point> mediante estático <xref:System.Windows.Point.Subtract%2A> método.</span><span class="sxs-lookup"><span data-stu-id="94023-220">The following example shows how to subtract a <xref:System.Windows.Point> from another <xref:System.Windows.Point> using the static <xref:System.Windows.Point.Subtract%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#SubtractExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#subtractexample2)]
 [!code-vb[PointExamples_snip#SubtractExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#subtractexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Subtract (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Subtract(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Subtract(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="System.Windows.Point.Subtract (point, vector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="94023-221">Punto del que se resta <paramref name="vector" />.</span><span class="sxs-lookup"><span data-stu-id="94023-221">The point from which <paramref name="vector" /> is subtracted.</span></span></param>
        <param name="vector"><span data-ttu-id="94023-222"><paramref name="vector" /> que se va a restar de <paramref name="point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-222">The <paramref name="vector" /> to subtract from <paramref name="point" />.</span></span></param>
        <summary><span data-ttu-id="94023-223">Resta la estructura <see cref="T:System.Windows.Vector" /> especificada de la estructura <see cref="T:System.Windows.Point" /> especificada y devuelve la estructura <see cref="T:System.Windows.Point" /> resultante.</span><span class="sxs-lookup"><span data-stu-id="94023-223">Subtracts the specified <see cref="T:System.Windows.Vector" /> from the specified <see cref="T:System.Windows.Point" /> and returns the resulting <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="94023-224">Diferencia entre <paramref name="point" /> y <paramref name="vector" />.</span><span class="sxs-lookup"><span data-stu-id="94023-224">The difference between <paramref name="point" /> and <paramref name="vector" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94023-225">En el ejemplo siguiente se muestra cómo se va a restar un <xref:System.Windows.Vector> desde un <xref:System.Windows.Point> mediante estático <xref:System.Windows.Point.Subtract%2A> método.</span><span class="sxs-lookup"><span data-stu-id="94023-225">The following example shows how to subtract a <xref:System.Windows.Vector> from a <xref:System.Windows.Point> using the static <xref:System.Windows.Point.Subtract%2A> method.</span></span>  
  
 [!code-csharp[PointExamples_snip#SubtractExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#subtractexample1)]
 [!code-vb[PointExamples_snip#SubtractExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#subtractexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Point.Subtract" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="94023-226">Cadena que especifica el formato que se va a utilizar.</span><span class="sxs-lookup"><span data-stu-id="94023-226">The string specifying the format to use.</span></span>  
  
<span data-ttu-id="94023-227">O bien</span><span class="sxs-lookup"><span data-stu-id="94023-227">-or-</span></span> 
 <span data-ttu-id="94023-228"><see langword="null" /> para utilizar el formato predeterminado que se define para el tipo de la implementación de <see cref="T:System.IFormattable" />.</span><span class="sxs-lookup"><span data-stu-id="94023-228"><see langword="null" /> to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span></span></param>
        <param name="provider"><span data-ttu-id="94023-229"><see langword="IFormatProvider" /> que se va a utilizar para dar formato al valor.</span><span class="sxs-lookup"><span data-stu-id="94023-229">The <see langword="IFormatProvider" /> to use to format the value.</span></span>  
  
<span data-ttu-id="94023-230">O bien</span><span class="sxs-lookup"><span data-stu-id="94023-230">-or-</span></span> 
 <span data-ttu-id="94023-231"><see langword="null" /> para obtener la información de formato para valores numéricos de la configuración regional actual del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="94023-231"><see langword="null" /> to obtain the numeric format information from the current locale setting of the operating system.</span></span></param>
        <summary><span data-ttu-id="94023-232">Este miembro es compatible con la infraestructura de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] y no está diseñado para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="94023-232">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span> <span data-ttu-id="94023-233">Para una descripción de este miembro, vea <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="94023-233">For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="94023-234">Cadena que contiene el valor de la instancia actual con el formato especificado.</span><span class="sxs-lookup"><span data-stu-id="94023-234">A string containing the value of the current instance in the specified format.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="94023-235">Crea una representación de tipo <see cref="T:System.String" /> de esta estructura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-235">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="point.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="94023-236">Crea una representación de tipo <see cref="T:System.String" /> de esta estructura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-236">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="94023-237"><see cref="T:System.String" /> que contiene los valores de <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> de esta estructura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-237">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of this <see cref="T:System.Windows.Point" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94023-238">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Point.ToString%2A> método para obtener un <xref:System.String> representación de un <xref:System.Windows.Point> estructura.</span><span class="sxs-lookup"><span data-stu-id="94023-238">The following example shows how to use the <xref:System.Windows.Point.ToString%2A> method to get a <xref:System.String> representation of a <xref:System.Windows.Point> structure.</span></span>  
  
 [!code-csharp[PointExamples_snip#ToStringExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#tostringexample)]
 [!code-vb[PointExamples_snip#ToStringExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#tostringexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="point.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="94023-239">Información de formato específica de la referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="94023-239">Culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="94023-240">Crea una representación de tipo <see cref="T:System.String" /> de esta estructura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-240">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="94023-241"><see cref="T:System.String" /> que contiene los valores de <see cref="P:System.Windows.Point.X" /> e <see cref="P:System.Windows.Point.Y" /> de esta estructura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-241">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of this <see cref="T:System.Windows.Point" /> structure.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Point.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Point.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94023-242">Obtiene o establece el valor de la coordenada <see cref="P:System.Windows.Point.X" /> de esta estructura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-242">Gets or sets the <see cref="P:System.Windows.Point.X" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span></span></summary>
        <value><span data-ttu-id="94023-243">Valor de la coordenada <see cref="P:System.Windows.Point.X" /> de esta estructura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-243">The <see cref="P:System.Windows.Point.X" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span></span>  <span data-ttu-id="94023-244">El valor predeterminado es <c>0</c>.</span><span class="sxs-lookup"><span data-stu-id="94023-244">The default value is <c>0</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94023-245">El ejemplo siguiente muestra cómo comprobar si dos <xref:System.Windows.Point> estructuras no son iguales.</span><span class="sxs-lookup"><span data-stu-id="94023-245">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="94023-246">También muestra cómo asignar valores a un <xref:System.Windows.Point> estructurar cuando se declara la estructura y después de la estructura se ha declarado.</span><span class="sxs-lookup"><span data-stu-id="94023-246">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Point.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Point.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Point.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="94023-247">Obtiene o establece el valor de la coordenada <see cref="P:System.Windows.Point.Y" /> de esta estructura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-247">Gets or sets the <see cref="P:System.Windows.Point.Y" />-coordinate value of this <see cref="T:System.Windows.Point" />.</span></span></summary>
        <value><span data-ttu-id="94023-248">Valor de la coordenada <see cref="P:System.Windows.Point.Y" /> de esta estructura <see cref="T:System.Windows.Point" />.</span><span class="sxs-lookup"><span data-stu-id="94023-248">The <see cref="P:System.Windows.Point.Y" />-coordinate value of this <see cref="T:System.Windows.Point" /> structure.</span></span>  <span data-ttu-id="94023-249">El valor predeterminado es <c>0</c>.</span><span class="sxs-lookup"><span data-stu-id="94023-249">The default value is <c>0</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94023-250">El ejemplo siguiente muestra cómo comprobar si dos <xref:System.Windows.Point> estructuras no son iguales.</span><span class="sxs-lookup"><span data-stu-id="94023-250">The following example shows how to check if two <xref:System.Windows.Point> structures are not equal.</span></span>  <span data-ttu-id="94023-251">También muestra cómo asignar valores a un <xref:System.Windows.Point> estructurar cuando se declara la estructura y después de la estructura se ha declarado.</span><span class="sxs-lookup"><span data-stu-id="94023-251">It also illustrates how to assign values to a <xref:System.Windows.Point> structure when the structure is being declared and after the structure has been declared.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Point.X" />
      </Docs>
    </Member>
  </Members>
</Type>
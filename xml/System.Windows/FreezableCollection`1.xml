<Type Name="FreezableCollection&lt;T&gt;" FullName="System.Windows.FreezableCollection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7846065575c6f12b7266cde59d99095fa434823f" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52905799" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FreezableCollection&lt;T&gt; : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged where T : DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FreezableCollection`1&lt;(class System.Windows.DependencyObject) T&gt; extends System.Windows.Media.Animation.Animatable implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.Specialized.INotifyCollectionChanged, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FreezableCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class FreezableCollection(Of T)&#xA;Inherits Animatable&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), INotifyCollectionChanged, INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : DependencyObjectpublic ref class FreezableCollection : System::Windows::Media::Animation::Animatable, System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::IList, System::Collections::Specialized::INotifyCollectionChanged, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type FreezableCollection&lt;'T (requires 'T :&gt; DependencyObject)&gt; = class&#xA;    inherit Animatable&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IList&lt;'T (requires 'T :&gt; DependencyObject)&gt;&#xA;    interface ICollection&lt;'T (requires 'T :&gt; DependencyObject)&gt;&#xA;    interface seq&lt;'T (requires 'T :&gt; DependencyObject)&gt;&#xA;    interface INotifyCollectionChanged&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="4a3e9-101">Tipo de colección.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a3e9-101">The type of collection.</span>
      </span>
      <span data-ttu-id="4a3e9-102">Este tipo debe ser un <see cref="T:System.Windows.DependencyObject" /> o una clase derivada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a3e9-102">This type must be a <see cref="T:System.Windows.DependencyObject" /> or a derived class.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="4a3e9-103">Representa una colección de objetos <see cref="T:System.Windows.DependencyObject" />, <see cref="T:System.Windows.Freezable" /> o <see cref="T:System.Windows.Media.Animation.Animatable" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a3e9-103">Represents a collection of <see cref="T:System.Windows.DependencyObject" />, <see cref="T:System.Windows.Freezable" />, or <see cref="T:System.Windows.Media.Animation.Animatable" /> objects.</span>
      </span>
      <span data-ttu-id="4a3e9-104">
        <see cref="T:System.Windows.FreezableCollection`1" /> es en sí un tipo <see cref="T:System.Windows.Media.Animation.Animatable" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a3e9-104">
          <see cref="T:System.Windows.FreezableCollection`1" /> is itself an <see cref="T:System.Windows.Media.Animation.Animatable" /> type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-105">Esta clase se proporciona para permitir la creación de tipos de colección personalizada que admiten el enlace de datos totalmente, cambiar la notificación, la invalidación de propiedades y la animación de su contenido.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-105">This class is provided to enable the creation of custom collection types that fully support data binding, change notification, property invalidation, and animation of its contents.</span></span>  
  
### <a name="xaml-usage-for-freezablecollection"></a><span data-ttu-id="4a3e9-106">Uso XAML para FreezableCollection</span><span class="sxs-lookup"><span data-stu-id="4a3e9-106">XAML Usage for FreezableCollection</span></span>  
 <span data-ttu-id="4a3e9-107"><xref:System.Windows.FreezableCollection%601> admite un limitado [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sintaxis.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-107"><xref:System.Windows.FreezableCollection%601> supports a limited [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span>  
  
-   <span data-ttu-id="4a3e9-108">Como un elemento de objeto en la raíz, teóricamente puede especificar una sin restricciones <xref:System.Windows.FreezableCollection%601> elemento de objeto, que también debe especificar el [x: TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) para declarar la restricción.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-108">As an object element at the root, you can theoretically specify an unconstrained <xref:System.Windows.FreezableCollection%601> object element, which must also specify the [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) to declare the constraint.</span></span> <span data-ttu-id="4a3e9-109">Sin embargo, esto no es un escenario común, porque para ello, el <xref:System.Windows.FreezableCollection%601> debe ser el elemento raíz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-109">However, this is not a common scenario, because to do this, the <xref:System.Windows.FreezableCollection%601> must be the root element.</span></span> <span data-ttu-id="4a3e9-110">Esta limitación existe porque la [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] implementación del procesador en [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] puede solo admiten [x: TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) cuando el elemento se establece en es el elemento raíz, y debe usar en cualquier abierto restricción genérica si desea crear una instancia de un tipo genérico en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="4a3e9-110">This limitation exists because the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor implementation in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can only support [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) when the element it is being set on is the root element, and you must use  on any open constraint generic if you want to instantiate a generic type in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span> <span data-ttu-id="4a3e9-111">Es probable que desee que un <xref:System.Windows.FreezableCollection%601> como elemento raíz, incluso como suelto [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="4a3e9-111">It is unlikely that you want a <xref:System.Windows.FreezableCollection%601> as the root element, even as loose [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
-   <span data-ttu-id="4a3e9-112">Si deriva de <xref:System.Windows.FreezableCollection%601> y aplicar una restricción de tipo en la colección derivada, la colección derivada puede admitir una variedad de usos.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-112">If you derive from <xref:System.Windows.FreezableCollection%601> and apply a type constraint in the derived collection, the derived collection can support a variety of usages.</span></span> <span data-ttu-id="4a3e9-113">Esto es posible porque la restricción de la derivación elimina la necesidad de pasar.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-113">This is possible because the constraint in your derivation eliminates the need to pass .</span></span>  
  
    -   <span data-ttu-id="4a3e9-114">La típica [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] el uso de este tipo de colección derivada es a través de la sintaxis de colección implícita.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-114">The typical [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage for such a derived collection is through implicit collection syntax.</span></span> <span data-ttu-id="4a3e9-115">Las colecciones que admiten algunas interfaces no es necesario especificar la propia colección como un elemento de objeto.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-115">Collections that support certain interfaces do not need to specify the collection itself as an object element.</span></span> <span data-ttu-id="4a3e9-116">Para obtener más información sobre la sintaxis de colección en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], consulte [XAML detalles de la sintaxis](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="4a3e9-116">For details on collection syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span> <span data-ttu-id="4a3e9-117">Por ejemplo, un *objeto* con un *propiedad* donde el *propiedad* era del tipo <xref:System.Windows.FreezableCollection%601> restringido por <xref:System.Windows.DependencyObject> podría admitir la sintaxis siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a3e9-117">For instance, an *object* with a *property* where the *property* was of type <xref:System.Windows.FreezableCollection%601> constrained by <xref:System.Windows.DependencyObject> could support the following syntax:</span></span>  
  
        ```  
        <object>  
          <object.property>  
            oneOrMoreDependencyObjectElements  
          </object.property>  
        </object>  
        ```  
  
    -   <span data-ttu-id="4a3e9-118">No oculte el constructor predeterminado, siempre y cuando la colección derivada también puede admitir una sintaxis de elemento de objeto (donde el elemento de objeto es explícito, a diferencia del uso implícito mostrado anteriormente).</span><span class="sxs-lookup"><span data-stu-id="4a3e9-118">As long as you do not hide the default constructor, the derived collection can also support an object element syntax (where the object element is explicit, as opposed to the implicit usage shown above).</span></span> <span data-ttu-id="4a3e9-119">No debe ser el elemento raíz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-119">It does not need to be the root element.</span></span> <span data-ttu-id="4a3e9-120">O bien, también puede usar la colección derivada como elemento raíz, sin necesidad de especificar, aunque el uso de una colección como un elemento raíz es poco habitual.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-120">Or, you can also use the derived collection as a root element, without needing to specify , although using a collection as a root element is uncommon.</span></span>  
  
-   <span data-ttu-id="4a3e9-121">Cualquier elemento secundario de la colección en cualquiera de los escenarios anteriores debe ser del tipo de la restricción implementada o según lo especificado por.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-121">Any child elements of the collection in either of the above scenarios must be of the type of either the implemented constraint, or as specified by .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-122">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-122">Initializes a new instance of <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-123">Inicializa una nueva instancia de <see cref="T:System.Windows.FreezableCollection`1" /> que está vacía y tiene la capacidad inicial predeterminada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-123">Initializes a new instance of <see cref="T:System.Windows.FreezableCollection`1" /> that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; : seq&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="4a3e9-124">Colección cuyos elementos se deben agregar al nuevo objeto <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-124">The collection whose items should be added to the new <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-125">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.FreezableCollection`1" /> que contiene los mismos elementos que la colección especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-125">Initializes a new instance of the <see cref="T:System.Windows.FreezableCollection`1" /> class that contains the same elements as the specified collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-126">Esta operación realiza una copia superficial de la colección especificada; solo se copian las referencias a elementos de la colección, no se clonan los propios elementos.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-126">This operation performs a shallow copy on the specified collection; only references to the collection's elements are copied, the elements themselves are not cloned.</span></span> <span data-ttu-id="4a3e9-127">Modificación de un elemento de la nueva <xref:System.Windows.FreezableCollection%601> también modifica ese elemento para `collection`.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-127">Modifying an element of the new <xref:System.Windows.FreezableCollection%601> also modifies that element for `collection`.</span></span>  
  
 <span data-ttu-id="4a3e9-128">Los elementos se colocan en el nuevo <xref:System.Windows.FreezableCollection%601> en el mismo orden que se leen el enumerador de la colección especificada.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-128">The elements are placed in the new <xref:System.Windows.FreezableCollection%601> in the same order they are read by the enumerator of the specified collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3e9-129">El valor de <paramref name="collection" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-129">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; : int -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="4a3e9-130">Valor mayor o igual que cero que especifica el número de elementos que la nueva colección puede almacenar inicialmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-130">A value that is greater than or equal to 0 that specifies the number of elements the new collection can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-131">Inicializa una nueva instancia de <see cref="T:System.Windows.FreezableCollection`1" /> que está vacía y tiene la capacidad inicial predeterminada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-131">Initializes a new instance of the <see cref="T:System.Windows.FreezableCollection`1" /> that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3e9-132">
            <paramref name="capacity" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-132">
              <paramref name="capacity" /> is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T value);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit&#xA;override this.Add : 'T -&gt; unit" Usage="freezableCollection.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a3e9-133">Objeto que se va a agregar al final de <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-133">The object to be added to the end of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
          <span data-ttu-id="4a3e9-134">Este valor no puede ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-134">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-135">Agrega el objeto especificado al final de <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-135">Adds the specified object to the end of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3e9-136">El valor de <paramref name="value" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-136">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4a3e9-137">Se inmoviliza <see cref="T:System.Windows.FreezableCollection`1" /> (el valor de su propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> es <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-137">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="freezableCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-138">Quita todos los elementos de la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-138">Removes all elements from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt; Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.FreezableCollection`1&lt;!T&gt; Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As FreezableCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt; ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="freezableCollection.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-139">Crea un clon modificable de la colección <see cref="T:System.Windows.FreezableCollection`1" /> y su contenido, y hace copias profundas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-139">Creates a modifiable clone of this <see cref="T:System.Windows.FreezableCollection`1" /> and its contents, making deep copies.</span>
          </span>
          <span data-ttu-id="4a3e9-140">Si esta colección (o su contenido) tienen propiedades de dependencia animadas, se copia el valor base de la propiedad, no su valor animado actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-140">If this collection (or its contents) has animated dependency properties, the property's base value is copied, not its current animated value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3e9-141">Una copia modificable de esta colección y su contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-141">A modifiable copy of this collection and its contents.</span>
          </span>
          <span data-ttu-id="4a3e9-142">El valor de <see cref="P:System.Windows.Freezable.IsFrozen" /> de la copia es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-142">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> value is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-143">Este método reemplaza el heredado <xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=nameWithType> método con una implementación fuertemente tipada para mayor comodidad.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-143">This method shadows the inherited <xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=nameWithType> method with a strongly typed implementation for convenience.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.CloneCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="4a3e9-144">Colección <see cref="T:System.Windows.FreezableCollection`1" /> que se va a copiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-144">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-145">Convierte esta instancia en un clon (copia profunda) del objeto <see cref="T:System.Windows.FreezableCollection`1" /> especificado con los valores de propiedades base (no animados).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-145">Makes this instance a clone (deep copy) of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-146">Este método es invocado por el <xref:System.Windows.FreezableCollection%601.Clone%2A> método y no debe llamarse directamente desde el código, excepto cuando se llama a la implementación base mientras se invalida este método.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-146">This method is called by the <xref:System.Windows.FreezableCollection%601.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="4a3e9-147">Para crear una copia modificable del objeto actual, llame a <xref:System.Windows.FreezableCollection%601.Clone%2A> en lugar de llamar a este método directamente.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-147">To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.Clone%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4a3e9-148">Consulte la <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> página para obtener información acerca de cuándo se debe reemplazar este método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a3e9-148">See the <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> page for information about when you should override this method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt; CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.FreezableCollection`1&lt;!T&gt; CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As FreezableCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt; ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="freezableCollection.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-149">Crea una copia modificable de este objeto <see cref="T:System.Windows.FreezableCollection`1" /> y su contenido, y hace copias profundas de sus valores actuales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-149">Creates a modifiable copy of this <see cref="T:System.Windows.FreezableCollection`1" /> and its contents, making deep copies of this object's current values.</span>
          </span>
          <span data-ttu-id="4a3e9-150">Si este objeto (o los objetos que contiene) contiene propiedades de dependencia animadas, se copian sus valores animados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-150">If this object (or the objects it contains) contains animated dependency properties, their current animated values are copied.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3e9-151">Un clon modificable de la colección y su contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-151">A modifiable clone of the collection and its contents.</span>
          </span>
          <span data-ttu-id="4a3e9-152">La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true." />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-152">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-153">Este método reemplaza el heredado <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType> método con una implementación fuertemente tipada para mayor comodidad.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-153">This method shadows the inherited <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType> method with a strongly typed implementation for convenience.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Animatable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.CloneCurrentValueCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="4a3e9-154">La clase <see cref="T:System.Windows.FreezableCollection`1" /> que se va a clonar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-154">The <see cref="T:System.Windows.FreezableCollection`1" /> to clone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-155">Convierte esta instancia en un clon modificable (copia profunda) del objeto <see cref="T:System.Windows.FreezableCollection`1" /> especificado utilizando los valores de propiedad actuales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-155">Makes this instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using current property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-156">Este método es invocado por el <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> método y no debe llamarse directamente desde el código, excepto cuando se llama a la implementación base mientras se invalida este método.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-156">This method is called by the <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="4a3e9-157">Para crear una copia modificable del objeto actual, llame a <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> en lugar de llamar a este método directamente.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-157">To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4a3e9-158">Consulte la <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> página para obtener información acerca de cuándo se debe reemplazar este método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a3e9-158">See the <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> page for information about when you should override this method.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="freezableCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a3e9-159">Objeto que se va a buscar en esta colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-159">The object to locate in this collection.</span>
          </span>
          <span data-ttu-id="4a3e9-160">El valor de este objeto puede ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-160">This object may be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-161">Determina si <see cref="T:System.Windows.FreezableCollection`1" /> contiene el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-161">Determines whether this <see cref="T:System.Windows.FreezableCollection`1" /> contains the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3e9-162">
            <see langword="true" /> si el valor está en la colección <see cref="T:System.Windows.FreezableCollection`1" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-162">
              <see langword="true" /> if value is found in the <see cref="T:System.Windows.FreezableCollection`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="freezableCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4a3e9-163">Matriz unidimensional que constituye el destino de los elementos copiados desde <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-163">The one-dimensional array that is the destination of the elements copied from <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4a3e9-164">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-164">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-165">Copia la totalidad de <see cref="T:System.Windows.FreezableCollection`1" /> en una matriz unidimensional compatible, empezando por el índice especificado de la matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-165">Copies the entire <see cref="T:System.Windows.FreezableCollection`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-166">Tenga en cuenta que esta operación realiza una copia superficial.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-166">Note that this operation performs a shallow copy.</span></span> <span data-ttu-id="4a3e9-167">Los elementos se copian en la matriz de destino en el mismo orden en que el enumerador recorre en iteración este <xref:System.Windows.FreezableCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-167">The elements are copied to the target array in the same order in which the enumerator iterates through this <xref:System.Windows.FreezableCollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a3e9-168">El valor de <paramref name="array" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-168">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3e9-169">
            <paramref name="index" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-169">
              <paramref name="index" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3e9-170">El número de elementos de la <see cref="T:System.Windows.FreezableCollection`1" /> de origen es mayor que el espacio disponible desde el índice hasta el final de la <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-170">The number of elements in the source <see cref="T:System.Windows.FreezableCollection`1" /> is greater than the available space from index to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-171">Obtiene el número de elementos que incluye <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-171">Gets the number of elements contained by this <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a3e9-172">El número de elementos que incluye <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-172">The number of elements contained by this <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="freezableCollection.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-173">Crea una nueva instancia de <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-173">Creates a new instance of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3e9-174">La nueva instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-174">The new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-175">No llame a este método directamente (excepto cuando base la llamada en una implementación).</span><span class="sxs-lookup"><span data-stu-id="4a3e9-175">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="4a3e9-176">Este método se llama internamente en <xref:System.Windows.Freezable.CreateInstance%2A>, siempre que una nueva instancia de la <xref:System.Windows.Freezable> se crea.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-176">This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A>, whenever a new instance of the <xref:System.Windows.Freezable> is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a3e9-177">El ejemplo siguiente muestra una implementación típica de <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-177">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4a3e9-178">Cada <see cref="T:System.Windows.Freezable" /> subclase debe implementar este método.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a3e9-178">Every <see cref="T:System.Windows.Freezable" /> subclass must implement this method.</span>
            </span>
            <span data-ttu-id="4a3e9-179">Implementación típica consiste simplemente en llamar al constructor de clase predeterminado y devolver el resultado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a3e9-179">Typical implementation is to simply call the class default constructor and return the result.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="freezableCollection.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <span data-ttu-id="4a3e9-180">
            <see langword="true" /> si el objeto <see cref="T:System.Windows.FreezableCollection`1" /> debe devolver simplemente un valor si se puede inmovilizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-180">
              <see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> should simply return whether it can be frozen.</span>
          </span>
          <span data-ttu-id="4a3e9-181">Es <see langword="false" /> si la instancia de <see cref="T:System.Windows.FreezableCollection`1" /> se debe inmovilizar realmente cuando se llama a este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-181">
              <see langword="false" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> instance should actually freeze itself when this method is called.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-182">Convierte este objeto <see cref="T:System.Windows.FreezableCollection`1" /> en no modificable o determina si se puede convertir en no modificable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-182">Makes this <see cref="T:System.Windows.FreezableCollection`1" /> object unmodifiable or determines whether it can be made unmodifiable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3e9-183">Si el valor de <paramref name="isChecking" /> es <see langword="true" />, este método devuelve <see langword="true" /> si este objeto <see cref="T:System.Windows.FreezableCollection`1" /> se puede convertir en no modificable, o <see langword="false" /> si no se puede convertir en no modificable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-183">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if this <see cref="T:System.Windows.FreezableCollection`1" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
          <span data-ttu-id="4a3e9-184">Si <paramref name="isChecking" /> es <see langword="false" />, este método devuelve <see langword="true" /> si el objeto <see cref="T:System.Windows.FreezableCollection`1" /> especificado ahora es no modificable, o <see langword="false" /> si no se puede convertir en no modificable, con el inconveniente de que se ha iniciado el cambio del estado de inmovilización del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-184">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.FreezableCollection`1" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-185">No llame a este método directamente (excepto cuando base la llamada en una implementación).</span><span class="sxs-lookup"><span data-stu-id="4a3e9-185">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="4a3e9-186">Este método se llama internamente en <xref:System.Windows.Freezable.CanFreeze%2A> (con `isChecking` igual a `true`) y <xref:System.Windows.Freezable.Freeze%2A> (con `isChecking` igual a `false`).</span><span class="sxs-lookup"><span data-stu-id="4a3e9-186">This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4a3e9-187">Para obtener información acerca de cuándo se debe invalidar este método, consulte <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a3e9-187">For information about when to override this method, see <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.GetAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="4a3e9-188">Colección <see cref="T:System.Windows.FreezableCollection`1" /> que se va a copiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-188">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-189">Convierte esta instancia en un clon inmovilizado de la clase <see cref="T:System.Windows.FreezableCollection`1" /> especificada con los valores de propiedad base (no animados).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-189">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-190">Este método es invocado por <xref:System.Windows.Freezable.GetAsFrozen%2A> y no debe llamarse directamente desde el código, excepto cuando se llama a la implementación base mientras se invalida este método.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-190">This method is called by <xref:System.Windows.Freezable.GetAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="4a3e9-191">Para crear una copia inmovilizada del objeto actual, llame a <xref:System.Windows.Freezable.GetAsFrozen%2A> en lugar de llamar a este método directamente.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-191">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4a3e9-192">Para obtener información acerca de cuándo se debe invalidar este método, consulte <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a3e9-192">For information about when to override this method, see <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.GetCurrentValueAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="4a3e9-193">Colección <see cref="T:System.Windows.FreezableCollection`1" /> que se va a copiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-193">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-194">Convierte esta instancia en un clon inmovilizado del valor de <see cref="T:System.Windows.Freezable" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-194">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="4a3e9-195">Si este objeto tiene propiedades de dependencia animadas, se copian sus valores animados actuales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-195">If this object has animated dependency properties, their current animated values are copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-196">Este método es invocado por <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> y no debe llamarse directamente desde el código, excepto cuando se llama a la implementación base mientras se invalida este método.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-196">This method is called by <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="4a3e9-197">Para crear una copia inmovilizada del objeto actual, llame a <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> en lugar de llamar a este método directamente.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-197">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4a3e9-198">Para obtener información acerca de cuándo se debe invalidar este método, consulte <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4a3e9-198">For information about when to override this method, see <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.FreezableCollection`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As FreezableCollection(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.Enumerator" Usage="freezableCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-199">Devuelve un enumerador para la <see cref="T:System.Windows.FreezableCollection`1" /> completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-199">Returns an enumerator for the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3e9-200">Un enumerador del objeto <see cref="T:System.Windows.FreezableCollection`1" /> completo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-200">An enumerator for the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="freezableCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a3e9-201">Objeto que se va a buscar en <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-201">The object to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-202">Busca el objeto especificado y devuelve el índice de base cero de la primera aparición en todo el objeto <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-202">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3e9-203">Índice de base cero de la primera aparición de <paramref name="value" /> en la totalidad de <see cref="T:System.Windows.FreezableCollection`1" />, si se encuentra; en caso contrario, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-203">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Windows.FreezableCollection`1" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit&#xA;override this.Insert : int * 'T -&gt; unit" Usage="freezableCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="4a3e9-204">Índice basado en cero en el que debe insertarse <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-204">The zero-based index at which <paramref name="value" /> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4a3e9-205">Objeto que se va a insertar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-205">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-206">Inserta el objeto especificado en <see cref="T:System.Windows.FreezableCollection`1" /> en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-206">Inserts the specified object into the <see cref="T:System.Windows.FreezableCollection`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3e9-207">El valor de <paramref name="value" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-207">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3e9-208">
            <paramref name="index" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-208">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="4a3e9-209">\- o -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-209">\- or -</span>
          </span>
          <span data-ttu-id="4a3e9-210">
            <paramref name="index" /> es mayor que <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-210">
              <paramref name="index" /> is greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4a3e9-211">Se inmoviliza <see cref="T:System.Windows.FreezableCollection`1" /> (el valor de su propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> es <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-211">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="4a3e9-212">Índice de base cero del elemento que se va a obtener o establecer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-212">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-213">Obtiene o establece el elemento en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-213">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a3e9-214">Elemento en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-214">The element at the specified index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3e9-215">
            <paramref name="index" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-215">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="4a3e9-216">\- o -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-216">\- or -</span>
          </span>
          <span data-ttu-id="4a3e9-217">
            <paramref name="index" /> es igual o mayor que <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-217">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4a3e9-218">El valor del elemento especificado es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-218">The specified element is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4a3e9-219">Intentar establecer un elemento en la colección cuando ésta se inmoviliza (el valor de su propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> es <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-219">Attempting to set an item in the collection when the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="freezableCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a3e9-220">Objeto que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-220">The object to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-221">Quita la primera aparición del objeto especificado de <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-221">Removes the first occurrence of the specified object from the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3e9-222">
            <see langword="true" /> si se encontró una aparición de <paramref name="value" /> en la colección y se quitó; <see langword="false" /> si no se encontró <paramref name="value" /> en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-222">
              <see langword="true" /> if an occurrence of <paramref name="value" /> was found in the collection and removed; <see langword="false" /> if <paramref name="value" /> could not be found in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4a3e9-223">Se inmoviliza <see cref="T:System.Windows.FreezableCollection`1" /> (el valor de su propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> es <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-223">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="freezableCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="4a3e9-224">Índice de base cero del objeto que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-224">The zero-based index of the object to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-225">Quita el objeto del índice de base cero especificado de <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-225">Removes the object at the specified zero-based index of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4a3e9-226">
            <paramref name="index" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-226">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="4a3e9-227">\- o -</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-227">\- or -</span>
          </span>
          <span data-ttu-id="4a3e9-228">
            <paramref name="index" /> es mayor que <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-228">
              <paramref name="index" /> is greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4a3e9-229">Se inmoviliza <see cref="T:System.Windows.FreezableCollection`1" /> (el valor de su propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> es <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-229">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;T&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-230">Para una descripción de este miembro, vea <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-230">For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a3e9-231">Es <see langword="true" /> si la interfaz <see cref="T:System.Windows.FreezableCollection`1" /> es de solo lectura; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-231">
              <see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-232">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-232">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-233">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-233">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-234">Para una descripción de este miembro, vea <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-234">For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3e9-235">Objeto <see cref="T:System.Collections.Generic.IEnumerator`1" /> que puede usarse para recorrer en iteración la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-235">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-236">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-236">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-237">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-237">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="4a3e9-238">
            <see cref="T:System.Array" /> de base cero que recibe los elementos copiados de <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-238">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4a3e9-239">Posición inicial del objeto <see cref="T:System.Array" /> especificado que recibe el contenido copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-239">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-240">Para una descripción de este miembro, vea <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-240">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-241">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-241">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-242">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-242">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-243">Para una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-243">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a3e9-244">Es <see langword="true" /> si el acceso a <see cref="T:System.Windows.FreezableCollection`1" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-244">
              <see langword="true" /> if access to the <see cref="T:System.Windows.FreezableCollection`1" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-245">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-245">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-246">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-246">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-247">Para una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-247">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a3e9-248">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-248">An object that can be used to synchronize access to the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-249">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-249">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-250">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-250">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-251">Para una descripción de este miembro, vea <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-251">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3e9-252">Objeto <see cref="T:System.Collections.IEnumerator" /> que puede usarse para recorrer en iteración la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-252">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-253">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-253">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-254">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-254">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a3e9-255">
            <see cref="T:System.Object" /> que se va a agregar a <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-255">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-256">Para una descripción de este miembro, vea <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-256">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3e9-257">Posición en la que se insertó el nuevo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-257">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-258">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-258">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-259">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-259">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Add(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a3e9-260">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-260">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-261">Para una descripción de este miembro, vea <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-261">For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3e9-262">Es <see langword="true" /> si <see cref="T:System.Object" /> se encuentra en <see cref="T:System.Windows.FreezableCollection`1" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-262">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.FreezableCollection`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-263">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-263">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-264">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-264">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a3e9-265">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-265">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-266">Para una descripción de este miembro, vea <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-266">For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a3e9-267">Devuelve el índice de <paramref name="value" /> si se encuentra en la lista; de lo contrario, devuelve -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-267">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-268">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-268">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-269">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-269">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.IndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="4a3e9-270">Índice de base cero donde se va a insertar el objeto <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-270">The zero-based index at which to insert the <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4a3e9-271">Objeto <see cref="T:System.Object" /> que se va a insertar en <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-271">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-272">Para una descripción de este miembro, vea <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-272">For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-273">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-273">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-274">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-274">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-275">Para una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-275">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a3e9-276">Es <see langword="true" /> si la interfaz <see cref="T:System.Windows.FreezableCollection`1" /> tiene un tamaño fijo; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-276">
              <see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-277">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-277">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-278">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-278">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-279">Para una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-279">For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a3e9-280">Es <see langword="true" /> si la interfaz <see cref="T:System.Windows.FreezableCollection`1" /> es de solo lectura; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-280">
              <see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-281">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-281">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-282">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-282">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="4a3e9-283">Índice de base cero del elemento que se va a obtener o establecer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-283">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-284">Para una descripción de este miembro, vea <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-284">For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a3e9-285">Elemento en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-285">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-286">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-286">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-287">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-287">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FreezableCollection`1.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4a3e9-288">
            <see cref="T:System.Object" /> que se va a quitar de <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-288">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a3e9-289">Para una descripción de este miembro, vea <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-289">For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a3e9-290">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-290">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-291">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-291">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
      <MemberSignature Language="C#" Value="event System.Collections.Specialized.NotifyCollectionChangedEventHandler System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Collections.Specialized.NotifyCollectionChangedEventHandler System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FreezableCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event CollectionChanged As NotifyCollectionChangedEventHandler Implements System.Collections.Specialized.INotifyCollectionChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NotifyCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-292">Para obtener una descripción de este miembro, vea <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-292">For a description of this members, see <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="4a3e9-293">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-293">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-294">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.Collections.Specialized.INotifyCollectionChanged>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-294">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Specialized.INotifyCollectionChanged> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FreezableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a3e9-295">Para obtener una descripción de este miembro, vea <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a3e9-295">For a description of this members, see <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="4a3e9-296">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-296">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4a3e9-297">Solo se puede utilizar cuando la instancia de <xref:System.Windows.FreezableCollection%601> se convierte en una interfaz <xref:System.ComponentModel.INotifyPropertyChanged>.</span><span class="sxs-lookup"><span data-stu-id="4a3e9-297">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.ComponentModel.INotifyPropertyChanged> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
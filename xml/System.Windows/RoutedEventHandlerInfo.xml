<Type Name="RoutedEventHandlerInfo" FullName="System.Windows.RoutedEventHandlerInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f74644efad2a13b277f40af42960e2dac3d20b9" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64184899" /></Metadata><TypeSignature Language="C#" Value="public struct RoutedEventHandlerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit RoutedEventHandlerInfo extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedEventHandlerInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure RoutedEventHandlerInfo" />
  <TypeSignature Language="C++ CLI" Value="public value class RoutedEventHandlerInfo" />
  <TypeSignature Language="F#" Value="type RoutedEventHandlerInfo = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4a9aa-101">Proporciona información de control especial para indicar a los agentes de escucha de eventos si deben invocarse determinados controladores.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-101">Provides special handling information to inform event listeners whether specific handlers should be invoked.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a9aa-102">Determina si los objetos son equivalentes.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-102">Determines whether objects are equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEventHandlerInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="routedEventHandlerInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4a9aa-103">Objeto que se va a comparar con el objeto <see cref="T:System.Windows.RoutedEventHandlerInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-103">The object to compare to the current <see cref="T:System.Windows.RoutedEventHandlerInfo" />.</span></span></param>
        <summary><span data-ttu-id="4a9aa-104">Determina si el objeto especificado equivale al objeto <see cref="T:System.Windows.RoutedEventHandlerInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-104">Determines whether the specified object is equivalent to the current <see cref="T:System.Windows.RoutedEventHandlerInfo" />.</span></span></summary>
        <returns><span data-ttu-id="4a9aa-105">Es <see langword="true" /> si el objeto especificado equivale al objeto <see cref="T:System.Windows.RoutedEventHandlerInfo" /> actual; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-105"><see langword="true" /> if the specified object is equivalent to the current <see cref="T:System.Windows.RoutedEventHandlerInfo" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.RoutedEventHandlerInfo handlerInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.RoutedEventHandlerInfo handlerInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEventHandlerInfo.Equals(System.Windows.RoutedEventHandlerInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (handlerInfo As RoutedEventHandlerInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::RoutedEventHandlerInfo handlerInfo);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.RoutedEventHandlerInfo -&gt; bool" Usage="routedEventHandlerInfo.Equals handlerInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handlerInfo" Type="System.Windows.RoutedEventHandlerInfo" />
      </Parameters>
      <Docs>
        <param name="handlerInfo"><span data-ttu-id="4a9aa-106"><see cref="T:System.Windows.RoutedEventHandlerInfo" /> que se va a comparar con el <see cref="T:System.Windows.RoutedEventHandlerInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-106">The <see cref="T:System.Windows.RoutedEventHandlerInfo" /> to compare to the current <see cref="T:System.Windows.RoutedEventHandlerInfo" />.</span></span></param>
        <summary><span data-ttu-id="4a9aa-107">Determina si el objeto <see cref="T:System.Windows.RoutedEventHandlerInfo" /> especificado equivale al objeto <see cref="T:System.Windows.RoutedEventHandlerInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-107">Determines whether the specified <see cref="T:System.Windows.RoutedEventHandlerInfo" /> is equivalent to the current <see cref="T:System.Windows.RoutedEventHandlerInfo" />.</span></span></summary>
        <returns><span data-ttu-id="4a9aa-108">Es <see langword="true" /> si el objeto <see cref="T:System.Windows.RoutedEventHandlerInfo" /> especificado equivale al objeto <see cref="T:System.Windows.RoutedEventHandlerInfo" /> actual; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-108"><see langword="true" /> if the specified <see cref="T:System.Windows.RoutedEventHandlerInfo" /> is equivalent to the current <see cref="T:System.Windows.RoutedEventHandlerInfo" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a9aa-109">Esta implementación se basa en la equivalencia de valor de la <xref:System.Windows.RoutedEventHandlerInfo.Handler%2A> <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-109">This implementation relies on value equivalence of the <xref:System.Windows.RoutedEventHandlerInfo.Handler%2A><xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> properties.</span></span> <span data-ttu-id="4a9aa-110">El <xref:System.Windows.RoutedEventHandlerInfo.Handler%2A> propiedad es una referencia al delegado.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-110">The <xref:System.Windows.RoutedEventHandlerInfo.Handler%2A> property is a delegate reference.</span></span> <span data-ttu-id="4a9aa-111">Por lo tanto, la equivalencia implica una referencia duplicada para el mismo controlador.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-111">Therefore, equivalence implies a duplicate reference to the same handler.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEventHandlerInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="routedEventHandlerInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a9aa-112">Devuelve un código hash para el objeto <see cref="T:System.Windows.RoutedEventHandlerInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-112">Returns a hash code for the current <see cref="T:System.Windows.RoutedEventHandlerInfo" />.</span></span></summary>
        <returns><span data-ttu-id="4a9aa-113">Código hash para el objeto <see cref="T:System.Windows.RoutedEventHandlerInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-113">A hash code for the current <see cref="T:System.Windows.RoutedEventHandlerInfo" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public Delegate Handler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Delegate Handler" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEventHandlerInfo.Handler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handler As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Delegate ^ Handler { Delegate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Handler : Delegate" Usage="System.Windows.RoutedEventHandlerInfo.Handler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a9aa-114">Obtiene el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-114">Gets the event handler.</span></span></summary>
        <value><span data-ttu-id="4a9aa-115">Controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-115">The event handler.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InvokeHandledEventsToo">
      <MemberSignature Language="C#" Value="public bool InvokeHandledEventsToo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeHandledEventsToo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InvokeHandledEventsToo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeHandledEventsToo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InvokeHandledEventsToo : bool" Usage="System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a9aa-116">Obtiene un valor que indica si se invoca el controlador de eventos cuando se marca el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-116">Gets a value that indicates whether the event handler is invoked when the routed event is marked handled.</span></span></summary>
        <value><span data-ttu-id="4a9aa-117">Es <see langword="true" /> si se invoca el controlador de eventos cuando se marca el evento enrutado como controlado; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-117"><see langword="true" /> if the event handler is invoked when the routed event is marked handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.RoutedEventHandlerInfo handlerInfo1, System.Windows.RoutedEventHandlerInfo handlerInfo2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.RoutedEventHandlerInfo handlerInfo1, valuetype System.Windows.RoutedEventHandlerInfo handlerInfo2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEventHandlerInfo.op_Equality(System.Windows.RoutedEventHandlerInfo,System.Windows.RoutedEventHandlerInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (handlerInfo1 As RoutedEventHandlerInfo, handlerInfo2 As RoutedEventHandlerInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::RoutedEventHandlerInfo handlerInfo1, System::Windows::RoutedEventHandlerInfo handlerInfo2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.RoutedEventHandlerInfo * System.Windows.RoutedEventHandlerInfo -&gt; bool" Usage="handlerInfo1 = handlerInfo2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handlerInfo1" Type="System.Windows.RoutedEventHandlerInfo" />
        <Parameter Name="handlerInfo2" Type="System.Windows.RoutedEventHandlerInfo" />
      </Parameters>
      <Docs>
        <param name="handlerInfo1"><span data-ttu-id="4a9aa-118">Primer objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-118">The first object to compare.</span></span></param>
        <param name="handlerInfo2"><span data-ttu-id="4a9aa-119">Segundo objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-119">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="4a9aa-120">Determina si los objetos especificados son equivalentes.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-120">Determines whether the specified objects are equivalent.</span></span></summary>
        <returns><span data-ttu-id="4a9aa-121">Es <see langword="true" /> si los objetos son equivalentes; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-121"><see langword="true" /> if the objects are equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.RoutedEventHandlerInfo handlerInfo1, System.Windows.RoutedEventHandlerInfo handlerInfo2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.RoutedEventHandlerInfo handlerInfo1, valuetype System.Windows.RoutedEventHandlerInfo handlerInfo2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEventHandlerInfo.op_Inequality(System.Windows.RoutedEventHandlerInfo,System.Windows.RoutedEventHandlerInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (handlerInfo1 As RoutedEventHandlerInfo, handlerInfo2 As RoutedEventHandlerInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::RoutedEventHandlerInfo handlerInfo1, System::Windows::RoutedEventHandlerInfo handlerInfo2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.RoutedEventHandlerInfo * System.Windows.RoutedEventHandlerInfo -&gt; bool" Usage="System.Windows.RoutedEventHandlerInfo.op_Inequality (handlerInfo1, handlerInfo2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handlerInfo1" Type="System.Windows.RoutedEventHandlerInfo" />
        <Parameter Name="handlerInfo2" Type="System.Windows.RoutedEventHandlerInfo" />
      </Parameters>
      <Docs>
        <param name="handlerInfo1"><span data-ttu-id="4a9aa-122">Primer objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-122">The first object to compare.</span></span></param>
        <param name="handlerInfo2"><span data-ttu-id="4a9aa-123">Segundo objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-123">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="4a9aa-124">Determina si los objetos especificados no son equivalentes.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-124">Determines whether the specified objects are not equivalent.</span></span></summary>
        <returns><span data-ttu-id="4a9aa-125">Es <see langword="true" /> si los objetos no son equivalentes; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a9aa-125"><see langword="true" /> if the objects are not equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
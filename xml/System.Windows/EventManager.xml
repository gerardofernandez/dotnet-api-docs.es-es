<Type Name="EventManager" FullName="System.Windows.EventManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c07ba11c7438326eddb5331a443033c7ee73acb9" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39844488" /></Metadata><TypeSignature Language="C#" Value="public static class EventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class EventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventManager abstract sealed" />
  <TypeSignature Language="F#" Value="type EventManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d61fb-101">Proporciona métodos de utilidad relacionados con eventos que registran eventos enrutados para los propietarios de la clase y agregan controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="d61fb-101">Provides event-related utility methods that register routed events for class owners and add class handlers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d61fb-102">Esta clase se usa con más frecuencia para registrar un evento enrutado de nuevo, con <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="d61fb-102">This class is most commonly used to register a new routed event, with <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span>  
  
 <span data-ttu-id="d61fb-103">El segundo más comunes [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] uso es <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="d61fb-103">The second most common [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] usage is <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span> <span data-ttu-id="d61fb-104">Utilice este método para habilitar el control de clases de un evento enrutado en la clase o un evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="d61fb-104">You use this method to enable class handling of a routed event on the class, or an attached event.</span></span> <span data-ttu-id="d61fb-105">Para obtener más información, consulte [Marcar eventos enrutados como controlados y control de clases](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="d61fb-105">For details, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d61fb-106">En el ejemplo siguiente se muestra cómo utilizar esta clase para registrar un nuevo evento enrutado como un miembro de clase, junto con la técnica de "contenedor" de evento enrutado de invalidación de agregar y quitar implementaciones para un [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] eventos.</span><span class="sxs-lookup"><span data-stu-id="d61fb-106">The following example show how to use this class to register a new routed event as a class member, along with the routed event "wrapper" technique of overriding the add and remove implementations for a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event.</span></span>  
  
 [!code-csharp[DPCustom#EventManagerClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#eventmanagerclass)]
 [!code-vb[DPCustom#EventManagerClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#eventmanagerclass)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRoutedEvents">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent[] GetRoutedEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent[] GetRoutedEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.GetRoutedEvents" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRoutedEvents () As RoutedEvent()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Windows::RoutedEvent ^&gt; ^ GetRoutedEvents();" />
      <MemberSignature Language="F#" Value="static member GetRoutedEvents : unit -&gt; System.Windows.RoutedEvent[]" Usage="System.Windows.EventManager.GetRoutedEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d61fb-107">Devuelve los identificadores de los eventos enrutados registrados en el sistema de eventos.</span><span class="sxs-lookup"><span data-stu-id="d61fb-107">Returns identifiers for routed events that have been registered to the event system.</span></span></summary>
        <returns><span data-ttu-id="d61fb-108">Matriz de tipo <see cref="T:System.Windows.RoutedEvent" /> que contiene los objetos registrados.</span><span class="sxs-lookup"><span data-stu-id="d61fb-108">An array of type <see cref="T:System.Windows.RoutedEvent" /> that contains the registered objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d61fb-109">Más <xref:System.Windows.RoutedEvent> objetos se pueden registrar más adelante.</span><span class="sxs-lookup"><span data-stu-id="d61fb-109">More <xref:System.Windows.RoutedEvent> objects can be registered later.</span></span> <span data-ttu-id="d61fb-110">Este método obtiene una instantánea y la colección de eventos enrutados es grabable en toda la duración de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d61fb-110">This method gets a snapshot and the collection of routed events is writeable throughout an application's lifetime.</span></span> <span data-ttu-id="d61fb-111">La colección devuelta podría ser bastante grande.</span><span class="sxs-lookup"><span data-stu-id="d61fb-111">The collection returned might be quite large.</span></span> <span data-ttu-id="d61fb-112">Simplemente contar los eventos que forman parte de la [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], es el número de colecciones en cientos alta.</span><span class="sxs-lookup"><span data-stu-id="d61fb-112">Even just counting the events that are part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], the collection count is in the high hundreds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoutedEventsForOwner">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent[] GetRoutedEventsForOwner (Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent[] GetRoutedEventsForOwner(class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRoutedEventsForOwner (ownerType As Type) As RoutedEvent()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Windows::RoutedEvent ^&gt; ^ GetRoutedEventsForOwner(Type ^ ownerType);" />
      <MemberSignature Language="F#" Value="static member GetRoutedEventsForOwner : Type -&gt; System.Windows.RoutedEvent[]" Usage="System.Windows.EventManager.GetRoutedEventsForOwner ownerType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ownerType"><span data-ttu-id="d61fb-113">Tipo con el que se va a iniciar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="d61fb-113">The type to start the search with.</span></span> <span data-ttu-id="d61fb-114">Las clases base se incluyen en la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="d61fb-114">Base classes are included in the search.</span></span></param>
        <summary><span data-ttu-id="d61fb-115">Busca eventos en todos los identificadores de eventos enrutados con el tipo de propietario proporcionado.</span><span class="sxs-lookup"><span data-stu-id="d61fb-115">Finds all routed event identifiers for events that are registered with the provided owner type.</span></span></summary>
        <returns><span data-ttu-id="d61fb-116">Es una matriz de identificadores de eventos enrutados coincidentes si se encuentra cualquier coincidencia; de lo contrario, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d61fb-116">An array of matching routed event identifiers if any match is found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClassHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d61fb-117">Registra un controlador de clase de un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="d61fb-117">Registers a class handler for a particular routed event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClassHandler">
      <MemberSignature Language="C#" Value="public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassHandler(class System.Type classType, class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassHandler(Type ^ classType, System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="static member RegisterClassHandler : Type * System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="System.Windows.EventManager.RegisterClassHandler (classType, routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="classType"><span data-ttu-id="d61fb-118">Tipo de la clase que declara el control de clase.</span><span class="sxs-lookup"><span data-stu-id="d61fb-118">The type of the class that is declaring class handling.</span></span></param>
        <param name="routedEvent"><span data-ttu-id="d61fb-119">Identificador de eventos enrutados del evento que se va a controlar.</span><span class="sxs-lookup"><span data-stu-id="d61fb-119">The routed event identifier of the event to handle.</span></span></param>
        <param name="handler"><span data-ttu-id="d61fb-120">Referencia a la implementación del controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="d61fb-120">A reference to the class handler implementation.</span></span></param>
        <summary><span data-ttu-id="d61fb-121">Registra un controlador de clase de un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="d61fb-121">Registers a class handler for a particular routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d61fb-122">Control de clases es una característica que está disponible para los eventos enrutados, incluidos los eventos asociados que se implementan con el respaldo de eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="d61fb-122">Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</span></span> <span data-ttu-id="d61fb-123">Un controlador de clase es como un controlador estático que existe para todas las instancias de la clase.</span><span class="sxs-lookup"><span data-stu-id="d61fb-123">A class handler is like a static handler that exists for all instances of the class.</span></span> <span data-ttu-id="d61fb-124">Dado que el controlador es estático, no se puede cambiar las propiedades de instancia directamente con un controlador de clase, pero puede tener acceso a las instancias a través de la `sender` parámetro o los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="d61fb-124">Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the `sender` parameter and/or the event data.</span></span>  
  
 <span data-ttu-id="d61fb-125">Los controladores de clase se invocan antes que los controladores de instancia.</span><span class="sxs-lookup"><span data-stu-id="d61fb-125">Class handlers are invoked before instance handlers.</span></span> <span data-ttu-id="d61fb-126">Puede implementar un controlador de clase que tenga el comportamiento de marcar el evento como controlado.</span><span class="sxs-lookup"><span data-stu-id="d61fb-126">You can implement a class handler that has the behavior of marking the event as handled.</span></span> <span data-ttu-id="d61fb-127">Por lo tanto, no se invocan controladores de instancia para un evento controlado de clase, a menos que los controladores de instancia se registren específicamente para los eventos controlados.</span><span class="sxs-lookup"><span data-stu-id="d61fb-127">Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</span></span>  
  
 <span data-ttu-id="d61fb-128">Muchos de los [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] eventos de elementos base proporcionan métodos virtuales de control de clases.</span><span class="sxs-lookup"><span data-stu-id="d61fb-128">Many of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] base element events provide class handling virtual methods.</span></span> <span data-ttu-id="d61fb-129">Al reemplazar estos métodos en clases que heredan las clases base, puede implementar el control de clase sin llamar a <xref:System.Windows.EventManager.RegisterClassHandler%2A> en constructores estáticos.</span><span class="sxs-lookup"><span data-stu-id="d61fb-129">By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <xref:System.Windows.EventManager.RegisterClassHandler%2A> in static constructors.</span></span> <span data-ttu-id="d61fb-130">Estos métodos de control de clases normalmente existen para los eventos de entrada y tienen nombres que empiezan por "On" y terminan con el nombre del evento que se está administrado por la clase.</span><span class="sxs-lookup"><span data-stu-id="d61fb-130">These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</span></span>  
  
 <span data-ttu-id="d61fb-131">Para obtener más información sobre el control de clases, vea [Marcar eventos enrutados como controlados y control de clases](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="d61fb-131">For more information about class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="d61fb-132">Con esta firma, los controladores de clase se registrarán para invocar solo como respuesta a eventos no controlados.</span><span class="sxs-lookup"><span data-stu-id="d61fb-132">Using this signature, class handlers will be registered to invoke only in response to unhandled events.</span></span> <span data-ttu-id="d61fb-133">También puede registrar los controladores de clase para invocar incluso si los argumentos de evento están marcado como controlados, mediante el uso de la <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> firma, con `handledEventsToo` establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="d61fb-133">You can also register class handlers to invoke even if the event arguments are marked handled, by using the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature, with `handledEventsToo` set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d61fb-134">En el ejemplo siguiente se agrega un controlador para <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, al llamar a <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="d61fb-134">The following example adds a handler for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, calling <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 [!code-csharp[ClassHandling#StaticAndRegisterClassHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/ClassHandling/CSharp/SDKSampleLibrary/class1.cs#staticandregisterclasshandler)]
 [!code-vb[ClassHandling#StaticAndRegisterClassHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClassHandling/visualbasic/sdksamplelibrary/class1.vb#staticandregisterclasshandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterClassHandler">
      <MemberSignature Language="C#" Value="public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClassHandler(class System.Type classType, class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClassHandler(Type ^ classType, System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="static member RegisterClassHandler : Type * System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="System.Windows.EventManager.RegisterClassHandler (classType, routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classType" Type="System.Type" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="classType"><span data-ttu-id="d61fb-135">Tipo de la clase que declara el control de clase.</span><span class="sxs-lookup"><span data-stu-id="d61fb-135">The type of the class that is declaring class handling.</span></span></param>
        <param name="routedEvent"><span data-ttu-id="d61fb-136">Identificador de eventos enrutados del evento que se va a controlar.</span><span class="sxs-lookup"><span data-stu-id="d61fb-136">The routed event identifier of the event to handle.</span></span></param>
        <param name="handler"><span data-ttu-id="d61fb-137">Referencia a la implementación del controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="d61fb-137">A reference to the class handler implementation.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="d61fb-138">Es <see langword="true" /> para invocar este controlador de clase aunque los argumentos del evento enrutado se hayan marcado como controlados; es <see langword="false" /> para retener el comportamiento predeterminado de no invocar el controlador en ningún evento marcado como controlado.</span><span class="sxs-lookup"><span data-stu-id="d61fb-138"><see langword="true" /> to invoke this class handler even if arguments of the routed event have been marked as handled; <see langword="false" /> to retain the default behavior of not invoking the handler on any marked-handled event.</span></span></param>
        <summary><span data-ttu-id="d61fb-139">Registra un controlador de clase de un evento enrutado concreto, con la opción de controlar los eventos en los que los datos del evento ya estén marcados como controlados.</span><span class="sxs-lookup"><span data-stu-id="d61fb-139">Registers a class handler for a particular routed event, with the option to handle events where event data is already marked handled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d61fb-140">Control de clases es una característica que está disponible para los eventos enrutados, incluidos los eventos asociados que se implementan con el respaldo de eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="d61fb-140">Class handling is a feature that is available for routed events, including attached events that are implemented with routed event backing.</span></span> <span data-ttu-id="d61fb-141">Un controlador de clase es como un controlador estático que existe para todas las instancias de la clase.</span><span class="sxs-lookup"><span data-stu-id="d61fb-141">A class handler is like a static handler that exists for all instances of the class.</span></span> <span data-ttu-id="d61fb-142">Dado que el controlador es estático, no se puede cambiar las propiedades de instancia directamente con un controlador de clase, pero puede tener acceso a las instancias a través de la `sender` parámetro o los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="d61fb-142">Because the handler is static, you cannot change instance properties directly with a class handler, but you can access instances through the `sender` parameter and/or the event data.</span></span>  
  
 <span data-ttu-id="d61fb-143">Los controladores de clase se invocan antes que los controladores de instancia.</span><span class="sxs-lookup"><span data-stu-id="d61fb-143">Class handlers are invoked before instance handlers.</span></span> <span data-ttu-id="d61fb-144">Puede implementar un controlador de clase que tenga el comportamiento de marcar el evento como controlado.</span><span class="sxs-lookup"><span data-stu-id="d61fb-144">You can implement a class handler that has the behavior of marking the event as handled.</span></span> <span data-ttu-id="d61fb-145">Por lo tanto, no se invocan controladores de instancia para un evento controlado de clase, a menos que los controladores de instancia se registren específicamente para los eventos controlados.</span><span class="sxs-lookup"><span data-stu-id="d61fb-145">Therefore, instance handlers for a class-handled event are not invoked unless the instance handlers register specifically for handled events.</span></span>  
  
 <span data-ttu-id="d61fb-146">Muchos de los [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] eventos de elementos base proporcionan métodos virtuales de control de clases.</span><span class="sxs-lookup"><span data-stu-id="d61fb-146">Many of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] base element events provide class handling virtual methods.</span></span> <span data-ttu-id="d61fb-147">Al reemplazar estos métodos en clases que heredan las clases base, puede implementar el control de clase sin llamar a <xref:System.Windows.EventManager.RegisterClassHandler%2A> en constructores estáticos.</span><span class="sxs-lookup"><span data-stu-id="d61fb-147">By overriding these methods in classes that inherit the base classes, you can implement class handling without calling <xref:System.Windows.EventManager.RegisterClassHandler%2A> in static constructors.</span></span> <span data-ttu-id="d61fb-148">Estos métodos de control de clases normalmente existen para los eventos de entrada y tienen nombres que empiezan por "On" y terminan con el nombre del evento que se está administrado por la clase.</span><span class="sxs-lookup"><span data-stu-id="d61fb-148">These class handling methods typically exist for input events and have names that start with "On" and end with the name of the event being class handled.</span></span>  
  
 <span data-ttu-id="d61fb-149">Para obtener más información sobre el control de clases, vea [Marcar eventos enrutados como controlados y control de clases](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="d61fb-149">For more information about class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="d61fb-150">Con esta firma, los controladores de clase se pueden registrar para invocar eventos controlados, estableciendo `handledEventsToo` establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="d61fb-150">Using this signature, class handlers can be registered to invoke upon handled events, by setting `handledEventsToo` set to `true`.</span></span> <span data-ttu-id="d61fb-151">Por lo general, debe hacerlo solo si hay un problema conocido del control que está intentando evitar, como sistema de entrada de control de eventos de mouse o teclado.</span><span class="sxs-lookup"><span data-stu-id="d61fb-151">Generally, you should do this only if there is a known handling issue you are trying to work around, such as input system handling from mouse or keyboard events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterRoutedEvent">
      <MemberSignature Language="C#" Value="public static System.Windows.RoutedEvent RegisterRoutedEvent (string name, System.Windows.RoutingStrategy routingStrategy, Type handlerType, Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.RoutedEvent RegisterRoutedEvent(string name, valuetype System.Windows.RoutingStrategy routingStrategy, class System.Type handlerType, class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::RoutedEvent ^ RegisterRoutedEvent(System::String ^ name, System::Windows::RoutingStrategy routingStrategy, Type ^ handlerType, Type ^ ownerType);" />
      <MemberSignature Language="F#" Value="static member RegisterRoutedEvent : string * System.Windows.RoutingStrategy * Type * Type -&gt; System.Windows.RoutedEvent" Usage="System.Windows.EventManager.RegisterRoutedEvent (name, routingStrategy, handlerType, ownerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="routingStrategy" Type="System.Windows.RoutingStrategy" />
        <Parameter Name="handlerType" Type="System.Type" />
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d61fb-152">Nombre del evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="d61fb-152">The name of the routed event.</span></span> <span data-ttu-id="d61fb-153">El nombre debe ser único en el tipo de propietario y no puede ser <see langword="null" /> ni una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="d61fb-153">The name must be unique within the owner type and cannot be <see langword="null" /> or an empty string.</span></span></param>
        <param name="routingStrategy"><span data-ttu-id="d61fb-154">Estrategia de enrutamiento del evento como valor de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="d61fb-154">The routing strategy of the event as a value of the enumeration.</span></span></param>
        <param name="handlerType"><span data-ttu-id="d61fb-155">Tipo del controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="d61fb-155">The type of the event handler.</span></span> <span data-ttu-id="d61fb-156">Se debe tratar de un tipo de delegado y no puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d61fb-156">This must be a delegate type and cannot be <see langword="null" />.</span></span></param>
        <param name="ownerType"><span data-ttu-id="d61fb-157">Tipo de clase de propietario del evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="d61fb-157">The owner class type of the routed event.</span></span> <span data-ttu-id="d61fb-158">Su valor no puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d61fb-158">This cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d61fb-159">Registra un nuevo evento enrutado en el sistema de eventos del [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="d61fb-159">Registers a new routed event with the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] event system.</span></span></summary>
        <returns><span data-ttu-id="d61fb-160">Identificador del evento enrutado recién registrado.</span><span class="sxs-lookup"><span data-stu-id="d61fb-160">The identifier for the newly registered routed event.</span></span> <span data-ttu-id="d61fb-161">Este objeto de identificador puede almacenarse como un campo estático en una clase y, a continuación, usarse como parámetro para los métodos que asocian controladores al evento.</span><span class="sxs-lookup"><span data-stu-id="d61fb-161">This identifier object can now be stored as a static field in a class and then used as a parameter for methods that attach handlers to the event.</span></span> <span data-ttu-id="d61fb-162">El identificador del evento enrutado también se usa para otras [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] del sistema de eventos.</span><span class="sxs-lookup"><span data-stu-id="d61fb-162">The routed event identifier is also used for other event system [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d61fb-163">Utilice el valor devuelto de este método para crear la declaración estática de un único <xref:System.Windows.RoutedEvent> campo identificador.</span><span class="sxs-lookup"><span data-stu-id="d61fb-163">Use the return value of this method to create the static declaration for a unique <xref:System.Windows.RoutedEvent> identifier field.</span></span> <span data-ttu-id="d61fb-164">Este campo debe almacenarse en el tipo de propietario.</span><span class="sxs-lookup"><span data-stu-id="d61fb-164">This field should be stored within the owner type.</span></span>  
  
 <span data-ttu-id="d61fb-165">Hay un número considerable de las convenciones y procedimientos recomendados relacionados con los eventos enrutados cómo deberían denominados, registrados y expone en una clase.</span><span class="sxs-lookup"><span data-stu-id="d61fb-165">There are a considerable number of conventions and best practices associated with how routed events should be named, registered, and exposed in a class.</span></span> <span data-ttu-id="d61fb-166">Para obtener más información, consulte [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d61fb-166">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="VisualStateManager" FullName="System.Windows.VisualStateManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fdf6939baf9f6829fba034b5c7ae0428da81c32f" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59503572" /></Metadata><TypeSignature Language="C#" Value="public class VisualStateManager : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateManager extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateManager" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateManager&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateManager : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualStateManager = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="63b09-101">Administra estados y la lógica para la transición entre estados de los controles.</span><span class="sxs-lookup"><span data-stu-id="63b09-101">Manages states and the logic for transitioning between states for controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63b09-102">El <xref:System.Windows.VisualStateManager> le permite especificar los Estados para un control, la apariencia de un control cuando se encuentra en un estado determinado, y cuando un control cambia de estado.</span><span class="sxs-lookup"><span data-stu-id="63b09-102">The <xref:System.Windows.VisualStateManager> enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states.</span></span> <span data-ttu-id="63b09-103">Por ejemplo, un <xref:System.Windows.Controls.Button> podría tener un aspecto ligeramente diferente cuando se presiona que cuando no está presionado.</span><span class="sxs-lookup"><span data-stu-id="63b09-103">For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed.</span></span> <span data-ttu-id="63b09-104">Dos Estados que el <xref:System.Windows.Controls.Button> define corresponden a cuando se presiona (`"Pressed"`) y cuando no lo es (`"Normal"`).</span><span class="sxs-lookup"><span data-stu-id="63b09-104">Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`"Pressed"`) and when it is not (`"Normal"`).</span></span> <span data-ttu-id="63b09-105">La apariencia de un control cuando se encuentra en un estado se define mediante un <xref:System.Windows.VisualState>.</span><span class="sxs-lookup"><span data-stu-id="63b09-105">The appearance of a control when it is in a state is defined by a <xref:System.Windows.VisualState>.</span></span> <span data-ttu-id="63b09-106">Un <xref:System.Windows.VisualState> contiene una colección de <xref:System.Windows.Media.Animation.Storyboard> objetos que especifican cómo se cambia la apariencia del control cuando el control está en ese estado.</span><span class="sxs-lookup"><span data-stu-id="63b09-106">A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in that state.</span></span> <span data-ttu-id="63b09-107">Agregar estados visuales a un control estableciendo la `VisualStateManager.VisualStateGroups` propiedad adjunta en el control.</span><span class="sxs-lookup"><span data-stu-id="63b09-107">You add visual states to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control.</span></span> <span data-ttu-id="63b09-108">Cada <xref:System.Windows.VisualStateGroup> contiene una colección de <xref:System.Windows.VisualState> objetos que son mutuamente excluyentes.</span><span class="sxs-lookup"><span data-stu-id="63b09-108">Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects that are mutually exclusive.</span></span> <span data-ttu-id="63b09-109">Es decir, el control siempre está en exactamente un estado de en cada <xref:System.Windows.VisualStateGroup>.</span><span class="sxs-lookup"><span data-stu-id="63b09-109">That is, the control is always in exactly one state of in each <xref:System.Windows.VisualStateGroup>.</span></span>  
  
 <span data-ttu-id="63b09-110">El <xref:System.Windows.VisualStateManager> también le permite especificar cuándo un control entra en un estado específico.</span><span class="sxs-lookup"><span data-stu-id="63b09-110">The <xref:System.Windows.VisualStateManager> also enables you to specify when a control enters a specific state.</span></span> <span data-ttu-id="63b09-111">El método que se debe llamar para cambiar los Estados depende de su escenario.</span><span class="sxs-lookup"><span data-stu-id="63b09-111">The method that you should call to change states depends on your scenario.</span></span> <span data-ttu-id="63b09-112">Si crea un control que utiliza el <xref:System.Windows.VisualStateManager> en su <xref:System.Windows.Controls.ControlTemplate>, llame a la <xref:System.Windows.VisualStateManager.GoToState%2A> método.</span><span class="sxs-lookup"><span data-stu-id="63b09-112">If you create a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>, call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.</span></span> <span data-ttu-id="63b09-113">Para obtener más información sobre cómo crear controles que usan el <xref:System.Windows.VisualStateManager>, consulte [crear un Control que tiene una apariencia personalizable](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span><span class="sxs-lookup"><span data-stu-id="63b09-113">For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span></span> <span data-ttu-id="63b09-114">Si usa el <xref:System.Windows.VisualStateManager> fuera de un <xref:System.Windows.Controls.ControlTemplate> (por ejemplo, si usa un <xref:System.Windows.VisualStateManager> en un <xref:System.Windows.Controls.UserControl> o en un único elemento), llame a la <xref:System.Windows.VisualStateManager.GoToElementState%2A> método.</span><span class="sxs-lookup"><span data-stu-id="63b09-114">If you use the <xref:System.Windows.VisualStateManager> outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element), call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method.</span></span> <span data-ttu-id="63b09-115">En cualquier caso, el <xref:System.Windows.VisualStateManager> lleva a cabo la lógica necesaria para iniciar y detener los guiones gráficos que están asociados con el estado relacionado apropiadamente.</span><span class="sxs-lookup"><span data-stu-id="63b09-115">In either case, the <xref:System.Windows.VisualStateManager> performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state.</span></span> <span data-ttu-id="63b09-116">Por ejemplo, suponga que un control define los Estados, `State1` y `State2`, cada uno de los cuales tiene un guión gráfico asociado con él.</span><span class="sxs-lookup"><span data-stu-id="63b09-116">For example, suppose that a control defines the states, `State1` and `State2`, each of which has a storyboard associated with it.</span></span> <span data-ttu-id="63b09-117">Si el control está en `State1` y pasar `State2` a <xref:System.Windows.VisualStateManager.GoToState%2A> o <xref:System.Windows.VisualStateManager.GoToElementState%2A>, <xref:System.Windows.VisualStateManager> inicia el guión gráfico `State2` y detiene el guión gráfico en `State1`.</span><span class="sxs-lookup"><span data-stu-id="63b09-117">If the control is in `State1` and you pass `State2` to <xref:System.Windows.VisualStateManager.GoToState%2A> or <xref:System.Windows.VisualStateManager.GoToElementState%2A>, the <xref:System.Windows.VisualStateManager> starts the storyboard in `State2` and stops the storyboard in `State1`.</span></span>  
  
 <span data-ttu-id="63b09-118">Los controles que se incluyen con [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] usar el <xref:System.Windows.VisualStateManager> para cambiar los estados visuales.</span><span class="sxs-lookup"><span data-stu-id="63b09-118">Controls that are included with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] use the <xref:System.Windows.VisualStateManager> to change visual states.</span></span> <span data-ttu-id="63b09-119">Cuando creas un <xref:System.Windows.Controls.ControlTemplate> para un control que se incluye con [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], puede agregar <xref:System.Windows.VisualState> objetos para el control <xref:System.Windows.Controls.ControlTemplate> para especificar la apariencia del control en un estado determinado.</span><span class="sxs-lookup"><span data-stu-id="63b09-119">When you create a <xref:System.Windows.Controls.ControlTemplate> for a control that is included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], you can add <xref:System.Windows.VisualState> objects to the control's <xref:System.Windows.Controls.ControlTemplate> to specify the control's appearance in a certain state.</span></span> <span data-ttu-id="63b09-120">Para buscar los nombres de los estados visuales para los controles que se incluyen con [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], consulte [estilos y plantillas](~/docs/framework/wpf/controls/control-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="63b09-120">To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/docs/framework/wpf/controls/control-styles-and-templates.md).</span></span> <span data-ttu-id="63b09-121">Definen controladores de lógica del control realizando la transición entre Estados, por lo que no es necesario hacer nada más que el <xref:System.Windows.VisualState> objetos en el nuevo <xref:System.Windows.Controls.ControlTemplate>.</span><span class="sxs-lookup"><span data-stu-id="63b09-121">The control's logic handles transitioning between states, so you do not need to do anything other than define the <xref:System.Windows.VisualState> objects in the new <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="63b09-122">Para obtener más información sobre cómo crear plantillas de control para los controles existentes, vea [personalizar la apariencia de un Control existente creando una clase ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="63b09-122">For more information about how to create control templates for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 <span data-ttu-id="63b09-123">Si desea implementar su propia lógica para realizar la transición entre Estados, debe heredar de <xref:System.Windows.VisualStateManager>, invalidar el <xref:System.Windows.VisualStateManager.GoToStateCore%2A> método y establezca el <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType> propiedad adjunta en el control que utiliza la lógica personalizada.</span><span class="sxs-lookup"><span data-stu-id="63b09-123">If you want to implement your own logic for transitioning between states, you must inherit from <xref:System.Windows.VisualStateManager>, override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method, and set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType> attached property on the control that uses the custom logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63b09-124">En el ejemplo siguiente se crea un <xref:System.Windows.Shapes.Rectangle> y agrega un <xref:System.Windows.VisualStateGroup> denominado `CommonStates` a la `VisualStateManager.VisualStatesGroups` propiedad adjunta.</span><span class="sxs-lookup"><span data-stu-id="63b09-124">The following example creates a <xref:System.Windows.Shapes.Rectangle> and adds a <xref:System.Windows.VisualStateGroup> named `CommonStates` to the `VisualStateManager.VisualStatesGroups` attached property.</span></span> <span data-ttu-id="63b09-125">El ejemplo se define la `MouseOver` y `Normal` <xref:System.Windows.VisualState> objetos en el `CommonStates` <xref:System.Windows.VisualStateGroup>.</span><span class="sxs-lookup"><span data-stu-id="63b09-125">The example defines the `MouseOver` and `Normal`<xref:System.Windows.VisualState> objects in the `CommonStates`<xref:System.Windows.VisualStateGroup>.</span></span> <span data-ttu-id="63b09-126">Cuando el usuario mueve el puntero del mouse sobre el <xref:System.Windows.Shapes.Rectangle>, cambia de rojo a verde durante medio segundo.</span><span class="sxs-lookup"><span data-stu-id="63b09-126">When the user moves the mouse pointer over the <xref:System.Windows.Shapes.Rectangle>, it changes from red to green over one half second.</span></span> <span data-ttu-id="63b09-127">Cuando el usuario mueve el mouse fuera del rectángulo, el <xref:System.Windows.Controls.Grid> inmediatamente cambios de vuelta a rojo.</span><span class="sxs-lookup"><span data-stu-id="63b09-127">When the user moves the mouse away from the rectangle, the <xref:System.Windows.Controls.Grid> immediately changes back to red.</span></span> <span data-ttu-id="63b09-128">Tenga en cuenta que el `Normal` estado no define una <xref:System.Windows.Media.Animation.Storyboard>.</span><span class="sxs-lookup"><span data-stu-id="63b09-128">Note that the `Normal` state does not define a <xref:System.Windows.Media.Animation.Storyboard>.</span></span> <span data-ttu-id="63b09-129">Un <xref:System.Windows.Media.Animation.Storyboard> no es necesario porque cuando el <xref:System.Windows.Shapes.Rectangle> realiza la transición desde el `MouseOver` estado el `Normal` estado, el <xref:System.Windows.Media.Animation.Storyboard> para `MouseOver` se detiene y la <xref:System.Windows.Media.SolidColorBrush.Color%2A> propiedad para el <xref:System.Windows.Media.SolidColorBrush> devuelve en rojo.</span><span class="sxs-lookup"><span data-stu-id="63b09-129">A <xref:System.Windows.Media.Animation.Storyboard> is not required because when the <xref:System.Windows.Shapes.Rectangle> transitions from the `MouseOver` state to the `Normal` state, the <xref:System.Windows.Media.Animation.Storyboard> for `MouseOver` is stopped and the <xref:System.Windows.Media.SolidColorBrush.Color%2A> property for the <xref:System.Windows.Media.SolidColorBrush> returns to red.</span></span>  
  
 [!code-xaml[VSMCustomControl#VSMNoTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmnotemplate)]  
  
 <span data-ttu-id="63b09-130">El ejemplo siguiente muestra el controlador de eventos que se define en el ejemplo anterior y llama el <xref:System.Windows.VisualStateManager.GoToElementState%2A> método para realizar la transición entre Estados.</span><span class="sxs-lookup"><span data-stu-id="63b09-130">The following example shows the event handler that is defined in the previous example and calls the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to transition between states.</span></span> <span data-ttu-id="63b09-131">Si el rectángulo en el ejemplo anterior formaba parte de un <xref:System.Windows.Controls.ControlTemplate>, el ejemplo tendría que llamar a la <xref:System.Windows.VisualStateManager.GoToState%2A> método.</span><span class="sxs-lookup"><span data-stu-id="63b09-131">If the rectangle in the previous example was part of a <xref:System.Windows.Controls.ControlTemplate>, the example would have to call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.</span></span>  
  
 [!code-csharp[VSMCustomControl#GoToElementState](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#gotoelementstate)]
 [!code-vb[VSMCustomControl#GoToElementState](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#gotoelementstate)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63b09-132">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.VisualStateManager" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-132">Initializes a new instance of the <see cref="T:System.Windows.VisualStateManager" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomVisualStateManager">
      <MemberSignature Language="C#" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="ILAsm" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateManager.CustomVisualStateManager" />
      <MemberSignature Language="VB.NET" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="F#" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" Usage="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63b09-133">Obtiene o establece el objeto <see cref="T:System.Windows.VisualStateManager" /> que realiza la transición entre los estados de un control.</span><span class="sxs-lookup"><span data-stu-id="63b09-133">Gets or sets the <see cref="T:System.Windows.VisualStateManager" /> object that transitions between the states of a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63b09-134">Si <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> es `null`, el <xref:System.Windows.VisualStateManager> utiliza su propia lógica para realizar la transición entre Estados.</span><span class="sxs-lookup"><span data-stu-id="63b09-134">If <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> is `null`, the <xref:System.Windows.VisualStateManager> uses its own logic to transition between states.</span></span> <span data-ttu-id="63b09-135">Si desea implementar su propia lógica para realizar la transición entre Estados, crear una clase que hereda de <xref:System.Windows.VisualStateManager> e invalidar la <xref:System.Windows.VisualStateManager.GoToStateCore%2A> método.</span><span class="sxs-lookup"><span data-stu-id="63b09-135">If you want to implement your own logic for transitioning between states, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method.</span></span> <span data-ttu-id="63b09-136">Para usar la clase personalizada, establezca la <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> propiedad a un objeto del tipo personalizado.</span><span class="sxs-lookup"><span data-stu-id="63b09-136">To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomVisualStateManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomVisualStateManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomVisualStateManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomVisualStateManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomVisualStateManagerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomVisualStateManagerProperty : System.Windows.DependencyProperty" Usage="System.Windows.VisualStateManager.CustomVisualStateManagerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63b09-137">Identifica la propiedad de dependencia <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-137">Identifies the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomVisualStateManager">
      <MemberSignature Language="C#" Value="public static System.Windows.VisualStateManager GetCustomVisualStateManager (System.Windows.FrameworkElement obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.VisualStateManager GetCustomVisualStateManager(class System.Windows.FrameworkElement obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomVisualStateManager (obj As FrameworkElement) As VisualStateManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::VisualStateManager ^ GetCustomVisualStateManager(System::Windows::FrameworkElement ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetCustomVisualStateManager : System.Windows.FrameworkElement -&gt; System.Windows.VisualStateManager" Usage="System.Windows.VisualStateManager.GetCustomVisualStateManager obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.VisualStateManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="63b09-138">Elemento cuya propiedad adjunta <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="63b09-138">The element to get the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property from.</span></span></param>
        <summary><span data-ttu-id="63b09-139">Obtiene la propiedad adjunta <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-139">Gets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</span></span></summary>
        <returns><span data-ttu-id="63b09-140">Administrador de estado visual que realiza la transición entre los estados de un control.</span><span class="sxs-lookup"><span data-stu-id="63b09-140">The visual state manager that transitions between the states of a control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualStateGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.IList GetVisualStateGroups (System.Windows.FrameworkElement obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList GetVisualStateGroups(class System.Windows.FrameworkElement obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVisualStateGroups (obj As FrameworkElement) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ GetVisualStateGroups(System::Windows::FrameworkElement ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetVisualStateGroups : System.Windows.FrameworkElement -&gt; System.Collections.IList" Usage="System.Windows.VisualStateManager.GetVisualStateGroups obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="63b09-141">Elemento cuya propiedad adjunta <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="63b09-141">The element to get the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property from.</span></span></param>
        <summary><span data-ttu-id="63b09-142">Obtiene la propiedad adjunta <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-142">Gets the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property.</span></span></summary>
        <returns><span data-ttu-id="63b09-143">Colección de objetos <see cref="T:System.Windows.VisualStateGroup" /> asociada al objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="63b09-143">The collection of <see cref="T:System.Windows.VisualStateGroup" /> objects that is associated with the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToElementState">
      <MemberSignature Language="C#" Value="public static bool GoToElementState (System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GoToElementState(class System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GoToElementState (stateGroupsRoot As FrameworkElement, stateName As String, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GoToElementState(System::Windows::FrameworkElement ^ stateGroupsRoot, System::String ^ stateName, bool useTransitions);" />
      <MemberSignature Language="F#" Value="static member GoToElementState : System.Windows.FrameworkElement * string * bool -&gt; bool" Usage="System.Windows.VisualStateManager.GoToElementState (stateGroupsRoot, stateName, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stateGroupsRoot"><span data-ttu-id="63b09-144">Elemento raíz que contiene <see cref="T:System.Windows.VisualStateManager" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-144">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span></span></param>
        <param name="stateName"><span data-ttu-id="63b09-145">El estado al que se realiza la transición.</span><span class="sxs-lookup"><span data-stu-id="63b09-145">The state to transition to.</span></span></param>
        <param name="useTransitions"><span data-ttu-id="63b09-146">Es <see langword="true" /> para usar un objeto <see cref="T:System.Windows.VisualTransition" /> en la transición entre estados; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-146"><see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="63b09-147">Realiza la transición del elemento entre dos estados.</span><span class="sxs-lookup"><span data-stu-id="63b09-147">Transitions the element between two states.</span></span> <span data-ttu-id="63b09-148">Utilice este método para la transición de estados definidos por una aplicación, en lugar de definidos por un control.</span><span class="sxs-lookup"><span data-stu-id="63b09-148">Use this method to transition states that are defined by an application, rather than defined by a control.</span></span></summary>
        <returns><span data-ttu-id="63b09-149"><see langword="true" /> si el control ha realizado correctamente la transición al nuevo estado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-149"><see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63b09-150">Llame a la <xref:System.Windows.VisualStateManager.GoToElementState%2A> método cambiar estados en un elemento fuera de un <xref:System.Windows.Controls.ControlTemplate> (por ejemplo, si usa un <xref:System.Windows.VisualStateManager> en un <xref:System.Windows.DataTemplate> o <xref:System.Windows.Window>).</span><span class="sxs-lookup"><span data-stu-id="63b09-150">Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.DataTemplate> or <xref:System.Windows.Window>).</span></span> <span data-ttu-id="63b09-151">Llame a la <xref:System.Windows.VisualStateManager.GoToState%2A> método si va a cambiar estados en un control que usa el <xref:System.Windows.VisualStateManager> en su <xref:System.Windows.Controls.ControlTemplate>.</span><span class="sxs-lookup"><span data-stu-id="63b09-151">Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63b09-152">El ejemplo siguiente crea una aplicación que solicita al usuario que adivine un número entre 1 y 100.</span><span class="sxs-lookup"><span data-stu-id="63b09-152">The following example creates an application that prompts the user to guess a number between 1 and 100.</span></span>  <span data-ttu-id="63b09-153">Cuando el usuario escribe un número, la aplicación indica si el intento es correcto, demasiado alto o demasiado bajo.</span><span class="sxs-lookup"><span data-stu-id="63b09-153">When the user enters a number, the application indicates whether the guess is too high, too low, or correct.</span></span>  <span data-ttu-id="63b09-154">La siguiente [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] crea la interfaz de usuario para la aplicación y define 4 estados: `TooLow`, `TooHigh`, `Correct`, y `Guessing`.</span><span class="sxs-lookup"><span data-stu-id="63b09-154">The following [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] creates the user interface for the application and defines 4 states: `TooLow`, `TooHigh`, `Correct`, and `Guessing`.</span></span> <span data-ttu-id="63b09-155">Cuando se inicia la aplicación, está en el `Guessing` estado.</span><span class="sxs-lookup"><span data-stu-id="63b09-155">When the application begins, it is in the `Guessing` state.</span></span> <span data-ttu-id="63b09-156">.</span><span class="sxs-lookup"><span data-stu-id="63b09-156">.</span></span>  
  
 [!code-xaml[VSMGoToElementState#GoToElementStateXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmgotoelementstate/csharp/mainwindow.xaml#gotoelementstatexaml)]  
  
 <span data-ttu-id="63b09-157">El código siguiente muestra la lógica de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="63b09-157">The following code shows the logic of the application.</span></span>  <span data-ttu-id="63b09-158">Cuando el usuario escribe un número y hace clic en el botón, la aplicación llama a <xref:System.Windows.VisualStateManager.GoToElementState%2A> para realizar la transición a `TooHigh`, `TooLow`, o `Correct` para proporcionar comentarios al usuario sobre la estimación.</span><span class="sxs-lookup"><span data-stu-id="63b09-158">When the user enters a number and clicks the button, the application calls <xref:System.Windows.VisualStateManager.GoToElementState%2A> to transition to `TooHigh`, `TooLow`, or `Correct` to provide feedback to the user about the guess.</span></span>  <span data-ttu-id="63b09-159">Para probar este ejemplo, llamar a la `GenerateNumber` método cuando se inicia la aplicación.</span><span class="sxs-lookup"><span data-stu-id="63b09-159">To try this example, call the `GenerateNumber` method when the application begins.</span></span>  
  
 [!code-csharp[VSMGoToElementState#GoToElementStateCode](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmgotoelementstate/csharp/mainwindow.xaml.cs#gotoelementstatecode)]
 [!code-vb[VSMGoToElementState#GoToElementStateCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmgotoelementstate/visualbasic/mainwindow.xaml.vb#gotoelementstatecode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63b09-160"><paramref name="stateGroupsRoot" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-160"><paramref name="stateGroupsRoot" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="63b09-161">O bien</span><span class="sxs-lookup"><span data-stu-id="63b09-161">-or-</span></span> 
 <span data-ttu-id="63b09-162"><paramref name="stateName" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-162"><paramref name="stateName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GoToState">
      <MemberSignature Language="C#" Value="public static bool GoToState (System.Windows.FrameworkElement control, string stateName, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GoToState(class System.Windows.FrameworkElement control, string stateName, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GoToState (control As FrameworkElement, stateName As String, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GoToState(System::Windows::FrameworkElement ^ control, System::String ^ stateName, bool useTransitions);" />
      <MemberSignature Language="F#" Value="static member GoToState : System.Windows.FrameworkElement * string * bool -&gt; bool" Usage="System.Windows.VisualStateManager.GoToState (control, stateName, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="63b09-163">Control del que se va a realizar la transición entre estados.</span><span class="sxs-lookup"><span data-stu-id="63b09-163">The control to transition between states.</span></span></param>
        <param name="stateName"><span data-ttu-id="63b09-164">El estado al que se realiza la transición.</span><span class="sxs-lookup"><span data-stu-id="63b09-164">The state to transition to.</span></span></param>
        <param name="useTransitions"><span data-ttu-id="63b09-165">Es <see langword="true" /> para usar un objeto <see cref="T:System.Windows.VisualTransition" /> en la transición entre estados; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-165"><see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="63b09-166">Realiza la transición del control entre dos estados.</span><span class="sxs-lookup"><span data-stu-id="63b09-166">Transitions the control between two states.</span></span> <span data-ttu-id="63b09-167">Use este método para pasar de un estado a otro los controles que tengan <see cref="T:System.Windows.Controls.ControlTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-167">Use this method to transition states on control that has a <see cref="T:System.Windows.Controls.ControlTemplate" />.</span></span></summary>
        <returns><span data-ttu-id="63b09-168"><see langword="true" /> si el control ha realizado correctamente la transición al nuevo estado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-168"><see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63b09-169">Llame a la <xref:System.Windows.VisualStateManager.GoToState%2A> método si va a cambiar estados en un control que usa el <xref:System.Windows.VisualStateManager> en su <xref:System.Windows.Controls.ControlTemplate>.</span><span class="sxs-lookup"><span data-stu-id="63b09-169">Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="63b09-170">Llame a la <xref:System.Windows.VisualStateManager.GoToElementState%2A> método cambiar estados en un elemento fuera de un <xref:System.Windows.Controls.ControlTemplate> (por ejemplo, si usa un <xref:System.Windows.VisualStateManager> en un <xref:System.Windows.Controls.UserControl> o en un solo elemento).</span><span class="sxs-lookup"><span data-stu-id="63b09-170">Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63b09-171">En el ejemplo siguiente se muestra un control que utiliza el <xref:System.Windows.VisualStateManager.GoToState%2A> método para realizar la transición entre Estados.</span><span class="sxs-lookup"><span data-stu-id="63b09-171">The following example demonstrates a control that uses the <xref:System.Windows.VisualStateManager.GoToState%2A> method to transition between states.</span></span> <span data-ttu-id="63b09-172">Para el ejemplo completo, vea [crear un Control que tiene una apariencia personalizable](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span><span class="sxs-lookup"><span data-stu-id="63b09-172">For the entire example, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span></span>  
  
 [!code-csharp[VSMCustomControl#UpdateStates](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#updatestates)]
 [!code-vb[VSMCustomControl#UpdateStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#updatestates)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63b09-173"><paramref name="control" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-173"><paramref name="control" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="63b09-174">O bien</span><span class="sxs-lookup"><span data-stu-id="63b09-174">-or-</span></span> 
 <span data-ttu-id="63b09-175"><paramref name="stateName" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-175"><paramref name="stateName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GoToStateCore">
      <MemberSignature Language="C#" Value="protected virtual bool GoToStateCore (System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot, string stateName, System.Windows.VisualStateGroup group, System.Windows.VisualState state, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GoToStateCore(class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot, string stateName, class System.Windows.VisualStateGroup group, class System.Windows.VisualState state, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GoToStateCore (control As FrameworkElement, stateGroupsRoot As FrameworkElement, stateName As String, group As VisualStateGroup, state As VisualState, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GoToStateCore(System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot, System::String ^ stateName, System::Windows::VisualStateGroup ^ group, System::Windows::VisualState ^ state, bool useTransitions);" />
      <MemberSignature Language="F#" Value="abstract member GoToStateCore : System.Windows.FrameworkElement * System.Windows.FrameworkElement * string * System.Windows.VisualStateGroup * System.Windows.VisualState * bool -&gt; bool&#xA;override this.GoToStateCore : System.Windows.FrameworkElement * System.Windows.FrameworkElement * string * System.Windows.VisualStateGroup * System.Windows.VisualState * bool -&gt; bool" Usage="visualStateManager.GoToStateCore (control, stateGroupsRoot, stateName, group, state, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="state" Type="System.Windows.VisualState" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="63b09-176">Control del que se va a realizar la transición entre estados.</span><span class="sxs-lookup"><span data-stu-id="63b09-176">The control to transition between states.</span></span></param>
        <param name="stateGroupsRoot"><span data-ttu-id="63b09-177">Elemento raíz que contiene <see cref="T:System.Windows.VisualStateManager" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-177">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span></span></param>
        <param name="stateName"><span data-ttu-id="63b09-178">Nombre del estado al que se realiza la transición.</span><span class="sxs-lookup"><span data-stu-id="63b09-178">The name of the state to transition to.</span></span></param>
        <param name="group"><span data-ttu-id="63b09-179"><see cref="T:System.Windows.VisualStateGroup" /> al que pertenece el estado.</span><span class="sxs-lookup"><span data-stu-id="63b09-179">The <see cref="T:System.Windows.VisualStateGroup" /> that the state belongs to.</span></span></param>
        <param name="state"><span data-ttu-id="63b09-180">Representación del estado al que se va a realizar la transición.</span><span class="sxs-lookup"><span data-stu-id="63b09-180">The representation of the state to transition to.</span></span></param>
        <param name="useTransitions"><span data-ttu-id="63b09-181">Es <see langword="true" /> para usar un objeto <see cref="T:System.Windows.VisualTransition" /> en la transición entre estados; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-181"><see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="63b09-182">Realiza la transición de un control entre estados.</span><span class="sxs-lookup"><span data-stu-id="63b09-182">Transitions a control between states.</span></span></summary>
        <returns><span data-ttu-id="63b09-183"><see langword="true" /> si el control ha realizado correctamente la transición al nuevo estado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-183"><see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63b09-184">El <xref:System.Windows.VisualStateManager.GoToStateCore%2A> método realiza la lógica necesaria para iniciar y detener los guiones gráficos que están asociados con una transición de forma adecuada.</span><span class="sxs-lookup"><span data-stu-id="63b09-184">The <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition.</span></span> <span data-ttu-id="63b09-185">Cuando llama un control <xref:System.Windows.VisualStateManager.GoToState%2A> para cambiar su estado, el <xref:System.Windows.VisualStateManager> hace lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="63b09-185">When a control calls <xref:System.Windows.VisualStateManager.GoToState%2A> to change its state, the <xref:System.Windows.VisualStateManager> does the following:</span></span>  
  
-   <span data-ttu-id="63b09-186">Primero tiene lugar, si la <xref:System.Windows.VisualState> que está pasando el control tiene un <xref:System.Windows.Media.Animation.Storyboard>, comienza el guión gráfico.</span><span class="sxs-lookup"><span data-stu-id="63b09-186">First, if the <xref:System.Windows.VisualState> that the control is transitioning to has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard begins.</span></span> <span data-ttu-id="63b09-187">A continuación, si la <xref:System.Windows.VisualState> tiene que el control procede de un <xref:System.Windows.Media.Animation.Storyboard>, los extremos de guión gráfico.</span><span class="sxs-lookup"><span data-stu-id="63b09-187">Then, if the <xref:System.Windows.VisualState> that the control is coming from has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard ends.</span></span>  
  
-   <span data-ttu-id="63b09-188">Si el control ya está en el `stateName` estado, <xref:System.Windows.VisualStateManager.GoToState%2A> no realiza ninguna acción y devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="63b09-188">If the control is already in the `stateName` state, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `true`.</span></span>  
  
-   <span data-ttu-id="63b09-189">Si `stateName` no existe en el <xref:System.Windows.Controls.ControlTemplate> de `control`, <xref:System.Windows.VisualStateManager.GoToState%2A> no realiza ninguna acción y devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="63b09-189">If `stateName` does not exist in the <xref:System.Windows.Controls.ControlTemplate> of `control`, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `false`.</span></span>  
  
 <span data-ttu-id="63b09-190">Puede implementar su propia <xref:System.Windows.VisualStateManager> para proporcionar una lógica diferente para la transición entre Estados.</span><span class="sxs-lookup"><span data-stu-id="63b09-190">You can implement your own <xref:System.Windows.VisualStateManager> to provide different logic for transitioning between states.</span></span> <span data-ttu-id="63b09-191">Por ejemplo, puede cambiar la lógica descrita anteriormente, o puede proporcionar lógica para realizar la transición entre los tipos de animación personalizada.</span><span class="sxs-lookup"><span data-stu-id="63b09-191">For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.</span></span>  <span data-ttu-id="63b09-192">Para implementar un <xref:System.Windows.VisualStateManager>, cree una clase que hereda de <xref:System.Windows.VisualStateManager> e invalidar la <xref:System.Windows.VisualStateManager.GoToStateCore%2A> método.</span><span class="sxs-lookup"><span data-stu-id="63b09-192">To implement a <xref:System.Windows.VisualStateManager>, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method.</span></span> <span data-ttu-id="63b09-193">Para usar la clase personalizada, establezca la <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> propiedad a un objeto del tipo personalizado.</span><span class="sxs-lookup"><span data-stu-id="63b09-193">To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseCurrentStateChanged">
      <MemberSignature Language="C#" Value="protected void RaiseCurrentStateChanged (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseCurrentStateChanged(class System.Windows.VisualStateGroup stateGroup, class System.Windows.VisualState oldState, class System.Windows.VisualState newState, class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseCurrentStateChanged (stateGroup As VisualStateGroup, oldState As VisualState, newState As VisualState, control As FrameworkElement, stateGroupsRoot As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseCurrentStateChanged(System::Windows::VisualStateGroup ^ stateGroup, System::Windows::VisualState ^ oldState, System::Windows::VisualState ^ newState, System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot);" />
      <MemberSignature Language="F#" Value="member this.RaiseCurrentStateChanged : System.Windows.VisualStateGroup * System.Windows.VisualState * System.Windows.VisualState * System.Windows.FrameworkElement * System.Windows.FrameworkElement -&gt; unit" Usage="visualStateManager.RaiseCurrentStateChanged (stateGroup, oldState, newState, control, stateGroupsRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroup" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="oldState" Type="System.Windows.VisualState" />
        <Parameter Name="newState" Type="System.Windows.VisualState" />
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="stateGroup"><span data-ttu-id="63b09-194">Objeto en el que se produjo el evento <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-194">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</span></span></param>
        <param name="oldState"><span data-ttu-id="63b09-195">Estado del que el control está realizando la transición.</span><span class="sxs-lookup"><span data-stu-id="63b09-195">The state that the control is transitioning from.</span></span></param>
        <param name="newState"><span data-ttu-id="63b09-196">Estado al que el control está realizando la transición.</span><span class="sxs-lookup"><span data-stu-id="63b09-196">The state that the control is transitioning to.</span></span></param>
        <param name="control"><span data-ttu-id="63b09-197">Control que está realizando la transición entre estados.</span><span class="sxs-lookup"><span data-stu-id="63b09-197">The control that is transitioning states.</span></span></param>
        <param name="stateGroupsRoot"><span data-ttu-id="63b09-198">Elemento raíz que contiene <see cref="T:System.Windows.VisualStateManager" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-198">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span></span></param>
        <summary><span data-ttu-id="63b09-199">Genera el evento <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> en el objeto <see cref="T:System.Windows.VisualStateGroup" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="63b09-199">Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63b09-200">Cuando el <xref:System.Windows.VisualStateGroup> se establece en el <xref:System.Windows.Controls.ControlTemplate> de un control, el `control` parámetro se establece en el control que posee <xref:System.Windows.Controls.ControlTemplate>.</span><span class="sxs-lookup"><span data-stu-id="63b09-200">When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.</span></span>  <span data-ttu-id="63b09-201">Cuando el <xref:System.Windows.VisualStateGroup> se establece en un <xref:System.Windows.FrameworkElement>, `control` es `null` y debe usar el `stateGroupsRoot` parámetro.</span><span class="sxs-lookup"><span data-stu-id="63b09-201">When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63b09-202"><paramref name="stateGroupsRoot" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-202"><paramref name="stateGroupsRoot" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="63b09-203">O bien</span><span class="sxs-lookup"><span data-stu-id="63b09-203">-or-</span></span> 
 <span data-ttu-id="63b09-204"><paramref name="newState" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-204"><paramref name="newState" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="63b09-205">Cuando se reemplaza <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> método para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="63b09-205">When overriding <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RaiseCurrentStateChanging">
      <MemberSignature Language="C#" Value="protected void RaiseCurrentStateChanging (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseCurrentStateChanging(class System.Windows.VisualStateGroup stateGroup, class System.Windows.VisualState oldState, class System.Windows.VisualState newState, class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseCurrentStateChanging (stateGroup As VisualStateGroup, oldState As VisualState, newState As VisualState, control As FrameworkElement, stateGroupsRoot As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseCurrentStateChanging(System::Windows::VisualStateGroup ^ stateGroup, System::Windows::VisualState ^ oldState, System::Windows::VisualState ^ newState, System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot);" />
      <MemberSignature Language="F#" Value="member this.RaiseCurrentStateChanging : System.Windows.VisualStateGroup * System.Windows.VisualState * System.Windows.VisualState * System.Windows.FrameworkElement * System.Windows.FrameworkElement -&gt; unit" Usage="visualStateManager.RaiseCurrentStateChanging (stateGroup, oldState, newState, control, stateGroupsRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroup" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="oldState" Type="System.Windows.VisualState" />
        <Parameter Name="newState" Type="System.Windows.VisualState" />
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="stateGroup"><span data-ttu-id="63b09-206">Objeto en el que se produjo el evento <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-206">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</span></span></param>
        <param name="oldState"><span data-ttu-id="63b09-207">Estado del que el control está realizando la transición.</span><span class="sxs-lookup"><span data-stu-id="63b09-207">The state that the control is transitioning from.</span></span></param>
        <param name="newState"><span data-ttu-id="63b09-208">Estado al que el control está realizando la transición.</span><span class="sxs-lookup"><span data-stu-id="63b09-208">The state that the control is transitioning to.</span></span></param>
        <param name="control"><span data-ttu-id="63b09-209">Control que está realizando la transición entre estados.</span><span class="sxs-lookup"><span data-stu-id="63b09-209">The control that is transitioning states.</span></span></param>
        <param name="stateGroupsRoot"><span data-ttu-id="63b09-210">Elemento raíz que contiene <see cref="T:System.Windows.VisualStateManager" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-210">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span></span></param>
        <summary><span data-ttu-id="63b09-211">Genera el evento <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> en el objeto <see cref="T:System.Windows.VisualStateGroup" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="63b09-211">Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63b09-212">Cuando el <xref:System.Windows.VisualStateGroup> se establece en el <xref:System.Windows.Controls.ControlTemplate> de un control, el `control` parámetro se establece en el control que posee <xref:System.Windows.Controls.ControlTemplate>.</span><span class="sxs-lookup"><span data-stu-id="63b09-212">When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.</span></span>  <span data-ttu-id="63b09-213">Cuando el <xref:System.Windows.VisualStateGroup> se establece en un <xref:System.Windows.FrameworkElement>, `control` es `null` y debe usar el `stateGroupsRoot` parámetro.</span><span class="sxs-lookup"><span data-stu-id="63b09-213">When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63b09-214"><paramref name="stateGroupsRoot" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-214"><paramref name="stateGroupsRoot" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="63b09-215">O bien</span><span class="sxs-lookup"><span data-stu-id="63b09-215">-or-</span></span> 
 <span data-ttu-id="63b09-216"><paramref name="newState" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-216"><paramref name="newState" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="63b09-217">Cuando se reemplaza <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> método para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="63b09-217">When overriding <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SetCustomVisualStateManager">
      <MemberSignature Language="C#" Value="public static void SetCustomVisualStateManager (System.Windows.FrameworkElement obj, System.Windows.VisualStateManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCustomVisualStateManager(class System.Windows.FrameworkElement obj, class System.Windows.VisualStateManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCustomVisualStateManager (obj As FrameworkElement, value As VisualStateManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCustomVisualStateManager(System::Windows::FrameworkElement ^ obj, System::Windows::VisualStateManager ^ value);" />
      <MemberSignature Language="F#" Value="static member SetCustomVisualStateManager : System.Windows.FrameworkElement * System.Windows.VisualStateManager -&gt; unit" Usage="System.Windows.VisualStateManager.SetCustomVisualStateManager (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
        <Parameter Name="value" Type="System.Windows.VisualStateManager" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="63b09-218">Objeto en el que se va a establecer la propiedad.</span><span class="sxs-lookup"><span data-stu-id="63b09-218">The object to set the property on.</span></span></param>
        <param name="value"><span data-ttu-id="63b09-219">Administrador de estado visual que realiza la transición entre los estados de un control.</span><span class="sxs-lookup"><span data-stu-id="63b09-219">The visual state manager that transitions between the states of a control.</span></span></param>
        <summary><span data-ttu-id="63b09-220">Establece la propiedad adjunta <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-220">Sets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualStateGroups">
      <MemberSignature Language="C#" Value="see GetVisualStateGroups" />
      <MemberSignature Language="ILAsm" Value="see GetVisualStateGroups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateManager.VisualStateGroups" />
      <MemberSignature Language="VB.NET" Value="see GetVisualStateGroups" />
      <MemberSignature Language="F#" Value="see GetVisualStateGroups" Usage="see GetVisualStateGroups" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63b09-221">Obtiene o establece una colección de objetos <see cref="T:System.Windows.VisualStateGroup" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-221">Gets or sets a collection of <see cref="T:System.Windows.VisualStateGroup" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
 
## Remarks  
 <span data-ttu-id="63b09-222">Cada <xref:System.Windows.VisualStateGroup> contiene una colección de <xref:System.Windows.VisualState> objetos.</span><span class="sxs-lookup"><span data-stu-id="63b09-222">Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects.</span></span> <span data-ttu-id="63b09-223">Un <xref:System.Windows.VisualState> contiene una colección de <xref:System.Windows.Media.Animation.Storyboard> objetos que especifican cómo se cambia la apariencia del control cuando el control está en un estado determinado.</span><span class="sxs-lookup"><span data-stu-id="63b09-223">A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in a certain state.</span></span> <span data-ttu-id="63b09-224">Por ejemplo, un <xref:System.Windows.Controls.Button> podría tener un aspecto ligeramente diferente cuando se presiona que cuando no está presionado.</span><span class="sxs-lookup"><span data-stu-id="63b09-224">For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed.</span></span> <span data-ttu-id="63b09-225">Dos Estados que el <xref:System.Windows.Controls.Button> define corresponden a cuando se presiona (`"Pressed"`) y cuando no lo es (`"Normal"`).</span><span class="sxs-lookup"><span data-stu-id="63b09-225">Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`"Pressed"`) and when it is not (`"Normal"`).</span></span>  
  
 <span data-ttu-id="63b09-226">Agregar <xref:System.Windows.VisualState> a un control estableciendo la <xref:System.Windows.VisualStateManager.VisualStateGroups%2A> propiedad adjunta en el control.</span><span class="sxs-lookup"><span data-stu-id="63b09-226">You add <xref:System.Windows.VisualState> to a control by setting the <xref:System.Windows.VisualStateManager.VisualStateGroups%2A> attached property on the control.</span></span> <span data-ttu-id="63b09-227">Coloca los Estados que son mutuamente excluyentes entre sí en el mismo <xref:System.Windows.VisualStateGroup>.</span><span class="sxs-lookup"><span data-stu-id="63b09-227">You put states that are mutually exclusive to each other in the same <xref:System.Windows.VisualStateGroup>.</span></span> <span data-ttu-id="63b09-228">Por ejemplo, el <xref:System.Windows.Controls.CheckBox> tiene dos <xref:System.Windows.VisualStateGroup> objetos.</span><span class="sxs-lookup"><span data-stu-id="63b09-228">For example, the <xref:System.Windows.Controls.CheckBox> has two <xref:System.Windows.VisualStateGroup> objects.</span></span> <span data-ttu-id="63b09-229">Uno contiene los Estados, `Normal`, `MouseOver`, `Pressed`, y `Disabled`.</span><span class="sxs-lookup"><span data-stu-id="63b09-229">One contains the states, `Normal`, `MouseOver`, `Pressed`, and `Disabled`.</span></span> <span data-ttu-id="63b09-230">El otro contiene los Estados, `Checked`, `UnChecked`, y `Indeterminate`.</span><span class="sxs-lookup"><span data-stu-id="63b09-230">The other contains the states, `Checked`, `UnChecked`, and `Indeterminate`.</span></span> <span data-ttu-id="63b09-231">El <xref:System.Windows.Controls.CheckBox> pueden estar en Estados `MouseOver` y `UnChecked` al mismo tiempo, pero no puede ser el `MouseOver` y `Pressed` Estados al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="63b09-231">The <xref:System.Windows.Controls.CheckBox> can be in states `MouseOver` and `UnChecked` at the same time, but it cannot be in the `MouseOver` and `Pressed` states at the same time.</span></span>  
  
 <span data-ttu-id="63b09-232">Aunque puede agregar <xref:System.Windows.VisualState> objetos a cualquier elemento, son especialmente útiles para que otros usuarios puedan volver a definir el comportamiento visual de un <xref:System.Windows.Controls.Control>.</span><span class="sxs-lookup"><span data-stu-id="63b09-232">Although you can add <xref:System.Windows.VisualState> objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a <xref:System.Windows.Controls.Control>.</span></span> <span data-ttu-id="63b09-233">Si crea un control personalizado que utiliza un <xref:System.Windows.Controls.ControlTemplate>, puede especificar que indica que el control puede estar en agregando un <xref:System.Windows.TemplateVisualStateAttribute> en su definición de clase.</span><span class="sxs-lookup"><span data-stu-id="63b09-233">If you create a custom control that uses a <xref:System.Windows.Controls.ControlTemplate>, you can specify which states that control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition.</span></span> <span data-ttu-id="63b09-234">A continuación, cualquier persona que crea un nuevo <xref:System.Windows.Controls.ControlTemplate> para el control se puede agregar <xref:System.Windows.VisualState> objetos a la plantilla.</span><span class="sxs-lookup"><span data-stu-id="63b09-234">Then anyone who creates a new <xref:System.Windows.Controls.ControlTemplate> for your control can add <xref:System.Windows.VisualState> objects to the template.</span></span> <span data-ttu-id="63b09-235">Los Estados con el mismo <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> pertenecen al mismo <xref:System.Windows.VisualStateGroup>.</span><span class="sxs-lookup"><span data-stu-id="63b09-235">States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>.</span></span>  
  
 <span data-ttu-id="63b09-236">Para obtener más información sobre cómo usar <xref:System.Windows.VisualStateGroup> objetos en un <xref:System.Windows.Controls.ControlTemplate>, consulte [personalizar la apariencia de un Control existente creando una clase ControlTemplate](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control).</span><span class="sxs-lookup"><span data-stu-id="63b09-236">For more information about how to use <xref:System.Windows.VisualStateGroup> objects in a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control).</span></span> <span data-ttu-id="63b09-237">Para obtener más información sobre cómo crear controles que usan el <xref:System.Windows.VisualStateManager>, consulte [crear un Control que tiene una apariencia personalizable](/dotnet/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance).</span><span class="sxs-lookup"><span data-stu-id="63b09-237">For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](/dotnet/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance).</span></span>  
     
## Examples  
 <span data-ttu-id="63b09-238">En el ejemplo siguiente se crea una sencilla <xref:System.Windows.Controls.ControlTemplate> para un <xref:System.Windows.Controls.Button> que contiene un <xref:System.Windows.Controls.Grid>.</span><span class="sxs-lookup"><span data-stu-id="63b09-238">The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>.</span></span> <span data-ttu-id="63b09-239">También contiene un <xref:System.Windows.VisualStateGroup> denominado `CommonStates`, que define el `MouseOver` y `Normal` Estados.</span><span class="sxs-lookup"><span data-stu-id="63b09-239">It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states.</span></span> <span data-ttu-id="63b09-240">El <xref:System.Windows.VisualStateGroup> también tiene un <xref:System.Windows.VisualTransition> que especifica que se tarda medio segundo la <xref:System.Windows.Controls.Grid> para cambiar de verde a rojo cuando el usuario mueve el puntero del mouse sobre el <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="63b09-240">The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualStateGroupsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisualStateGroupsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisualStateGroupsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.VisualStateManager.VisualStateGroupsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisualStateGroupsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisualStateGroupsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisualStateGroupsProperty : System.Windows.DependencyProperty" Usage="System.Windows.VisualStateManager.VisualStateGroupsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63b09-241">Identifica la propiedad de dependencia <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" />.</span><span class="sxs-lookup"><span data-stu-id="63b09-241">Identifies the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="RectConverter" FullName="System.Windows.RectConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8316167ca0eefbee687f4ea51eeda0c570442d7c" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39737856" /></Metadata><TypeSignature Language="C#" Value="public sealed class RectConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RectConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RectConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RectConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class RectConverter sealed : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type RectConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="42af6-101">Convierte instancias de otros tipos en instancias de <see cref="T:System.Windows.Rect" /> y viceversa.</span><span class="sxs-lookup"><span data-stu-id="42af6-101">Converts instances of other types to and from instances of <see cref="T:System.Windows.Rect" />.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.Rect" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RectConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RectConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RectConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="42af6-102">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.RectConverter" />.</span><span class="sxs-lookup"><span data-stu-id="42af6-102">Initializes a new instance of the <see cref="T:System.Windows.RectConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="rectConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="42af6-103">Proporciona la información contextual necesaria para la conversión.</span><span class="sxs-lookup"><span data-stu-id="42af6-103">Provides contextual information required for conversion.</span></span></param>
        <param name="sourceType"><span data-ttu-id="42af6-104">Tipo del origen que se va a evaluar para la conversión.</span><span class="sxs-lookup"><span data-stu-id="42af6-104">The type of the source that is being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="42af6-105">Determina si un objeto puede convertirse de un tipo especificado en una instancia de <see cref="T:System.Windows.Rect" />.</span><span class="sxs-lookup"><span data-stu-id="42af6-105">Determines whether an object can be converted from a given type to an instance of <see cref="T:System.Windows.Rect" />.</span></span></summary>
        <returns><span data-ttu-id="42af6-106">Es <see langword="true" /> si se puede convertir en <see cref="T:System.Windows.Rect" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="42af6-106"><see langword="true" /> if the type can be converted to a <see cref="T:System.Windows.Rect" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="rectConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="42af6-107">Proporciona la información contextual necesaria para la conversión.</span><span class="sxs-lookup"><span data-stu-id="42af6-107">Provides contextual information required for conversion.</span></span></param>
        <param name="destinationType"><span data-ttu-id="42af6-108">Tipo deseado de este <see cref="T:System.Windows.Rect" /> que se está evaluando para la conversión.</span><span class="sxs-lookup"><span data-stu-id="42af6-108">The desired type this <see cref="T:System.Windows.Rect" /> is being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="42af6-109">Determina si <see cref="T:System.Windows.Rect" /> puede convertirse en el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="42af6-109">Determines whether a <see cref="T:System.Windows.Rect" /> can be converted to the specified type.</span></span></summary>
        <returns><span data-ttu-id="42af6-110"><see langword="true" /> si <see cref="T:System.Windows.Rect" /> se puede convertir en <paramref name="destinationType" />; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="42af6-110"><see langword="true" /> if a <see cref="T:System.Windows.Rect" /> can be converted to <paramref name="destinationType" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="rectConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="42af6-111">Proporciona la información contextual necesaria para la conversión.</span><span class="sxs-lookup"><span data-stu-id="42af6-111">Provides contextual information required for conversion.</span></span></param>
        <param name="culture"><span data-ttu-id="42af6-112">Información cultural que se respeta en la conversión.</span><span class="sxs-lookup"><span data-stu-id="42af6-112">Cultural information which is respected when converting.</span></span></param>
        <param name="value"><span data-ttu-id="42af6-113">Objeto que se convertirá.</span><span class="sxs-lookup"><span data-stu-id="42af6-113">The object being converted.</span></span></param>
        <summary><span data-ttu-id="42af6-114">Intenta convertir el objeto especificado en <see cref="T:System.Windows.Rect" />.</span><span class="sxs-lookup"><span data-stu-id="42af6-114">Attempts to convert the specified object to a <see cref="T:System.Windows.Rect" />.</span></span></summary>
        <returns><span data-ttu-id="42af6-115">Objeto <see cref="T:System.Windows.Rect" /> creado a partir de la conversión de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="42af6-115">The <see cref="T:System.Windows.Rect" /> created from converting <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42af6-116">Para determinar si una conversión es posible sin tener que realizar la conversión, utilice el <xref:System.Windows.RectConverter.CanConvertFrom%2A> método.</span><span class="sxs-lookup"><span data-stu-id="42af6-116">To determine whether a conversion is possible without actually performing the conversion, use the <xref:System.Windows.RectConverter.CanConvertFrom%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="42af6-117">Se inicia si el objeto especificado es NULL o es un tipo que no se puede convertir en <see cref="T:System.Windows.Rect" />.</span><span class="sxs-lookup"><span data-stu-id="42af6-117">Thrown if the specified object is NULL or is a type that cannot be converted to a <see cref="T:System.Windows.Rect" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="rectConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="42af6-118">Proporciona la información contextual necesaria para la conversión.</span><span class="sxs-lookup"><span data-stu-id="42af6-118">Provides contextual information required for conversion.</span></span></param>
        <param name="culture"><span data-ttu-id="42af6-119">Información de referencia cultural que se respeta durante la conversión.</span><span class="sxs-lookup"><span data-stu-id="42af6-119">Cultural information which is respected during conversion.</span></span></param>
        <param name="value"><span data-ttu-id="42af6-120"><see cref="T:System.Windows.Rect" /> que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="42af6-120">The <see cref="T:System.Windows.Rect" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="42af6-121">Tipo en el que convertir <see cref="T:System.Windows.Rect" />.</span><span class="sxs-lookup"><span data-stu-id="42af6-121">The type to convert this <see cref="T:System.Windows.Rect" /> to.</span></span></param>
        <summary><span data-ttu-id="42af6-122">Intenta convertir <see cref="T:System.Windows.Rect" /> en el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="42af6-122">Attempts to convert a <see cref="T:System.Windows.Rect" /> to the specified type.</span></span></summary>
        <returns><span data-ttu-id="42af6-123">Objeto que se crea a partir de la conversión de esta instancia de <see cref="T:System.Windows.Rect" />.</span><span class="sxs-lookup"><span data-stu-id="42af6-123">The object created from converting this <see cref="T:System.Windows.Rect" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42af6-124">Para determinar si una conversión es posible sin tener que realizar la conversión, utilice el <xref:System.Windows.RectConverter.CanConvertTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="42af6-124">To determine whether a conversion is possible without actually performing the conversion, use the <xref:System.Windows.RectConverter.CanConvertTo%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="42af6-125"><paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="42af6-125"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="42af6-126">\- o -</span><span class="sxs-lookup"><span data-stu-id="42af6-126">\- or -</span></span> 
 <span data-ttu-id="42af6-127"><paramref name="value" /> no es un <see cref="T:System.Windows.Rect" />.</span><span class="sxs-lookup"><span data-stu-id="42af6-127"><paramref name="value" /> is not a <see cref="T:System.Windows.Rect" />.</span></span>  
  
<span data-ttu-id="42af6-128">\- o -</span><span class="sxs-lookup"><span data-stu-id="42af6-128">\- or -</span></span> 
<span data-ttu-id="42af6-129"><paramref name="destinationType" /> no es ninguno de los tipos válidos para la conversión.</span><span class="sxs-lookup"><span data-stu-id="42af6-129">The <paramref name="destinationType" /> is not one of the valid types for conversion.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
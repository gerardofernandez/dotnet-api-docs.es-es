<Type Name="LocalValueEntry" FullName="System.Windows.LocalValueEntry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ee41f062aab00f36548f639d52ec12bfdeed6ae" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39994512" /></Metadata><TypeSignature Language="C#" Value="public struct LocalValueEntry" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LocalValueEntry extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LocalValueEntry" />
  <TypeSignature Language="VB.NET" Value="Public Structure LocalValueEntry" />
  <TypeSignature Language="C++ CLI" Value="public value class LocalValueEntry" />
  <TypeSignature Language="F#" Value="type LocalValueEntry = struct" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="83ddd-101">Representa un identificador de propiedad y el valor de propiedad para una propiedad de dependencia establecida localmente.</span><span class="sxs-lookup"><span data-stu-id="83ddd-101">Represents a property identifier and the property value for a locally set dependency property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83ddd-102">Las instancias de esta clase se devuelven al obtener el valor de la <xref:System.Windows.LocalValueEnumerator.Current%2A> propiedad de un <xref:System.Windows.LocalValueEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="83ddd-102">Instances of this class are returned when getting the value of the <xref:System.Windows.LocalValueEnumerator.Current%2A> property of a <xref:System.Windows.LocalValueEnumerator>.</span></span> <span data-ttu-id="83ddd-103">Todos los <xref:System.Windows.LocalValueEntry> propiedades son de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="83ddd-103">All <xref:System.Windows.LocalValueEntry> properties are read-only.</span></span>  
  
 <span data-ttu-id="83ddd-104">Esta clase no tiene ningún constructor público.</span><span class="sxs-lookup"><span data-stu-id="83ddd-104">This class has no public constructor.</span></span> <span data-ttu-id="83ddd-105">Para obtener instancias de esta clase se debe llamar a <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>y, a continuación, obtener el valor de <xref:System.Windows.LocalValueEnumerator.Current%2A> devueltos <xref:System.Windows.LocalValueEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="83ddd-105">In order to obtain instances of this class you must call <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>, and then get the value of <xref:System.Windows.LocalValueEnumerator.Current%2A> from the returned <xref:System.Windows.LocalValueEnumerator>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83ddd-106">El ejemplo siguiente se recorre en iteración localmente valores establecidos de un <xref:System.Windows.DependencyObject> y consultas <xref:System.Windows.LocalValueEntry> propiedades.</span><span class="sxs-lookup"><span data-stu-id="83ddd-106">The following example iterates locally set values of a <xref:System.Windows.DependencyObject> and queries <xref:System.Windows.LocalValueEntry> properties.</span></span>  
  
 [!code-csharp[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/csharp/VS_Snippets_Wpf/DPClearValue/CSharp/default.xaml.cs#iteratelocalvaluesandclear)]
 [!code-vb[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPClearValue/VisualBasic/default.xaml.vb#iteratelocalvaluesandclear)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.LocalValueEnumerator" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEntry.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="localValueEntry.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="83ddd-107">Objeto <see cref="T:System.Windows.LocalValueEntry" /> que se va a comparar con el objeto <see cref="T:System.Windows.LocalValueEntry" /> actual.</span><span class="sxs-lookup"><span data-stu-id="83ddd-107">The <see cref="T:System.Windows.LocalValueEntry" /> to compare with the current <see cref="T:System.Windows.LocalValueEntry" />.</span></span></param>
        <summary><span data-ttu-id="83ddd-108">Determina si dos instancias de <see cref="T:System.Windows.LocalValueEntry" /> son iguales.</span><span class="sxs-lookup"><span data-stu-id="83ddd-108">Determines whether two <see cref="T:System.Windows.LocalValueEntry" /> instances are equal.</span></span></summary>
        <returns><span data-ttu-id="83ddd-109">Esta implementación <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /> compara los valores de <see cref="P:System.Windows.LocalValueEntry.Property" /> y compara potencialmente los valores de <see cref="P:System.Windows.LocalValueEntry.Value" />.</span><span class="sxs-lookup"><span data-stu-id="83ddd-109">This <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /> implementation compares the values of the <see cref="P:System.Windows.LocalValueEntry.Property" />, and potentially compares the values of <see cref="P:System.Windows.LocalValueEntry.Value" />.</span></span> <span data-ttu-id="83ddd-110">El componente <see cref="P:System.Windows.LocalValueEntry.Property" /> de <see cref="T:System.Windows.LocalValueEntry" /> es un tipo de valor, por lo que siempre será una comparación bit a bit.</span><span class="sxs-lookup"><span data-stu-id="83ddd-110">The <see cref="P:System.Windows.LocalValueEntry.Property" /> component of a <see cref="T:System.Windows.LocalValueEntry" /> is a value type, so will always be a bitwise comparison.</span></span> <span data-ttu-id="83ddd-111">Para el componente <see cref="P:System.Windows.LocalValueEntry.Value" />, esta implementación emplea una comparación bit a bit si es un tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="83ddd-111">For the <see cref="P:System.Windows.LocalValueEntry.Value" /> component, this implementation employs a bitwise comparison if it is a value type.</span></span> <span data-ttu-id="83ddd-112">Para las propiedades establecidas localmente que tienen tipos de referencia, el comportamiento se difiere a los mecanismos de determinación de igualdad de ese tipo, porque simplemente utiliza el operador == en los dos valores de manera interna.</span><span class="sxs-lookup"><span data-stu-id="83ddd-112">For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it just uses the == operator on the two values internally.</span></span> <span data-ttu-id="83ddd-113">De forma predeterminada, ésta sería una igualdad de referencias de los valores, por lo que la igualdad de toda la <see cref="T:System.Windows.LocalValueEntry" /> se volvería una igualdad de referencias.</span><span class="sxs-lookup"><span data-stu-id="83ddd-113">By default, this would be a reference equality of the values and thus the equality of the entire <see cref="T:System.Windows.LocalValueEntry" /> would become a reference equality.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEntry.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="localValueEntry.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83ddd-114">Devuelve el código hash de este objeto <see cref="T:System.Windows.LocalValueEntry" />.</span><span class="sxs-lookup"><span data-stu-id="83ddd-114">Returns the hash code for this <see cref="T:System.Windows.LocalValueEntry" />.</span></span></summary>
        <returns><span data-ttu-id="83ddd-115">Valor entero de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="83ddd-115">A signed 32-bit integer value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.LocalValueEntry obj1, System.Windows.LocalValueEntry obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.LocalValueEntry obj1, valuetype System.Windows.LocalValueEntry obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (obj1 As LocalValueEntry, obj2 As LocalValueEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::LocalValueEntry obj1, System::Windows::LocalValueEntry obj2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.LocalValueEntry * System.Windows.LocalValueEntry -&gt; bool" Usage="obj1 = obj2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEntry" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEntry" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="83ddd-116">Primera instancia que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="83ddd-116">The first instance to compare.</span></span></param>
        <param name="obj2"><span data-ttu-id="83ddd-117">Segunda instancia que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="83ddd-117">The second instance to compare.</span></span></param>
        <summary><span data-ttu-id="83ddd-118">Compara las instancias de <see cref="T:System.Windows.LocalValueEntry" /> especificadas para determinar si son las mismas.</span><span class="sxs-lookup"><span data-stu-id="83ddd-118">Compares the specified <see cref="T:System.Windows.LocalValueEntry" /> instances to determine whether they are the same.</span></span></summary>
        <returns><span data-ttu-id="83ddd-119"><see langword="true" /> si <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEntry" /> es igual que <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEntry" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="83ddd-119"><see langword="true" /> if the <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEntry" /> is equal to the <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEntry" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83ddd-120">Esta implementación <xref:System.Windows.LocalValueEntry.op_Equality%2A> compara los valores de <xref:System.Windows.LocalValueEntry.Property%2A> y compara potencialmente los valores de <xref:System.Windows.LocalValueEntry.Value%2A>.</span><span class="sxs-lookup"><span data-stu-id="83ddd-120">This <xref:System.Windows.LocalValueEntry.op_Equality%2A> implementation compares the values of the <xref:System.Windows.LocalValueEntry.Property%2A>, and potentially compares the values of <xref:System.Windows.LocalValueEntry.Value%2A>.</span></span> <span data-ttu-id="83ddd-121">El <xref:System.Windows.LocalValueEntry.Property%2A> componente de un <xref:System.Windows.LocalValueEntry> siempre es un tipo de valor, por lo que esta comparación siempre será una comparación de valores de bit a bit.</span><span class="sxs-lookup"><span data-stu-id="83ddd-121">The <xref:System.Windows.LocalValueEntry.Property%2A> component of a <xref:System.Windows.LocalValueEntry> is always a value type, so this comparison will always be a bitwise value comparison.</span></span> <span data-ttu-id="83ddd-122">Para el componente <xref:System.Windows.LocalValueEntry.Value%2A>, esta implementación emplea una comparación bit a bit si es un tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="83ddd-122">For the <xref:System.Windows.LocalValueEntry.Value%2A> component, this implementation employs a bitwise comparison if it is a value type.</span></span>  
  
 <span data-ttu-id="83ddd-123">Para las propiedades establecidas localmente que tienen tipos de referencia, el comportamiento se difiere a los mecanismos de determinación de igualdad de ese tipo, porque utiliza el operador `==` en los dos valores de manera interna.</span><span class="sxs-lookup"><span data-stu-id="83ddd-123">For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the `==` operator on the two values internally.</span></span> <span data-ttu-id="83ddd-124">De forma predeterminada, ésta es una igualdad de referencias de los valores.</span><span class="sxs-lookup"><span data-stu-id="83ddd-124">By default, this is a reference equality of the values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.LocalValueEntry.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.LocalValueEntry obj1, System.Windows.LocalValueEntry obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.LocalValueEntry obj1, valuetype System.Windows.LocalValueEntry obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (obj1 As LocalValueEntry, obj2 As LocalValueEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::LocalValueEntry obj1, System::Windows::LocalValueEntry obj2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.LocalValueEntry * System.Windows.LocalValueEntry -&gt; bool" Usage="System.Windows.LocalValueEntry.op_Inequality (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEntry" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEntry" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="83ddd-125">Primera instancia que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="83ddd-125">The first instance to compare.</span></span></param>
        <param name="obj2"><span data-ttu-id="83ddd-126">Segunda instancia que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="83ddd-126">The second instance to compare.</span></span></param>
        <summary><span data-ttu-id="83ddd-127">Compara las instancias de <see cref="T:System.Windows.LocalValueEnumerator" /> especificadas para determinar si son distintas.</span><span class="sxs-lookup"><span data-stu-id="83ddd-127">Compares the specified <see cref="T:System.Windows.LocalValueEnumerator" /> instances to determine whether they are different.</span></span></summary>
        <returns><span data-ttu-id="83ddd-128">Esta implementación compara los valores de <see cref="P:System.Windows.LocalValueEntry.Property" /> y los componentes <see cref="P:System.Windows.LocalValueEntry.Value" /> de <see cref="T:System.Windows.LocalValueEntry" />.</span><span class="sxs-lookup"><span data-stu-id="83ddd-128">This implementation compares the values of the <see cref="P:System.Windows.LocalValueEntry.Property" /> and <see cref="P:System.Windows.LocalValueEntry.Value" /> components of a <see cref="T:System.Windows.LocalValueEntry" />.</span></span> <span data-ttu-id="83ddd-129">El componente <see cref="P:System.Windows.LocalValueEntry.Property" /> de <see cref="T:System.Windows.LocalValueEntry" /> es siempre un tipo de valor, por lo que esta comparación siempre será una comparación bit a bit.</span><span class="sxs-lookup"><span data-stu-id="83ddd-129">The <see cref="P:System.Windows.LocalValueEntry.Property" /> component of a <see cref="T:System.Windows.LocalValueEntry" /> is always a value type, so this comparison will always be a bitwise comparison.</span></span> <span data-ttu-id="83ddd-130">Para el componente <see cref="P:System.Windows.LocalValueEntry.Value" />, esta implementación emplea una comparación bit a bit si es un tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="83ddd-130">For the <see cref="P:System.Windows.LocalValueEntry.Value" /> component, this implementation employs a bitwise comparison if it is a value type.</span></span>  
  
<span data-ttu-id="83ddd-131">Para las propiedades establecidas localmente que tienen tipos de referencia, el comportamiento se difiere a los mecanismos de determinación de igualdad de ese tipo, porque utiliza el operador <see langword="==" /> en los dos valores de manera interna.</span><span class="sxs-lookup"><span data-stu-id="83ddd-131">For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the <see langword="==" /> operator on the two values internally.</span></span> <span data-ttu-id="83ddd-132">De forma predeterminada, ésta es una igualdad de referencias de los valores.</span><span class="sxs-lookup"><span data-stu-id="83ddd-132">By default, this is a reference equality of the values.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.LocalValueEntry.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEntry.Property" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Property : System.Windows.DependencyProperty" Usage="System.Windows.LocalValueEntry.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83ddd-133">Obtiene el identificador de la propiedad de dependencia establecida localmente que se representa con esta entrada.</span><span class="sxs-lookup"><span data-stu-id="83ddd-133">Gets the identifier for the locally set dependency property that is represented by this entry.</span></span></summary>
        <value><span data-ttu-id="83ddd-134">Identificador de la propiedad de dependencia establecida localmente.</span><span class="sxs-lookup"><span data-stu-id="83ddd-134">The identifier for the locally set dependency property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83ddd-135">Utilice esta propiedad para consultar el identificador de la que se han establecido localmente propiedad de dependencia y obtener sus metadatos.</span><span class="sxs-lookup"><span data-stu-id="83ddd-135">Use this property to query the identifier of the locally set dependency property and to obtain its metadata.</span></span> <span data-ttu-id="83ddd-136">Estos metadatos obtenidos pueden incluir el valor predeterminado inicial de la propiedad y si la propiedad admite la herencia de valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="83ddd-136">This obtained metadata may include the initial default value of the property and whether the property supports property value inheritance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEntry.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Windows.LocalValueEntry.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83ddd-137">Obtiene el valor de la propiedad de dependencia establecida localmente.</span><span class="sxs-lookup"><span data-stu-id="83ddd-137">Gets the value of the locally set dependency property.</span></span></summary>
        <value><span data-ttu-id="83ddd-138">Valor de la propiedad de dependencia establecida localmente como un objeto.</span><span class="sxs-lookup"><span data-stu-id="83ddd-138">The value of the locally set dependency property as an object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83ddd-139">Para determinar un tipo más específico para este valor, compruebe el <xref:System.Windows.LocalValueEntry.Property%2A> actual <xref:System.Windows.LocalValueEntry> y obtenga su <xref:System.Windows.DependencyProperty.PropertyType%2A>.</span><span class="sxs-lookup"><span data-stu-id="83ddd-139">To determine a more specific type for this value, check the <xref:System.Windows.LocalValueEntry.Property%2A> for the current <xref:System.Windows.LocalValueEntry> and get its <xref:System.Windows.DependencyProperty.PropertyType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
  </Members>
</Type>
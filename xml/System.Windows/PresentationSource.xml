<Type Name="PresentationSource" FullName="System.Windows.PresentationSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a90d3e64b392cd68e51fc255c8aecdee5ca48d6b" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55380161" /></Metadata><TypeSignature Language="C#" Value="public abstract class PresentationSource : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract PresentationSource extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PresentationSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PresentationSource&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PresentationSource abstract : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type PresentationSource = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="86644-101">Proporciona una base abstracta para las clases que presentan contenido de otra tecnología como parte de un escenario de interoperación.</span><span class="sxs-lookup"><span data-stu-id="86644-101">Provides an abstract base for classes that present content from another technology as part of an interoperation scenario.</span></span> <span data-ttu-id="86644-102">Además, esta clase proporciona métodos estáticos para trabajar con estos orígenes, así como la arquitectura de presentación básica de nivel visual.</span><span class="sxs-lookup"><span data-stu-id="86644-102">In addition, this class provides static methods for working with these sources, as well as the basic visual-layer presentation architecture.</span></span></summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="86644-103">derivar de esta clase.</span><span class="sxs-lookup"><span data-stu-id="86644-103">to derive from this class.</span></span> <span data-ttu-id="86644-104">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span><span class="sxs-lookup"><span data-stu-id="86644-104">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
    <altmember cref="T:System.Windows.Interop.HwndSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PresentationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PresentationSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86644-105">Proporciona la inicialización de los valores de clase base cuando lo invoca el constructor de una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="86644-105">Provides initialization for base class values when called by the constructor of a derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSource">
      <MemberSignature Language="C#" Value="protected void AddSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddSource();" />
      <MemberSignature Language="F#" Value="member this.AddSource : unit -&gt; unit" Usage="presentationSource.AddSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86644-106">Agrega una instancia de clase derivada de <see cref="T:System.Windows.PresentationSource" /> a la lista de orígenes de presentación conocidos.</span><span class="sxs-lookup"><span data-stu-id="86644-106">Adds a <see cref="T:System.Windows.PresentationSource" /> derived class instance to the list of known presentation sources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86644-107">Este método debe llamarse por clases derivadas para indicar que es necesario realizar un seguimiento.</span><span class="sxs-lookup"><span data-stu-id="86644-107">This method should be called by derived classes to indicate that they need to be tracked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceChangedHandler (System.Windows.IInputElement element, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceChangedHandler(class System.Windows.IInputElement element, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceChangedHandler (element As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceChangedHandler(System::Windows::IInputElement ^ element, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddSourceChangedHandler : System.Windows.IInputElement * System.Windows.SourceChangedEventHandler -&gt; unit" Usage="System.Windows.PresentationSource.AddSourceChangedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="86644-108">Elemento al que se va a agregar el controlador.</span><span class="sxs-lookup"><span data-stu-id="86644-108">The element to add the handler to.</span></span></param>
        <param name="handler"><span data-ttu-id="86644-109">Implementación del controlador que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="86644-109">The hander implementation to add.</span></span></param>
        <summary><span data-ttu-id="86644-110">Agrega un controlador para el evento <see langword="SourceChanged" /> al elemento proporcionado.</span><span class="sxs-lookup"><span data-stu-id="86644-110">Adds a handler for the <see langword="SourceChanged" /> event to the provided element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86644-111">A pesar de lo que indica el bloque de sintaxis para este evento, hay no legítimos [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] adjunta el uso de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="86644-111">Despite what the syntax block for this event states, there is no legitimate [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] attached property usage.</span></span> <span data-ttu-id="86644-112">No debe intentar agregar controladores en [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], y controladores en el código solo se deben colocar en los objetos que actúan como hosts de presentación (<xref:System.Windows.PresentationSource> ) contenido.</span><span class="sxs-lookup"><span data-stu-id="86644-112">You should not attempt to add handlers in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], and handlers in code should only be placed on objects that serve as hosts for presentation (<xref:System.Windows.PresentationSource> ) content.</span></span> <span data-ttu-id="86644-113">Tales controladores solo deben asociarse durante la inicialización del objeto y se deben quitar explícitamente en un método Dispose o limpieza de objetos equivalentes.</span><span class="sxs-lookup"><span data-stu-id="86644-113">Such handlers should only be attached during object initialization, and should be explicitly removed in a Dispose method or equivalent object cleanup.</span></span>  
  
 <span data-ttu-id="86644-114">Aunque se trata de un evento enrutado, existen las restricciones especiales que difieren del comportamiento normal de eventos enrutados, debido al número relativamente pequeño de elementos en un escenario de aplicación que se ocuparían de controlar esto evento.</span><span class="sxs-lookup"><span data-stu-id="86644-114">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="86644-115">No puede usar el <xref:System.Windows.UIElement> o <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> métodos para agregar controladores.</span><span class="sxs-lookup"><span data-stu-id="86644-115">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> methods to add handlers.</span></span> <span data-ttu-id="86644-116">Debe usar <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="86644-116">You must use <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="86644-117">C# `+=` y `-=` las sintaxis de controlador de eventos y sintaxis de los controladores relacionados específicos del lenguaje, no se admiten, porque el propio evento no se expone como público.</span><span class="sxs-lookup"><span data-stu-id="86644-117">The C# `+=` and `-=` event handler syntaxes, and related language-specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="86644-118">Solo el <xref:System.Windows.PresentationSource> métodos de utilidad para agregar y quitar los controladores directamente son compatibles.</span><span class="sxs-lookup"><span data-stu-id="86644-118">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
-   <span data-ttu-id="86644-119">No se permiten los controladores de clase.</span><span class="sxs-lookup"><span data-stu-id="86644-119">Class handlers are not allowed.</span></span> <span data-ttu-id="86644-120">En concreto, no puede llamar a <xref:System.Windows.EventManager.RegisterClassHandler%2A> frente a este evento en un constructor de clase porque aunque existe un campo de identificador para SourceChanged, el identificador no es público.</span><span class="sxs-lookup"><span data-stu-id="86644-120">Specifically, you cannot call <xref:System.Windows.EventManager.RegisterClassHandler%2A> against this event in a class constructor because although an identifier field exists for SourceChanged, the identifier is not public.</span></span>  
  
-   <span data-ttu-id="86644-121">Todos los controladores registrados recibirán el evento SourceChanged, incluso si uno de los controladores intenta marcar los argumentos como controlado.</span><span class="sxs-lookup"><span data-stu-id="86644-121">All registered handlers will receive the SourceChanged event even if one of the handlers attempts to mark the arguments as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="86644-122">para llamar a o implemente este método.</span><span class="sxs-lookup"><span data-stu-id="86644-122">to call or implement this method.</span></span> <span data-ttu-id="86644-123">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span><span class="sxs-lookup"><span data-stu-id="86644-123">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ClearContentRenderedListeners">
      <MemberSignature Language="C#" Value="protected void ClearContentRenderedListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearContentRenderedListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.ClearContentRenderedListeners" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearContentRenderedListeners ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearContentRenderedListeners();" />
      <MemberSignature Language="F#" Value="member this.ClearContentRenderedListeners : unit -&gt; unit" Usage="presentationSource.ClearContentRenderedListeners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86644-124">Establece la lista de agentes de escucha para el evento <see cref="E:System.Windows.PresentationSource.ContentRendered" /> en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86644-124">Sets the list of listeners for the <see cref="E:System.Windows.PresentationSource.ContentRendered" /> event to <see langword="null" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.PresentationSource.ContentRendered" />
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CompositionTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CompositionTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CompositionTarget ^ CompositionTarget { System::Windows::Media::CompositionTarget ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompositionTarget : System.Windows.Media.CompositionTarget" Usage="System.Windows.PresentationSource.CompositionTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86644-125">Obtiene el destino visual para los objetos visuales que se presentan en el origen.</span><span class="sxs-lookup"><span data-stu-id="86644-125">Gets the visual target for the visuals being presented in the source.</span></span></summary>
        <value><span data-ttu-id="86644-126">Un destino visual (instancia de una clase derivada de <see cref="T:System.Windows.Media.CompositionTarget" /> ).</span><span class="sxs-lookup"><span data-stu-id="86644-126">A visual target (instance of a <see cref="T:System.Windows.Media.CompositionTarget" /> derived class).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86644-127">El valor devuelto de esta propiedad se basa en una implementación de <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="86644-127">The return of this property relies on an implementation of <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="86644-128">Las clases derivadas pueden optar por ocultar esta propiedad para proporcionar un valor específico del tipo.</span><span class="sxs-lookup"><span data-stu-id="86644-128">Derived classes can choose to shadow this property to offer a type-specific value.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.PresentationSource.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Event ContentRendered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContentRendered;" />
      <MemberSignature Language="F#" Value="member this.ContentRendered : EventHandler " Usage="member this.ContentRendered : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86644-129">Se produce cuando se representa el contenido y está listo para la interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="86644-129">Occurs when content is rendered and ready for user interaction.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSources">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable CurrentSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerable CurrentSources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CurrentSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentSources As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerable ^ CurrentSources { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSources : System.Collections.IEnumerable" Usage="System.Windows.PresentationSource.CurrentSources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86644-130">Devuelve una lista de orígenes.</span><span class="sxs-lookup"><span data-stu-id="86644-130">Returns a list of sources.</span></span></summary>
        <value><span data-ttu-id="86644-131">Lista de referencias débiles.</span><span class="sxs-lookup"><span data-stu-id="86644-131">A list of weak references.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86644-132">La lista devuelta admite un enumerador sobre una copia segura para subprocesos de solo lectura de la lista de orígenes como agregado con <xref:System.Windows.PresentationSource.AddSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="86644-132">The returned list supports an enumerator over a read-only, thread-safe copy of the list of sources as added with <xref:System.Windows.PresentationSource.AddSource%2A>.</span></span>  
  
 <span data-ttu-id="86644-133">El enumerador omite cualquier referencia débil muerta en la lista.</span><span class="sxs-lookup"><span data-stu-id="86644-133">The enumerator skips any dead weak references in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="86644-134">Para obtener los orígenes.</span><span class="sxs-lookup"><span data-stu-id="86644-134">to get sources.</span></span> <span data-ttu-id="86644-135">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span><span class="sxs-lookup"><span data-stu-id="86644-135">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FromDependencyObject">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromDependencyObject (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromDependencyObject(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromDependencyObject(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member FromDependencyObject : System.Windows.DependencyObject -&gt; System.Windows.PresentationSource" Usage="System.Windows.PresentationSource.FromDependencyObject dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="86644-136">Objeto <see cref="T:System.Windows.DependencyObject" /> cuyo origen se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="86644-136">The <see cref="T:System.Windows.DependencyObject" /> to find the source for.</span></span></param>
        <summary><span data-ttu-id="86644-137">Devuelve el origen en el que se presenta el objeto <see cref="T:System.Windows.DependencyObject" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="86644-137">Returns the source in which a provided <see cref="T:System.Windows.DependencyObject" /> is presented.</span></span></summary>
        <returns><span data-ttu-id="86644-138"><see cref="T:System.Windows.PresentationSource" /> en el que se presenta el objeto de dependencia.</span><span class="sxs-lookup"><span data-stu-id="86644-138">The <see cref="T:System.Windows.PresentationSource" /> in which the dependency object is being presented.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="86644-139">para llamar a o implemente este método.</span><span class="sxs-lookup"><span data-stu-id="86644-139">to call or implement this method.</span></span> <span data-ttu-id="86644-140">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span><span class="sxs-lookup"><span data-stu-id="86644-140">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FromVisual">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromVisual (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromVisual(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromVisual(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="static member FromVisual : System.Windows.Media.Visual -&gt; System.Windows.PresentationSource" Usage="System.Windows.PresentationSource.FromVisual visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="86644-141">Objeto <see cref="T:System.Windows.Media.Visual" /> cuyo origen se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="86644-141">The <see cref="T:System.Windows.Media.Visual" /> to find the source for.</span></span></param>
        <summary><span data-ttu-id="86644-142">Devuelve el origen en el que se presenta el objeto <see cref="T:System.Windows.Media.Visual" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="86644-142">Returns the source in which a provided <see cref="T:System.Windows.Media.Visual" /> is presented.</span></span></summary>
        <returns><span data-ttu-id="86644-143"><see cref="T:System.Windows.PresentationSource" /> en que se presenta el elemento visual, o <see langword="null" /> si se elimina <paramref name="visual" />.</span><span class="sxs-lookup"><span data-stu-id="86644-143">The <see cref="T:System.Windows.PresentationSource" /> in which the visual is being presented, or <see langword="null" /> if <paramref name="visual" /> is disposed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="86644-144"><paramref name="visual" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86644-144"><paramref name="visual" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="86644-145">para llamar a o implemente este método.</span><span class="sxs-lookup"><span data-stu-id="86644-145">to call or implement this method.</span></span> <span data-ttu-id="86644-146">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span><span class="sxs-lookup"><span data-stu-id="86644-146">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberSignature Language="F#" Value="abstract member GetCompositionTargetCore : unit -&gt; System.Windows.Media.CompositionTarget" Usage="presentationSource.GetCompositionTargetCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86644-147">Cuando se invalida en una clase derivada, devuelve un destino visual para el origen dado.</span><span class="sxs-lookup"><span data-stu-id="86644-147">When overridden in a derived class, returns a visual target for the given source.</span></span></summary>
        <returns><span data-ttu-id="86644-148">Devuelve un objeto <see cref="T:System.Windows.Media.CompositionTarget" /> que es el destino para representar el objeto visual.</span><span class="sxs-lookup"><span data-stu-id="86644-148">Returns a <see cref="T:System.Windows.Media.CompositionTarget" /> that is target for rendering the visual.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="86644-149">Invalide este método para declarar el valor que el <see cref="P:System.Windows.PresentationSource.CompositionTarget" /> devolverá la propiedad de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="86644-149">Override this method to declare the value that the <see cref="P:System.Windows.PresentationSource.CompositionTarget" /> read-only property will return.</span></span>  
  
<span data-ttu-id="86644-150">La invalidación debe devolver instancias de tipo específico de la <see cref="T:System.Windows.Media.CompositionTarget" /> deriva el tipo de clase que se usa para el escenario de interoperación.</span><span class="sxs-lookup"><span data-stu-id="86644-150">Your override should return type-specific instances of the <see cref="T:System.Windows.Media.CompositionTarget" /> derived class type that is used for your interoperation scenario.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public abstract bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.PresentationSource.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86644-151">Cuando se invalida en una clase derivada, obtiene un valor que declara si el objeto se ha eliminado.</span><span class="sxs-lookup"><span data-stu-id="86644-151">When overridden in a derived class, gets a value that declares whether the object is disposed.</span></span></summary>
        <value><span data-ttu-id="86644-152"><see langword="true" />, si el objeto se desecha; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86644-152"><see langword="true" /> if the object is disposed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="86644-153">Las clases derivadas deben implementar <see cref="T:System.IDisposable" /> o proporcionar un comportamiento equivalente.</span><span class="sxs-lookup"><span data-stu-id="86644-153">Derived classes are expected to implement <see cref="T:System.IDisposable" /> or provide equivalent behavior.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSource">
      <MemberSignature Language="C#" Value="protected void RemoveSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveSource();" />
      <MemberSignature Language="F#" Value="member this.RemoveSource : unit -&gt; unit" Usage="presentationSource.RemoveSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86644-154">Quita una instancia de clase derivada de <see cref="T:System.Windows.PresentationSource" /> de la lista de orígenes de presentación conocidos.</span><span class="sxs-lookup"><span data-stu-id="86644-154">Removes a <see cref="T:System.Windows.PresentationSource" /> derived class instance from the list of known presentation sources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceChangedHandler (System.Windows.IInputElement e, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceChangedHandler(class System.Windows.IInputElement e, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceChangedHandler (e As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceChangedHandler(System::Windows::IInputElement ^ e, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveSourceChangedHandler : System.Windows.IInputElement * System.Windows.SourceChangedEventHandler -&gt; unit" Usage="System.Windows.PresentationSource.RemoveSourceChangedHandler (e, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="86644-155">Elemento del que se va a quitar el controlador.</span><span class="sxs-lookup"><span data-stu-id="86644-155">The element to remove the handler from.</span></span></param>
        <param name="handler"><span data-ttu-id="86644-156">Implementación de controlador que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="86644-156">The handler implementation to remove.</span></span></param>
        <summary><span data-ttu-id="86644-157">Quita un controlador para el evento <see langword="SourceChanged" /> del elemento proporcionado.</span><span class="sxs-lookup"><span data-stu-id="86644-157">Removes a handler for the <see langword="SourceChanged" /> event from the provided element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86644-158">Aunque se trata de un evento enrutado, existen las restricciones especiales que difieren del comportamiento normal de eventos enrutados, debido al número relativamente pequeño de elementos en un escenario de aplicación que se ocuparían de controlar esto evento.</span><span class="sxs-lookup"><span data-stu-id="86644-158">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="86644-159">No puede usar el <xref:System.Windows.UIElement> o <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> métodos para quitar los controladores.</span><span class="sxs-lookup"><span data-stu-id="86644-159">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> methods to remove handlers.</span></span> <span data-ttu-id="86644-160">Debe usar <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="86644-160">You must use <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="86644-161">C# `+=` y `-=` las sintaxis de controlador de eventos y otras sintaxis de controlador específico del lenguaje, no se admiten, porque el propio evento no se expone como público.</span><span class="sxs-lookup"><span data-stu-id="86644-161">The C# `+=` and `-=` event handler syntaxes, and other language-specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="86644-162">Solo el <xref:System.Windows.PresentationSource> métodos de utilidad para agregar y quitar los controladores directamente son compatibles.</span><span class="sxs-lookup"><span data-stu-id="86644-162">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RootChanged">
      <MemberSignature Language="C#" Value="protected void RootChanged (System.Windows.Media.Visual oldRoot, System.Windows.Media.Visual newRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RootChanged(class System.Windows.Media.Visual oldRoot, class System.Windows.Media.Visual newRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RootChanged (oldRoot As Visual, newRoot As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RootChanged(System::Windows::Media::Visual ^ oldRoot, System::Windows::Media::Visual ^ newRoot);" />
      <MemberSignature Language="F#" Value="member this.RootChanged : System.Windows.Media.Visual * System.Windows.Media.Visual -&gt; unit" Usage="presentationSource.RootChanged (oldRoot, newRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldRoot" Type="System.Windows.Media.Visual" />
        <Parameter Name="newRoot" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="oldRoot"><span data-ttu-id="86644-163">Anterior objeto <see cref="T:System.Windows.Media.Visual" /> raíz.</span><span class="sxs-lookup"><span data-stu-id="86644-163">The old root <see cref="T:System.Windows.Media.Visual" />.</span></span></param>
        <param name="newRoot"><span data-ttu-id="86644-164">Nuevo objeto <see cref="T:System.Windows.Media.Visual" /> raíz.</span><span class="sxs-lookup"><span data-stu-id="86644-164">The new root <see cref="T:System.Windows.Media.Visual" />.</span></span></param>
        <summary><span data-ttu-id="86644-165">Proporciona notificación de que el objeto <see cref="T:System.Windows.Media.Visual" /> raíz ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="86644-165">Provides notification that the root <see cref="T:System.Windows.Media.Visual" /> has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86644-166">Las clases derivadas deben llamar a este método para indicar que su raíz <xref:System.Windows.Media.Visual> ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="86644-166">Derived classes should call this method to indicate that their root <xref:System.Windows.Media.Visual> has changed.</span></span>  
  
 <span data-ttu-id="86644-167">Llamar a este método hace que dos eventos de duración del objeto que se produzca en los objetos visuales de raíz especificado, si y solo si esos objetos visuales de raíz son <xref:System.Windows.FrameworkElement> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="86644-167">Calling this method causes two object lifetime events to be raised on the specified root visuals, if and only if those root visuals are <xref:System.Windows.FrameworkElement> derived classes.</span></span>  
  
-   <span data-ttu-id="86644-168">El objeto visual raíz anterior, se producirá la <xref:System.Windows.FrameworkElement.Unloaded> eventos y procesará su árbol de elementos hacia abajo, difundir este evento a cada elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="86644-168">The old root visual will raise the <xref:System.Windows.FrameworkElement.Unloaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
-   <span data-ttu-id="86644-169">El objeto visual raíz, se producirá la <xref:System.Windows.FrameworkElement.Loaded> eventos y procesará su árbol de elementos hacia abajo, difundir este evento a cada elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="86644-169">The new root visual will raise the <xref:System.Windows.FrameworkElement.Loaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootVisual : System.Windows.Media.Visual with get, set" Usage="System.Windows.PresentationSource.RootVisual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86644-170">Cuando se invalida en una clase derivada, obtiene o establece el objeto visual raíz que se presenta en el origen.</span><span class="sxs-lookup"><span data-stu-id="86644-170">When overridden in a derived class, gets or sets the root visual being presented in the source.</span></span></summary>
        <value><span data-ttu-id="86644-171">Raíz visual.</span><span class="sxs-lookup"><span data-stu-id="86644-171">The root visual.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="86644-172">para invalidar la propiedad (<see langword="InheritanceDemand" />).</span><span class="sxs-lookup"><span data-stu-id="86644-172">to override the property (<see langword="InheritanceDemand" />).</span></span> <span data-ttu-id="86644-173">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span><span class="sxs-lookup"><span data-stu-id="86644-173">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
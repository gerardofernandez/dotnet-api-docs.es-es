<Type Name="Window" FullName="System.Windows.Window">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da601451bb4dff3411e8b46597e59b92555fe9b8" /><Meta Name="ms.sourcegitcommit" Value="22744e2f9d07a51900a968efffd9e390117d64a1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/03/2019" /><Meta Name="ms.locfileid" Value="55671894" /></Metadata><TypeSignature Language="C#" Value="public class Window : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Window extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Window" />
  <TypeSignature Language="VB.NET" Value="Public Class Window&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Window : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type Window = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="54022-101">Permite crear, configurar, mostrar y administrar la duración de las ventanas y los cuadros de diálogo.</span><span class="sxs-lookup"><span data-stu-id="54022-101">Provides the ability to create, configure, show, and manage the lifetime of windows and dialog boxes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-102">El punto de interacción entre un usuario y una aplicación independiente es una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-102">The point of interaction between a user and a standalone application is a window.</span></span> <span data-ttu-id="54022-103">Un [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] ventana consta de dos áreas distintas:</span><span class="sxs-lookup"><span data-stu-id="54022-103">A [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window consists of two distinct areas:</span></span>  
  
-   <span data-ttu-id="54022-104">Un área no cliente, que hospeda los elementos gráficos de windows, como un icono, título, menú del sistema, botón Minimizar, maximizar el botón, botón Restaurar, el botón Cerrar y un borde.</span><span class="sxs-lookup"><span data-stu-id="54022-104">A non-client area, which hosts the windows adornments, including an icon, title, System menu, minimize button, maximize button, restore button, close button, and a border.</span></span>  
  
-   <span data-ttu-id="54022-105">Un área de cliente, que hospeda el contenido específico de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="54022-105">A client area, which hosts application-specific content.</span></span>  
  
 <span data-ttu-id="54022-106">En la siguiente ilustración se muestra una ventana estándar:</span><span class="sxs-lookup"><span data-stu-id="54022-106">A standard window is shown in the following figure:</span></span>  
  
 <span data-ttu-id="54022-107">![Elementos de la ventana](~/add/media/windowoverviewfigure1.PNG "elementos de la ventana")</span><span class="sxs-lookup"><span data-stu-id="54022-107">![Window elements](~/add/media/windowoverviewfigure1.PNG "Window elements")</span></span>  
  
 <span data-ttu-id="54022-108"><xref:System.Windows.Window> Encapsula la capacidad de crear, configurar, mostrar y administrar la duración de las ventanas y cuadros de diálogo y proporciona los siguientes servicios de clave:</span><span class="sxs-lookup"><span data-stu-id="54022-108"><xref:System.Windows.Window> encapsulates the ability to create, configure, show, and manage the lifetime of both windows and dialog boxes, and provides the following key services:</span></span>  
  
 <span data-ttu-id="54022-109">**Administración de la duración**: <xref:System.Windows.Window.Activate%2A>, <xref:System.Windows.Window.Activated>, <xref:System.Windows.Window.Close%2A>, <xref:System.Windows.Window.Closed>, <xref:System.Windows.Window.Closing>, <xref:System.Windows.Window.Deactivated>, <xref:System.Windows.Window.Hide%2A>, <xref:System.Windows.Window.IsActive%2A>, <xref:System.Windows.Window.Show%2A>, <xref:System.Windows.Window.SourceInitialized>.</span><span class="sxs-lookup"><span data-stu-id="54022-109">**Lifetime Management**: <xref:System.Windows.Window.Activate%2A>, <xref:System.Windows.Window.Activated>, <xref:System.Windows.Window.Close%2A>, <xref:System.Windows.Window.Closed>, <xref:System.Windows.Window.Closing>, <xref:System.Windows.Window.Deactivated>, <xref:System.Windows.Window.Hide%2A>, <xref:System.Windows.Window.IsActive%2A>, <xref:System.Windows.Window.Show%2A>, <xref:System.Windows.Window.SourceInitialized>.</span></span>  
  
 <span data-ttu-id="54022-110">**Administración de ventanas**: <xref:System.Windows.Window.GetWindow%2A>, <xref:System.Windows.Window.OwnedWindows%2A>, <xref:System.Windows.Window.Owner%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-110">**Window Management**: <xref:System.Windows.Window.GetWindow%2A>, <xref:System.Windows.Window.OwnedWindows%2A>, <xref:System.Windows.Window.Owner%2A>.</span></span>  
  
 <span data-ttu-id="54022-111">**Apariencia y comportamiento**: <xref:System.Windows.Window.AllowsTransparency%2A>, <xref:System.Windows.Window.ContentRendered>, <xref:System.Windows.Window.DragMove%2A>, <xref:System.Windows.Window.Icon%2A>, <xref:System.Windows.Window.Left%2A>, <xref:System.Windows.Window.LocationChanged>, <xref:System.Windows.Window.ResizeMode%2A>, <xref:System.Windows.Window.RestoreBounds%2A>, <xref:System.Windows.Window.ShowActivated%2A>, <xref:System.Windows.Window.ShowInTaskbar%2A>, <xref:System.Windows.Window.SizeToContent%2A>, <xref:System.Windows.Window.StateChanged>, <xref:System.Windows.Window.Title%2A>, <xref:System.Windows.Window.Top%2A>, <xref:System.Windows.Window.Topmost%2A>, <xref:System.Windows.Window.WindowStartupLocation%2A>, <xref:System.Windows.Window.WindowState%2A>, <xref:System.Windows.Window.WindowStyle%2A></span><span class="sxs-lookup"><span data-stu-id="54022-111">**Appearance and Behavior**: <xref:System.Windows.Window.AllowsTransparency%2A>, <xref:System.Windows.Window.ContentRendered>, <xref:System.Windows.Window.DragMove%2A>, <xref:System.Windows.Window.Icon%2A>, <xref:System.Windows.Window.Left%2A>, <xref:System.Windows.Window.LocationChanged>, <xref:System.Windows.Window.ResizeMode%2A>, <xref:System.Windows.Window.RestoreBounds%2A>, <xref:System.Windows.Window.ShowActivated%2A>, <xref:System.Windows.Window.ShowInTaskbar%2A>, <xref:System.Windows.Window.SizeToContent%2A>, <xref:System.Windows.Window.StateChanged>, <xref:System.Windows.Window.Title%2A>, <xref:System.Windows.Window.Top%2A>, <xref:System.Windows.Window.Topmost%2A>, <xref:System.Windows.Window.WindowStartupLocation%2A>, <xref:System.Windows.Window.WindowState%2A>, <xref:System.Windows.Window.WindowStyle%2A></span></span>  
  
 <span data-ttu-id="54022-112">**Cuadros de diálogo**: <xref:System.Windows.Window.DialogResult%2A>, <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-112">**Dialog Boxes**: <xref:System.Windows.Window.DialogResult%2A>, <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="54022-113">Además, <xref:System.Windows.Application> expone una compatibilidad especial para administrar todas las ventanas en una aplicación:</span><span class="sxs-lookup"><span data-stu-id="54022-113">Additionally, <xref:System.Windows.Application> exposes special support for managing all of the windows in an application:</span></span>  
  
-   <span data-ttu-id="54022-114">Aplicación mantiene una lista de todas las ventanas que actualmente se crean instancias de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="54022-114">Application maintains a list of all the windows that are currently instantiated in the application.</span></span> <span data-ttu-id="54022-115">Esta lista se expone mediante el <xref:System.Windows.Application.Windows%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="54022-115">This list is exposed by the <xref:System.Windows.Application.Windows%2A> property.</span></span>  
  
-   <span data-ttu-id="54022-116">De forma predeterminada, <xref:System.Windows.Application.MainWindow%2A> se establece automáticamente con una referencia al primer <xref:System.Windows.Window> que se crea una instancia en una aplicación.</span><span class="sxs-lookup"><span data-stu-id="54022-116">By default, <xref:System.Windows.Application.MainWindow%2A> is automatically set with a reference to the first <xref:System.Windows.Window> that is instantiated in an application.</span></span> <span data-ttu-id="54022-117">Esto, por lo que la ventana de la ventana principal de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="54022-117">This thereby making the window the main application window.</span></span>  
  
 <span data-ttu-id="54022-118">Un <xref:System.Windows.Window> puede implementarse mediante marcado, marcado y código subyacente o código.</span><span class="sxs-lookup"><span data-stu-id="54022-118">A <xref:System.Windows.Window> can be implemented using markup, markup and code-behind, or code.</span></span>  
  
 <span data-ttu-id="54022-119"><xref:System.Windows.Window> se utiliza principalmente para mostrar las ventanas y cuadros de diálogo para las aplicaciones independientes.</span><span class="sxs-lookup"><span data-stu-id="54022-119"><xref:System.Windows.Window> is primarily used to display windows and dialog boxes for standalone applications.</span></span> <span data-ttu-id="54022-120">Sin embargo, para aplicaciones que requieren la navegación en el nivel de la ventana, como los asistentes, puede usar <xref:System.Windows.Navigation.NavigationWindow> en su lugar; <xref:System.Windows.Navigation.NavigationWindow> deriva <xref:System.Windows.Window> y lo amplía con compatibilidad con la navegación de tipo explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-120">However, for applications that require navigation at the window level, such as wizards, you can use <xref:System.Windows.Navigation.NavigationWindow> instead; <xref:System.Windows.Navigation.NavigationWindow> derives from <xref:System.Windows.Window> and extends it with browser-style navigation support.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-121">Se pueden incorporar islas de contenido navegable en otros contenidos y contenedores de contenido mediante <xref:System.Windows.Controls.Frame>.</span><span class="sxs-lookup"><span data-stu-id="54022-121">Islands of navigable content can be incorporated into other content and content containers using <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="54022-122"><xref:System.Windows.Window> necesita `UnmanagedCode` permiso de seguridad que se creará una instancia.</span><span class="sxs-lookup"><span data-stu-id="54022-122"><xref:System.Windows.Window> needs `UnmanagedCode` security permission to be instantiated.</span></span> <span data-ttu-id="54022-123">Esto tiene las siguientes consecuencias:</span><span class="sxs-lookup"><span data-stu-id="54022-123">This has the following consequences:</span></span>  
  
-   [!INCLUDE[TLA#tla_clickonce](~/includes/tlasharptla-clickonce-md.md)]<span data-ttu-id="54022-124">-las aplicaciones independientes implementadas solicitará la elevación de permisos cuando se inicia desde las zonas de Internet o Intranet Local.</span><span class="sxs-lookup"><span data-stu-id="54022-124">-deployed standalone applications will request permission elevation when launched from either the Internet or Local Intranet zones.</span></span>  
  
-   [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] <span data-ttu-id="54022-125">todo lo que solicitar menor que todos los permisos no podrán crear instancias de windows o los cuadros de diálogo.</span><span class="sxs-lookup"><span data-stu-id="54022-125">that request anything less than full permissions will not be able to instantiate windows or dialog boxes.</span></span>  
  
 <span data-ttu-id="54022-126">Para obtener información acerca de la implementación de aplicaciones independientes y consideraciones de seguridad, consulte [estrategia de seguridad de WPF: seguridad de la plataforma](~/docs/framework/wpf/wpf-security-strategy-platform-security.md).</span><span class="sxs-lookup"><span data-stu-id="54022-126">For information about standalone application deployment and security considerations, see [WPF Security Strategy - Platform Security](~/docs/framework/wpf/wpf-security-strategy-platform-security.md).</span></span>  
  
 <span data-ttu-id="54022-127">Un <xref:System.Windows.Window> es un <xref:System.Windows.Controls.ContentControl>, lo que significa que puede contener un único objeto de cualquier tipo (por ejemplo, una cadena, una imagen o un panel).</span><span class="sxs-lookup"><span data-stu-id="54022-127">A <xref:System.Windows.Window> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="54022-128">Para obtener más información, vea la clase <xref:System.Windows.Controls.ContentControl>.</span><span class="sxs-lookup"><span data-stu-id="54022-128">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span> <span data-ttu-id="54022-129">Además, <xref:System.Windows.Window> es un elemento raíz y, por lo tanto, no puede formar parte del contenido de otro elemento.</span><span class="sxs-lookup"><span data-stu-id="54022-129">Also, <xref:System.Windows.Window> is a root element and, therefore, cannot be part of another element's content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-130">El <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.Window.Top%2A>, y <xref:System.Windows.Window.Left%2A> propiedades establecidas en un <xref:System.Windows.Window> a través de un estilo no se aplicará en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="54022-130">The <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.Window.Top%2A>, and <xref:System.Windows.Window.Left%2A> properties set on a <xref:System.Windows.Window> through a style will not be applied at run time.</span></span>  
  
## <a name="customizing-the-window-control"></a><span data-ttu-id="54022-131">Personalizar el Control de ventana</span><span class="sxs-lookup"><span data-stu-id="54022-131">Customizing the Window Control</span></span>  
 <span data-ttu-id="54022-132">Para aplicar la misma configuración de la propiedad a varios <xref:System.Windows.Window> controles, utilizar el <xref:System.Windows.FrameworkElement.Style%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="54022-132">To apply the same property settings to multiple <xref:System.Windows.Window> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="54022-133">Puede modificar el valor predeterminado <xref:System.Windows.Controls.ControlTemplate> para proporcionar el control una apariencia única.</span><span class="sxs-lookup"><span data-stu-id="54022-133">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="54022-134">Para obtener más información acerca de cómo crear un <xref:System.Windows.Controls.ControlTemplate>, consulte [personalizar la apariencia de un Control existente creando una clase ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="54022-134">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="54022-135">Para ver las partes y los Estados que son específicos de la <xref:System.Windows.Window>, consulte [plantillas y estilos de ventana](~/docs/framework/wpf/controls/window-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="54022-135">To see the parts and states that are specific to the <xref:System.Windows.Window>, see [Window Styles and Templates](~/docs/framework/wpf/controls/window-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="54022-136">Las propiedades de dependencia para este control pueden establecerse mediante el estilo del control de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="54022-136">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="54022-137">Si una propiedad se establece mediante un estilo predeterminado, puede cambiar la propiedad de su valor predeterminado cuando el control aparece en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="54022-137">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="54022-138">El estilo predeterminado se determina por el tema de escritorio que se utiliza cuando se ejecuta la aplicación.</span><span class="sxs-lookup"><span data-stu-id="54022-138">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="54022-139">Para obtener más información, consulte [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="54022-139">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="54022-140">El ejemplo siguiente muestra cómo es una ventana estándar define sólo mediante marcado:</span><span class="sxs-lookup"><span data-stu-id="54022-140">The following example shows how a standard window is defined using only markup:</span></span>  
  
 [!code-xaml[WindowSnippets#WindowMARKUPONLY](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MarkupOnlyWindow.xaml#windowmarkuponly)]  
  
 <span data-ttu-id="54022-141">El ejemplo siguiente se muestra cómo se define una ventana estándar utilizando sólo código:</span><span class="sxs-lookup"><span data-stu-id="54022-141">The following example shows how a standard window is defined using only code:</span></span>  
  
 [!code-csharp[WindowSnippets#WindowCODEONLY](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/CodeOnlyWindow.cs#windowcodeonly)]
 [!code-vb[WindowSnippets#WindowCODEONLY](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowSnippets/visualbasic/codeonlywindow.vb#windowcodeonly)]  
  
 <span data-ttu-id="54022-142">El ejemplo siguiente muestra cómo es una ventana estándar definido mediante una combinación de marcado y código subyacente.</span><span class="sxs-lookup"><span data-stu-id="54022-142">The following example shows how a standard window is defined using a combination of markup and code-behind.</span></span>  
  
 [!code-xaml[WindowSnippets#WindowXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MainWindow.xaml#windowxaml)]  
  
 [!code-csharp[WindowSnippets#WindowCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MainWindow.xaml.cs#windowcodebehind)]
 [!code-vb[WindowSnippets#WindowCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowSnippets/visualbasic/mainwindow.xaml.vb#windowcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Window.Show" />
    <altmember cref="M:System.Windows.Window.ShowDialog" />
    <altmember cref="P:System.Windows.Window.DialogResult" />
    <altmember cref="T:System.Windows.Application" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Window ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Window();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54022-143">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="54022-143">Initializes a new instance of the <see cref="T:System.Windows.Window" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-144">El constructor inicializa el <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.Window.Top%2A>, y <xref:System.Windows.Window.Left%2A> propiedades en sus valores predeterminados <xref:System.Windows.Window> valores.</span><span class="sxs-lookup"><span data-stu-id="54022-144">The constructor initializes the <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.Window.Top%2A>, and <xref:System.Windows.Window.Left%2A> properties to their default <xref:System.Windows.Window> values.</span></span>  
  
 <span data-ttu-id="54022-145">Si se crea una ventana dentro de un <xref:System.AppDomain> que tiene un <xref:System.Windows.Application> objeto, el constructor agrega el <xref:System.Windows.Window> objeto al conjunto de <xref:System.Windows.Application>-administrado de windows a través de la <xref:System.Windows.Application.Windows%2A> propiedad de la <xref:System.Windows.Application> objeto.</span><span class="sxs-lookup"><span data-stu-id="54022-145">If a window is created within an <xref:System.AppDomain> that has an <xref:System.Windows.Application> object, the constructor adds the <xref:System.Windows.Window> object to the set of <xref:System.Windows.Application>-managed windows via the <xref:System.Windows.Application.Windows%2A> property of the <xref:System.Windows.Application> object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="54022-146">Para obtener permiso para este objeto llamar a métodos nativos no seguros.</span><span class="sxs-lookup"><span data-stu-id="54022-146">for permission for this object to call unsafe native methods.</span></span> <span data-ttu-id="54022-147">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="54022-147">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public bool Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; bool" Usage="window.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54022-148">Intenta situar la ventana en primer plano y la activa.</span><span class="sxs-lookup"><span data-stu-id="54022-148">Attempts to bring the window to the foreground and activates it.</span></span></summary>
        <returns><span data-ttu-id="54022-149">Devuelve <see langword="true" /> si el objeto <see cref="T:System.Windows.Window" /> se activó correctamente; en caso contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54022-149"><see langword="true" /> if the <see cref="T:System.Windows.Window" /> was successfully activated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-150">Las reglas que determinan si se activa la ventana son los mismos que los utilizados por el [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] `SetForegroundWindow` función (User32.dll).</span><span class="sxs-lookup"><span data-stu-id="54022-150">The rules that determine whether the window is activated are the same as those used by the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] `SetForegroundWindow` function (User32.dll).</span></span>  
  
 <span data-ttu-id="54022-151">Si la ventana se activa en una aplicación de Windows Presentation Foundation que no es una aplicación en primer plano del usuario, <xref:System.Windows.Application.Activated> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="54022-151">If the window is activated in a Windows Presentation Foundation application that is not the user's foreground application, <xref:System.Windows.Application.Activated> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-152">No se puede llamar a este método cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-152">This method cannot be called when a window is hosted in a browser.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="54022-153">Para obtener permiso activar una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-153">for permission to activate a window.</span></span> <span data-ttu-id="54022-154">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="54022-154">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-155">Se produce cuando una ventana se convierte en ventana de primer plano.</span><span class="sxs-lookup"><span data-stu-id="54022-155">Occurs when a window becomes the foreground window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-156">Una ventana se activa (se convierte en la ventana de primer plano) cuando:</span><span class="sxs-lookup"><span data-stu-id="54022-156">A window is activated (becomes the foreground window) when:</span></span>  
  
-   <span data-ttu-id="54022-157">Se abre la ventana por primera vez.</span><span class="sxs-lookup"><span data-stu-id="54022-157">The window is first opened.</span></span>  
  
-   <span data-ttu-id="54022-158">Un usuario cambia a una ventana seleccionando con el mouse, al presionar ALT+TAB, o desde el Administrador de tareas.</span><span class="sxs-lookup"><span data-stu-id="54022-158">A user switches to a window by selecting it with the mouse, pressing ALT+TAB, or from Task Manager.</span></span>  
  
-   <span data-ttu-id="54022-159">Un usuario hace clic en el botón de barra de tareas de la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-159">A user clicks the window's taskbar button.</span></span>  
  
 <span data-ttu-id="54022-160">Pueden controlar Windows que necesitan detectar cuándo se activan el <xref:System.Windows.Window.Activated> eventos.</span><span class="sxs-lookup"><span data-stu-id="54022-160">Windows that need to detect when they become activate can handle the <xref:System.Windows.Window.Activated> event.</span></span>  
  
 <span data-ttu-id="54022-161">Después de activa una ventana en primer lugar, puede estar desactivado y reactivado muchas veces durante su vigencia.</span><span class="sxs-lookup"><span data-stu-id="54022-161">After a window is first activated, it may be deactivated and reactivated many times during its lifetime.</span></span> <span data-ttu-id="54022-162">Si el estado o comportamiento de una aplicación depende de su estado de activación, puede inspeccionar <xref:System.Windows.Window.IsActive%2A> para determinar qué estado de activación.</span><span class="sxs-lookup"><span data-stu-id="54022-162">If an application's behavior or state depends on its activation state, it can inspect <xref:System.Windows.Window.IsActive%2A> to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="54022-163">También puede ser una aplicación <xref:System.Windows.Application.Activated>.</span><span class="sxs-lookup"><span data-stu-id="54022-163">An application can also be <xref:System.Windows.Application.Activated>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Deactivated" />
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparency">
      <MemberSignature Language="C#" Value="public bool AllowsTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.AllowsTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowsTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowsTransparency : bool with get, set" Usage="System.Windows.Window.AllowsTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-164">Obtiene o establece un valor que indica si el área cliente de una ventana admite la transparencia.</span><span class="sxs-lookup"><span data-stu-id="54022-164">Gets or sets a value that indicates whether a window's client area supports transparency.</span></span></summary>
        <value><span data-ttu-id="54022-165">Devuelve <see langword="true" /> si la ventana admite la transparencia; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54022-165"><see langword="true" /> if the window supports transparency; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-166">Cuando el <xref:System.Windows.Controls.Control.Background%2A> propiedad de una ventana está establecida en un modo transparente de color, con <xref:System.Windows.Media.Brushes.Transparent%2A> por ejemplo, la ventana permanece opaca.</span><span class="sxs-lookup"><span data-stu-id="54022-166">When the <xref:System.Windows.Controls.Control.Background%2A> property of a window is set to a transparent color, using <xref:System.Windows.Media.Brushes.Transparent%2A> for example, the window remains opaque.</span></span> <span data-ttu-id="54022-167">Esto significa que no se vean el escritorio y las aplicaciones en ejecución "beneath" de la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-167">This means that the desktop and any running applications "beneath" the window cannot be seen.</span></span> <span data-ttu-id="54022-168">Para habilitar este tipo de transparencia, <xref:System.Windows.Window.AllowsTransparency%2A> debe establecerse en `true`.</span><span class="sxs-lookup"><span data-stu-id="54022-168">To enable this type of transparency, <xref:System.Windows.Window.AllowsTransparency%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="54022-169"><xref:System.Windows.Window.AllowsTransparency%2A> existe para facilitar la creación de ventanas no rectangulares y, por lo tanto, cuando <xref:System.Windows.Window.AllowsTransparency%2A> está establecido en `true`, una ventana <xref:System.Windows.Window.WindowStyle%2A> propiedad debe establecerse en <xref:System.Windows.WindowStyle.None>.</span><span class="sxs-lookup"><span data-stu-id="54022-169"><xref:System.Windows.Window.AllowsTransparency%2A> exists to facilitate the creation of non-rectangular windows, and, consequently, when <xref:System.Windows.Window.AllowsTransparency%2A> is set to `true`, a window's <xref:System.Windows.Window.WindowStyle%2A> property must be set to <xref:System.Windows.WindowStyle.None>.</span></span>  
  
<a name="dependencyPropertyInfo_WindowAllowsTransparency"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="54022-170">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="54022-170">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="54022-171">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="54022-171">Identifier field</span></span>|<xref:System.Windows.Window.AllowsTransparencyProperty>|  
|<span data-ttu-id="54022-172">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="54022-172">Metadata properties set to `true`</span></span>|<span data-ttu-id="54022-173">None</span><span class="sxs-lookup"><span data-stu-id="54022-173">None</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54022-174">Ventana cuya propiedad <see cref="P:System.Windows.Window.WindowStyle" /> tiene un valor que no sea <see cref="F:System.Windows.WindowStyle.None" />.</span><span class="sxs-lookup"><span data-stu-id="54022-174">A window that has a <see cref="P:System.Windows.Window.WindowStyle" /> value of anything other than <see cref="F:System.Windows.WindowStyle.None" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparencyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowsTransparencyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowsTransparencyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.AllowsTransparencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowsTransparencyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowsTransparencyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowsTransparencyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.AllowsTransparencyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-175">Identifica la propiedad de dependencia <see cref="P:System.Windows.Window.AllowsTransparency" />.</span><span class="sxs-lookup"><span data-stu-id="54022-175">Identifies the <see cref="P:System.Windows.Window.AllowsTransparency" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeBounds As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeBounds);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="window.ArrangeOverride arrangeBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeBounds" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeBounds"><span data-ttu-id="54022-176"><see cref="T:System.Windows.Size" /> que refleja el tamaño final que la ventana debe usar para organizarse y organizar sus elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="54022-176">A <see cref="T:System.Windows.Size" /> that reflects the final size that the window should use to arrange itself and its children.</span></span></param>
        <summary><span data-ttu-id="54022-177">Invalide este método para organizar y ajustar el tamaño de una ventana y sus elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="54022-177">Override this method to arrange and size a window and its child elements.</span></span></summary>
        <returns><span data-ttu-id="54022-178"><see cref="T:System.Windows.Size" /> que refleja el tamaño real que se utilizó.</span><span class="sxs-lookup"><span data-stu-id="54022-178">A <see cref="T:System.Windows.Size" /> that reflects the actual size that was used.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-179"><xref:System.Windows.Window.ArrangeOverride%2A> no se llama cuando el <xref:System.Windows.UIElement.Visibility%2A> propiedad tiene un valor de <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="54022-179"><xref:System.Windows.Window.ArrangeOverride%2A> is not called when the <xref:System.Windows.UIElement.Visibility%2A> property has a value of <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="54022-180">Si el valor de la <xref:System.Windows.UIElement.Visibility%2A> propiedad <xref:System.Windows.Visibility.Hidden> o <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.ArrangeOverride%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="54022-180">If the value of the <xref:System.Windows.UIElement.Visibility%2A> property is either <xref:System.Windows.Visibility.Hidden> or <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.ArrangeOverride%2A> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-181">Cuando ya sea <xref:System.Windows.Window.Show%2A> o <xref:System.Windows.Window.ShowDialog%2A> se denominan, el <xref:System.Windows.UIElement.Visibility%2A> propiedad de un <xref:System.Windows.Window> está establecido en <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="54022-181">When either <xref:System.Windows.Window.Show%2A> or <xref:System.Windows.Window.ShowDialog%2A> are called, the <xref:System.Windows.UIElement.Visibility%2A> property of a <xref:System.Windows.Window> is set to <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="window.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54022-182">Cierra manualmente un objeto <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="54022-182">Manually closes a <see cref="T:System.Windows.Window" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-183">Un <xref:System.Windows.Window> puede cerrarse con uno de los diversos mecanismos bien conocidos, proporcionado por el sistema se encuentran en su barra de título, como:</span><span class="sxs-lookup"><span data-stu-id="54022-183">A <xref:System.Windows.Window> can be closed using one of several, well-known, system-provided mechanisms located in its title bar, including:</span></span>  
  
-   <span data-ttu-id="54022-184">ALT+F4.</span><span class="sxs-lookup"><span data-stu-id="54022-184">ALT+F4.</span></span>  
  
-   <span data-ttu-id="54022-185">Menú del sistema &#124; **cerrar**.</span><span class="sxs-lookup"><span data-stu-id="54022-185">System menu &#124; **Close**.</span></span>  
  
-   <span data-ttu-id="54022-186">**Cerrar** botón.</span><span class="sxs-lookup"><span data-stu-id="54022-186">**Close** button.</span></span>  
  
 <span data-ttu-id="54022-187">Un <xref:System.Windows.Window> también se puede cerrar con uno de varios mecanismos bien conocidos dentro del área de cliente proporcionadas por los desarrolladores, incluidos:</span><span class="sxs-lookup"><span data-stu-id="54022-187">A <xref:System.Windows.Window> can also be closed using one of several well-known mechanisms within the client area that are provided by developers, including:</span></span>  
  
-   <span data-ttu-id="54022-188">**Archivo** &#124; **Exit** en una ventana principal.</span><span class="sxs-lookup"><span data-stu-id="54022-188">**File** &#124; **Exit** on a main window.</span></span>  
  
-   <span data-ttu-id="54022-189">**Archivo** &#124; **cerrar** o un **cerrar** botón en una ventana secundaria.</span><span class="sxs-lookup"><span data-stu-id="54022-189">**File** &#124; **Close** or a **Close** button on a child window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-190">**Aceptar** y **cancelar** botones en un cuadro de diálogo también son proporcionados por desarrolladores, aunque le conjunto probable <xref:System.Windows.Window.DialogResult%2A>, que cierra automáticamente una ventana que se abrió llamando <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-190">**OK** and **Cancel** buttons on a dialog box are also developer-provided, although will likely set <xref:System.Windows.Window.DialogResult%2A>, which automatically closes a window that was opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="54022-191">Estos mecanismos requieren que llamar explícitamente a <xref:System.Windows.Window.Close%2A> para cerrar una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-191">These mechanisms require you to explicitly call <xref:System.Windows.Window.Close%2A> to close a window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-192">Si abre una ventana, mediante una llamada a <xref:System.Windows.Window.ShowDialog%2A>y con un <xref:System.Windows.Controls.Button> con su <xref:System.Windows.Controls.Button.IsCancel%2A> propiedad establecida en true, se cerrará automáticamente cuando se haga clic en el botón, o presione ESC.</span><span class="sxs-lookup"><span data-stu-id="54022-192">If a window, opened by calling <xref:System.Windows.Window.ShowDialog%2A>, and with a <xref:System.Windows.Controls.Button> with its <xref:System.Windows.Controls.Button.IsCancel%2A> property set to true, will automatically close when the button is either clicked, or ESC is pressed.</span></span> <span data-ttu-id="54022-193">Si se abrió la ventana mediante <xref:System.Windows.Window.Show%2A>, sin embargo, <xref:System.Windows.Window.Close%2A> debe ser llamados explícitamente, como <xref:System.Windows.Controls.Primitives.ButtonBase.Click> controlador de eventos para el <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="54022-193">If the window was opened using <xref:System.Windows.Window.Show%2A>, however, <xref:System.Windows.Window.Close%2A> must be explicitly called, such as from <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler for the <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="54022-194">Al cerrar una ventana hace que el <xref:System.Windows.Window.Closing> evento.</span><span class="sxs-lookup"><span data-stu-id="54022-194">Closing a window causes the <xref:System.Windows.Window.Closing> event to be raised.</span></span> <span data-ttu-id="54022-195">Si el <xref:System.Windows.Window.Closing> no se cancela el evento, ocurre lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="54022-195">If the <xref:System.Windows.Window.Closing> event isn't canceled, the following occurs:</span></span>  
  
-   <span data-ttu-id="54022-196">El <xref:System.Windows.Window> se quita de <xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType> (si una <xref:System.Windows.Application> objeto existe).</span><span class="sxs-lookup"><span data-stu-id="54022-196">The <xref:System.Windows.Window> is removed from <xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType> (if an <xref:System.Windows.Application> object exists).</span></span>  
  
-   <span data-ttu-id="54022-197">El <xref:System.Windows.Window> se quita el propietario <xref:System.Windows.Window> si se puede establecer la relación propietarias y pertenecientes antes de la propiedad <xref:System.Windows.Window> apareció y después el propietario <xref:System.Windows.Window> se abrió.</span><span class="sxs-lookup"><span data-stu-id="54022-197">The <xref:System.Windows.Window> is removed from the owner <xref:System.Windows.Window> if the owner/owned relationship was established before the owned <xref:System.Windows.Window> was shown and after the owner <xref:System.Windows.Window> was opened.</span></span>  
  
-   <span data-ttu-id="54022-198">Se genera el evento <xref:System.Windows.Window.Closed>.</span><span class="sxs-lookup"><span data-stu-id="54022-198">The <xref:System.Windows.Window.Closed> event is raised.</span></span>  
  
-   <span data-ttu-id="54022-199">No administrada de los recursos creados por el <xref:System.Windows.Window> se eliminan.</span><span class="sxs-lookup"><span data-stu-id="54022-199">Unmanaged resources created by the <xref:System.Windows.Window> are disposed.</span></span>  
  
-   <span data-ttu-id="54022-200">Si <xref:System.Windows.Window.ShowDialog%2A> se llamó para mostrar el <xref:System.Windows.Window>, <xref:System.Windows.Window.ShowDialog%2A> devuelve.</span><span class="sxs-lookup"><span data-stu-id="54022-200">If <xref:System.Windows.Window.ShowDialog%2A> was called to show the <xref:System.Windows.Window>, <xref:System.Windows.Window.ShowDialog%2A> returns.</span></span>  
  
 <span data-ttu-id="54022-201">Cerrar un <xref:System.Windows.Window> hace que todas las ventanas que posee para cerrarse.</span><span class="sxs-lookup"><span data-stu-id="54022-201">Closing a <xref:System.Windows.Window> causes any windows that it owns to be closed.</span></span> <span data-ttu-id="54022-202">Además, se cierra un <xref:System.Windows.Window> podrían provocar que una aplicación detener la ejecución en función de la <xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType> se establece la propiedad.</span><span class="sxs-lookup"><span data-stu-id="54022-202">Furthermore, closing a <xref:System.Windows.Window> may cause an application to stop running depending on how the <xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-203">No se puede llamar a este método cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-203">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54022-204">El ejemplo siguiente se muestra un **archivo** &#124; **Exit** menú que se va a controlar para llamar explícitamente a <xref:System.Windows.Window.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-204">The following example shows a **File** &#124; **Exit** menu being handled to explicitly call <xref:System.Windows.Window.Close%2A>.</span></span>  
  
 [!code-xaml[WindowCloseSnippets#WindowCloseXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowCloseSnippets/CSharp/MainWindow.xaml#windowclosexaml)]  
  
 [!code-csharp[WindowCloseSnippets#WindowCloseCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowCloseSnippets/CSharp/MainWindow.xaml.cs#windowclosecodebehind)]
 [!code-vb[WindowCloseSnippets#WindowCloseCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowCloseSnippets/visualbasic/mainwindow.xaml.vb#windowclosecodebehind)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="54022-205">permiso usar todas las ventanas y eventos de entrada de usuario sin restricciones.</span><span class="sxs-lookup"><span data-stu-id="54022-205">for permission to use all windows and user input events without restriction.</span></span> <span data-ttu-id="54022-206">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="54022-206">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Window.Show" />
        <altmember cref="M:System.Windows.Window.ShowDialog" />
        <altmember cref="P:System.Windows.Window.DialogResult" />
        <altmember cref="P:System.Windows.Window.Owner" />
        <altmember cref="P:System.Windows.Window.OwnedWindows" />
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-207">Se produce cuando la ventana está a punto de cerrarse.</span><span class="sxs-lookup"><span data-stu-id="54022-207">Occurs when the window is about to close.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-208">Una vez que se genera este evento, no se puede evitar una ventana de cierre.</span><span class="sxs-lookup"><span data-stu-id="54022-208">Once this event is raised, a window cannot be prevented from closing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54022-209">Se establece la propiedad <see cref="P:System.Windows.UIElement.Visibility" /> o se llama a <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" /> o <see cref="M:System.Windows.Window.Hide" /> mientras se cierra una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-209"><see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Hide" /> is called while a window is closing.</span></span></exception>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="E:System.Windows.Window.Closing" />
        <altmember cref="M:System.Windows.Application.Shutdown" />
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="E:System.Windows.Application.SessionEnding" />
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Closing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closing As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : System.ComponentModel.CancelEventHandler " Usage="member this.Closing : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-210">Se produce inmediatamente después de llamar a <see cref="M:System.Windows.Window.Close" /> y se puede controlar para que se cancele el cierre de la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-210">Occurs directly after <see cref="M:System.Windows.Window.Close" /> is called, and can be handled to cancel window closure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-211"><xref:System.Windows.Window.Closing> se puede controlar para detectar cuándo se cierra una ventana (por ejemplo, cuando <xref:System.Windows.Window.Close%2A> se denomina).</span><span class="sxs-lookup"><span data-stu-id="54022-211"><xref:System.Windows.Window.Closing> can be handled to detect when a window is being closed (for example, when <xref:System.Windows.Window.Close%2A> is called).</span></span> <span data-ttu-id="54022-212">Además, <xref:System.Windows.Window.Closing> puede usarse para evitar que se cierre una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-212">Furthermore, <xref:System.Windows.Window.Closing> can be used to prevent a window from closing.</span></span> <span data-ttu-id="54022-213">Para evitar que se cierre una ventana, puede establecer el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad de la <xref:System.ComponentModel.CancelEventArgs> argumento `true`.</span><span class="sxs-lookup"><span data-stu-id="54022-213">To prevent a window from closing, you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> argument to `true`.</span></span>  
  
 <span data-ttu-id="54022-214">El <xref:System.Windows.Window.Closing> evento se desencadena cuando <xref:System.Windows.Window.Close%2A> se llama si se hace clic en el botón de cierre de una ventana, o si el usuario presiona ALT+F4.</span><span class="sxs-lookup"><span data-stu-id="54022-214">The <xref:System.Windows.Window.Closing> event is raised when <xref:System.Windows.Window.Close%2A> is called, if a window's Close button is clicked, or if the user presses ALT+F4.</span></span>  
  
 <span data-ttu-id="54022-215">Si se ha abierto una ventana poseída utilizando su propietario de la ventana <xref:System.Windows.Window.Show%2A>y el propietario de la ventana se cierra la ventana poseída <xref:System.Windows.Window.Closing> no se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="54022-215">If an owned window was opened by its owner window using <xref:System.Windows.Window.Show%2A>, and the owner window is closed, the owned window's <xref:System.Windows.Window.Closing> event is not raised.</span></span> <span data-ttu-id="54022-216">Si el propietario de una ventana se cierra (consulte <xref:System.Windows.Window.Owner%2A>), <xref:System.Windows.Window.Closing> no se genera en la ventana poseída.</span><span class="sxs-lookup"><span data-stu-id="54022-216">If the owner of a window is closed (see <xref:System.Windows.Window.Owner%2A>), <xref:System.Windows.Window.Closing> is not raised on the owned window.</span></span>  
  
 <span data-ttu-id="54022-217">Si <xref:System.Windows.Application.Shutdown%2A> se llama, el <xref:System.Windows.Window.Closing> se provoca el evento de cada ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-217">If <xref:System.Windows.Application.Shutdown%2A> is called, the <xref:System.Windows.Window.Closing> event for each window is raised.</span></span> <span data-ttu-id="54022-218">Sin embargo, si <xref:System.Windows.Window.Closing> está cancelado, se omitirá la cancelación.</span><span class="sxs-lookup"><span data-stu-id="54022-218">However, if <xref:System.Windows.Window.Closing> is canceled, cancellation is ignored.</span></span>  
  
 <span data-ttu-id="54022-219">Si una sesión finaliza debido a un usuario cierra la sesión o apaga, <xref:System.Windows.Window.Closing> no se genera; controlar <xref:System.Windows.Application.SessionEnding> para implementar el código que cancela el cierre de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="54022-219">If a session ends because a user logs off or shuts down, <xref:System.Windows.Window.Closing> is not raised; handle <xref:System.Windows.Application.SessionEnding> to implement code that cancels application closure.</span></span>  
  
 <span data-ttu-id="54022-220">Si desea mostrar y ocultar una ventana varias veces durante la vigencia de una aplicación, y no desea crear una nueva instancia la ventana cada vez que mostrar, se puede controlar la <xref:System.Windows.Window.Closing> eventos, cancelarlo y llamar a la <xref:System.Windows.Window.Hide%2A> método.</span><span class="sxs-lookup"><span data-stu-id="54022-220">If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to reinstantiate the window each time you show it, you can handle the <xref:System.Windows.Window.Closing> event, cancel it, and call the <xref:System.Windows.Window.Hide%2A> method.</span></span> <span data-ttu-id="54022-221">A continuación, puede llamar a <xref:System.Windows.Window.Show%2A> en la misma instancia para volver a abrirla.</span><span class="sxs-lookup"><span data-stu-id="54022-221">Then, you can call <xref:System.Windows.Window.Show%2A> on the same instance to reopen it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54022-222">En el ejemplo siguiente se muestra un <xref:System.Windows.Window> que determina si necesita la intervención del usuario para cerrar.</span><span class="sxs-lookup"><span data-stu-id="54022-222">The following example demonstrates a <xref:System.Windows.Window> that determines whether it needs user intervention to close.</span></span>  
  
 [!code-xaml[WindowClosingSnippets#WindowClosingXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowClosingSnippets/CSharp/DataWindow.xaml#windowclosingxaml1)]  
  
 [!code-csharp[WindowClosingSnippets](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowClosingSnippets/CSharp/DataWindow.xaml.cs)]
 [!code-vb[WindowClosingSnippets](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowClosingSnippets/visualbasic/datawindow.xaml.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54022-223">Se establece la propiedad <see cref="P:System.Windows.UIElement.Visibility" /> o se llama a <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" /> o <see cref="M:System.Windows.Window.Close" /> mientras se cierra una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-223"><see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Close" /> is called while a window is closing.</span></span></exception>
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="E:System.Windows.Window.Closed" />
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContentRendered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ ContentRendered;" />
      <MemberSignature Language="F#" Value="member this.ContentRendered : EventHandler " Usage="member this.ContentRendered : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-224">Se produce después de representar el contenido de una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-224">Occurs after a window's content has been rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-225">Si la ventana no tiene contenido, no se genera este evento.</span><span class="sxs-lookup"><span data-stu-id="54022-225">If the window has no content, this event is not raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ContentControl.Content" />
        <altmember cref="E:System.Windows.FrameworkElement.Loaded" />
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-226">Se produce cuando una ventana se convierte en ventana de fondo.</span><span class="sxs-lookup"><span data-stu-id="54022-226">Occurs when a window becomes a background window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-227">Se desactiva una ventana (se convierte en una ventana en segundo plano) cuando:</span><span class="sxs-lookup"><span data-stu-id="54022-227">A window is deactivated (becomes a background window) when:</span></span>  
  
-   <span data-ttu-id="54022-228">Un usuario cambia a otra ventana de la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="54022-228">A user switches to another window in the current application.</span></span>  
  
-   <span data-ttu-id="54022-229">Un usuario cambia a la ventana en otra aplicación mediante el uso de ALT+TAB, o mediante el Administrador de tareas.</span><span class="sxs-lookup"><span data-stu-id="54022-229">A user switches to the window in another application by using ALT+TAB or by using Task Manager.</span></span>  
  
-   <span data-ttu-id="54022-230">Un usuario hace clic con el botón de barra de tareas para una ventana en otra aplicación.</span><span class="sxs-lookup"><span data-stu-id="54022-230">A user clicks the taskbar button for a window in another application.</span></span>  
  
 <span data-ttu-id="54022-231">Windows que necesitan detectar cuándo se desactivan controlando el <xref:System.Windows.Window.Deactivated> eventos.</span><span class="sxs-lookup"><span data-stu-id="54022-231">Windows that need to detect when they become deactivated by handling the <xref:System.Windows.Window.Deactivated> event.</span></span>  
  
 <span data-ttu-id="54022-232">Primero se desactiva una ventana, es posible que se reactiva y desactivado muchas veces durante su vigencia.</span><span class="sxs-lookup"><span data-stu-id="54022-232">After a window is first deactivated, it may be reactivated and deactivated many times during its lifetime.</span></span> <span data-ttu-id="54022-233">Si el estado o comportamiento de una aplicación depende de su estado de activación, puede inspeccionar <xref:System.Windows.Window.IsActive%2A> para determinar qué estado de activación.</span><span class="sxs-lookup"><span data-stu-id="54022-233">If an application's behavior or state depends on its activation state, it can inspect <xref:System.Windows.Window.IsActive%2A> to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="54022-234">También puede ser una aplicación <xref:System.Windows.Application.Deactivated>.</span><span class="sxs-lookup"><span data-stu-id="54022-234">An application can also be <xref:System.Windows.Application.Deactivated>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; DialogResult { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Window.DialogResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DialogResultConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-235">Obtiene o establece el valor del resultado del cuadro de diálogo, que es el valor devuelto por el método <see cref="M:System.Windows.Window.ShowDialog" />.</span><span class="sxs-lookup"><span data-stu-id="54022-235">Gets or sets the dialog result value, which is the value that is returned from the <see cref="M:System.Windows.Window.ShowDialog" /> method.</span></span></summary>
        <value><span data-ttu-id="54022-236">Valor <see cref="T:System.Nullable`1" /> de tipo <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="54022-236">A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" />.</span></span> <span data-ttu-id="54022-237">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54022-237">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-238"><xref:System.Windows.Window.DialogResult%2A> puede usarse desde el código que se ha mostrado un cuadro de diálogo para determinar si un usuario acepta (`true`) o cancelado (`false`) el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="54022-238"><xref:System.Windows.Window.DialogResult%2A> can be used from the code that showed a dialog box to determine whether a user accepted (`true`) or canceled (`false`) the dialog box.</span></span> <span data-ttu-id="54022-239">Si se aceptó un cuadro de diálogo, se indica en el código que abre el cuadro de diálogo para recuperar los datos recopilados por el usuario y procesarlo.</span><span class="sxs-lookup"><span data-stu-id="54022-239">If a dialog box was accepted, this signifies to the code that opened the dialog box to retrieve the data that was collected by the user and process it.</span></span> <span data-ttu-id="54022-240">Si se ha cancelado un cuadro de diálogo, sin embargo, esto significa que el código de llamada debe detener cualquier procesamiento posterior.</span><span class="sxs-lookup"><span data-stu-id="54022-240">If a dialog box was canceled, however, this signifies that calling code should stop any further processing.</span></span>  
  
 <span data-ttu-id="54022-241">De forma predeterminada, un cuadro de diálogo se cancela cuando un usuario realiza una de las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="54022-241">By default, a dialog box is canceled when a user does one of the following:</span></span>  
  
-   <span data-ttu-id="54022-242">PressesALT + F4.</span><span class="sxs-lookup"><span data-stu-id="54022-242">PressesALT+F4.</span></span>  
  
-   <span data-ttu-id="54022-243">Hace clic en el **cerrar** botón.</span><span class="sxs-lookup"><span data-stu-id="54022-243">Clicks the **Close** button.</span></span>  
  
-   <span data-ttu-id="54022-244">Selecciona **cerrar** desde el menú del sistema.</span><span class="sxs-lookup"><span data-stu-id="54022-244">Selects **Close** from the System menu.</span></span>  
  
 <span data-ttu-id="54022-245">En todos estos casos, <xref:System.Windows.Window.DialogResult%2A> es `false` de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="54022-245">In all of these cases, <xref:System.Windows.Window.DialogResult%2A> is `false` by default.</span></span>  
  
 <span data-ttu-id="54022-246">Normalmente, un cuadro de diálogo proporciona un botón para cancelar un cuadro de diálogo, que es el botón especial cuya <xref:System.Windows.Controls.Button.IsCancel%2A> propiedad está establecida en `true`.</span><span class="sxs-lookup"><span data-stu-id="54022-246">A dialog box typically provides a special button to cancel a dialog, which is the button whose <xref:System.Windows.Controls.Button.IsCancel%2A> property is set to `true`.</span></span> <span data-ttu-id="54022-247">Un botón configurado de esta forma cerrará automáticamente una ventana cuando se presione o cuando se presiona la tecla ESC.</span><span class="sxs-lookup"><span data-stu-id="54022-247">A button configured this way will automatically close a window when either it is pressed, or when the ESC key is pressed.</span></span> <span data-ttu-id="54022-248">En cualquiera de estos casos, <xref:System.Windows.Window.DialogResult%2A> permanece `false`.</span><span class="sxs-lookup"><span data-stu-id="54022-248">In either of these cases, <xref:System.Windows.Window.DialogResult%2A> remains `false`.</span></span>  
  
 <span data-ttu-id="54022-249">Un cuadro de diálogo normalmente también otorga un botón Aceptar, que es el botón cuya <xref:System.Windows.Controls.Button.IsDefault%2A> propiedad está establecida en `true`.</span><span class="sxs-lookup"><span data-stu-id="54022-249">A dialog box also typically provides an accept button, which is the button whose <xref:System.Windows.Controls.Button.IsDefault%2A> property is set to `true`.</span></span> <span data-ttu-id="54022-250">Un botón configurado de esta forma, se producirá su <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos cuando se presiona este archivo o la tecla ENTRAR.</span><span class="sxs-lookup"><span data-stu-id="54022-250">A button configured this way will raise its <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event when either it or the ENTER key is pressed.</span></span> <span data-ttu-id="54022-251">Sin embargo, no cerrará automáticamente el cuadro de diálogo ni establecerá <xref:System.Windows.Window.DialogResult%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="54022-251">However, it won't automatically close the dialog box, nor will it set <xref:System.Windows.Window.DialogResult%2A> to `true`.</span></span> <span data-ttu-id="54022-252">Tiene que escribir manualmente este código, normalmente desde el <xref:System.Windows.Controls.Primitives.ButtonBase.Click> controlador de eventos para el botón predeterminado.</span><span class="sxs-lookup"><span data-stu-id="54022-252">You need to manually write this code, usually from the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler for the default button.</span></span>  
  
 <span data-ttu-id="54022-253"><xref:System.Windows.Window.DialogResult%2A> es `null` cuando se muestra el cuadro de diálogo, pero no aceptadas ni cancelar.</span><span class="sxs-lookup"><span data-stu-id="54022-253"><xref:System.Windows.Window.DialogResult%2A> is `null` when the dialog box is shown but neither accepted nor canceled.</span></span>  
  
 <span data-ttu-id="54022-254">Después de cerrar un cuadro de diálogo, puede obtener el resultado del cuadro de diálogo desde el valor devuelto por <xref:System.Windows.Window.ShowDialog%2A> método, o inspeccionando el <xref:System.Windows.Window.DialogResult%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="54022-254">After a dialog box closes, you can get the dialog result from the value returned by <xref:System.Windows.Window.ShowDialog%2A> method, or by inspecting the <xref:System.Windows.Window.DialogResult%2A> property.</span></span>  
  
 <span data-ttu-id="54022-255"><xref:System.Windows.Window.DialogResult%2A> solo puede establecerse cuando un <xref:System.Windows.Window> se abre mediante una llamada a su <xref:System.Windows.Window.ShowDialog%2A> método.</span><span class="sxs-lookup"><span data-stu-id="54022-255"><xref:System.Windows.Window.DialogResult%2A> can only be set when a <xref:System.Windows.Window> is opened by calling its <xref:System.Windows.Window.ShowDialog%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-256">No puede establecer ni obtener esta propiedad cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-256">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54022-257">En el ejemplo siguiente se muestra cómo configurar un botón Aceptar y un botón Cancelar para devolver la correspondiente <xref:System.Windows.Window.DialogResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-257">The following example shows how to configure an OK button and a Cancel button to return the appropriate <xref:System.Windows.Window.DialogResult%2A>.</span></span>  
  
 [!code-xaml[WindowDialogResultSnippets#WindowDialogResultXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDialogResultSnippets/CSharp/DialogBox.xaml#windowdialogresultxaml)]  
  
 [!code-csharp[WindowDialogResultSnippets#WindowDialogResultCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDialogResultSnippets/CSharp/DialogBox.xaml.cs#windowdialogresultcodebehind)]
 [!code-vb[WindowDialogResultSnippets#WindowDialogResultCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowDialogResultSnippets/visualbasic/dialogbox.xaml.vb#windowdialogresultcodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54022-258">Se establece <see cref="P:System.Windows.Window.DialogResult" /> antes de que se abra una ventana al llamar a <see cref="M:System.Windows.Window.ShowDialog" />.</span><span class="sxs-lookup"><span data-stu-id="54022-258"><see cref="P:System.Windows.Window.DialogResult" /> is set before a window is opened by calling <see cref="M:System.Windows.Window.ShowDialog" />.</span></span>  
  
<span data-ttu-id="54022-259">O bien</span><span class="sxs-lookup"><span data-stu-id="54022-259">-or-</span></span> 
 <span data-ttu-id="54022-260"><see cref="P:System.Windows.Window.DialogResult" /> se establece en una ventana que se abre al llamar a <see cref="M:System.Windows.Window.Show" />.</span><span class="sxs-lookup"><span data-stu-id="54022-260"><see cref="P:System.Windows.Window.DialogResult" /> is set on a window that is opened by calling <see cref="M:System.Windows.Window.Show" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberSignature Language="F#" Value="member this.DpiChanged : System.Windows.DpiChangedEventHandler " Usage="member this.DpiChanged : System.Windows.DpiChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-261">Se produce después de que cambie el valor de PPP de la pantalla en la que se muestra la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-261">Occurs after the DPI of the screen on which the Window is displayed changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DpiChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DpiChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.DpiChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DpiChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DpiChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DpiChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Window.DpiChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-262"><see cref="T:System.Windows.RoutedEvent" /> cuando el valor de PPP de la pantalla de Windows está en los cambios.</span><span class="sxs-lookup"><span data-stu-id="54022-262">A <see cref="T:System.Windows.RoutedEvent" /> for when the DPI of the screen the Window is on changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragMove">
      <MemberSignature Language="C#" Value="public void DragMove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DragMove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.DragMove" />
      <MemberSignature Language="VB.NET" Value="Public Sub DragMove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DragMove();" />
      <MemberSignature Language="F#" Value="member this.DragMove : unit -&gt; unit" Usage="window.DragMove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54022-263">Permite arrastrar una ventana por un mouse con su botón primario presionado sobre un área expuesta del área cliente de la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-263">Allows a window to be dragged by a mouse with its left button down over an exposed area of the window's client area.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-264">Debe ser el botón primario del mouse hacia abajo cuando <xref:System.Windows.Window.DragMove%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="54022-264">The left mouse button must be down when <xref:System.Windows.Window.DragMove%2A> is called.</span></span> <span data-ttu-id="54022-265">Es una manera de detectar cuándo se presiona el botón primario del mouse controlar la <xref:System.Windows.UIElement.MouseLeftButtonDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="54022-265">One way to detect when the left mouse button is pressed is to handle the <xref:System.Windows.UIElement.MouseLeftButtonDown> event.</span></span>  
  
 <span data-ttu-id="54022-266">Cuando <xref:System.Windows.Window.DragMove%2A> se llama a la izquierda debe estar presionado el botón del mouse sobre un área expuesta del área cliente de la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-266">When <xref:System.Windows.Window.DragMove%2A> is called, the left mouse button must be depressed over an exposed area of the window's client area.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-267">No se puede llamar a este método cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-267">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54022-268">El ejemplo siguiente muestra cómo invalidar <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> para llamar a <xref:System.Windows.Window.DragMove%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-268">The following example shows how to override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> to call <xref:System.Windows.Window.DragMove%2A>.</span></span>  
  
 [!code-csharp[WindowDragMoveSnippets#CallWindowDragMoveCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDragMoveSnippets/CSharp/MainWindow.xaml.cs#callwindowdragmovecodebehind)]
 [!code-vb[WindowDragMoveSnippets#CallWindowDragMoveCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowDragMoveSnippets/visualbasic/mainwindow.xaml.vb#callwindowdragmovecodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54022-269">El botón primario del mouse no está presionado.</span><span class="sxs-lookup"><span data-stu-id="54022-269">The left mouse button is not down.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="54022-270">Para obtener permiso arrastrar una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-270">for permission to drag a window.</span></span> <span data-ttu-id="54022-271">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="54022-271">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="E:System.Windows.Window.LocationChanged" />
      </Docs>
    </Member>
    <Member MemberName="GetWindow">
      <MemberSignature Language="C#" Value="public static System.Windows.Window GetWindow (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Window GetWindow(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Window ^ GetWindow(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetWindow : System.Windows.DependencyObject -&gt; System.Windows.Window" Usage="System.Windows.Window.GetWindow dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="54022-272">Objeto de dependencia.</span><span class="sxs-lookup"><span data-stu-id="54022-272">The dependency object.</span></span></param>
        <summary><span data-ttu-id="54022-273">Devuelve una referencia al objeto <see cref="T:System.Windows.Window" /> en el que se hospeda el árbol de contenido donde está ubicado el objeto de dependencia.</span><span class="sxs-lookup"><span data-stu-id="54022-273">Returns a reference to the <see cref="T:System.Windows.Window" /> object that hosts the content tree within which the dependency object is located.</span></span></summary>
        <returns><span data-ttu-id="54022-274">Referencia de <see cref="T:System.Windows.Window" /> a la ventana host.</span><span class="sxs-lookup"><span data-stu-id="54022-274">A <see cref="T:System.Windows.Window" /> reference to the host window.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="54022-275"><paramref name="dependencyObject" /> es null.</span><span class="sxs-lookup"><span data-stu-id="54022-275"><paramref name="dependencyObject" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public void Hide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Hide() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Hide" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hide();" />
      <MemberSignature Language="F#" Value="member this.Hide : unit -&gt; unit" Usage="window.Hide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54022-276">Oculta una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-276">Makes a window invisible.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-277">No se cierra una ventana cuando está oculto y ni el <xref:System.Windows.Window.Closing> ni <xref:System.Windows.Window.Closed> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="54022-277">A window is not closed when it is hidden, and neither the <xref:System.Windows.Window.Closing> nor <xref:System.Windows.Window.Closed> event is raised.</span></span> <span data-ttu-id="54022-278">En su lugar, la ventana <xref:System.Windows.UIElement.Visibility%2A> propiedad está establecida en <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="54022-278">Instead, the window's <xref:System.Windows.UIElement.Visibility%2A> property is set to <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="54022-279">Si una ventana es la aplicación <xref:System.Windows.Application.MainWindow%2A> y la aplicación <xref:System.Windows.Application.ShutdownMode%2A> es <xref:System.Windows.ShutdownMode.OnMainWindowClose>, la aplicación no se cierra.</span><span class="sxs-lookup"><span data-stu-id="54022-279">If a window is the application's <xref:System.Windows.Application.MainWindow%2A> and the application's <xref:System.Windows.Application.ShutdownMode%2A> is <xref:System.Windows.ShutdownMode.OnMainWindowClose>, the application does not shut down.</span></span> <span data-ttu-id="54022-280">Del mismo modo, la aplicación no se cierra si una ventana es la única y modo de apagado de la aplicación es <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span><span class="sxs-lookup"><span data-stu-id="54022-280">Likewise, the application does not shut down if a window is the only window and the application's shutdown mode is <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span></span>  
  
 <span data-ttu-id="54022-281">Si desea mostrar y ocultar una ventana varias veces durante la vigencia de una aplicación, y no desea volver a crear una instancia de la ventana cada vez que mostrar, se puede controlar la <xref:System.Windows.Window.Closing> eventos, cancelarlo y llamar a la <xref:System.Windows.Window.Hide%2A> método.</span><span class="sxs-lookup"><span data-stu-id="54022-281">If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to re-instantiate the window each time you show it, you can handle the <xref:System.Windows.Window.Closing> event, cancel it, and call the <xref:System.Windows.Window.Hide%2A> method.</span></span> <span data-ttu-id="54022-282">A continuación, puede llamar a <xref:System.Windows.Window.Show%2A> en la misma instancia para volver a abrirla.</span><span class="sxs-lookup"><span data-stu-id="54022-282">Then, you can call <xref:System.Windows.Window.Show%2A> on the same instance to re-open it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54022-283">Se llama a <see cref="M:System.Windows.Window.Hide" /> en una ventana que se está cerrando (<see cref="E:System.Windows.Window.Closing" />) o se ha cerrado (<see cref="E:System.Windows.Window.Closed" />).</span><span class="sxs-lookup"><span data-stu-id="54022-283"><see cref="M:System.Windows.Window.Hide" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span></span></exception>
        <altmember cref="M:System.Windows.Window.Show" />
        <altmember cref="M:System.Windows.Window.ShowDialog" />
        <altmember cref="M:System.Windows.Window.Close" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ImageSource Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageSource Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As ImageSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageSource ^ Icon { System::Windows::Media::ImageSource ^ get(); void set(System::Windows::Media::ImageSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Windows.Media.ImageSource with get, set" Usage="System.Windows.Window.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-284">Obtiene o establece el icono de una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-284">Gets or sets a window's icon.</span></span></summary>
        <value><span data-ttu-id="54022-285">Objeto <see cref="T:System.Windows.Media.ImageSource" /> que representa el icono.</span><span class="sxs-lookup"><span data-stu-id="54022-285">An <see cref="T:System.Windows.Media.ImageSource" /> object that represents the icon.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-286">Las aplicaciones independientes de Windows Presentation Foundation (WPF) tienen dos tipos de iconos:</span><span class="sxs-lookup"><span data-stu-id="54022-286">Windows Presentation Foundation (WPF) standalone applications have two types of icons:</span></span>  
  
-   <span data-ttu-id="54022-287">Icono de un ensamblado, que se especifica mediante el `<ApplicationIcon>` archivo de compilación de la propiedad de proyecto de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="54022-287">One assembly icon, which is specified by using the `<ApplicationIcon>` property in the application's project build file.</span></span> <span data-ttu-id="54022-288">Este icono se utiliza como el icono del escritorio para un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="54022-288">This icon is used as the desktop icon for an assembly.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="54022-289">Cuando se depura en Visual Studio, el icono no puede aparecer debido al proceso de hospedaje.</span><span class="sxs-lookup"><span data-stu-id="54022-289">When debugging in Visual Studio, your icon may not appear due to the hosting process.</span></span> <span data-ttu-id="54022-290">Si ejecuta el ejecutable, aparecerá el icono.</span><span class="sxs-lookup"><span data-stu-id="54022-290">If you run the executable, the icon will appear.</span></span> <span data-ttu-id="54022-291">Para obtener más información, vea [Proceso de alojamiento (vshost.exe)](https://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b).</span><span class="sxs-lookup"><span data-stu-id="54022-291">For more information, see [Hosting Process (vshost.exe)](https://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b).</span></span>  
  
-   <span data-ttu-id="54022-292">Un icono por ventana que se especifica estableciendo <xref:System.Windows.Window.Icon%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-292">One icon per window that is specified by setting <xref:System.Windows.Window.Icon%2A>.</span></span> <span data-ttu-id="54022-293">Para cada ventana, este icono se utiliza en la barra de título su botón de barra de tareas y en su entrada de lista de selección de aplicación ALT+TAB.</span><span class="sxs-lookup"><span data-stu-id="54022-293">For each window, this icon is used in its title bar, its task bar button, and in its ALT-TAB application selection list entry.</span></span>  
  
 <span data-ttu-id="54022-294">Una ventana de WPF siempre muestra un icono.</span><span class="sxs-lookup"><span data-stu-id="54022-294">A WPF window always displays an icon.</span></span> <span data-ttu-id="54022-295">Cuando no se proporciona mediante el establecimiento <xref:System.Windows.Window.Icon%2A>, WPF elige un icono para mostrar basándose en las siguientes reglas:</span><span class="sxs-lookup"><span data-stu-id="54022-295">When one is not provided by setting <xref:System.Windows.Window.Icon%2A>, WPF chooses an icon to display based on the following rules:</span></span>  
  
1.  <span data-ttu-id="54022-296">Utilice el icono de ensamblado, si se especifica.</span><span class="sxs-lookup"><span data-stu-id="54022-296">Use the assembly icon, if specified.</span></span>  
  
2.  <span data-ttu-id="54022-297">Si no se especifica el icono de ensamblado, utilice el icono de Microsoft Windows de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="54022-297">If the assembly icon is not specified, use the default Microsoft Windows icon.</span></span>  
  
 <span data-ttu-id="54022-298">Si usas <xref:System.Windows.Window.Icon%2A> para especificar un icono de ventana personalizado, puede restaurar el icono de aplicación predeterminado estableciendo <xref:System.Windows.Window.Icon%2A> a `null`.</span><span class="sxs-lookup"><span data-stu-id="54022-298">If you use <xref:System.Windows.Window.Icon%2A> to specify a custom window icon, you can restore the default application icon by setting <xref:System.Windows.Window.Icon%2A> to `null`.</span></span>  
  
 <span data-ttu-id="54022-299">Un solo icono puede usarse en una variedad de formas en Windows, como se muestra en la barra de título de una ventana, la barra de tareas para una ventana, la lista de selección de archivo ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="54022-299">A single icon can be used in a variety of ways in Windows, including being shown in the title bar of a window, the task bar for a window, the ALT+TAB file selection list.</span></span> <span data-ttu-id="54022-300">Cada uno de ellos muestra el icono con un tamaño distinto; se muestra un icono de 16 x 16 píxeles en la barra de título de una ventana y en la barra de tareas, mientras se muestra un icono de 32 x 32 píxeles en la lista de selección de archivo ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="54022-300">Each of these shows the icon using a different size; a 16x16 pixel icon is displayed in the title bar of a window and in the task bar, while a 32x32 pixel icon is displayed in the ALT+TAB file selection list.</span></span> <span data-ttu-id="54022-301">Algunas aplicaciones, como [!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)], proporcione un **vista** menú que le permite elegir el tamaño del icono que le gustaría ver.</span><span class="sxs-lookup"><span data-stu-id="54022-301">Some applications, like [!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)], provide a **View** menu that allows you to choose the size of the icon you'd like to view.</span></span>  
  
 <span data-ttu-id="54022-302">Para satisfacer los distintos tamaños de pantalla, un archivo de icono se compone de uno o varios iconos reales donde cada uno de ellos representa una versión del icono que tiene como destino una profundidad de color y tamaño específica.</span><span class="sxs-lookup"><span data-stu-id="54022-302">To cater to the various display sizes, an icon file is composed of one or more actual icons where each one represents a version of the icon that targets a specific size and color depth.</span></span> <span data-ttu-id="54022-303">Por ejemplo, un icono solo puede tener un único icono de 16 x 16 píxeles y 16 colores, mientras que otro puede contener 16 x 16 píxeles y los iconos de 32 x 32 píxeles con 16 colores y 256 colores.</span><span class="sxs-lookup"><span data-stu-id="54022-303">For example, one icon may only have a single 16x16 pixel icon with 16 colors, while another may contain 16x16 pixel and 32x32 pixel icons with both 16 colors and 256 colors.</span></span>  
  
 <span data-ttu-id="54022-304">Si existen iconos para todos los posibles tamaños y profundidad de color dentro de un archivo de icono, <xref:System.Windows.Window> usará el icono adecuado.</span><span class="sxs-lookup"><span data-stu-id="54022-304">If icons for all possible sizes and color depths exist within an icon file, <xref:System.Windows.Window> will use the appropriate icon.</span></span> <span data-ttu-id="54022-305">Si un archivo de icono contiene sólo un subconjunto de todos los iconos posibles <xref:System.Windows.Window> utiliza el siguiente icono más apropiado en orden decreciente de los tamaños y profundidad de color.</span><span class="sxs-lookup"><span data-stu-id="54022-305">If an icon file contains only a subset of all the possible icons, <xref:System.Windows.Window> uses the next most appropriate icon in order of decreasing sizes and color depth.</span></span>  
  
 <span data-ttu-id="54022-306">El resultado es que siempre se usará un icono por <xref:System.Windows.Window>, aunque el icono utilizado no puede tener como destino la profundidad de color y tamaño necesaria.</span><span class="sxs-lookup"><span data-stu-id="54022-306">The result is that an icon will always be used by <xref:System.Windows.Window>, although the icon used may not target the required size and color depth.</span></span> <span data-ttu-id="54022-307">Por ejemplo, un icono de 16 x 16 píxeles y 16 colores puede utilizarse para mostrar como un icono de 32 x 32 píxeles con 256 colores.</span><span class="sxs-lookup"><span data-stu-id="54022-307">For example, a 16x16 pixel icon with 16 colors may be used for display as a 32x32 pixel icon with 256 colors.</span></span> <span data-ttu-id="54022-308">Esto puede provocar efectos visuales no deseados, como la pixilación, pero puede evitarse mediante la creación de iconos para todos los tamaños y profundidad de color.</span><span class="sxs-lookup"><span data-stu-id="54022-308">This can cause undesirable visual effects, such as pixilation, but may be avoided by creating icons for all targeted sizes and color depths.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-309">No puede establecer ni obtener esta propiedad cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-309">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowIcon"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="54022-310">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="54022-310">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="54022-311">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="54022-311">Identifier field</span></span>|<xref:System.Windows.Window.IconProperty>|  
|<span data-ttu-id="54022-312">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="54022-312">Metadata properties set to `true`</span></span>|<span data-ttu-id="54022-313">None</span><span class="sxs-lookup"><span data-stu-id="54022-313">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="54022-314">El ejemplo siguiente muestra cómo establecer un icono de ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-314">The following example shows how to set a window icon.</span></span>  
  
 [!code-xaml[WindowIconSnippets#WindowIconSetXAML](~/samples/snippets/xaml/VS_Snippets_Wpf/WindowIconSnippets/XAML/MainWindow.xaml#windowiconsetxaml)]  
  
 [!code-csharp[WindowIconSnippets#SetWindowIconInCode](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowIconSnippets/CSharp/MainWindow.xaml.cs#setwindowiconincode)]
 [!code-vb[WindowIconSnippets#SetWindowIconInCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowIconSnippets/visualbasic/mainwindow.xaml.vb#setwindowiconincode)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="54022-315">Para obtener permiso establecer el icono.</span><span class="sxs-lookup"><span data-stu-id="54022-315">for permission to set the icon.</span></span> <span data-ttu-id="54022-316">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="54022-316">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IconProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IconProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.IconProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IconProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IconProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IconProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.IconProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-317">Identifica la propiedad de dependencia <see cref="P:System.Windows.Window.Icon" />.</span><span class="sxs-lookup"><span data-stu-id="54022-317">Identifies the <see cref="P:System.Windows.Window.Icon" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="System.Windows.Window.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-318">Obtiene un valor que indica si la ventana está activa.</span><span class="sxs-lookup"><span data-stu-id="54022-318">Gets a value that indicates whether the window is active.</span></span></summary>
        <value><span data-ttu-id="54022-319">Devuelve <see langword="true" /> si la ventana está activa; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54022-319"><see langword="true" /> if the window is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="54022-320">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54022-320">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-321">Una ventana activa es la ventana de primer plano actual del usuario y tiene el foco, que se especifica mediante la apariencia de la barra de título activa.</span><span class="sxs-lookup"><span data-stu-id="54022-321">An active window is the user's current foreground window and has the focus, which is signified by the active appearance of the title bar.</span></span> <span data-ttu-id="54022-322">Una ventana activa también será la parte superior de todas las ventanas de nivel superior que no establecen explícitamente la <xref:System.Windows.Window.Topmost%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="54022-322">An active window will also be the top-most of all top-level windows that don't explicitly set the <xref:System.Windows.Window.Topmost%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_WindowIsActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="54022-323">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="54022-323">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="54022-324">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="54022-324">Identifier field</span></span>|<xref:System.Windows.Window.IsActiveProperty>|  
|<span data-ttu-id="54022-325">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="54022-325">Metadata properties set to `true`</span></span>|<span data-ttu-id="54022-326">None</span><span class="sxs-lookup"><span data-stu-id="54022-326">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="IsActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.IsActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsActiveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsActiveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.IsActiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-327">Identifica la propiedad de dependencia <see cref="P:System.Windows.Window.IsActive" />.</span><span class="sxs-lookup"><span data-stu-id="54022-327">Identifies the <see cref="P:System.Windows.Window.IsActive" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Left : double with get, set" Usage="System.Windows.Window.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-328">Obtiene o establece la posición del borde izquierdo de la ventana con respecto al escritorio.</span><span class="sxs-lookup"><span data-stu-id="54022-328">Gets or sets the position of the window's left edge, in relation to the desktop.</span></span></summary>
        <value><span data-ttu-id="54022-329">Posición del borde izquierdo de la ventana, en unidades lógicas (1/96 de una pulgada).</span><span class="sxs-lookup"><span data-stu-id="54022-329">The position of the window's left edge, in logical units (1/96th of an inch).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-330">Cuando el <xref:System.Windows.Window> está maximizada o minimizada, este valor representa el borde izquierdo de la restauración de punto para la <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="54022-330">When the <xref:System.Windows.Window> is maximized or minimized, this value represents the left edge of the restore point for the <xref:System.Windows.Window>.</span></span>  
  
 <span data-ttu-id="54022-331">Esta propiedad no se puede establecer a través de un estilo.</span><span class="sxs-lookup"><span data-stu-id="54022-331">This property cannot be set through a style.</span></span>  
  
 <span data-ttu-id="54022-332">Si no especifica un valor, <xref:System.Windows.Window.Left%2A> se establece en el valor predeterminado del sistema.</span><span class="sxs-lookup"><span data-stu-id="54022-332">If you do not specify a value, <xref:System.Windows.Window.Left%2A> is set to the system default value.</span></span> <span data-ttu-id="54022-333">También puede especificar el valor predeterminado del sistema estableciendo <xref:System.Windows.Window.Left%2A> a <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="54022-333">You can also specify the system default value by setting <xref:System.Windows.Window.Left%2A> to <xref:System.Double.NaN>.</span></span> <span data-ttu-id="54022-334">Ni <xref:System.Double.NegativeInfinity> ni <xref:System.Double.PositiveInfinity> es un valor válido para <xref:System.Windows.Window.Left%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-334">Neither <xref:System.Double.NegativeInfinity> nor <xref:System.Double.PositiveInfinity> is a valid value for <xref:System.Windows.Window.Left%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-335">No puede establecer ni obtener esta propiedad cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-335">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowLeft"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="54022-336">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="54022-336">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="54022-337">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="54022-337">Identifier field</span></span>|<xref:System.Windows.Window.LeftProperty>|  
|<span data-ttu-id="54022-338">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="54022-338">Metadata properties set to `true`</span></span>|<span data-ttu-id="54022-339">None</span><span class="sxs-lookup"><span data-stu-id="54022-339">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Top" />
      </Docs>
    </Member>
    <Member MemberName="LeftProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LeftProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LeftProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.LeftProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LeftProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LeftProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LeftProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.LeftProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-340">Identifica la propiedad de dependencia <see cref="P:System.Windows.Window.Left" />.</span><span class="sxs-lookup"><span data-stu-id="54022-340">Identifies the <see cref="P:System.Windows.Window.Left" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LocationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler " Usage="member this.LocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-341">Se produce cuando cambia la ubicación de la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-341">Occurs when the window's location changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-342">Ubicación de la ventana cambia cuando:</span><span class="sxs-lookup"><span data-stu-id="54022-342">A window's location changes when:</span></span>  
  
-   <span data-ttu-id="54022-343">Un usuario mueve una ventana arrastrando la barra de título.</span><span class="sxs-lookup"><span data-stu-id="54022-343">A user moves a window by dragging it with the window's title bar.</span></span>  
  
-   <span data-ttu-id="54022-344">Una ventana se mueve después <xref:System.Windows.Window.DragMove%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="54022-344">A window is moved after <xref:System.Windows.Window.DragMove%2A> is called.</span></span>  
  
-   <span data-ttu-id="54022-345">Ya sea el <xref:System.Windows.Window.Left%2A> o <xref:System.Windows.Window.Top%2A> propiedad se establece mediante programación.</span><span class="sxs-lookup"><span data-stu-id="54022-345">Either the <xref:System.Windows.Window.Left%2A> or <xref:System.Windows.Window.Top%2A> property is set programmatically.</span></span>  
  
-   <span data-ttu-id="54022-346">El **mover** se elige el elemento de menú del menú de sistema de una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-346">The **Move** menu item of a window's System menu is chosen.</span></span>  
  
-   <span data-ttu-id="54022-347">El <xref:System.Windows.Window.WindowState%2A> se cambia la propiedad.</span><span class="sxs-lookup"><span data-stu-id="54022-347">The <xref:System.Windows.Window.WindowState%2A> property is changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
        <altmember cref="P:System.Windows.Window.Top" />
        <altmember cref="P:System.Windows.Window.RestoreBounds" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Window.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-348">Obtiene un enumerador para los elementos secundarios lógicos de una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-348">Gets an enumerator for a window's logical child elements.</span></span></summary>
        <value><span data-ttu-id="54022-349"><see cref="T:System.Collections.IEnumerator" /> de los elementos secundarios lógicos de una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-349">An <see cref="T:System.Collections.IEnumerator" /> a window's logical child elements.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkElement.LogicalChildren" />
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="window.MeasureOverride availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="54022-350"><see cref="T:System.Windows.Size" /> que refleja el tamaño disponible que esta ventana puede dar al elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="54022-350">A <see cref="T:System.Windows.Size" /> that reflects the available size that this window can give to the child.</span></span> <span data-ttu-id="54022-351">Se puede usar infinito como valor para indicar que la ventana puede ajustarse a cualquier contenido disponible.</span><span class="sxs-lookup"><span data-stu-id="54022-351">Infinity can be given as a value to indicate that the window will size to whatever content is available.</span></span></param>
        <summary><span data-ttu-id="54022-352">Invalide este método para medir el tamaño de una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-352">Override this method to measure the size of a window.</span></span></summary>
        <returns><span data-ttu-id="54022-353"><see cref="T:System.Windows.Size" /> que refleja el tamaño que esta ventana determina que necesita durante el diseño, basándose en sus cálculos del tamaño de los elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="54022-353">A <see cref="T:System.Windows.Size" /> that reflects the size that this window determines it needs during layout, based on its calculations of children's sizes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-354"><xref:System.Windows.Window.MeasureOverride%2A> no se llama cuando el <xref:System.Windows.UIElement.Visibility%2A> propiedad tiene un valor de <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="54022-354"><xref:System.Windows.Window.MeasureOverride%2A> is not called when the <xref:System.Windows.UIElement.Visibility%2A> property has a value of <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="54022-355">Si el valor de la <xref:System.Windows.UIElement.Visibility%2A> propiedad <xref:System.Windows.Visibility.Hidden> o <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.MeasureOverride%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="54022-355">If the value of the <xref:System.Windows.UIElement.Visibility%2A> property is either <xref:System.Windows.Visibility.Hidden> or <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.MeasureOverride%2A> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-356">Cuando ya sea <xref:System.Windows.Window.Show%2A> o <xref:System.Windows.Window.ShowDialog%2A> se denominan, el <xref:System.Windows.UIElement.Visibility%2A> propiedad de un <xref:System.Windows.Window> está establecido en <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="54022-356">When either <xref:System.Windows.Window.Show%2A> or <xref:System.Windows.Window.ShowDialog%2A> are called, the <xref:System.Windows.UIElement.Visibility%2A> property of a <xref:System.Windows.Window> is set to <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActivated : EventArgs -&gt; unit&#xA;override this.OnActivated : EventArgs -&gt; unit" Usage="window.OnActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="54022-357">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="54022-357">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="54022-358">Genera el evento <see cref="E:System.Windows.Window.Activated" />.</span><span class="sxs-lookup"><span data-stu-id="54022-358">Raises the <see cref="E:System.Windows.Window.Activated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-359"><xref:System.Windows.Window.OnActivated%2A> genera el evento <xref:System.Windows.Window.Activated>.</span><span class="sxs-lookup"><span data-stu-id="54022-359"><xref:System.Windows.Window.OnActivated%2A> raises the <xref:System.Windows.Window.Activated> event.</span></span>  
  
 <span data-ttu-id="54022-360">Un tipo que derive de <xref:System.Windows.Window> pueden invalidar <xref:System.Windows.Window.OnActivated%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-360">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnActivated%2A>.</span></span> <span data-ttu-id="54022-361">El método invalidado debe llamar a <xref:System.Windows.Window.OnActivated%2A> en la clase base si <xref:System.Windows.Window.Activated> debe generarse.</span><span class="sxs-lookup"><span data-stu-id="54022-361">The overridden method must call <xref:System.Windows.Window.OnActivated%2A> on the base class if <xref:System.Windows.Window.Activated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnDeactivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : EventArgs -&gt; unit&#xA;override this.OnClosed : EventArgs -&gt; unit" Usage="window.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="54022-362">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="54022-362">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="54022-363">Genera el evento <see cref="E:System.Windows.Window.Closed" />.</span><span class="sxs-lookup"><span data-stu-id="54022-363">Raises the <see cref="E:System.Windows.Window.Closed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-364"><xref:System.Windows.Window.OnClosed%2A> genera el evento <xref:System.Windows.Window.Closed>.</span><span class="sxs-lookup"><span data-stu-id="54022-364"><xref:System.Windows.Window.OnClosed%2A> raises the <xref:System.Windows.Window.Closed> event.</span></span>  
  
 <span data-ttu-id="54022-365">Un tipo que derive de <xref:System.Windows.Window> pueden invalidar <xref:System.Windows.Window.OnClosed%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-365">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnClosed%2A>.</span></span> <span data-ttu-id="54022-366">El método invalidado debe llamar a <xref:System.Windows.Window.OnClosed%2A> en la clase base si <xref:System.Windows.Window.Closed> debe generarse.</span><span class="sxs-lookup"><span data-stu-id="54022-366">The overridden method must call <xref:System.Windows.Window.OnClosed%2A> on the base class if <xref:System.Windows.Window.Closed> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosing(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosing (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosing(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="window.OnClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="54022-367">Objeto <see cref="T:System.ComponentModel.CancelEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="54022-367">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="54022-368">Genera el evento <see cref="E:System.Windows.Window.Closing" />.</span><span class="sxs-lookup"><span data-stu-id="54022-368">Raises the <see cref="E:System.Windows.Window.Closing" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-369"><xref:System.Windows.Window.OnClosing%2A> genera el evento <xref:System.Windows.Window.Closing>.</span><span class="sxs-lookup"><span data-stu-id="54022-369"><xref:System.Windows.Window.OnClosing%2A> raises the <xref:System.Windows.Window.Closing> event.</span></span>  
  
 <span data-ttu-id="54022-370">Un tipo que derive de <xref:System.Windows.Window> pueden invalidar <xref:System.Windows.Window.OnClosing%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-370">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnClosing%2A>.</span></span> <span data-ttu-id="54022-371">El método invalidado debe llamar a <xref:System.Windows.Window.OnClosing%2A> en la clase base si <xref:System.Windows.Window.Closing> debe generarse.</span><span class="sxs-lookup"><span data-stu-id="54022-371">The overridden method must call <xref:System.Windows.Window.OnClosing%2A> on the base class if <xref:System.Windows.Window.Closing> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnClosed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnContentChanged">
      <MemberSignature Language="C#" Value="protected override void OnContentChanged (object oldContent, object newContent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContentChanged(object oldContent, object newContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContentChanged (oldContent As Object, newContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContentChanged(System::Object ^ oldContent, System::Object ^ newContent);" />
      <MemberSignature Language="F#" Value="override this.OnContentChanged : obj * obj -&gt; unit" Usage="window.OnContentChanged (oldContent, newContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContent" Type="System.Object" />
        <Parameter Name="newContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldContent"><span data-ttu-id="54022-372">Referencia a la raíz del árbol de contenido antiguo.</span><span class="sxs-lookup"><span data-stu-id="54022-372">A reference to the root of the old content tree.</span></span></param>
        <param name="newContent"><span data-ttu-id="54022-373">Referencia a la raíz del árbol de contenido nuevo.</span><span class="sxs-lookup"><span data-stu-id="54022-373">A reference to the root of the new content tree.</span></span></param>
        <summary><span data-ttu-id="54022-374">Se le llama cuando cambia la propiedad <see cref="P:System.Windows.Controls.ContentControl.Content" />.</span><span class="sxs-lookup"><span data-stu-id="54022-374">Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentRendered">
      <MemberSignature Language="C#" Value="protected virtual void OnContentRendered (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentRendered(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnContentRendered(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentRendered (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentRendered(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContentRendered : EventArgs -&gt; unit&#xA;override this.OnContentRendered : EventArgs -&gt; unit" Usage="window.OnContentRendered e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="54022-375">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="54022-375">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="54022-376">Genera el evento <see cref="E:System.Windows.Window.ContentRendered" />.</span><span class="sxs-lookup"><span data-stu-id="54022-376">Raises the <see cref="E:System.Windows.Window.ContentRendered" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-377"><xref:System.Windows.Window.OnContentRendered%2A> genera el evento <xref:System.Windows.Window.ContentRendered>.</span><span class="sxs-lookup"><span data-stu-id="54022-377"><xref:System.Windows.Window.OnContentRendered%2A> raises the <xref:System.Windows.Window.ContentRendered> event.</span></span>  
  
 <span data-ttu-id="54022-378">Un tipo que derive de <xref:System.Windows.Window> pueden invalidar <xref:System.Windows.Window.OnContentRendered%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-378">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnContentRendered%2A>.</span></span> <span data-ttu-id="54022-379">El método invalidado debe llamar a <xref:System.Windows.Window.OnContentRendered%2A> en la clase base si <xref:System.Windows.Window.ContentRendered> debe generarse.</span><span class="sxs-lookup"><span data-stu-id="54022-379">The overridden method must call <xref:System.Windows.Window.OnContentRendered%2A> on the base class if <xref:System.Windows.Window.ContentRendered> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="window.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54022-380">Crea y devuelve un objeto <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> para este <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="54022-380">Creates and returns a <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span></span></summary>
        <returns><span data-ttu-id="54022-381">Un objeto <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> para este <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="54022-381">A <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-382">Este método invalida <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-382">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeactivated">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeactivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnDeactivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeactivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeactivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeactivated : EventArgs -&gt; unit&#xA;override this.OnDeactivated : EventArgs -&gt; unit" Usage="window.OnDeactivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="54022-383">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="54022-383">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="54022-384">Genera el evento <see cref="E:System.Windows.Window.Deactivated" />.</span><span class="sxs-lookup"><span data-stu-id="54022-384">Raises the <see cref="E:System.Windows.Window.Deactivated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-385"><xref:System.Windows.Window.OnDeactivated%2A> genera el evento <xref:System.Windows.Window.Deactivated>.</span><span class="sxs-lookup"><span data-stu-id="54022-385"><xref:System.Windows.Window.OnDeactivated%2A> raises the <xref:System.Windows.Window.Deactivated> event.</span></span>  
  
 <span data-ttu-id="54022-386">Un tipo que derive de <xref:System.Windows.Window> pueden invalidar <xref:System.Windows.Window.OnDeactivated%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-386">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnDeactivated%2A>.</span></span> <span data-ttu-id="54022-387">El método invalidado debe llamar a <xref:System.Windows.Window.OnDeactivated%2A> en la clase base si <xref:System.Windows.Window.Deactivated> debe generarse.</span><span class="sxs-lookup"><span data-stu-id="54022-387">The overridden method must call <xref:System.Windows.Window.OnDeactivated%2A> on the base class if <xref:System.Windows.Window.Deactivated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnActivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected override void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpi, valuetype System.Windows.DpiScale newDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDpiChanged (oldDpi As DpiScale, newDpi As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDpiChanged(System::Windows::DpiScale oldDpi, System::Windows::DpiScale newDpi);" />
      <MemberSignature Language="F#" Value="override this.OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit" Usage="window.OnDpiChanged (oldDpi, newDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpi" Type="System.Windows.DpiScale" />
        <Parameter Name="newDpi" Type="System.Windows.DpiScale" />
      </Parameters>
      <Docs>
        <param name="oldDpi"><span data-ttu-id="54022-388">Configuración de escala de PPP anterior.</span><span class="sxs-lookup"><span data-stu-id="54022-388">The previous DPI scale setting.</span></span></param>
        <param name="newDpi"><span data-ttu-id="54022-389">Nueva configuración de escala de PPP.</span><span class="sxs-lookup"><span data-stu-id="54022-389">The new DPI scale setting.</span></span></param>
        <summary><span data-ttu-id="54022-390">Llamado cuando cambia el valor de PPP en el que esta ventana se representa.</span><span class="sxs-lookup"><span data-stu-id="54022-390">Called when the DPI at which this window is rendered changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLocationChanged : EventArgs -&gt; unit&#xA;override this.OnLocationChanged : EventArgs -&gt; unit" Usage="window.OnLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="54022-391">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="54022-391">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="54022-392">Genera el evento <see cref="E:System.Windows.Window.LocationChanged" />.</span><span class="sxs-lookup"><span data-stu-id="54022-392">Raises the <see cref="E:System.Windows.Window.LocationChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-393"><xref:System.Windows.Window.OnLocationChanged%2A> genera el evento <xref:System.Windows.Window.LocationChanged>.</span><span class="sxs-lookup"><span data-stu-id="54022-393"><xref:System.Windows.Window.OnLocationChanged%2A> raises the <xref:System.Windows.Window.LocationChanged> event.</span></span>  
  
 <span data-ttu-id="54022-394">Un tipo que derive de <xref:System.Windows.Window> pueden invalidar <xref:System.Windows.Window.OnLocationChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-394">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnLocationChanged%2A>.</span></span> <span data-ttu-id="54022-395">El método invalidado debe llamar a <xref:System.Windows.Window.OnLocationChanged%2A> en la clase base si <xref:System.Windows.Window.LocationChanged> debe generarse.</span><span class="sxs-lookup"><span data-stu-id="54022-395">The overridden method must call <xref:System.Windows.Window.OnLocationChanged%2A> on the base class if <xref:System.Windows.Window.LocationChanged> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
        <altmember cref="P:System.Windows.Window.Top" />
      </Docs>
    </Member>
    <Member MemberName="OnManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="protected override void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnManipulationBoundaryFeedback(class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnManipulationBoundaryFeedback (e As ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnManipulationBoundaryFeedback(System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit" Usage="window.OnManipulationBoundaryFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="54022-396">Datos del evento.</span><span class="sxs-lookup"><span data-stu-id="54022-396">The data for the event.</span></span></param>
        <summary><span data-ttu-id="54022-397">Se invoca cuando se produce el evento <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="54022-397">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-398">Esta implementación no cambia el estado controlado (la <xref:System.Windows.RoutedEventArgs.Handled%2A> propiedad) de la <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> datos del evento.</span><span class="sxs-lookup"><span data-stu-id="54022-398">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="54022-399">Si invalida <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />, llame siempre a la implementación base su <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /> implementación.</span><span class="sxs-lookup"><span data-stu-id="54022-399">If you override <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /> implementation.</span></span> <span data-ttu-id="54022-400">Error al llamar a la implementación base impide que las clases base controle el evento, lo que podría cambiar el comportamiento de tiempo de ejecución de la clase final.</span><span class="sxs-lookup"><span data-stu-id="54022-400">Failure to call the base implementation prevents base classes from handling the event, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="54022-401">Puede llamar a la implementación base antes o después de su tratamiento especial, dependiendo de sus requisitos.</span><span class="sxs-lookup"><span data-stu-id="54022-401">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSourceInitialized">
      <MemberSignature Language="C#" Value="protected virtual void OnSourceInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSourceInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSourceInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSourceInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSourceInitialized : EventArgs -&gt; unit&#xA;override this.OnSourceInitialized : EventArgs -&gt; unit" Usage="window.OnSourceInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="54022-402">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="54022-402">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="54022-403">Genera el evento <see cref="E:System.Windows.Window.SourceInitialized" />.</span><span class="sxs-lookup"><span data-stu-id="54022-403">Raises the <see cref="E:System.Windows.Window.SourceInitialized" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-404"><xref:System.Windows.Window.OnSourceInitialized%2A> genera el evento <xref:System.Windows.Window.SourceInitialized>.</span><span class="sxs-lookup"><span data-stu-id="54022-404"><xref:System.Windows.Window.OnSourceInitialized%2A> raises the <xref:System.Windows.Window.SourceInitialized> event.</span></span>  
  
 <span data-ttu-id="54022-405">Un tipo que derive de <xref:System.Windows.Window> pueden invalidar <xref:System.Windows.Window.OnSourceInitialized%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-405">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnSourceInitialized%2A>.</span></span> <span data-ttu-id="54022-406">El método invalidado debe llamar a <xref:System.Windows.Window.OnSourceInitialized%2A> en la clase base si <xref:System.Windows.Window.SourceInitialized> debe generarse.</span><span class="sxs-lookup"><span data-stu-id="54022-406">The overridden method must call <xref:System.Windows.Window.OnSourceInitialized%2A> on the base class if <xref:System.Windows.Window.SourceInitialized> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStateChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStateChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnStateChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStateChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStateChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStateChanged : EventArgs -&gt; unit&#xA;override this.OnStateChanged : EventArgs -&gt; unit" Usage="window.OnStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="54022-407">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="54022-407">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="54022-408">Genera el evento <see cref="E:System.Windows.Window.StateChanged" />.</span><span class="sxs-lookup"><span data-stu-id="54022-408">Raises the <see cref="E:System.Windows.Window.StateChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-409"><xref:System.Windows.Window.OnStateChanged%2A> genera el evento <xref:System.Windows.Window.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="54022-409"><xref:System.Windows.Window.OnStateChanged%2A> raises the <xref:System.Windows.Window.StateChanged> event.</span></span>  
  
 <span data-ttu-id="54022-410">Un tipo que derive de <xref:System.Windows.Window> pueden invalidar <xref:System.Windows.Window.OnStateChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-410">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnStateChanged%2A>.</span></span> <span data-ttu-id="54022-411">El método invalidado debe llamar a <xref:System.Windows.Window.OnStateChanged%2A> en la clase base si <xref:System.Windows.Window.StateChanged> debe generarse.</span><span class="sxs-lookup"><span data-stu-id="54022-411">The overridden method must call <xref:System.Windows.Window.OnStateChanged%2A> on the base class if <xref:System.Windows.Window.StateChanged> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualChildrenChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualChildrenChanged (System.Windows.DependencyObject visualAdded, System.Windows.DependencyObject visualRemoved);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualChildrenChanged(class System.Windows.DependencyObject visualAdded, class System.Windows.DependencyObject visualRemoved) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualChildrenChanged (visualAdded As DependencyObject, visualRemoved As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualChildrenChanged(System::Windows::DependencyObject ^ visualAdded, System::Windows::DependencyObject ^ visualRemoved);" />
      <MemberSignature Language="F#" Value="override this.OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="window.OnVisualChildrenChanged (visualAdded, visualRemoved)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visualAdded" Type="System.Windows.DependencyObject" />
        <Parameter Name="visualRemoved" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="visualAdded"><span data-ttu-id="54022-412"><see cref="T:System.Windows.Media.Visual" /> que se agregó a la colección.</span><span class="sxs-lookup"><span data-stu-id="54022-412">The <see cref="T:System.Windows.Media.Visual" /> that was added to the collection.</span></span></param>
        <param name="visualRemoved"><span data-ttu-id="54022-413">El <see cref="T:System.Windows.Media.Visual" /> que se ha quitado de la recolección.</span><span class="sxs-lookup"><span data-stu-id="54022-413">The <see cref="T:System.Windows.Media.Visual" /> that was removed from the collection.</span></span></param>
        <summary><span data-ttu-id="54022-414">Se le llama cuando se modifica la colección <see cref="T:System.Windows.Media.VisualCollection" /> del objeto <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="54022-414">Called when the <see cref="T:System.Windows.Media.VisualCollection" /> of this <see cref="T:System.Windows.Window" /> object is modified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override sealed void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="window.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="54022-415">Elemento primario anterior.</span><span class="sxs-lookup"><span data-stu-id="54022-415">The previous parent.</span></span> <span data-ttu-id="54022-416">Se establece en null si el objeto <see cref="T:System.Windows.DependencyObject" /> no tiene un elemento primario anterior.</span><span class="sxs-lookup"><span data-stu-id="54022-416">Set to null if the <see cref="T:System.Windows.DependencyObject" /> did not have a previous parent.</span></span></param>
        <summary><span data-ttu-id="54022-417">Se llama a este método cuando cambia el elemento primario de la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-417">Called when the parent of the window is changed.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="OwnedWindows">
      <MemberSignature Language="C#" Value="public System.Windows.WindowCollection OwnedWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.WindowCollection OwnedWindows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.OwnedWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnedWindows As WindowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowCollection ^ OwnedWindows { System::Windows::WindowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnedWindows : System.Windows.WindowCollection" Usage="System.Windows.Window.OwnedWindows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-418">Obtiene una colección de ventanas de las que esta ventana es el propietario.</span><span class="sxs-lookup"><span data-stu-id="54022-418">Gets a collection of windows for which this window is the owner.</span></span></summary>
        <value><span data-ttu-id="54022-419"><see cref="T:System.Windows.WindowCollection" /> que contiene referencias a las ventanas de las que esta ventana es el propietario.</span><span class="sxs-lookup"><span data-stu-id="54022-419">A <see cref="T:System.Windows.WindowCollection" /> that contains references to the windows for which this window is the owner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-420">Una ventana poseída es uno cuyo <xref:System.Windows.Window.Owner%2A> propiedad se establece con una referencia a otra ventana, que se conoce como la ventana propietaria.</span><span class="sxs-lookup"><span data-stu-id="54022-420">An owned window is one whose <xref:System.Windows.Window.Owner%2A> property is set with a reference to another window, which is known as the owner window.</span></span> <span data-ttu-id="54022-421">Para buscar todas las ventanas de una ventana propietaria, puede enumerar <xref:System.Windows.WindowCollection> devuelta por la <xref:System.Windows.Window.OwnedWindows%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="54022-421">To find all the windows that an owner window owns, you can enumerate <xref:System.Windows.WindowCollection> that is returned by the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54022-422">El ejemplo siguiente muestra cómo enumerar <xref:System.Windows.Window.OwnedWindows%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-422">The following example shows how to enumerate <xref:System.Windows.Window.OwnedWindows%2A>.</span></span>  
  
 [!code-csharp[WindowOwnerOwnedWindowsSnippets#GetWindowOwnedWindowsCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/CSharp/MainWindow.xaml.cs#getwindowownedwindowscode)]
 [!code-vb[WindowOwnerOwnedWindowsSnippets#GetWindowOwnedWindowsCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/visualbasic/mainwindow.xaml.vb#getwindowownedwindowscode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Window Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Window Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Window ^ Owner { System::Windows::Window ^ get(); void set(System::Windows::Window ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Window with get, set" Usage="System.Windows.Window.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-423">Obtiene o establece el objeto <see cref="T:System.Windows.Window" /> que es la ventana propietaria de este objeto <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="54022-423">Gets or sets the <see cref="T:System.Windows.Window" /> that owns this <see cref="T:System.Windows.Window" />.</span></span></summary>
        <value><span data-ttu-id="54022-424">Objeto <see cref="T:System.Windows.Window" /> que representa la ventana propietaria de este objeto <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="54022-424">A <see cref="T:System.Windows.Window" /> object that represents the owner of this <see cref="T:System.Windows.Window" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-425">Cuando se abre una ventana secundaria de una ventana primaria mediante una llamada a <xref:System.Windows.Window.ShowDialog%2A>, se establece una relación implícita entre la ventana primaria y secundaria.</span><span class="sxs-lookup"><span data-stu-id="54022-425">When a child window is opened by a parent window by calling <xref:System.Windows.Window.ShowDialog%2A>, an implicit relationship is established between both parent and child window.</span></span> <span data-ttu-id="54022-426">Esta relación exige determinados comportamientos incluidos con respecto a minimizar, maximizar y restaurar.</span><span class="sxs-lookup"><span data-stu-id="54022-426">This relationship enforces certain behaviors, including with respect to minimizing, maximizing, and restoring.</span></span>  
  
 <span data-ttu-id="54022-427">Cuando se crea una ventana secundaria de una ventana primaria mediante una llamada a <xref:System.Windows.Window.Show%2A>, sin embargo, la ventana secundaria no tiene una relación con la ventana primaria.</span><span class="sxs-lookup"><span data-stu-id="54022-427">When a child window is created by a parent window by calling <xref:System.Windows.Window.Show%2A>, however, the child window does not have a relationship with the parent window.</span></span> <span data-ttu-id="54022-428">Esto significa que:</span><span class="sxs-lookup"><span data-stu-id="54022-428">This means that:</span></span>  
  
-   <span data-ttu-id="54022-429">La ventana secundaria no tiene una referencia a la ventana primaria.</span><span class="sxs-lookup"><span data-stu-id="54022-429">The child window does not have a reference to the parent window.</span></span>  
  
-   <span data-ttu-id="54022-430">El comportamiento de la ventana secundaria no es dependiente del comportamiento de la ventana primaria; cualquier ventana puede cubrir la otra o minimizarse, maximizarse y restaurarse independientemente de la otra.</span><span class="sxs-lookup"><span data-stu-id="54022-430">The behavior of the child window is not dependent on the behavior of the parent window; either window can cover the other, or be minimized, maximized, and restored independently of the other.</span></span>  
  
 <span data-ttu-id="54022-431">Para poder crear una relación entre una ventana secundaria y una ventana primaria, <xref:System.Windows.Window> admite la noción de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="54022-431">To allow you to create a relationship between a child window and a parent window, <xref:System.Windows.Window> supports the notion of ownership.</span></span> <span data-ttu-id="54022-432">La propiedad se establece cuando el <xref:System.Windows.Window.Owner%2A> se establece la propiedad de una ventana (la ventana poseída) con una referencia a otra ventana (la ventana propietaria).</span><span class="sxs-lookup"><span data-stu-id="54022-432">Ownership is established when the <xref:System.Windows.Window.Owner%2A> property of a window (the owned window) is set with a reference to another window (the owner window).</span></span>  
  
 <span data-ttu-id="54022-433">Una vez establecida esta relación, se exhibe los comportamientos siguientes:</span><span class="sxs-lookup"><span data-stu-id="54022-433">Once this relationship is established, the following behaviors are exhibited:</span></span>  
  
-   <span data-ttu-id="54022-434">Si se minimiza una ventana propietaria, se minimizan también todas sus ventanas que se poseen.</span><span class="sxs-lookup"><span data-stu-id="54022-434">If an owner window is minimized, all its owned windows are minimized as well.</span></span>  
  
-   <span data-ttu-id="54022-435">Si se minimiza una ventana poseída, su propietario no se minimiza.</span><span class="sxs-lookup"><span data-stu-id="54022-435">If an owned window is minimized, its owner is not minimized.</span></span>  
  
-   <span data-ttu-id="54022-436">Si se maximiza una ventana propietaria, se restauran la ventana propietaria y las ventanas pertenecientes.</span><span class="sxs-lookup"><span data-stu-id="54022-436">If an owner window is maximized, both the owner window and its owned windows are restored.</span></span>  
  
-   <span data-ttu-id="54022-437">Una ventana propietaria nunca puede cubrir una ventana poseída.</span><span class="sxs-lookup"><span data-stu-id="54022-437">An owner window can never cover an owned window.</span></span>  
  
-   <span data-ttu-id="54022-438">Propiedad de windows que no se abrieron mediante <xref:System.Windows.Window.ShowDialog%2A> no son modales.</span><span class="sxs-lookup"><span data-stu-id="54022-438">Owned windows that were not opened using <xref:System.Windows.Window.ShowDialog%2A> are not modal.</span></span> <span data-ttu-id="54022-439">El usuario todavía puede interactuar con la ventana propietaria.</span><span class="sxs-lookup"><span data-stu-id="54022-439">The user can still interact with the owner window.</span></span>  
  
-   <span data-ttu-id="54022-440">Si cierra una ventana propietaria, también se cierran las ventanas pertenecientes.</span><span class="sxs-lookup"><span data-stu-id="54022-440">If you close an owner window, its owned windows are also closed.</span></span>  
  
-   <span data-ttu-id="54022-441">Si se ha abierto una ventana poseída utilizando su propietario de la ventana <xref:System.Windows.Window.Show%2A>y el propietario de la ventana se cierra la ventana poseída <xref:System.Windows.Window.Closing> no se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="54022-441">If an owned window was opened by its owner window using <xref:System.Windows.Window.Show%2A>, and the owner window is closed, the owned window's <xref:System.Windows.Window.Closing> event is not raised.</span></span>  
  
 <span data-ttu-id="54022-442">Cuando abre una ventana secundaria mediante una llamada a <xref:System.Windows.Window.ShowDialog%2A>, también debe establecer el <xref:System.Windows.Window.Owner%2A> propiedad de la ventana secundaria.</span><span class="sxs-lookup"><span data-stu-id="54022-442">When you open a child window by calling <xref:System.Windows.Window.ShowDialog%2A>, you should also set the <xref:System.Windows.Window.Owner%2A> property of the child window.</span></span> <span data-ttu-id="54022-443">Si no lo hace, a continuación, los usuarios no podrán restaurar la ventana secundaria y ventana primaria presionando el botón de barra de tareas.</span><span class="sxs-lookup"><span data-stu-id="54022-443">If you don't, then your users won't be able to restore both child window and parent window by pressing the task bar button.</span></span> <span data-ttu-id="54022-444">En su lugar, al presionar el botón de barra de tareas producirá una lista de windows, incluidos la ventana primaria y secundaria, les permite seleccionar; se restaura solo la ventana seleccionada.</span><span class="sxs-lookup"><span data-stu-id="54022-444">Instead, pressing the task bar button will yield a list of windows, including both child and parent window, for them to select; only the selected window is restored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="54022-445">También debe establecer el <xref:System.Windows.Window.Owner%2A> propiedad en una ventana que se abre mediante una llamada a <xref:System.Windows.Window.ShowDialog%2A> para garantizar el comportamiento correcto con.</span><span class="sxs-lookup"><span data-stu-id="54022-445">You should also set the <xref:System.Windows.Window.Owner%2A> property on a window that is opened by calling <xref:System.Windows.Window.ShowDialog%2A> to ensure correct behavior with .</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-446">No puede establecer ni obtener esta propiedad cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-446">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54022-447">El ejemplo siguiente muestra cómo establecer la relación propietarias y pertenecientes.</span><span class="sxs-lookup"><span data-stu-id="54022-447">The following example shows how to establish the owner/owned relationship.</span></span>  
  
 [!code-csharp[WindowOwnerOwnedWindowsSnippets#SetWindowOwnerCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/CSharp/MainWindow.xaml.cs#setwindowownercode)]
 [!code-vb[WindowOwnerOwnedWindowsSnippets#SetWindowOwnerCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/visualbasic/mainwindow.xaml.vb#setwindowownercode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="54022-448">Una ventana intenta ser propietaria de sí misma.</span><span class="sxs-lookup"><span data-stu-id="54022-448">A window tries to own itself</span></span> 
<span data-ttu-id="54022-449">O bien</span><span class="sxs-lookup"><span data-stu-id="54022-449">-or-</span></span> 
<span data-ttu-id="54022-450">Dos ventanas intentan ser propietarias la una de la otra.</span><span class="sxs-lookup"><span data-stu-id="54022-450">Two windows try to own each other.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54022-451">La propiedad <see cref="P:System.Windows.Window.Owner" /> está establecida en una ventana visible que se muestra mediante <see cref="M:System.Windows.Window.ShowDialog" />.</span><span class="sxs-lookup"><span data-stu-id="54022-451">The <see cref="P:System.Windows.Window.Owner" /> property is set on a visible window shown using <see cref="M:System.Windows.Window.ShowDialog" /></span></span>  
  
<span data-ttu-id="54022-452">O bien</span><span class="sxs-lookup"><span data-stu-id="54022-452">-or-</span></span> 
<span data-ttu-id="54022-453">La propiedad <see cref="P:System.Windows.Window.Owner" /> está establecida en una ventana que no se ha mostrado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="54022-453">The <see cref="P:System.Windows.Window.Owner" /> property is set with a window that has not been previously shown.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="54022-454">permiso usar todas las ventanas y eventos de entrada de usuario sin restricciones.</span><span class="sxs-lookup"><span data-stu-id="54022-454">for permission to use all windows and user input events without restriction.</span></span> <span data-ttu-id="54022-455">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="54022-455">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="P:System.Windows.Window.OwnedWindows" />
      </Docs>
    </Member>
    <Member MemberName="ResizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.ResizeMode ResizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.ResizeMode ResizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ResizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ResizeMode As ResizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResizeMode ResizeMode { System::Windows::ResizeMode get(); void set(System::Windows::ResizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ResizeMode : System.Windows.ResizeMode with get, set" Usage="System.Windows.Window.ResizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-456">Obtiene o establece el modo de cambio de tamaño.</span><span class="sxs-lookup"><span data-stu-id="54022-456">Gets or sets the resize mode.</span></span></summary>
        <value><span data-ttu-id="54022-457">Valor de <see cref="T:System.Windows.ResizeMode" /> que especifica el modo de cambio de tamaño.</span><span class="sxs-lookup"><span data-stu-id="54022-457">A <see cref="T:System.Windows.ResizeMode" /> value specifying the resize mode.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-458">Hay cuatro opciones:</span><span class="sxs-lookup"><span data-stu-id="54022-458">There are four options:</span></span>  
  
-   <span data-ttu-id="54022-459">**NoResize**.</span><span class="sxs-lookup"><span data-stu-id="54022-459">**NoResize**.</span></span> <span data-ttu-id="54022-460">El usuario no puede cambiar el tamaño de la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-460">The user cannot resize the window.</span></span> <span data-ttu-id="54022-461">No se muestran los cuadros maximizar y minimizar.</span><span class="sxs-lookup"><span data-stu-id="54022-461">The Maximize and Minimize boxes are not shown.</span></span>  
  
-   <span data-ttu-id="54022-462">**CanMinimize**.</span><span class="sxs-lookup"><span data-stu-id="54022-462">**CanMinimize**.</span></span> <span data-ttu-id="54022-463">El usuario sólo puede minimizar la ventana y restaurarla a partir de la barra de tareas.</span><span class="sxs-lookup"><span data-stu-id="54022-463">The user can only minimize the window and restore it from the taskbar.</span></span> <span data-ttu-id="54022-464">Los cuadros Minimizar y maximizar se muestran, pero solo en el cuadro de minimizar está habilitado.</span><span class="sxs-lookup"><span data-stu-id="54022-464">The Minimize and Maximize boxes are both shown, but only the Minimize box is enabled.</span></span>  
  
-   <span data-ttu-id="54022-465">**CanResize**.</span><span class="sxs-lookup"><span data-stu-id="54022-465">**CanResize**.</span></span> <span data-ttu-id="54022-466">El usuario tiene la capacidad completa para cambiar el tamaño de la ventana, utilizando los cuadros Minimizar y maximizar y un contorno arrastrable alrededor de la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-466">The user has the full ability to resize the window, using the Minimize and Maximize boxes, and a draggable outline around the window.</span></span> <span data-ttu-id="54022-467">Los cuadros Minimizar y maximizar se muestran y habilitados.</span><span class="sxs-lookup"><span data-stu-id="54022-467">The Minimize and Maximize boxes are shown and enabled.</span></span> <span data-ttu-id="54022-468">(Valor predeterminado).</span><span class="sxs-lookup"><span data-stu-id="54022-468">(Default).</span></span>  
  
-   <span data-ttu-id="54022-469">**CanResizeWithGrip**.</span><span class="sxs-lookup"><span data-stu-id="54022-469">**CanResizeWithGrip**.</span></span> <span data-ttu-id="54022-470">Esta opción tiene la misma funcionalidad que <xref:System.Windows.ResizeMode.CanResize>, pero agrega un "control de cambio de tamaño" en la esquina inferior derecha de la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-470">This option has the same functionality as <xref:System.Windows.ResizeMode.CanResize>, but adds a "resize grip" to the lower right corner of the window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-471">No puede establecer ni obtener esta propiedad cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-471">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowResizeMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="54022-472">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="54022-472">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="54022-473">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="54022-473">Identifier field</span></span>|<xref:System.Windows.Window.ResizeModeProperty>|  
|<span data-ttu-id="54022-474">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="54022-474">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.ResizeGrip" />
      </Docs>
    </Member>
    <Member MemberName="ResizeModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ResizeModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ResizeModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ResizeModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResizeModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ResizeModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ResizeModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ResizeModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-475">Identifica la propiedad de dependencia <see cref="P:System.Windows.Window.ResizeMode" />.</span><span class="sxs-lookup"><span data-stu-id="54022-475">Identifies the <see cref="P:System.Windows.Window.ResizeMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect RestoreBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect RestoreBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.RestoreBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreBounds As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect RestoreBounds { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreBounds : System.Windows.Rect" Usage="System.Windows.Window.RestoreBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-476">Obtiene el tamaño y la ubicación de una ventana antes de ser minimizada o maximizada.</span><span class="sxs-lookup"><span data-stu-id="54022-476">Gets the size and location of a window before being either minimized or maximized.</span></span></summary>
        <value><span data-ttu-id="54022-477"><see cref="T:System.Windows.Rect" /> que especifica el tamaño y la ubicación de una ventana antes de ser minimizada o maximizada.</span><span class="sxs-lookup"><span data-stu-id="54022-477">A <see cref="T:System.Windows.Rect" /> that specifies the size and location of a window before being either minimized or maximized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-478">El rectángulo de restauración es el área ocupada por la ventana antes de ser minimizada o maximizada.</span><span class="sxs-lookup"><span data-stu-id="54022-478">The restore rectangle is the region occupied by the window before it was minimized or maximized.</span></span> <span data-ttu-id="54022-479">Puede usar <xref:System.Windows.Window.RestoreBounds%2A> para guardar el último tamaño y la ubicación de una ventana antes de cerrar una aplicación y recuperar esos valores la próxima vez que se inicia una aplicación para restaurar una ventana en la forma en que un usuario lo dejó.</span><span class="sxs-lookup"><span data-stu-id="54022-479">You can use <xref:System.Windows.Window.RestoreBounds%2A> to save the last size and location of a window before an application is closed, and retrieve those values the next time an application starts to restore a window to the way a user left it.</span></span>  
  
 <span data-ttu-id="54022-480">Si consulta <xref:System.Windows.Window.RestoreBounds%2A> antes de que se muestre la ventana o después de que se ha cerrado, <xref:System.Windows.Rect.Empty%2A> se devuelve.</span><span class="sxs-lookup"><span data-stu-id="54022-480">If you query <xref:System.Windows.Window.RestoreBounds%2A> before the window has been shown or after it has been closed, <xref:System.Windows.Rect.Empty%2A> is returned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-481">No se puede obtener esta propiedad cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-481">You cannot get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54022-482">En el ejemplo siguiente se usa <xref:System.Windows.Window.RestoreBounds%2A> y aislamiento de almacenamiento para asegurarse de que el tamaño y la ubicación de una ventana son iguales que estaban la última vez que se mostrara la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-482">The following example uses <xref:System.Windows.Window.RestoreBounds%2A> and isolated storage to ensure the size and location of a window are the same as they were the previous time the window was shown.</span></span>  
  
 [!code-xaml[WindowRestoreBoundsSnippets#WindowRestoreBoundsXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml#windowrestoreboundsxaml1)]  
[!code-xaml[WindowRestoreBoundsSnippets#WindowRestoreBoundsXAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml#windowrestoreboundsxaml2)]  
  
 [!code-csharp[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml.cs#windowrestoreboundscodebehind1)]
 [!code-vb[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/visualbasic/mainwindow.xaml.vb#windowrestoreboundscodebehind1)]  
[!code-csharp[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND2](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml.cs#windowrestoreboundscodebehind2)]
[!code-vb[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/visualbasic/mainwindow.xaml.vb#windowrestoreboundscodebehind2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="54022-483">para que obtener permiso para consultar el tamaño y la ubicación de una ventana del rectángulo delimitador.</span><span class="sxs-lookup"><span data-stu-id="54022-483">for permission to query for the size and location of a window's bounding rectangle.</span></span> <span data-ttu-id="54022-484">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="54022-484">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Show" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show();" />
      <MemberSignature Language="F#" Value="member this.Show : unit -&gt; unit" Usage="window.Show " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54022-485">Abre una ventana y devuelve un valor sin esperar a que se cierre la ventana que acaba de abrirse.</span><span class="sxs-lookup"><span data-stu-id="54022-485">Opens a window and returns without waiting for the newly opened window to close.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-486">Cuando el <xref:System.Windows.Window> se crea una instancia de clase, no es visible de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="54022-486">When the <xref:System.Windows.Window> class is instantiated, it is not visible by default.</span></span> <span data-ttu-id="54022-487"><xref:System.Windows.Window.Show%2A> se muestra una ventana y devuelve inmediatamente, sin esperar a la ventana que se cerrará.</span><span class="sxs-lookup"><span data-stu-id="54022-487"><xref:System.Windows.Window.Show%2A> shows a window and returns immediately, without waiting for the window to be closed.</span></span> <span data-ttu-id="54022-488">Por lo tanto, la ventana abierta no impide que los usuarios interactuar con otras ventanas de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="54022-488">Consequently, the opened window does not prevent users from interacting with other windows in the application.</span></span> <span data-ttu-id="54022-489">Este tipo de ventana se denomina un *no modal* ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-489">This type of window is called a *modeless* window.</span></span> <span data-ttu-id="54022-490">Algunos ejemplos comunes de windows no modales son paletas, cuadros de herramientas y ventanas de propiedades.</span><span class="sxs-lookup"><span data-stu-id="54022-490">Common examples of modeless windows are properties windows, toolboxes, and palettes.</span></span> <span data-ttu-id="54022-491">Para restringir un usuario a la interacción con una ventana específica, debe abrirse la ventana mediante una llamada a <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-491">To restrict a user to interacting with a specific window, the window must be opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="54022-492">Una ventana que se abre mediante una llamada a <xref:System.Windows.Window.Show%2A> does automáticamente no tienen una relación con la ventana que abrió; en concreto, la ventana abierta no sabe qué ventana la abrió.</span><span class="sxs-lookup"><span data-stu-id="54022-492">A window that is opened by calling <xref:System.Windows.Window.Show%2A> does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</span></span> <span data-ttu-id="54022-493">Se puede establecer esta relación mediante la <xref:System.Windows.Window.Owner%2A> propiedad y administrar mediante el <xref:System.Windows.Window.OwnedWindows%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="54022-493">This relationship can be established using the <xref:System.Windows.Window.Owner%2A> property and managed using the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span>  
  
 <span data-ttu-id="54022-494">Una llamada a <xref:System.Windows.Window.Show%2A> consigue el mismo resultado final como configuración <xref:System.Windows.UIElement.Visibility%2A> propiedad de la <xref:System.Windows.Window> objeto <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="54022-494">Calling <xref:System.Windows.Window.Show%2A> achieves the same end result as setting <xref:System.Windows.UIElement.Visibility%2A> property of the <xref:System.Windows.Window> object to <xref:System.Windows.Visibility.Visible>.</span></span> <span data-ttu-id="54022-495">Sin embargo, hay una diferencia entre los dos desde la perspectiva del control de tiempo.</span><span class="sxs-lookup"><span data-stu-id="54022-495">However, there is a difference between the two from a timing perspective.</span></span>  
  
 <span data-ttu-id="54022-496">Una llamada a <xref:System.Windows.Window.Show%2A> es una operación sincrónica que devuelve solo después el <xref:System.Windows.FrameworkElement.Loaded> ha generado el evento en la ventana secundaria:</span><span class="sxs-lookup"><span data-stu-id="54022-496">Calling <xref:System.Windows.Window.Show%2A> is a synchronous operation that returns only after the <xref:System.Windows.FrameworkElement.Loaded> event on the child window has been raised:</span></span>  
  
 [!code-csharp[WindowShowTimingSnippets#ShowSync](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowTimingSnippets/CSharp/Window1.xaml.cs#showsync)]
 [!code-vb[WindowShowTimingSnippets#ShowSync](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowTimingSnippets/visualbasic/window1.xaml.vb#showsync)]  
  
 <span data-ttu-id="54022-497">Establecer <xref:System.Windows.UIElement.Visibility%2A>, sin embargo, es una operación asincrónica que devuelve inmediatamente:</span><span class="sxs-lookup"><span data-stu-id="54022-497">Setting <xref:System.Windows.UIElement.Visibility%2A>, however, is an asynchronous operation that returns immediately:</span></span>  
  
 [!code-csharp[WindowShowTimingSnippets#ShowASync](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowTimingSnippets/CSharp/Window1.xaml.cs#showasync)]
 [!code-vb[WindowShowTimingSnippets#ShowASync](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowTimingSnippets/visualbasic/window1.xaml.vb#showasync)]  
  
 <span data-ttu-id="54022-498">Al establecer <xref:System.Windows.UIElement.Visibility%2A>, los eventos de la ventana registrar antes de establecer <xref:System.Windows.UIElement.Visibility%2A> no es posible que se producen hasta después del método donde estableció <xref:System.Windows.UIElement.Visibility%2A> ha completado su ejecución.</span><span class="sxs-lookup"><span data-stu-id="54022-498">When setting <xref:System.Windows.UIElement.Visibility%2A>, any window events you register before you set <xref:System.Windows.UIElement.Visibility%2A> may not be raised until after the method in which you set <xref:System.Windows.UIElement.Visibility%2A> has completed execution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54022-499">El ejemplo siguiente muestra cómo abrir una ventana no modal.</span><span class="sxs-lookup"><span data-stu-id="54022-499">The following sample demonstrates how to open a modeless window.</span></span>  
  
 [!code-csharp[WindowShowSnippets#WindowShowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowSnippets/CSharp/MainWindow.xaml.cs#windowshowcode)]
 [!code-vb[WindowShowSnippets#WindowShowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowSnippets/visualbasic/mainwindow.xaml.vb#windowshowcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54022-500">Se llama a <see cref="M:System.Windows.Window.Show" /> en una ventana que se está cerrando (<see cref="E:System.Windows.Window.Closing" />) o se ha cerrado (<see cref="E:System.Windows.Window.Closed" />).</span><span class="sxs-lookup"><span data-stu-id="54022-500"><see cref="M:System.Windows.Window.Show" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span></span></exception>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="M:System.Windows.Window.Hide" />
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowActivated">
      <MemberSignature Language="C#" Value="public bool ShowActivated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowActivated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ShowActivated" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowActivated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowActivated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowActivated : bool with get, set" Usage="System.Windows.Window.ShowActivated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-501">Obtiene o establece un valor que indica si una ventana se activa la primera vez que se muestra.</span><span class="sxs-lookup"><span data-stu-id="54022-501">Gets or sets a value that indicates whether a window is activated when first shown.</span></span></summary>
        <value><span data-ttu-id="54022-502">Es <see langword="true" /> si una ventana se activa la primera vez que se muestra; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54022-502"><see langword="true" /> if a window is activated when first shown; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="54022-503">De manera predeterminada, es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="54022-503">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-504">Cuando una ventana con su <xref:System.Windows.Window.ShowActivated%2A> propiedad establecida en `false` está abierto, la ventana no está activada y su <xref:System.Windows.Window.Activated> no se provoca el evento hasta que un usuario activa manualmente la ventana, selecciónelo.</span><span class="sxs-lookup"><span data-stu-id="54022-504">When a window with its <xref:System.Windows.Window.ShowActivated%2A> property set to `false` is opened, the window is not activated and its <xref:System.Windows.Window.Activated> event is not raised until a user manually activates the window by selecting it.</span></span> <span data-ttu-id="54022-505">Después de la ventana se selecciona, activa y desactiva con normalidad.</span><span class="sxs-lookup"><span data-stu-id="54022-505">After the window is selected, it activates and deactivates normally.</span></span>  
  
 <span data-ttu-id="54022-506">Para evitar que una ventana que se activa cuando se abre, la <xref:System.Windows.Window.ShowActivated%2A> propiedad debe establecerse en `false` antes de que se muestra la ventana (mediante una llamada a <xref:System.Windows.Window.Show%2A>); el parámetro <xref:System.Windows.Window.ShowActivated%2A> a `false` después de que se muestre una ventana no tiene ningún efecto.</span><span class="sxs-lookup"><span data-stu-id="54022-506">To prevent a window from being activated when it opens, the <xref:System.Windows.Window.ShowActivated%2A> property must be set to `false` before the window is shown (by calling <xref:System.Windows.Window.Show%2A>); setting <xref:System.Windows.Window.ShowActivated%2A> to `false` after a window is shown has no effect.</span></span>  
  
 <span data-ttu-id="54022-507">Establecer <xref:System.Windows.Window.ShowActivated%2A> a `false` en una ventana que se abre de forma modal, mediante una llamada a <xref:System.Windows.Window.ShowDialog%2A>, no tiene ningún impacto real.</span><span class="sxs-lookup"><span data-stu-id="54022-507">Setting <xref:System.Windows.Window.ShowActivated%2A> to `false` on a window that is opened modally, by calling <xref:System.Windows.Window.ShowDialog%2A>, has no real impact.</span></span> <span data-ttu-id="54022-508">Aunque no se activará la ventana modal, la ventana modal impedirá al usuario activar otras ventanas de aplicación abierta.</span><span class="sxs-lookup"><span data-stu-id="54022-508">Although the modal window will not be activated, the modal window will prevent the user from activating any other open application windows.</span></span>  
  
<a name="dependencyPropertyInfo_WindowShowActivated"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="54022-509">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="54022-509">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="54022-510">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="54022-510">Identifier field</span></span>|<xref:System.Windows.Window.ShowActivatedProperty>|  
|<span data-ttu-id="54022-511">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="54022-511">Metadata properties set to `true`</span></span>|<span data-ttu-id="54022-512">None</span><span class="sxs-lookup"><span data-stu-id="54022-512">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="54022-513">En el ejemplo siguiente se muestra cómo usar el marcado para configurar una ventana que se puede abrir sin que se está activando.</span><span class="sxs-lookup"><span data-stu-id="54022-513">The following example shows how to use markup to configure a window to be opened without being activated.</span></span>  
  
 [!code-xaml[WindowShowActivatedSnippets#ShowUnactivatedMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/AWindow.xaml#showunactivatedmarkup1)]  
  
  
 [!code-csharp[WindowShowActivatedSnippets#ShowUnactivatedCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/AWindow.xaml.cs#showunactivatedcodebehind)]
 [!code-vb[WindowShowActivatedSnippets#ShowUnactivatedCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowActivatedSnippets/visualbasic/awindow.xaml.vb#showunactivatedcodebehind)]  
  
 <span data-ttu-id="54022-514">El ejemplo siguiente muestra cómo usar código para configurar una ventana que se puede abrir sin que se va a activar.</span><span class="sxs-lookup"><span data-stu-id="54022-514">The following example shows how to use code to configure a window to be opened without it being activated.</span></span>  
  
 [!code-csharp[WindowShowActivatedSnippets#ShowUnactivatedWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/Window1.xaml.cs#showunactivatedwindowcode)]
 [!code-vb[WindowShowActivatedSnippets#ShowUnactivatedWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowActivatedSnippets/visualbasic/window1.xaml.vb#showunactivatedwindowcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowActivatedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowActivatedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowActivatedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ShowActivatedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowActivatedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowActivatedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowActivatedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ShowActivatedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-515">Identifica la propiedad de dependencia <see cref="P:System.Windows.Window.ShowActivated" />.</span><span class="sxs-lookup"><span data-stu-id="54022-515">Identifies the <see cref="P:System.Windows.Window.ShowActivated" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;bool&gt; ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;bool&gt; ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; Nullable&lt;bool&gt;" Usage="window.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54022-516">Abre una ventana y devuelve un valor sólo cuando se cierra la ventana que acaba de abrirse.</span><span class="sxs-lookup"><span data-stu-id="54022-516">Opens a window and returns only when the newly opened window is closed.</span></span></summary>
        <returns><span data-ttu-id="54022-517">Valor <see cref="T:System.Nullable`1" /> de tipo <see cref="T:System.Boolean" /> que especifica si la actividad se aceptó (<see langword="true" />) o se canceló (<see langword="false" />).</span><span class="sxs-lookup"><span data-stu-id="54022-517">A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" /> that specifies whether the activity was accepted (<see langword="true" />) or canceled (<see langword="false" />).</span></span> <span data-ttu-id="54022-518">El valor devuelto es el valor de la propiedad <see cref="P:System.Windows.Window.DialogResult" /> antes de que se cierre una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-518">The return value is the value of the <see cref="P:System.Windows.Window.DialogResult" /> property before a window closes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-519">Cuando un <xref:System.Windows.Window> se crea una instancia de clase, no es visible de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="54022-519">When a <xref:System.Windows.Window> class is instantiated, it is not visible by default.</span></span> <span data-ttu-id="54022-520"><xref:System.Windows.Window.ShowDialog%2A> se muestra la ventana, deshabilita todas las demás ventanas en la aplicación y devuelve solo cuando se cierra la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-520"><xref:System.Windows.Window.ShowDialog%2A> shows the window, disables all other windows in the application, and returns only when the window is closed.</span></span> <span data-ttu-id="54022-521">Este tipo de ventana se conoce como un *modal* ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-521">This type of window is known as a *modal* window.</span></span>  
  
 <span data-ttu-id="54022-522">Ventanas modales se utilizan principalmente como cuadros de diálogo.</span><span class="sxs-lookup"><span data-stu-id="54022-522">Modal windows are primarily used as dialog boxes.</span></span> <span data-ttu-id="54022-523">Un cuadro de diálogo es un tipo especial de ventana que las aplicaciones utilizan para interactuar con los usuarios realizar tareas, como abrir archivos o imprimir documentos.</span><span class="sxs-lookup"><span data-stu-id="54022-523">A dialog box is a special type of window that applications use to interact with users to complete tasks, such as opening files or printing documents.</span></span> <span data-ttu-id="54022-524">Normalmente, los cuadros de diálogo Permitir que los usuarios Aceptar o cancelar la tarea para el que se mostraron antes de cerrar el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="54022-524">Dialog boxes commonly allow users to accept or cancel the task for which they were shown before the dialog box is closed.</span></span> <span data-ttu-id="54022-525"><xref:System.Windows.Window.ShowDialog%2A> Devuelve un <xref:System.Nullable%601> <xref:System.Boolean> valor que especifica si se acepta o se cancela la actividad.</span><span class="sxs-lookup"><span data-stu-id="54022-525"><xref:System.Windows.Window.ShowDialog%2A> returns a <xref:System.Nullable%601><xref:System.Boolean> value that specifies whether the activity was accepted or canceled.</span></span> <span data-ttu-id="54022-526">El valor devuelto es el valor de la propiedad <xref:System.Windows.Window.DialogResult%2A> antes de que se cierre una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-526">The return value is the value of the <xref:System.Windows.Window.DialogResult%2A> property before a window closes.</span></span> <span data-ttu-id="54022-527">Para obtener más información, vea <xref:System.Windows.Window.DialogResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-527">For more information, see <xref:System.Windows.Window.DialogResult%2A>.</span></span>  
  
 <span data-ttu-id="54022-528">Una ventana que se abre mediante una llamada a la <xref:System.Windows.Window.ShowDialog%2A> método no tiene una relación con la ventana que se ha abierto automáticamente; en concreto, la ventana abierta no sabe qué ventana la abrió.</span><span class="sxs-lookup"><span data-stu-id="54022-528">A window that is opened by calling the <xref:System.Windows.Window.ShowDialog%2A> method does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</span></span> <span data-ttu-id="54022-529">Se puede establecer esta relación mediante la <xref:System.Windows.Window.Owner%2A> propiedad y administrar mediante el <xref:System.Windows.Window.OwnedWindows%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="54022-529">This relationship can be established using the <xref:System.Windows.Window.Owner%2A> property and managed using the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span> <span data-ttu-id="54022-530">Para admitir [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] automatización (consulte [UI Automation Overview](~/docs/framework/ui-automation/ui-automation-overview.md)), <xref:System.Windows.Window.Owner%2A> se debe establecer para una ventana abierta mediante una llamada a <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-530">To support [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] automation (see [UI Automation Overview](~/docs/framework/ui-automation/ui-automation-overview.md)), <xref:System.Windows.Window.Owner%2A> must be set for a window opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="54022-531">Cuando un estado modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] ventana (ventana abierta mediante una llamada a <xref:System.Windows.Window.ShowDialog%2A>) está cerrada, activada previamente se vuelve a activar ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-531">When a modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window (a window opened by calling <xref:System.Windows.Window.ShowDialog%2A>) is closed, the previously activated window is reactivated.</span></span> <span data-ttu-id="54022-532">Si un estado modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] ventana tiene una ventana propietaria (vea <xref:System.Windows.Window.Owner%2A>), la ventana propietaria no es vuelve a activar cuando el estado modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] se cierra la ventana a menos que sea la ventana activada previamente.</span><span class="sxs-lookup"><span data-stu-id="54022-532">If a modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window has an owner window (see <xref:System.Windows.Window.Owner%2A>), the owner window is not reactivated when the modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window is closed unless it was the previously activated window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-533">No se puede llamar a este método cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-533">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54022-534">El ejemplo siguiente muestra cómo abrir una ventana modal.</span><span class="sxs-lookup"><span data-stu-id="54022-534">The following sample demonstrates how to open a modal window.</span></span>  
  
 [!code-csharp[WindowShowDialogSnippets#WindowShowDialogCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowDialogSnippets/CSharp/MainWindow.xaml.cs#windowshowdialogcode)]
 [!code-vb[WindowShowDialogSnippets#WindowShowDialogCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowDialogSnippets/visualbasic/mainwindow.xaml.vb#windowshowdialogcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="54022-535">Se llama a <see cref="M:System.Windows.Window.ShowDialog" /> en una ventana que se está cerrando (<see cref="E:System.Windows.Window.Closing" />) o se ha cerrado (<see cref="E:System.Windows.Window.Closed" />).</span><span class="sxs-lookup"><span data-stu-id="54022-535"><see cref="M:System.Windows.Window.ShowDialog" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="54022-536">Para obtener permiso activar una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-536">for permission to activate a window.</span></span> <span data-ttu-id="54022-537">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="54022-537">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInTaskbar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ShowInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInTaskbar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowInTaskbar : bool with get, set" Usage="System.Windows.Window.ShowInTaskbar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-538">Obtiene o establece un valor que indica si la ventana tiene un botón de barra de tareas.</span><span class="sxs-lookup"><span data-stu-id="54022-538">Gets or sets a value that indicates whether the window has a task bar button.</span></span></summary>
        <value><span data-ttu-id="54022-539">Devuelve <see langword="true" /> si la ventana tiene un botón de barra de tareas; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54022-539"><see langword="true" /> if the window has a task bar button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="54022-540">No se aplica cuando la ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-540">Does not apply when the window is hosted in a browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-541">Si <xref:System.Windows.Window.ShowInTaskbar%2A> está establecido en `true`, la ventana también aparecerá en la lista de selección de la aplicación de ALT+TAB.</span><span class="sxs-lookup"><span data-stu-id="54022-541">If <xref:System.Windows.Window.ShowInTaskbar%2A> is set to `true`, the window will also appear in the ALT+TAB application selection list.</span></span>  
  
 <span data-ttu-id="54022-542">El icono que se usa para el botón de barra de tareas y la lista de selección de la aplicación de ALT+TAB es el valor de la <xref:System.Windows.Window.Icon%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="54022-542">The icon that is used for both the task bar button and the ALT+TAB application selection list is the value of the <xref:System.Windows.Window.Icon%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-543">No puede establecer ni obtener esta propiedad cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-543">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowShowInTaskbar"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="54022-544">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="54022-544">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="54022-545">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="54022-545">Identifier field</span></span>|<xref:System.Windows.Window.ShowInTaskbarProperty>|  
|<span data-ttu-id="54022-546">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="54022-546">Metadata properties set to `true`</span></span>|<span data-ttu-id="54022-547">None</span><span class="sxs-lookup"><span data-stu-id="54022-547">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbarProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowInTaskbarProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowInTaskbarProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ShowInTaskbarProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowInTaskbarProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowInTaskbarProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowInTaskbarProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ShowInTaskbarProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-548">Identifica la propiedad de dependencia <see cref="P:System.Windows.Window.ShowInTaskbar" />.</span><span class="sxs-lookup"><span data-stu-id="54022-548">Identifies the <see cref="P:System.Windows.Window.ShowInTaskbar" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeToContent">
      <MemberSignature Language="C#" Value="public System.Windows.SizeToContent SizeToContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.SizeToContent SizeToContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.SizeToContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeToContent As SizeToContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SizeToContent SizeToContent { System::Windows::SizeToContent get(); void set(System::Windows::SizeToContent value); };" />
      <MemberSignature Language="F#" Value="member this.SizeToContent : System.Windows.SizeToContent with get, set" Usage="System.Windows.Window.SizeToContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SizeToContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-549">Obtiene o establece un valor que indica si una ventana ajustará automáticamente su tamaño al de su contenido.</span><span class="sxs-lookup"><span data-stu-id="54022-549">Gets or sets a value that indicates whether a window will automatically size itself to fit the size of its content.</span></span></summary>
        <value><span data-ttu-id="54022-550">Valor <see cref="T:System.Windows.SizeToContent" />.</span><span class="sxs-lookup"><span data-stu-id="54022-550">A <see cref="T:System.Windows.SizeToContent" /> value.</span></span> <span data-ttu-id="54022-551">De manera predeterminada, es <see cref="F:System.Windows.SizeToContent.Manual" />.</span><span class="sxs-lookup"><span data-stu-id="54022-551">The default is <see cref="F:System.Windows.SizeToContent.Manual" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-552">Cuando <xref:System.Windows.Window.SizeToContent%2A> está establecido en <xref:System.Windows.SizeToContent.WidthAndHeight>, configuración <xref:System.Windows.FrameworkElement.Height%2A> o <xref:System.Windows.FrameworkElement.Width%2A> no tiene ningún efecto; se pueden establecer ambas propiedades, pero los valores que están establecidas con no se aplican a la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-552">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.WidthAndHeight>, setting either <xref:System.Windows.FrameworkElement.Height%2A> or <xref:System.Windows.FrameworkElement.Width%2A> has no effect; both properties can be set, but the values they are set with are not applied to the window.</span></span>  
  
 <span data-ttu-id="54022-553">Cuando <xref:System.Windows.Window.SizeToContent%2A> está establecido en <xref:System.Windows.SizeToContent.Height>, estableciendo <xref:System.Windows.FrameworkElement.Height%2A> no cambia el alto de la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-553">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Height>, setting <xref:System.Windows.FrameworkElement.Height%2A> does not change the height of the window.</span></span>  
  
 <span data-ttu-id="54022-554">Cuando <xref:System.Windows.Window.SizeToContent%2A> está establecido en <xref:System.Windows.SizeToContent.Width>, estableciendo <xref:System.Windows.FrameworkElement.Width%2A> no cambia el ancho de la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-554">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Width>, setting <xref:System.Windows.FrameworkElement.Width%2A> does not change the width of the window.</span></span>  
  
 <span data-ttu-id="54022-555">Si <xref:System.Windows.Window.SizeToContent%2A> tiene un valor distinto <xref:System.Windows.SizeToContent.Manual>:</span><span class="sxs-lookup"><span data-stu-id="54022-555">If <xref:System.Windows.Window.SizeToContent%2A> has a value other than <xref:System.Windows.SizeToContent.Manual>:</span></span>  
  
-   <span data-ttu-id="54022-556"><xref:System.Windows.Window.SizeToContent%2A> se establece automáticamente en <xref:System.Windows.SizeToContent.Manual> si un usuario cambia el tamaño de la ventana mediante el control de cambio de tamaño o arrastre el borde.</span><span class="sxs-lookup"><span data-stu-id="54022-556"><xref:System.Windows.Window.SizeToContent%2A> is automatically set to <xref:System.Windows.SizeToContent.Manual> if a user resizes the window by using the resize grip or dragging the border.</span></span>  
  
-   <span data-ttu-id="54022-557">Si cambia el tamaño del contenido de forma que hace que la ventana de tamaño él mismo, <xref:System.Windows.FrameworkElement.SizeChanged> se genera.</span><span class="sxs-lookup"><span data-stu-id="54022-557">If the size of the content changes in a way that causes the window to resize itself, <xref:System.Windows.FrameworkElement.SizeChanged> is raised.</span></span>  
  
 <span data-ttu-id="54022-558">Si una ventana es transparente (vea <xref:System.Windows.Window.AllowsTransparency%2A>), debería considerar la configuración <xref:System.Windows.Window.SizeToContent%2A> a <xref:System.Windows.SizeToContent.WidthAndHeight> para asegurarse de que la ventana no es mayor que su contenido visible.</span><span class="sxs-lookup"><span data-stu-id="54022-558">If a window is transparent (see <xref:System.Windows.Window.AllowsTransparency%2A>), you should consider setting <xref:System.Windows.Window.SizeToContent%2A> to <xref:System.Windows.SizeToContent.WidthAndHeight> to ensure the window is no larger than its visible content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-559">No puede establecer ni obtener esta propiedad cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-559">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowSizeToContent"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="54022-560">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="54022-560">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="54022-561">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="54022-561">Identifier field</span></span>|<xref:System.Windows.Window.SizeToContentProperty>|  
|<span data-ttu-id="54022-562">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="54022-562">Metadata properties set to `true`</span></span>|<span data-ttu-id="54022-563">None</span><span class="sxs-lookup"><span data-stu-id="54022-563">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="54022-564">El ejemplo siguiente muestra cómo establecer el <xref:System.Windows.Window.SizeToContent%2A> propiedad en el código para especificar cómo se redimensiona una ventana para ajustar su contenido.</span><span class="sxs-lookup"><span data-stu-id="54022-564">The following example shows how to set the <xref:System.Windows.Window.SizeToContent%2A> property in code to specify how a window resizes to fit its content.</span></span>  
  
 [!code-csharp[HOWTOWindowManagementSnippets#SetWindowSizeToContentPropertyCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/CSharp/MainWindow.xaml.cs#setwindowsizetocontentpropertycode)]
 [!code-vb[HOWTOWindowManagementSnippets#SetWindowSizeToContentPropertyCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/visualbasic/mainwindow.xaml.vb#setwindowsizetocontentpropertycode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="P:System.Windows.Window.ResizeMode" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SizeToContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SizeToContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.SizeToContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeToContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SizeToContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeToContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.SizeToContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-565">Identifica la propiedad de dependencia <see cref="P:System.Windows.Window.SizeToContent" />.</span><span class="sxs-lookup"><span data-stu-id="54022-565">Identifies the <see cref="P:System.Windows.Window.SizeToContent" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceInitialized">
      <MemberSignature Language="C#" Value="public event EventHandler SourceInitialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SourceInitialized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.SourceInitialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SourceInitialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SourceInitialized;" />
      <MemberSignature Language="F#" Value="member this.SourceInitialized : EventHandler " Usage="member this.SourceInitialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-566">Este evento se provoca para admitir la interoperación con [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)].</span><span class="sxs-lookup"><span data-stu-id="54022-566">This event is raised to support interoperation with [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)].</span></span> <span data-ttu-id="54022-567">Vea <see cref="T:System.Windows.Interop.HwndSource" />.</span><span class="sxs-lookup"><span data-stu-id="54022-567">See <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StateChanged;" />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler " Usage="member this.StateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-568">Se produce cuando cambia la propiedad <see cref="P:System.Windows.Window.WindowState" /> de la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-568">Occurs when the window's <see cref="P:System.Windows.Window.WindowState" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="TaskbarItemInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.TaskbarItemInfo TaskbarItemInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Shell.TaskbarItemInfo TaskbarItemInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.TaskbarItemInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskbarItemInfo As TaskbarItemInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Shell::TaskbarItemInfo ^ TaskbarItemInfo { System::Windows::Shell::TaskbarItemInfo ^ get(); void set(System::Windows::Shell::TaskbarItemInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TaskbarItemInfo : System.Windows.Shell.TaskbarItemInfo with get, set" Usage="System.Windows.Window.TaskbarItemInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.TaskbarItemInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-569">Obtiene o establece la miniatura de la barra de tareas de [!INCLUDE[win7](~/includes/win7-md.md)] para <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="54022-569">Gets or sets the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</span></span></summary>
        <value><span data-ttu-id="54022-570">Miniatura de la barra de tareas de [!INCLUDE[win7](~/includes/win7-md.md)] para <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="54022-570">The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-571">Para obtener más información sobre cómo usar el [!INCLUDE[win7](~/includes/win7-md.md)] barra de tareas en miniatura, vea el <xref:System.Windows.Shell.TaskbarItemInfo> clase.</span><span class="sxs-lookup"><span data-stu-id="54022-571">For more information about how to use the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail, see the <xref:System.Windows.Shell.TaskbarItemInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Windows.Shell" />
      </Docs>
    </Member>
    <Member MemberName="TaskbarItemInfoProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TaskbarItemInfoProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TaskbarItemInfoProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TaskbarItemInfoProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TaskbarItemInfoProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TaskbarItemInfoProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TaskbarItemInfoProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TaskbarItemInfoProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-572">Identifica la propiedad de dependencia <see cref="P:System.Windows.Window.TaskbarItemInfo" />.</span><span class="sxs-lookup"><span data-stu-id="54022-572">Identifies the <see cref="P:System.Windows.Window.TaskbarItemInfo" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Window.Title" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IWindowService.Title</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Title)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-573">Obtiene o establece un título para la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-573">Gets or sets a window's title.</span></span></summary>
        <value><span data-ttu-id="54022-574"><see cref="T:System.String" /> que contiene el título de la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-574">A <see cref="T:System.String" /> that contains the window's title.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-575">El título de un <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, o [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], también puede establecerse mediante el uso de <xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="54022-575">The title of a <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, or [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], can also be set by using <xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType>.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTitle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="54022-576">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="54022-576">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="54022-577">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="54022-577">Identifier field</span></span>|<xref:System.Windows.Window.TitleProperty>|  
|<span data-ttu-id="54022-578">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="54022-578">Metadata properties set to `true`</span></span>|<span data-ttu-id="54022-579">None</span><span class="sxs-lookup"><span data-stu-id="54022-579">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TitleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TitleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TitleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TitleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TitleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TitleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-580">Identifica la propiedad de dependencia <see cref="P:System.Windows.Window.Title" />.</span><span class="sxs-lookup"><span data-stu-id="54022-580">Identifies the <see cref="P:System.Windows.Window.Title" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Top : double with get, set" Usage="System.Windows.Window.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-581">Obtiene o establece la posición del borde superior de la ventana con respecto al escritorio.</span><span class="sxs-lookup"><span data-stu-id="54022-581">Gets or sets the position of the window's top edge, in relation to the desktop.</span></span></summary>
        <value><span data-ttu-id="54022-582">Posición del borde superior de la ventana, en unidades lógicas (1/96 de una pulgada).</span><span class="sxs-lookup"><span data-stu-id="54022-582">The position of the window's top, in logical units (1/96").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-583">Cuando el <xref:System.Windows.Window> está maximizada o minimizada, este valor representa el borde superior de la restauración de punto para la <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="54022-583">When the <xref:System.Windows.Window> is maximized or minimized, this value represents the top edge of the restore point for the <xref:System.Windows.Window>.</span></span>  
  
 <span data-ttu-id="54022-584">Esta propiedad no se puede establecer a través de un estilo.</span><span class="sxs-lookup"><span data-stu-id="54022-584">This property cannot be set through a style.</span></span>  
  
 <span data-ttu-id="54022-585">Si no especifica un valor, <xref:System.Windows.Window.Top%2A> se establece en el valor predeterminado del sistema.</span><span class="sxs-lookup"><span data-stu-id="54022-585">If you do not specify a value, <xref:System.Windows.Window.Top%2A> is set to the system default value.</span></span> <span data-ttu-id="54022-586">También puede especificar el valor predeterminado del sistema estableciendo <xref:System.Windows.Window.Top%2A> a <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="54022-586">You can also specify the system default value by setting <xref:System.Windows.Window.Top%2A> to <xref:System.Double.NaN>.</span></span> <span data-ttu-id="54022-587">Ni <xref:System.Double.NegativeInfinity> ni <xref:System.Double.PositiveInfinity> es un valor válido para <xref:System.Windows.Window.Top%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-587">Neither <xref:System.Double.NegativeInfinity> nor <xref:System.Double.PositiveInfinity> is a valid value for <xref:System.Windows.Window.Top%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-588">No puede establecer ni obtener esta propiedad cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-588">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="54022-589">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="54022-589">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="54022-590">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="54022-590">Identifier field</span></span>|<xref:System.Windows.Window.TopProperty>|  
|<span data-ttu-id="54022-591">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="54022-591">Metadata properties set to `true`</span></span>|<span data-ttu-id="54022-592">None</span><span class="sxs-lookup"><span data-stu-id="54022-592">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
      </Docs>
    </Member>
    <Member MemberName="Topmost">
      <MemberSignature Language="C#" Value="public bool Topmost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Topmost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Topmost" />
      <MemberSignature Language="VB.NET" Value="Public Property Topmost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Topmost { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Topmost : bool with get, set" Usage="System.Windows.Window.Topmost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-593">Obtiene o establece un valor que indica si una ventana aparece en el punto más alto en el orden Z.</span><span class="sxs-lookup"><span data-stu-id="54022-593">Gets or sets a value that indicates whether a window appears in the topmost z-order.</span></span></summary>
        <value><span data-ttu-id="54022-594">Devuelve <see langword="true" /> si la ventana es la ventana de nivel superior; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54022-594"><see langword="true" /> if the window is topmost; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-595">Una ventana cuyo <xref:System.Windows.Window.Topmost%2A> propiedad está establecida en `true` aparece por encima de todas las ventanas cuya <xref:System.Windows.Window.Topmost%2A> propiedades se establecen en `false`.</span><span class="sxs-lookup"><span data-stu-id="54022-595">A window whose <xref:System.Windows.Window.Topmost%2A> property is set to `true` appears above all windows whose <xref:System.Windows.Window.Topmost%2A> properties are set to `false`.</span></span>  
  
 <span data-ttu-id="54022-596">En el grupo de windows que tienen <xref:System.Windows.Window.Topmost%2A> propiedad está establecida en `true`, la ventana que está activada actualmente es la ventana de nivel superior.</span><span class="sxs-lookup"><span data-stu-id="54022-596">In the group of windows that have <xref:System.Windows.Window.Topmost%2A> property is set to `true`, the window that is currently activated is the topmost window.</span></span> <span data-ttu-id="54022-597">Lo mismo para el grupo de windows que tienen <xref:System.Windows.Window.Topmost%2A> propiedad está establecida en `false`.</span><span class="sxs-lookup"><span data-stu-id="54022-597">Likewise for the group of windows that have <xref:System.Windows.Window.Topmost%2A> property is set to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-598">No puede establecer ni obtener esta propiedad cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-598">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTopmost"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="54022-599">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="54022-599">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="54022-600">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="54022-600">Identifier field</span></span>|<xref:System.Windows.Window.TopmostProperty>|  
|<span data-ttu-id="54022-601">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="54022-601">Metadata properties set to `true`</span></span>|<span data-ttu-id="54022-602">None</span><span class="sxs-lookup"><span data-stu-id="54022-602">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="TopmostProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopmostProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopmostProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TopmostProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopmostProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopmostProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopmostProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TopmostProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-603">Identifica la propiedad de dependencia <see cref="P:System.Windows.Window.Topmost" />.</span><span class="sxs-lookup"><span data-stu-id="54022-603">Identifies the <see cref="P:System.Windows.Window.Topmost" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TopProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TopProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-604">Identifica la propiedad de dependencia <see cref="P:System.Windows.Window.Top" />.</span><span class="sxs-lookup"><span data-stu-id="54022-604">Identifies the <see cref="P:System.Windows.Window.Top" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStartupLocation">
      <MemberSignature Language="C#" Value="public System.Windows.WindowStartupLocation WindowStartupLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowStartupLocation WindowStartupLocation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowStartupLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStartupLocation As WindowStartupLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowStartupLocation WindowStartupLocation { System::Windows::WindowStartupLocation get(); void set(System::Windows::WindowStartupLocation value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStartupLocation : System.Windows.WindowStartupLocation with get, set" Usage="System.Windows.Window.WindowStartupLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.WindowStartupLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-605">Obtiene o establece la posición de la ventana cuando se muestra por primera vez.</span><span class="sxs-lookup"><span data-stu-id="54022-605">Gets or sets the position of the window when first shown.</span></span></summary>
        <value><span data-ttu-id="54022-606">Valor de <see cref="T:System.Windows.WindowStartupLocation" /> que especifica la posición de los bordes superior e izquierdo de una ventana cuando se muestra por primera vez.</span><span class="sxs-lookup"><span data-stu-id="54022-606">A <see cref="T:System.Windows.WindowStartupLocation" /> value that specifies the top/left position of a window when first shown.</span></span> <span data-ttu-id="54022-607">De manera predeterminada, es <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</span><span class="sxs-lookup"><span data-stu-id="54022-607">The default is <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-608">Establecer el `WindowStartupLocation` propiedad <xref:System.Windows.WindowStartupLocation.Manual> hace que una ventana se coloca según su <xref:System.Windows.Window.Left%2A> y <xref:System.Windows.Window.Top%2A> los valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="54022-608">Setting the `WindowStartupLocation` property to <xref:System.Windows.WindowStartupLocation.Manual> causes a window to be positioned according to its <xref:System.Windows.Window.Left%2A> and <xref:System.Windows.Window.Top%2A> property values.</span></span> <span data-ttu-id="54022-609">Si el <xref:System.Windows.Window.Left%2A> o <xref:System.Windows.Window.Top%2A> no se especifican las propiedades, sus valores se determinan mediante Windows.</span><span class="sxs-lookup"><span data-stu-id="54022-609">If either the <xref:System.Windows.Window.Left%2A> or <xref:System.Windows.Window.Top%2A> properties aren't specified, their values are determined by Windows.</span></span>  
  
 <span data-ttu-id="54022-610">Establecer el `WindowStartupLocation` propiedad <xref:System.Windows.WindowStartupLocation.CenterScreen> hace que una ventana se coloca en el centro de la pantalla que contiene el cursor del mouse.</span><span class="sxs-lookup"><span data-stu-id="54022-610">Setting the `WindowStartupLocation` property to <xref:System.Windows.WindowStartupLocation.CenterScreen> causes a window to be positioned in the center of the screen that contains the mouse cursor.</span></span>  
  
 <span data-ttu-id="54022-611">Establecer el `WindowStartupLocation` propiedad <xref:System.Windows.WindowStartupLocation.CenterOwner> hace que una ventana se coloca en el centro de la ventana propietaria (vea <xref:System.Windows.Window.Owner%2A?displayProperty=nameWithType>), si se especifica.</span><span class="sxs-lookup"><span data-stu-id="54022-611">Setting the `WindowStartupLocation` property to <xref:System.Windows.WindowStartupLocation.CenterOwner> causes a window to be positioned in the center of its owner window (see <xref:System.Windows.Window.Owner%2A?displayProperty=nameWithType>), if specified.</span></span> <span data-ttu-id="54022-612">La ventana propietaria puede ser otra ventana WPF o una ventana que no son de WPF.</span><span class="sxs-lookup"><span data-stu-id="54022-612">The owner window can be either another WPF window or a non-WPF window.</span></span>

> [!NOTE]   
>  <span data-ttu-id="54022-613">Para obtener más información acerca de las ventanas WPF con windows que no son de WPF, vea [WPF e interoperabilidad con Win32](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md) y <xref:System.Windows.Interop.WindowInteropHelper>.</span><span class="sxs-lookup"><span data-stu-id="54022-613">For more information about WPF windows with non-WPF windows, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md) and <xref:System.Windows.Interop.WindowInteropHelper>.</span></span> 

 <span data-ttu-id="54022-614">Si no se especifica una ventana propietaria, se determina la posición de la ventana de la misma manera que si el `WindowStartupLocation` propiedad está establecida en <xref:System.Windows.WindowStartupLocation.Manual>.</span><span class="sxs-lookup"><span data-stu-id="54022-614">If an owner window is not specified, the position of the window is determined in the same way as if the `WindowStartupLocation` property is set to <xref:System.Windows.WindowStartupLocation.Manual>.</span></span>

> [!NOTE]
>  <span data-ttu-id="54022-615">No puede establecer ni obtener el valor de esta propiedad cuando una ventana está hospedada en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-615">You cannot set or get the value of this property when a window is hosted in a browser.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public System.Windows.WindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As WindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowState WindowState { System::Windows::WindowState get(); void set(System::Windows::WindowState value); };" />
      <MemberSignature Language="F#" Value="member this.WindowState : System.Windows.WindowState with get, set" Usage="System.Windows.Window.WindowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-616">Obtiene o establece un valor que indica si una ventana está restaurada, minimizada o maximizada.</span><span class="sxs-lookup"><span data-stu-id="54022-616">Gets or sets a value that indicates whether a window is restored, minimized, or maximized.</span></span></summary>
        <value><span data-ttu-id="54022-617">Valor de <see cref="T:System.Windows.WindowState" /> que determina si una ventana está restaurada, minimizada o maximizada.</span><span class="sxs-lookup"><span data-stu-id="54022-617">A <see cref="T:System.Windows.WindowState" /> that determines whether a window is restored, minimized, or maximized.</span></span> <span data-ttu-id="54022-618">El valor predeterminado es <see cref="F:System.Windows.WindowState.Normal" /> (restaurada).</span><span class="sxs-lookup"><span data-stu-id="54022-618">The default is <see cref="F:System.Windows.WindowState.Normal" /> (restored).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-619">Antes de que una ventana está minimizada o maximizada, su tamaño y la ubicación se almacenan en <xref:System.Windows.Window.RestoreBounds%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-619">Before a window is minimized or maximized, its size and location are stored in <xref:System.Windows.Window.RestoreBounds%2A>.</span></span> <span data-ttu-id="54022-620">Cuando posteriormente se restaura una ventana, sus valores de tamaño y la ubicación se restauran con los valores de <xref:System.Windows.Window.RestoreBounds%2A>.</span><span class="sxs-lookup"><span data-stu-id="54022-620">When a window is subsequently restored, its size and location values are restored with the values from <xref:System.Windows.Window.RestoreBounds%2A>.</span></span>  
  
 <span data-ttu-id="54022-621">Cuando el <xref:System.Windows.Window.WindowState%2A> propiedad ha cambiado, <xref:System.Windows.Window.StateChanged> se genera.</span><span class="sxs-lookup"><span data-stu-id="54022-621">When the <xref:System.Windows.Window.WindowState%2A> property is changed, <xref:System.Windows.Window.StateChanged> is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-622">No puede establecer ni obtener esta propiedad cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-622">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowState"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="54022-623">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="54022-623">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="54022-624">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="54022-624">Identifier field</span></span>|<xref:System.Windows.Window.WindowStateProperty>|  
|<span data-ttu-id="54022-625">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="54022-625">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.RestoreBounds" />
      </Docs>
    </Member>
    <Member MemberName="WindowStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WindowStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WindowStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.WindowStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WindowStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowStateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.WindowStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-626">Identifica la propiedad de dependencia <see cref="P:System.Windows.Window.WindowState" />.</span><span class="sxs-lookup"><span data-stu-id="54022-626">Identifies the <see cref="P:System.Windows.Window.WindowState" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public System.Windows.WindowStyle WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowStyle WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As WindowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowStyle WindowStyle { System::Windows::WindowStyle get(); void set(System::Windows::WindowStyle value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : System.Windows.WindowStyle with get, set" Usage="System.Windows.Window.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-627">Obtiene o establece un estilo de borde para la ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-627">Gets or sets a window's border style.</span></span></summary>
        <value><span data-ttu-id="54022-628"><see cref="T:System.Windows.WindowStyle" /> que especifica el estilo de borde de una ventana.</span><span class="sxs-lookup"><span data-stu-id="54022-628">A <see cref="T:System.Windows.WindowStyle" /> that specifies a window's border style.</span></span> <span data-ttu-id="54022-629">De manera predeterminada, es <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />.</span><span class="sxs-lookup"><span data-stu-id="54022-629">The default is <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54022-630"><xref:System.Windows.Window.WindowStyle%2A> puede ser uno de los <xref:System.Windows.WindowStyle> valores de enumeración, incluidos <xref:System.Windows.WindowStyle.None>, <xref:System.Windows.WindowStyle.ToolWindow>, <xref:System.Windows.WindowStyle.SingleBorderWindow> (valor predeterminado), y <xref:System.Windows.WindowStyle.ThreeDBorderWindow>.</span><span class="sxs-lookup"><span data-stu-id="54022-630"><xref:System.Windows.Window.WindowStyle%2A> can be one of the <xref:System.Windows.WindowStyle> enumeration values, including <xref:System.Windows.WindowStyle.None>, <xref:System.Windows.WindowStyle.ToolWindow>, <xref:System.Windows.WindowStyle.SingleBorderWindow> (default), and <xref:System.Windows.WindowStyle.ThreeDBorderWindow>.</span></span>  
  
 <span data-ttu-id="54022-631">La siguiente ilustración muestra los estilos de ventana en [!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)] (tema Aero de Windows Vista, con efecto de cristal transparente habilitado):</span><span class="sxs-lookup"><span data-stu-id="54022-631">The following figure shows the window styles on [!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)] (Windows Vista Aero theme, with transparent glass enabled):</span></span>  
  
 <span data-ttu-id="54022-632">![Estilos de ventana](~/add/media/windowoverviewfigure6.PNG "estilos de ventana")</span><span class="sxs-lookup"><span data-stu-id="54022-632">![Window styles](~/add/media/windowoverviewfigure6.PNG "Window styles")</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54022-633">No puede establecer ni obtener esta propiedad cuando una ventana se hospeda en un explorador.</span><span class="sxs-lookup"><span data-stu-id="54022-633">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="54022-634">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="54022-634">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="54022-635">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="54022-635">Identifier field</span></span>|<xref:System.Windows.Window.WindowStyleProperty>|  
|<span data-ttu-id="54022-636">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="54022-636">Metadata properties set to `true`</span></span>|<span data-ttu-id="54022-637">None</span><span class="sxs-lookup"><span data-stu-id="54022-637">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WindowStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WindowStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.WindowStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WindowStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.WindowStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54022-638">Identifica la propiedad de dependencia <see cref="P:System.Windows.Window.WindowStyle" />.</span><span class="sxs-lookup"><span data-stu-id="54022-638">Identifies the <see cref="P:System.Windows.Window.WindowStyle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
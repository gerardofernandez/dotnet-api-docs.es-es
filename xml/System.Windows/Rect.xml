<Type Name="Rect" FullName="System.Windows.Rect">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e07925c9573a313743186593ce5aa58d0855b0d6" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53230733" /></Metadata><TypeSignature Language="C#" Value="public struct Rect : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Rect extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Rect" />
  <TypeSignature Language="VB.NET" Value="Public Structure Rect&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Rect : IFormattable" />
  <TypeSignature Language="F#" Value="type Rect = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.RectConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.RectValueSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8c028-101">Describe el ancho, el alto y la ubicación de un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-101">Describes the width, height, and location of a rectangle.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="8c028-102">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="8c028-102">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y,width,height"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="8c028-103">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="8c028-103">XAML Values</span></span>  
 <span data-ttu-id="8c028-104">*x*</span><span class="sxs-lookup"><span data-stu-id="8c028-104">*x*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="8c028-105">La ubicación de la coordenada x del lado izquierdo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-105">The x-coordinate location of the left side of the rectangle.</span></span>  
  
 <span data-ttu-id="8c028-106">*y*</span><span class="sxs-lookup"><span data-stu-id="8c028-106">*y*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="8c028-107">La ubicación de la coordenada y del lado superior del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-107">The y-coordinate location of the top side of the rectangle.</span></span>  
  
 <span data-ttu-id="8c028-108">*width*</span><span class="sxs-lookup"><span data-stu-id="8c028-108">*width*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="8c028-109">Un valor no negativo que representa el <xref:System.Windows.Rect.Width%2A> del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-109">A non-negative value that represents the <xref:System.Windows.Rect.Width%2A> of the rectangle.</span></span>  
  
 <span data-ttu-id="8c028-110">*Alto*</span><span class="sxs-lookup"><span data-stu-id="8c028-110">*height*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="8c028-111">Un valor no negativo que representa el <xref:System.Windows.Rect.Height%2A> del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-111">A non-negative value that represents the <xref:System.Windows.Rect.Height%2A> of the rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-112">El ejemplo siguiente muestra cómo usar un <xref:System.Windows.Rect> estructura para especificar las dimensiones y la ubicación de un rectángulo mediante XAML.</span><span class="sxs-lookup"><span data-stu-id="8c028-112">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="8c028-113">El ejemplo siguiente muestra cómo usar código para crear un rectángulo y agregarlo a la página.</span><span class="sxs-lookup"><span data-stu-id="8c028-113">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="8c028-114">Este ejemplo también muestra cómo encontrar información de tamaño y coordenada sobre el nuevo rectángulo y representar la información de un <xref:System.Windows.Controls.TextBox> debajo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-114">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c028-115">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Rect" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-115">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Size -&gt; System.Windows.Rect" Usage="new System.Windows.Rect size" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="8c028-116">Estructura <see cref="T:System.Windows.Size" /> que especifica el ancho y el alto del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-116">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span></span></param>
        <summary><span data-ttu-id="8c028-117">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Rect" /> que tiene el tamaño especificado y se ubica en (0,0).</span><span class="sxs-lookup"><span data-stu-id="8c028-117">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is of the specified size and is located at (0,0).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-118">El ejemplo siguiente muestra cómo crear un nuevo <xref:System.Windows.Rect> estructura mediante la <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="8c028-118">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (point1, point2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="8c028-119">Primer punto que debe contener el nuevo rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-119">The first point that the new rectangle must contain.</span></span></param>
        <param name="point2"><span data-ttu-id="8c028-120">Segundo punto que debe contener el nuevo rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-120">The second point that the new rectangle must contain.</span></span></param>
        <summary><span data-ttu-id="8c028-121">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Rect" /> que tiene el largo exacto para contener los dos puntos especificados.</span><span class="sxs-lookup"><span data-stu-id="8c028-121">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the two specified points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-122">El ejemplo siguiente muestra cómo crear un nuevo <xref:System.Windows.Rect> estructura mediante la <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="8c028-122">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point location, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point location, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point location, System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Size -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (location, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="8c028-123">Punto que especifica la ubicación de la esquina superior izquierda del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-123">A point that specifies the location of the top-left corner of the rectangle.</span></span></param>
        <param name="size"><span data-ttu-id="8c028-124">Estructura <see cref="T:System.Windows.Size" /> que especifica el ancho y el alto del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-124">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span></span></param>
        <summary><span data-ttu-id="8c028-125">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Rect" /> que tiene la ubicación de la esquina superior izquierda especificada, así como el ancho y alto especificados.</span><span class="sxs-lookup"><span data-stu-id="8c028-125">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified top-left corner location and the specified width and height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-126">El ejemplo siguiente muestra cómo crear un nuevo <xref:System.Windows.Rect> estructura mediante la <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="8c028-126">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample4_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (point, vector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="8c028-127">Primer punto que debe contener el rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-127">The first point the rectangle must contain.</span></span></param>
        <param name="vector"><span data-ttu-id="8c028-128">Recorrido que se va a desplazar el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-128">The amount to offset the specified point.</span></span> <span data-ttu-id="8c028-129">El rectángulo resultante tendrá el largo exacto para contener ambos puntos.</span><span class="sxs-lookup"><span data-stu-id="8c028-129">The resulting rectangle will be exactly large enough to contain both points.</span></span></param>
        <summary><span data-ttu-id="8c028-130">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Rect" /> que tiene el largo exacto para contener el punto especificado, la suma del punto y el vector especificados.</span><span class="sxs-lookup"><span data-stu-id="8c028-130">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-131">El ejemplo siguiente muestra cómo crear un nuevo <xref:System.Windows.Rect> estructura mediante la <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="8c028-131">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample5_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample5_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (double x, double y, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double, width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(double x, double y, double width, double height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : double * double * double * double -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (x, y, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="8c028-132">Coordenada "x" de la esquina superior izquierda del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-132">The x-coordinate of the top-left corner of the rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="8c028-133">Coordenada Y de la esquina superior izquierda del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-133">The y-coordinate of the top-left corner of the rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="8c028-134">Ancho del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-134">The width of the rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="8c028-135">Alto del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-135">The height of the rectangle.</span></span></param>
        <summary><span data-ttu-id="8c028-136">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Rect" /> que tiene las coordenadas X e Y especificadas, así como el ancho y alto especificados.</span><span class="sxs-lookup"><span data-stu-id="8c028-136">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified x-coordinate, y-coordinate, width, and height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-137">El ejemplo siguiente muestra cómo crear un nuevo <xref:System.Windows.Rect> estructura mediante la <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="8c028-137">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample6_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample6_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8c028-138"><paramref name="width" /> es un valor negativo.</span><span class="sxs-lookup"><span data-stu-id="8c028-138"><paramref name="width" /> is a negative value.</span></span>  
  
<span data-ttu-id="8c028-139">O bien</span><span class="sxs-lookup"><span data-stu-id="8c028-139">-or-</span></span> 
 <span data-ttu-id="8c028-140"><paramref name="height" /> es un valor negativo.</span><span class="sxs-lookup"><span data-stu-id="8c028-140"><paramref name="height" /> is a negative value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public double Bottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Bottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Bottom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bottom As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Bottom { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Bottom : double" Usage="System.Windows.Rect.Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-141">Obtiene el valor del eje Y de la parte inferior del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-141">Gets the y-axis value of the bottom of the rectangle.</span></span></summary>
        <value><span data-ttu-id="8c028-142">Valor del eje Y de la parte inferior del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-142">The y-axis value of the bottom of the rectangle.</span></span> <span data-ttu-id="8c028-143">Si el rectángulo está vacío, el valor es <see cref="F:System.Double.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-143">If the rectangle is empty, the value is <see cref="F:System.Double.NegativeInfinity" /> .</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-144">El valor del eje y de la parte inferior del rectángulo es igual a la suma de los <xref:System.Windows.Rect.Y%2A> y <xref:System.Windows.Rect.Height%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="8c028-144">The y-axis value of the bottom of the rectangle is equal to the sum of the <xref:System.Windows.Rect.Y%2A> and <xref:System.Windows.Rect.Height%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-145">El ejemplo siguiente muestra cómo usar código para crear un rectángulo y agregarlo a la página.</span><span class="sxs-lookup"><span data-stu-id="8c028-145">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="8c028-146">Este ejemplo también muestra cómo encontrar información de tamaño y coordenada sobre el nuevo rectángulo y representar la información de un <xref:System.Windows.Controls.TextBox> debajo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-146">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomLeft { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomLeft : System.Windows.Point" Usage="System.Windows.Rect.BottomLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-147">Obtiene la posición de la esquina inferior izquierda del rectángulo</span><span class="sxs-lookup"><span data-stu-id="8c028-147">Gets the position of the bottom-left corner of the rectangle</span></span></summary>
        <value><span data-ttu-id="8c028-148">Posición de la esquina inferior izquierda del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-148">The position of the bottom-left corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-149">La posición de la esquina inferior izquierda del rectángulo es igual a (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>  +  <xref:System.Windows.Rect.Height%2A>).</span><span class="sxs-lookup"><span data-stu-id="8c028-149">The position of the bottom-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-150">El ejemplo siguiente muestra cómo usar código para crear un rectángulo y agregarlo a la página.</span><span class="sxs-lookup"><span data-stu-id="8c028-150">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="8c028-151">Este ejemplo también muestra cómo encontrar información de tamaño y coordenada sobre el nuevo rectángulo y representar la información de un <xref:System.Windows.Controls.TextBox> debajo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-151">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomRight { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomRight : System.Windows.Point" Usage="System.Windows.Rect.BottomRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-152">Obtiene la posición de la esquina inferior derecha del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-152">Gets the position of the bottom-right corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="8c028-153">Posición de la esquina inferior derecha del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-153">The position of the bottom-right corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-154">La posición de la esquina inferior derecha del rectángulo es igual a (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>  +  <xref:System.Windows.Rect.Height%2A>).</span><span class="sxs-lookup"><span data-stu-id="8c028-154">The position of the bottom-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-155">El ejemplo siguiente muestra cómo usar código para crear un rectángulo y agregarlo a la página.</span><span class="sxs-lookup"><span data-stu-id="8c028-155">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="8c028-156">Este ejemplo también muestra cómo encontrar información de tamaño y coordenada sobre el nuevo rectángulo y representar la información de un <xref:System.Windows.Controls.TextBox> debajo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-156">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c028-157">Indica si el rectángulo contiene el punto o rectángulo especificados.</span><span class="sxs-lookup"><span data-stu-id="8c028-157">Indicates whether the rectangle contains the specified point or rectangle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Point -&gt; bool" Usage="rect.Contains point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="8c028-158">Punto que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="8c028-158">The point to check.</span></span></param>
        <summary><span data-ttu-id="8c028-159">Indica si el rectángulo contiene el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-159">Indicates whether the rectangle contains the specified point.</span></span></summary>
        <returns><span data-ttu-id="8c028-160">Es <see langword="true" /> si el rectángulo contiene el punto especificado; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-160"><see langword="true" /> if the rectangle contains the specified point; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-161">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> método para determinar si el rectángulo contiene el texto especificado <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="8c028-161">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> method to determine if the rectangle contains the specified <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Rect -&gt; bool" Usage="rect.Contains rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="8c028-162">Rectángulo que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="8c028-162">The rectangle to check.</span></span></param>
        <summary><span data-ttu-id="8c028-163">Indica si el rectángulo contiene el rectángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-163">Indicates whether the rectangle contains the specified rectangle.</span></span></summary>
        <returns><span data-ttu-id="8c028-164">Es <see langword="true" /> si el rectángulo contiene el <paramref name="rect" /> completo; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-164"><see langword="true" /> if <paramref name="rect" /> is entirely contained by the rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-165">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> método para determinar si un rectángulo está contenido en otro rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-165">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> method to determine if one rectangle is contained by another rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (x As Double, y As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(double x, double y);" />
      <MemberSignature Language="F#" Value="member this.Contains : double * double -&gt; bool" Usage="rect.Contains (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="8c028-166">Coordenada X del punto que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="8c028-166">The x-coordinate of the point to check.</span></span></param>
        <param name="y"><span data-ttu-id="8c028-167">Coordenada Y del punto que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="8c028-167">The y-coordinate of the point to check.</span></span></param>
        <summary><span data-ttu-id="8c028-168">Indica si el rectángulo contiene las coordenadas X e Y especificadas.</span><span class="sxs-lookup"><span data-stu-id="8c028-168">Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.</span></span></summary>
        <returns><span data-ttu-id="8c028-169">Es <see langword="true" /> si el rectángulo contiene (<paramref name="x" />, <paramref name="y" />); de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-169"><see langword="true" /> if (<paramref name="x" />, <paramref name="y" />) is contained by the rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-170">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> método para determinar si el rectángulo contiene el punto especificado por la coordenada x especificada y la coordenada y.</span><span class="sxs-lookup"><span data-stu-id="8c028-170">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> method to determine if the rectangle contains the point specified by the given x-coordinate and y-coordinate.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Rect Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Rect Empty { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Windows.Rect" Usage="System.Windows.Rect.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-171">Obtiene un valor especial que representa un rectángulo sin posición ni área.</span><span class="sxs-lookup"><span data-stu-id="8c028-171">Gets a special value that represents a rectangle with no position or area.</span></span></summary>
        <value><span data-ttu-id="8c028-172">Rectángulo vacío, que tiene los valores de las propiedades <see cref="P:System.Windows.Rect.X" /> y <see cref="P:System.Windows.Rect.Y" /> de <see cref="F:System.Double.PositiveInfinity" />, así como los valores de las propiedades <see cref="P:System.Windows.Rect.Width" /> y <see cref="P:System.Windows.Rect.Height" /> de <see cref="F:System.Double.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-172">The empty rectangle, which has <see cref="P:System.Windows.Rect.X" /> and <see cref="P:System.Windows.Rect.Y" /> property values of <see cref="F:System.Double.PositiveInfinity" />, and has <see cref="P:System.Windows.Rect.Width" /> and <see cref="P:System.Windows.Rect.Height" /> property values of <see cref="F:System.Double.NegativeInfinity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-173">Evite cálculos matemáticos que incluyan rectángulos vacíos.</span><span class="sxs-lookup"><span data-stu-id="8c028-173">Avoid mathematical computations involving empty rectangles.</span></span> <span data-ttu-id="8c028-174">Dado que ambos <xref:System.Windows.Rect.X%2A> y <xref:System.Windows.Rect.Y%2A> son valores infinitos, procesador, las operaciones son gravemente dañadas por estas operaciones.</span><span class="sxs-lookup"><span data-stu-id="8c028-174">Because both <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> are infinite values, processor operations are severely impaired by these operations.</span></span> <span data-ttu-id="8c028-175">Las comparaciones que implican estos valores no afectará al rendimiento de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="8c028-175">Comparisons involving these values will not affect application performance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.IsEmpty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c028-176">Indica si dos rectángulos son iguales.</span><span class="sxs-lookup"><span data-stu-id="8c028-176">Indicates whether two rectangles are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="rect.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="8c028-177">Objeto que se va a comparar con el rectángulo actual.</span><span class="sxs-lookup"><span data-stu-id="8c028-177">The object to compare to the current rectangle.</span></span></param>
        <summary><span data-ttu-id="8c028-178">Indica si el objeto especificado es igual al rectángulo actual.</span><span class="sxs-lookup"><span data-stu-id="8c028-178">Indicates whether the specified object is equal to the current rectangle.</span></span></summary>
        <returns><span data-ttu-id="8c028-179">Es <see langword="true" /> si <paramref name="o" /> es <see cref="T:System.Windows.Rect" /> y tiene los mismo valores en las propiedades <see cref="P:System.Windows.Rect.Location" /> y <see cref="P:System.Windows.Rect.Size" /> que el rectángulo actual; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-179"><see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Rect" /> and has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-180">Esta operación comprueba la igualdad del objeto.</span><span class="sxs-lookup"><span data-stu-id="8c028-180">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="8c028-181">En esta comparación, dos instancias de <xref:System.Double.NaN?displayProperty=nameWithType> se consideran iguales.</span><span class="sxs-lookup"><span data-stu-id="8c028-181">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8c028-182">Posición y las dimensiones de un rectángulo se describen mediante <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="8c028-182">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="8c028-183">Dado que <xref:System.Double> valores pueden perder precisión cuando se realizan operaciones con ellos, una comparación entre dos valores son iguales lógicamente podría producir un error.</span><span class="sxs-lookup"><span data-stu-id="8c028-183">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-184">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Equals%28System.Object%29> método para determinar si un rectángulo es igual a un objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-184">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Object%29> method to determine if a rectangle is equal to a specified object.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Rect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Rect value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Rect value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Rect -&gt; bool" Usage="rect.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8c028-185">Rectángulo que se va a comparar con el rectángulo actual.</span><span class="sxs-lookup"><span data-stu-id="8c028-185">The rectangle to compare to the current rectangle.</span></span></param>
        <summary><span data-ttu-id="8c028-186">Indica si el rectángulo especificado es igual al rectángulo actual.</span><span class="sxs-lookup"><span data-stu-id="8c028-186">Indicates whether the specified rectangle is equal to the current rectangle.</span></span></summary>
        <returns><span data-ttu-id="8c028-187">Es <see langword="true" /> si el rectángulo especificado tiene los mismos valores en las propiedades <see cref="P:System.Windows.Rect.Location" /> y <see cref="P:System.Windows.Rect.Size" /> que el rectángulo actual; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-187"><see langword="true" /> if the specified rectangle has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-188">Esta operación comprueba la igualdad del objeto.</span><span class="sxs-lookup"><span data-stu-id="8c028-188">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="8c028-189">En esta comparación, dos instancias de <xref:System.Double.NaN?displayProperty=nameWithType> se consideran iguales.</span><span class="sxs-lookup"><span data-stu-id="8c028-189">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8c028-190">Posición y las dimensiones de un rectángulo se describen mediante <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="8c028-190">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="8c028-191">Dado que <xref:System.Double> valores pueden perder precisión cuando se realizan operaciones con ellos, una comparación entre dos valores son iguales lógicamente podría producir un error.</span><span class="sxs-lookup"><span data-stu-id="8c028-191">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-192">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> método para determinar si un rectángulo es igual a un rectángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-192">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> method to determine if a rectangle is equal to a specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="System.Windows.Rect.Equals (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="8c028-193">Primer rectángulo que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="8c028-193">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="8c028-194">Segundo rectángulo que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="8c028-194">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="8c028-195">Indica si los rectángulos especificados son iguales.</span><span class="sxs-lookup"><span data-stu-id="8c028-195">Indicates whether the specified rectangles are equal.</span></span></summary>
        <returns><span data-ttu-id="8c028-196">Es <see langword="true" /> si el rectángulo tiene los mismos valores en las propiedades <see cref="P:System.Windows.Rect.Location" /> y <see cref="P:System.Windows.Rect.Size" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-196"><see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-197">Esta operación comprueba la igualdad del objeto.</span><span class="sxs-lookup"><span data-stu-id="8c028-197">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="8c028-198">En esta comparación, dos instancias de <xref:System.Double.NaN?displayProperty=nameWithType> se consideran iguales.</span><span class="sxs-lookup"><span data-stu-id="8c028-198">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8c028-199">Posición y las dimensiones de un rectángulo se describen mediante <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="8c028-199">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="8c028-200">Dado que <xref:System.Double> valores pueden perder precisión cuando se realizan operaciones con ellos, una comparación entre dos valores son iguales lógicamente podría producir un error.</span><span class="sxs-lookup"><span data-stu-id="8c028-200">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-201">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> método para determinar si un rectángulo es igual a otro.</span><span class="sxs-lookup"><span data-stu-id="8c028-201">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to determine if one rectangle is equal to another.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="rect.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c028-202">Crea un código hash para el rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-202">Creates a hash code for the rectangle.</span></span></summary>
        <returns><span data-ttu-id="8c028-203">Código hash para la estructura <see cref="T:System.Windows.Rect" /> actual.</span><span class="sxs-lookup"><span data-stu-id="8c028-203">A hash code for the current <see cref="T:System.Windows.Rect" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-204">Este método crea un código hash mediante el uso de la <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, y <xref:System.Windows.Rect.Height%2A> los valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="8c028-204">This method creates a hash code by using the <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-205">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.GetHashCode%2A> método para obtener el código hash de un <xref:System.Windows.Rect>.</span><span class="sxs-lookup"><span data-stu-id="8c028-205">The following example shows how to use the <xref:System.Windows.Rect.GetHashCode%2A> method to get the hash code of a <xref:System.Windows.Rect>.</span></span>  
  
 [!code-csharp[RectExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Height : double with get, set" Usage="System.Windows.Rect.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-206">Obtiene o establece la altura del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-206">Gets or sets the height of the rectangle.</span></span></summary>
        <value><span data-ttu-id="8c028-207">Número positivo que representa el alto del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-207">A positive number that represents the height of the rectangle.</span></span> <span data-ttu-id="8c028-208">El valor predeterminado es 0.</span><span class="sxs-lookup"><span data-stu-id="8c028-208">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-209">El <xref:System.Windows.Rect.Empty%2A> rectángulo tiene una <xref:System.Windows.Rect.Height%2A> de <xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="8c028-209">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Height%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="8c028-210">El <xref:System.Windows.Rect.Empty%2A> rectángulo es de solo lectura; su <xref:System.Windows.Rect.Height%2A> no no se puede cambiar.</span><span class="sxs-lookup"><span data-stu-id="8c028-210">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Height%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-211">El ejemplo siguiente muestra cómo usar un <xref:System.Windows.Rect> estructura para especificar las dimensiones y la ubicación de un rectángulo mediante XAML.</span><span class="sxs-lookup"><span data-stu-id="8c028-211">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="8c028-212">El ejemplo siguiente muestra cómo usar código para crear un rectángulo y agregarlo a la página.</span><span class="sxs-lookup"><span data-stu-id="8c028-212">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="8c028-213">Este ejemplo también muestra cómo encontrar información de tamaño y coordenada sobre el nuevo rectángulo y representar la información de un <xref:System.Windows.Controls.TextBox> debajo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-213">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8c028-214"><see cref="P:System.Windows.Rect.Height" /> está establecido en un valor negativo.</span><span class="sxs-lookup"><span data-stu-id="8c028-214"><see cref="P:System.Windows.Rect.Height" /> is set to a negative value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c028-215"><see cref="P:System.Windows.Rect.Height" /> está establecido en un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-215"><see cref="P:System.Windows.Rect.Height" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.Width" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Inflate">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c028-216">Crea un rectángulo que es el resultado de expandir o reducir un rectángulo cantidad especificada.</span><span class="sxs-lookup"><span data-stu-id="8c028-216">Creates a rectangle that results from expanding or shrinking a rectangle by the specified amount.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="member this.Inflate : System.Windows.Size -&gt; unit" Usage="rect.Inflate size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="8c028-217">Especifica la cantidad que se va a expandir el rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-217">Specifies the amount to expand the rectangle.</span></span> <span data-ttu-id="8c028-218">La propiedad <see cref="T:System.Windows.Size" /> de la estructura <see cref="P:System.Windows.Size.Width" /> especifica la cantidad que se van a incrementar las propiedades <see cref="P:System.Windows.Rect.Left" /> y <see cref="P:System.Windows.Rect.Right" /> del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-218">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span></span> <span data-ttu-id="8c028-219">La propiedad <see cref="T:System.Windows.Size" /> de la estructura <see cref="P:System.Windows.Size.Height" /> especifica la cantidad que se van a incrementar las propiedades <see cref="P:System.Windows.Rect.Top" /> y <see cref="P:System.Windows.Rect.Bottom" /> del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-219">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span></span></param>
        <summary><span data-ttu-id="8c028-220">Expande el rectángulo utilizando la estructura <see cref="T:System.Windows.Size" />especificada, en todas las direcciones.</span><span class="sxs-lookup"><span data-stu-id="8c028-220">Expands the rectangle by using the specified <see cref="T:System.Windows.Size" />, in all directions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-221">El <xref:System.Windows.Rect.Width%2A> del rectángulo resultante se incrementa en dos veces la <xref:System.Windows.Size.Width%2A> del elemento especificado <xref:System.Windows.Size> estructura, porque se inflan tanto los lados izquierdo y derecho del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-221">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="8c028-222">Del mismo modo, el <xref:System.Windows.Rect.Height%2A> del rectángulo resultante se incrementa en dos veces la <xref:System.Windows.Size.Height%2A> del elemento especificado <xref:System.Windows.Size> estructura.</span><span class="sxs-lookup"><span data-stu-id="8c028-222">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-223">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> método para aumentar el tamaño de un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-223">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> method to increase the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c028-224">Se llama a este método en el rectángulo de la propiedad <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-224">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Inflate (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(double width, double height);" />
      <MemberSignature Language="F#" Value="member this.Inflate : double * double -&gt; unit" Usage="rect.Inflate (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="8c028-225">Cantidad que se expanden o reducen los lados izquierdo y derecho del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-225">The amount by which to expand or shrink the left and right sides of the rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="8c028-226">Cantidad que se expanden o reducen los lados superior e inferior del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-226">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span></span></param>
        <summary><span data-ttu-id="8c028-227">Se expande o reduce el rectángulo con el ancho y el alto especificados, en todas las direcciones.</span><span class="sxs-lookup"><span data-stu-id="8c028-227">Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-228">El <xref:System.Windows.Rect.Width%2A> de rectángulo resultante aumenta o disminuye por dos veces el desplazamiento del ancho especificado, porque se aplica a tanto los lados izquierdo y derecho del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-228">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="8c028-229">Del mismo modo, el <xref:System.Windows.Rect.Height%2A> de rectángulo resultante aumenta o disminuye por dos veces el alto especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-229">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="8c028-230">Si el ancho o alto especificados reduce el rectángulo en más de su actual <xref:System.Windows.Rect.Width%2A> o <xref:System.Windows.Rect.Height%2A> - dando al rectángulo un área negativa - el rectángulo se convierte en el <xref:System.Windows.Rect.Empty%2A> rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-230">If the specified width or height shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A> - giving the rectangle a negative area - the rectangle becomes the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-231">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> método para cambiar el tamaño de un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-231">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c028-232">Se llama a este método en el rectángulo de la propiedad <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-232">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="static member Inflate : System.Windows.Rect * System.Windows.Size -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Inflate (rect, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="8c028-233">Estructura <see cref="T:System.Windows.Rect" /> que se va a modificar.</span><span class="sxs-lookup"><span data-stu-id="8c028-233">The <see cref="T:System.Windows.Rect" /> structure to modify.</span></span></param>
        <param name="size"><span data-ttu-id="8c028-234">Especifica la cantidad que se va a expandir el rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-234">Specifies the amount to expand the rectangle.</span></span> <span data-ttu-id="8c028-235">La propiedad <see cref="T:System.Windows.Size" /> de la estructura <see cref="P:System.Windows.Size.Width" /> especifica la cantidad que se van a incrementar las propiedades <see cref="P:System.Windows.Rect.Left" /> y <see cref="P:System.Windows.Rect.Right" /> del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-235">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span></span> <span data-ttu-id="8c028-236">La propiedad <see cref="T:System.Windows.Size" /> de la estructura <see cref="P:System.Windows.Size.Height" /> especifica la cantidad que se van a incrementar las propiedades <see cref="P:System.Windows.Rect.Top" /> y <see cref="P:System.Windows.Rect.Bottom" /> del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-236">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span></span></param>
        <summary><span data-ttu-id="8c028-237">Devuelve el rectángulo que es el resultado de expandir el rectángulo especificado por la estructura <see cref="T:System.Windows.Size" /> especificada, en todas las direcciones.</span><span class="sxs-lookup"><span data-stu-id="8c028-237">Returns the rectangle that results from expanding the specified rectangle by the specified <see cref="T:System.Windows.Size" />, in all directions.</span></span></summary>
        <returns><span data-ttu-id="8c028-238">Rectángulo resultante.</span><span class="sxs-lookup"><span data-stu-id="8c028-238">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-239">El <xref:System.Windows.Rect.Width%2A> del rectángulo resultante se incrementa en dos veces la <xref:System.Windows.Size.Width%2A> del elemento especificado <xref:System.Windows.Size> estructura, porque se inflan tanto los lados izquierdo y derecho del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-239">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="8c028-240">Del mismo modo, el <xref:System.Windows.Rect.Height%2A> del rectángulo resultante se incrementa en dos veces la <xref:System.Windows.Size.Height%2A> del elemento especificado <xref:System.Windows.Size> estructura.</span><span class="sxs-lookup"><span data-stu-id="8c028-240">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-241">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> método para cambiar el tamaño de un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-241">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c028-242"><paramref name="rect" /> es un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-242"><paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, double width, double height);" />
      <MemberSignature Language="F#" Value="static member Inflate : System.Windows.Rect * double * double -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Inflate (rect, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="8c028-243">Estructura <see cref="T:System.Windows.Rect" /> que se va a modificar.</span><span class="sxs-lookup"><span data-stu-id="8c028-243">The <see cref="T:System.Windows.Rect" /> structure to modify.</span></span></param>
        <param name="width"><span data-ttu-id="8c028-244">Cantidad que se expanden o reducen los lados izquierdo y derecho del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-244">The amount by which to expand or shrink the left and right sides of the rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="8c028-245">Cantidad que se expanden o reducen los lados superior e inferior del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-245">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span></span></param>
        <summary><span data-ttu-id="8c028-246">Crea un rectángulo que es el resultado de expandir o reducir el rectángulo especificado por el ancho y el alto especificados, en todas las direcciones.</span><span class="sxs-lookup"><span data-stu-id="8c028-246">Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.</span></span></summary>
        <returns><span data-ttu-id="8c028-247">Rectángulo resultante.</span><span class="sxs-lookup"><span data-stu-id="8c028-247">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-248">El <xref:System.Windows.Rect.Width%2A> de rectángulo resultante aumenta o disminuye por dos veces el desplazamiento del ancho especificado, porque se aplica a tanto los lados izquierdo y derecho del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-248">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="8c028-249">Del mismo modo, el <xref:System.Windows.Rect.Height%2A> de rectángulo resultante aumenta o disminuye por dos veces el alto especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-249">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="8c028-250">Si los modificadores de ancho o alto especificados reducen el rectángulo en más de su actual <xref:System.Windows.Rect.Width%2A> o <xref:System.Windows.Rect.Height%2A> - dando al rectángulo un área negativa: este método devuelve <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8c028-250">If the specified width or height modifiers shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A> - giving the rectangle a negative area - this method returns <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-251">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> método para cambiar el tamaño de un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-251">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c028-252"><paramref name="rect" /> es un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-252"><paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c028-253">Encuentra la intersección de dos rectángulos.</span><span class="sxs-lookup"><span data-stu-id="8c028-253">Finds the intersection of two rectangles.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Windows.Rect -&gt; unit" Usage="rect.Intersect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="8c028-254">Rectángulo que se va a intersecar con el rectángulo actual.</span><span class="sxs-lookup"><span data-stu-id="8c028-254">The rectangle to intersect with the current rectangle.</span></span></param>
        <summary><span data-ttu-id="8c028-255">Encuentra la intersección del rectángulo actual y el rectángulo especificado y almacena el resultado como el rectángulo actual.</span><span class="sxs-lookup"><span data-stu-id="8c028-255">Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-256">Si no existe ninguna intersección, se convierte en el rectángulo actual <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8c028-256">If no intersection exists, the current rectangle becomes <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-257">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> método para buscar la intersección de dos rectángulos y almacenar el resultado como un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-257">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> method to find the intersection of two rectangles and store the result as a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Intersect (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Intersect(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Intersect (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Intersect(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Windows.Rect * System.Windows.Rect -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Intersect (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="8c028-258">Primer rectángulo que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="8c028-258">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="8c028-259">Segundo rectángulo que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="8c028-259">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="8c028-260">Devuelve la intersección de los rectángulos especificados.</span><span class="sxs-lookup"><span data-stu-id="8c028-260">Returns the intersection of the specified rectangles.</span></span></summary>
        <returns><span data-ttu-id="8c028-261">Intersección de los dos rectángulos o <see cref="P:System.Windows.Rect.Empty" /> si no existe ninguna intersección.</span><span class="sxs-lookup"><span data-stu-id="8c028-261">The intersection of the two rectangles, or <see cref="P:System.Windows.Rect.Empty" /> if no intersection exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-262">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> método para buscar la intersección de dos rectángulos.</span><span class="sxs-lookup"><span data-stu-id="8c028-262">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to find the intersection of two rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="IntersectsWith">
      <MemberSignature Language="C#" Value="public bool IntersectsWith (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IntersectsWith(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IntersectsWith(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.IntersectsWith : System.Windows.Rect -&gt; bool" Usage="rect.IntersectsWith rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="8c028-263">Rectángulo que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="8c028-263">The rectangle to check.</span></span></param>
        <summary><span data-ttu-id="8c028-264">Indica si el rectángulo especificado se interseca con el rectángulo actual.</span><span class="sxs-lookup"><span data-stu-id="8c028-264">Indicates whether the specified rectangle intersects with the current rectangle.</span></span></summary>
        <returns><span data-ttu-id="8c028-265">Es <see langword="true" /> si el rectángulo especificado se interseca con el rectángulo actual; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-265"><see langword="true" /> if the specified rectangle intersects with the current rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-266">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.IntersectsWith%2A> método para determinar si dos rectángulos forman una intersección.</span><span class="sxs-lookup"><span data-stu-id="8c028-266">The following example shows how to use the <xref:System.Windows.Rect.IntersectsWith%2A> method to determine if two rectangles intersect.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectsWithExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectswithexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Windows.Rect.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-267">Obtiene un valor que indica si el rectángulo es el rectángulo de la propiedad <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-267">Gets a value that indicates whether the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></summary>
        <value><span data-ttu-id="8c028-268">Es <see langword="true" /> si el rectángulo es el rectángulo de la propiedad <see cref="P:System.Windows.Rect.Empty" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-268"><see langword="true" /> if the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-269">No utilice esta propiedad para probar el área cero; un rectángulo con área cero no es necesariamente el <xref:System.Windows.Rect.Empty%2A> rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-269">Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span> <span data-ttu-id="8c028-270">Para obtener más información, vea la propiedad <xref:System.Windows.Rect.Empty%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c028-270">For more information, see the <xref:System.Windows.Rect.Empty%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Empty" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Left : double" Usage="System.Windows.Rect.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-271">Obtiene el valor del eje X del lado izquierdo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-271">Gets the x-axis value of the left side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="8c028-272">Valor del eje X del lado izquierdo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-272">The x-axis value of the left side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-273">Al obtener esta propiedad es equivalente a obtener el <xref:System.Windows.Rect.X%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="8c028-273">Getting this property is equivalent to getting the <xref:System.Windows.Rect.X%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-274">El ejemplo siguiente muestra cómo usar código para crear un rectángulo y agregarlo a la página.</span><span class="sxs-lookup"><span data-stu-id="8c028-274">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="8c028-275">Este ejemplo también muestra cómo encontrar información de tamaño y coordenada sobre el nuevo rectángulo y representar la información de un <xref:System.Windows.Controls.TextBox> debajo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-275">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Windows.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Location { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Windows.Point with get, set" Usage="System.Windows.Rect.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-276">Obtiene o establece la posición de la esquina superior izquierda del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-276">Gets or sets the position of the top-left corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="8c028-277">Posición de la esquina superior izquierda del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-277">The position of the top-left corner of the rectangle.</span></span> <span data-ttu-id="8c028-278">El valor predeterminado es (0, 0).</span><span class="sxs-lookup"><span data-stu-id="8c028-278">The default is (0, 0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-279">La posición de la esquina superior izquierda del rectángulo es igual a (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="8c028-279">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-280">El ejemplo siguiente muestra cómo usar un <xref:System.Windows.Rect> estructura para especificar las dimensiones y la ubicación de un rectángulo mediante XAML.</span><span class="sxs-lookup"><span data-stu-id="8c028-280">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="8c028-281">El ejemplo siguiente muestra cómo usar código para crear un rectángulo y agregarlo a la página.</span><span class="sxs-lookup"><span data-stu-id="8c028-281">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="8c028-282">Este ejemplo también muestra cómo encontrar información de tamaño y coordenada sobre el nuevo rectángulo y representar la información de un <xref:System.Windows.Controls.TextBox> debajo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-282">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c028-283"><see cref="P:System.Windows.Rect.Location" /> está establecido en un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-283"><see cref="P:System.Windows.Rect.Location" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Offset">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c028-284">Mueve un rectángulo la cantidad especificada.</span><span class="sxs-lookup"><span data-stu-id="8c028-284">Moves a rectangle by the specified amount.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetVector As Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(System::Windows::Vector offsetVector);" />
      <MemberSignature Language="F#" Value="member this.Offset : System.Windows.Vector -&gt; unit" Usage="rect.Offset offsetVector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="offsetVector"><span data-ttu-id="8c028-285">Vector que especifica las cantidades horizontal y vertical que se va a mover el rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-285">A vector that specifies the horizontal and vertical amounts to move the rectangle.</span></span></param>
        <summary><span data-ttu-id="8c028-286">Mueve el rectángulo el vector especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-286">Moves the rectangle by the specified vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-287">Llamar a este método en un rectángulo vacío (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) no está permitido.</span><span class="sxs-lookup"><span data-stu-id="8c028-287">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="8c028-288">Tenga en cuenta que al llamar a la <xref:System.Windows.Rect.Offset%2A> método tendrá un efecto solo si puede cambiar el <xref:System.Windows.Rect.X%2A> y <xref:System.Windows.Rect.Y%2A> propiedades directamente.</span><span class="sxs-lookup"><span data-stu-id="8c028-288">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="8c028-289">Dado que <xref:System.Windows.Rect> es un tipo de valor, si hace referencia a un <xref:System.Windows.Rect> objeto mediante el uso de una propiedad o indizador, obtendrá una copia del objeto, no una referencia al objeto.</span><span class="sxs-lookup"><span data-stu-id="8c028-289">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="8c028-290">Si se intenta cambiar <xref:System.Windows.Rect.X%2A> o <xref:System.Windows.Rect.Y%2A> en una referencia de propiedad o indizador, se produce un error del compilador.</span><span class="sxs-lookup"><span data-stu-id="8c028-290">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="8c028-291">De forma similar, una llamada a <xref:System.Windows.Rect.Offset%2A> en la propiedad o indizador no cambiará el objeto subyacente.</span><span class="sxs-lookup"><span data-stu-id="8c028-291">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="8c028-292">Si desea cambiar el valor de un <xref:System.Windows.Rect> que se hace referencia como una propiedad o indizador, cree un nuevo <xref:System.Windows.Rect>, modificar sus campos y, a continuación, asigne el <xref:System.Windows.Rect> a la propiedad o indizador.</span><span class="sxs-lookup"><span data-stu-id="8c028-292">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-293">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> método para cambiar la posición de un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-293">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c028-294">Se llama a este método en el rectángulo de la propiedad <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-294">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Offset : double * double -&gt; unit" Usage="rect.Offset (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="8c028-295">Cantidad que se va a mover horizontalmente el rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-295">The amount to move the rectangle horizontally.</span></span></param>
        <param name="offsetY"><span data-ttu-id="8c028-296">Cantidad que se va a mover verticalmente el rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-296">The amount to move the rectangle vertically.</span></span></param>
        <summary><span data-ttu-id="8c028-297">Mueve el rectángulo las cantidades horizontal y vertical especificadas.</span><span class="sxs-lookup"><span data-stu-id="8c028-297">Moves the rectangle by the specified horizontal and vertical amounts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-298">Llamar a este método en un rectángulo vacío (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) no está permitido.</span><span class="sxs-lookup"><span data-stu-id="8c028-298">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="8c028-299">Tenga en cuenta que al llamar a la <xref:System.Windows.Rect.Offset%2A> método tendrá un efecto solo si puede cambiar el <xref:System.Windows.Rect.X%2A> y <xref:System.Windows.Rect.Y%2A> propiedades directamente.</span><span class="sxs-lookup"><span data-stu-id="8c028-299">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="8c028-300">Dado que <xref:System.Windows.Rect> es un tipo de valor, si hace referencia a un <xref:System.Windows.Rect> objeto mediante el uso de una propiedad o indizador, obtendrá una copia del objeto, no una referencia al objeto.</span><span class="sxs-lookup"><span data-stu-id="8c028-300">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="8c028-301">Si se intenta cambiar <xref:System.Windows.Rect.X%2A> o <xref:System.Windows.Rect.Y%2A> en una referencia de propiedad o indizador, se produce un error del compilador.</span><span class="sxs-lookup"><span data-stu-id="8c028-301">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="8c028-302">De forma similar, una llamada a <xref:System.Windows.Rect.Offset%2A> en la propiedad o indizador no cambiará el objeto subyacente.</span><span class="sxs-lookup"><span data-stu-id="8c028-302">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="8c028-303">Si desea cambiar el valor de un <xref:System.Windows.Rect> que se hace referencia como una propiedad o indizador, cree un nuevo <xref:System.Windows.Rect>, modificar sus campos y, a continuación, asigne el <xref:System.Windows.Rect> a la propiedad o indizador.</span><span class="sxs-lookup"><span data-stu-id="8c028-303">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-304">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> método para cambiar la posición de un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-304">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c028-305">Se llama a este método en el rectángulo de la propiedad <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-305">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, System::Windows::Vector offsetVector);" />
      <MemberSignature Language="F#" Value="static member Offset : System.Windows.Rect * System.Windows.Vector -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Offset (rect, offsetVector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="8c028-306">Rectángulo original.</span><span class="sxs-lookup"><span data-stu-id="8c028-306">The original rectangle.</span></span></param>
        <param name="offsetVector"><span data-ttu-id="8c028-307">Vector que especifica los desplazamientos horizontal y vertical del nuevo rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-307">A vector that specifies the horizontal and vertical offsets for the new rectangle.</span></span></param>
        <summary><span data-ttu-id="8c028-308">Devuelve un rectángulo que se desplaza desde el rectángulo especificado mediante el vector especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-308">Returns a rectangle that is offset from the specified rectangle by using the specified vector.</span></span></summary>
        <returns><span data-ttu-id="8c028-309">Rectángulo resultante.</span><span class="sxs-lookup"><span data-stu-id="8c028-309">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-310">Llamar a este método con un rectángulo vacío (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) no está permitido.</span><span class="sxs-lookup"><span data-stu-id="8c028-310">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-311">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> método para cambiar la posición de un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-311">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c028-312">El valor de <paramref name="rect" /> es <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-312"><paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="static member Offset : System.Windows.Rect * double * double -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Offset (rect, offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="8c028-313">Rectángulo que se va a mover.</span><span class="sxs-lookup"><span data-stu-id="8c028-313">The rectangle to move.</span></span></param>
        <param name="offsetX"><span data-ttu-id="8c028-314">Desplazamiento horizontal del nuevo rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-314">The horizontal offset for the new rectangle.</span></span></param>
        <param name="offsetY"><span data-ttu-id="8c028-315">Desplazamiento vertical del nuevo rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-315">The vertical offset for the new rectangle.</span></span></param>
        <summary><span data-ttu-id="8c028-316">Devuelve un rectángulo que se desplaza desde el rectángulo especificado usando las cantidades horizontal y vertical especificadas.</span><span class="sxs-lookup"><span data-stu-id="8c028-316">Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.</span></span></summary>
        <returns><span data-ttu-id="8c028-317">Rectángulo resultante.</span><span class="sxs-lookup"><span data-stu-id="8c028-317">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-318">Llamar a este método con un rectángulo vacío (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) no está permitido.</span><span class="sxs-lookup"><span data-stu-id="8c028-318">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-319">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> método para cambiar la posición de un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-319">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c028-320">El valor de <paramref name="rect" /> es <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-320"><paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="rect1 = rect2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="8c028-321">Primer rectángulo que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="8c028-321">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="8c028-322">Segundo rectángulo que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="8c028-322">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="8c028-323">Compara dos rectángulos para determinar si son exactamente iguales.</span><span class="sxs-lookup"><span data-stu-id="8c028-323">Compares two rectangles for exact equality.</span></span></summary>
        <returns><span data-ttu-id="8c028-324">Es <see langword="true" /> si el rectángulo tiene los mismos valores en las propiedades <see cref="P:System.Windows.Rect.Location" /> y <see cref="P:System.Windows.Rect.Size" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-324"><see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-325">Esta operación comprueba la igualdad del objeto.</span><span class="sxs-lookup"><span data-stu-id="8c028-325">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="8c028-326">En esta comparación, dos instancias de <xref:System.Double.NaN?displayProperty=nameWithType> se consideran iguales.</span><span class="sxs-lookup"><span data-stu-id="8c028-326">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8c028-327">Posición y las dimensiones de un rectángulo se describen mediante <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="8c028-327">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="8c028-328">Dado que <xref:System.Double> valores pueden perder precisión cuando se realizan operaciones con ellos, una comparación entre dos valores son iguales lógicamente podría producir un error.</span><span class="sxs-lookup"><span data-stu-id="8c028-328">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="8c028-329">Es el método equivalente para este operador <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8c028-329">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="8c028-330">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.op_Equality%2A> operador para determinar si dos rectángulos son exactamente iguales.</span><span class="sxs-lookup"><span data-stu-id="8c028-330">The following example shows how to use the <xref:System.Windows.Rect.op_Equality%2A> operator to determine if two rectangles are exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="System.Windows.Rect.op_Inequality (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="8c028-331">Primer rectángulo que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="8c028-331">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="8c028-332">Segundo rectángulo que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="8c028-332">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="8c028-333">Compara dos rectángulos para determinar si no son iguales.</span><span class="sxs-lookup"><span data-stu-id="8c028-333">Compares two rectangles for inequality.</span></span></summary>
        <returns><span data-ttu-id="8c028-334">Es <see langword="true" /> si el rectángulo no tiene los mismos valores en las propiedades <see cref="P:System.Windows.Rect.Location" /> y <see cref="P:System.Windows.Rect.Size" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-334"><see langword="true" /> if the rectangles do not have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-335">Esta operación comprueba la desigualdad de objeto.</span><span class="sxs-lookup"><span data-stu-id="8c028-335">This operation tests for object inequality.</span></span>  
  
 <span data-ttu-id="8c028-336">En esta comparación, dos instancias de <xref:System.Double.NaN?displayProperty=nameWithType> se consideran iguales.</span><span class="sxs-lookup"><span data-stu-id="8c028-336">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8c028-337">Posición y las dimensiones de un rectángulo se describen mediante <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="8c028-337">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="8c028-338">Dado que <xref:System.Double> valores pueden perder precisión cuando se realizan operaciones con ellos, una comparación entre dos valores son iguales lógicamente podría producir un error.</span><span class="sxs-lookup"><span data-stu-id="8c028-338">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="8c028-339">Es el método equivalente para este operador <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8c028-339">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="8c028-340">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.op_Inequality%2A> operador para determinar si dos rectángulos no son exactamente iguales.</span><span class="sxs-lookup"><span data-stu-id="8c028-340">The following example shows how to use the <xref:System.Windows.Rect.op_Inequality%2A> operator to determine if two rectangles are not exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8c028-341">Representación de cadena del rectángulo, en el formato "x, y, ancho, alto".</span><span class="sxs-lookup"><span data-stu-id="8c028-341">The string representation of the rectangle, in the form "x, y, width, height".</span></span></param>
        <summary><span data-ttu-id="8c028-342">Crea un nuevo rectángulo a partir de la representación de cadena especificada.</span><span class="sxs-lookup"><span data-stu-id="8c028-342">Creates a new rectangle from the specified string representation.</span></span></summary>
        <returns><span data-ttu-id="8c028-343">Rectángulo resultante.</span><span class="sxs-lookup"><span data-stu-id="8c028-343">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-344">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Parse%2A> método para convertir una representación de cadena de un rectángulo en un <xref:System.Windows.Rect> estructura.</span><span class="sxs-lookup"><span data-stu-id="8c028-344">The following example shows how to use the <xref:System.Windows.Rect.Parse%2A> method to convert a string representation of a rectangle into a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#parseexample)]
 [!code-vb[RectExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public double Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Right" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Right { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Right : double" Usage="System.Windows.Rect.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-345">Obtiene el valor del eje X del lado derecho del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-345">Gets the x-axis value of the right side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="8c028-346">Valor del eje X del lado derecho del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-346">The x-axis value of the right side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-347">El valor del eje x del lado derecho del rectángulo es igual a la suma de los <xref:System.Windows.Rect.X%2A> y <xref:System.Windows.Rect.Width%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="8c028-347">The x-axis value of the right side of the rectangle is equal to the sum of the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Width%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-348">El ejemplo siguiente muestra cómo usar código para crear un rectángulo y agregarlo a la página.</span><span class="sxs-lookup"><span data-stu-id="8c028-348">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="8c028-349">Este ejemplo también muestra cómo encontrar información de tamaño y coordenada sobre el nuevo rectángulo y representar la información de un <xref:System.Windows.Controls.TextBox> debajo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-349">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : double * double -&gt; unit" Usage="rect.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="8c028-350">Factor de escala en la dirección x.</span><span class="sxs-lookup"><span data-stu-id="8c028-350">The scale factor in the x-direction.</span></span></param>
        <param name="scaleY"><span data-ttu-id="8c028-351">Factor de escala en la dirección y.</span><span class="sxs-lookup"><span data-stu-id="8c028-351">The scale factor in the y-direction.</span></span></param>
        <summary><span data-ttu-id="8c028-352">Multiplica el tamaño del rectángulo actual por los valores x e y especificados.</span><span class="sxs-lookup"><span data-stu-id="8c028-352">Multiplies the size of the current rectangle by the specified x and y values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-353">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Scale%2A> método para multiplicar el ancho y alto de un rectángulo en la cantidad especificada.</span><span class="sxs-lookup"><span data-stu-id="8c028-353">The following example shows how to use the <xref:System.Windows.Rect.Scale%2A> method to multiply the width and height of a rectangle by the specified amount.</span></span>  
  
 [!code-csharp[RectExamples_snip#ScaleExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#scaleexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Windows.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size Size { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Windows.Size with get, set" Usage="System.Windows.Rect.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-354">Obtiene o establece el alto y el ancho del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-354">Gets or sets the width and height of the rectangle.</span></span></summary>
        <value><span data-ttu-id="8c028-355">Estructura <see cref="T:System.Windows.Size" /> que especifica el ancho y el alto del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-355">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-356">El ejemplo siguiente muestra cómo usar un <xref:System.Windows.Rect> estructura para especificar las dimensiones y la ubicación de un rectángulo mediante XAML.</span><span class="sxs-lookup"><span data-stu-id="8c028-356">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="8c028-357">El ejemplo siguiente muestra cómo usar código para crear un rectángulo y agregarlo a la página.</span><span class="sxs-lookup"><span data-stu-id="8c028-357">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="8c028-358">Este ejemplo también muestra cómo encontrar información de tamaño y coordenada sobre el nuevo rectángulo y representar la información de un <xref:System.Windows.Controls.TextBox> debajo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-358">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c028-359"><see cref="P:System.Windows.Rect.Size" /> está establecido en un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-359"><see cref="P:System.Windows.Rect.Size" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8c028-360">Formato que se usará.</span><span class="sxs-lookup"><span data-stu-id="8c028-360">The format to use.</span></span>  
  
<span data-ttu-id="8c028-361">O bien</span><span class="sxs-lookup"><span data-stu-id="8c028-361">-or-</span></span> 
<span data-ttu-id="8c028-362">Referencia nula (<see langword="Nothing" /> en Visual Basic) para usar el formato predeterminado definido para el tipo de la implementación <see cref="T:System.IFormattable" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-362">A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span></span></param>
        <param name="provider"><span data-ttu-id="8c028-363">Proveedor que se va a usar para dar formato al valor.</span><span class="sxs-lookup"><span data-stu-id="8c028-363">The provider to use to format the value.</span></span>  
  
<span data-ttu-id="8c028-364">O bien</span><span class="sxs-lookup"><span data-stu-id="8c028-364">-or-</span></span> 
<span data-ttu-id="8c028-365">Referencia nula (<see langword="Nothing" /> en Visual Basic) para obtener la información de formato numérico de la configuración regional actual del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="8c028-365">A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span></span></param>
        <summary><span data-ttu-id="8c028-366">Da formato al valor de la instancia actual usando el formato especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-366">Formats the value of the current instance using the specified format.</span></span></summary>
        <returns><span data-ttu-id="8c028-367">Representación de cadena del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-367">A string representation of the rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-368">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="8c028-368">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8c028-369">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Rect> se convierte en una interfaz <xref:System.IFormattable>.</span><span class="sxs-lookup"><span data-stu-id="8c028-369">It can be used only when the <xref:System.Windows.Rect> instance is cast to an <xref:System.IFormattable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormattable" />
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Top : double" Usage="System.Windows.Rect.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-370">Obtiene la posición del eje Y de la parte superior del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-370">Gets the y-axis position of the top of the rectangle.</span></span></summary>
        <value><span data-ttu-id="8c028-371">Posición del eje Y de la parte superior del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-371">The y-axis position of the top of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-372">Al obtener esta propiedad es equivalente a obtener el <xref:System.Windows.Rect.Y%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="8c028-372">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Y%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-373">El ejemplo siguiente muestra cómo usar código para crear un rectángulo y agregarlo a la página.</span><span class="sxs-lookup"><span data-stu-id="8c028-373">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="8c028-374">Este ejemplo también muestra cómo encontrar información de tamaño y coordenada sobre el nuevo rectángulo y representar la información de un <xref:System.Windows.Controls.TextBox> debajo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-374">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="TopLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopLeft { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLeft : System.Windows.Point" Usage="System.Windows.Rect.TopLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-375">Obtiene la posición de la esquina superior izquierda del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-375">Gets the position of the top-left corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="8c028-376">Posición de la esquina superior izquierda del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-376">The position of the top-left corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-377">La posición de la esquina superior izquierda del rectángulo es igual a (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="8c028-377">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-378">El ejemplo siguiente muestra cómo usar código para crear un rectángulo y agregarlo a la página.</span><span class="sxs-lookup"><span data-stu-id="8c028-378">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="8c028-379">Este ejemplo también muestra cómo encontrar información de tamaño y coordenada sobre el nuevo rectángulo y representar la información de un <xref:System.Windows.Controls.TextBox> debajo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-379">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopRight { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.TopRight : System.Windows.Point" Usage="System.Windows.Rect.TopRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-380">Obtiene la posición de la esquina superior derecha del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-380">Gets the position of the top-right corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="8c028-381">Posición de la esquina superior derecha del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-381">The position of the top-right corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-382">La posición de la esquina superior derecha del rectángulo es igual a (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="8c028-382">The position of the top-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-383">El ejemplo siguiente muestra cómo usar código para crear un rectángulo y agregarlo a la página.</span><span class="sxs-lookup"><span data-stu-id="8c028-383">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="8c028-384">Este ejemplo también muestra cómo encontrar información de tamaño y coordenada sobre el nuevo rectángulo y representar la información de un <xref:System.Windows.Controls.TextBox> debajo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-384">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c028-385">Devuelve una representación de cadena del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-385">Returns a string representation of the rectangle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="rect.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c028-386">Devuelve una representación de cadena del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-386">Returns a string representation of the rectangle.</span></span></summary>
        <returns><span data-ttu-id="8c028-387">Representación de cadena del rectángulo actual.</span><span class="sxs-lookup"><span data-stu-id="8c028-387">A string representation of the current rectangle.</span></span> <span data-ttu-id="8c028-388">La cadena tiene el formato siguiente: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span><span class="sxs-lookup"><span data-stu-id="8c028-388">The string has the following form: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-389">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.ToString> método para obtener una representación de cadena de un <xref:System.Windows.Rect> estructura.</span><span class="sxs-lookup"><span data-stu-id="8c028-389">The following example shows how to use the <xref:System.Windows.Rect.ToString> method to get a string representation of a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ToStringExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#tostringexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="rect.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8c028-390">Información de formato específica de la referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="8c028-390">Culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="8c028-391">Devuelve una representación de cadena del rectángulo usando el proveedor de formato especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-391">Returns a string representation of the rectangle by using the specified format provider.</span></span></summary>
        <returns><span data-ttu-id="8c028-392">Representación de cadena del rectángulo actual que determina el proveedor de formato especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-392">A string representation of the current rectangle that is determined by the specified format provider.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c028-393">Transforma un rectángulo con la matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="8c028-393">Transforms a rectangle by using the specified matrix.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Media.Matrix -&gt; unit" Usage="rect.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="8c028-394">Matriz que especifica la transformación que se va a aplicar.</span><span class="sxs-lookup"><span data-stu-id="8c028-394">A matrix that specifies the transformation to apply.</span></span></param>
        <summary><span data-ttu-id="8c028-395">Transforma el rectángulo aplicando la matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="8c028-395">Transforms the rectangle by applying the specified matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-396">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> método para transformar un <xref:System.Windows.Rect> estructura mediante un <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="8c028-396">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> method to transform a <xref:System.Windows.Rect> structure by using a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Transform (System.Windows.Rect rect, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Transform(valuetype System.Windows.Rect rect, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Transform(System::Windows::Rect rect, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Windows.Rect * System.Windows.Media.Matrix -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Transform (rect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="8c028-397">Rectángulo que es la base de la transformación.</span><span class="sxs-lookup"><span data-stu-id="8c028-397">A rectangle that is the basis for the transformation.</span></span></param>
        <param name="matrix"><span data-ttu-id="8c028-398">Matriz que especifica la transformación que se va a aplicar.</span><span class="sxs-lookup"><span data-stu-id="8c028-398">A matrix that specifies the transformation to apply.</span></span></param>
        <summary><span data-ttu-id="8c028-399">Devuelve el rectángulo que es el resultado de aplicar la matriz especificada al rectángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-399">Returns the rectangle that results from applying the specified matrix to the specified rectangle.</span></span></summary>
        <returns><span data-ttu-id="8c028-400">Rectángulo que es el resultado de la operación.</span><span class="sxs-lookup"><span data-stu-id="8c028-400">The rectangle that results from the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-401">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> método para crear un nuevo <xref:System.Windows.Rect> estructura resultante de aplicar un <xref:System.Windows.Media.Matrix> a un rectángulo existente.</span><span class="sxs-lookup"><span data-stu-id="8c028-401">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> method to create a new <xref:System.Windows.Rect> structure that results from applying a <xref:System.Windows.Media.Matrix> to an existing rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c028-402">Crea un rectángulo que tiene el largo exacto para contener un rectángulo especificado y un punto o segundo rectángulo especificados.</span><span class="sxs-lookup"><span data-stu-id="8c028-402">Creates a rectangle that is exactly large enough to contain a given rectangle and a specified point or second rectangle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Windows.Point -&gt; unit" Usage="rect.Union point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="8c028-403">Punto que se va a incluir.</span><span class="sxs-lookup"><span data-stu-id="8c028-403">The point to include.</span></span></param>
        <summary><span data-ttu-id="8c028-404">Expande el rectángulo actual lo suficiente para contener el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-404">Expands the current rectangle exactly enough to contain the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-405">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Union%28System.Windows.Point%29> método para expandir el rectángulo actual lo suficiente para contener una determinada <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="8c028-405">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Point%29> method to expand the current rectangle exactly enough to contain a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Windows.Rect -&gt; unit" Usage="rect.Union rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="8c028-406">Rectángulo se va a incluir.</span><span class="sxs-lookup"><span data-stu-id="8c028-406">The rectangle to include.</span></span></param>
        <summary><span data-ttu-id="8c028-407">Expande el rectángulo actual lo suficiente para contener el rectángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-407">Expands the current rectangle exactly enough to contain the specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-408">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> método para expandir el rectángulo actual lo suficiente para contener el rectángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="8c028-408">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> method to expand the current rectangle exactly enough to contain the specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect, System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect, valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect, System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member Union : System.Windows.Rect * System.Windows.Point -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Union (rect, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="8c028-409">Rectángulo se va a incluir.</span><span class="sxs-lookup"><span data-stu-id="8c028-409">The rectangle to include.</span></span></param>
        <param name="point"><span data-ttu-id="8c028-410">Punto que se va a incluir.</span><span class="sxs-lookup"><span data-stu-id="8c028-410">The point to include.</span></span></param>
        <summary><span data-ttu-id="8c028-411">Crea un rectángulo que es lo bastante grande como para incluir el rectángulo y el punto especificados.</span><span class="sxs-lookup"><span data-stu-id="8c028-411">Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.</span></span></summary>
        <returns><span data-ttu-id="8c028-412">Rectángulo que es lo bastante grande para contener el rectángulo y el punto especificados.</span><span class="sxs-lookup"><span data-stu-id="8c028-412">A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-413">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> método para crear un rectángulo que es lo suficientemente grande como para contener un rectángulo determinado y un determinado <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="8c028-413">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> method to create a rectangle that is exactly large enough to contain a given rectangle and a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Union (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Union : System.Windows.Rect * System.Windows.Rect -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Union (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="8c028-414">Primer rectángulo que se va a incluir.</span><span class="sxs-lookup"><span data-stu-id="8c028-414">The first rectangle to include.</span></span></param>
        <param name="rect2"><span data-ttu-id="8c028-415">Segundo rectángulo que se va a incluir.</span><span class="sxs-lookup"><span data-stu-id="8c028-415">The second rectangle to include.</span></span></param>
        <summary><span data-ttu-id="8c028-416">Crea un rectángulo que es lo bastante grande como para contener los dos rectángulos especificados.</span><span class="sxs-lookup"><span data-stu-id="8c028-416">Creates a rectangle that is exactly large enough to contain the two specified rectangles.</span></span></summary>
        <returns><span data-ttu-id="8c028-417">Rectángulo resultante.</span><span class="sxs-lookup"><span data-stu-id="8c028-417">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c028-418">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> método para crear un rectángulo que es lo suficientemente grande como para contener los dos rectángulos especificados.</span><span class="sxs-lookup"><span data-stu-id="8c028-418">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to create a rectangle that is exactly large enough to contain two given rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Width : double with get, set" Usage="System.Windows.Rect.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-419">Obtiene o establece el ancho del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-419">Gets or sets the width of the rectangle.</span></span></summary>
        <value><span data-ttu-id="8c028-420">Número positivo que representa el ancho del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-420">A positive number that represents the width of the rectangle.</span></span> <span data-ttu-id="8c028-421">El valor predeterminado es 0.</span><span class="sxs-lookup"><span data-stu-id="8c028-421">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-422">El <xref:System.Windows.Rect.Empty%2A> rectángulo tiene una <xref:System.Windows.Rect.Width%2A> de <xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="8c028-422">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Width%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="8c028-423">El <xref:System.Windows.Rect.Empty%2A> rectángulo es de solo lectura; su <xref:System.Windows.Rect.Width%2A> no no se puede cambiar.</span><span class="sxs-lookup"><span data-stu-id="8c028-423">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Width%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-424">El ejemplo siguiente muestra cómo usar un <xref:System.Windows.Rect> estructura para especificar las dimensiones y la ubicación de un rectángulo mediante XAML.</span><span class="sxs-lookup"><span data-stu-id="8c028-424">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="8c028-425">El ejemplo siguiente muestra cómo usar código para crear un rectángulo y agregarlo a la página.</span><span class="sxs-lookup"><span data-stu-id="8c028-425">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="8c028-426">Este ejemplo también muestra cómo encontrar información de tamaño y coordenada sobre el nuevo rectángulo y representar la información de un <xref:System.Windows.Controls.TextBox> debajo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-426">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8c028-427"><see cref="P:System.Windows.Rect.Width" /> está establecido en un valor negativo.</span><span class="sxs-lookup"><span data-stu-id="8c028-427"><see cref="P:System.Windows.Rect.Width" /> is set to a negative value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c028-428"><see cref="P:System.Windows.Rect.Width" /> está establecido en un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-428"><see cref="P:System.Windows.Rect.Width" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.Height" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Rect.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-429">Obtiene o establece el valor del eje X del lado izquierdo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-429">Gets or sets the x-axis value of the left side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="8c028-430">Valor del eje X del lado izquierdo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-430">The x-axis value of the left side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-431">Al obtener esta propiedad es equivalente a obtener el <xref:System.Windows.Rect.Left%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="8c028-431">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Left%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-432">El ejemplo siguiente muestra cómo usar un <xref:System.Windows.Rect> estructura para especificar las dimensiones y la ubicación de un rectángulo mediante XAML.</span><span class="sxs-lookup"><span data-stu-id="8c028-432">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="8c028-433">El ejemplo siguiente muestra cómo usar código para crear un rectángulo y agregarlo a la página.</span><span class="sxs-lookup"><span data-stu-id="8c028-433">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="8c028-434">Este ejemplo también muestra cómo encontrar información de tamaño y coordenada sobre el nuevo rectángulo y representar la información de un <xref:System.Windows.Controls.TextBox> debajo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-434">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c028-435"><see cref="P:System.Windows.Rect.X" /> está establecido en un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-435"><see cref="P:System.Windows.Rect.X" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Rect.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c028-436">Obtiene o establece el valor del eje Y del lado superior del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-436">Gets or sets the y-axis value of the top side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="8c028-437">Valor del eje Y del lado superior del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-437">The y-axis value of the top side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c028-438">Al obtener esta propiedad es equivalente a obtener el <xref:System.Windows.Rect.Top%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="8c028-438">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Top%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c028-439">El ejemplo siguiente muestra cómo usar un <xref:System.Windows.Rect> estructura para especificar las dimensiones y la ubicación de un rectángulo mediante XAML.</span><span class="sxs-lookup"><span data-stu-id="8c028-439">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="8c028-440">El ejemplo siguiente muestra cómo usar código para crear un rectángulo y agregarlo a la página.</span><span class="sxs-lookup"><span data-stu-id="8c028-440">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="8c028-441">Este ejemplo también muestra cómo encontrar información de tamaño y coordenada sobre el nuevo rectángulo y representar la información de un <xref:System.Windows.Controls.TextBox> debajo del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="8c028-441">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c028-442"><see cref="P:System.Windows.Rect.Y" /> está establecido en un rectángulo <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="8c028-442"><see cref="P:System.Windows.Rect.Y" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
  </Members>
</Type>
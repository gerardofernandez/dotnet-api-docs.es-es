<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="39c9f2a490de8f1fd6cb7298879f1173179aea61" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55312688" /></Metadata><TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <TypeSignature Language="F#" Value="type KeyBinding = class&#xA;    inherit InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1b688-101">Enlaza <see cref="T:System.Windows.Input.KeyGesture" /> a <see cref="T:System.Windows.Input.RoutedCommand" /> (u otra implementación de <see cref="T:System.Windows.Input.ICommand" />).</span><span class="sxs-lookup"><span data-stu-id="1b688-101">Binds a <see cref="T:System.Windows.Input.KeyGesture" /> to a <see cref="T:System.Windows.Input.RoutedCommand" /> (or another  <see cref="T:System.Windows.Input.ICommand" /> implementation).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b688-102">Un <xref:System.Windows.Input.KeyBinding> asocia un <xref:System.Windows.Input.KeyGesture> con un <xref:System.Windows.Input.ICommand>, como un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="1b688-102">A <xref:System.Windows.Input.KeyBinding> associates a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.ICommand>, such as a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="1b688-103"><xref:System.Windows.Input.RoutedCommand> es la implementación principal de la <xref:System.Windows.Input.ICommand> interfaz para el [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] comandos del sistema.</span><span class="sxs-lookup"><span data-stu-id="1b688-103"><xref:System.Windows.Input.RoutedCommand> is the primary implementation of the <xref:System.Windows.Input.ICommand> interface for the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] commanding system .</span></span>  <span data-ttu-id="1b688-104">En general, cuando el <xref:System.Windows.Input.KeyGesture> se ejecuta el comando se invoca, aunque el comportamiento del comando más viene determinado por factores específicos del comando, como el <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="1b688-104">In general, when the <xref:System.Windows.Input.KeyGesture> is executed the command is invoked, although the command behavior is further influenced by command-specific factors such as the <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> value.</span></span>  <span data-ttu-id="1b688-105">Para obtener más información sobre los comandos, consulte el [información general sobre comandos](~/docs/framework/wpf/advanced/commanding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1b688-105">For more information on commanding, see the [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
 <span data-ttu-id="1b688-106">A excepción de las teclas de función y las teclas del teclado numérico, válidas <xref:System.Windows.Input.KeyGesture> debe contener exactamente un <xref:System.Windows.Input.Key> y uno o varios <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="1b688-106">With the exception of the function keys and the numeric keypad keys, a valid <xref:System.Windows.Input.KeyGesture> must contain exactly one <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="1b688-107">Teclas de función y las teclas del teclado numérico no requieren una tecla modificadora para ser válido <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="1b688-107">Function keys and numeric keypad keys do not require a modifier key in order to be a valid <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="1b688-108">Es posible especificar un no válido <xref:System.Windows.Input.KeyGesture> y un <xref:System.Windows.Input.KeyBinding> a no válido asociado gesto, ya sea a través [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] o código.</span><span class="sxs-lookup"><span data-stu-id="1b688-108">It is possible to specify an invalid <xref:System.Windows.Input.KeyGesture> and a <xref:System.Windows.Input.KeyBinding> with an invalid associated gesture, either through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or code.</span></span> <span data-ttu-id="1b688-109">Por ejemplo, no hay ninguna validación que impida la creación y enlace un <xref:System.Windows.Input.KeyGesture> que contiene sólo una tecla sin función, o sólo los modificadores pero ninguna clave.</span><span class="sxs-lookup"><span data-stu-id="1b688-109">For instance, there is no validation that prevents creating and binding a <xref:System.Windows.Input.KeyGesture> that contains only a nonfunction key, or only modifiers but no key.</span></span> <span data-ttu-id="1b688-110">Este tipo una <xref:System.Windows.Input.KeyBinding> nunca intentará invocar su comando asociado.</span><span class="sxs-lookup"><span data-stu-id="1b688-110">Such a <xref:System.Windows.Input.KeyBinding> will never attempt to invoke its associated command.</span></span>  
  
 <span data-ttu-id="1b688-111">Al definir un <xref:System.Windows.Input.KeyBinding> en [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] hay dos maneras de especificar el <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="1b688-111">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="1b688-112">La primera manera para establecer un <xref:System.Windows.Input.KeyBinding> en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] consiste en definir el <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributo de la <xref:System.Windows.Input.KeyBinding> elemento, lo que permite una sintaxis especificar las claves y los modificadores como una sola cadena, por ejemplo "CTRL + P".</span><span class="sxs-lookup"><span data-stu-id="1b688-112">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="1b688-113">La segunda manera consiste en definir el <xref:System.Windows.Input.KeyBinding.Key%2A> atributo y el <xref:System.Windows.Input.KeyBinding.Modifiers%2A> los atributos de la <xref:System.Windows.Input.KeyBinding> elemento.</span><span class="sxs-lookup"><span data-stu-id="1b688-113">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="1b688-114">Ambas formas de configuración de la <xref:System.Windows.Input.KeyGesture> son equivalentes y modificar al mismo objeto subyacente, pero habrá un conflicto si ambos se usan.</span><span class="sxs-lookup"><span data-stu-id="1b688-114">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="1b688-115">En el caso cuando la <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>y el <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributos están establecidos, el atributo que se define por última vez se usará para el <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="1b688-115">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="1b688-116">Puede tener situaciones donde, por ejemplo un <xref:System.Windows.Input.KeyBinding.Key%2A> conjunto por última vez se sobrescriba el componente de clave de un gesto anterior pero dejar los modificadores de Gesture igual.</span><span class="sxs-lookup"><span data-stu-id="1b688-116">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="1b688-117">En general, se recomienda que use solo la <xref:System.Windows.Input.KeyBinding.Gesture%2A> de atributo de [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; esto evitar la ambigüedad, se proporciona la sintaxis más optimizada y proporciona la representación más sencilla para la serialización.</span><span class="sxs-lookup"><span data-stu-id="1b688-117">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 <span data-ttu-id="1b688-118">Un <xref:System.Windows.Input.KeyBinding> puede definirse en un objeto específico o en el nivel de clase registrando un <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> en el <xref:System.Windows.Input.CommandManager> clase.</span><span class="sxs-lookup"><span data-stu-id="1b688-118">A <xref:System.Windows.Input.KeyBinding> can be defined on a specific object or at the class level by registering a <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> on the <xref:System.Windows.Input.CommandManager> class.</span></span> <span data-ttu-id="1b688-119">La forma más habitual para definir un <xref:System.Windows.Input.KeyBinding> está dentro de la plantilla de control, estableciendo el <xref:System.Windows.UIElement.InputBindings%2A> propiedad [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] al declarar uno o varios <xref:System.Windows.Input.MouseBinding> o <xref:System.Windows.Input.KeyBinding> elementos.</span><span class="sxs-lookup"><span data-stu-id="1b688-119">The most typical way to define a <xref:System.Windows.Input.KeyBinding> is within the control template, setting the <xref:System.Windows.UIElement.InputBindings%2A> property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] by declaring one or more <xref:System.Windows.Input.MouseBinding> or <xref:System.Windows.Input.KeyBinding> elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b688-120">En el ejemplo siguiente se crea un <xref:System.Windows.Input.KeyBinding> y lo agrega a la <xref:System.Windows.Input.InputBindingCollection> de la ventana raíz.</span><span class="sxs-lookup"><span data-stu-id="1b688-120">The following example creates a <xref:System.Windows.Input.KeyBinding> and adds it to the <xref:System.Windows.Input.InputBindingCollection> of the root window.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1b688-121">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.KeyBinding" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-121">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b688-122">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.KeyBinding" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.KeyGesture -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="1b688-123">Comando asociado a <paramref name="gesture" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-123">The command to associate with <paramref name="gesture" />.</span></span></param>
        <param name="gesture"><span data-ttu-id="1b688-124">Combinación de teclas que debe asociarse a <paramref name="command" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-124">The key combination to associate with <paramref name="command" />.</span></span></param>
        <summary><span data-ttu-id="1b688-125">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.KeyBinding" /> utilizando los objetos <see cref="T:System.Windows.Input.ICommand" /> y <see cref="T:System.Windows.Input.KeyGesture" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="1b688-125">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b688-126"><paramref name="command" /> o <paramref name="gesture" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-126"><paramref name="command" /> or <paramref name="gesture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.Key * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, key, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="1b688-127">Comando al que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="1b688-127">The command to invoke.</span></span></param>
        <param name="key"><span data-ttu-id="1b688-128">Tecla que debe asociarse a <paramref name="command" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-128">The key to be associated with <paramref name="command" />.</span></span></param>
        <param name="modifiers"><span data-ttu-id="1b688-129">Modificadores que deben asociarse a <paramref name="command" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-129">The modifiers to be associated with <paramref name="command" />.</span></span></param>
        <summary><span data-ttu-id="1b688-130">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.KeyBinding" /> mediante el objeto <see cref="T:System.Windows.Input.ICommand" /> especificado y los objetos <see cref="T:System.Windows.Input.Key" /> y <see cref="T:System.Windows.Input.ModifierKeys" /> especificados, que se convertirán en un <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-130">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" /> which will be converted into a <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="keyBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b688-131">Crea una instancia de <see cref="T:System.Windows.Input.KeyBinding" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-131">Creates an instance of a <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <returns><span data-ttu-id="1b688-132">El objeto nuevo.</span><span class="sxs-lookup"><span data-stu-id="1b688-132">The new object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.KeyBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b688-133">Obtiene o establece el gesto asociado a este <see cref="T:System.Windows.Input.KeyBinding" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-133">Gets or sets the gesture associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <value><span data-ttu-id="1b688-134">Secuencia de teclas.</span><span class="sxs-lookup"><span data-stu-id="1b688-134">The key sequence.</span></span> <span data-ttu-id="1b688-135">El valor predeterminado es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-135">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b688-136">A excepción de las teclas de función y las teclas del teclado numérico, un <xref:System.Windows.Input.KeyGesture> debe contener un <xref:System.Windows.Input.Key> y uno o varios <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="1b688-136">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b688-137">El ejemplo siguiente muestra cómo enlazar un <xref:System.Windows.Input.KeyGesture> a un <xref:System.Windows.Input.RoutedCommand> mediante un <xref:System.Windows.Input.KeyBinding> (los ejemplos de código y marcado especificar claves diferentes, pero en caso contrario, son equivalentes).</span><span class="sxs-lookup"><span data-stu-id="1b688-137">The following example shows how to bind a <xref:System.Windows.Input.KeyGesture> to a <xref:System.Windows.Input.RoutedCommand> using a <xref:System.Windows.Input.KeyBinding> (the markup and code examples specify different keys but are otherwise equivalent).</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1b688-138">El valor <paramref name="gesture" /> que se está estableciendo no es <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-138">the value <paramref name="gesture" /> is being set to is not a <see cref="T:System.Windows.Input.KeyGesture" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Windows.Input.Key with get, set" Usage="System.Windows.Input.KeyBinding.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b688-139">Obtiene o establece el objeto <see cref="T:System.Windows.Input.Key" /> del <see cref="T:System.Windows.Input.KeyGesture" /> asociado a este <see cref="T:System.Windows.Input.KeyBinding" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-139">Gets or sets the <see cref="T:System.Windows.Input.Key" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <value><span data-ttu-id="1b688-140">Parte correspondiente a la tecla de <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-140">The key part of the <see cref="T:System.Windows.Input.KeyGesture" />.</span></span> <span data-ttu-id="1b688-141">El valor predeterminado es <see cref="F:System.Windows.Input.Key.None" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-141">The default value is <see cref="F:System.Windows.Input.Key.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b688-142">A excepción de las teclas de función y las teclas del teclado numérico, un <xref:System.Windows.Input.KeyGesture> debe contener un <xref:System.Windows.Input.Key> y uno o varios <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="1b688-142">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="1b688-143">Al definir un <xref:System.Windows.Input.KeyBinding> en [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] hay dos maneras de especificar el <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="1b688-143">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="1b688-144">La primera manera para establecer un <xref:System.Windows.Input.KeyBinding> en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] consiste en definir el <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributo de la <xref:System.Windows.Input.KeyBinding> elemento, lo que permite una sintaxis especificar las claves y los modificadores como una sola cadena, por ejemplo "CTRL + P".</span><span class="sxs-lookup"><span data-stu-id="1b688-144">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="1b688-145">La segunda manera consiste en definir el <xref:System.Windows.Input.KeyBinding.Key%2A> atributo y el <xref:System.Windows.Input.KeyBinding.Modifiers%2A> los atributos de la <xref:System.Windows.Input.KeyBinding> elemento.</span><span class="sxs-lookup"><span data-stu-id="1b688-145">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="1b688-146">Ambas formas de configuración de la <xref:System.Windows.Input.KeyGesture> son equivalentes y modificar al mismo objeto subyacente, pero habrá un conflicto si ambos se usan.</span><span class="sxs-lookup"><span data-stu-id="1b688-146">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="1b688-147">En el caso cuando la <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>y el <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributos están establecidos, el atributo que se define por última vez se usará para el <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="1b688-147">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="1b688-148">Puede tener situaciones donde, por ejemplo un <xref:System.Windows.Input.KeyBinding.Key%2A> conjunto por última vez se sobrescriba el componente de clave de un gesto anterior pero dejar los modificadores de Gesture igual.</span><span class="sxs-lookup"><span data-stu-id="1b688-148">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="1b688-149">En general, se recomienda que use solo la <xref:System.Windows.Input.KeyBinding.Gesture%2A> de atributo de [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; esto evitar la ambigüedad, se proporciona la sintaxis más optimizada y proporciona la representación más sencilla para la serialización.</span><span class="sxs-lookup"><span data-stu-id="1b688-149">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b688-150">Identifica la propiedad de dependencia <see cref="P:System.Windows.Input.KeyBinding.Key" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-150">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Key" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys with get, set" Usage="System.Windows.Input.KeyBinding.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b688-151">Obtiene o establece el objeto <see cref="T:System.Windows.Input.ModifierKeys" /> del <see cref="T:System.Windows.Input.KeyGesture" /> asociado a este <see cref="T:System.Windows.Input.KeyBinding" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-151">Gets or sets the <see cref="T:System.Windows.Input.ModifierKeys" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span></span></summary>
        <value><span data-ttu-id="1b688-152">Teclas modificadores del <see cref="T:System.Windows.Input.KeyGesture" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-152">The modifier keys of the <see cref="T:System.Windows.Input.KeyGesture" />.</span></span>  <span data-ttu-id="1b688-153">El valor predeterminado es <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-153">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b688-154">A excepción de las teclas de función y las teclas del teclado numérico, un <xref:System.Windows.Input.KeyGesture> debe contener un <xref:System.Windows.Input.Key> y uno o varios <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="1b688-154">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="1b688-155">Al definir un <xref:System.Windows.Input.KeyBinding> en [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] hay dos maneras de especificar el <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="1b688-155">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="1b688-156">La primera manera para establecer un <xref:System.Windows.Input.KeyBinding> en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] consiste en definir el <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributo de la <xref:System.Windows.Input.KeyBinding> elemento, lo que permite una sintaxis especificar las claves y los modificadores como una sola cadena, por ejemplo "CTRL + P".</span><span class="sxs-lookup"><span data-stu-id="1b688-156">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="1b688-157">La segunda manera consiste en definir el <xref:System.Windows.Input.KeyBinding.Key%2A> atributo y el <xref:System.Windows.Input.KeyBinding.Modifiers%2A> los atributos de la <xref:System.Windows.Input.KeyBinding> elemento.</span><span class="sxs-lookup"><span data-stu-id="1b688-157">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="1b688-158">Ambas formas de configuración de la <xref:System.Windows.Input.KeyGesture> son equivalentes y modificar al mismo objeto subyacente, pero habrá un conflicto si ambos se usan.</span><span class="sxs-lookup"><span data-stu-id="1b688-158">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="1b688-159">En el caso cuando la <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>y el <xref:System.Windows.Input.KeyBinding.Gesture%2A> atributos están establecidos, el atributo que se define por última vez se usará para el <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="1b688-159">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="1b688-160">Puede tener situaciones donde, por ejemplo un <xref:System.Windows.Input.KeyBinding.Key%2A> conjunto por última vez se sobrescriba el componente de clave de un gesto anterior pero dejar los modificadores de Gesture igual.</span><span class="sxs-lookup"><span data-stu-id="1b688-160">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="1b688-161">En general, se recomienda que use solo la <xref:System.Windows.Input.KeyBinding.Gesture%2A> de atributo de [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; esto evitar la ambigüedad, se proporciona la sintaxis más optimizada y proporciona la representación más sencilla para la serialización.</span><span class="sxs-lookup"><span data-stu-id="1b688-161">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1b688-162">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="1b688-162">XAML Attribute Usage</span></span>  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="1b688-163">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="1b688-163">XAML Values</span></span>  
 <span data-ttu-id="1b688-164">*oneOrMoreModifierKeys*</span><span class="sxs-lookup"><span data-stu-id="1b688-164">*oneOrMoreModifierKeys*</span></span>  
 <span data-ttu-id="1b688-165">Uno o más teclas modificadoras, definidas por el <xref:System.Windows.Input.ModifierKeys> enumeración, se delimitan con un carácter "+".</span><span class="sxs-lookup"><span data-stu-id="1b688-165">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ModifiersProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b688-166">Identifica la propiedad de dependencia <see cref="P:System.Windows.Input.KeyBinding.Modifiers" />.</span><span class="sxs-lookup"><span data-stu-id="1b688-166">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
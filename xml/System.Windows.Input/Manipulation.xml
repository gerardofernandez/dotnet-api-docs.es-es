<Type Name="Manipulation" FullName="System.Windows.Input.Manipulation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b954e71b70676f1896b67c7c57a8ba24221694c7" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55338245" /></Metadata><TypeSignature Language="C#" Value="public static class Manipulation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Manipulation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulation" />
  <TypeSignature Language="VB.NET" Value="Public Class Manipulation" />
  <TypeSignature Language="C++ CLI" Value="public ref class Manipulation abstract sealed" />
  <TypeSignature Language="F#" Value="type Manipulation = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="22da5-101">Contiene métodos para obtener y actualizar información sobre una manipulación.</span><span class="sxs-lookup"><span data-stu-id="22da5-101">Contains methods to get and update information about a manipulation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22da5-102">Una manipulación se produce cuando la función táctil se interpreta como una acción física que se aplica a un objeto.</span><span class="sxs-lookup"><span data-stu-id="22da5-102">A manipulation occurs when touch is interpreted as a physical action that is applied to an object.</span></span> <span data-ttu-id="22da5-103">En [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], los eventos de manipulación interpretan las entradas como una manipulación de traducción, expansión o rotación.</span><span class="sxs-lookup"><span data-stu-id="22da5-103">In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], manipulation events interpret input as a translation, expansion, or rotation manipulation.</span></span> <span data-ttu-id="22da5-104">Suele interactuar con las manipulaciones a través de los eventos de manipulación que se definen en el <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="22da5-104">You usually interact with manipulations through the manipulation events that are defined on the <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="22da5-105">Sin embargo, la <xref:System.Windows.Input.Manipulation> clase define los métodos estáticos que puede usar para interactuar con las manipulaciones.</span><span class="sxs-lookup"><span data-stu-id="22da5-105">However, the <xref:System.Windows.Input.Manipulation> class defines static methods that you can use to interact with manipulations.</span></span>  
  
 <span data-ttu-id="22da5-106">Para obtener más información acerca de las manipulaciones, vea [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="22da5-106">For more information about manipulations, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span> <span data-ttu-id="22da5-107">Para obtener un ejemplo de una aplicación que responde a manipulaciones, vea [Tutorial: Crear su primera aplicación táctil](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="22da5-107">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddManipulator">
      <MemberSignature Language="C#" Value="public static void AddManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddManipulator(class System.Windows.UIElement element, class System.Windows.Input.IManipulator manipulator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddManipulator (element As UIElement, manipulator As IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddManipulator(System::Windows::UIElement ^ element, System::Windows::Input::IManipulator ^ manipulator);" />
      <MemberSignature Language="F#" Value="static member AddManipulator : System.Windows.UIElement * System.Windows.Input.IManipulator -&gt; unit" Usage="System.Windows.Input.Manipulation.AddManipulator (element, manipulator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="manipulator" Type="System.Windows.Input.IManipulator" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="22da5-108">Elemento que se va a asociar al manipulador.</span><span class="sxs-lookup"><span data-stu-id="22da5-108">The element to associate the manipulator with.</span></span></param>
        <param name="manipulator"><span data-ttu-id="22da5-109">Objeto que proporciona la posición de la entrada que crea o se agrega a una manipulación.</span><span class="sxs-lookup"><span data-stu-id="22da5-109">The object that provides the position of the input that creates or is added to a manipulation.</span></span></param>
        <summary><span data-ttu-id="22da5-110">Asocia un objeto <see cref="T:System.Windows.Input.IManipulator" /> al elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="22da5-110">Associates a <see cref="T:System.Windows.Input.IManipulator" /> object with the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22da5-111">Si `element` ya tiene una manipulación asociada, `manipulator` se agrega a la manipulación existente.</span><span class="sxs-lookup"><span data-stu-id="22da5-111">If `element` already has a manipulation associated with it, `manipulator` is added to the existing manipulation.</span></span> <span data-ttu-id="22da5-112">En caso contrario, se crea una nueva manipulación.</span><span class="sxs-lookup"><span data-stu-id="22da5-112">Otherwise, a new manipulation is created.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22da5-113"><paramref name="element" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22da5-113"><paramref name="element" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="22da5-114">O bien</span><span class="sxs-lookup"><span data-stu-id="22da5-114">-or-</span></span> 
 <span data-ttu-id="22da5-115"><paramref name="manipulator" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="22da5-115"><paramref name="manipulator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="22da5-116">La propiedad <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> en el elemento es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="22da5-116">The <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> property on element is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompleteManipulation">
      <MemberSignature Language="C#" Value="public static void CompleteManipulation (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompleteManipulation(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.CompleteManipulation(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CompleteManipulation (element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CompleteManipulation(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member CompleteManipulation : System.Windows.UIElement -&gt; unit" Usage="System.Windows.Input.Manipulation.CompleteManipulation element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="22da5-117">Elemento en el que se va a completar la manipulación.</span><span class="sxs-lookup"><span data-stu-id="22da5-117">The element on which to complete manipulation.</span></span></param>
        <summary><span data-ttu-id="22da5-118">Completa la manipulación activa en el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="22da5-118">Completes the active manipulation on the specified element.</span></span> <span data-ttu-id="22da5-119">Cuando se llama, ya no se realiza seguimiento de la entrada de la manipulación y se detiene la inercia en el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="22da5-119">When called, manipulation input is no longer tracked and inertia on the specified element stops.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22da5-120">Cuando el <xref:System.Windows.Input.Manipulation.CompleteManipulation%2A> se invoca el <xref:System.Windows.UIElement.ManipulationCompleted> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="22da5-120">When the <xref:System.Windows.Input.Manipulation.CompleteManipulation%2A> method is called, the <xref:System.Windows.UIElement.ManipulationCompleted> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManipulationContainer">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetManipulationContainer (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetManipulationContainer(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.GetManipulationContainer(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManipulationContainer (element As UIElement) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetManipulationContainer(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetManipulationContainer : System.Windows.UIElement -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.Manipulation.GetManipulationContainer element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="22da5-121">Elemento en el que hay una manipulación activa.</span><span class="sxs-lookup"><span data-stu-id="22da5-121">The element on which there is an active manipulation.</span></span></param>
        <summary><span data-ttu-id="22da5-122">Obtiene el contenedor que define las coordenadas para la manipulación.</span><span class="sxs-lookup"><span data-stu-id="22da5-122">Gets the container that defines the coordinates for the manipulation.</span></span></summary>
        <returns><span data-ttu-id="22da5-123">Contenedor que define el espacio de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="22da5-123">The container that defines the coordinate space.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManipulationMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ManipulationModes GetManipulationMode (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.ManipulationModes GetManipulationMode(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.GetManipulationMode(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManipulationMode (element As UIElement) As ManipulationModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::ManipulationModes GetManipulationMode(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetManipulationMode : System.Windows.UIElement -&gt; System.Windows.Input.ManipulationModes" Usage="System.Windows.Input.Manipulation.GetManipulationMode element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationModes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="22da5-124">Elemento para el que se obtiene el modo de manipulación.</span><span class="sxs-lookup"><span data-stu-id="22da5-124">The element for which to get the manipulation mode.</span></span></param>
        <summary><span data-ttu-id="22da5-125">Obtiene el objeto <see cref="T:System.Windows.Input.ManipulationModes" /> del elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="22da5-125">Gets the <see cref="T:System.Windows.Input.ManipulationModes" /> for the specified element.</span></span></summary>
        <returns><span data-ttu-id="22da5-126">Uno de los valores de enumeración.</span><span class="sxs-lookup"><span data-stu-id="22da5-126">One of the enumeration values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManipulationPivot">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ManipulationPivot GetManipulationPivot (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Input.ManipulationPivot GetManipulationPivot(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.GetManipulationPivot(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManipulationPivot (element As UIElement) As ManipulationPivot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::ManipulationPivot ^ GetManipulationPivot(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetManipulationPivot : System.Windows.UIElement -&gt; System.Windows.Input.ManipulationPivot" Usage="System.Windows.Input.Manipulation.GetManipulationPivot element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationPivot</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="22da5-127">Elemento en el que hay una manipulación.</span><span class="sxs-lookup"><span data-stu-id="22da5-127">The element on which there is a manipulation.</span></span></param>
        <summary><span data-ttu-id="22da5-128">Devuelve un objeto que describe cómo se produce un giro con un punto de datos proporcionado por el usuario.</span><span class="sxs-lookup"><span data-stu-id="22da5-128">Returns an object that describes how a rotation occurs with one point of user input.</span></span></summary>
        <returns><span data-ttu-id="22da5-129">Un objeto que describe cómo un giro se produce con un punto de datos proporcionado por el usuario.</span><span class="sxs-lookup"><span data-stu-id="22da5-129">An object that describes how a rotation occurs with one point of user input.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationActive">
      <MemberSignature Language="C#" Value="public static bool IsManipulationActive (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsManipulationActive(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.IsManipulationActive(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsManipulationActive (element As UIElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsManipulationActive(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member IsManipulationActive : System.Windows.UIElement -&gt; bool" Usage="System.Windows.Input.Manipulation.IsManipulationActive element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="22da5-130">Elemento que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="22da5-130">The element to check.</span></span></param>
        <summary><span data-ttu-id="22da5-131">Obtiene un valor que indica si hay una manipulación asociada al elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="22da5-131">Gets a value that indicates whether a manipulation is associated with the specified element.</span></span></summary>
        <returns><span data-ttu-id="22da5-132">Es <see langword="true" /> si una manipulación está asociada al elemento especificado; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="22da5-132"><see langword="true" /> if a manipulation is associated with the specified element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveManipulator">
      <MemberSignature Language="C#" Value="public static void RemoveManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveManipulator(class System.Windows.UIElement element, class System.Windows.Input.IManipulator manipulator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveManipulator (element As UIElement, manipulator As IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveManipulator(System::Windows::UIElement ^ element, System::Windows::Input::IManipulator ^ manipulator);" />
      <MemberSignature Language="F#" Value="static member RemoveManipulator : System.Windows.UIElement * System.Windows.Input.IManipulator -&gt; unit" Usage="System.Windows.Input.Manipulation.RemoveManipulator (element, manipulator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="manipulator" Type="System.Windows.Input.IManipulator" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="22da5-133">El elemento del que quitar el manipulador asociado.</span><span class="sxs-lookup"><span data-stu-id="22da5-133">The element to remove the associated manipulator from.</span></span></param>
        <param name="manipulator"><span data-ttu-id="22da5-134">Objeto que proporciona la posición de la entrada.</span><span class="sxs-lookup"><span data-stu-id="22da5-134">The object that provides the position of the input.</span></span></param>
        <summary><span data-ttu-id="22da5-135">Quita la asociación entre el objeto <see cref="T:System.Windows.Input.IManipulator" /> especificado y el elemento.</span><span class="sxs-lookup"><span data-stu-id="22da5-135">Removes the association between the specified <see cref="T:System.Windows.Input.IManipulator" /> object and the element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationContainer">
      <MemberSignature Language="C#" Value="public static void SetManipulationContainer (System.Windows.UIElement element, System.Windows.IInputElement container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationContainer(class System.Windows.UIElement element, class System.Windows.IInputElement container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationContainer (element As UIElement, container As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationContainer(System::Windows::UIElement ^ element, System::Windows::IInputElement ^ container);" />
      <MemberSignature Language="F#" Value="static member SetManipulationContainer : System.Windows.UIElement * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.Manipulation.SetManipulationContainer (element, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="container" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="22da5-136">Elemento al que está asociada la manipulación.</span><span class="sxs-lookup"><span data-stu-id="22da5-136">The element with which the manipulation is associated.</span></span></param>
        <param name="container"><span data-ttu-id="22da5-137">Contenedor que define el espacio de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="22da5-137">The container that defines the coordinate space.</span></span></param>
        <summary><span data-ttu-id="22da5-138">Establece el elemento que define las coordenadas para la manipulación del elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="22da5-138">Sets the element that defines the coordinates for the manipulation of the specified element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationMode">
      <MemberSignature Language="C#" Value="public static void SetManipulationMode (System.Windows.UIElement element, System.Windows.Input.ManipulationModes mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationMode(class System.Windows.UIElement element, valuetype System.Windows.Input.ManipulationModes mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationMode (element As UIElement, mode As ManipulationModes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationMode(System::Windows::UIElement ^ element, System::Windows::Input::ManipulationModes mode);" />
      <MemberSignature Language="F#" Value="static member SetManipulationMode : System.Windows.UIElement * System.Windows.Input.ManipulationModes -&gt; unit" Usage="System.Windows.Input.Manipulation.SetManipulationMode (element, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="mode" Type="System.Windows.Input.ManipulationModes" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="22da5-139">Elemento en el que se establece el modo de manipulación.</span><span class="sxs-lookup"><span data-stu-id="22da5-139">The element on which to set the manipulation mode.</span></span></param>
        <param name="mode"><span data-ttu-id="22da5-140">Nuevo modo de manipulación.</span><span class="sxs-lookup"><span data-stu-id="22da5-140">The new manipulation mode.</span></span></param>
        <summary><span data-ttu-id="22da5-141">Establece el modo de manipulación para el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="22da5-141">Sets the mode of manipulation for the specified element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationParameter">
      <MemberSignature Language="C#" Value="public static void SetManipulationParameter (System.Windows.UIElement element, System.Windows.Input.Manipulations.ManipulationParameters2D parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationParameter(class System.Windows.UIElement element, class System.Windows.Input.Manipulations.ManipulationParameters2D parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationParameter (element As UIElement, parameter As ManipulationParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationParameter(System::Windows::UIElement ^ element, System::Windows::Input::Manipulations::ManipulationParameters2D ^ parameter);" />
      <MemberSignature Language="F#" Value="static member SetManipulationParameter : System.Windows.UIElement * System.Windows.Input.Manipulations.ManipulationParameters2D -&gt; unit" Usage="System.Windows.Input.Manipulation.SetManipulationParameter (element, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="parameter" Type="System.Windows.Input.Manipulations.ManipulationParameters2D" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="22da5-142">Elemento que tiene la manipulación a la que se agrega el parámetro.</span><span class="sxs-lookup"><span data-stu-id="22da5-142">The element that has the manipulation that the parameter is added to.</span></span></param>
        <param name="parameter"><span data-ttu-id="22da5-143">Parámetro que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="22da5-143">The parameter to add.</span></span></param>
        <summary><span data-ttu-id="22da5-144">Agrega parámetros a la manipulación del elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="22da5-144">Adds parameters to the manipulation of the specified element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManipulationPivot">
      <MemberSignature Language="C#" Value="public static void SetManipulationPivot (System.Windows.UIElement element, System.Windows.Input.ManipulationPivot pivot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetManipulationPivot(class System.Windows.UIElement element, class System.Windows.Input.ManipulationPivot pivot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetManipulationPivot (element As UIElement, pivot As ManipulationPivot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetManipulationPivot(System::Windows::UIElement ^ element, System::Windows::Input::ManipulationPivot ^ pivot);" />
      <MemberSignature Language="F#" Value="static member SetManipulationPivot : System.Windows.UIElement * System.Windows.Input.ManipulationPivot -&gt; unit" Usage="System.Windows.Input.Manipulation.SetManipulationPivot (element, pivot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="pivot" Type="System.Windows.Input.ManipulationPivot" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="22da5-145">Elemento que tiene una manipulación activa.</span><span class="sxs-lookup"><span data-stu-id="22da5-145">The element that has an active manipulation.</span></span></param>
        <param name="pivot"><span data-ttu-id="22da5-146">Objeto que describe el pivote.</span><span class="sxs-lookup"><span data-stu-id="22da5-146">An object that describes the pivot.</span></span></param>
        <summary><span data-ttu-id="22da5-147">Establece el pivote de la manipulación de punto único del elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="22da5-147">Sets the pivot of the single-point manipulation of the specified element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartInertia">
      <MemberSignature Language="C#" Value="public static void StartInertia (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartInertia(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulation.StartInertia(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StartInertia (element As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StartInertia(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member StartInertia : System.Windows.UIElement -&gt; unit" Usage="System.Windows.Input.Manipulation.StartInertia element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="22da5-148">Elemento en el que va a comenzar la inercia.</span><span class="sxs-lookup"><span data-stu-id="22da5-148">The element on which to begin inertia.</span></span></param>
        <summary><span data-ttu-id="22da5-149">Detiene la manipulación y comienza la inercia en el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="22da5-149">Stops the manipulation and begins inertia on the specified element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="Keyboard" FullName="System.Windows.Input.Keyboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="356f7e803b1125d98ffef23c64cacd4661cc78a7" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48689141" /></Metadata><TypeSignature Language="C#" Value="public static class Keyboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Keyboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Keyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Keyboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Keyboard abstract sealed" />
  <TypeSignature Language="F#" Value="type Keyboard = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2a886-101">Representa el dispositivo de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-101">Represents the keyboard device.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-102">La <xref:System.Windows.Input.Keyboard> clase proporciona eventos relacionados con el teclado, métodos y propiedades que proporcionan información sobre el estado del teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-102">The <xref:System.Windows.Input.Keyboard> class provides keyboard-related events, methods, and properties that provide information regarding the state of the keyboard.</span></span>  
  
 <span data-ttu-id="2a886-103">Cada uno de los eventos que <xref:System.Windows.Input.Keyboard> define como un evento adjunto también se vuelve a exponer desde las clases de elementos base <xref:System.Windows.UIElement> y <xref:System.Windows.ContentElement> como un nuevo evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="2a886-103">Each of the events that <xref:System.Windows.Input.Keyboard> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event.</span></span> <span data-ttu-id="2a886-104">Por lo general, resulta más conveniente controlar los eventos de teclado para una aplicación en <xref:System.Windows.UIElement> y <xref:System.Windows.ContentElement>, en lugar de usar el <xref:System.Windows.Input.Keyboard> eventos.</span><span class="sxs-lookup"><span data-stu-id="2a886-104">Generally, it is more convenient to handle keyboard events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Keyboard> events.</span></span> <span data-ttu-id="2a886-105">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-105">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="2a886-106">En orden para un elemento que se va a recibir la entrada del teclado, el elemento debe poder recibir el foco.</span><span class="sxs-lookup"><span data-stu-id="2a886-106">In order for an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="2a886-107">La mayoría <xref:System.Windows.UIElement> objetos derivados son puede recibir el foco de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="2a886-107">Most <xref:System.Windows.UIElement> derived objects are focusable by default.</span></span> <span data-ttu-id="2a886-108">En caso contrario, para hacer que un elemento puede recibir el foco, establezca el <xref:System.Windows.UIElement.Focusable%2A> propiedad del elemento base a `true`.</span><span class="sxs-lookup"><span data-stu-id="2a886-108">Otherwise, to make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="2a886-109">Para obtener más información sobre los elementos base, vea [información general de los elementos Base](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-109">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 <span data-ttu-id="2a886-110"><xref:System.Windows.Controls.Panel> las clases, como <xref:System.Windows.Controls.StackPanel> y <xref:System.Windows.Controls.Canvas>, establezca el valor predeterminado de <xref:System.Windows.UIElement.Focusable%2A> a `false`.</span><span class="sxs-lookup"><span data-stu-id="2a886-110"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`.</span></span> <span data-ttu-id="2a886-111">Por lo tanto, para estos objetos obtener el foco de teclado, <xref:System.Windows.UIElement.Focusable%2A> debe establecerse en `true`.</span><span class="sxs-lookup"><span data-stu-id="2a886-111">Therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="2a886-112">El foco de teclado hace referencia al objeto que recibe la entrada de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-112">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="2a886-113">El elemento con foco de teclado tiene <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="2a886-113">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="2a886-114">Puede haber solo un elemento con foco de teclado en todo el escritorio.</span><span class="sxs-lookup"><span data-stu-id="2a886-114">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="2a886-115">Foco lógico hace referencia al objeto dentro de un ámbito de foco que tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="2a886-115">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="2a886-116">Para obtener más información sobre el foco, el foco de teclado y el foco lógico, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) y [foco lógico](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-116">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="2a886-117">Los miembros estáticos de la <xref:System.Windows.Input.Keyboard> delegado a la réplica principal de la clase <xref:System.Windows.Input.KeyboardDevice> del subproceso que realiza la llamada, por lo que no son necesariamente seguros para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="2a886-117">The static members of the <xref:System.Windows.Input.Keyboard> class delegate to the primary <xref:System.Windows.Input.KeyboardDevice> of the calling thread, so they are not necessarily thread-safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a886-118">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> método para determinar si una clave está en estado de alternancia.</span><span class="sxs-lookup"><span data-stu-id="2a886-118">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine if a key is in the toggled state.</span></span> <span data-ttu-id="2a886-119">Si el <xref:System.Windows.Input.Key> pasado a <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> es activar o desactivar, cambia el fondo de un botón.</span><span class="sxs-lookup"><span data-stu-id="2a886-119">If the <xref:System.Windows.Input.Key> passed to <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> is toggled, the background of a button is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
    <altmember cref="T:System.Windows.Input.KeyEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="AddGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-120">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-120">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-121">Controlador de eventos que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="2a886-121">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="2a886-122">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-122">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-123">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código y [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] procesamiento del atributo de la <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-123">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-124">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-124">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-125">Controlador de eventos que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="2a886-125">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="2a886-126">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-126">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-127">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código y [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] procesamiento del atributo de la <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-127">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-128">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-129">Controlador de eventos que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="2a886-129">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="2a886-130">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Keyboard.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-130">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-131">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código y [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] procesamiento del atributo de la <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-131">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-132">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-132">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-133">Controlador de eventos que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="2a886-133">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="2a886-134">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Keyboard.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-134">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-135">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código y [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] procesamiento del atributo de la <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-135">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-136">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-136">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-137">Controlador de eventos que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="2a886-137">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="2a886-138">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-138">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-139">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código y [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] procesamiento del atributo de la <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-139">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-140">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-141">Controlador de eventos que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="2a886-141">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="2a886-142">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-142">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-143">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código y [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] procesamiento del atributo de la <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-143">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-144">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-144">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-145">Controlador de eventos que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="2a886-145">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="2a886-146">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-146">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-147">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código y [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] procesamiento del atributo de la <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-147">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-148">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-148">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-149">Controlador de eventos que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="2a886-149">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="2a886-150">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-150">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-151">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código y [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] procesamiento del atributo de la <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-151">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-152">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-152">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-153">Controlador de eventos que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="2a886-153">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="2a886-154">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-154">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-155">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código y [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] procesamiento del atributo de la <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-155">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-156">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-156">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-157">Controlador de eventos que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="2a886-157">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="2a886-158">Agrega un controlador para el evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-158">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-159">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código y [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] procesamiento del atributo de la <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-159">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFocus">
      <MemberSignature Language="C#" Value="public static void ClearFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.ClearFocus" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearFocus();" />
      <MemberSignature Language="F#" Value="static member ClearFocus : unit -&gt; unit" Usage="System.Windows.Input.Keyboard.ClearFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a886-160">Borra el foco.</span><span class="sxs-lookup"><span data-stu-id="2a886-160">Clears focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-161">Si el foco está dentro de una ventana de Win32, WPF llama el <xref:System.Windows.Input.Keyboard.ClearFocus%2A> método en la restauración de foco cuando se cierra un menú.</span><span class="sxs-lookup"><span data-stu-id="2a886-161">If focus is within a Win32 window, WPF calls the <xref:System.Windows.Input.Keyboard.ClearFocus%2A> method on restoration of focus when a menu is closed.</span></span>  
  
 <span data-ttu-id="2a886-162">Al salir del modo de menú, el foco de Win32 se devuelve al HWND secundario hospedado y ningún elemento tiene el foco WPF.</span><span class="sxs-lookup"><span data-stu-id="2a886-162">When leaving menu mode, Win32 focus is returned to the hosted child HWND, and no element has WPF focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRestoreFocusMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultRestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RestoreFocusMode DefaultRestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); void set(System::Windows::Input::RestoreFocusMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultRestoreFocusMode : System.Windows.Input.RestoreFocusMode with get, set" Usage="System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a886-163">Obtiene o establece el comportamiento de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] cuando se restaura el foco.</span><span class="sxs-lookup"><span data-stu-id="2a886-163">Gets or sets the behavior of [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] when restoring focus.</span></span></summary>
        <value><span data-ttu-id="2a886-164">Valor de enumeración que especifica el comportamiento de [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] cuando se restaura el foco.</span><span class="sxs-lookup"><span data-stu-id="2a886-164">An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] when restoring focus.</span></span> <span data-ttu-id="2a886-165">El valor predeterminado en <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-165">The default in <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Focus (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement Focus(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Focus (element As IInputElement) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ Focus(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Focus : System.Windows.IInputElement -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.Focus element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-166">Elemento en el que se va a establecer el foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-166">The element on which to set keyboard focus.</span></span></param>
        <summary><span data-ttu-id="2a886-167">Establece el foco de teclado en el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="2a886-167">Sets keyboard focus on the specified element.</span></span></summary>
        <returns><span data-ttu-id="2a886-168">Elemento con foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-168">The element with keyboard focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-169">Para que un elemento recibir entradas de teclado, el elemento debe poder recibir el foco.</span><span class="sxs-lookup"><span data-stu-id="2a886-169">For an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="2a886-170">Para que un elemento puede recibir el foco, establezca el <xref:System.Windows.UIElement.Focusable%2A> propiedad del elemento base a `true`.</span><span class="sxs-lookup"><span data-stu-id="2a886-170">To make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="2a886-171">Para obtener más información sobre los elementos base, vea [información general de los elementos Base](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-171">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  <span data-ttu-id="2a886-172"><xref:System.Windows.Controls.Panel> las clases, como <xref:System.Windows.Controls.StackPanel> y <xref:System.Windows.Controls.Canvas>, establezca el valor predeterminado de <xref:System.Windows.UIElement.Focusable%2A> a `false`; por lo tanto, para estos objetos obtener el foco de teclado, <xref:System.Windows.UIElement.Focusable%2A> debe establecerse en `true`.</span><span class="sxs-lookup"><span data-stu-id="2a886-172"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`; therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="2a886-173">El foco de teclado hace referencia al objeto que recibe la entrada de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-173">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="2a886-174">El elemento con foco de teclado tiene <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="2a886-174">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="2a886-175">Puede haber solo un elemento con foco de teclado en todo el escritorio.</span><span class="sxs-lookup"><span data-stu-id="2a886-175">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="2a886-176">Foco lógico hace referencia al objeto dentro de un ámbito de foco que tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="2a886-176">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="2a886-177">Para obtener más información sobre el foco, el foco de teclado y el foco lógico, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) y [foco lógico](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-177">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="2a886-178">Un elemento con foco de teclado también tiene el foco lógico para el ámbito de foco al que pertenece el elemento.</span><span class="sxs-lookup"><span data-stu-id="2a886-178">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="2a886-179">Un elemento con foco lógico puede o no tenga el foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-179">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a886-180">El ejemplo siguiente se muestra un <xref:System.Windows.FrameworkElement.Loaded> controlador de eventos que establece el foco de teclado en un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="2a886-180">The following example shows a <xref:System.Windows.FrameworkElement.Loaded> event handler that sets keyboard focus on a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[focussample#FocusSampleSetFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplesetfocus)]
 [!code-vb[focussample#FocusSampleSetFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplesetfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FocusedElement As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ FocusedElement { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusedElement : System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.FocusedElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a886-181">Obtiene el elemento que tiene el foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-181">Gets the element that has keyboard focus.</span></span></summary>
        <value><span data-ttu-id="2a886-182">Elemento que tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="2a886-182">The focused element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-183">El foco de teclado hace referencia al objeto que recibe la entrada de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-183">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="2a886-184">El elemento con foco de teclado tiene <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="2a886-184">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="2a886-185">Puede haber solo un elemento con foco de teclado en todo el escritorio.</span><span class="sxs-lookup"><span data-stu-id="2a886-185">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="2a886-186">Foco lógico hace referencia al objeto dentro de un ámbito de foco que tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="2a886-186">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="2a886-187">Para obtener más información sobre el foco, el foco de teclado y el foco lógico, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) y [foco lógico](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-187">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="2a886-188">Un elemento con foco de teclado también tiene el foco lógico para el ámbito de foco al que pertenece el elemento.</span><span class="sxs-lookup"><span data-stu-id="2a886-188">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="2a886-189">Un elemento con foco lógico puede o no tenga el foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-189">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a886-190">El ejemplo siguiente se obtiene el elemento con foco de teclado y lo convierte a un <xref:System.Windows.Controls.Control>.</span><span class="sxs-lookup"><span data-stu-id="2a886-190">The following example gets the element with keyboard focus and casts it to a <xref:System.Windows.Controls.Control>.</span></span>  <span data-ttu-id="2a886-191">Si el elemento con foco de teclado es un <xref:System.Windows.Controls.Control>, cambia el fondo del elemento.</span><span class="sxs-lookup"><span data-stu-id="2a886-191">If the element with keyboard focus is a <xref:System.Windows.Controls.Control>, the background of the element is changed.</span></span>  
  
 [!code-csharp[focussample#GetKeyboardFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#getkeyboardfocusedelement)]
 [!code-vb[focussample#GetKeyboardFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#getkeyboardfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyStates">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyStates GetKeyStates (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.KeyStates GetKeyStates(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::KeyStates GetKeyStates(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member GetKeyStates : System.Windows.Input.Key -&gt; System.Windows.Input.KeyStates" Usage="System.Windows.Input.Keyboard.GetKeyStates key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2a886-192">Clave especificada.</span><span class="sxs-lookup"><span data-stu-id="2a886-192">The specified key.</span></span></param>
        <summary><span data-ttu-id="2a886-193">Obtiene el conjunto de estados de la tecla especificada.</span><span class="sxs-lookup"><span data-stu-id="2a886-193">Gets the set of key states for the specified key.</span></span></summary>
        <returns><span data-ttu-id="2a886-194">Combinación bit a bit de los valores de <see cref="T:System.Windows.Input.KeyStates" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-194">A bitwise combination of the <see cref="T:System.Windows.Input.KeyStates" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-195"><xref:System.Windows.Input.KeyStates> es un poco la enumeración de campos; por lo tanto, es posible que una clave para estar en varios Estados.</span><span class="sxs-lookup"><span data-stu-id="2a886-195"><xref:System.Windows.Input.KeyStates> is a bit field enumeration; therefore, it is possible for a key to be in multiple states.</span></span>  <span data-ttu-id="2a886-196">Por ejemplo, podría ser una clave en estado presionado, así como en el estado de alternancia.</span><span class="sxs-lookup"><span data-stu-id="2a886-196">For example, a key could be in the pressed state as well as in the toggled state.</span></span>  <span data-ttu-id="2a886-197">Utilice las operaciones de comparación de bit para determinar el estado exacto o la clave está en los Estados.</span><span class="sxs-lookup"><span data-stu-id="2a886-197">Use bit comparison operations to determine the exact state or states the key is in.</span></span>  
  
 <span data-ttu-id="2a886-198">La <xref:System.Windows.Input.Keyboard> clase proporciona una serie de métodos estáticos que también se puede usar para obtener información de estado de la clave.</span><span class="sxs-lookup"><span data-stu-id="2a886-198">The <xref:System.Windows.Input.Keyboard> class provides a number of static methods which can also be used to obtain key state information.</span></span>  <span data-ttu-id="2a886-199">Los métodos son: <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>, y <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.</span><span class="sxs-lookup"><span data-stu-id="2a886-199">The methods are: <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>, and <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a886-200">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> método para determinar si el <xref:System.Windows.Input.Key.Return> clave está en el <xref:System.Windows.Input.KeyStates.Down> estado.</span><span class="sxs-lookup"><span data-stu-id="2a886-200">The following example shows how to use the <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method to determine if the <xref:System.Windows.Input.Key.Return> key is in the <xref:System.Windows.Input.KeyStates.Down> state.</span></span>  <span data-ttu-id="2a886-201">Un poco y operación se usa para comparar la <xref:System.Windows.Input.KeyStates> devuelto desde <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> y <xref:System.Windows.Input.Key.Down> estado.</span><span class="sxs-lookup"><span data-stu-id="2a886-201">A bit AND operation is used to compare the <xref:System.Windows.Input.KeyStates> returned from <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> and the <xref:System.Windows.Input.Key.Down> state.</span></span> <span data-ttu-id="2a886-202">Si la tecla está presionada, el fondo de un <xref:System.Windows.Controls.Button> se cambia.</span><span class="sxs-lookup"><span data-stu-id="2a886-202">If the key is down, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardgetkeystates)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardgetkeystates)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.KeyStates" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" Usage="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a886-203">Se produce cuando un elemento recibe el foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-203">Occurs when an element receives keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-204">Se trata de un evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-204">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="2a886-205">implementa los eventos adjuntos como eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="2a886-205">implements attached events as routed events.</span></span> <span data-ttu-id="2a886-206">Los eventos adjuntos son fundamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concepto de lenguaje para hacer referencia a los eventos que pueden controlarse en objetos que no definen ese evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] amplía habilitando también el evento recorrer una ruta.</span><span class="sxs-lookup"><span data-stu-id="2a886-206">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="2a886-207">Los eventos adjuntos no tienen una sintaxis de control directo en el código. Para adjuntar controladores para un evento enrutado en el código, utilice Agregar designado \* método del controlador.</span><span class="sxs-lookup"><span data-stu-id="2a886-207">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="2a886-208">Para obtener más información, consulte [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-208">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="2a886-209">El foco de teclado hace referencia al objeto que recibe la entrada de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-209">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="2a886-210">El elemento con foco de teclado tiene <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="2a886-210">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="2a886-211">Puede haber solo un elemento con foco de teclado en todo el escritorio.</span><span class="sxs-lookup"><span data-stu-id="2a886-211">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="2a886-212">Foco lógico hace referencia al objeto dentro de un ámbito de foco que tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="2a886-212">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="2a886-213">Para obtener más información sobre el foco, el foco de teclado y el foco lógico, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) y [foco lógico](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-213">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="2a886-214">Si el <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> eventos o <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> controla el evento, cambie el foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-214">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does change.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocusEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="2a886-215">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="2a886-215">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2a886-216">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="2a886-216">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.GotKeyboardFocusEvent>|  
|<span data-ttu-id="2a886-217">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="2a886-217">Routing strategy</span></span>|<span data-ttu-id="2a886-218">Propagación</span><span class="sxs-lookup"><span data-stu-id="2a886-218">Bubbling</span></span>|  
|<span data-ttu-id="2a886-219">Delegado</span><span class="sxs-lookup"><span data-stu-id="2a886-219">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="2a886-220">El evento de tunelización correspondiente es <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="2a886-220">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a886-221">En el ejemplo siguiente se crea un <xref:System.Windows.Controls.TextBox> y adjunta los controladores de eventos para el <xref:System.Windows.UIElement.GotKeyboardFocus> eventos y el <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> eventos.</span><span class="sxs-lookup"><span data-stu-id="2a886-221">The following example creates a <xref:System.Windows.Controls.TextBox> and attaches event handlers for the <xref:System.Windows.UIElement.GotKeyboardFocus> event and the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> event.</span></span>  <span data-ttu-id="2a886-222">Cuando el <xref:System.Windows.Controls.TextBox> recibe el foco de teclado, se cambia el color de fondo y el texto de la <xref:System.Windows.Controls.TextBox> está desactivada.</span><span class="sxs-lookup"><span data-stu-id="2a886-222">When the <xref:System.Windows.Controls.TextBox> obtains keyboard focus, the background color is changed and the text of the <xref:System.Windows.Controls.TextBox> is cleared.</span></span>  <span data-ttu-id="2a886-223">Cuando el <xref:System.Windows.Controls.TextBlock> pierde el foco de teclado, se cambia el color de fondo y se llama a un método que restablece las variables utilizadas en el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="2a886-223">When the <xref:System.Windows.Controls.TextBlock> loses keyboard focus, the background color is changed and a method is called which resets variables used in the sample.</span></span>  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a886-224">Identifica el evento adjunto <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-224">Identifies the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-225">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="2a886-225">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="2a886-226">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-226">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="2a886-227">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="2a886-227">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyDown">
      <MemberSignature Language="C#" Value="public static bool IsKeyDown (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyDown(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyDown(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyDown : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyDown key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2a886-228">Clave especificada.</span><span class="sxs-lookup"><span data-stu-id="2a886-228">The specified key.</span></span></param>
        <summary><span data-ttu-id="2a886-229">Determina si está presionada la tecla especificada.</span><span class="sxs-lookup"><span data-stu-id="2a886-229">Determines whether the specified key is pressed.</span></span></summary>
        <returns><span data-ttu-id="2a886-230">Es <see langword="true" /> si <paramref name="key" /> está en estado presionado; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-230"><see langword="true" /> if <paramref name="key" /> is in the down state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-231">El <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> método puede utilizarse para determinar el conjunto de Estados de una clave específica.</span><span class="sxs-lookup"><span data-stu-id="2a886-231">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a886-232">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> método para determinar el estado de una clave específica.</span><span class="sxs-lookup"><span data-stu-id="2a886-232">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="2a886-233">El <xref:System.Windows.Input.Key.Return> clave se pasa a la <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2a886-233">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method.</span></span>  <span data-ttu-id="2a886-234">Si el método devuelve `true`, el fondo de un <xref:System.Windows.Controls.Button> se cambia.</span><span class="sxs-lookup"><span data-stu-id="2a886-234">If the method returns `true`, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeydown)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeydown)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsDown" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyToggled">
      <MemberSignature Language="C#" Value="public static bool IsKeyToggled (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyToggled(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyToggled(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyToggled : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyToggled key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2a886-235">Clave especificada.</span><span class="sxs-lookup"><span data-stu-id="2a886-235">The specified key.</span></span></param>
        <summary><span data-ttu-id="2a886-236">Determina la tecla especificada está en estado de alternancia.</span><span class="sxs-lookup"><span data-stu-id="2a886-236">Determines whether the specified key is toggled.</span></span></summary>
        <returns><span data-ttu-id="2a886-237">Es <see langword="true" /> si <paramref name="key" /> está en estado de alternancia; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-237"><see langword="true" /> if <paramref name="key" /> is in the toggled state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-238">El <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> método puede utilizarse para determinar el conjunto de Estados de una clave específica.</span><span class="sxs-lookup"><span data-stu-id="2a886-238">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a886-239">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> método para determinar el estado de una clave específica.</span><span class="sxs-lookup"><span data-stu-id="2a886-239">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine the state of a specific key.</span></span> <span data-ttu-id="2a886-240">El <xref:System.Windows.Input.Key.Return> clave se pasa a la <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2a886-240">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method.</span></span>  <span data-ttu-id="2a886-241">Si el método devuelve `true`, a continuación, el fondo de un <xref:System.Windows.Controls.Button> se cambia.</span><span class="sxs-lookup"><span data-stu-id="2a886-241">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsToggled" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyUp">
      <MemberSignature Language="C#" Value="public static bool IsKeyUp (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyUp(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyUp(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyUp : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyUp key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2a886-242">Tecla que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="2a886-242">The key to check.</span></span></param>
        <summary><span data-ttu-id="2a886-243">Determina si la tecla especificada está sin presionar.</span><span class="sxs-lookup"><span data-stu-id="2a886-243">Determines whether the specified key is released.</span></span></summary>
        <returns><span data-ttu-id="2a886-244">Es <see langword="true" /> si <paramref name="key" /> no está en estado presionado; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-244"><see langword="true" /> if <paramref name="key" /> is in the up state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-245">El <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> método puede utilizarse para determinar el conjunto de Estados de una clave específica.</span><span class="sxs-lookup"><span data-stu-id="2a886-245">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a886-246">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> método para determinar el estado de una clave específica.</span><span class="sxs-lookup"><span data-stu-id="2a886-246">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="2a886-247">El <xref:System.Windows.Input.Key.Return> clave se pasa a la <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2a886-247">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method.</span></span>  <span data-ttu-id="2a886-248">Si el método devuelve `true`, a continuación, el fondo de un <xref:System.Windows.Controls.Button> se cambia.</span><span class="sxs-lookup"><span data-stu-id="2a886-248">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeyup)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeyup)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" Usage="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a886-249">Se produce cuando el proveedor de la acción del teclado adquiere el foco.</span><span class="sxs-lookup"><span data-stu-id="2a886-249">Occurs when the keyboard input provider acquires focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-250">Se trata de un evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-250">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="2a886-251">implementa los eventos adjuntos como eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="2a886-251">implements attached events as routed events.</span></span> <span data-ttu-id="2a886-252">Los eventos adjuntos son fundamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concepto de lenguaje para hacer referencia a los eventos que pueden controlarse en objetos que no definen ese evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] amplía habilitando también el evento recorrer una ruta.</span><span class="sxs-lookup"><span data-stu-id="2a886-252">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="2a886-253">Los eventos adjuntos no tienen una sintaxis de control directo en el código. Para adjuntar controladores para un evento enrutado en el código, utilice Agregar designado \* método del controlador.</span><span class="sxs-lookup"><span data-stu-id="2a886-253">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="2a886-254">Para obtener más información, consulte [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-254">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="2a886-255">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="2a886-255">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2a886-256">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="2a886-256">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent>|  
|<span data-ttu-id="2a886-257">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="2a886-257">Routing strategy</span></span>|<span data-ttu-id="2a886-258">Propagación</span><span class="sxs-lookup"><span data-stu-id="2a886-258">Bubbling</span></span>|  
|<span data-ttu-id="2a886-259">Delegado</span><span class="sxs-lookup"><span data-stu-id="2a886-259">Delegate</span></span>|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   <span data-ttu-id="2a886-260">El evento de tunelización correspondiente es <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus>.</span><span class="sxs-lookup"><span data-stu-id="2a886-260">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a886-261">Identifica el evento adjunto <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-261">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-262">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="2a886-262">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="2a886-263">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-263">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="2a886-264">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="2a886-264">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" Usage="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a886-265">Se produce cuando se presiona una tecla en el teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-265">Occurs when a key on the keyboard is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-266">Se trata de un evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-266">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="2a886-267">implementa los eventos adjuntos como eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="2a886-267">implements attached events as routed events.</span></span> <span data-ttu-id="2a886-268">Los eventos adjuntos son fundamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concepto de lenguaje para hacer referencia a los eventos que pueden controlarse en objetos que no definen ese evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] amplía habilitando también el evento recorrer una ruta.</span><span class="sxs-lookup"><span data-stu-id="2a886-268">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="2a886-269">Los eventos adjuntos no tienen una sintaxis de control directo en el código. Para adjuntar controladores para un evento enrutado en el código, utilice Agregar designado \* método del controlador.</span><span class="sxs-lookup"><span data-stu-id="2a886-269">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="2a886-270">Para obtener más información, consulte [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-270">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="2a886-271">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="2a886-271">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2a886-272">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="2a886-272">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyDownEvent>|  
|<span data-ttu-id="2a886-273">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="2a886-273">Routing strategy</span></span>|<span data-ttu-id="2a886-274">Propagación</span><span class="sxs-lookup"><span data-stu-id="2a886-274">Bubbling</span></span>|  
|<span data-ttu-id="2a886-275">Delegado</span><span class="sxs-lookup"><span data-stu-id="2a886-275">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="2a886-276">El evento de tunelización correspondiente es <xref:System.Windows.Input.Keyboard.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="2a886-276">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyDown>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a886-277">En el ejemplo siguiente se crea <xref:System.Windows.Controls.TextBox> que asocia un controlador de eventos para el <xref:System.Windows.UIElement.KeyDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="2a886-277">The following example creates <xref:System.Windows.Controls.TextBox> that attaches an event handler for the <xref:System.Windows.UIElement.KeyDown> event.</span></span>  <span data-ttu-id="2a886-278">Cuando el <xref:System.Windows.Input.Key.Return> se presiona el evento controlador muestra el texto en el <xref:System.Windows.Controls.TextBox> en un <xref:System.Windows.Controls.TextBlock>.</span><span class="sxs-lookup"><span data-stu-id="2a886-278">When the <xref:System.Windows.Input.Key.Return> is pressed, the event handler displays the text in the <xref:System.Windows.Controls.TextBox> in a <xref:System.Windows.Controls.TextBlock>.</span></span>  
  
 [!code-xml[keydown#KeyDownUI](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml#keydownui)]  
  
 [!code-csharp[keydown#KeyDownSample](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml.cs#keydownsample)]
 [!code-vb[keydown#KeyDownSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyDown/VisualBasic/Window1.xaml.vb#keydownsample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a886-279">Identifica el evento adjunto <see cref="E:System.Windows.Input.Keyboard.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-279">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-280">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="2a886-280">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="2a886-281">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-281">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="2a886-282">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="2a886-282">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" Usage="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a886-283">Se produce cuando se suelta una tecla del teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-283">Occurs when a key on the keyboard is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-284">Se trata de un evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-284">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="2a886-285">implementa los eventos adjuntos como eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="2a886-285">implements attached events as routed events.</span></span> <span data-ttu-id="2a886-286">Los eventos adjuntos son fundamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concepto de lenguaje para hacer referencia a los eventos que pueden controlarse en objetos que no definen ese evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] amplía habilitando también el evento recorrer una ruta.</span><span class="sxs-lookup"><span data-stu-id="2a886-286">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="2a886-287">Los eventos adjuntos no tienen una sintaxis de control directo en el código. Para adjuntar controladores para un evento enrutado en el código, utilice Agregar designado \* método del controlador.</span><span class="sxs-lookup"><span data-stu-id="2a886-287">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="2a886-288">Para obtener más información, consulte [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-288">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="2a886-289">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="2a886-289">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2a886-290">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="2a886-290">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyUpEvent>|  
|<span data-ttu-id="2a886-291">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="2a886-291">Routing strategy</span></span>|<span data-ttu-id="2a886-292">Propagación</span><span class="sxs-lookup"><span data-stu-id="2a886-292">Bubbling</span></span>|  
|<span data-ttu-id="2a886-293">Delegado</span><span class="sxs-lookup"><span data-stu-id="2a886-293">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="2a886-294">El evento de tunelización correspondiente es <xref:System.Windows.Input.Keyboard.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="2a886-294">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyUp>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a886-295">Identifica el evento adjunto <see cref="E:System.Windows.Input.Keyboard.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-295">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-296">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="2a886-296">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="2a886-297">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-297">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="2a886-298">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="2a886-298">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" Usage="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a886-299">Se produce cuando un elemento pierde el foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-299">Occurs when an element loses keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-300">Se trata de un evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-300">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="2a886-301">implementa los eventos adjuntos como eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="2a886-301">implements attached events as routed events.</span></span> <span data-ttu-id="2a886-302">Los eventos adjuntos son fundamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concepto de lenguaje para hacer referencia a los eventos que pueden controlarse en objetos que no definen ese evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] amplía habilitando también el evento recorrer una ruta.</span><span class="sxs-lookup"><span data-stu-id="2a886-302">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="2a886-303">Los eventos adjuntos no tienen una sintaxis de control directo en el código. Para adjuntar controladores para un evento enrutado en el código, utilice Agregar designado \* método del controlador.</span><span class="sxs-lookup"><span data-stu-id="2a886-303">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="2a886-304">Para obtener más información, consulte [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-304">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="2a886-305">El foco de teclado hace referencia al objeto que recibe la entrada de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-305">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="2a886-306">El elemento con foco de teclado tiene <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="2a886-306">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="2a886-307">Puede haber solo un elemento con foco de teclado en todo el escritorio.</span><span class="sxs-lookup"><span data-stu-id="2a886-307">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="2a886-308">Foco lógico hace referencia al objeto dentro de un ámbito de foco que tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="2a886-308">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="2a886-309">Para obtener más información sobre el foco, el foco de teclado y el foco lógico, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) y [foco lógico](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-309">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="2a886-310">Si el <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> eventos o <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> controla el evento, no cambia el foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-310">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="2a886-311">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="2a886-311">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2a886-312">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="2a886-312">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.LostKeyboardFocusEvent>|  
|<span data-ttu-id="2a886-313">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="2a886-313">Routing strategy</span></span>|<span data-ttu-id="2a886-314">Propagación</span><span class="sxs-lookup"><span data-stu-id="2a886-314">Bubbling</span></span>|  
|<span data-ttu-id="2a886-315">Delegado</span><span class="sxs-lookup"><span data-stu-id="2a886-315">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="2a886-316">El evento de tunelización correspondiente es <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="2a886-316">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a886-317">En el ejemplo siguiente se crea un <xref:System.Windows.Controls.TextBox> y adjunta los controladores de eventos para el <xref:System.Windows.UIElement.GotKeyboardFocus> eventos y el <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> eventos.</span><span class="sxs-lookup"><span data-stu-id="2a886-317">The following example creates a <xref:System.Windows.Controls.TextBox> and attaches event handlers for the <xref:System.Windows.UIElement.GotKeyboardFocus> event and the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> event.</span></span>  <span data-ttu-id="2a886-318">Cuando el <xref:System.Windows.Controls.TextBox> recibe el foco de teclado, se cambia el color de fondo y el texto de la <xref:System.Windows.Controls.TextBox> está desactivada.</span><span class="sxs-lookup"><span data-stu-id="2a886-318">When the <xref:System.Windows.Controls.TextBox> obtains keyboard focus, the background color is changed and the text of the <xref:System.Windows.Controls.TextBox> is cleared.</span></span>  <span data-ttu-id="2a886-319">Cuando el <xref:System.Windows.Controls.TextBlock> pierde el foco de teclado, se cambia el color de fondo y se llama a un método que restablece las variables utilizadas en el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="2a886-319">When the <xref:System.Windows.Controls.TextBlock> loses keyboard focus, the background color is changed and a method is called that resets variables used in the sample.</span></span>  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a886-320">Identifica el evento adjunto <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-320">Identifies the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-321">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="2a886-321">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="2a886-322">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-322">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="2a886-323">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="2a886-323">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys" Usage="System.Windows.Input.Keyboard.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a886-324">Obtiene el conjunto de <see cref="T:System.Windows.Input.ModifierKeys" /> que se presionan actualmente.</span><span class="sxs-lookup"><span data-stu-id="2a886-324">Gets the set of <see cref="T:System.Windows.Input.ModifierKeys" /> that are currently pressed.</span></span></summary>
        <value><span data-ttu-id="2a886-325">Combinación bit a bit de los valores de <see cref="T:System.Windows.Input.ModifierKeys" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-325">A bitwise combination of the <see cref="T:System.Windows.Input.ModifierKeys" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-326"><xref:System.Windows.Input.ModifierKeys> es un poco la enumeración de campos, por lo que es posible que se presionaron al mismo tiempo varias teclas modificadoras.</span><span class="sxs-lookup"><span data-stu-id="2a886-326"><xref:System.Windows.Input.ModifierKeys> is a bit field enumeration, so it is possible for multiple modifier keys to be pressed at the same time.</span></span>  <span data-ttu-id="2a886-327">Operaciones de uso de bits para determinar el conjunto exacto de las teclas modificadoras presionado.</span><span class="sxs-lookup"><span data-stu-id="2a886-327">Use bit operations to determine the exact set of modifier keys pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a886-328">En el ejemplo siguiente se usa un poco y comparación para determinar si el <xref:System.Windows.Input.ModifierKeys.Control> tecla modificadora se presionó.</span><span class="sxs-lookup"><span data-stu-id="2a886-328">The following example uses a bit AND comparison to determine if the <xref:System.Windows.Input.ModifierKeys.Control> modifier key is pressed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyboardmodifiersbitoperation)]
 [!code-vb[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyboardmodifiersbitoperation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" Usage="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a886-329">Se produce cuando un elemento está adquiriendo el foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-329">Occurs when an element is in the process of acquiring keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-330">Se trata de un evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-330">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="2a886-331">implementa los eventos adjuntos como eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="2a886-331">implements attached events as routed events.</span></span> <span data-ttu-id="2a886-332">Los eventos adjuntos son fundamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concepto de lenguaje para hacer referencia a los eventos que pueden controlarse en objetos que no definen ese evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] amplía habilitando también el evento recorrer una ruta.</span><span class="sxs-lookup"><span data-stu-id="2a886-332">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="2a886-333">Los eventos adjuntos no tienen una sintaxis de control directo en el código. Para adjuntar controladores para un evento enrutado en el código, utilice Agregar designado \* método del controlador.</span><span class="sxs-lookup"><span data-stu-id="2a886-333">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="2a886-334">Para obtener más información, consulte [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-334">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="2a886-335">Si el <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> eventos o <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> controla el evento, no cambia el foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-335">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
 <span data-ttu-id="2a886-336">El foco de teclado hace referencia al objeto que recibe la entrada de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-336">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="2a886-337">El elemento con foco de teclado tiene <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="2a886-337">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="2a886-338">Puede haber solo un elemento con foco de teclado en todo el escritorio.</span><span class="sxs-lookup"><span data-stu-id="2a886-338">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="2a886-339">Foco lógico hace referencia al objeto dentro de un ámbito de foco que tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="2a886-339">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="2a886-340">Para obtener más información sobre el foco, el foco de teclado y el foco lógico, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) y [foco lógico](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-340">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyborad"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="2a886-341">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="2a886-341">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2a886-342">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="2a886-342">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="2a886-343">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="2a886-343">Routing strategy</span></span>|<span data-ttu-id="2a886-344">Túnel</span><span class="sxs-lookup"><span data-stu-id="2a886-344">Tunneling</span></span>|  
|<span data-ttu-id="2a886-345">Delegado</span><span class="sxs-lookup"><span data-stu-id="2a886-345">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="2a886-346">El evento de propagación correspondiente es <xref:System.Windows.Input.Keyboard.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="2a886-346">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.GotKeyboardFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a886-347">Identifica el evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-347">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-348">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="2a886-348">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="2a886-349">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-349">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="2a886-350">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="2a886-350">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" Usage="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a886-351">Se produce cuando el proveedor de la acción del teclado está adquiriendo el foco.</span><span class="sxs-lookup"><span data-stu-id="2a886-351">Occurs when the keyboard input provider is in the process of acquiring focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-352">Se trata de un evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-352">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="2a886-353">implementa los eventos adjuntos como eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="2a886-353">implements attached events as routed events.</span></span> <span data-ttu-id="2a886-354">Los eventos adjuntos son fundamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concepto de lenguaje para hacer referencia a los eventos que pueden controlarse en objetos que no definen ese evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] amplía habilitando también el evento recorrer una ruta.</span><span class="sxs-lookup"><span data-stu-id="2a886-354">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="2a886-355">Los eventos adjuntos no tienen una sintaxis de control directo en el código. Para adjuntar controladores para un evento enrutado en el código, utilice Agregar designado \* método del controlador.</span><span class="sxs-lookup"><span data-stu-id="2a886-355">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="2a886-356">Para obtener más información, consulte [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-356">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="2a886-357">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="2a886-357">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2a886-358">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="2a886-358">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent>|  
|<span data-ttu-id="2a886-359">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="2a886-359">Routing strategy</span></span>|<span data-ttu-id="2a886-360">Túnel</span><span class="sxs-lookup"><span data-stu-id="2a886-360">Tunneling</span></span>|  
|<span data-ttu-id="2a886-361">Delegado</span><span class="sxs-lookup"><span data-stu-id="2a886-361">Delegate</span></span>|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   <span data-ttu-id="2a886-362">El evento de propagación correspondiente es <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus>.</span><span class="sxs-lookup"><span data-stu-id="2a886-362">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a886-363">Identifica el evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-363">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-364">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="2a886-364">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="2a886-365">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-365">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="2a886-366">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="2a886-366">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" Usage="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a886-367">Se produce cuando se presiona una tecla en el teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-367">Occurs when a key on the keyboard is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-368">Se trata de un evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-368">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="2a886-369">implementa los eventos adjuntos como eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="2a886-369">implements attached events as routed events.</span></span> <span data-ttu-id="2a886-370">Los eventos adjuntos son fundamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concepto de lenguaje para hacer referencia a los eventos que pueden controlarse en objetos que no definen ese evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] amplía habilitando también el evento recorrer una ruta.</span><span class="sxs-lookup"><span data-stu-id="2a886-370">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="2a886-371">Los eventos adjuntos no tienen una sintaxis de control directo en el código. Para adjuntar controladores para un evento enrutado en el código, utilice Agregar designado \* método del controlador.</span><span class="sxs-lookup"><span data-stu-id="2a886-371">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="2a886-372">Para obtener más información, consulte [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-372">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="2a886-373">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="2a886-373">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2a886-374">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="2a886-374">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyDownEvent>|  
|<span data-ttu-id="2a886-375">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="2a886-375">Routing strategy</span></span>|<span data-ttu-id="2a886-376">Túnel</span><span class="sxs-lookup"><span data-stu-id="2a886-376">Tunneling</span></span>|  
|<span data-ttu-id="2a886-377">Delegado</span><span class="sxs-lookup"><span data-stu-id="2a886-377">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="2a886-378">El evento de propagación correspondiente es <xref:System.Windows.Input.Keyboard.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="2a886-378">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a886-379">Identifica el evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-379">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-380">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="2a886-380">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="2a886-381">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-381">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="2a886-382">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="2a886-382">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" Usage="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a886-383">Se produce cuando se suelta una tecla del teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-383">Occurs when a key on the keyboard is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-384">Se trata de un evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-384">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="2a886-385">implementa los eventos adjuntos como eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="2a886-385">implements attached events as routed events.</span></span> <span data-ttu-id="2a886-386">Los eventos adjuntos son fundamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concepto de lenguaje para hacer referencia a los eventos que pueden controlarse en objetos que no definen ese evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] amplía habilitando también el evento recorrer una ruta.</span><span class="sxs-lookup"><span data-stu-id="2a886-386">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="2a886-387">Los eventos adjuntos no tienen una sintaxis de control directo en el código. Para adjuntar controladores para un evento enrutado en el código, utilice Agregar designado \* método del controlador.</span><span class="sxs-lookup"><span data-stu-id="2a886-387">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="2a886-388">Para obtener más información, consulte [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-388">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="2a886-389">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="2a886-389">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2a886-390">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="2a886-390">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyUpEvent>|  
|<span data-ttu-id="2a886-391">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="2a886-391">Routing strategy</span></span>|<span data-ttu-id="2a886-392">Túnel</span><span class="sxs-lookup"><span data-stu-id="2a886-392">Tunneling</span></span>|  
|<span data-ttu-id="2a886-393">Delegado</span><span class="sxs-lookup"><span data-stu-id="2a886-393">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="2a886-394">El evento de propagación correspondiente es <xref:System.Windows.Input.Keyboard.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="2a886-394">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a886-395">Identifica el evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-395">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-396">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="2a886-396">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="2a886-397">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-397">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="2a886-398">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="2a886-398">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" Usage="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a886-399">Se produce cuando un elemento está perdiendo el foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-399">Occurs when an element is in the process of losing keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-400">Se trata de un evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-400">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="2a886-401">implementa los eventos adjuntos como eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="2a886-401">implements attached events as routed events.</span></span> <span data-ttu-id="2a886-402">Los eventos adjuntos son fundamentalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concepto de lenguaje para hacer referencia a los eventos que pueden controlarse en objetos que no definen ese evento, que [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] amplía habilitando también el evento recorrer una ruta.</span><span class="sxs-lookup"><span data-stu-id="2a886-402">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="2a886-403">Los eventos adjuntos no tienen una sintaxis de control directo en el código. Para adjuntar controladores para un evento enrutado en el código, utilice Agregar designado \* método del controlador.</span><span class="sxs-lookup"><span data-stu-id="2a886-403">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="2a886-404">Para obtener más información, consulte [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-404">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="2a886-405">Si el <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> eventos o <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> controla el evento, no cambia el foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-405">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
 <span data-ttu-id="2a886-406">El foco de teclado hace referencia al objeto que recibe la entrada de teclado.</span><span class="sxs-lookup"><span data-stu-id="2a886-406">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="2a886-407">El elemento con foco de teclado tiene <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="2a886-407">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="2a886-408">Puede haber solo un elemento con foco de teclado en todo el escritorio.</span><span class="sxs-lookup"><span data-stu-id="2a886-408">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="2a886-409">Foco lógico hace referencia al objeto dentro de un ámbito de foco que tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="2a886-409">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="2a886-410">Para obtener más información sobre el foco, el foco de teclado y el foco lógico, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) y [foco lógico](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2a886-410">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="2a886-411">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="2a886-411">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2a886-412">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="2a886-412">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="2a886-413">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="2a886-413">Routing strategy</span></span>|<span data-ttu-id="2a886-414">Túnel</span><span class="sxs-lookup"><span data-stu-id="2a886-414">Tunneling</span></span>|  
|<span data-ttu-id="2a886-415">Delegado</span><span class="sxs-lookup"><span data-stu-id="2a886-415">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="2a886-416">El evento de propagación correspondiente es <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="2a886-416">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a886-417">Identifica el evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-417">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-418">Identificadores de eventos enrutados se crean cuando se registran eventos enrutados, y el resultado se almacena como un campo en la clase que registra el evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="2a886-418">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="2a886-419">Estos identificadores contienen un nombre de identificación, tipo de propietario, tipo de controlador, estrategia de enrutamiento y un método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-419">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="2a886-420">A menudo, estos identificadores se usar como parámetros a métodos de eventos del sistema, para identificar un evento enrutado concreto.</span><span class="sxs-lookup"><span data-stu-id="2a886-420">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyboardDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.KeyboardDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As KeyboardDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::KeyboardDevice ^ PrimaryDevice { System::Windows::Input::KeyboardDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryDevice : System.Windows.Input.KeyboardDevice" Usage="System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a886-421">Obtiene el dispositivo de entradas de teclado primario.</span><span class="sxs-lookup"><span data-stu-id="2a886-421">Gets the primary keyboard input device.</span></span></summary>
        <value><span data-ttu-id="2a886-422">Dispositivo.</span><span class="sxs-lookup"><span data-stu-id="2a886-422">The device.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-423">Esta propiedad admite la infraestructura de [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] y no se debe usar directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="2a886-423">This property supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyboardDevice" />
      </Docs>
    </Member>
    <Member MemberName="RemoveGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-424">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-424">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-425">Controlador de eventos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="2a886-425">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="2a886-426">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-426">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-427">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código a la <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-427">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-428">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-428">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-429">Controlador de eventos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="2a886-429">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="2a886-430">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-430">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-431">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código a la <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-431">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-432">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-432">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-433">Controlador de eventos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="2a886-433">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="2a886-434">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Keyboard.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-434">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-435">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código a la <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-435">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-436">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-436">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-437">Controlador de eventos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="2a886-437">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="2a886-438">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Keyboard.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-438">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-439">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código a la <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-439">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-440">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-440">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-441">Controlador de eventos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="2a886-441">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="2a886-442">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-442">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-443">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código a la <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-443">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-444">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-444">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-445">Controlador de eventos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="2a886-445">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="2a886-446">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-446">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-447">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código a la <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-447">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-448">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-448">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-449">Controlador de eventos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="2a886-449">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="2a886-450">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-450">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-451">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código a la <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-451">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-452">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-452">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-453">Controlador de eventos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="2a886-453">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="2a886-454">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-454">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-455">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código a la <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-455">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-456">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-456">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-457">Controlador de eventos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="2a886-457">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="2a886-458">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-458">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-459">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código a la <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-459">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2a886-460">Objeto <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" /> que escucha este evento.</span><span class="sxs-lookup"><span data-stu-id="2a886-460">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="2a886-461">Controlador de eventos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="2a886-461">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="2a886-462">Quita un controlador del evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2a886-462">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a886-463">Este método proporciona descriptores de acceso de propiedad adjunta para el acceso de código a la <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> evento adjunto.</span><span class="sxs-lookup"><span data-stu-id="2a886-463">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
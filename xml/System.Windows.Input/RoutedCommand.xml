<Type Name="RoutedCommand" FullName="System.Windows.Input.RoutedCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6cb4b0887eb9edb341d7337240bcb48e0f262dfe" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65015023" /></Metadata><TypeSignature Language="C#" Value="public class RoutedCommand : System.Windows.Input.ICommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoutedCommand extends System.Object implements class System.Windows.Input.ICommand" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.RoutedCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class RoutedCommand&#xA;Implements ICommand" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoutedCommand : System::Windows::Input::ICommand" />
  <TypeSignature Language="F#" Value="type RoutedCommand = class&#xA;    interface ICommand" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommand</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d544b-101">Define un comando que implementa <see cref="T:System.Windows.Input.ICommand" /> y se enruta a través del árbol de elementos.</span><span class="sxs-lookup"><span data-stu-id="d544b-101">Defines a command that implements <see cref="T:System.Windows.Input.ICommand" /> and is routed through the element tree.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d544b-102">El <xref:System.Windows.Input.RoutedCommand.Execute%2A> y <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> métodos en un <xref:System.Windows.Input.RoutedCommand> no contienen la lógica de aplicación para el comando como el caso de una típica <xref:System.Windows.Input.ICommand>, pero en su lugar, estos métodos generan eventos que recorren el árbol de elementos que busca un objeto con un <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="d544b-102">The <xref:System.Windows.Input.RoutedCommand.Execute%2A> and <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods on a <xref:System.Windows.Input.RoutedCommand> do not contain the application logic for the command as is the case with a typical <xref:System.Windows.Input.ICommand>, but rather, these methods raise events that traverse the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>.</span></span>  <span data-ttu-id="d544b-103">Los controladores de eventos asocian a la <xref:System.Windows.Input.CommandBinding> contienen la lógica de comando.</span><span class="sxs-lookup"><span data-stu-id="d544b-103">The event handlers attached to the <xref:System.Windows.Input.CommandBinding> contain the command logic.</span></span>  
  
 <span data-ttu-id="d544b-104">El <xref:System.Windows.Input.RoutedCommand.Execute%2A> método que provoca el <xref:System.Windows.Input.CommandManager.PreviewExecuted> y <xref:System.Windows.Input.CommandManager.Executed> eventos.</span><span class="sxs-lookup"><span data-stu-id="d544b-104">The <xref:System.Windows.Input.RoutedCommand.Execute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events.</span></span>  <span data-ttu-id="d544b-105">El <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> método que provoca el <xref:System.Windows.Input.CommandManager.PreviewCanExecute> y <xref:System.Windows.Input.CommandManager.CanExecute> eventos.</span><span class="sxs-lookup"><span data-stu-id="d544b-105">The <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events.</span></span>  
  
<a name="xamlAttributeUsage_RoutedCommand"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d544b-106">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d544b-106">XAML Attribute Usage</span></span>  
 <span data-ttu-id="d544b-107">\<*object* *property*="*predefinedCommandName*"/></span><span class="sxs-lookup"><span data-stu-id="d544b-107">\<*object* *property*="*predefinedCommandName*"/></span></span>  
  
<span data-ttu-id="d544b-108">-o bien-</span><span class="sxs-lookup"><span data-stu-id="d544b-108">-or-</span></span>
  
 <span data-ttu-id="d544b-109">\<*objeto* *propiedad*= "*predefinedClassName*. *predefinedCommandName*"/ ></span><span class="sxs-lookup"><span data-stu-id="d544b-109">\<*object* *property*="*predefinedClassName*.*predefinedCommandName*"/></span></span>  
  
<span data-ttu-id="d544b-110">-o bien-</span><span class="sxs-lookup"><span data-stu-id="d544b-110">-or-</span></span>
  
 <span data-ttu-id="d544b-111">\<*object* *property*="{ *customClassName*.*customCommandName*}"/></span><span class="sxs-lookup"><span data-stu-id="d544b-111">\<*object* *property*="{ *customClassName*.*customCommandName*}"/></span></span>  
  
<a name="xamlValues_RoutedCommand"></a>   
## <a name="xaml-values"></a><span data-ttu-id="d544b-112">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="d544b-112">XAML Values</span></span>  
 <span data-ttu-id="d544b-113">*predefinedClassName*</span><span class="sxs-lookup"><span data-stu-id="d544b-113">*predefinedClassName*</span></span>  
 <span data-ttu-id="d544b-114">Una de las clases de comandos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="d544b-114">One of the predefined command classes.</span></span>  
  
 <span data-ttu-id="d544b-115">*predefinedCommandName*</span><span class="sxs-lookup"><span data-stu-id="d544b-115">*predefinedCommandName*</span></span>  
 <span data-ttu-id="d544b-116">Uno de los comandos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="d544b-116">One of the predefined commands.</span></span>  
  
 <span data-ttu-id="d544b-117">*customClassName*</span><span class="sxs-lookup"><span data-stu-id="d544b-117">*customClassName*</span></span>  
 <span data-ttu-id="d544b-118">Una clase personalizada que contiene el comando personalizado.</span><span class="sxs-lookup"><span data-stu-id="d544b-118">A custom class which contains the custom command.</span></span> <span data-ttu-id="d544b-119">Las clases personalizadas requieren generalmente un `xlmns` prefijar la asignación; vea [los espacios de nombres XAML y la asignación de Namespace para WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="d544b-119">Custom classes generally require an `xlmns` prefix mapping; see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span></span>  
  
 <span data-ttu-id="d544b-120">*customCommandName*</span><span class="sxs-lookup"><span data-stu-id="d544b-120">*customCommandName*</span></span>  
 <span data-ttu-id="d544b-121">Un comando personalizado.</span><span class="sxs-lookup"><span data-stu-id="d544b-121">A custom command.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d544b-122">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.RoutedCommand" />.</span><span class="sxs-lookup"><span data-stu-id="d544b-122">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d544b-123">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.RoutedCommand" />.</span><span class="sxs-lookup"><span data-stu-id="d544b-123">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
        <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedCommand (string name, Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ownerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedCommand(System::String ^ name, Type ^ ownerType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.RoutedCommand : string * Type -&gt; System.Windows.Input.RoutedCommand" Usage="new System.Windows.Input.RoutedCommand (name, ownerType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d544b-124">Nombre declarado para la serialización.</span><span class="sxs-lookup"><span data-stu-id="d544b-124">Declared name for serialization.</span></span></param>
        <param name="ownerType"><span data-ttu-id="d544b-125">Tipo que registra el comando.</span><span class="sxs-lookup"><span data-stu-id="d544b-125">The type which is registering the command.</span></span></param>
        <summary><span data-ttu-id="d544b-126">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.RoutedCommand" /> con el nombre y el tipo de propietario especificados.</span><span class="sxs-lookup"><span data-stu-id="d544b-126">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class with the specified name and owner type.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d544b-127">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d544b-127"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d544b-128">El valor de <paramref name="ownerType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d544b-128"><paramref name="ownerType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
        <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedCommand (string name, Type ownerType, System.Windows.Input.InputGestureCollection inputGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type ownerType, class System.Windows.Input.InputGestureCollection inputGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.#ctor(System.String,System.Type,System.Windows.Input.InputGestureCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ownerType As Type, inputGestures As InputGestureCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedCommand(System::String ^ name, Type ^ ownerType, System::Windows::Input::InputGestureCollection ^ inputGestures);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.RoutedCommand : string * Type * System.Windows.Input.InputGestureCollection -&gt; System.Windows.Input.RoutedCommand" Usage="new System.Windows.Input.RoutedCommand (name, ownerType, inputGestures)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="inputGestures" Type="System.Windows.Input.InputGestureCollection" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d544b-129">Nombre declarado para la serialización.</span><span class="sxs-lookup"><span data-stu-id="d544b-129">Declared name for serialization.</span></span></param>
        <param name="ownerType"><span data-ttu-id="d544b-130">El tipo que registra el comando.</span><span class="sxs-lookup"><span data-stu-id="d544b-130">The type that is registering the command.</span></span></param>
        <param name="inputGestures"><span data-ttu-id="d544b-131">De forma predeterminada los gestos de entrada asociados a este comando.</span><span class="sxs-lookup"><span data-stu-id="d544b-131">Default input gestures associated with this command.</span></span></param>
        <summary><span data-ttu-id="d544b-132">Inicializa una nueva instancia de la <see cref="T:System.Windows.Input.RoutedCommand" /> clase con el nombre especificado, el tipo de propietario y la colección de gestos.</span><span class="sxs-lookup"><span data-stu-id="d544b-132">Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class with the specified name, owner type, and collection of gestures.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d544b-133">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d544b-133"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d544b-134">La longitud de <paramref name="name" /> es cero</span><span class="sxs-lookup"><span data-stu-id="d544b-134">the length of <paramref name="name" /> is zero</span></span> 
<span data-ttu-id="d544b-135">-o bien-</span><span class="sxs-lookup"><span data-stu-id="d544b-135">-or-</span></span> 
 <span data-ttu-id="d544b-136">El valor de <paramref name="ownerType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d544b-136"><paramref name="ownerType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
        <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public bool CanExecute (object parameter, System.Windows.IInputElement target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExecute(object parameter, class System.Windows.IInputElement target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExecute (parameter As Object, target As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExecute(System::Object ^ parameter, System::Windows::IInputElement ^ target);" />
      <MemberSignature Language="F#" Value="member this.CanExecute : obj * System.Windows.IInputElement -&gt; bool" Usage="routedCommand.CanExecute (parameter, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="target" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="d544b-137">Tipo de datos definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="d544b-137">A user defined data type.</span></span></param>
        <param name="target"><span data-ttu-id="d544b-138">El destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d544b-138">The command target.</span></span></param>
        <summary><span data-ttu-id="d544b-139">Determina si este <see cref="T:System.Windows.Input.RoutedCommand" /> puede ejecutarse en su estado actual.</span><span class="sxs-lookup"><span data-stu-id="d544b-139">Determines whether this <see cref="T:System.Windows.Input.RoutedCommand" /> can execute in its current state.</span></span></summary>
        <returns><span data-ttu-id="d544b-140"><see langword="true" /> Si el comando puede ejecutarse en el destino del comando actual; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d544b-140"><see langword="true" /> if the command can execute on the current command target; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d544b-141">La lógica real que determina si un <xref:System.Windows.Input.RoutedCommand> pueden ejecutar en la actual destino del comando no está contenida en el <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> métodos, en su lugar <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> provoca la <xref:System.Windows.Input.CommandManager.PreviewCanExecute> y el <xref:System.Windows.Input.CommandManager.CanExecute> eventos que tunelizar y propagan a través de elemento árbol en busca de un objeto con un <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="d544b-141">The actual logic that determines if a <xref:System.Windows.Input.RoutedCommand> can execute on the current command target is not contained in the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> methods, rather <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> raises the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and the <xref:System.Windows.Input.CommandManager.CanExecute> events which tunnel and bubble through element tree looking for a object with a <xref:System.Windows.Input.CommandBinding>.</span></span>  <span data-ttu-id="d544b-142">Si un <xref:System.Windows.Input.CommandBinding> para que <xref:System.Windows.Input.RoutedCommand> se encuentra, el <xref:System.Windows.Input.CanExecuteRoutedEventHandler> adjunta a <xref:System.Windows.Input.CommandBinding> se llama.</span><span class="sxs-lookup"><span data-stu-id="d544b-142">If a <xref:System.Windows.Input.CommandBinding> for that <xref:System.Windows.Input.RoutedCommand> is found, then the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> attached to <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="d544b-143">Estos controladores proporcionan la lógica de programación para determinar si el <xref:System.Windows.Input.RoutedCommand> pueden ejecutar o no.</span><span class="sxs-lookup"><span data-stu-id="d544b-143">These handlers supply the programming logic for determining if the <xref:System.Windows.Input.RoutedCommand> can execute or not.</span></span>  
  
 <span data-ttu-id="d544b-144">El <xref:System.Windows.Input.CommandManager.PreviewCanExecute> y <xref:System.Windows.Input.CommandManager.PreviewExecuted> eventos se generan en el <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>.</span><span class="sxs-lookup"><span data-stu-id="d544b-144">The <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.PreviewExecuted> events are raised on the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>.</span></span>  <span data-ttu-id="d544b-145">Si el <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> no está establecida en el <xref:System.Windows.Input.ICommandSource>, <xref:System.Windows.Input.CommandManager.PreviewCanExecute> y <xref:System.Windows.Input.CommandManager.CanExecute> se generan eventos en el elemento con foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="d544b-145">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> is not set on the <xref:System.Windows.Input.ICommandSource>, the <xref:System.Windows.Input.CommandManager.PreviewCanExecute> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised on the element with keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d544b-146">El ejemplo siguiente es un <xref:System.Windows.Input.ICommand.CanExecuteChanged> controlador de eventos de una implementación personalizada de <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="d544b-146">The following example is a <xref:System.Windows.Input.ICommand.CanExecuteChanged> event handler from a custom implementation of <xref:System.Windows.Input.ICommandSource>.</span></span>  
  
 <span data-ttu-id="d544b-147">`this.Command` en este ejemplo es el <xref:System.Windows.Input.ICommandSource.Command%2A> propiedad en el <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="d544b-147">`this.Command` in this example is the <xref:System.Windows.Input.ICommandSource.Command%2A> property on the <xref:System.Windows.Input.ICommandSource>.</span></span>  <span data-ttu-id="d544b-148">Si el comando no es `null`, el comando se convierte en un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="d544b-148">If the command is not `null`, the command is cast to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="d544b-149">Si el comando es un <xref:System.Windows.Input.RoutedCommand>, el <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> se llama al método pasando la <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> y <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="d544b-149">If the command is a <xref:System.Windows.Input.RoutedCommand>, then the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> and the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  <span data-ttu-id="d544b-150">Si el comando no es un <xref:System.Windows.Input.RoutedCommand>, se convierte en un <xref:System.Windows.Input.ICommand> y <xref:System.Windows.Input.ICommand.CanExecute%2A> se llama al método pasando la <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="d544b-150">If command is not a <xref:System.Windows.Input.RoutedCommand>, it is cast to an <xref:System.Windows.Input.ICommand> and the <xref:System.Windows.Input.ICommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  
  
 <span data-ttu-id="d544b-151">Si el <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> devuelve del método `true`, a continuación, el control está habilitado; en caso contrario, el control está deshabilitado.</span><span class="sxs-lookup"><span data-stu-id="d544b-151">If the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method returns `true`, then the control is enabled; otherwise, the control is disable.</span></span>  
  
 [!code-csharp[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/csharp/VS_Snippets_Wpf/ImplementICommandSource/CSharp/CommandSlider.cs#implementicommandcanexecutechanged)]
 [!code-vb[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImplementICommandSource/visualbasic/commandslider.vb#implementicommandcanexecutechanged)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d544b-152"><paramref name="target" /> no es un <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="d544b-152"><paramref name="target" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanExecuteChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanExecuteChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanExecuteChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.RoutedCommand.CanExecuteChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CanExecuteChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ CanExecuteChanged;" />
      <MemberSignature Language="F#" Value="member this.CanExecuteChanged : EventHandler " Usage="member this.CanExecuteChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.Input.ICommand.CanExecuteChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d544b-153">Se produce cuando se detectan cambios en el origen del comando mediante el Administrador de comandos.</span><span class="sxs-lookup"><span data-stu-id="d544b-153">Occurs when changes to the command source are detected by the command manager.</span></span> <span data-ttu-id="d544b-154">A menudo, estos cambios afectan a si el comando debe ejecutarse en el destino del comando actual.</span><span class="sxs-lookup"><span data-stu-id="d544b-154">These changes often affect whether the command should execute on the current command target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d544b-155">El <xref:System.Windows.Input.RoutedCommand> realiza escuchas para el <xref:System.Windows.Input.CommandManager.RequerySuggested> evento, que genera el <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="d544b-155">The <xref:System.Windows.Input.RoutedCommand> listens for the <xref:System.Windows.Input.CommandManager.RequerySuggested> event, which is raised by the <xref:System.Windows.Input.CommandManager>.</span></span> <span data-ttu-id="d544b-156">El <xref:System.Windows.Input.CommandManager.RequerySuggested> evento se desencadena cuando se cumplen las condiciones que pueden cambiar si el comando debe ejecutarse como un cambio en el foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="d544b-156">The <xref:System.Windows.Input.CommandManager.RequerySuggested> event is raised whenever conditions are met that may change the whether the command should execute, such as a change in keyboard focus.</span></span>  <span data-ttu-id="d544b-157">Cuando se recibe el comando el <xref:System.Windows.Input.CommandManager.RequerySuggested> event, genera el <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="d544b-157">When the command receives the <xref:System.Windows.Input.CommandManager.RequerySuggested> event, it raises the <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> event.</span></span>  <span data-ttu-id="d544b-158">Por lo general, el origen del comando escuchará este evento y consulta el <xref:System.Windows.Input.RoutedCommand> por medio de la <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d544b-158">Generally, the command source will listen for this event and query the <xref:System.Windows.Input.RoutedCommand> by way of the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method.</span></span>  <span data-ttu-id="d544b-159">La mayoría de los orígenes de comando se deshabilitará si no se puede ejecutar el comando, como parte de su enlace de comando a sí mismos.</span><span class="sxs-lookup"><span data-stu-id="d544b-159">Most command sources will disable themselves if the command cannot be executed, as part of their command binding.</span></span>  <span data-ttu-id="d544b-160">Un ejemplo de esto es cuando un <xref:System.Windows.Controls.MenuItem> se atenúa cuando no se puede ejecutar el comando.</span><span class="sxs-lookup"><span data-stu-id="d544b-160">An example of this is when a <xref:System.Windows.Controls.MenuItem> grays itself out when the command cannot be executed.</span></span>  
  
 <span data-ttu-id="d544b-161">En algunas situaciones, el <xref:System.Windows.Input.CommandManager> no es consciente de un cambio en las condiciones que modifican la capacidad de un comando para ejecutar.</span><span class="sxs-lookup"><span data-stu-id="d544b-161">In some situations, the <xref:System.Windows.Input.CommandManager> is unaware of a change in conditions that alters the ability of a command to execute.</span></span>  <span data-ttu-id="d544b-162">En estos casos, puede forzar la <xref:System.Windows.Input.CommandManager> que genera el <xref:System.Windows.Input.CommandManager.RequerySuggested> eventos mediante una llamada a la <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> método, esto hará que a su vez la <xref:System.Windows.Input.RoutedCommand> para generar el <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="d544b-162">In these cases, you can force the <xref:System.Windows.Input.CommandManager> to raises the <xref:System.Windows.Input.CommandManager.RequerySuggested> event by calling the <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method, this will in turn cause the <xref:System.Windows.Input.RoutedCommand> to raise the <xref:System.Windows.Input.RoutedCommand.CanExecuteChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d544b-163">El ejemplo siguiente es un <xref:System.Windows.Input.ICommand.CanExecuteChanged> controlador de eventos de una implementación personalizada de <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="d544b-163">The following example is a <xref:System.Windows.Input.ICommand.CanExecuteChanged> event handler from a custom implementation of <xref:System.Windows.Input.ICommandSource>.</span></span>  
  
 <span data-ttu-id="d544b-164">`this.Command` en este ejemplo es el <xref:System.Windows.Input.ICommandSource.Command%2A> propiedad en el <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="d544b-164">`this.Command` in this example is the <xref:System.Windows.Input.ICommandSource.Command%2A> property on the <xref:System.Windows.Input.ICommandSource>.</span></span>  <span data-ttu-id="d544b-165">Si el comando no es `null`, el comando se convierte en un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="d544b-165">If the command is not `null`, the command is cast to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="d544b-166">Si el comando es un <xref:System.Windows.Input.RoutedCommand>, el <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> se llama al método pasando la <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> y <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="d544b-166">If the command is a <xref:System.Windows.Input.RoutedCommand>, then the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> and the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  <span data-ttu-id="d544b-167">Si el comando no es un <xref:System.Windows.Input.RoutedCommand>, se convierte en un <xref:System.Windows.Input.ICommand> y <xref:System.Windows.Input.ICommand.CanExecute%2A> se llama al método pasando la <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="d544b-167">If command is not a <xref:System.Windows.Input.RoutedCommand>, it is cast to an <xref:System.Windows.Input.ICommand> and the <xref:System.Windows.Input.ICommand.CanExecute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  
  
 <span data-ttu-id="d544b-168">Si el <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> devuelve del método `true`, a continuación, el control está habilitado; en caso contrario, el control está deshabilitado.</span><span class="sxs-lookup"><span data-stu-id="d544b-168">If the <xref:System.Windows.Input.RoutedCommand.CanExecute%2A> method returns `true`, then the control is enabled; otherwise, the control is disabled.</span></span>  
  
 [!code-csharp[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/csharp/VS_Snippets_Wpf/ImplementICommandSource/CSharp/CommandSlider.cs#implementicommandcanexecutechanged)]
 [!code-vb[ImplementICommandSource#ImplementICommandCanExecuteChanged](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImplementICommandSource/visualbasic/commandslider.vb#implementicommandcanexecutechanged)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (object parameter, System.Windows.IInputElement target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(object parameter, class System.Windows.IInputElement target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (parameter As Object, target As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Object ^ parameter, System::Windows::IInputElement ^ target);" />
      <MemberSignature Language="F#" Value="member this.Execute : obj * System.Windows.IInputElement -&gt; unit" Usage="routedCommand.Execute (parameter, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="target" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="d544b-169">Parámetro que se pasará al controlador definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="d544b-169">User defined parameter to be passed to the handler.</span></span></param>
        <param name="target"><span data-ttu-id="d544b-170">Elemento al que se va a empezar a buscar controladores de comandos.</span><span class="sxs-lookup"><span data-stu-id="d544b-170">Element at which to begin looking for command handlers.</span></span></param>
        <summary><span data-ttu-id="d544b-171">Ejecuta el <see cref="T:System.Windows.Input.RoutedCommand" /> en el destino del comando actual.</span><span class="sxs-lookup"><span data-stu-id="d544b-171">Executes the <see cref="T:System.Windows.Input.RoutedCommand" /> on the current command target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d544b-172">La lógica real que se ejecuta el <xref:System.Windows.Input.RoutedCommand> no está contenida en el <xref:System.Windows.Input.RoutedCommand.Execute%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="d544b-172">The actual logic that executes the <xref:System.Windows.Input.RoutedCommand> is not contained in the <xref:System.Windows.Input.RoutedCommand.Execute%2A> methods.</span></span>  <span data-ttu-id="d544b-173"><xref:System.Windows.Input.RoutedCommand.Execute%2A> Provoca el <xref:System.Windows.Input.CommandManager.PreviewExecuted> y <xref:System.Windows.Input.CommandManager.Executed> eventos, que se tunelizan y propagan a través del elemento de árbol busca un objeto con un <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="d544b-173"><xref:System.Windows.Input.RoutedCommand.Execute%2A> raises the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events, which tunnel and bubble through the element tree looking for an object with a <xref:System.Windows.Input.CommandBinding>.</span></span>  <span data-ttu-id="d544b-174">Si un <xref:System.Windows.Input.CommandBinding> para que <xref:System.Windows.Input.RoutedCommand> se encuentra, el <xref:System.Windows.Input.ExecutedRoutedEventHandler> adjunta a <xref:System.Windows.Input.CommandBinding> se llama.</span><span class="sxs-lookup"><span data-stu-id="d544b-174">If a <xref:System.Windows.Input.CommandBinding> for that <xref:System.Windows.Input.RoutedCommand> is found, then the <xref:System.Windows.Input.ExecutedRoutedEventHandler> attached to <xref:System.Windows.Input.CommandBinding> is called.</span></span>  <span data-ttu-id="d544b-175">Estos controladores proporcionan la lógica de programación que realiza el <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="d544b-175">These handlers supply the programming logic that performs the <xref:System.Windows.Input.RoutedCommand>.</span></span>  
  
 <span data-ttu-id="d544b-176">El <xref:System.Windows.Input.CommandManager.PreviewExecuted> y <xref:System.Windows.Input.CommandManager.Executed> eventos se generan en el <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>.</span><span class="sxs-lookup"><span data-stu-id="d544b-176">The <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events are raised on the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A>.</span></span>  <span data-ttu-id="d544b-177">Si el <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> no está establecida en el <xref:System.Windows.Input.ICommandSource>, <xref:System.Windows.Input.CommandManager.PreviewExecuted> y <xref:System.Windows.Input.CommandManager.Executed> se generan eventos en el elemento con foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="d544b-177">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> is not set on the <xref:System.Windows.Input.ICommandSource>, the <xref:System.Windows.Input.CommandManager.PreviewExecuted> and <xref:System.Windows.Input.CommandManager.Executed> events are raised on the element with keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d544b-178">En el siguiente ejemplo proviene de una implementación personalizada de <xref:System.Windows.Input.ICommandSource> ejemplo.</span><span class="sxs-lookup"><span data-stu-id="d544b-178">The following example is from a custom implementation of <xref:System.Windows.Input.ICommandSource> sample.</span></span>  
  
 <span data-ttu-id="d544b-179">`this.Command` en este ejemplo es la propiedad Command en la <xref:System.Windows.Input.ICommandSource>.</span><span class="sxs-lookup"><span data-stu-id="d544b-179">`this.Command` in this example is the Command property on the <xref:System.Windows.Input.ICommandSource>.</span></span>  <span data-ttu-id="d544b-180">Si el comando no es null, el comando se convierte en un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="d544b-180">If the command is not null, the command is cast to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="d544b-181">Si es un <xref:System.Windows.Input.RoutedCommand>, el <xref:System.Windows.Input.RoutedCommand.Execute%2A> se llama al método pasando la <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> y <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="d544b-181">If it is a <xref:System.Windows.Input.RoutedCommand>, then the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> and the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  <span data-ttu-id="d544b-182">Si el comando no es un <xref:System.Windows.Input.RoutedCommand>, se convierte en un <xref:System.Windows.Input.ICommand> y <xref:System.Windows.Input.ICommand.Execute%2A> se llama al método pasando la <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="d544b-182">If the command is not a <xref:System.Windows.Input.RoutedCommand>, it is cast to an <xref:System.Windows.Input.ICommand> and the <xref:System.Windows.Input.ICommand.Execute%2A> method is called passing the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A>.</span></span>  
  
 [!code-csharp[ImplementICommandSource#ImplementICommandExecute](~/samples/snippets/csharp/VS_Snippets_Wpf/ImplementICommandSource/CSharp/CommandSlider.cs#implementicommandexecute)]
 [!code-vb[ImplementICommandSource#ImplementICommandExecute](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImplementICommandSource/visualbasic/commandslider.vb#implementicommandexecute)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d544b-183"><paramref name="target" /> no es un <see cref="T:System.Windows.UIElement" /> o <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="d544b-183"><paramref name="target" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InputGestures">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputGestureCollection InputGestures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGestureCollection InputGestures" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.RoutedCommand.InputGestures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputGestures As InputGestureCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputGestureCollection ^ InputGestures { System::Windows::Input::InputGestureCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputGestures : System.Windows.Input.InputGestureCollection" Usage="System.Windows.Input.RoutedCommand.InputGestures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGestureCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d544b-184">Obtiene la colección de <see cref="T:System.Windows.Input.InputGesture" /> objetos que están asociados con este comando.</span><span class="sxs-lookup"><span data-stu-id="d544b-184">Gets the collection of <see cref="T:System.Windows.Input.InputGesture" /> objects that are associated with this command.</span></span></summary>
        <value><span data-ttu-id="d544b-185">Los gestos de entrada.</span><span class="sxs-lookup"><span data-stu-id="d544b-185">The input gestures.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d544b-186">El ejemplo siguiente muestra cómo agregar un nuevo <xref:System.Windows.Input.MouseGesture> a un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="d544b-186">The following example shows how to add a new <xref:System.Windows.Input.MouseGesture> to a <xref:System.Windows.Input.RoutedCommand>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#MouseBindingAddedCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#mousebindingaddedcommand)]
 [!code-vb[commandlibrarysnippets#MouseBindingAddedCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#mousebindingaddedcommand)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.RoutedCommand.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Input.RoutedCommand.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d544b-187">Obtiene el nombre del comando.</span><span class="sxs-lookup"><span data-stu-id="d544b-187">Gets the name of the command.</span></span></summary>
        <value><span data-ttu-id="d544b-188">Nombre del comando.</span><span class="sxs-lookup"><span data-stu-id="d544b-188">The name of the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d544b-189">Esta propiedad se puede usar cuando se hace referencia un <xref:System.Windows.Input.RoutedCommand> en [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="d544b-189">This property can be used when referencing a <xref:System.Windows.Input.RoutedCommand> in [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerType">
      <MemberSignature Language="C#" Value="public Type OwnerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type OwnerType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.RoutedCommand.OwnerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ OwnerType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerType : Type" Usage="System.Windows.Input.RoutedCommand.OwnerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d544b-190">Obtiene el tipo que se registra con el comando.</span><span class="sxs-lookup"><span data-stu-id="d544b-190">Gets the type that is registered with the command.</span></span></summary>
        <value><span data-ttu-id="d544b-191">El tipo del propietario del comando.</span><span class="sxs-lookup"><span data-stu-id="d544b-191">The type of the command owner.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.ICommand.CanExecute">
      <MemberSignature Language="C#" Value="bool ICommand.CanExecute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Input.ICommand.CanExecute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#CanExecute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CanExecute (parameter As Object) As Boolean Implements ICommand.CanExecute" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Input.ICommand.CanExecute(System::Object ^ parameter) = System::Windows::Input::ICommand::CanExecute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.ICommand.CanExecute(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="d544b-192">Datos que usa el comando.</span><span class="sxs-lookup"><span data-stu-id="d544b-192">Data used by the command.</span></span>  <span data-ttu-id="d544b-193">Si el comando no exige pasar los datos, se puede establecer este objeto en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d544b-193">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d544b-194">Para obtener una descripción de este miembro, vea <see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="d544b-194">For a description of this members, see <see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="d544b-195"><see langword="true" /> si se puede ejecutar este comando; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d544b-195"><see langword="true" /> if this command can be executed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d544b-196">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="d544b-196">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d544b-197">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Input.RoutedCommand> se convierte en una interfaz <xref:System.Windows.Input.ICommand>.</span><span class="sxs-lookup"><span data-stu-id="d544b-197">It can be used only when the <xref:System.Windows.Input.RoutedCommand> instance is cast to an <xref:System.Windows.Input.ICommand> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.ICommand.Execute">
      <MemberSignature Language="C#" Value="void ICommand.Execute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Input.ICommand.Execute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#Execute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Execute (parameter As Object) Implements ICommand.Execute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Input.ICommand.Execute(System::Object ^ parameter) = System::Windows::Input::ICommand::Execute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.ICommand.Execute(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="d544b-198">Datos que usa el comando.</span><span class="sxs-lookup"><span data-stu-id="d544b-198">Data used by the command.</span></span>  <span data-ttu-id="d544b-199">Si el comando no exige pasar los datos, se puede establecer este objeto en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d544b-199">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d544b-200">Para obtener una descripción de este miembro, vea <see cref="M:System.Windows.Input.ICommand.Execute(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="d544b-200">For a description of this members, see <see cref="M:System.Windows.Input.ICommand.Execute(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d544b-201">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="d544b-201">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d544b-202">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Input.RoutedCommand> se convierte en una interfaz <xref:System.Windows.Input.ICommand>.</span><span class="sxs-lookup"><span data-stu-id="d544b-202">It can be used only when the <xref:System.Windows.Input.RoutedCommand> instance is cast to an <xref:System.Windows.Input.ICommand> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d544b-203">Vea también</span><span class="sxs-lookup"><span data-stu-id="d544b-203">See Also</span></span>  
  
 <xref:System.Windows.Input.RoutedCommand.Execute%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
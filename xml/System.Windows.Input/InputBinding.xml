<Type Name="InputBinding" FullName="System.Windows.Input.InputBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b41eae7f73cc0cc53d3332f197eba9c7ef1b3507" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55395449" /></Metadata><TypeSignature Language="C#" Value="public class InputBinding : System.Windows.Freezable, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputBinding extends System.Windows.Freezable implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InputBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class InputBinding&#xA;Inherits Freezable&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputBinding : System::Windows::Freezable, System::Windows::Input::ICommandSource" />
  <TypeSignature Language="F#" Value="type InputBinding = class&#xA;    inherit Freezable&#xA;    interface ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-3.0">System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="80de9-101">Representa un enlace entre <see cref="T:System.Windows.Input.InputGesture" /> y un comando.</span><span class="sxs-lookup"><span data-stu-id="80de9-101">Represents a binding between an <see cref="T:System.Windows.Input.InputGesture" /> and a command.</span></span> <span data-ttu-id="80de9-102">El comando puede ser de tipo <see cref="T:System.Windows.Input.RoutedCommand" />.</span><span class="sxs-lookup"><span data-stu-id="80de9-102">The command is potentially a <see cref="T:System.Windows.Input.RoutedCommand" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80de9-103">Puede especificar que los proporcionados por el usuario invoca un comando mediante la creación de un <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="80de9-103">You can specify that user input invokes a command by creating a <xref:System.Windows.Input.InputBinding>.</span></span> <span data-ttu-id="80de9-104">Cuando el usuario realiza la entrada especificada, el <xref:System.Windows.Input.ICommand> que se establece en el <xref:System.Windows.Input.InputBinding.Command%2A> se ejecuta la propiedad.</span><span class="sxs-lookup"><span data-stu-id="80de9-104">When the user performs the specified input, the <xref:System.Windows.Input.ICommand> that is set to the <xref:System.Windows.Input.InputBinding.Command%2A> property is executed.</span></span>  
  
 <span data-ttu-id="80de9-105">Puede especificar que el <xref:System.Windows.Input.InputBinding> invoca un comando que se define en un objeto mediante la creación de un enlace en el <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, y <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="80de9-105">You can specify that the <xref:System.Windows.Input.InputBinding> invokes a command that is defined on an object by creating a binding on the <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, and <xref:System.Windows.Input.InputBinding.CommandTarget%2A> properties.</span></span> <span data-ttu-id="80de9-106">Esto le permite definir un comando personalizado y lo asocia con la entrada del usuario.</span><span class="sxs-lookup"><span data-stu-id="80de9-106">This enables you to define a custom command and associate it with user input.</span></span> <span data-ttu-id="80de9-107">Para obtener más información, vea el segundo ejemplo en la sección ejemplos.</span><span class="sxs-lookup"><span data-stu-id="80de9-107">For more information, see the second example in the Examples section.</span></span>  
  
 <span data-ttu-id="80de9-108">Un <xref:System.Windows.Input.InputBinding> puede definirse en un objeto específico o en el nivel de clase registrando un <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> con el <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="80de9-108">An <xref:System.Windows.Input.InputBinding> can be defined on a specific object or at the class level by registering a <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> with the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 <span data-ttu-id="80de9-109">El <xref:System.Windows.Input.InputBinding> propia clase no admite el uso XAML porque no expone un constructor predeterminado público (hay un constructor predeterminado, pero está protegido).</span><span class="sxs-lookup"><span data-stu-id="80de9-109">The <xref:System.Windows.Input.InputBinding> class itself does not support XAML usage because it does not expose a public default constructor (there is a default constructor, but it is protected).</span></span> <span data-ttu-id="80de9-110">Sin embargo, las clases derivadas pueden exponer un constructor público y, por tanto, puede establecer propiedades en la clase derivada que se heredan de <xref:System.Windows.Input.InputBinding> con un uso XAML.</span><span class="sxs-lookup"><span data-stu-id="80de9-110">However, derived classes can expose a public constructor and therefore can set properties on the derived class that are inherited from <xref:System.Windows.Input.InputBinding> with a XAML usage.</span></span> <span data-ttu-id="80de9-111">Dos existente <xref:System.Windows.Input.InputBinding>-las clases derivadas que se pueden crear instancias en XAML y se pueden establecer propiedades en XAML son <xref:System.Windows.Input.KeyBinding> y <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="80de9-111">Two existing <xref:System.Windows.Input.InputBinding>-derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="80de9-112">La propiedad típica en [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] de programación que es establece en XAML y toma uno o varios <xref:System.Windows.Input.InputBinding> objetos como valores es el <xref:System.Windows.UIElement.InputBindings%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="80de9-112">The typical property in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] programming that is set in XAML and takes one or more <xref:System.Windows.Input.InputBinding> objects as values is the <xref:System.Windows.UIElement.InputBindings%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="xamlObjectElementUsage_InputBinding"></a>   
## <a name="xaml-object-element-usage"></a><span data-ttu-id="80de9-113">Uso de elementos de objeto XAML</span><span class="sxs-lookup"><span data-stu-id="80de9-113">XAML Object Element Usage</span></span>  
 <span data-ttu-id="80de9-114">\<*inputBindingDerivedClass…/*></span><span class="sxs-lookup"><span data-stu-id="80de9-114">\<*inputBindingDerivedClass…/*></span></span>  
  
<a name="xamlValues_InputBinding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="80de9-115">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="80de9-115">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="80de9-116">Una clase derivada de <xref:System.Windows.Input.InputBinding> que admite la sintaxis de elemento de objeto, como <xref:System.Windows.Input.KeyBinding> o <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="80de9-116">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="80de9-117">Vea la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="80de9-117">See Remarks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80de9-118">El ejemplo siguiente muestra cómo usar un <xref:System.Windows.Input.KeyBinding> para enlazar un <xref:System.Windows.Input.KeyGesture> a la <xref:System.Windows.Input.ApplicationCommands.Open%2A> comando.</span><span class="sxs-lookup"><span data-stu-id="80de9-118">The following example shows how to use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span> <span data-ttu-id="80de9-119">Cuando se realiza el gesto de teclas, se invoca el comando Abrir.</span><span class="sxs-lookup"><span data-stu-id="80de9-119">When the key gesture is performed, the Open command is invoked.</span></span>  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 <span data-ttu-id="80de9-120">Los ejemplos siguientes muestran cómo enlazar un comando personalizado a <xref:System.Windows.Input.InputBinding> objetos.</span><span class="sxs-lookup"><span data-stu-id="80de9-120">The following examples show how to bind a custom command to <xref:System.Windows.Input.InputBinding> objects.</span></span> <span data-ttu-id="80de9-121">Estos ejemplos crea una aplicación que permite al usuario cambiar el color de fondo mediante la realización de una de las acciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="80de9-121">These examples create an application that enables the user to change the background color by performing one of the following actions:</span></span>  
  
-   <span data-ttu-id="80de9-122">Al hacer clic en un botón.</span><span class="sxs-lookup"><span data-stu-id="80de9-122">Clicking a button.</span></span>  
  
-   <span data-ttu-id="80de9-123">Al presionar CTRL+C.</span><span class="sxs-lookup"><span data-stu-id="80de9-123">Pressing CTRL+C.</span></span>  
  
-   <span data-ttu-id="80de9-124">Con el botón secundario una <xref:System.Windows.Controls.StackPanel> (fuera de la <xref:System.Windows.Controls.ListBox>).</span><span class="sxs-lookup"><span data-stu-id="80de9-124">Right-clicking a <xref:System.Windows.Controls.StackPanel> (outside the <xref:System.Windows.Controls.ListBox>).</span></span>  
  
 <span data-ttu-id="80de9-125">El primer ejemplo crea una clase denominada `SimpleDelegateCommand`.</span><span class="sxs-lookup"><span data-stu-id="80de9-125">The first example creates a class named `SimpleDelegateCommand`.</span></span> <span data-ttu-id="80de9-126">Esta clase acepta a un delegado para que el objeto de crear el comando puede definir la acción que se produce cuando se ejecuta el comando.</span><span class="sxs-lookup"><span data-stu-id="80de9-126">This class accepts a delegate so that the object creating the command can define the action that occurs when the command executes.</span></span> <span data-ttu-id="80de9-127">`SimpleDelegateCommand` También define las propiedades que especifican qué tecla y mouse entrada invoca el comando.</span><span class="sxs-lookup"><span data-stu-id="80de9-127">`SimpleDelegateCommand` also defines properties that specify what key and mouse input invokes the command.</span></span> <span data-ttu-id="80de9-128">`GestureKey` y `GestureModifier` especificar el entradas de teclado; `MouseGesture` especifica la entrada del mouse.</span><span class="sxs-lookup"><span data-stu-id="80de9-128">`GestureKey` and `GestureModifier` specify the keyboard input; `MouseGesture` specifies the mouse input.</span></span>  
  
 [!code-csharp[InputCommandBinding#DelegateCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml.cs#delegatecommand)]
 [!code-vb[InputCommandBinding#DelegateCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/inputcommandbinding/visualbasic/mainwindow.xaml.vb#delegatecommand)]  
  
 <span data-ttu-id="80de9-129">El ejemplo siguiente se crea e inicializa el `ColorChangeCommand`, que es un `SimpleDelegateCommand`.</span><span class="sxs-lookup"><span data-stu-id="80de9-129">The following example creates and initializes the `ColorChangeCommand`, which is a `SimpleDelegateCommand`.</span></span> <span data-ttu-id="80de9-130">El ejemplo también define el método que se ejecuta cuando se invoca el comando y se establece la `GestureKey`, `GestureModifier`, y `MouseGesture` propiedades.</span><span class="sxs-lookup"><span data-stu-id="80de9-130">The example also defines the method that executes when the command is invoked and sets the `GestureKey`, `GestureModifier`, and `MouseGesture` properties.</span></span> <span data-ttu-id="80de9-131">Una aplicación podría llamar a la `InitializeCommand` método cuando se inicia el programa, como se muestra en el constructor de un <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="80de9-131">An application would call the `InitializeCommand` method when the program begins, such as in the constructor of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[InputCommandBinding#InitializeCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml.cs#initializecommand)]
 [!code-vb[InputCommandBinding#InitializeCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/inputcommandbinding/visualbasic/mainwindow.xaml.vb#initializecommand)]  
  
 <span data-ttu-id="80de9-132">Por último, en el ejemplo siguiente se crea la interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="80de9-132">Finally, the following example creates the user interface.</span></span> <span data-ttu-id="80de9-133">El ejemplo se agrega un <xref:System.Windows.Input.KeyBinding> y un <xref:System.Windows.Input.MouseBinding> a un <xref:System.Windows.Controls.StackPanel> que contiene un <xref:System.Windows.Controls.Button> y un <xref:System.Windows.Controls.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="80de9-133">The example adds a <xref:System.Windows.Input.KeyBinding> and a <xref:System.Windows.Input.MouseBinding> to a <xref:System.Windows.Controls.StackPanel> that contains a <xref:System.Windows.Controls.Button> and a <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="80de9-134">Cuando el usuario selecciona un elemento en el <xref:System.Windows.Controls.ListBox>, quien puede cambiar el color de fondo al color seleccionado.</span><span class="sxs-lookup"><span data-stu-id="80de9-134">When the user selects an item in the <xref:System.Windows.Controls.ListBox>, he or she can change the color of the background to the selected color.</span></span> <span data-ttu-id="80de9-135">En cada caso, el `CommandParameter` propiedad está enlazada al elemento seleccionado en el <xref:System.Windows.Controls.ListBox>y el `Command` propiedad está enlazada a la `ColorChangeCommand`.</span><span class="sxs-lookup"><span data-stu-id="80de9-135">In each case, the `CommandParameter` property is bound to the selected item in the <xref:System.Windows.Controls.ListBox>, and the `Command` property is bound to the `ColorChangeCommand`.</span></span> <span data-ttu-id="80de9-136">El <xref:System.Windows.Input.KeyBinding.Key%2A?displayProperty=nameWithType>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A?displayProperty=nameWithType>, y <xref:System.Windows.Input.MouseBinding.MouseAction%2A?displayProperty=nameWithType> propiedades se enlazan a las propiedades correspondientes el `SimpleDelegateCommand` clase.</span><span class="sxs-lookup"><span data-stu-id="80de9-136">The <xref:System.Windows.Input.KeyBinding.Key%2A?displayProperty=nameWithType>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A?displayProperty=nameWithType>, and <xref:System.Windows.Input.MouseBinding.MouseAction%2A?displayProperty=nameWithType> properties are bound to the corresponding properties on the `SimpleDelegateCommand` class.</span></span>  
  
 [!code-xaml[InputCommandBinding#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml#ui)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.UIElement.InputBindings" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="80de9-137">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.InputBinding" />.</span><span class="sxs-lookup"><span data-stu-id="80de9-137">Initializes a new instance of the <see cref="T:System.Windows.Input.InputBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InputBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InputBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80de9-138">Proporciona la inicialización base para las clases derivadas de <see cref="T:System.Windows.Input.InputBinding" />.</span><span class="sxs-lookup"><span data-stu-id="80de9-138">Provides base initialization for classes derived from <see cref="T:System.Windows.Input.InputBinding" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80de9-139"><xref:System.Windows.Input.InputBinding> no es técnicamente una clase abstracta, pero el constructor predeterminado es deliberadamente acceso protegido.</span><span class="sxs-lookup"><span data-stu-id="80de9-139"><xref:System.Windows.Input.InputBinding> is not technically an abstract class, but the default constructor is deliberately protected access.</span></span> <span data-ttu-id="80de9-140">Esto tiene el efecto de hacer que <xref:System.Windows.Input.InputBinding> una clase "abstracta" para XAML.</span><span class="sxs-lookup"><span data-stu-id="80de9-140">This has the effect of making <xref:System.Windows.Input.InputBinding> an "abstract" class for XAML.</span></span> <span data-ttu-id="80de9-141">Hay propiedades existentes en [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] que tienen usos XAML que esperan objetos de tipo <xref:System.Windows.Input.InputBinding>, pero no se puede especificar un <xref:System.Windows.Input.InputBinding> instancia en XAML.</span><span class="sxs-lookup"><span data-stu-id="80de9-141">There are existing properties in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that have XAML usages that expect objects of type <xref:System.Windows.Input.InputBinding>, but you cannot specify an <xref:System.Windows.Input.InputBinding> instance in XAML.</span></span> <span data-ttu-id="80de9-142">En su lugar, puede especificar uno de los específicos del dispositivo <xref:System.Windows.Input.InputBinding> sus clases derivadas como valores, por ejemplo <xref:System.Windows.Input.KeyBinding> o <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="80de9-142">Instead, you can specify one of the device-specific <xref:System.Windows.Input.InputBinding> derived classes as values, for instance <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="80de9-143">Si implementa un personalizado <see cref="T:System.Windows.Input.InputBinding" /> que admite el uso XAML, utilice este constructor para la inicialización base.</span><span class="sxs-lookup"><span data-stu-id="80de9-143">If you implement a custom <see cref="T:System.Windows.Input.InputBinding" /> that supports a XAML usage, use this constructor for base initialization.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputBinding (System.Windows.Input.ICommand command, System.Windows.Input.InputGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.InputGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As InputGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::InputGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.InputBinding : System.Windows.Input.ICommand * System.Windows.Input.InputGesture -&gt; System.Windows.Input.InputBinding" Usage="new System.Windows.Input.InputBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.InputGesture" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="80de9-144">Comando asociado a <paramref name="gesture" />.</span><span class="sxs-lookup"><span data-stu-id="80de9-144">The command to associate with <paramref name="gesture" />.</span></span></param>
        <param name="gesture"><span data-ttu-id="80de9-145">Gesto de entrada que se va a asociar a <paramref name="command" />.</span><span class="sxs-lookup"><span data-stu-id="80de9-145">The input gesture to associate with <paramref name="command" />.</span></span></param>
        <summary><span data-ttu-id="80de9-146">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.InputBinding" /> con el comando y el gesto de entrada especificados.</span><span class="sxs-lookup"><span data-stu-id="80de9-146">Initializes a new instance of the <see cref="T:System.Windows.Input.InputBinding" /> class with the specified command and input gesture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80de9-147">Si es un desarrollador de software con las clases de enlace de entrada existentes, por lo general no se utiliza este constructor, incluso si va a definir comandos personalizados.</span><span class="sxs-lookup"><span data-stu-id="80de9-147">If you are a software developer using existing input binding classes, you generally will not use this constructor, even if you are defining custom commands.</span></span> <span data-ttu-id="80de9-148">En su lugar, se utilizarán los constructores de clases derivadas (<xref:System.Windows.Input.KeyBinding> y <xref:System.Windows.Input.MouseBinding>), o va a utilizar este constructor como la creación de instancias de base de una clase personalizada.</span><span class="sxs-lookup"><span data-stu-id="80de9-148">Instead, you will either use constructors of derived classes (<xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>), or you will use this constructor as the base instantiation of a custom class.</span></span> <span data-ttu-id="80de9-149">Aunque la <xref:System.Windows.Input.InputBinding> clase es compatible con dispositivos de entrada diferentes en principio, en la práctica, debe elegir qué dispositivo representará el enlace de entrada.</span><span class="sxs-lookup"><span data-stu-id="80de9-149">Although the <xref:System.Windows.Input.InputBinding> class supports different input devices in principle, in practice you must choose which device the input binding will represent.</span></span> <span data-ttu-id="80de9-150">Solo se puede establecer solo uno <xref:System.Windows.Input.InputBinding.Gesture%2A> valor en el enlace de entrada y los movimientos son específicas del dispositivo.</span><span class="sxs-lookup"><span data-stu-id="80de9-150">You only can set only one <xref:System.Windows.Input.InputBinding.Gesture%2A> value on the input binding, and gestures are device-specific.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80de9-151">El ejemplo siguiente muestra cómo utilizar este constructor para asociar un <xref:System.Windows.Input.KeyGesture> con un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="80de9-151">The following example shows how to use this constructor to associate a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.RoutedCommand>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#InputBindingAddingComand](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#inputbindingaddingcomand)]
 [!code-vb[commandlibrarysnippets#InputBindingAddingComand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#inputbindingaddingcomand)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="80de9-152"><paramref name="command" /> o <paramref name="gesture" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="80de9-152"><paramref name="command" /> or <paramref name="gesture" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="80de9-153">Objeto que se va a clonar.</span><span class="sxs-lookup"><span data-stu-id="80de9-153">The object to clone.</span></span></param>
        <summary><span data-ttu-id="80de9-154">Copia los valores base (sin animaciones) de las propiedades del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="80de9-154">Copies the base (non-animated) values of the properties of the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="80de9-155">Objeto que se va a clonar.</span><span class="sxs-lookup"><span data-stu-id="80de9-155">The object to clone.</span></span></param>
        <summary><span data-ttu-id="80de9-156">Copia los valores actuales de las propiedades del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="80de9-156">Copies the current values of the properties of the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand with get, set" Usage="System.Windows.Input.InputBinding.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80de9-157">Obtiene o establece el <see cref="T:System.Windows.Input.ICommand" /> asociado a este enlace de entrada.</span><span class="sxs-lookup"><span data-stu-id="80de9-157">Gets or sets the <see cref="T:System.Windows.Input.ICommand" /> associated with this input binding.</span></span></summary>
        <value><span data-ttu-id="80de9-158">Comando asociado.</span><span class="sxs-lookup"><span data-stu-id="80de9-158">The associated command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80de9-159">La <xref:System.Windows.Input.InputBinding> clase no admite el uso XAML porque no expone un constructor público predeterminado (tiene un constructor predeterminado, pero está protegido).</span><span class="sxs-lookup"><span data-stu-id="80de9-159">The <xref:System.Windows.Input.InputBinding> class does not support XAML usage because it does not expose a public default constructor (it has a default constructor, but it is protected).</span></span> <span data-ttu-id="80de9-160">Sin embargo, las clases derivadas pueden exponer un constructor público y por lo tanto, puede usar las propiedades que se heredan de <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="80de9-160">However, derived classes can expose a public constructor and therefore, can use properties that are inherited from <xref:System.Windows.Input.InputBinding>.</span></span> <span data-ttu-id="80de9-161">Dos existente <xref:System.Windows.Input.InputBinding> son las clases derivadas que se pueden crear instancias en XAML y se pueden establecer las propiedades con los usos XAML <xref:System.Windows.Input.KeyBinding> y <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="80de9-161">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties with XAML usages are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
 <span data-ttu-id="80de9-162"><xref:System.Windows.Input.ICommand> hace referencia a un convertidor de tipos que permite ciertas preexistente <xref:System.Windows.Input.ICommand> implementaciones para especificar los valores en forma de cadena.</span><span class="sxs-lookup"><span data-stu-id="80de9-162"><xref:System.Windows.Input.ICommand> references a type converter that enables certain preexisting <xref:System.Windows.Input.ICommand> implementations to specify values in the form of a string.</span></span> <span data-ttu-id="80de9-163">Este comportamiento de conversión de tipo establece el formato de valor de atributo de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="80de9-163">This type conversion behavior sets the attribute value form of this property.</span></span> <span data-ttu-id="80de9-164">También puede enlazar el <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, y <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propiedades a un <xref:System.Windows.Input.ICommand> que se define en un objeto.</span><span class="sxs-lookup"><span data-stu-id="80de9-164">You can also bind the <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, and <xref:System.Windows.Input.InputBinding.CommandTarget%2A> properties to an <xref:System.Windows.Input.ICommand> that is defined on an object.</span></span> <span data-ttu-id="80de9-165">Esto le permite definir un comando personalizado y lo asocia con la entrada del usuario.</span><span class="sxs-lookup"><span data-stu-id="80de9-165">This enables you to define a custom command and associate it with user input.</span></span> <span data-ttu-id="80de9-166">Para obtener más información, vea el segundo ejemplo de <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="80de9-166">For more information, see the second example in <xref:System.Windows.Input.InputBinding>.</span></span>  
  
<a name="xamlAttributeUsage_Command"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="80de9-167">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="80de9-167">XAML Attribute Usage</span></span>  
 <span data-ttu-id="80de9-168"><`inputBindingDerivedClass` `Command`="<xref:System.Windows.Input.ICommand>"/></span><span class="sxs-lookup"><span data-stu-id="80de9-168"><`inputBindingDerivedClass` `Command`="<xref:System.Windows.Input.ICommand>"/></span></span>  
  
<a name="xamlPropertyElementUsage_Command"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="80de9-169">Uso de elementos de propiedad XAML</span><span class="sxs-lookup"><span data-stu-id="80de9-169">XAML Property Element Usage</span></span>  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.Command>  
    <iCommandImplementation/>  
  </inputBindingDerivedClass.Command>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_Command"></a>   
## <a name="xaml-values"></a><span data-ttu-id="80de9-170">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="80de9-170">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="80de9-171">Una clase derivada de <xref:System.Windows.Input.InputBinding> que admite la sintaxis de elemento de objeto, como <xref:System.Windows.Input.KeyBinding> o <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="80de9-171">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="80de9-172">Vea la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="80de9-172">See Remarks.</span></span>  
  
 `iCommandImplementation`  
 <span data-ttu-id="80de9-173">Implementación de objeto de <xref:System.Windows.Input.ICommand> que admite la sintaxis de elemento de objeto (tiene un constructor predeterminado público).</span><span class="sxs-lookup"><span data-stu-id="80de9-173">An object implementation of <xref:System.Windows.Input.ICommand> that supports object element syntax (has a public default constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80de9-174">El ejemplo siguiente muestra cómo usar un <xref:System.Windows.Input.KeyBinding> para enlazar un <xref:System.Windows.Input.KeyGesture> a la <xref:System.Windows.Input.ApplicationCommands.Open%2A?displayProperty=nameWithType> comando.</span><span class="sxs-lookup"><span data-stu-id="80de9-174">The following example shows how to use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to the <xref:System.Windows.Input.ApplicationCommands.Open%2A?displayProperty=nameWithType> command.</span></span> <span data-ttu-id="80de9-175">Cuando se realiza el gesto de teclas, se invoca el comando Abrir.</span><span class="sxs-lookup"><span data-stu-id="80de9-175">When the key gesture is performed, the Open command is invoked.</span></span>  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewkeybinding)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewKeyBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewkeybinding)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="80de9-176">El valor <see cref="P:System.Windows.Input.InputBinding.Command" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="80de9-176">The <see cref="P:System.Windows.Input.InputBinding.Command" /> value is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj with get, set" Usage="System.Windows.Input.InputBinding.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80de9-177">Obtiene o establece los datos específicos de un comando concreto.</span><span class="sxs-lookup"><span data-stu-id="80de9-177">Gets or sets the command-specific data for a particular command.</span></span></summary>
        <value><span data-ttu-id="80de9-178">Datos específicos del comando.</span><span class="sxs-lookup"><span data-stu-id="80de9-178">The command-specific data.</span></span> <span data-ttu-id="80de9-179">De manera predeterminada, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="80de9-179">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80de9-180">El <xref:System.Windows.Input.InputBinding.CommandParameter%2A> propiedad se utiliza para pasar información específica al comando cuando se ejecuta.</span><span class="sxs-lookup"><span data-stu-id="80de9-180">The <xref:System.Windows.Input.InputBinding.CommandParameter%2A> property is used to pass specific information to the command when it is executed.</span></span> <span data-ttu-id="80de9-181">El tipo de datos se define mediante el comando.</span><span class="sxs-lookup"><span data-stu-id="80de9-181">The type of the data is defined by the command.</span></span> <span data-ttu-id="80de9-182">Muchos comandos no esperan parámetros de comando; para estos comandos, se omitirá cualquier parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="80de9-182">Many commands do not expect command parameters; for these commands, any command parameters passed will be ignored.</span></span>  
  
 <span data-ttu-id="80de9-183">Si el comando que está asociado un enlace de entrada es un <xref:System.Windows.Input.RoutedCommand>, el <xref:System.Windows.Input.InputBinding.CommandParameter%2A> del enlace de entrada se pasa a la <xref:System.Windows.Input.RoutedCommand> controladores a través de la <xref:System.Windows.Input.ExecutedRoutedEventArgs> y el <xref:System.Windows.Input.CanExecuteRoutedEventArgs> datos del evento cuando se procesa el comando.</span><span class="sxs-lookup"><span data-stu-id="80de9-183">If the command that an input binding is associated with is a <xref:System.Windows.Input.RoutedCommand>, the <xref:System.Windows.Input.InputBinding.CommandParameter%2A> of the input binding is passed to the <xref:System.Windows.Input.RoutedCommand> handlers through the <xref:System.Windows.Input.ExecutedRoutedEventArgs> and the <xref:System.Windows.Input.CanExecuteRoutedEventArgs> event data when the command is processed.</span></span>  
  
 <span data-ttu-id="80de9-184">El tipo de datos y el propósito del parámetro de comando se definen de forma diferente para cada comando y puede ser `null`.</span><span class="sxs-lookup"><span data-stu-id="80de9-184">The data type and purpose of the command parameter are defined differently for each command and can be `null`.</span></span> <span data-ttu-id="80de9-185">Puede enlazar el <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, y <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propiedades a un <xref:System.Windows.Input.ICommand> que se define en un objeto.</span><span class="sxs-lookup"><span data-stu-id="80de9-185">You can bind the <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, and <xref:System.Windows.Input.InputBinding.CommandTarget%2A> properties to an <xref:System.Windows.Input.ICommand> that is defined on an object.</span></span> <span data-ttu-id="80de9-186">Esto le permite definir un comando personalizado y lo asocia con la entrada del usuario.</span><span class="sxs-lookup"><span data-stu-id="80de9-186">This enables you to define a custom command and associate it with user input.</span></span> <span data-ttu-id="80de9-187">Para obtener más información, vea el segundo ejemplo de <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="80de9-187">For more information, see the second example in <xref:System.Windows.Input.InputBinding>.</span></span>  
  
 <span data-ttu-id="80de9-188">La <xref:System.Windows.Input.InputBinding> clase no admite el uso XAML porque no expone un constructor público predeterminado (tiene un constructor predeterminado, pero está protegido).</span><span class="sxs-lookup"><span data-stu-id="80de9-188">The <xref:System.Windows.Input.InputBinding> class does not support XAML usage because it does not expose a public default constructor (it has a default constructor, but it is protected).</span></span> <span data-ttu-id="80de9-189">Sin embargo, las clases derivadas pueden exponer un constructor público y por lo tanto, puede establecer las propiedades que se heredan de <xref:System.Windows.Input.InputBinding> con el uso XAML.</span><span class="sxs-lookup"><span data-stu-id="80de9-189">However, derived classes can expose a public constructor and therefore, can set properties that are inherited from <xref:System.Windows.Input.InputBinding> with XAML usage.</span></span> <span data-ttu-id="80de9-190">Dos existente <xref:System.Windows.Input.InputBinding> son las clases derivadas que se pueden crear instancias en XAML y se pueden establecer propiedades en XAML <xref:System.Windows.Input.KeyBinding> y <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="80de9-190">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
<a name="xamlAttributeUsage_CommandParameter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="80de9-191">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="80de9-191">XAML Attribute Usage</span></span>  
  
```  
<inputBindingDerivedClass CommandParameter="commandParameterString"/>  
```  
  
<a name="xamlPropertyElementUsage_CommandParameter"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="80de9-192">Uso de elementos de propiedad XAML</span><span class="sxs-lookup"><span data-stu-id="80de9-192">XAML Property Element Usage</span></span>  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.CommandParameter>  
    <commandParameterObject/>  
  </inputBindingDerivedClass.CommandParameter>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_CommandParameter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="80de9-193">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="80de9-193">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="80de9-194">Una clase derivada de <xref:System.Windows.Input.InputBinding> que admite la sintaxis de elemento de objeto, como <xref:System.Windows.Input.KeyBinding> o <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="80de9-194">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="80de9-195">Vea la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="80de9-195">See Remarks.</span></span>  
  
 `commandParameterString`  
 <span data-ttu-id="80de9-196">Una cadena que es procesada por un comando concreto.</span><span class="sxs-lookup"><span data-stu-id="80de9-196">A string that is processed by a particular command.</span></span> <span data-ttu-id="80de9-197">Las cadenas son el tipo común que puede usar para parámetros de comando porque se puede establecer fácilmente en XAML.</span><span class="sxs-lookup"><span data-stu-id="80de9-197">Strings are the common type used for command parameters because they can be easily set in XAML.</span></span> <span data-ttu-id="80de9-198">Para el formato de cadena y su finalidad, consulte la documentación para el comando concreto que está asociado el enlace de entrada.</span><span class="sxs-lookup"><span data-stu-id="80de9-198">For the expected string format and its purpose, see the documentation for the particular command that the input binding is associated with.</span></span> <span data-ttu-id="80de9-199">Muchos comandos no esperan parámetros.</span><span class="sxs-lookup"><span data-stu-id="80de9-199">Many commands do not expect parameters.</span></span>  
  
 `commandParameterObject`  
 <span data-ttu-id="80de9-200">Un objeto que es procesado por un comando concreto.</span><span class="sxs-lookup"><span data-stu-id="80de9-200">An object that is processed by a particular command.</span></span> <span data-ttu-id="80de9-201">Todas las [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] comandos usan cadenas.</span><span class="sxs-lookup"><span data-stu-id="80de9-201">All existing [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] commands use strings.</span></span> <span data-ttu-id="80de9-202">Por lo tanto, esta sintaxis de elemento de propiedad solo es relevante para escenarios de comando personalizado.</span><span class="sxs-lookup"><span data-stu-id="80de9-202">Therefore, this property element syntax is only relevant for custom command scenarios.</span></span> <span data-ttu-id="80de9-203">Para admitir esta sintaxis, la `commandParameterObject` objeto también debe admitir la sintaxis de elemento de objeto (debe tener un constructor predeterminado público).</span><span class="sxs-lookup"><span data-stu-id="80de9-203">In order to support this syntax, the `commandParameterObject` object must also support object element syntax (must have a public default constructor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandParameterProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandParameterProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80de9-204">Identifica la propiedad de dependencia <see cref="P:System.Windows.Input.InputBinding.CommandParameter" />.</span><span class="sxs-lookup"><span data-stu-id="80de9-204">Identifies the <see cref="P:System.Windows.Input.InputBinding.CommandParameter" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80de9-205">Identifica la propiedad de dependencia <see cref="P:System.Windows.Input.InputBinding.Command" />.</span><span class="sxs-lookup"><span data-stu-id="80de9-205">Identifies the <see cref="P:System.Windows.Input.InputBinding.Command" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement with get, set" Usage="System.Windows.Input.InputBinding.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80de9-206">Obtiene o establece el elemento de destino del comando.</span><span class="sxs-lookup"><span data-stu-id="80de9-206">Gets or sets the target element of the command.</span></span></summary>
        <value><span data-ttu-id="80de9-207">Destino del comando.</span><span class="sxs-lookup"><span data-stu-id="80de9-207">The target of the command.</span></span> <span data-ttu-id="80de9-208">De manera predeterminada, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="80de9-208">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80de9-209">En el sistema, de comandos de Windows Presentation Foundation la <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propiedad en un <xref:System.Windows.Input.ICommandSource> objeto solo es aplicable cuando la <xref:System.Windows.Input.ICommand> es un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="80de9-209">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on an <xref:System.Windows.Input.ICommandSource> object is applicable only when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="80de9-210">Si <xref:System.Windows.Input.InputBinding.CommandTarget%2A> se establece en un <xref:System.Windows.Input.ICommandSource> y el comando correspondiente no es un <xref:System.Windows.Input.RoutedCommand>, se omite el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="80de9-210">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on an <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 <span data-ttu-id="80de9-211">Cuando se usa con un <xref:System.Windows.Input.RoutedCommand>, el destino del comando es el objeto en el que el <xref:System.Windows.Input.CommandManager.Executed> y <xref:System.Windows.Input.CommandManager.CanExecute> se generan eventos.</span><span class="sxs-lookup"><span data-stu-id="80de9-211">When used with a <xref:System.Windows.Input.RoutedCommand>, the command target is the object on which the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised.</span></span> <span data-ttu-id="80de9-212">Si el <xref:System.Windows.Input.InputBinding.CommandTarget%2A> no está establecida la propiedad, el elemento con foco de teclado se usa como destino.</span><span class="sxs-lookup"><span data-stu-id="80de9-212">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property is not set, the element with keyboard focus is used as the target.</span></span>  
  
 <span data-ttu-id="80de9-213">El <xref:System.Windows.Input.InputBinding> propia clase no admite el uso XAML, porque no expone un constructor predeterminado público (hay un constructor predeterminado, pero está protegido).</span><span class="sxs-lookup"><span data-stu-id="80de9-213">The <xref:System.Windows.Input.InputBinding> class itself does not support XAML usage, because it does not expose a public default constructor (there is a default constructor, but it is protected).</span></span> <span data-ttu-id="80de9-214">Sin embargo, las clases derivadas pueden exponer un constructor público y, por tanto, puede establecer las propiedades que se heredan de <xref:System.Windows.Input.InputBinding> con un uso XAML.</span><span class="sxs-lookup"><span data-stu-id="80de9-214">However, derived classes can expose a public constructor and therefore can set properties that are inherited from <xref:System.Windows.Input.InputBinding> with a XAML usage.</span></span> <span data-ttu-id="80de9-215">Dos existente <xref:System.Windows.Input.InputBinding> son las clases derivadas que se pueden crear instancias en XAML y se pueden establecer propiedades en XAML <xref:System.Windows.Input.KeyBinding> y <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="80de9-215">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
<a name="xamlAttributeUsage_CommandTarget"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="80de9-216">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="80de9-216">XAML Attribute Usage</span></span>  
  
```  
<inputBindingDerivedClass CommandTarget="bindingToTarget"/>  
```  
  
<a name="xamlValues_CommandTarget"></a>   
## <a name="xaml-values"></a><span data-ttu-id="80de9-217">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="80de9-217">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="80de9-218">Una clase derivada de <xref:System.Windows.Input.InputBinding> que admite la sintaxis de elemento de objeto, como <xref:System.Windows.Input.KeyBinding> o <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="80de9-218">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="80de9-219">Vea la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="80de9-219">See Remarks.</span></span>  
  
 `bindingToTarget`  
 <span data-ttu-id="80de9-220">Una cadena que utiliza un tipo de sintaxis de enlace que pueden devolver una referencia de objeto a un elemento de nombre.</span><span class="sxs-lookup"><span data-stu-id="80de9-220">A string that uses a type of binding syntax that can return an object reference to an existing named element.</span></span> <span data-ttu-id="80de9-221">Vea la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="80de9-221">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80de9-222">Identifica la propiedad de dependencia <see cref="P:System.Windows.Input.InputBinding.CommandTarget" />.</span><span class="sxs-lookup"><span data-stu-id="80de9-222">Identifies the <see cref="P:System.Windows.Input.InputBinding.CommandTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="inputBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80de9-223">Crea una instancia de un objeto <see cref="T:System.Windows.Input.InputBinding" />.</span><span class="sxs-lookup"><span data-stu-id="80de9-223">Creates an instance of an <see cref="T:System.Windows.Input.InputBinding" />.</span></span></summary>
        <returns><span data-ttu-id="80de9-224">El objeto nuevo.</span><span class="sxs-lookup"><span data-stu-id="80de9-224">The new object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.InputBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80de9-225">Obtiene o establece el <see cref="T:System.Windows.Input.InputGesture" /> asociado a este enlace de entrada.</span><span class="sxs-lookup"><span data-stu-id="80de9-225">Gets or sets the <see cref="T:System.Windows.Input.InputGesture" /> associated with this input binding.</span></span></summary>
        <value><span data-ttu-id="80de9-226">El gesto asociado.</span><span class="sxs-lookup"><span data-stu-id="80de9-226">The associated gesture.</span></span> <span data-ttu-id="80de9-227">De manera predeterminada, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="80de9-227">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80de9-228">El gesto de entrada es la acción que invoca el comando.</span><span class="sxs-lookup"><span data-stu-id="80de9-228">The input gesture is the action that invokes the command.</span></span> <span data-ttu-id="80de9-229">Ejemplos de gestos de entrada en [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] son <xref:System.Windows.Input.KeyGesture> y <xref:System.Windows.Input.MouseGesture>.</span><span class="sxs-lookup"><span data-stu-id="80de9-229">Examples of input gestures in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] are <xref:System.Windows.Input.KeyGesture> and <xref:System.Windows.Input.MouseGesture>.</span></span> <span data-ttu-id="80de9-230">Un <xref:System.Windows.Input.KeyGesture> es una combinación de un <xref:System.Windows.Input.Key> y un conjunto de <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="80de9-230">A <xref:System.Windows.Input.KeyGesture> is a combination of a <xref:System.Windows.Input.Key> and a set of <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="80de9-231">Un <xref:System.Windows.Input.MouseGesture> es una combinación de un <xref:System.Windows.Input.MouseAction> y un conjunto de <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="80de9-231">A <xref:System.Windows.Input.MouseGesture> is a combination of a <xref:System.Windows.Input.MouseAction> and a set of <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="80de9-232">El <xref:System.Windows.Input.InputBinding> propia clase no admite el uso XAML, porque no expone un constructor predeterminado público (hay un constructor predeterminado, pero está protegido).</span><span class="sxs-lookup"><span data-stu-id="80de9-232">The <xref:System.Windows.Input.InputBinding> class itself does not support XAML usage, because it does not expose a public default constructor (there is a default constructor, but it is protected).</span></span> <span data-ttu-id="80de9-233">Sin embargo, las clases derivadas pueden exponer un constructor público y, por tanto, puede establecer las propiedades que se heredan de <xref:System.Windows.Input.InputBinding> con un uso XAML.</span><span class="sxs-lookup"><span data-stu-id="80de9-233">However, derived classes can expose a public constructor and thus can set properties that are inherited from <xref:System.Windows.Input.InputBinding> with a XAML usage.</span></span> <span data-ttu-id="80de9-234">Dos existente <xref:System.Windows.Input.InputBinding> son las clases derivadas que se pueden crear instancias en XAML y se pueden establecer propiedades en XAML <xref:System.Windows.Input.KeyBinding> y <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="80de9-234">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
<a name="xamlAttributeUsage_gesture"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="80de9-235">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="80de9-235">XAML Attribute Usage</span></span>  
 <span data-ttu-id="80de9-236"><<xref:System.Windows.Input.KeyBinding> `Gesture`="<xref:System.Windows.Input.KeyGesture>"/></span><span class="sxs-lookup"><span data-stu-id="80de9-236"><<xref:System.Windows.Input.KeyBinding> `Gesture`="<xref:System.Windows.Input.KeyGesture>"/></span></span>  
  
<span data-ttu-id="80de9-237">O bien</span><span class="sxs-lookup"><span data-stu-id="80de9-237">-or-</span></span>
  
 <span data-ttu-id="80de9-238"><<xref:System.Windows.Input.MouseBinding> `Gesture`="<xref:System.Windows.Input.MouseGesture>"/></span><span class="sxs-lookup"><span data-stu-id="80de9-238"><<xref:System.Windows.Input.MouseBinding> `Gesture`="<xref:System.Windows.Input.MouseGesture>"/></span></span>  
  
<span data-ttu-id="80de9-239">O bien</span><span class="sxs-lookup"><span data-stu-id="80de9-239">-or-</span></span>
  
 <span data-ttu-id="80de9-240"><`inputBindingDerivedClass` `Gesture`="<xref:System.Windows.Input.InputGesture>"/></span><span class="sxs-lookup"><span data-stu-id="80de9-240"><`inputBindingDerivedClass` `Gesture`="<xref:System.Windows.Input.InputGesture>"/></span></span>  
  
<a name="xamlPropertyElementUsage_gesture"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="80de9-241">Uso de elementos de propiedad XAML</span><span class="sxs-lookup"><span data-stu-id="80de9-241">XAML Property Element Usage</span></span>  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.Gesture>  
    <inputGestureImplementation/>  
  </inputBindingDerivedClass.Gesture>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_gesture"></a>   
## <a name="xaml-values"></a><span data-ttu-id="80de9-242">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="80de9-242">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="80de9-243">Una clase derivada de <xref:System.Windows.Input.InputBinding> que admite la sintaxis de elemento de objeto, como <xref:System.Windows.Input.KeyBinding> o <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="80de9-243">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="80de9-244">Vea la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="80de9-244">See Remarks.</span></span>  
  
 `inputGestureImplementation`  
 <span data-ttu-id="80de9-245">Clase de derivada personalizada <xref:System.Windows.Input.InputGesture> que admite la sintaxis de elemento de objeto.</span><span class="sxs-lookup"><span data-stu-id="80de9-245">A custom derived class of <xref:System.Windows.Input.InputGesture> that supports object element syntax.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80de9-246">El ejemplo siguiente muestra cómo usar un <xref:System.Windows.Input.KeyBinding> para enlazar un <xref:System.Windows.Input.KeyGesture> a un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="80de9-246">The following example shows how to use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="80de9-247">Cuando el <xref:System.Windows.Input.KeyGesture> se presiona ALT + L, el <xref:System.Windows.Input.ApplicationCommands.Close%2A> se invoca el comando.</span><span class="sxs-lookup"><span data-stu-id="80de9-247">When the <xref:System.Windows.Input.KeyGesture> ALT+L is pressed, the <xref:System.Windows.Input.ApplicationCommands.Close%2A> command is invoked.</span></span>  
  
 [!code-xaml[commandlibrarysnippets#KeyBindingWithKeyAndModifiersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml#keybindingwithkeyandmodifiersxaml)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="80de9-248">Objeto que se va a clonar.</span><span class="sxs-lookup"><span data-stu-id="80de9-248">The object to clone.</span></span></param>
        <summary><span data-ttu-id="80de9-249">Convierte la instancia en un clon inmovilizado del objeto <see cref="T:System.Windows.Freezable" /> especificado mediante los valores base de propiedades (sin animaciones).</span><span class="sxs-lookup"><span data-stu-id="80de9-249">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> by using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="80de9-250">Objeto que se va a clonar.</span><span class="sxs-lookup"><span data-stu-id="80de9-250">The object to clone.</span></span></param>
        <summary><span data-ttu-id="80de9-251">Convierte la instancia actual en un clon inmovilizado del valor de <see cref="T:System.Windows.Freezable" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="80de9-251">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span></span> <span data-ttu-id="80de9-252">Si el objeto tiene propiedades de dependencia animadas, se copian sus valores animados actuales.</span><span class="sxs-lookup"><span data-stu-id="80de9-252">If the object has animated dependency properties, their current animated values are copied.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
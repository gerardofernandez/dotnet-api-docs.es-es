<Type Name="ICommand" FullName="System.Windows.Input.ICommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e1dae98e4eba72dddd721c1e2c2e445ce0118d5d" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57951713" /></Metadata><TypeSignature Language="C#" Value="public interface ICommand" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommand" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommand" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommand" />
  <TypeSignature Language="F#" Value="type ICommand = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationCore, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3f1e7-101">Define un comando.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-101">Defines a command.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f1e7-102"><xref:System.Windows.Input.RoutedCommand> y <xref:System.Windows.Input.RoutedUICommand> son dos implementaciones de la <xref:System.Windows.Input.ICommand> en la interfaz [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="3f1e7-102"><xref:System.Windows.Input.RoutedCommand> and <xref:System.Windows.Input.RoutedUICommand> are two implementations of the <xref:System.Windows.Input.ICommand> interface in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span></span>  
  
## <a name="icommand-in-windows-runtime-apps"></a><span data-ttu-id="3f1e7-103">ICommand en Windows Runtime apps</span><span class="sxs-lookup"><span data-stu-id="3f1e7-103">ICommand in Windows Runtime apps</span></span>  
 <span data-ttu-id="3f1e7-104">El <xref:System.Windows.Input.ICommand> interfaz es el contrato de código para los comandos que se escriben en las aplicaciones de .NET para Windows en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-104">The <xref:System.Windows.Input.ICommand> interface is the code contract for commands that are written in .NET for Windows Runtime apps.</span></span> <span data-ttu-id="3f1e7-105">Estos comandos proporcionan el comportamiento de comandos para los elementos de interfaz de usuario como un XAML en tiempo de ejecución de Windows `Button` y, en particular una `AppBarButton`.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-105">These commands provide the commanding behavior for UI elements such as a Windows Runtime XAML `Button` and in particular an `AppBarButton`.</span></span> <span data-ttu-id="3f1e7-106">Si la definición de comandos para aplicaciones de Windows Runtime usará básicamente las mismas técnicas que usaría para la definición de comandos para una aplicación. NET.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-106">If you're defining commands for Windows Runtime apps you use basically the same techniques you'd use for defining commands for a .NET app.</span></span> <span data-ttu-id="3f1e7-107">Implementar el comando mediante la definición de una clase que implementa <xref:System.Windows.Input.ICommand> e implementar específicamente el <xref:System.Windows.Input.ICommand.Execute%2A> método.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-107">Implement the command by defining a class that implements <xref:System.Windows.Input.ICommand> and specifically implement the <xref:System.Windows.Input.ICommand.Execute%2A> method.</span></span>  
  
 <span data-ttu-id="3f1e7-108">XAML para Windows Runtime no admite x`:Static`, por lo que no intente usar la `x:Static` extensión de marcado si se usa el comando de Windows en tiempo de ejecución XAML.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-108">XAML for Windows Runtime does not support x`:Static`, so don't attempt to use the `x:Static` markup extension if the command is used from Windows Runtime XAML.</span></span> <span data-ttu-id="3f1e7-109">Además, el tiempo de ejecución de Windows no tiene las bibliotecas de comandos predefinidos, por lo que la sintaxis XAML que se muestra aquí no se aplican realmente el caso de que está implementando la interfaz y definir el comando para el uso de Windows en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-109">Also, the Windows Runtime does not have any predefined command libraries, so the XAML syntax shown here doesn't really apply for the case where you're implementing the interface and defining the command for Windows Runtime usage.</span></span>  
  
<a name="xamlTextUsage_ICommand"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3f1e7-110">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="3f1e7-110">XAML Attribute Usage</span></span>  
 <span data-ttu-id="3f1e7-111">\<*propiedad de objeto*= "*predefinedCommandName*" / ></span><span class="sxs-lookup"><span data-stu-id="3f1e7-111">\<*object property*="*predefinedCommandName*"/></span></span>  
  
<span data-ttu-id="3f1e7-112">O bien</span><span class="sxs-lookup"><span data-stu-id="3f1e7-112">-or-</span></span>
  
 <span data-ttu-id="3f1e7-113">\<*propiedad de objeto*= "*predefinedCommandName.predefinedCommandName*" / ></span><span class="sxs-lookup"><span data-stu-id="3f1e7-113">\<*object property*="*predefinedCommandName.predefinedCommandName*"/></span></span>  
  
<span data-ttu-id="3f1e7-114">O bien</span><span class="sxs-lookup"><span data-stu-id="3f1e7-114">-or-</span></span>
  
 <span data-ttu-id="3f1e7-115">\<*propiedad de objeto*= "{ *customClassName.customCommandName*}" / ></span><span class="sxs-lookup"><span data-stu-id="3f1e7-115">\<*object property*="{ *customClassName.customCommandName*}"/></span></span>  
  
<a name="xamlValues_ICommand"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3f1e7-116">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="3f1e7-116">XAML Values</span></span>  
 <span data-ttu-id="3f1e7-117">*predefinedClassName*</span><span class="sxs-lookup"><span data-stu-id="3f1e7-117">*predefinedClassName*</span></span>  
 <span data-ttu-id="3f1e7-118">Una de las clases de comandos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-118">One of the predefined command classes.</span></span>  
  
 <span data-ttu-id="3f1e7-119">*predefinedCommandName*</span><span class="sxs-lookup"><span data-stu-id="3f1e7-119">*predefinedCommandName*</span></span>  
 <span data-ttu-id="3f1e7-120">Uno de los comandos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-120">One of the predefined commands.</span></span>  
  
 <span data-ttu-id="3f1e7-121">*customClassName*</span><span class="sxs-lookup"><span data-stu-id="3f1e7-121">*customClassName*</span></span>  
 <span data-ttu-id="3f1e7-122">Una clase personalizada que contiene el comando personalizado.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-122">A custom class that contains the custom command.</span></span> <span data-ttu-id="3f1e7-123">Las clases personalizadas requieren generalmente un `xlmns` prefijar la asignación; vea [los espacios de nombres XAML y la asignación de Namespace para WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="3f1e7-123">Custom classes generally require an `xlmns` prefix mapping; see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span></span>  
  
 <span data-ttu-id="3f1e7-124">*customCommandName*</span><span class="sxs-lookup"><span data-stu-id="3f1e7-124">*customCommandName*</span></span>  
 <span data-ttu-id="3f1e7-125">Un comando personalizado.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-125">A custom command.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public bool CanExecute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExecute (parameter As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExecute(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member CanExecute : obj -&gt; bool" Usage="iCommand.CanExecute parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="3f1e7-126">Datos que usa el comando.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-126">Data used by the command.</span></span>  <span data-ttu-id="3f1e7-127">Si el comando no exige pasar los datos, se puede establecer este objeto en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-127">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3f1e7-128">Define el método que determina si el comando puede ejecutarse en su estado actual.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-128">Defines the method that determines whether the command can execute in its current state.</span></span></summary>
        <returns><span data-ttu-id="3f1e7-129"><see langword="true" /> si se puede ejecutar este comando; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-129"><see langword="true" /> if this command can be executed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f1e7-130">Normalmente, un origen de comando llama a la <xref:System.Windows.Input.ICommand.CanExecute%2A> método cuando el <xref:System.Windows.Input.ICommand.CanExecuteChanged> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-130">Typically, a command source calls the <xref:System.Windows.Input.ICommand.CanExecute%2A> method when the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="CanExecuteChanged">
      <MemberSignature Language="C#" Value="event EventHandler CanExecuteChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanExecuteChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.ICommand.CanExecuteChanged" />
      <MemberSignature Language="VB.NET" Value="Event CanExecuteChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanExecuteChanged;" />
      <MemberSignature Language="F#" Value="member this.CanExecuteChanged : EventHandler " Usage="member this.CanExecuteChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f1e7-131">Se produce cuando hay cambios que influyen en si el comando debería ejecutarse o no.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-131">Occurs when changes occur that affect whether or not the command should execute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f1e7-132">Normalmente, llama un origen de comando <xref:System.Windows.Input.ICommand.CanExecute%2A> en el comando cuando se produce este evento.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-132">Normally, a command source calls <xref:System.Windows.Input.ICommand.CanExecute%2A> on the command when this event occurs.</span></span>  
  
 <span data-ttu-id="3f1e7-133">Normalmente, si no se puede ejecutar el comando, el origen del comando deshabilita a sí mismo.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-133">Normally, if the command cannot execute, the command source disables itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ICommand.Execute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member Execute : obj -&gt; unit" Usage="iCommand.Execute parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="3f1e7-134">Datos que usa el comando.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-134">Data used by the command.</span></span>  <span data-ttu-id="3f1e7-135">Si el comando no exige pasar los datos, se puede establecer este objeto en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-135">If the command does not require data to be passed, this object can be set to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3f1e7-136">Define el método al que se llamará cuando se invoque el comando.</span><span class="sxs-lookup"><span data-stu-id="3f1e7-136">Defines the method to be called when the command is invoked.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommandSource" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>
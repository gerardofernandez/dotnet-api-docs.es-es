<Type Name="MouseWheelEventArgs" FullName="System.Windows.Input.MouseWheelEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc82d8b582cd887f86ec93bcf77fafbfc2acf1f4" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="40000471" /></Metadata><TypeSignature Language="C#" Value="public class MouseWheelEventArgs : System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseWheelEventArgs extends System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseWheelEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseWheelEventArgs&#xA;Inherits MouseEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseWheelEventArgs : System::Windows::Input::MouseEventArgs" />
  <TypeSignature Language="F#" Value="type MouseWheelEventArgs = class&#xA;    inherit MouseEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.MouseEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="60230-101">Proporciona datos para varios eventos que informan de cambios en el valor delta de la rueda del mouse.</span><span class="sxs-lookup"><span data-stu-id="60230-101">Provides data for various events that report changes to the mouse wheel delta value of a mouse device.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60230-102"><xref:System.Windows.Input.MouseWheelEventArgs> se utiliza con los siguientes eventos:</span><span class="sxs-lookup"><span data-stu-id="60230-102"><xref:System.Windows.Input.MouseWheelEventArgs> is used with the following events:</span></span>  
  
-   <xref:System.Windows.UIElement.MouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseWheel?displayProperty=nameWithType>  
  
-   <span data-ttu-id="60230-103"><xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> (evento adjunto)</span><span class="sxs-lookup"><span data-stu-id="60230-103"><xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> (attached event)</span></span>  
  
-   <xref:System.Windows.UIElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
-   <span data-ttu-id="60230-104"><xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> (evento adjunto)</span><span class="sxs-lookup"><span data-stu-id="60230-104"><xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> (attached event)</span></span>  
  
 <span data-ttu-id="60230-105">El <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> propiedad es positivo si la rueda del mouse se mueve hacia arriba o hacia delante (hacia el usuario) o negativo si la rueda del mouse se mueve hacia abajo o hacia atrás (hacia el usuario).</span><span class="sxs-lookup"><span data-stu-id="60230-105">The <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> property is positive if the mouse wheel is moved upward or forward (away from the user) or negative if the mouse wheel is moved downward or backward (toward the user).</span></span>  
  
 <span data-ttu-id="60230-106">Este evento se desencadena incluso para los movimientos de la rueda del mouse pequeño.</span><span class="sxs-lookup"><span data-stu-id="60230-106">This event is raised even for small mouse wheel movements.</span></span> <span data-ttu-id="60230-107">En algunos escenarios, es adecuado implementar los controladores que limitación los deltas de rueda del mouse pequeño comprobando si el valor delta supera un umbral determinado.</span><span class="sxs-lookup"><span data-stu-id="60230-107">For some scenarios, it is appropriate to implement handlers that throttle small mouse wheel deltas by checking whether the delta exceeds a certain threshold.</span></span> <span data-ttu-id="60230-108">En caso contrario, podría invocar el controlador para los casos donde estaba tan pequeño que cualquier interfaz de usuario que está relacionada con el movimiento de la rueda del mouse no se actualizaría el delta de la rueda del mouse.</span><span class="sxs-lookup"><span data-stu-id="60230-108">Otherwise, you might invoke your handler for cases where the mouse wheel delta was so small that any UI that is tied to the mouse wheel movement would not update.</span></span> <span data-ttu-id="60230-109">Exactamente cómo implementar el comportamiento de umbral en un controlador y cuál debe ser ese umbral es completamente específico de la implementación.</span><span class="sxs-lookup"><span data-stu-id="60230-109">Exactly how you implement the threshold behavior in a handler and what that threshold should be is entirely implementation-specific.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60230-110">En el ejemplo siguiente se mueve una <xref:System.Windows.Controls.TextBox> superior si la rueda del mouse <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> es positivo y mueve el <xref:System.Windows.Controls.TextBox> desplegable si la rueda del mouse <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> es negativo.</span><span class="sxs-lookup"><span data-stu-id="60230-110">The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is negative.</span></span> <span data-ttu-id="60230-111">El <xref:System.Windows.Controls.TextBox> se adjunta a un <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="60230-111">The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
    </remarks>
    <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseWheelEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mouse As MouseDevice, timestamp As Integer, delta As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseWheelEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, int delta);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseWheelEventArgs : System.Windows.Input.MouseDevice * int * int -&gt; System.Windows.Input.MouseWheelEventArgs" Usage="new System.Windows.Input.MouseWheelEventArgs (mouse, timestamp, delta)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mouse"><span data-ttu-id="60230-112">Dispositivo de mouse asociado a este evento.</span><span class="sxs-lookup"><span data-stu-id="60230-112">The mouse device associated with this event.</span></span></param>
        <param name="timestamp"><span data-ttu-id="60230-113">Hora a la que se produjo la entrada.</span><span class="sxs-lookup"><span data-stu-id="60230-113">The time when the input occurred.</span></span></param>
        <param name="delta"><span data-ttu-id="60230-114">Medida en que ha cambiado la rueda.</span><span class="sxs-lookup"><span data-stu-id="60230-114">The amount the wheel has changed.</span></span></param>
        <summary><span data-ttu-id="60230-115">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.MouseWheelEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="60230-115">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public int Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delta" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseWheelEventArgs.Delta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Delta As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delta { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Delta : int" Usage="System.Windows.Input.MouseWheelEventArgs.Delta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60230-116">Obtiene un valor que indica la medida en que ha cambiado la rueda del mouse.</span><span class="sxs-lookup"><span data-stu-id="60230-116">Gets a value that indicates the amount that the mouse wheel has changed.</span></span></summary>
        <value><span data-ttu-id="60230-117">Medida en que ha cambiado la rueda.</span><span class="sxs-lookup"><span data-stu-id="60230-117">The amount the wheel has changed.</span></span> <span data-ttu-id="60230-118">Este valor es positivo si la rueda del mouse gira hacia arriba (alejándose del usuario) y es negativo si la rueda del mouse gira hacia abajo (hacia el usuario).</span><span class="sxs-lookup"><span data-stu-id="60230-118">This value is positive if the mouse wheel is rotated in an upward direction (away from the user) or negative if the mouse wheel is rotated in a downward direction (toward the user).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60230-119">Los intervalos superiores e inferiores efectivos de este valor potencialmente proceden de las implementaciones de dispositivo u otros llamadores que provocó el evento y, por lo tanto, no están definidos.</span><span class="sxs-lookup"><span data-stu-id="60230-119">The effective upper and lower ranges of this value potentially come from device implementations or other callers that raised the event, and are therefore not defined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60230-120">En el ejemplo siguiente se mueve una <xref:System.Windows.Controls.TextBox> superior si la rueda del mouse <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> es positivo y mueve el <xref:System.Windows.Controls.TextBox> desplegable si la rueda del mouse <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> es negativo.</span><span class="sxs-lookup"><span data-stu-id="60230-120">The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is negative.</span></span> <span data-ttu-id="60230-121">El <xref:System.Windows.Controls.TextBox> se adjunta a un <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="60230-121">The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="mouseWheelEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler"><span data-ttu-id="60230-122">Controlador genérico al que se va a llamar de una forma específica del tipo.</span><span class="sxs-lookup"><span data-stu-id="60230-122">The generic handler to call in a type-specific way.</span></span></param>
        <param name="genericTarget"><span data-ttu-id="60230-123">Destino en el que se va a llamar al controlador.</span><span class="sxs-lookup"><span data-stu-id="60230-123">The target to call the handler on.</span></span></param>
        <summary><span data-ttu-id="60230-124">Invoca los controladores de eventos de una manera específica del tipo, lo que puede aumentar la eficacia del sistema de eventos.</span><span class="sxs-lookup"><span data-stu-id="60230-124">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60230-125">Esta implementación convierte el controlador genérico como un <xref:System.Windows.Input.MouseWheelEventHandler> y, a continuación, lo invoca.</span><span class="sxs-lookup"><span data-stu-id="60230-125">This implementation casts the generic handler as a <xref:System.Windows.Input.MouseWheelEventHandler> and then invokes it.</span></span> <span data-ttu-id="60230-126">Para obtener más información sobre este modelo de implementación y las razones para ello, consulte <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> y [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="60230-126">For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
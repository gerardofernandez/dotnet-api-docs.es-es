<Type Name="ICommandSource" FullName="System.Windows.Input.ICommandSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2cc671612548463db8b444d52a8d84986b73927" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37505176" /></Metadata><TypeSignature Language="C#" Value="public interface ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommandSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandSource" />
  <TypeSignature Language="F#" Value="type ICommandSource = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="906e9-101">Define un objeto que sabe cómo invocar un comando.</span><span class="sxs-lookup"><span data-stu-id="906e9-101">Defines an object that knows how to invoke a command.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="906e9-102">El origen del comando define cómo se invoca un comando por ese objeto concreto.</span><span class="sxs-lookup"><span data-stu-id="906e9-102">The command source defines how a command is invoked by that particular object.</span></span>  <span data-ttu-id="906e9-103">Por ejemplo, si un <xref:System.Windows.Controls.Button> está asociado con un comando, el comando se invoca cuando el <xref:System.Windows.Controls.Button> se hace clic en.</span><span class="sxs-lookup"><span data-stu-id="906e9-103">For example, if a <xref:System.Windows.Controls.Button> is associated with a command, the command is invoked when the <xref:System.Windows.Controls.Button> is clicked.</span></span>  
  
 <span data-ttu-id="906e9-104">Un origen de comando normalmente se deshabilitará si no se puede ejecutar el comando que está asociado en el destino del comando actual.</span><span class="sxs-lookup"><span data-stu-id="906e9-104">A command source will normally disable itself if the command it is associated with cannot execute on the current command target.</span></span>  <span data-ttu-id="906e9-105">Por ejemplo, un <xref:System.Windows.Controls.MenuItem> asociado con el <xref:System.Windows.Input.ApplicationCommands.Paste%2A> comando se deshabilitará cuando el <xref:System.Windows.Input.ApplicationCommands.Paste%2A> no se puede ejecutar el comando en el destino del comando actual.</span><span class="sxs-lookup"><span data-stu-id="906e9-105">For example, a <xref:System.Windows.Controls.MenuItem> associated with the <xref:System.Windows.Input.ApplicationCommands.Paste%2A> command will gray itself out when the <xref:System.Windows.Input.ApplicationCommands.Paste%2A> command cannot execute on the current command target.</span></span>  
  
 <span data-ttu-id="906e9-106">Normalmente, un origen de comando escuchará el <xref:System.Windows.Input.ICommand.CanExecuteChanged> eventos en el comando.</span><span class="sxs-lookup"><span data-stu-id="906e9-106">Normally, a command source will listen to the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event on the command.</span></span>  <span data-ttu-id="906e9-107">Esto informa al origen del comando cuando cambian las condiciones en el destino del comando, como la pérdida de foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="906e9-107">This informs the command source when conditions change on the command target, such as loss of keyboard focus.</span></span>  <span data-ttu-id="906e9-108">El origen del comando, a continuación, puede consultar el comando mediante el <xref:System.Windows.Input.ICommand.CanExecute%2A> método.</span><span class="sxs-lookup"><span data-stu-id="906e9-108">The command source can then query the command using the <xref:System.Windows.Input.ICommand.CanExecute%2A> method.</span></span>  
  
 <span data-ttu-id="906e9-109">Algunas de las clases en [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] que implementan <xref:System.Windows.Input.ICommandSource> son: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, y <xref:System.Windows.Documents.Hyperlink>.</span><span class="sxs-lookup"><span data-stu-id="906e9-109">Some of the classes in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that implement <xref:System.Windows.Input.ICommandSource> are: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, and <xref:System.Windows.Documents.Hyperlink>.</span></span>  
  
 <span data-ttu-id="906e9-110">En el sistema, de comandos de Windows Presentation Foundation la <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propiedad en un <xref:System.Windows.Input.ICommandSource> solo es aplicable cuando la <xref:System.Windows.Input.ICommand> es un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="906e9-110">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on a <xref:System.Windows.Input.ICommandSource> is only applicable when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="906e9-111">Si el <xref:System.Windows.Input.InputBinding.CommandTarget%2A> se establece en un <xref:System.Windows.Input.ICommandSource> y el comando correspondiente no es un <xref:System.Windows.Input.RoutedCommand>, se omite el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="906e9-111">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on a <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.ICommand" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand" Usage="System.Windows.Input.ICommandSource.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="906e9-112">Obtiene el comando que se ejecutará cuando se invoque el origen del comando.</span><span class="sxs-lookup"><span data-stu-id="906e9-112">Gets the command that will be executed when the command source is invoked.</span></span></summary>
        <value><span data-ttu-id="906e9-113">Comando que se ejecutará cuando se invoque el origen del comando.</span><span class="sxs-lookup"><span data-stu-id="906e9-113">The command that will be executed when the command source is invoked.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj" Usage="System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="906e9-114">Representa un valor de datos definido por el usuario que se puede pasar al comando cuando se ejecuta.</span><span class="sxs-lookup"><span data-stu-id="906e9-114">Represents a user defined data value that can be passed to the command when it is executed.</span></span></summary>
        <value><span data-ttu-id="906e9-115">Datos específicos del comando.</span><span class="sxs-lookup"><span data-stu-id="906e9-115">The command specific data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="906e9-116">Normalmente, el <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> se utiliza para pasar información específica al comando cuando se ejecuta.</span><span class="sxs-lookup"><span data-stu-id="906e9-116">Normally, the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> is used to pass specific information to the command when it is executed.</span></span>  <span data-ttu-id="906e9-117">El tipo de datos se define mediante el comando.</span><span class="sxs-lookup"><span data-stu-id="906e9-117">The type of the data is defined by the command.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement" Usage="System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="906e9-118">El objeto en el que se ejecuta el comando.</span><span class="sxs-lookup"><span data-stu-id="906e9-118">The object that the command is being executed on.</span></span></summary>
        <value><span data-ttu-id="906e9-119">El objeto en el que se ejecuta el comando.</span><span class="sxs-lookup"><span data-stu-id="906e9-119">The object that the command is being executed on.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="906e9-120">En el sistema, de comandos de Windows Presentation Foundation la <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propiedad en un <xref:System.Windows.Input.ICommandSource> solo es aplicable cuando la <xref:System.Windows.Input.ICommand> es un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="906e9-120">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on a <xref:System.Windows.Input.ICommandSource> is only applicable when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="906e9-121">Si el <xref:System.Windows.Input.InputBinding.CommandTarget%2A> se establece en un <xref:System.Windows.Input.ICommandSource> y el comando correspondiente no es un <xref:System.Windows.Input.RoutedCommand>, se omite el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="906e9-121">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on a <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 <span data-ttu-id="906e9-122">Cuando se usa con un <xref:System.Windows.Input.RoutedCommand>, el destino del comando es el objeto en el que el <xref:System.Windows.Input.CommandManager.Executed> y <xref:System.Windows.Input.CommandManager.CanExecute> se generan eventos.</span><span class="sxs-lookup"><span data-stu-id="906e9-122">When used with a <xref:System.Windows.Input.RoutedCommand>, the command target is the object on which the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised.</span></span> <span data-ttu-id="906e9-123">Si el <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> no está establecida la propiedad, el elemento con foco de teclado se usará como el destino.</span><span class="sxs-lookup"><span data-stu-id="906e9-123">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> property is not set, the element with keyboard focus will be used as the target.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="ConfigurationManager" FullName="System.Configuration.ConfigurationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d91f92c4b242d7fceeaa2cf58c8cc3acdc85852" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66006916" /></Metadata><TypeSignature Language="C#" Value="public static class ConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConfigurationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type ConfigurationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="63dac-101">Proporciona acceso a los archivos de configuración para las aplicaciones cliente.</span><span class="sxs-lookup"><span data-stu-id="63dac-101">Provides access to configuration files for client applications.</span></span> <span data-ttu-id="63dac-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="63dac-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63dac-103">La <xref:System.Configuration.ConfigurationManager> clase le permite al equipo de acceso, la aplicación y la información de configuración de usuario.</span><span class="sxs-lookup"><span data-stu-id="63dac-103">The <xref:System.Configuration.ConfigurationManager> class enables you to access machine, application, and user configuration information.</span></span> <span data-ttu-id="63dac-104">Esta clase reemplaza el <xref:System.Configuration.ConfigurationSettings> (clase), que está en desuso.</span><span class="sxs-lookup"><span data-stu-id="63dac-104">This class replaces the <xref:System.Configuration.ConfigurationSettings> class, which is deprecated.</span></span> <span data-ttu-id="63dac-105">Para aplicaciones web, utilice el <xref:System.Web.Configuration.WebConfigurationManager> clase.</span><span class="sxs-lookup"><span data-stu-id="63dac-105">For web applications, use the <xref:System.Web.Configuration.WebConfigurationManager> class.</span></span>  
  
 <span data-ttu-id="63dac-106">Para usar el <xref:System.Configuration.ConfigurationManager> (clase), el proyecto debe hacer referencia el `System.Configuration` ensamblado.</span><span class="sxs-lookup"><span data-stu-id="63dac-106">To use the <xref:System.Configuration.ConfigurationManager> class, your project must reference the `System.Configuration` assembly.</span></span> <span data-ttu-id="63dac-107">De forma predeterminada, algunas plantillas de proyecto, como aplicación de consola, no haga referencia este ensamblado para debe consultarla manualmente.</span><span class="sxs-lookup"><span data-stu-id="63dac-107">By default, some project templates, like Console Application, do not reference this assembly so you must manually reference it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63dac-108">El nombre y la ubicación del archivo de configuración de aplicación dependen del host de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="63dac-108">The name and location of the application configuration file depend on the application's host.</span></span> <span data-ttu-id="63dac-109">Para obtener más información, consulte [NIB: Los archivos de configuración de aplicación](https://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span><span class="sxs-lookup"><span data-stu-id="63dac-109">For more information, see [NIB: Application Configuration Files](https://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span></span>  
  
 <span data-ttu-id="63dac-110">Puede usar la integrada <xref:System.Configuration> tipos o derivan de ellas para controlar la información de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-110">You can use the built-in <xref:System.Configuration> types or derive from them to handle configuration information.</span></span> <span data-ttu-id="63dac-111">Mediante el uso de estos tipos, puede trabajar directamente con la información de configuración y puede ampliar los archivos de configuración para incluir información personalizada.</span><span class="sxs-lookup"><span data-stu-id="63dac-111">By using these types, you can work directly with configuration information and you can extend configuration files to include custom information.</span></span>  
  
 <span data-ttu-id="63dac-112">La <xref:System.Configuration.ConfigurationManager> clase incluye miembros que permiten realizar las siguientes tareas:</span><span class="sxs-lookup"><span data-stu-id="63dac-112">The <xref:System.Configuration.ConfigurationManager> class includes members that enable you to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="63dac-113">Leer una sección de un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-113">Read a section from a configuration file.</span></span> <span data-ttu-id="63dac-114">Para obtener acceso a información de configuración, llame a la <xref:System.Configuration.ConfigurationManager.GetSection%2A> método.</span><span class="sxs-lookup"><span data-stu-id="63dac-114">To access configuration information, call the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="63dac-115">Para algunas secciones como `appSettings` y `connectionStrings`, utilice el <xref:System.Configuration.ConfigurationManager.AppSettings%2A> y <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> clases.</span><span class="sxs-lookup"><span data-stu-id="63dac-115">For some sections such as `appSettings` and `connectionStrings`, use the <xref:System.Configuration.ConfigurationManager.AppSettings%2A> and <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> classes.</span></span> <span data-ttu-id="63dac-116">Estos miembros realizar operaciones de solo lectura, use una única instancia almacenada en caché de la configuración y están multiproceso tener en cuenta.</span><span class="sxs-lookup"><span data-stu-id="63dac-116">These members perform read-only operations, use a single cached instance of the configuration, and are multithread aware.</span></span>  
  
-   <span data-ttu-id="63dac-117">Leer y escribir archivos de configuración como un todo.</span><span class="sxs-lookup"><span data-stu-id="63dac-117">Read and write configuration files as a whole.</span></span> <span data-ttu-id="63dac-118">La aplicación puede leer y escribir valores de configuración en cualquier nivel, para sí mismo o para otras aplicaciones o equipos, local o remotamente.</span><span class="sxs-lookup"><span data-stu-id="63dac-118">Your application can read and write configuration settings at any level, for itself or for other applications or computers, locally or remotely.</span></span> <span data-ttu-id="63dac-119">Utilice uno de los métodos proporcionados por el <xref:System.Configuration.ConfigurationManager> clase para abrir un archivo de configuración como SampleApp.exe.config. Estos métodos devuelven un <xref:System.Configuration.Configuration> objeto que a su vez expone métodos y propiedades que puede utilizar para trabajar con los archivos de configuración asociada.</span><span class="sxs-lookup"><span data-stu-id="63dac-119">Use one of the methods provided by the <xref:System.Configuration.ConfigurationManager> class to open a configuration file such as SampleApp.exe.config. These methods return a <xref:System.Configuration.Configuration> object that in turn exposes methods and properties you can use to work with the associated configuration files.</span></span> <span data-ttu-id="63dac-120">Los métodos de operaciones de lectura o las operaciones de escritura y creación cada vez que se escribe un archivo de los datos de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-120">The methods perform read or write operations and create the configuration data every time that a file is written.</span></span>  
  
-   <span data-ttu-id="63dac-121">Admite tareas de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-121">Support configuration tasks.</span></span> <span data-ttu-id="63dac-122">Los tipos siguientes se utilizan para admitir diversas tareas de configuración:</span><span class="sxs-lookup"><span data-stu-id="63dac-122">The following types are used to support various configuration tasks:</span></span>  
  
    -   <xref:System.Configuration.SectionInformation>  
  
    -   <xref:System.Configuration.PropertyInformation>  
  
    -   <xref:System.Configuration.PropertyInformationCollection>  
  
    -   <xref:System.Configuration.ElementInformation>  
  
    -   <xref:System.Configuration.ContextInformation>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroup>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroupCollection>  
  
     <span data-ttu-id="63dac-123">Además de trabajar con la información de configuración existente, puede crear y trabajar con elementos de configuración personalizados al extender los tipos de configuración integrados, como el <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, y <xref:System.Configuration.ConfigurationSection> clases.</span><span class="sxs-lookup"><span data-stu-id="63dac-123">In addition to working with existing configuration information, you can create and work with custom configuration elements by extending the built-in configuration types such as the <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, and <xref:System.Configuration.ConfigurationSection> classes.</span></span> <span data-ttu-id="63dac-124">Para obtener un ejemplo de cómo extender un tipo de configuración integrados mediante programación, vea <xref:System.Configuration.ConfigurationSection>.</span><span class="sxs-lookup"><span data-stu-id="63dac-124">For an example of how to extend a built-in configuration type programmatically, see <xref:System.Configuration.ConfigurationSection>.</span></span> <span data-ttu-id="63dac-125">Para obtener un ejemplo de cómo extender un tipo de configuración integrada que utiliza el modelo basado en atributos, vea <xref:System.Configuration.ConfigurationElement>.</span><span class="sxs-lookup"><span data-stu-id="63dac-125">For an example of how to extend a built-in configuration type that uses the attribute-based model, see <xref:System.Configuration.ConfigurationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63dac-126">El primer ejemplo muestra una aplicación de consola simple que lee la configuración de la aplicación, se agrega una nueva configuración y actualiza una configuración existente.</span><span class="sxs-lookup"><span data-stu-id="63dac-126">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="63dac-127">El ejemplo anterior se supone que el proyecto tiene un archivo App.config, tal como se muestra a continuación.</span><span class="sxs-lookup"><span data-stu-id="63dac-127">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 <span data-ttu-id="63dac-128">El ejemplo siguiente muestra cómo utilizar una cadena de conexión para leer los datos de una base de datos.</span><span class="sxs-lookup"><span data-stu-id="63dac-128">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="63dac-129">El ejemplo anterior se supone que el proyecto tiene un archivo App.config, tal como se muestra a continuación.</span><span class="sxs-lookup"><span data-stu-id="63dac-129">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="63dac-130">La <see cref="T:System.Configuration.Configuration" /> clase permite el acceso mediante programación para editar archivos de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-130">The <see cref="T:System.Configuration.Configuration" /> class enables programmatic access for editing configuration files.</span></span> <span data-ttu-id="63dac-131">Usa uno de los métodos Open proporcionados por <see cref="T:System.Configuration.ConfigurationManager" />.</span><span class="sxs-lookup"><span data-stu-id="63dac-131">You use one of the Open methods provided by <see cref="T:System.Configuration.ConfigurationManager" />.</span></span> <span data-ttu-id="63dac-132">Estos métodos devuelven un <see cref="T:System.Configuration.Configuration" /> object, que a su vez proporciona los métodos y propiedades necesarios para controlar los archivos de configuración subyacente.</span><span class="sxs-lookup"><span data-stu-id="63dac-132">These methods return a <see cref="T:System.Configuration.Configuration" /> object, which in turn provides the required methods and properties to handle the underlying configuration files.</span></span> <span data-ttu-id="63dac-133">Puede tener acceso a estos archivos de lectura o escritura.</span><span class="sxs-lookup"><span data-stu-id="63dac-133">You can access these files for reading or writing.</span></span>  
  
<span data-ttu-id="63dac-134">Para leer los archivos de configuración, use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> o <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> para leer información de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-134">To read the configuration files, use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> or <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> to read configuration information.</span></span> <span data-ttu-id="63dac-135">El usuario o proceso que lee debe tener los permisos siguientes:</span><span class="sxs-lookup"><span data-stu-id="63dac-135">The user or process that reads must have the following permissions:</span></span> 
<span data-ttu-id="63dac-136">-Permiso de lectura en el archivo de configuración en el nivel de jerarquía de configuración actual.</span><span class="sxs-lookup"><span data-stu-id="63dac-136">-   Read permission on the configuration file at the current configuration hierarchy level.</span></span>  
  
<span data-ttu-id="63dac-137">-Permisos de lectura en todas las principales de los archivos de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-137">-   Read permissions on all the parent configuration files.</span></span>  
  
<span data-ttu-id="63dac-138">Si la aplicación necesita acceso de solo lectura a su propia configuración, se recomienda usar el <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> método.</span><span class="sxs-lookup"><span data-stu-id="63dac-138">If your application needs read-only access to its own configuration, we recommend that you use the <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> method.</span></span> <span data-ttu-id="63dac-139">Este método proporciona acceso a los valores de configuración almacenada en caché de la aplicación actual, que tiene un rendimiento mejor que la <see cref="T:System.Configuration.Configuration" /> clase.</span><span class="sxs-lookup"><span data-stu-id="63dac-139">This method provides access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.</span></span>  
  
<span data-ttu-id="63dac-140">Para escribir en los archivos de configuración, utilice uno de los <see cref="Overload:System.Configuration.Configuration.Save" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="63dac-140">To write to the configuration files, use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods.</span></span> <span data-ttu-id="63dac-141">El usuario o proceso que escribe debe tener los permisos siguientes:</span><span class="sxs-lookup"><span data-stu-id="63dac-141">The user or process that writes must have the following permissions:</span></span> 
<span data-ttu-id="63dac-142">-Permiso de escritura en el archivo de configuración y el directorio en el nivel de jerarquía de configuración actual.</span><span class="sxs-lookup"><span data-stu-id="63dac-142">-   Write permission on the configuration file and directory at the current configuration hierarchy level.</span></span>  
  
<span data-ttu-id="63dac-143">-Permisos de lectura en todos los archivos de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-143">-   Read permissions on all the configuration files.</span></span></para></block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
    <related type="Article" href="~/docs/framework/configure-apps/index.md"><span data-ttu-id="63dac-144">Archivos de configuración</span><span class="sxs-lookup"><span data-stu-id="63dac-144">Configuration Files</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppSettings : System.Collections.Specialized.NameValueCollection" Usage="System.Configuration.ConfigurationManager.AppSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63dac-145">Obtiene los datos <see cref="T:System.Configuration.AppSettingsSection" /> para la configuración predeterminada de la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="63dac-145">Gets the <see cref="T:System.Configuration.AppSettingsSection" /> data for the current application's default configuration.</span></span></summary>
        <value><span data-ttu-id="63dac-146">Un <see cref="T:System.Collections.Specialized.NameValueCollection" /> objeto que contiene el contenido de la <see cref="T:System.Configuration.AppSettingsSection" /> objeto para la configuración predeterminada de la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="63dac-146">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the contents of the <see cref="T:System.Configuration.AppSettingsSection" /> object for the current application's default configuration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63dac-147">Un <xref:System.Configuration.AppSettingsSection> objeto contiene el contenido del archivo de configuración `appSettings` sección.</span><span class="sxs-lookup"><span data-stu-id="63dac-147">A <xref:System.Configuration.AppSettingsSection> object contains the contents of the configuration file's `appSettings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63dac-148">El primer ejemplo muestra una aplicación de consola simple que lee la configuración de la aplicación, se agrega una nueva configuración y actualiza una configuración existente.</span><span class="sxs-lookup"><span data-stu-id="63dac-148">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="63dac-149">El ejemplo anterior se supone que el proyecto tiene un archivo App.config, tal como se muestra a continuación.</span><span class="sxs-lookup"><span data-stu-id="63dac-149">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="63dac-150">No se pudo recuperar un objeto <see cref="T:System.Collections.Specialized.NameValueCollection" /> con los datos de configuración de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="63dac-150">Could not retrieve a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object with the application settings data.</span></span></exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionStrings : System.Configuration.ConnectionStringSettingsCollection" Usage="System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63dac-151">Obtiene los datos <see cref="T:System.Configuration.ConnectionStringsSection" /> para la configuración predeterminada de la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="63dac-151">Gets the <see cref="T:System.Configuration.ConnectionStringsSection" /> data for the current application's default configuration.</span></span></summary>
        <value><span data-ttu-id="63dac-152">Un <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> objeto que contiene el contenido de la <see cref="T:System.Configuration.ConnectionStringsSection" /> objeto para la configuración predeterminada de la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="63dac-152">A <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object that contains the contents of the <see cref="T:System.Configuration.ConnectionStringsSection" /> object for the current application's default configuration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63dac-153">Un <xref:System.Configuration.ConnectionStringsSection> objeto contiene el contenido del archivo de configuración `connectionStrings` sección.</span><span class="sxs-lookup"><span data-stu-id="63dac-153">A <xref:System.Configuration.ConnectionStringsSection> object contains the contents of the configuration file's `connectionStrings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63dac-154">El ejemplo siguiente muestra cómo utilizar una cadena de conexión para leer los datos de una base de datos.</span><span class="sxs-lookup"><span data-stu-id="63dac-154">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="63dac-155">El ejemplo anterior se supone que el proyecto tiene un archivo App.config, tal como se muestra a continuación.</span><span class="sxs-lookup"><span data-stu-id="63dac-155">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="63dac-156">No se pudo recuperar un objeto <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</span><span class="sxs-lookup"><span data-stu-id="63dac-156">Could not retrieve a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</span></span></exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member GetSection : string -&gt; obj" Usage="System.Configuration.ConfigurationManager.GetSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName"><span data-ttu-id="63dac-157">Ruta de acceso y nombre de la sección de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-157">The configuration section path and name.</span></span> <span data-ttu-id="63dac-158">Los nombres de los nodos están separados por barras diagonales, por ejemplo "system.net/mailSettings/smtp".</span><span class="sxs-lookup"><span data-stu-id="63dac-158">Node names are separated by forward slashes, for example "system.net/mailSettings/smtp".</span></span></param>
        <summary><span data-ttu-id="63dac-159">Recupera una sección de configuración especificada para la configuración predeterminada de la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="63dac-159">Retrieves a specified configuration section for the current application's default configuration.</span></span></summary>
        <returns><span data-ttu-id="63dac-160">Objeto <see cref="T:System.Configuration.ConfigurationSection" /> especificado o <see langword="null" /> si la sección no existe.</span><span class="sxs-lookup"><span data-stu-id="63dac-160">The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or <see langword="null" /> if the section does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63dac-161">Para las aplicaciones cliente, este método recupera un archivo de configuración obtenido mediante la combinación del archivo de configuración de aplicación, el archivo de configuración de usuario local y el archivo de configuración móvil.</span><span class="sxs-lookup"><span data-stu-id="63dac-161">For client applications, this method retrieves a configuration file obtained by merging the application configuration file, the local user configuration file, and the roaming configuration file.</span></span>  
  
 <span data-ttu-id="63dac-162">El <xref:System.Configuration.ConfigurationManager.GetSection%2A> método tiene acceso a información de configuración de tiempo de ejecución que no puede cambiar.</span><span class="sxs-lookup"><span data-stu-id="63dac-162">The <xref:System.Configuration.ConfigurationManager.GetSection%2A> method accesses run-time configuration information that it cannot change.</span></span> <span data-ttu-id="63dac-163">Para cambiar la configuración, utilice el <xref:System.Configuration.Configuration.GetSection%2A> método en el archivo de configuración que se puede obtener mediante uno de los siguientes métodos de Open:</span><span class="sxs-lookup"><span data-stu-id="63dac-163">To change the configuration, you use the <xref:System.Configuration.Configuration.GetSection%2A> method on the configuration file that you obtain by using one of the following Open methods:</span></span>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
   
  
## Examples  
 <span data-ttu-id="63dac-164">En el siguiente ejemplo, se muestra cómo utilizar el método <xref:System.Configuration.ConfigurationManager.GetSection%2A>.</span><span class="sxs-lookup"><span data-stu-id="63dac-164">The following example shows how to use the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="63dac-165">El ejemplo forma parte de un ejemplo más extenso proporcionado para el <xref:System.Configuration.ConfigurationManager> clase.</span><span class="sxs-lookup"><span data-stu-id="63dac-165">The example is part of a larger example that is provided for the <xref:System.Configuration.ConfigurationManager> class.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="63dac-166">No se pudo cargar un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-166">A configuration file could not be loaded.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="63dac-167">Debe convertir el valor devuelto al tipo de configuración esperado.</span><span class="sxs-lookup"><span data-stu-id="63dac-167">You must cast the return value to the expected configuration type.</span></span> <span data-ttu-id="63dac-168">Para evitar posibles excepciones de conversión, debe usar una operación de conversión condicional, como el <see langword="as" /> operador en C# o [TryCast](~/docs/visual-basic/language-reference/operators/trycast-operator.md) función en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="63dac-168">To avoid possible casting exceptions, you should use a conditional casting operation such as the <see langword="as" /> operator in C# or the [TryCast](~/docs/visual-basic/language-reference/operators/trycast-operator.md) function in Visual Basic.</span></span></para></block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63dac-169">Abre el archivo de configuración de cliente especificado como un objeto <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="63dac-169">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="F#" Value="static member OpenExeConfiguration : System.Configuration.ConfigurationUserLevel -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenExeConfiguration userLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="userLevel"><span data-ttu-id="63dac-170">Enumeración <see cref="T:System.Configuration.ConfigurationUserLevel" /> para la que se está abriendo la configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-170">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> for which you are opening the configuration.</span></span></param>
        <summary><span data-ttu-id="63dac-171">Abre el archivo de configuración para la aplicación actual como un objeto <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="63dac-171">Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="63dac-172">Objeto <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="63dac-172">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63dac-173">Las aplicaciones cliente utilizan una configuración global que se aplica a todos los usuarios, configuraciones independientes que se aplican a usuarios individuales y las configuraciones que se aplican a los usuarios móviles.</span><span class="sxs-lookup"><span data-stu-id="63dac-173">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="63dac-174">El `userLevel` parámetro determina la ubicación del archivo de configuración que se está abriendo indicando si no tiene ningún nivel de usuario (el archivo de configuración está en el mismo directorio que la aplicación) o tiene un nivel de usuario (el archivo de configuración está en un configuración de la ruta de la aplicación determinada el nivel de usuario).</span><span class="sxs-lookup"><span data-stu-id="63dac-174">The `userLevel` parameter determines the location of the configuration file being opened by indicating whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level).</span></span>  
  
 <span data-ttu-id="63dac-175">Especifique la configuración que desee obtener pasando uno de los siguientes valores para `userLevel`:</span><span class="sxs-lookup"><span data-stu-id="63dac-175">Specify which configuration to get by passing one of the following values for `userLevel`:</span></span>  
  
-   <span data-ttu-id="63dac-176">Para obtener el <xref:System.Configuration.Configuration> conjunto de objetos que se aplica a todos los usuarios, `userLevel` a <xref:System.Configuration.ConfigurationUserLevel.None>.</span><span class="sxs-lookup"><span data-stu-id="63dac-176">To get the <xref:System.Configuration.Configuration> object that applies to all users, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.None>.</span></span>  
  
-   <span data-ttu-id="63dac-177">Para obtener la variable local <xref:System.Configuration.Configuration> conjunto de objetos que se aplica al usuario actual, `userLevel` a <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span><span class="sxs-lookup"><span data-stu-id="63dac-177">To get the local <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span></span>  
  
-   <span data-ttu-id="63dac-178">Para obtener la itinerancia <xref:System.Configuration.Configuration> conjunto de objetos que se aplica al usuario actual, `userLevel` a <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span><span class="sxs-lookup"><span data-stu-id="63dac-178">To get the roaming <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="63dac-179">Para obtener el <xref:System.Configuration.Configuration> de objeto para un recurso, el código debe tener permisos en todos los archivos de configuración desde el que hereda la configuración de lectura.</span><span class="sxs-lookup"><span data-stu-id="63dac-179">To get the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="63dac-180">Para actualizar un archivo de configuración, el código además debe tener permisos de escritura para el archivo de configuración y el directorio en el que existe.</span><span class="sxs-lookup"><span data-stu-id="63dac-180">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63dac-181">En el ejemplo de código siguiente, se muestra cómo se utiliza el método <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>.</span><span class="sxs-lookup"><span data-stu-id="63dac-181">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#5)]
 [!code-vb[System.Configuration.ConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="63dac-182">No se pudo cargar un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-182">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (string exePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(string exePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (exePath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::String ^ exePath);" />
      <MemberSignature Language="F#" Value="static member OpenExeConfiguration : string -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenExeConfiguration exePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exePath"><span data-ttu-id="63dac-183">Ruta de acceso del archivo ejecutable (exe).</span><span class="sxs-lookup"><span data-stu-id="63dac-183">The path of the executable (exe) file.</span></span></param>
        <summary><span data-ttu-id="63dac-184">Abre el archivo de configuración de cliente especificado como un objeto <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="63dac-184">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="63dac-185">Objeto <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="63dac-185">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63dac-186">Las aplicaciones cliente utilizan una configuración global que se aplica a todos los usuarios, configuraciones independientes que se aplican a usuarios individuales y las configuraciones que se aplican a los usuarios móviles.</span><span class="sxs-lookup"><span data-stu-id="63dac-186">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="63dac-187">El `userLevel` valor determina la ubicación del archivo de configuración que se está abriendo.</span><span class="sxs-lookup"><span data-stu-id="63dac-187">The `userLevel` value determines the location of the configuration file being opened.</span></span> <span data-ttu-id="63dac-188">Indica si no tiene el nivel de usuario (el archivo de configuración está en el mismo directorio que la aplicación) o si tiene un nivel por cada usuario (el archivo de configuración está en una ruta de acceso de configuración de aplicación determinado por el tipo de nivel de usuario).</span><span class="sxs-lookup"><span data-stu-id="63dac-188">It indicates whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level type.).</span></span>  
  
 <span data-ttu-id="63dac-189">Llamar a esta sobrecarga del método es equivalente a llamar a la <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> sobrecarga con el `preLoad` parámetro establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="63dac-189">Calling this method overload is equivalent to calling the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> overload with the `preLoad` parameter set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63dac-190">En el ejemplo de código siguiente, se muestra cómo se utiliza el método <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>.</span><span class="sxs-lookup"><span data-stu-id="63dac-190">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#6)]
 [!code-vb[System.Configuration.ConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="63dac-191">No se pudo cargar un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-191">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : unit -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMachineConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63dac-192">Abre el archivo de configuración del equipo como un objeto <see cref="T:System.Configuration.Configuration" /> en el equipo actual.</span><span class="sxs-lookup"><span data-stu-id="63dac-192">Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="63dac-193">Objeto <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="63dac-193">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63dac-194">Opciones de configuración de la máquina se aplican a todo el equipo y todas las aplicaciones que residen en él, a menos que se invalide para la aplicación local.</span><span class="sxs-lookup"><span data-stu-id="63dac-194">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="63dac-195">Opciones de configuración de la máquina se leen desde el archivo Machine.config de la versión de .NET Framework que se está ejecutando.</span><span class="sxs-lookup"><span data-stu-id="63dac-195">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="63dac-196">El archivo Machine.config se encuentra en el subdirectorio siguiente:</span><span class="sxs-lookup"><span data-stu-id="63dac-196">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="63dac-197">*% windir %* \Microsoft.NET\Framework\\*versión*\config</span><span class="sxs-lookup"><span data-stu-id="63dac-197">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63dac-198">Para obtener el <xref:System.Configuration.Configuration> de objeto para un recurso, el código debe tener permisos en todos los archivos de configuración desde el que hereda la configuración de lectura.</span><span class="sxs-lookup"><span data-stu-id="63dac-198">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="63dac-199">Para actualizar un archivo de configuración, el código además debe tener permisos de escritura para el archivo de configuración y el directorio en el que existe.</span><span class="sxs-lookup"><span data-stu-id="63dac-199">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="63dac-200">No es posible tener acceso al archivo Machine.config para otras versiones de .NET Framework que pudiera estar instalado en el equipo.</span><span class="sxs-lookup"><span data-stu-id="63dac-200">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63dac-201">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> método para obtener todas las secciones contenidas en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-201">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> method to obtain all sections that are contained in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="63dac-202">No se pudo cargar un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-202">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63dac-203">Abre el archivo de configuración de cliente especificado como un objeto <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="63dac-203">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="F#" Value="static member OpenMappedExeConfiguration : System.Configuration.ExeConfigurationFileMap * System.Configuration.ConfigurationUserLevel -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedExeConfiguration (fileMap, userLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="63dac-204">Objeto <see cref="T:System.Configuration.ExeConfigurationFileMap" /> que hace referencia al archivo de configuración que se va a utilizar en lugar del archivo de configuración predeterminada de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="63dac-204">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span></span></param>
        <param name="userLevel"><span data-ttu-id="63dac-205">Objeto <see cref="T:System.Configuration.ConfigurationUserLevel" /> para el que se abre la configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-205">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span></span></param>
        <summary><span data-ttu-id="63dac-206">Abre el archivo de configuración de cliente especificado como un objeto <see cref="T:System.Configuration.Configuration" /> que utiliza la asignación de archivos y el nivel de usuario indicados.</span><span class="sxs-lookup"><span data-stu-id="63dac-206">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping and user level.</span></span></summary>
        <returns><span data-ttu-id="63dac-207">Objeto de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-207">The configuration object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63dac-208">La <xref:System.Configuration.ConfigurationUserLevel> objeto determina la ubicación del archivo de configuración que se está abriendo.</span><span class="sxs-lookup"><span data-stu-id="63dac-208">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file being opened.</span></span> <span data-ttu-id="63dac-209">Indica si el archivo tiene el nivel de usuario (el archivo de configuración está en el mismo directorio que la aplicación) o tiene un nivel de usuario (el archivo de configuración está en una ruta de acceso de configuración de aplicación determinado por `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="63dac-209">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63dac-210">Para obtener el <xref:System.Configuration.Configuration> de objeto para un recurso, el código debe tener permisos en todos los archivos de configuración desde el que hereda la configuración de lectura.</span><span class="sxs-lookup"><span data-stu-id="63dac-210">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="63dac-211">Para actualizar un archivo de configuración, el código además debe tener permisos de escritura para el archivo de configuración y el directorio en el que existe.</span><span class="sxs-lookup"><span data-stu-id="63dac-211">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63dac-212">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> método para obtener todas las secciones contenidas en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-212">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> method to obtain all sections that are contained by the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#9)]
 [!code-vb[System.Configuration.ConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="63dac-213">No se pudo cargar un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-213">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel, bool preLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel, preLoad As Boolean) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="F#" Value="static member OpenMappedExeConfiguration : System.Configuration.ExeConfigurationFileMap * System.Configuration.ConfigurationUserLevel * bool -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedExeConfiguration (fileMap, userLevel, preLoad)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preLoad" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="63dac-214">Objeto <see cref="T:System.Configuration.ExeConfigurationFileMap" /> que hace referencia al archivo de configuración que se va a utilizar en lugar del archivo de configuración de la aplicación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="63dac-214">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references the configuration file to use instead of the default application configuration file.</span></span></param>
        <param name="userLevel"><span data-ttu-id="63dac-215">Objeto <see cref="T:System.Configuration.ConfigurationUserLevel" /> para el que se abre la configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-215">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span></span></param>
        <param name="preLoad"><span data-ttu-id="63dac-216"><see langword="true" /> para cargar previamente todos los grupos de secciones y secciones; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63dac-216"><see langword="true" /> to preload all section groups and sections; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="63dac-217">Abre el archivo de configuración de cliente especificado como un objeto <see cref="T:System.Configuration.Configuration" /> que usa la asignación de archivos, nivel de usuario y opción de carga previa.</span><span class="sxs-lookup"><span data-stu-id="63dac-217">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping, user level, and preload option.</span></span></summary>
        <returns><span data-ttu-id="63dac-218">Objeto de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-218">The configuration object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63dac-219">La <xref:System.Configuration.ConfigurationUserLevel> objeto determina la ubicación del archivo de configuración que se está abriendo.</span><span class="sxs-lookup"><span data-stu-id="63dac-219">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file that is being opened.</span></span> <span data-ttu-id="63dac-220">Indica si el archivo tiene el nivel de usuario (el archivo de configuración está en el mismo directorio que la aplicación) o tiene un nivel de usuario (el archivo de configuración está en una ruta de acceso de configuración de aplicación que viene determinada por `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="63dac-220">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path that is determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63dac-221">Para obtener el <xref:System.Configuration.Configuration> de objeto para un recurso, el código debe tener permisos en todos los archivos de configuración desde el que hereda la configuración de lectura.</span><span class="sxs-lookup"><span data-stu-id="63dac-221">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="63dac-222">Para actualizar un archivo de configuración, el código además debe tener permisos de escritura para el archivo de configuración y el directorio en el que existe.</span><span class="sxs-lookup"><span data-stu-id="63dac-222">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
 <span data-ttu-id="63dac-223">Para obtener un ejemplo de código, vea el <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> sobrecargar.</span><span class="sxs-lookup"><span data-stu-id="63dac-223">For a code example, see the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="63dac-224">No se pudo cargar un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-224">A configuration file could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberSignature Language="F#" Value="static member OpenMappedMachineConfiguration : System.Configuration.ConfigurationFileMap -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration fileMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="63dac-225">Objeto <see cref="T:System.Configuration.ExeConfigurationFileMap" /> que hace referencia al archivo de configuración que se va a utilizar en lugar del archivo de configuración predeterminada de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="63dac-225">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span></span></param>
        <summary><span data-ttu-id="63dac-226">Abre el archivo de configuración del equipo como un objeto <see cref="T:System.Configuration.Configuration" /> que utiliza la asignación de archivos especificada.</span><span class="sxs-lookup"><span data-stu-id="63dac-226">Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping.</span></span></summary>
        <returns><span data-ttu-id="63dac-227">Objeto <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="63dac-227">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63dac-228">Opciones de configuración de la máquina se aplican a todo el equipo y todas las aplicaciones que residen en él, a menos que se invalide para la aplicación local.</span><span class="sxs-lookup"><span data-stu-id="63dac-228">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="63dac-229">Opciones de configuración de la máquina se leen desde el archivo Machine.config de la versión de .NET Framework que se está ejecutando.</span><span class="sxs-lookup"><span data-stu-id="63dac-229">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="63dac-230">El archivo Machine.config se encuentra en el subdirectorio siguiente:</span><span class="sxs-lookup"><span data-stu-id="63dac-230">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="63dac-231">*% windir %* \Microsoft.NET\Framework\\*versión*\config</span><span class="sxs-lookup"><span data-stu-id="63dac-231">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63dac-232">Para obtener el <xref:System.Configuration.Configuration> de objeto para un recurso, el código debe tener permisos en todos los archivos de configuración desde el que hereda la configuración de lectura.</span><span class="sxs-lookup"><span data-stu-id="63dac-232">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="63dac-233">Para actualizar un archivo de configuración, el código además debe tener permisos de escritura para el archivo de configuración y el directorio en el que existe.</span><span class="sxs-lookup"><span data-stu-id="63dac-233">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="63dac-234">No es posible tener acceso al archivo Machine.config para otras versiones de .NET Framework que pudiera estar instalado en el equipo.</span><span class="sxs-lookup"><span data-stu-id="63dac-234">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63dac-235">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> método para obtener todas las secciones del archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-235">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> method to obtain all sections in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="63dac-236">No se pudo cargar un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="63dac-236">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationFileMap" />
      </Docs>
    </Member>
    <Member MemberName="RefreshSection">
      <MemberSignature Language="C#" Value="public static void RefreshSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RefreshSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RefreshSection (sectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RefreshSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member RefreshSection : string -&gt; unit" Usage="System.Configuration.ConfigurationManager.RefreshSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName"><span data-ttu-id="63dac-237">Nombre de la sección de configuración o ruta de acceso y nombre de sección de configuración de la sección que se va a actualizar.</span><span class="sxs-lookup"><span data-stu-id="63dac-237">The configuration section name or the configuration path and section name of the section to refresh.</span></span></param>
        <summary><span data-ttu-id="63dac-238">Actualiza la sección con nombre para que se vuelva a leer desde el disco la próxima vez que se recupere.</span><span class="sxs-lookup"><span data-stu-id="63dac-238">Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63dac-239">Este método invalida la caché para la sección de configuración especificado sin que afecte a otras secciones.</span><span class="sxs-lookup"><span data-stu-id="63dac-239">This method invalidates the cache for the specified configuration section without affecting other sections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63dac-240">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> método para actualizar la sección de configuración de la configuración de aplicación.</span><span class="sxs-lookup"><span data-stu-id="63dac-240">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> method to refresh the application settings configuration section.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
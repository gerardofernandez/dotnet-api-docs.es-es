<Type Name="CallbackValidator" FullName="System.Configuration.CallbackValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="efb7bc5d58887ee91a63d396dbbe2f13e2f4cff8" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49156424" /></Metadata><TypeSignature Language="C#" Value="public sealed class CallbackValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CallbackValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.CallbackValidator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CallbackValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallbackValidator sealed : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type CallbackValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c6cd8-101">Proporciona la validación dinámica de un objeto.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-101">Provides dynamic validation of an object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6cd8-102">Para usar esta clase, deberá implementar un <xref:System.Configuration.ValidatorCallback> delegado para el tipo de objeto que desea validar.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-102">To use this class, you need to implement a <xref:System.Configuration.ValidatorCallback> delegate for the type of object you want to validate.</span></span> <span data-ttu-id="c6cd8-103">Cuando crea una instancia de esta clase, se pasa el tipo de objeto y una referencia al delegado.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-103">When you instantiate this class, you pass in the object type and a reference to the delegate.</span></span> <span data-ttu-id="c6cd8-104">A continuación, puede llamar a <xref:System.Configuration.CallbackValidator.CanValidate%2A> para determinar si un objeto es del tipo correcto o <xref:System.Configuration.CallbackValidator.Validate%2A> para ejecutar el delegado en el objeto.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-104">You can then call <xref:System.Configuration.CallbackValidator.CanValidate%2A> to determine if an object is the correct type or <xref:System.Configuration.CallbackValidator.Validate%2A> to execute the delegate on the object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackValidator (Type type, System.Configuration.ValidatorCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Configuration.ValidatorCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackValidator(Type ^ type, System::Configuration::ValidatorCallback ^ callback);" />
      <MemberSignature Language="F#" Value="new System.Configuration.CallbackValidator : Type * System.Configuration.ValidatorCallback -&gt; System.Configuration.CallbackValidator" Usage="new System.Configuration.CallbackValidator (type, callback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="callback" Type="System.Configuration.ValidatorCallback" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="c6cd8-105">Tipo de objeto que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-105">The type of object that will be validated.</span></span></param>
        <param name="callback"><span data-ttu-id="c6cd8-106"><see cref="T:System.Configuration.ValidatorCallback" /> utilizado como delegado.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-106">The <see cref="T:System.Configuration.ValidatorCallback" /> used as the delegate.</span></span></param>
        <summary><span data-ttu-id="c6cd8-107">Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.CallbackValidator" />.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-107">Initializes a new instance of the <see cref="T:System.Configuration.CallbackValidator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c6cd8-108">El valor de <paramref name="type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-108"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.CallbackValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="callbackValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="c6cd8-109">Tipo del objeto.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-109">The type of object.</span></span></param>
        <summary><span data-ttu-id="c6cd8-110">Determina si se puede validar el tipo del objeto.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-110">Determines whether the type of the object can be validated.</span></span></summary>
        <returns><span data-ttu-id="c6cd8-111"><see langword="true" /> si el parámetro <see langword="type" /> coincide con el tipo utilizado como primer parámetro al crear una instancia de <see cref="T:System.Configuration.CallbackValidator" />; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-111"><see langword="true" /> if the <see langword="type" /> parameter matches the type used as the first parameter when creating an instance of <see cref="T:System.Configuration.CallbackValidator" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.CallbackValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="callbackValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c6cd8-112">Valor de un objeto.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-112">The value of an object.</span></span></param>
        <summary><span data-ttu-id="c6cd8-113">Determina si el valor de un objeto es válido.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-113">Determines whether the value of an object is valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6cd8-114">La <xref:System.Configuration.CallbackValidator> clase contiene el tipo y el delegado necesario para validar un objeto.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-114">The <xref:System.Configuration.CallbackValidator> class contains the type and delegate necessary to validate an object.</span></span> <span data-ttu-id="c6cd8-115">El tipo y el delegado se establecen cuando una instancia de la <xref:System.Configuration.CallbackValidator> se crea la clase.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-115">The type and delegate are established when an instance of the <xref:System.Configuration.CallbackValidator> class is created.</span></span> <span data-ttu-id="c6cd8-116">Objeto que se va a validar se pasa como un parámetro de la <xref:System.Configuration.CallbackValidator.Validate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c6cd8-116">The object to validate is passed as a parameter of the <xref:System.Configuration.CallbackValidator.Validate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
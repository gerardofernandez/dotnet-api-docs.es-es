<Type Name="ObjectCache" FullName="System.Runtime.Caching.ObjectCache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1a611d24c5fb21ef987889fe68369933899ab53b" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52733855" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ObjectCache : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectCache extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ObjectCache" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectCache&#xA;Implements IEnumerable(Of KeyValuePair(Of String, Object))" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectCache abstract : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;" />
  <TypeSignature Language="F#" Value="type ObjectCache = class&#xA;    interface seq&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="56cfc-101">Representa una memoria caché de objetos, y proporciona los métodos y las propiedades base para tener acceso a la memoria caché de objetos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="56cfc-101">Represents an object cache and provides the base methods and properties for accessing the object cache.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-102">El <xref:System.Runtime.Caching.ObjectCache> tipo es el tipo primario para la caché de objetos en memoria.</span><span class="sxs-lookup"><span data-stu-id="56cfc-102">The <xref:System.Runtime.Caching.ObjectCache> type is the primary type for the in-memory object cache.</span></span> <span data-ttu-id="56cfc-103">Para desarrollar una implementación de caché personalizadas, deriva de la <xref:System.Runtime.Caching.ObjectCache> clase.</span><span class="sxs-lookup"><span data-stu-id="56cfc-103">To develop a custom cache implementation, you derive from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56cfc-104">El <xref:System.Runtime.Caching.ObjectCache> clase es nueva como de la [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="56cfc-104">The <xref:System.Runtime.Caching.ObjectCache> class is new as of the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span>  
  
 <span data-ttu-id="56cfc-105">Integrado <xref:System.Runtime.Caching.MemoryCache> clase se deriva de la <xref:System.Runtime.Caching.ObjectCache> clase.</span><span class="sxs-lookup"><span data-stu-id="56cfc-105">The built-in <xref:System.Runtime.Caching.MemoryCache> class derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span> <span data-ttu-id="56cfc-106">El <xref:System.Runtime.Caching.MemoryCache> clase es la implementación de caché de objeto concreta solo en el [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] que se deriva el <xref:System.Runtime.Caching.ObjectCache> clase.</span><span class="sxs-lookup"><span data-stu-id="56cfc-106">The <xref:System.Runtime.Caching.MemoryCache> class is the only concrete object cache implementation in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] that derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="56cfc-107">Este tipo es seguro para la ejecución de subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="56cfc-107">This type is thread safe.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="56cfc-108">Dado que el <see cref="T:System.Runtime.Caching.ObjectCache" /> tipo representa funciones comunes de caché, no hay ningún requisito para cómo un <see cref="T:System.Runtime.Caching.ObjectCache" /> instancia debe ser crear una instancia y obtenida.</span>
        <span class="sxs-lookup">
          <span data-stu-id="56cfc-108">Because the <see cref="T:System.Runtime.Caching.ObjectCache" /> type represents only common cache functions, there is no requirement for how an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance must be instantiated and obtained.</span>
        </span>
        <span data-ttu-id="56cfc-109">Además, no hay ningún requisito que las implementaciones concretas de la <see cref="T:System.Runtime.Caching.ObjectCache" /> clase debe ser singletons con estado.</span>
        <span class="sxs-lookup">
          <span data-stu-id="56cfc-109">In addition, there is no requirement that concrete implementations of the <see cref="T:System.Runtime.Caching.ObjectCache" /> class must be singletons.</span>
        </span>
        <block subset="none" type="note">
          <para>
            <span data-ttu-id="56cfc-110">
              <see cref="T:System.Runtime.Caching.MemoryCache" /> no es un singleton, pero debe crear solo pocos o potencialmente solo uno <see cref="T:System.Runtime.Caching.MemoryCache" /> instancia y el código que se almacena en caché los elementos deben usar esas instancias.</span>
            <span class="sxs-lookup">
              <span data-stu-id="56cfc-110">
                <see cref="T:System.Runtime.Caching.MemoryCache" /> is not a singleton, but you should create only a few or potentially only one <see cref="T:System.Runtime.Caching.MemoryCache" /> instance and code that caches items should use those instances.</span>
            </span>
          </para>
        </block>
        <span data-ttu-id="56cfc-111">Al heredar de la <see cref="T:System.Runtime.Caching.ObjectCache" /> (clase), debe invalidar sus métodos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="56cfc-111">When you inherit from the <see cref="T:System.Runtime.Caching.ObjectCache" /> class, you must override its methods.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectCache ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56cfc-112">Este método lo invocan los constructores de las clases derivadas para inicializar la clase <see cref="T:System.Runtime.Caching.ObjectCache" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-112">Called from constructors in derived classes in order to initialize the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="56cfc-113">Cuando se invalida en una clase derivada, inserta una entrada de caché sin que sea necesario devolver una entrada existente con la misma clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-113">When overridden in a derived class, inserts a cache entry into the cache, without requiring that an existing cache entry with a matching key be returned.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-114">El <xref:System.Runtime.Caching.ObjectCache.Add%2A> sobrecargas del método intentan insertar una entrada de caché en la memoria caché, sin sobrescribir o quitar una entrada existente que tiene la misma clave.</span><span class="sxs-lookup"><span data-stu-id="56cfc-114">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads try to insert a cache entry into the cache, without overwriting or removing an existing cache entry that has the same key.</span></span> <span data-ttu-id="56cfc-115">La entrada de caché puede ser un tipo <xref:System.Runtime.Caching.CacheItem> objeto o un objeto genérico.</span><span class="sxs-lookup"><span data-stu-id="56cfc-115">The cache entry can be a typed <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="56cfc-116">El <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> sobrecargas del método y el <xref:System.Runtime.Caching.ObjectCache.Add%2A> sobrecargas de método tienen una diferencia significativa.</span><span class="sxs-lookup"><span data-stu-id="56cfc-116">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads have one significant difference.</span></span> <span data-ttu-id="56cfc-117">Cuando estos métodos insertan una entrada de caché, si se encuentra una entrada coincidente en la memoria caché, el <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> sobrecargas del método devuelven la entrada de caché existente, pero la <xref:System.Runtime.Caching.ObjectCache.Add%2A> sobrecargas del método no lo hacen.</span><span class="sxs-lookup"><span data-stu-id="56cfc-117">When these methods insert a cache entry, if a matching entry is found in the cache, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads return the existing cache entry, but the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads do not.</span></span> <span data-ttu-id="56cfc-118">Estas sobrecargas de método diferentes permite que los llamadores optimizar su código basado en si necesitan la entrada de caché existente.</span><span class="sxs-lookup"><span data-stu-id="56cfc-118">Having these different method overloads enables callers to optimize their code based on whether they need the existing cache entry.</span></span> <span data-ttu-id="56cfc-119">En las memorias caché distribuidas, devolviendo un valor existente mediante el uso de la <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> método podría ser más costoso que devolver un valor booleano mediante <xref:System.Runtime.Caching.ObjectCache.Add%2A> método.</span><span class="sxs-lookup"><span data-stu-id="56cfc-119">In distributed caches, returning an existing value by using the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method might be more expensive than returning a Boolean value by using <xref:System.Runtime.Caching.ObjectCache.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (item As CacheItem, policy As CacheItemPolicy) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Add(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool&#xA;override this.Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool" Usage="objectCache.Add (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="56cfc-120">Objeto que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-120">The object to add.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="56cfc-121">Objeto que contiene detalles sobre la expulsión de la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-121">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="56cfc-122">Este objeto proporciona más opciones de expulsión que una simple expiración absoluta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-122">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-123">Cuando se reemplaza en una clase derivada, intenta insertar una entrada en la memoria caché como una instancia de <see cref="T:System.Runtime.Caching.CacheItem" /> y agrega detalles sobre cómo debe expulsarse la entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-123">When overridden in a derived class, tries to insert a cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, and adds details about how the entry should be evicted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-124">Es <see langword="true" /> si la inserción se realiza correctamente; es <see langword="false" /> si ya hay una entrada en la memoria caché que tiene la misma clave que <paramref name="item" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-124">
              <see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="item" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-125">El <xref:System.Runtime.Caching.ObjectCache.Add%2A> sobrecargas del método son virtuales (no abstractas) en el <xref:System.Runtime.Caching.ObjectCache> clase, porque el <xref:System.Runtime.Caching.ObjectCache.Add%2A> método llama internamente a <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span><span class="sxs-lookup"><span data-stu-id="56cfc-125">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="56cfc-126">Esto reduce el número de sobrecargas del método que un implementador de la memoria caché tiene que proporcionar.</span><span class="sxs-lookup"><span data-stu-id="56cfc-126">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="56cfc-127">Si una implementación de caché no requiere ningún comportamiento especial para el <xref:System.Runtime.Caching.ObjectCache.Add%2A> método, simplemente puede implementar el <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="56cfc-127">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * DateTimeOffset * string -&gt; bool&#xA;override this.Add : string * obj * DateTimeOffset * string -&gt; bool" Usage="objectCache.Add (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="56cfc-128">Identificador único de la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-128">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="56cfc-129">Objeto que se va a insertar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-129">The object to insert.</span>
          </span>
        </param>
        <param name="absoluteExpiration">
          <span data-ttu-id="56cfc-130">Fecha y hora fijas a las que expirará la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-130">The fixed date and time at which the cache entry will expire.</span>
          </span>
          <span data-ttu-id="56cfc-131">Este parámetro es necesario cuando se llama al método <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-131">This parameter is required when the <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> method is called.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="56cfc-132">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-132">Optional.</span>
          </span>
          <span data-ttu-id="56cfc-133">Región con nombre de la memoria caché a la que se puede agregar la entrada si se implementan regiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-133">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="56cfc-134">Dado que no se implementan regiones en [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], el valor predeterminado es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-134">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default value is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-135">Cuando se invalida en una clase derivada, inserta una entrada de caché en la memoria caché sin sobrescribir ninguna entrada existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-135">When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-136">Es <see langword="true" /> si la inserción se realiza correctamente; es <see langword="false" /> si ya hay una entrada en la memoria caché que tiene la misma clave que <paramref name="key" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-136">
              <see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="key" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-137">El <xref:System.Runtime.Caching.ObjectCache.Add%2A> sobrecargas del método son virtuales (no abstractas) en el <xref:System.Runtime.Caching.ObjectCache> clase, porque el <xref:System.Runtime.Caching.ObjectCache.Add%2A> método llama internamente a <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span><span class="sxs-lookup"><span data-stu-id="56cfc-137">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="56cfc-138">Esto reduce el número de sobrecargas del método que un implementador de la memoria caché tiene que proporcionar.</span><span class="sxs-lookup"><span data-stu-id="56cfc-138">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="56cfc-139">Si una implementación de caché no requiere ningún comportamiento especial para el <xref:System.Runtime.Caching.ObjectCache.Add%2A> método, simplemente puede implementar el <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="56cfc-139">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool&#xA;override this.Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool" Usage="objectCache.Add (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="56cfc-140">Identificador único de la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-140">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="56cfc-141">Objeto que se va a insertar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-141">The object to insert.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="56cfc-142">Objeto que contiene detalles sobre la expulsión de la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-142">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="56cfc-143">Este objeto proporciona más opciones de expulsión que una simple expiración absoluta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-143">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="56cfc-144">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-144">Optional.</span>
          </span>
          <span data-ttu-id="56cfc-145">Región con nombre de la memoria caché a la que se puede agregar la entrada si se implementan regiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-145">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="56cfc-146">El valor predeterminado para el parámetro opcional es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-146">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-147">Cuando se invalida en una clase derivada, inserta una entrada de caché en la memoria caché, y especifica información sobre cómo se expulsará la entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-147">When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-148">Es <see langword="true" /> si el intento de inserción se realiza correctamente; es <see langword="false" /> si ya hay una entrada en la memoria caché que tiene la misma clave que <paramref name="key" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-148">
              <see langword="true" /> if the insertion try succeeds, or <see langword="false" /> if there is an already an entry in the cache with the same key as <paramref name="key" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-149">El <xref:System.Runtime.Caching.ObjectCache.Add%2A> sobrecargas del método son virtuales (no abstractas) en el <xref:System.Runtime.Caching.ObjectCache> clase, porque el <xref:System.Runtime.Caching.ObjectCache.Add%2A> método llama internamente a <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span><span class="sxs-lookup"><span data-stu-id="56cfc-149">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="56cfc-150">Esto reduce el número de sobrecargas del método que un implementador de la memoria caché tiene que proporcionar.</span><span class="sxs-lookup"><span data-stu-id="56cfc-150">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="56cfc-151">Si una implementación de caché no requiere ningún comportamiento especial para el <xref:System.Runtime.Caching.ObjectCache.Add%2A> método, simplemente puede implementar el <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="56cfc-151">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrGetExisting">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="56cfc-152">Cuando se reemplaza en una clase derivada, intenta insertar una entrada en la memoria caché y devuelve una entrada existente con la misma clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-152">When overridden in a derived class, tries to insert a cache entry into the cache, and returns an existing cache entry with a matching key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-153">El <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> sobrecargas del método inserción una entrada en la memoria caché.</span><span class="sxs-lookup"><span data-stu-id="56cfc-153">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads insert an entry into the cache.</span></span> <span data-ttu-id="56cfc-154">Si ya existe una entrada de caché con una clave coincidente, devuelven la entrada existente.</span><span class="sxs-lookup"><span data-stu-id="56cfc-154">If a cache entry with a matching key already exists, they return the existing entry.</span></span> <span data-ttu-id="56cfc-155">La entrada de caché puede ser un <xref:System.Runtime.Caching.CacheItem> objeto o un objeto genérico.</span><span class="sxs-lookup"><span data-stu-id="56cfc-155">The cache entry can be a <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="56cfc-156">Hay una diferencia entre el <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> sobrecargas y el <xref:System.Runtime.Caching.ObjectCache.Add%2A> sobrecargas.</span><span class="sxs-lookup"><span data-stu-id="56cfc-156">There is one difference between the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads.</span></span> <span data-ttu-id="56cfc-157">Cuando estos métodos sobrecargados intentan insertar una entrada de caché, si se encuentra una entrada existente que ha insertado una clave que coincida con una existente entrada de caché, el <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> sobrecargas devuelven la entrada de caché existente.</span><span class="sxs-lookup"><span data-stu-id="56cfc-157">When these overloaded methods try to insert a cache entry, if an existing entry is found that has a key that matches an existing inserted cache entry, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads return the existing cache entry.</span></span> <span data-ttu-id="56cfc-158">El <xref:System.Runtime.Caching.ObjectCache.Add%2A> sobrecargas no lo hacen.</span><span class="sxs-lookup"><span data-stu-id="56cfc-158">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads do not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem AddOrGetExisting(class System.Runtime.Caching.CacheItem value, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (value As CacheItem, policy As CacheItemPolicy) As CacheItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Runtime::Caching::CacheItem ^ AddOrGetExisting(System::Runtime::Caching::CacheItem ^ value, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.AddOrGetExisting (value, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="56cfc-159">Objeto que se va a insertar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-159">The object to insert.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="56cfc-160">Objeto que contiene detalles sobre la expulsión de la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-160">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="56cfc-161">Este objeto proporciona más opciones de expulsión que una simple expiración absoluta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-161">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-162">Cuando se invalida en una clase derivada, inserta el objeto <see cref="T:System.Runtime.Caching.CacheItem" /> especificado en la memoria caché, y especifica información sobre cómo se expulsará la entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-162">When overridden in a derived class, inserts the specified <see cref="T:System.Runtime.Caching.CacheItem" /> object into the cache, specifying information about how the entry will be evicted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-163">Si existe una entrada de caché con la misma clave, se devuelve la entrada de caché especificada; de lo contrario, se devuelve <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-163">If a cache entry with the same key exists, the specified cache entry; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * DateTimeOffset * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="56cfc-164">Identificador único de la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-164">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="56cfc-165">Objeto que se va a insertar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-165">The object to insert.</span>
          </span>
        </param>
        <param name="absoluteExpiration">
          <span data-ttu-id="56cfc-166">Fecha y hora fijas a las que expirará la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-166">The fixed date and time at which the cache entry will expire.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="56cfc-167">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-167">Optional.</span>
          </span>
          <span data-ttu-id="56cfc-168">Región con nombre de la memoria caché a la que se puede agregar la entrada si se implementan regiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-168">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="56cfc-169">El valor predeterminado para el parámetro opcional es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-169">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-170">Cuando se invalida en una clase derivada, inserta una entrada de caché en la memoria caché utilizando una clave, un objeto para la entrada de caché, un valor de expiración absoluto y una región opcional a la que se va a agregar la entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-170">When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-171">Si ya existe una entrada de caché con la misma clave, se devuelve el valor de la entrada de caché especificada; de lo contrario, se devuelve <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-171">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-172">Esto <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> sobrecarga del método devuelve un valor de objeto, no un <xref:System.Runtime.Caching.CacheItem> objeto.</span><span class="sxs-lookup"><span data-stu-id="56cfc-172">This <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method overload returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="56cfc-173">Identificador único de la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-173">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="56cfc-174">Objeto que se va a insertar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-174">The object to insert.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="56cfc-175">Objeto que contiene detalles sobre la expulsión de la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-175">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="56cfc-176">Este objeto proporciona más opciones de expulsión que una simple expiración absoluta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-176">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="56cfc-177">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-177">Optional.</span>
          </span>
          <span data-ttu-id="56cfc-178">Región con nombre de la memoria caché a la que se puede agregar la entrada si se implementan regiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-178">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="56cfc-179">El valor predeterminado para el parámetro opcional es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-179">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-180">Cuando se invalida en una clase derivada, inserta una entrada de caché en la memoria caché, y especifica una clave y un valor para la entrada, así como información sobre cómo va a expulsarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-180">When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-181">Si ya existe una entrada de caché con la misma clave, se devuelve el valor de la entrada de caché especificada; de lo contrario, se devuelve <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-181">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-182">El <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> método devuelve un valor de objeto, no un <xref:System.Runtime.Caching.CacheItem> objeto.</span><span class="sxs-lookup"><span data-stu-id="56cfc-182">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> method returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (key As String, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : string * string -&gt; bool" Usage="objectCache.Contains (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="56cfc-183">Identificador único de la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-183">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="56cfc-184">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-184">Optional.</span>
          </span>
          <span data-ttu-id="56cfc-185">Región con nombre de la memoria caché donde puede encontrarse la entrada si se implementan regiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-185">A named region in the cache where the cache can be found, if regions are implemented.</span>
          </span>
          <span data-ttu-id="56cfc-186">El valor predeterminado para el parámetro opcional es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-186">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-187">Cuando se invalida en una clase derivada, comprueba si la entrada ya existe en la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-187">When overridden in a derived class, checks whether the cache entry already exists in the cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-188">Es <see langword="true" /> si la memoria caché contiene una entrada con el mismo valor de clave que <paramref name="key" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-188">
              <see langword="true" /> if the cache contains a cache entry with the same key value as <paramref name="key" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCacheEntryChangeMonitor">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCacheEntryChangeMonitor (keys As IEnumerable(Of String), Optional regionName As String = null) As CacheEntryChangeMonitor" />
      <MemberSignature Language="F#" Value="abstract member CreateCacheEntryChangeMonitor : seq&lt;string&gt; * string -&gt; System.Runtime.Caching.CacheEntryChangeMonitor" Usage="objectCache.CreateCacheEntryChangeMonitor (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryChangeMonitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="56cfc-189">Identificadores únicos de las entradas de caché que se van a supervisar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-189">The unique identifiers for cache entries to monitor.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="56cfc-190">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-190">Optional.</span>
          </span>
          <span data-ttu-id="56cfc-191">Región con nombre de la memoria caché donde existen las claves de caché en el parámetro <paramref name="keys" />, si se implementan regiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-191">A named region in the cache where the cache keys in the <paramref name="keys" /> parameter exist, if regions are implemented.</span>
          </span>
          <span data-ttu-id="56cfc-192">El valor predeterminado para el parámetro opcional es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-192">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-193">Cuando se reemplaza en una clase derivada, crea un objeto <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> que puede activar eventos en respuesta a los cambios realizados en las entradas especificadas de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-193">When overridden in a derived class, creates a <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> object that can trigger events in response to changes to specified cache entries.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-194">Supervisor de cambios que supervisa las entradas de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-194">A change monitor that monitors cache entries in the cache.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-195">Cuando una derivada <xref:System.Runtime.Caching.ObjectCache> clase reemplaza la base de <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> método, debe crear la implementación de la memoria caché un <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objeto.</span><span class="sxs-lookup"><span data-stu-id="56cfc-195">When a derived <xref:System.Runtime.Caching.ObjectCache> class overrides the base <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> method, the cache implementation must create a <xref:System.Runtime.Caching.CacheEntryChangeMonitor> object.</span></span> <span data-ttu-id="56cfc-196">Este monitor de cambios especializado notifica a los llamadores cuando hay cambios en las entradas de caché que se especifican en el `keys` parámetro.</span><span class="sxs-lookup"><span data-stu-id="56cfc-196">This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the `keys` parameter.</span></span> <span data-ttu-id="56cfc-197">Por ejemplo, si un elemento supervisado en el `keys` parámetro se actualiza o quita de la caché, la supervisión de cambios creada por este método desencadena un evento.</span><span class="sxs-lookup"><span data-stu-id="56cfc-197">For example, if a monitored item in the `keys` parameter is updated or removed from the cache, the change monitor created by this method triggers an event.</span></span>  
  
 <span data-ttu-id="56cfc-198">Si una implementación de caché es compatible con las regiones de memoria caché con nombre, se puede especificar un valor de cadena como el `regionName` parámetro.</span><span class="sxs-lookup"><span data-stu-id="56cfc-198">If a cache implementation supports named cache regions, a string value can be specified as the `regionName` parameter.</span></span> <span data-ttu-id="56cfc-199">En caso contrario, el parámetro el valor predeterminado es `null`.</span><span class="sxs-lookup"><span data-stu-id="56cfc-199">Otherwise, the parameter defaults to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56cfc-200">No todas las implementaciones de la memoria caché admiten monitores de cambio de entrada de caché.</span><span class="sxs-lookup"><span data-stu-id="56cfc-200">Not all cache implementations support cache-entry change monitors.</span></span> <span data-ttu-id="56cfc-201">Para determinar si se admite su implementación de caché <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objetos, consulte la documentación de la implementación de caché específica.</span><span class="sxs-lookup"><span data-stu-id="56cfc-201">To determine whether your cache implementation supports <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objects, see the documentation for the specific cache implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCacheCapabilities">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCacheCapabilities As DefaultCacheCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Runtime::Caching::DefaultCacheCapabilities DefaultCacheCapabilities { System::Runtime::Caching::DefaultCacheCapabilities get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCacheCapabilities : System.Runtime.Caching.DefaultCacheCapabilities" Usage="System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.DefaultCacheCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56cfc-202">Cuando se reemplaza en una clase derivada, obtiene una descripción de las características proporcionadas por una implementación de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-202">When overridden in a derived class, gets a description of the features that a cache implementation provides.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56cfc-203">Combinación bit a bit de las marcas que indican las características predeterminadas de una implementación de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-203">A bitwise combination of flags that indicate the default capabilities of a cache implementation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract object Get (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string -&gt; obj" Usage="objectCache.Get (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="56cfc-204">Identificador único para la entrada de caché que se va a obtener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-204">A unique identifier for the cache entry to get.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="56cfc-205">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-205">Optional.</span>
          </span>
          <span data-ttu-id="56cfc-206">Región con nombre de la memoria caché a la que se agregó la entrada si se implementan regiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-206">A named region in the cache to which the cache entry was added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="56cfc-207">El valor predeterminado para el parámetro opcional es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-207">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-208">Cuando se reemplaza en una clase derivada, obtiene la entrada especificada de la memoria caché como un objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-208">When overridden in a derived class, gets the specified cache entry from the cache as an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-209">Entrada de caché identificada por <paramref name="key" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-209">The cache entry that is identified by <paramref name="key" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheItem">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem GetCacheItem(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCacheItem (key As String, Optional regionName As String = null) As CacheItem" />
      <MemberSignature Language="F#" Value="abstract member GetCacheItem : string * string -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.GetCacheItem (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="56cfc-210">Identificador único para la entrada de caché que se va a obtener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-210">A unique identifier for the cache entry to get.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="56cfc-211">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-211">Optional.</span>
          </span>
          <span data-ttu-id="56cfc-212">Región con nombre de la memoria caché a la que se agregó la entrada de caché, si se implementan regiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-212">A named region in the cache to which the cache was added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="56cfc-213">Dado que no se implementan regiones en [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], el valor predeterminado es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-213">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-214">Cuando se reemplaza en una clase derivada, obtiene la entrada especificada de la memoria caché como una instancia de <see cref="T:System.Runtime.Caching.CacheItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-214">When overridden in a derived class, gets the specified cache entry from the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-215">Entrada de caché identificada por <paramref name="key" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-215">The cache entry that is identified by <paramref name="key" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-216">Esta sobrecarga del método existe porque algunas implementaciones de la memoria caché podrían ampliar la <xref:System.Runtime.Caching.CacheItem> clase.</span><span class="sxs-lookup"><span data-stu-id="56cfc-216">This method overload exists because some cache implementations might extend the <xref:System.Runtime.Caching.CacheItem> class.</span></span> <span data-ttu-id="56cfc-217">En ese caso, el <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> sobrecarga del método no devolverá necesariamente toda la información sobre los datos almacenados en caché.</span><span class="sxs-lookup"><span data-stu-id="56cfc-217">In that case, the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method overload will not necessarily return all the information about cached data.</span></span> <span data-ttu-id="56cfc-218">Sin embargo, el <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> sobrecarga del método permite que las memorias caché personalizadas devolver algo más que el valor de la memoria caché.</span><span class="sxs-lookup"><span data-stu-id="56cfc-218">However, the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method overload enables custom caches to return more than just the cache value.</span></span>  
  
 <span data-ttu-id="56cfc-219">El <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> método es similar a la <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> método, salvo que el <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> método devuelve valor devuelto de la entrada de caché como un <xref:System.Runtime.Caching.CacheItem> instancia.</span><span class="sxs-lookup"><span data-stu-id="56cfc-219">The <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method is like the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method, except that the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method returns return the cache entry as a <xref:System.Runtime.Caching.CacheItem> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public abstract long GetCount (string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetCount(string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCount (Optional regionName As String = null) As Long" />
      <MemberSignature Language="F#" Value="abstract member GetCount : string -&gt; int64" Usage="objectCache.GetCount regionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regionName">
          <span data-ttu-id="56cfc-220">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-220">Optional.</span>
          </span>
          <span data-ttu-id="56cfc-221">Región con nombre de la memoria caché para la que se debe calcular el recuento de entradas de caché, si se implementan regiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-221">A named region in the cache for which the cache entry count should be computed, if regions are implemented.</span>
          </span>
          <span data-ttu-id="56cfc-222">El valor predeterminado para el parámetro opcional es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-222">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-223">Cuando se reemplaza en una clase derivada, obtiene el número total de entradas de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-223">When overridden in a derived class, gets the total number of cache entries in the cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-224">Número de entradas de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-224">The number of cache entries in the cache.</span>
          </span>
          <span data-ttu-id="56cfc-225">Si <paramref name="regionName" /> no es <see langword="null" />, se devuelve el número de entradas en la región especificada de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-225">If <paramref name="regionName" /> is not <see langword="null" />, the count indicates the number of entries that are in the specified cache region.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="objectCache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56cfc-226">Cuando se reemplaza en una clase derivada, crea un enumerador que puede usarse para iterar por una colección de entradas de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-226">When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-227">Objeto de enumerador que proporciona acceso a las entradas de la memoria caché en la caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-227">The enumerator object that provides access to the cache entries in the cache.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-228">Los implementadores de la memoria caché pueden invalidar y ampliar este método para proporcionar un medio personalizado para recorrer en iteración una colección de entradas de caché.</span><span class="sxs-lookup"><span data-stu-id="56cfc-228">Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56cfc-229">Devuelve un enumerador es normalmente una operación más costosa que devolver la entrada de caché completa.</span><span class="sxs-lookup"><span data-stu-id="56cfc-229">Returning an enumerator is typically a more expensive operation than returning the entire cache entry.</span></span>  
  
 <span data-ttu-id="56cfc-230">Este método se llama a las implementaciones de interfaz explícita que la <xref:System.Runtime.Caching.ObjectCache> clase tiene para el <xref:System.Collections.IEnumerable.GetEnumerator%2A> y <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="56cfc-230">This method is called by the explicit interface implementations that the <xref:System.Runtime.Caching.ObjectCache> class has for the <xref:System.Collections.IEnumerable.GetEnumerator%2A> and <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValues">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="56cfc-231">Obtiene un conjunto de entradas de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-231">Gets a set of cache entries.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValues (keys As IEnumerable(Of String), Optional regionName As String = null) As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="abstract member GetValues : seq&lt;string&gt; * string -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="56cfc-232">Colección de identificadores únicos correspondientes a las entradas de caché que se van a obtener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-232">A collection of unique identifiers for the cache entries to get.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="56cfc-233">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-233">Optional.</span>
          </span>
          <span data-ttu-id="56cfc-234">Región con nombre de la memoria caché a la que se agregaron una o varias entradas de caché, si se implementan regiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-234">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="56cfc-235">El valor predeterminado para el parámetro opcional es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-235">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-236">Cuando se reemplaza en una clase derivada, obtiene un conjunto de entradas de la memoria caché que corresponden a las claves especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-236">When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-237">Diccionario de pares clave-valor que representan entradas de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-237">A dictionary of key/value pairs that represent cache entries.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-238">El <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> sobrecarga del método es una optimización del rendimiento para las memorias caché distribuidas que admiten la captura de varias entradas de caché de la memoria caché durante una llamada de red único.</span><span class="sxs-lookup"><span data-stu-id="56cfc-238">The <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.</span></span>  
  
 <span data-ttu-id="56cfc-239">Aunque un llamador puede pasar una o varias claves para el método, no hay ninguna garantía de que todas las claves representan las entradas de la memoria caché.</span><span class="sxs-lookup"><span data-stu-id="56cfc-239">Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache.</span></span> <span data-ttu-id="56cfc-240">Por lo tanto, el diccionario devuelto podría contener menos elementos que el número de claves que se pasaron al método.</span><span class="sxs-lookup"><span data-stu-id="56cfc-240">Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (string regionName, params string[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(string regionName, string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (regionName As String, ParamArray keys As String()) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetValues(System::String ^ regionName, ... cli::array &lt;System::String ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;&#xA;override this.GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (regionName, keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
        <Parameter Name="keys" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="regionName">
          <span data-ttu-id="56cfc-241">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-241">Optional.</span>
          </span>
          <span data-ttu-id="56cfc-242">Región con nombre de la memoria caché a la que se agregaron una o varias entradas de caché, si se implementan regiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-242">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="56cfc-243">Dado que no se implementan regiones en [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], el valor predeterminado es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-243">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span>
          </span>
        </param>
        <param name="keys">
          <span data-ttu-id="56cfc-244">Colección de identificadores únicos correspondientes a las entradas de caché que se van a obtener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-244">A collection of unique identifiers for the cache entries to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-245">Obtiene un conjunto de entradas de la memoria caché que corresponden a las claves especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-245">Gets a set of cache entries that correspond to the specified keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-246">Diccionario de pares clave-valor que representan entradas de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-246">A dictionary of key/value pairs that represent cache entries.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-247">El <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType> sobrecarga del método es similar a la <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> sobrecarga del método, pero permite pasar la región con nombre mediante la sintaxis de parámetro opcional que es compatible con los lenguajes administrados como C#.</span><span class="sxs-lookup"><span data-stu-id="56cfc-247">The <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType> method overload is like the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.</span></span>  
  
 <span data-ttu-id="56cfc-248">Este método es un método virtual porque el <xref:System.Runtime.Caching.ObjectCache> clase proporciona una implementación predeterminada que pasa el `params` de matriz a la <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="56cfc-248">This method is a virtual method because the <xref:System.Runtime.Caching.ObjectCache> class provides a default implementation that passes the `params` array to the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public static IServiceProvider Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IServiceProvider Host" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Host" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Host As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property IServiceProvider ^ Host { IServiceProvider ^ get(); void set(IServiceProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : IServiceProvider with get, set" Usage="System.Runtime.Caching.ObjectCache.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56cfc-249">Obtiene o establece una referencia a un entorno de hospedaje administrado que está disponible para las implementaciones de <see cref="T:System.Runtime.Caching.ObjectCache" /> y puede proporcionar servicios específicos del host a las implementaciones de <see cref="T:System.Runtime.Caching.ObjectCache" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-249">Gets or set a reference to a managed hosting environment that is available to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations and that can provide host-specific services to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56cfc-250">Referencia a un entorno de hospedaje administrado que reconoce la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-250">A reference to a cache-aware managed hosting environment.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-251">El <xref:System.Runtime.Caching.ObjectCache.Host%2A> propiedad está pensada para su uso por [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] entornos de host y en implementaciones de caché que implementan el comportamiento que depende de .NET Framework hospedar el entorno.</span><span class="sxs-lookup"><span data-stu-id="56cfc-251">The <xref:System.Runtime.Caching.ObjectCache.Host%2A> property is intended for use by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.</span></span>  
  
 <span data-ttu-id="56cfc-252">En la tabla siguiente enumera el conjunto de servicios de host del entorno que podrían estar disponibles en un entorno de hospedaje administrado y que están disponibles para <xref:System.Runtime.Caching.ObjectCache> implementaciones a través de la <xref:System.Runtime.Caching.ObjectCache.Host%2A> propiedad:</span><span class="sxs-lookup"><span data-stu-id="56cfc-252">The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <xref:System.Runtime.Caching.ObjectCache> implementations through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property:</span></span>  
  
|<span data-ttu-id="56cfc-253">Servicio</span><span class="sxs-lookup"><span data-stu-id="56cfc-253">Service</span></span>|<span data-ttu-id="56cfc-254">Descripción</span><span class="sxs-lookup"><span data-stu-id="56cfc-254">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>|<span data-ttu-id="56cfc-255">Permite a los entornos de host proporcionar identificadores de dominio de aplicación que podrían ser necesarios en una implementación de caché para las características, como la identificación de los contadores de rendimiento.</span><span class="sxs-lookup"><span data-stu-id="56cfc-255">Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>|<span data-ttu-id="56cfc-256">Permite a los entornos de host proporcionan un sistema de notificación de cambio de archivo personalizado, en lugar de utilizar el proporcionado en uno el [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="56cfc-256">Lets host environments provide a custom file-change notification system, instead of using the one provided in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>|<span data-ttu-id="56cfc-257">Permite el consumo de memoria caché de informes de caché implementaciones al entorno de host.</span><span class="sxs-lookup"><span data-stu-id="56cfc-257">Lets cache implementations report cache memory consumption to the host environment.</span></span> <span data-ttu-id="56cfc-258">Esto permite que los entornos de host administrar centralmente el consumo de memoria a través de varias implementaciones de caché.</span><span class="sxs-lookup"><span data-stu-id="56cfc-258">This enables host environments to centrally manage memory consumption across multiple cache implementations.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="56cfc-259">Los autores de llamadas de este valor de propiedad requieren permisos de seguridad de acceso de código sin restricciones.</span><span class="sxs-lookup"><span data-stu-id="56cfc-259">Callers of this property value require unrestricted code access security permissions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="56cfc-260">El valor que se asigna a la propiedad es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-260">The value being assigned to the property is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="56cfc-261">Se intentó establecer el valor de propiedad más de una vez.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-261">An attempt was made to set the property value more than one time.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="56cfc-262">para plena confianza para todos los descriptores de acceso de esta propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-262">for full trust for all accessors of this property.</span>
          </span>
          <span data-ttu-id="56cfc-263">Esta propiedad no se puede usar por código de confianza parcial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-263">This property cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InfiniteAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset InfiniteAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteAbsoluteExpiration As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteAbsoluteExpiration : DateTimeOffset" Usage="System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56cfc-264">Obtiene un valor que indica que una entrada de caché no tiene ninguna expiración absoluta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-264">Gets a value that indicates that a cache entry has no absolute expiration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-265">Una entrada de caché que se inserta en la memoria caché con el <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> valor del campo como el valor de expiración no debe expirar nunca basándose en un punto absoluto en el tiempo.</span><span class="sxs-lookup"><span data-stu-id="56cfc-265">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> field value set as the expiration value should never expire based on an absolute point in time.</span></span> <span data-ttu-id="56cfc-266">Sin embargo, se puede expulsar una entrada de caché con esta configuración de la memoria caché por otras razones que vienen determinados por una implementación de caché concreta, como una expulsión de evento de supervisión de cambios causado por la presión de memoria.</span><span class="sxs-lookup"><span data-stu-id="56cfc-266">However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Runtime.Caching.ObjectCache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="56cfc-267">Identificador único de una entrada de caché en la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-267">A unique identifier for a cache entry in the cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-268">Obtiene o establece el indizador predeterminado para la clase <see cref="T:System.Runtime.Caching.ObjectCache" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-268">Gets or sets the default indexer for the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56cfc-269">Clave que sirve de indizador en la instancia de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-269">A key that serves as an indexer into the cache instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-270">El comportamiento del descriptor de acceso set de esta propiedad es similar a la <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> método.</span><span class="sxs-lookup"><span data-stu-id="56cfc-270">The behavior of the set accessor of this property is like the <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method.</span></span> <span data-ttu-id="56cfc-271">Internamente, una implementación de caché pudo establecer una expiración absoluta del valor especificado para el <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> método.</span><span class="sxs-lookup"><span data-stu-id="56cfc-271">Internally, a cache implementation could set the absolute expiration of the specified value to the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> method.</span></span> <span data-ttu-id="56cfc-272">Pero este comportamiento es en última instancia, hasta la implementación de caché.</span><span class="sxs-lookup"><span data-stu-id="56cfc-272">However this behavior is ultimately up to the cache implementation.</span></span>  
  
 <span data-ttu-id="56cfc-273">El comportamiento del descriptor de acceso get es como llamar a la <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> método y el uso de `null` para el nombre de la región.</span><span class="sxs-lookup"><span data-stu-id="56cfc-273">The behavior of get accessor is like calling the <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> method and using `null` for the region name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.Caching.ObjectCache.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56cfc-274">Obtiene el nombre de una instancia específica de <see cref="T:System.Runtime.Caching.ObjectCache" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-274">Gets the name of a specific <see cref="T:System.Runtime.Caching.ObjectCache" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56cfc-275">Nombre de una instancia específica de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-275">The name of a specific cache instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-276">Algunas implementaciones de caché pueden admitir varias instancias de la memoria caché que se está ejecutando en una sola aplicación.</span><span class="sxs-lookup"><span data-stu-id="56cfc-276">Some cache implementations might support multiple instances of the cache that is running in a single application.</span></span> <span data-ttu-id="56cfc-277">Esta propiedad permite a los implementadores de la memoria caché devolver un nombre que identifica una instancia de caché específica.</span><span class="sxs-lookup"><span data-stu-id="56cfc-277">This property lets cache implementers return a name that identifies a specific cache instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56cfc-278">Indica que una entrada de caché no tiene ningún tiempo de expiración variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-278">Indicates that a cache entry has no sliding expiration time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-279">Expiración que se basa en la duración o una ventana de tiempo definida se conoce también como fecha de expiración variable.</span><span class="sxs-lookup"><span data-stu-id="56cfc-279">Expiration that is based on duration or a defined window of time is also referred to as sliding expiration.</span></span> <span data-ttu-id="56cfc-280">Normalmente, una implementación de caché que extrae elementos que se basan en la fecha de expiración variable quitará un elemento que no se ha tenido acceso en la ventana de tiempo especificada.</span><span class="sxs-lookup"><span data-stu-id="56cfc-280">Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.</span></span>  
  
 <span data-ttu-id="56cfc-281">Una entrada de caché que se inserta en la memoria caché con el <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> establecido como el valor de expiración nunca se debe expulsar debido a falta de actividad en una ventana deslizante de tiempo del valor del campo.</span><span class="sxs-lookup"><span data-stu-id="56cfc-281">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> field value set as the expiration value should never be evicted because of non-activity in a sliding time window.</span></span> <span data-ttu-id="56cfc-282">Sin embargo, se puede expulsar un elemento de caché si tiene una expiración absoluta, o si se produce algún otro evento de expulsión, este tipo una presión de memoria o el monitor de cambio.</span><span class="sxs-lookup"><span data-stu-id="56cfc-282">However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract object Remove (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Remove(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Remove : string * string -&gt; obj" Usage="objectCache.Remove (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="56cfc-283">Identificador único de la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-283">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="56cfc-284">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-284">Optional.</span>
          </span>
          <span data-ttu-id="56cfc-285">Región con nombre de la memoria caché a la que se agregó la entrada si se implementan regiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-285">A named region in the cache to which the cache entry was added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="56cfc-286">El valor predeterminado para el parámetro opcional es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-286">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-287">Cuando se reemplaza en una clase derivada, quita la entrada de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-287">When overridden in a derived class, removes the cache entry from the cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-288">Objeto que representa el valor de la entrada de caché que se quitó y que se especificó mediante la clave, o <see langword="null" /> si no se encontró la entrada especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-288">An object that represents the value of the removed cache entry that was specified by the key, or <see langword="null" /> if the specified entry was not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-289">Si invalida este método en una implementación de caché personalizada, si hay una entrada de caché en la memoria caché que se corresponde con `key`, se debe devolver el valor del elemento quitado.</span><span class="sxs-lookup"><span data-stu-id="56cfc-289">If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to `key`, the value of the removed item should be returned.</span></span> <span data-ttu-id="56cfc-290">Si no hay nada se quitó de la memoria caché, el método debe devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="56cfc-290">If nothing was removed from the cache, the method should return `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56cfc-291">Algunas implementaciones de caché distribuida podrían no admitir la capacidad de devolver el valor que se quitó de la memoria caché.</span><span class="sxs-lookup"><span data-stu-id="56cfc-291">Some distributed cache implementations might not support the ability to return the value that was removed from the cache.</span></span> <span data-ttu-id="56cfc-292">Esto puede deberse a la implementación de caché no admite devolver el valor de un elemento de caché que se quitó.</span><span class="sxs-lookup"><span data-stu-id="56cfc-292">This might be because the cache implementation does not support returning the value of a removed cache item.</span></span> <span data-ttu-id="56cfc-293">Es posible también que el cálculo de referencias del objeto como un valor devuelto es demasiado costoso.</span><span class="sxs-lookup"><span data-stu-id="56cfc-293">It might also be because marshaling the object as a return value is too expensive.</span></span> <span data-ttu-id="56cfc-294">En tales casos, las implementaciones de caché pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="56cfc-294">In such cases, cache implementations can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="56cfc-295">Cuando se reemplaza en una clase derivada, inserta una entrada en la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-295">When overridden in a derived class, inserts a cache entry into the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-296">El comportamiento típico de la <xref:System.Runtime.Caching.ObjectCache.Set%2A> métodos de sobrecarga es una operación de inserción o actualización.</span><span class="sxs-lookup"><span data-stu-id="56cfc-296">The typical behavior of the <xref:System.Runtime.Caching.ObjectCache.Set%2A> overload methods is an insert-or-update operation.</span></span> <span data-ttu-id="56cfc-297">Una entrada de caché es inserta como una nueva entrada si la entrada especificada no existe o se actualiza la entrada de caché con un nuevo valor si ya existe.</span><span class="sxs-lookup"><span data-stu-id="56cfc-297">A cache entry is either inserted as a new entry if the specified entry does not exist, or the cache entry is updated with a new value if it already exists.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (item As CacheItem, policy As CacheItemPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Set(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Set : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; unit" Usage="objectCache.Set (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="56cfc-298">Elemento de caché que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-298">The cache item to add.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="56cfc-299">Objeto que contiene detalles sobre la expulsión de la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-299">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="56cfc-300">Este objeto proporciona más opciones de expulsión que una simple expiración absoluta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-300">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-301">Cuando se invalida en una clase derivada, inserta la entrada de caché en la memoria caché como una instancia de <see cref="T:System.Runtime.Caching.CacheItem" />, y especifica información sobre cómo se expulsará la entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-301">When overridden in a derived class, inserts the cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, specifying information about how the entry will be evicted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-302">Si la clave para `item` no existe, `item` se inserta como una nueva entrada de caché.</span><span class="sxs-lookup"><span data-stu-id="56cfc-302">If the key for `item` does not exist, `item` is inserted as a new cache entry.</span></span> <span data-ttu-id="56cfc-303">Si un elemento con una clave que coincida con `item` existe, el valor de `item` se usa para actualizar o sobrescribir el valor de la entrada de caché existente.</span><span class="sxs-lookup"><span data-stu-id="56cfc-303">If an item with a key that matches `item` exists, the value from `item` is used to update or overwrite the value of the existing cache entry.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * DateTimeOffset * string -&gt; unit" Usage="objectCache.Set (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="56cfc-304">Identificador único de la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-304">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="56cfc-305">Objeto que se va a insertar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-305">The object to insert.</span>
          </span>
        </param>
        <param name="absoluteExpiration">
          <span data-ttu-id="56cfc-306">Fecha y hora fijas a las que expirará la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-306">The fixed date and time at which the cache entry will expire.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="56cfc-307">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-307">Optional.</span>
          </span>
          <span data-ttu-id="56cfc-308">Región con nombre de la memoria caché a la que se puede agregar la entrada si se implementan regiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-308">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="56cfc-309">El valor predeterminado para el parámetro opcional es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-309">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-310">Cuando se reemplaza en una clase derivada, inserta una entrada de caché en la memoria caché, y especifica los detalles de la expiración basada en el tiempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-310">When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-311">Si un elemento que coincida con `key` no existe en la memoria caché, `value` y `key` se utilizan para insertar como una nueva entrada de caché.</span><span class="sxs-lookup"><span data-stu-id="56cfc-311">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="56cfc-312">Si un elemento con una clave que coincida con `item` existe, se actualiza o sobrescribir mediante la entrada de caché `value`.</span><span class="sxs-lookup"><span data-stu-id="56cfc-312">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; unit" Usage="objectCache.Set (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="56cfc-313">Identificador único de la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-313">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="56cfc-314">Objeto que se va a insertar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-314">The object to insert.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="56cfc-315">Objeto que contiene detalles sobre la expulsión de la entrada de caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-315">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="56cfc-316">Este objeto proporciona más opciones de expulsión que una simple expiración absoluta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-316">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="56cfc-317">Opcional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-317">Optional.</span>
          </span>
          <span data-ttu-id="56cfc-318">Región con nombre de la memoria caché a la que se puede agregar la entrada si se implementan regiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-318">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="56cfc-319">El valor predeterminado para el parámetro opcional es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-319">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56cfc-320">Cuando se reemplaza en una clase derivada, inserta una entrada en la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-320">When overridden in a derived class, inserts a cache entry into the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-321">Esta sobrecarga del método permite proporcionar más detalles de expulsión o expiración que los que están disponibles en basado en tiempo de expiración absoluta.</span><span class="sxs-lookup"><span data-stu-id="56cfc-321">This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.</span></span>  
  
 <span data-ttu-id="56cfc-322">Si un elemento que coincida con `key` no existe en la memoria caché, `value` y `key` se utilizan para insertar como una nueva entrada de caché.</span><span class="sxs-lookup"><span data-stu-id="56cfc-322">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="56cfc-323">Si un elemento con una clave que coincida con `item` existe, se actualiza o sobrescribir mediante la entrada de caché `value`.</span><span class="sxs-lookup"><span data-stu-id="56cfc-323">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56cfc-324">Admite la iteración en una colección genérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-324">Supports iteration over a generic collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56cfc-325">Objeto de enumerador que proporciona acceso a los elementos de la memoria caché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56cfc-325">The enumerator object that provides access to the items in the cache.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56cfc-326">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="56cfc-326">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="56cfc-327">Puede usarse solo cuando una derivada <xref:System.Runtime.Caching.ObjectCache> instancia se convierte en un <xref:System.Collections.IEnumerable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="56cfc-327">It can be used only when a derived <xref:System.Runtime.Caching.ObjectCache> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="56cfc-328">Los desarrolladores pueden usar este método para recorrer en iteración una colección genérica de entradas de caché.</span><span class="sxs-lookup"><span data-stu-id="56cfc-328">Developers can use this method to iterate through a generic collection of cache entries.</span></span>  
  
 <span data-ttu-id="56cfc-329">Este es el valor predeterminado <xref:System.Collections.IEnumerable.GetEnumerator%2A> implementación que internamente llama el <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> método.</span><span class="sxs-lookup"><span data-stu-id="56cfc-329">This is the default <xref:System.Collections.IEnumerable.GetEnumerator%2A> implementation that internally calls the <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="JsonReaderWriterFactory" FullName="System.Runtime.Serialization.Json.JsonReaderWriterFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="66f9191772d6ceb62ed433c4a22052685c41d796" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52192868" /></Metadata><TypeSignature Language="C#" Value="public static class JsonReaderWriterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonReaderWriterFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonReaderWriterFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonReaderWriterFactory abstract sealed" />
  <TypeSignature Language="F#" Value="type JsonReaderWriterFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9f90f-101">Genera instancias de <see cref="T:System.Xml.XmlDictionaryReader" /> que pueden leer datos codificados por JavaScript Object Notation (JSON) de una secuencia o búfer y asignarlos a un conjunto de información XML e instancias de <see cref="T:System.Xml.XmlDictionaryWriter" /> que pueden asignar un conjunto de información XML a JSON y escribir datos codificados por JSON en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="9f90f-101">Produces instances of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <see cref="T:System.Xml.XmlDictionaryWriter" /> that can map an XML Infoset to JSON and write JSON-encoded data to a stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f90f-102">Windows Communication Foundation (WCF) procesa mensajes JSON con una asignación entre los datos JSON y el conjunto de información XML.</span><span class="sxs-lookup"><span data-stu-id="9f90f-102">Windows Communication Foundation (WCF) processes JSON messages using a mapping between JSON data and the XML Infoset.</span></span> <span data-ttu-id="9f90f-103">Normalmente, esta asignación está oculta.</span><span class="sxs-lookup"><span data-stu-id="9f90f-103">Normally, this mapping is hidden from view.</span></span> <span data-ttu-id="9f90f-104">Sin embargo, en algunos escenarios avanzados puede ser necesario realizar manualmente la conversión entre JSON y XML.</span><span class="sxs-lookup"><span data-stu-id="9f90f-104">However, in some advanced scenarios it may be necessary to manually convert between JSON and XML.</span></span> <span data-ttu-id="9f90f-105">En este caso, la clase <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> se puede utilizar para crear los sistemas de lectura y de escritura XML necesarios.</span><span class="sxs-lookup"><span data-stu-id="9f90f-105">In this case, the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> class can be used to create the necessary XML readers and writers.</span></span> <span data-ttu-id="9f90f-106">Observe que no es posible asignar a JSON todos los elementos de conjunto de información XML.</span><span class="sxs-lookup"><span data-stu-id="9f90f-106">Note that not every XML Infoset element can be mapped to JSON.</span></span> <span data-ttu-id="9f90f-107">Para obtener más información acerca de la asignación, consulte [Cómo: serializar y deserializar datos JSON](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span><span class="sxs-lookup"><span data-stu-id="9f90f-107">For more information about mapping, see [How to: Serialize and Deserialize JSON Data](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateJsonReader">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f90f-108">Crea un <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar secuencias o búferes codificados con JavaScript Object Notation (JSON) a un conjunto de información XML.</span><span class="sxs-lookup"><span data-stu-id="9f90f-108">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map - streams or buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f90f-109">Cada una de las sobrecargas usa <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques de denegación de servicio (DoS) al leer datos que no son de confianza.</span><span class="sxs-lookup"><span data-stu-id="9f90f-109">Each of the overloads uses a <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service (DoS) attacks when reading untrusted data.</span></span> <span data-ttu-id="9f90f-110">Para obtener más información sobre el uso de <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques por denegación de servicio al leer los datos de confianza, consulte [consideraciones de seguridad para datos](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="9f90f-110">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9f90f-111">La matriz de búferes <see cref="T:System.Byte" /> de entrada de la cual se leerá.</span><span class="sxs-lookup"><span data-stu-id="9f90f-111">The input <see cref="T:System.Byte" /> buffer array from which to read.</span></span></param>
        <param name="quotas"><span data-ttu-id="9f90f-112"><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</span><span class="sxs-lookup"><span data-stu-id="9f90f-112">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <summary><span data-ttu-id="9f90f-113">Crea un <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar búferes codificados con JavaScript Object Notation (JSON) a un conjunto de información XML.</span><span class="sxs-lookup"><span data-stu-id="9f90f-113">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="9f90f-114"><see cref="T:System.Xml.XmlDictionaryReader" /> que puede procesar datos JavaScript Object Notation (JSON).</span><span class="sxs-lookup"><span data-stu-id="9f90f-114">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can process JavaScript Object Notation (JSON) data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f90f-115">Esta sobrecarga no acepta un parámetro <xref:System.Text.Encoding>.</span><span class="sxs-lookup"><span data-stu-id="9f90f-115">This overload does not accept an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="9f90f-116">Se detecta automáticamente la codificación de caracteres (UTF-8, Unicode o Unicode Big-Endian) cuando se leen los datos.</span><span class="sxs-lookup"><span data-stu-id="9f90f-116">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="9f90f-117">Para obtener más información sobre el uso de <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques por denegación de servicio al leer los datos de confianza, consulte [consideraciones de seguridad para datos](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="9f90f-117">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : System.IO.Stream * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (stream, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="9f90f-118"><see cref="T:System.IO.Stream" /> de entrada de donde se leerá.</span><span class="sxs-lookup"><span data-stu-id="9f90f-118">The input <see cref="T:System.IO.Stream" /> from which to read.</span></span></param>
        <param name="quotas"><span data-ttu-id="9f90f-119"><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</span><span class="sxs-lookup"><span data-stu-id="9f90f-119">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <summary><span data-ttu-id="9f90f-120">Crea un <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar secuencias codificadas con JavaScript Object Notation (JSON) a un conjunto de información XML.</span><span class="sxs-lookup"><span data-stu-id="9f90f-120">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="9f90f-121"><see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</span><span class="sxs-lookup"><span data-stu-id="9f90f-121">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f90f-122">Esta sobrecarga no acepta un parámetro <xref:System.Text.Encoding>.</span><span class="sxs-lookup"><span data-stu-id="9f90f-122">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="9f90f-123">Se detecta automáticamente la codificación de caracteres (UTF-8, Unicode o Unicode Big-Endian) cuando se leen los datos.</span><span class="sxs-lookup"><span data-stu-id="9f90f-123">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="9f90f-124">Para obtener más información sobre el uso de <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques por denegación de servicio al leer los datos de confianza, consulte [consideraciones de seguridad para datos](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="9f90f-124">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), offset As Integer, count As Integer, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * int * int * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, offset, count, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9f90f-125">La matriz de búferes <see cref="T:System.Byte" /> de entrada de la cual se leerá.</span><span class="sxs-lookup"><span data-stu-id="9f90f-125">The input <see cref="T:System.Byte" /> buffer array from which to read.</span></span></param>
        <param name="offset"><span data-ttu-id="9f90f-126">Posición inicial de la que leer en <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="9f90f-126">Starting position from which to read in <paramref name="buffer" />.</span></span></param>
        <param name="count"><span data-ttu-id="9f90f-127">Número de bytes que se pueden leer de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="9f90f-127">Number of bytes that can be read from <paramref name="buffer" />.</span></span></param>
        <param name="quotas"><span data-ttu-id="9f90f-128"><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</span><span class="sxs-lookup"><span data-stu-id="9f90f-128">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <summary><span data-ttu-id="9f90f-129">Crea <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar búferes codificados con JavaScript Object Notation (JSON), de un tamaño y desplazamiento especificados, a un conjunto de información XML.</span><span class="sxs-lookup"><span data-stu-id="9f90f-129">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="9f90f-130"><see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</span><span class="sxs-lookup"><span data-stu-id="9f90f-130">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f90f-131">Esta sobrecarga no acepta un parámetro <xref:System.Text.Encoding>.</span><span class="sxs-lookup"><span data-stu-id="9f90f-131">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="9f90f-132">Se detecta automáticamente la codificación de caracteres (UTF-8, Unicode o Unicode Big-Endian) cuando se leen los datos.</span><span class="sxs-lookup"><span data-stu-id="9f90f-132">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="9f90f-133">Para obtener más información sobre el uso de <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques por denegación de servicio al leer los datos de confianza, consulte [consideraciones de seguridad para datos](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="9f90f-133">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : System.IO.Stream * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (stream, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="9f90f-134"><see cref="T:System.IO.Stream" /> de entrada de donde se leerá.</span><span class="sxs-lookup"><span data-stu-id="9f90f-134">The input <see cref="T:System.IO.Stream" /> from which to read.</span></span></param>
        <param name="encoding"><span data-ttu-id="9f90f-135"><see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el lector.</span><span class="sxs-lookup"><span data-stu-id="9f90f-135">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span></span> <span data-ttu-id="9f90f-136">Si se especifica <see langword="null" /> como valor, el lector intenta detectar automáticamente la codificación.</span><span class="sxs-lookup"><span data-stu-id="9f90f-136">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span></span></param>
        <param name="quotas"><span data-ttu-id="9f90f-137"><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</span><span class="sxs-lookup"><span data-stu-id="9f90f-137">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <param name="onClose"><span data-ttu-id="9f90f-138">Delegado <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> que se llamará cuando se cierre el lector.</span><span class="sxs-lookup"><span data-stu-id="9f90f-138">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span></span></param>
        <summary><span data-ttu-id="9f90f-139">Crea <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar secuencias codificadas con JavaScript Object Notation (JSON), de un tamaño y desplazamiento especificados, a un conjunto de información XML.</span><span class="sxs-lookup"><span data-stu-id="9f90f-139">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="9f90f-140"><see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</span><span class="sxs-lookup"><span data-stu-id="9f90f-140">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f90f-141">Para obtener más información sobre el uso de <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques por denegación de servicio al leer los datos de confianza, consulte [consideraciones de seguridad para datos](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="9f90f-141">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * int * int * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, offset, count, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9f90f-142">La matriz de búferes <see cref="T:System.Byte" /> de entrada de la cual se leerá.</span><span class="sxs-lookup"><span data-stu-id="9f90f-142">The input <see cref="T:System.Byte" /> buffer array from which to read.</span></span></param>
        <param name="offset"><span data-ttu-id="9f90f-143">Posición inicial de la que leer en <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="9f90f-143">Starting position from which to read in <paramref name="buffer" />.</span></span></param>
        <param name="count"><span data-ttu-id="9f90f-144">Número de bytes que se pueden leer de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="9f90f-144">Number of bytes that can be read from <paramref name="buffer" />.</span></span></param>
        <param name="encoding"><span data-ttu-id="9f90f-145"><see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el lector.</span><span class="sxs-lookup"><span data-stu-id="9f90f-145">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span></span> <span data-ttu-id="9f90f-146">Si se especifica <see langword="null" /> como valor, el lector intenta detectar automáticamente la codificación.</span><span class="sxs-lookup"><span data-stu-id="9f90f-146">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span></span></param>
        <param name="quotas"><span data-ttu-id="9f90f-147"><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</span><span class="sxs-lookup"><span data-stu-id="9f90f-147">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <param name="onClose"><span data-ttu-id="9f90f-148">Delegado <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> que se llamará cuando se cierre el lector.</span><span class="sxs-lookup"><span data-stu-id="9f90f-148">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span></span> <span data-ttu-id="9f90f-149">El valor predeterminado es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9f90f-149">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="9f90f-150">Crea <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar búferes codificados con JavaScript Object Notation (JSON), con un tamaño y desplazamiento especificados y codificación de caracteres, a un conjunto de información XML.</span><span class="sxs-lookup"><span data-stu-id="9f90f-150">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="9f90f-151"><see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</span><span class="sxs-lookup"><span data-stu-id="9f90f-151">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f90f-152">Para obtener más información sobre el uso de <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques por denegación de servicio al leer los datos de confianza, consulte [consideraciones de seguridad para datos](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="9f90f-152">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateJsonWriter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f90f-153">Crea un objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="9f90f-153">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f90f-154">El método estático <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> devuelve una instancia de <xref:System.Xml.XmlDictionaryWriter> que puede asignar un conjunto de información XML a una secuencia de JSON.</span><span class="sxs-lookup"><span data-stu-id="9f90f-154">The <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> static method returns an instance of an <xref:System.Xml.XmlDictionaryWriter> that can map an XML Infoset to a JSON stream.</span></span> <span data-ttu-id="9f90f-155">No se garantiza que <xref:System.Xml.XmlDictionaryWriter> genere JSON válido.</span><span class="sxs-lookup"><span data-stu-id="9f90f-155">The <xref:System.Xml.XmlDictionaryWriter> is not guaranteed to produce valid JSON.</span></span> <span data-ttu-id="9f90f-156">Si se utiliza en un modo no admitido por la asignación JSON-XML, puede iniciar una excepción o escribir un documento JSON no válido.</span><span class="sxs-lookup"><span data-stu-id="9f90f-156">If it is used in a way not supported by the JSON-XML mapping, it may either throw an exception or write an invalid JSON document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="9f90f-157"><see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</span><span class="sxs-lookup"><span data-stu-id="9f90f-157">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <summary><span data-ttu-id="9f90f-158">Crea un objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="9f90f-158">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span></span></summary>
        <returns><span data-ttu-id="9f90f-159"><see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</span><span class="sxs-lookup"><span data-stu-id="9f90f-159">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f90f-160">La codificación de caracteres predeterminada es UTF-8.</span><span class="sxs-lookup"><span data-stu-id="9f90f-160">The default character encoding is UTF-8.</span></span> <span data-ttu-id="9f90f-161">Cuando se cierra el sistema de escritura, se cierra también la secuencia.</span><span class="sxs-lookup"><span data-stu-id="9f90f-161">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="9f90f-162"><see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</span><span class="sxs-lookup"><span data-stu-id="9f90f-162">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="9f90f-163"><see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura.</span><span class="sxs-lookup"><span data-stu-id="9f90f-163">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="9f90f-164">La codificación predeterminada es UTF-8.</span><span class="sxs-lookup"><span data-stu-id="9f90f-164">The default encoding is UTF-8.</span></span></param>
        <summary><span data-ttu-id="9f90f-165">Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con una codificación de caracteres especificada.</span><span class="sxs-lookup"><span data-stu-id="9f90f-165">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span></span></summary>
        <returns><span data-ttu-id="9f90f-166"><see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</span><span class="sxs-lookup"><span data-stu-id="9f90f-166">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f90f-167">Cuando se cierra el sistema de escritura, se cierra también la secuencia.</span><span class="sxs-lookup"><span data-stu-id="9f90f-167">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="9f90f-168"><see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</span><span class="sxs-lookup"><span data-stu-id="9f90f-168">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="9f90f-169"><see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura.</span><span class="sxs-lookup"><span data-stu-id="9f90f-169">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="9f90f-170">La codificación predeterminada es UTF-8.</span><span class="sxs-lookup"><span data-stu-id="9f90f-170">The default encoding is UTF-8.</span></span></param>
        <param name="ownsStream"><span data-ttu-id="9f90f-171">Si es <see langword="true" />, el sistema de escritura cerrará el flujo de salida cuando haya finalizado; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f90f-171">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span></span> <span data-ttu-id="9f90f-172">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="9f90f-172">The default value is <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="9f90f-173">Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con una codificación de caracteres especificada.</span><span class="sxs-lookup"><span data-stu-id="9f90f-173">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span></span></summary>
        <returns><span data-ttu-id="9f90f-174"><see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</span><span class="sxs-lookup"><span data-stu-id="9f90f-174">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool * bool -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream, indent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="9f90f-175"><see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</span><span class="sxs-lookup"><span data-stu-id="9f90f-175">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="9f90f-176"><see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura.</span><span class="sxs-lookup"><span data-stu-id="9f90f-176">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="9f90f-177">La codificación predeterminada es UTF-8.</span><span class="sxs-lookup"><span data-stu-id="9f90f-177">The default encoding is UTF-8.</span></span></param>
        <param name="ownsStream"><span data-ttu-id="9f90f-178">Si es <see langword="true" />, el sistema de escritura cerrará el flujo de salida cuando haya finalizado; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f90f-178">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span></span> <span data-ttu-id="9f90f-179">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="9f90f-179">The default value is <see langword="true" />.</span></span></param>
        <param name="indent"><span data-ttu-id="9f90f-180">Si es <see langword="true" />, la salida usa el formato multilínea y aplica sangría a cada nivel correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f90f-180">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9f90f-181">Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con un carácter especificado.</span><span class="sxs-lookup"><span data-stu-id="9f90f-181">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span></span></summary>
        <returns><span data-ttu-id="9f90f-182"><see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</span><span class="sxs-lookup"><span data-stu-id="9f90f-182">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent, System::String ^ indentChars);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool * bool * string -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream, indent, indentChars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
        <Parameter Name="indentChars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="9f90f-183"><see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</span><span class="sxs-lookup"><span data-stu-id="9f90f-183">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="9f90f-184"><see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura.</span><span class="sxs-lookup"><span data-stu-id="9f90f-184">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="9f90f-185">La codificación predeterminada es UTF-8.</span><span class="sxs-lookup"><span data-stu-id="9f90f-185">The default encoding is UTF-8.</span></span></param>
        <param name="ownsStream"><span data-ttu-id="9f90f-186">Si es <see langword="true" />, el sistema de escritura cerrará el flujo de salida cuando haya finalizado; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f90f-186">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span></span> <span data-ttu-id="9f90f-187">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="9f90f-187">The default value is <see langword="true" />.</span></span></param>
        <param name="indent"><span data-ttu-id="9f90f-188">Si es <see langword="true" />, la salida usa el formato multilínea y aplica sangría a cada nivel correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f90f-188">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span></span></param>
        <param name="indentChars"><span data-ttu-id="9f90f-189">La cadena usada para aplicar sangría a cada nivel.</span><span class="sxs-lookup"><span data-stu-id="9f90f-189">The string used to indent each level.</span></span></param>
        <summary><span data-ttu-id="9f90f-190">Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con un carácter especificado.</span><span class="sxs-lookup"><span data-stu-id="9f90f-190">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span></span></summary>
        <returns><span data-ttu-id="9f90f-191"><see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</span><span class="sxs-lookup"><span data-stu-id="9f90f-191">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
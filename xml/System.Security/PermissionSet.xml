<Type Name="PermissionSet" FullName="System.Security.PermissionSet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5e968d4d910ee31d7afbc1ee43293bbd804f03fe" /><Meta Name="ms.sourcegitcommit" Value="22744e2f9d07a51900a968efffd9e390117d64a1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/03/2019" /><Meta Name="ms.locfileid" Value="55673714" /></Metadata><TypeSignature Language="C#" Value="public class PermissionSet : System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Security.ISecurityEncodable, System.Security.IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PermissionSet extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Security.ISecurityEncodable, class System.Security.IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.PermissionSet" />
  <TypeSignature Language="VB.NET" Value="Public Class PermissionSet&#xA;Implements ICollection, IDeserializationCallback, ISecurityEncodable, IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public ref class PermissionSet : System::Collections::ICollection, System::Runtime::Serialization::IDeserializationCallback, System::Security::ISecurityEncodable, System::Security::IStackWalk" />
  <TypeSignature Language="F#" Value="type PermissionSet = class&#xA;    interface ISecurityEncodable&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IStackWalk&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IStackWalk</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="04edd-101">Representa una colección que puede contener muchos tipos diferentes de permisos.</span><span class="sxs-lookup"><span data-stu-id="04edd-101">Represents a collection that can contain many different types of permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-102">Puede usar <xref:System.Security.PermissionSet> para realizar operaciones en varios permisos diferentes como un grupo.</span><span class="sxs-lookup"><span data-stu-id="04edd-102">You can use <xref:System.Security.PermissionSet> to perform operations on several different permissions as a group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-103">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet> clases y miembros.</span><span class="sxs-lookup"><span data-stu-id="04edd-103">The following code example demonstrates the use of the <xref:System.Security.PermissionSet> class and members.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#1)]
 [!code-csharp[System.Security.PermissionSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#1)]
 [!code-vb[System.Security.PermissionSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="04edd-104">para los herederos sean de plena confianza o en un ensamblado firmado con Microsoft <see cref="T:System.Security.Policy.StrongName" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-104">for inheritors to be fully trusted, or in an assembly that is signed with the Microsoft <see cref="T:System.Security.Policy.StrongName" />.</span></span></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04edd-105">Inicializa una nueva instancia de la clase <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-105">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PermissionSet (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PermissionSet(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.PermissionSet : System.Security.Permissions.PermissionState -&gt; System.Security.PermissionSet" Usage="new System.Security.PermissionSet state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="04edd-106">Uno de los valores de la enumeración que especifica el tipo de acceso del conjunto de permisos a los recursos.</span><span class="sxs-lookup"><span data-stu-id="04edd-106">One of the enumeration values that specifies the permission set's access to resources.</span></span></param>
        <summary><span data-ttu-id="04edd-107">Inicializa una nueva instancia de la clase <see cref="T:System.Security.PermissionSet" /> con el objeto <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="04edd-107">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-108">El `Unrestricted` estado permite que todos los permisos que implementan la <xref:System.Security.Permissions.IUnrestrictedPermission> interfaz, mientras que `None` permite ningún permiso.</span><span class="sxs-lookup"><span data-stu-id="04edd-108">The `Unrestricted` state allows all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface, while `None` allows no permissions.</span></span>  
  
 <span data-ttu-id="04edd-109">Use <xref:System.Security.PermissionSet.AddPermission%2A> en un valor vacío <xref:System.Security.PermissionSet> para definir el conjunto con más detalle.</span><span class="sxs-lookup"><span data-stu-id="04edd-109">Use <xref:System.Security.PermissionSet.AddPermission%2A> on an empty <xref:System.Security.PermissionSet> to define the set in greater detail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-110">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.%23ctor%2A> constructor para crear un permiso establecido con un estado de permiso <xref:System.Security.Permissions.PermissionState.None>.</span><span class="sxs-lookup"><span data-stu-id="04edd-110">The following code example shows the use of the <xref:System.Security.PermissionSet.%23ctor%2A> constructor to create a permission set with a permission state of <xref:System.Security.Permissions.PermissionState.None>.</span></span> <span data-ttu-id="04edd-111">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-111">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#2)]
 [!code-csharp[System.Security.PermissionSet#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#2)]
 [!code-vb[System.Security.PermissionSet#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="04edd-112">El parámetro <paramref name="state" /> no es un valor <see cref="T:System.Security.Permissions.PermissionState" /> válido.</span><span class="sxs-lookup"><span data-stu-id="04edd-112">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PermissionSet (System.Security.PermissionSet permSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.PermissionSet permSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (permSet As PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PermissionSet(System::Security::PermissionSet ^ permSet);" />
      <MemberSignature Language="F#" Value="new System.Security.PermissionSet : System.Security.PermissionSet -&gt; System.Security.PermissionSet" Usage="new System.Security.PermissionSet permSet" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="permSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="permSet"><span data-ttu-id="04edd-113">El conjunto del que se obtiene el valor del nuevo <see cref="T:System.Security.PermissionSet" />, o <see langword="null" /> para crear un <see cref="T:System.Security.PermissionSet" /> vacío.</span><span class="sxs-lookup"><span data-stu-id="04edd-113">The set from which to take the value of the new <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> to create an empty <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="04edd-114">Inicializa una nueva instancia de la clase <see cref="T:System.Security.PermissionSet" /> con valores iniciales tomados del parámetro <paramref name="permSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-114">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with initial values taken from the <paramref name="permSet" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-115">El nuevo <xref:System.Security.PermissionSet> contiene copias de los permisos incluidos en la instancia especificada <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="04edd-115">The new <xref:System.Security.PermissionSet> contains copies of the permissions contained in the specified <xref:System.Security.PermissionSet>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04edd-116">Esto es equivalente a <xref:System.Security.PermissionSet.Copy%2A> cuando el `permSet` parámetro no es `null`.</span><span class="sxs-lookup"><span data-stu-id="04edd-116">This is equivalent to <xref:System.Security.PermissionSet.Copy%2A> when the `permSet` parameter is not `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission AddPermission (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission AddPermission(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPermission (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ AddPermission(System::Security::IPermission ^ perm);" />
      <MemberSignature Language="F#" Value="member this.AddPermission : System.Security.IPermission -&gt; System.Security.IPermission" Usage="permissionSet.AddPermission perm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="04edd-117">Permiso que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="04edd-117">The permission to add.</span></span></param>
        <summary><span data-ttu-id="04edd-118">Agrega un permiso especificado a <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-118">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="04edd-119">Unión del permiso agregado y de cualquier permiso del mismo tipo que ya existe en <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-119">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-120">Si un permiso del mismo tipo que el permiso se ha agregado ya existe en el <xref:System.Security.PermissionSet>, el nuevo permiso es la unión del objeto de permiso existente y el objeto de permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="04edd-120">If a permission of the same type as the added permission already exists in the <xref:System.Security.PermissionSet>, the new permission is the union of the existing permission object and the specified permission object.</span></span> <span data-ttu-id="04edd-121">Por ejemplo, si un permiso que implementa <xref:System.Security.Permissions.IUnrestrictedPermission> se agrega a un <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Security.PermissionSet>, la unión resultante es el original `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="04edd-121">For example, if a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is added to an <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Security.PermissionSet>, the resulting union is the original `Unrestricted`<xref:System.Security.PermissionSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-122">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.AddPermission%2A> para agregar un permiso a un conjunto de permisos.</span><span class="sxs-lookup"><span data-stu-id="04edd-122">The following code example shows the use of the <xref:System.Security.PermissionSet.AddPermission%2A> method to add a permission to a permission set.</span></span> <span data-ttu-id="04edd-123">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-123">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#3)]
 [!code-csharp[System.Security.PermissionSet#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#3)]
 [!code-vb[System.Security.PermissionSet#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04edd-124">Se llama al método desde un <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-124">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="04edd-125">Al heredar de <see cref="T:System.Security.PermissionSet" />, puede cambiar el comportamiento de la <see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /> método invalidando el <see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-125">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /> method by overriding the <see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="AddPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission AddPermissionImpl (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission AddPermissionImpl(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddPermissionImpl (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ AddPermissionImpl(System::Security::IPermission ^ perm);" />
      <MemberSignature Language="F#" Value="abstract member AddPermissionImpl : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.AddPermissionImpl : System.Security.IPermission -&gt; System.Security.IPermission" Usage="permissionSet.AddPermissionImpl perm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="04edd-126">Permiso que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="04edd-126">The permission to add.</span></span></param>
        <summary><span data-ttu-id="04edd-127">Agrega un permiso especificado a <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-127">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="04edd-128">Unión del permiso agregado y de cualquier permiso del mismo tipo que ya existe en <see cref="T:System.Security.PermissionSet" />, o <see langword="null" /> si <paramref name="perm" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-128">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if <paramref name="perm" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-129">El <xref:System.Security.PermissionSet.AddPermissionImpl%2A> método es la implementación para el <xref:System.Security.PermissionSet.AddPermission%2A> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-129">The <xref:System.Security.PermissionSet.AddPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.AddPermission%2A> method.</span></span>  
  
 <span data-ttu-id="04edd-130">Si un permiso del mismo tipo que el permiso se ha agregado ya existe en el <xref:System.Security.PermissionSet>, el nuevo permiso es la unión del objeto de permiso existente y el objeto de permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="04edd-130">If a permission of the same type as the added permission already exists in the <xref:System.Security.PermissionSet>, the new permission is the union of the existing permission object and the specified permission object.</span></span> <span data-ttu-id="04edd-131">Por ejemplo, si un permiso que implementa <xref:System.Security.Permissions.IUnrestrictedPermission> se agrega a un <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Security.PermissionSet>, la unión resultante es el original `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="04edd-131">For example, if a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is added to an <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Security.PermissionSet>, the resulting union is the original `Unrestricted`<xref:System.Security.PermissionSet>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04edd-132">Se llama al método desde un <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-132">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Assert();" />
      <MemberSignature Language="F#" Value="abstract member Assert : unit -&gt; unit&#xA;override this.Assert : unit -&gt; unit" Usage="permissionSet.Assert " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Assert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04edd-133">Declara que el código de llamada puede tener acceso al recurso protegido por una demanda de permiso a través del código que llama a este método, incluso si los autores de la llamada situados en una posición más alta de la pila no tienen permiso para tener acceso al recurso.</span><span class="sxs-lookup"><span data-stu-id="04edd-133">Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</span></span> <span data-ttu-id="04edd-134">Con <see cref="M:System.Security.PermissionSet.Assert" /> puede crear vulnerabilidades de seguridad.</span><span class="sxs-lookup"><span data-stu-id="04edd-134">Using <see cref="M:System.Security.PermissionSet.Assert" /> can create security vulnerabilities.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-135">Esta es la única manera de declarar varios permisos al mismo tiempo dentro de un marco, porque sólo un <xref:System.Security.PermissionSet.Assert%2A> pueden estar activas en un marco.</span><span class="sxs-lookup"><span data-stu-id="04edd-135">This is the only way to assert multiple permissions at the same time within a frame because only one <xref:System.Security.PermissionSet.Assert%2A> can be active on a frame.</span></span> <span data-ttu-id="04edd-136"><xref:System.Security.PermissionSet.Assert%2A> solo es efectivo de permisos concedidos.</span><span class="sxs-lookup"><span data-stu-id="04edd-136"><xref:System.Security.PermissionSet.Assert%2A> is only effective for granted permissions.</span></span> <span data-ttu-id="04edd-137">Llame a la <xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType> o <xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType> método para cancelar un activo <xref:System.Security.PermissionSet.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="04edd-137">Call the <xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType> or <xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType> method to cancel an active <xref:System.Security.PermissionSet.Assert%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="04edd-138">Dado que una llamada a la <xref:System.Security.PermissionSet.Assert%2A> método quita el requisito de que todo el código en la cadena de llamada debe tener el permiso para acceder al recurso especificado, lo cual puede provocar vulnerabilidades de seguridad si utiliza incorrectamente o incorrectamente.</span><span class="sxs-lookup"><span data-stu-id="04edd-138">Because calling the <xref:System.Security.PermissionSet.Assert%2A> method removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</span></span> <span data-ttu-id="04edd-139">Por lo tanto, debe usarse con mucha precaución.</span><span class="sxs-lookup"><span data-stu-id="04edd-139">Therefore, it should be used with great caution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="04edd-140">La instancia <see cref="T:System.Security.PermissionSet" /> afirmada no se ha concedido para el código de aserción.</span><span class="sxs-lookup"><span data-stu-id="04edd-140">The <see cref="T:System.Security.PermissionSet" /> instance asserted has not been granted to the asserting code.</span></span>  
  
<span data-ttu-id="04edd-141">O bien</span><span class="sxs-lookup"><span data-stu-id="04edd-141">-or-</span></span> 
<span data-ttu-id="04edd-142">Ya hay una <see cref="M:System.Security.PermissionSet.Assert" /> activa para el marco actual.</span><span class="sxs-lookup"><span data-stu-id="04edd-142">There is already an active <see cref="M:System.Security.PermissionSet.Assert" /> for the current frame.</span></span></exception>
        <related type="Article" href="~/docs/framework/misc/using-the-assert-method.md"><span data-ttu-id="04edd-143">Utilizar el método Assert</span><span class="sxs-lookup"><span data-stu-id="04edd-143">Using the Assert Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContainsNonCodeAccessPermissions">
      <MemberSignature Language="C#" Value="public bool ContainsNonCodeAccessPermissions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsNonCodeAccessPermissions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsNonCodeAccessPermissions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsNonCodeAccessPermissions();" />
      <MemberSignature Language="F#" Value="member this.ContainsNonCodeAccessPermissions : unit -&gt; bool" Usage="permissionSet.ContainsNonCodeAccessPermissions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04edd-144">Obtiene un valor que indica si <see cref="T:System.Security.PermissionSet" /> contiene permisos que no se derivan de <see cref="T:System.Security.CodeAccessPermission" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-144">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />.</span></span></summary>
        <returns><span data-ttu-id="04edd-145"><see langword="true" /> si <see cref="T:System.Security.PermissionSet" /> contiene permisos que no se derivan de <see cref="T:System.Security.CodeAccessPermission" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-145"><see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="04edd-146">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-146">The following code example shows the use of the <xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A> method.</span></span> <span data-ttu-id="04edd-147">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-147">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#9)]
 [!code-csharp[System.Security.PermissionSet#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#9)]
 [!code-vb[System.Security.PermissionSet#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertPermissionSet">
      <MemberSignature Language="C#" Value="public static byte[] ConvertPermissionSet (string inFormat, byte[] inData, string outFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ConvertPermissionSet(string inFormat, unsigned int8[] inData, string outFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertPermissionSet (inFormat As String, inData As Byte(), outFormat As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ ConvertPermissionSet(System::String ^ inFormat, cli::array &lt;System::Byte&gt; ^ inData, System::String ^ outFormat);" />
      <MemberSignature Language="F#" Value="static member ConvertPermissionSet : string * byte[] * string -&gt; byte[]" Usage="System.Security.PermissionSet.ConvertPermissionSet (inFormat, inData, outFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and shoud no longer be used.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inFormat" Type="System.String" />
        <Parameter Name="inData" Type="System.Byte[]" />
        <Parameter Name="outFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inFormat"><span data-ttu-id="04edd-148">Cadena que representa uno de los formatos de codificación siguientes: ASCII, Unicode o Binary.</span><span class="sxs-lookup"><span data-stu-id="04edd-148">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span></span> <span data-ttu-id="04edd-149">Los valores posibles son: "XMLASCII" o "XML", "XMLUNICODE" y "BINARIO".</span><span class="sxs-lookup"><span data-stu-id="04edd-149">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span></span></param>
        <param name="inData"><span data-ttu-id="04edd-150">Conjunto de permisos codificados en XML.</span><span class="sxs-lookup"><span data-stu-id="04edd-150">An XML-encoded permission set.</span></span></param>
        <param name="outFormat"><span data-ttu-id="04edd-151">Cadena que representa uno de los formatos de codificación siguientes: ASCII, Unicode o Binary.</span><span class="sxs-lookup"><span data-stu-id="04edd-151">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span></span> <span data-ttu-id="04edd-152">Los valores posibles son: "XMLASCII" o "XML", "XMLUNICODE" y "BINARIO".</span><span class="sxs-lookup"><span data-stu-id="04edd-152">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span></span></param>
        <summary><span data-ttu-id="04edd-153">Convierte un <see cref="T:System.Security.PermissionSet" /> codificado de un formato de codificación XML a otro formato de codificación XML.</span><span class="sxs-lookup"><span data-stu-id="04edd-153">Converts an encoded <see cref="T:System.Security.PermissionSet" /> from one XML encoding format to another XML encoding format.</span></span></summary>
        <returns><span data-ttu-id="04edd-154">Conjunto de permisos de cifrado establecido con el formato de salida especificado.</span><span class="sxs-lookup"><span data-stu-id="04edd-154">An encrypted permission set with the specified output format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-155">No utilice este método.</span><span class="sxs-lookup"><span data-stu-id="04edd-155">Do not use this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="04edd-156">En todos los casos.</span><span class="sxs-lookup"><span data-stu-id="04edd-156">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual System.Security.PermissionSet Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.PermissionSet Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Copy () As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::PermissionSet ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.PermissionSet&#xA;override this.Copy : unit -&gt; System.Security.PermissionSet" Usage="permissionSet.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04edd-157">Crea una copia de la clase <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-157">Creates a copy of the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="04edd-158">Una copia de <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-158">A copy of the <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-159">Una copia de un <xref:System.Security.PermissionSet> representa el mismo acceso a los recursos que el objeto original.</span><span class="sxs-lookup"><span data-stu-id="04edd-159">A copy of a <xref:System.Security.PermissionSet> represents the same access to resources as the original object.</span></span> <span data-ttu-id="04edd-160">Los cambios realizados en la copia no afectan el conjunto de permisos original.</span><span class="sxs-lookup"><span data-stu-id="04edd-160">Changes made to the copy do not affect the original permission set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-161">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.Copy%2A> método para crear una copia de un conjunto de permisos.</span><span class="sxs-lookup"><span data-stu-id="04edd-161">The following code example shows the use of the <xref:System.Security.PermissionSet.Copy%2A> method to create a copy of a permission set.</span></span> <span data-ttu-id="04edd-162">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-162">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#20)]
 [!code-csharp[System.Security.PermissionSet#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#20)]
 [!code-vb[System.Security.PermissionSet#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="permissionSet.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="04edd-163">Matriz de destino en la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="04edd-163">The target array to which to copy.</span></span></param>
        <param name="index"><span data-ttu-id="04edd-164">Posición inicial de la matriz donde comienza la copia (basada en cero).</span><span class="sxs-lookup"><span data-stu-id="04edd-164">The starting position in the array to begin copying (zero based).</span></span></param>
        <summary><span data-ttu-id="04edd-165">Copia los objetos de permiso del conjunto en la ubicación indicada de un <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-165">Copies the permission objects of the set to the indicated location in an <see cref="T:System.Array" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04edd-166">El parámetro <paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-166">The <paramref name="array" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="04edd-167">El parámetro <paramref name="array" /> tiene más de una dimensión.</span><span class="sxs-lookup"><span data-stu-id="04edd-167">The <paramref name="array" /> parameter has more than one dimension.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="04edd-168">El parámetro <paramref name="index" /> está fuera del intervalo del parámetro <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-168">The <paramref name="index" /> parameter is out of the range of the <paramref name="array" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Security.PermissionSet.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04edd-169">Obtiene el número de objetos de permiso contenidos en el conjunto de permisos.</span><span class="sxs-lookup"><span data-stu-id="04edd-169">Gets the number of permission objects contained in the permission set.</span></span></summary>
        <value><span data-ttu-id="04edd-170">Número de objetos de permiso incluidos en el <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-170">The number of permission objects contained in the <see cref="T:System.Security.PermissionSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-171">En el `None` o `Unrestricted` estado devuelve cero, ya que se utiliza ninguna instancia de objeto de permiso real.</span><span class="sxs-lookup"><span data-stu-id="04edd-171">In the `None` or `Unrestricted` state this returns zero, because no actual permission object instances are used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-172">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.Count%2A> propiedad va a obtener el número de objetos de permiso en un conjunto de permisos.</span><span class="sxs-lookup"><span data-stu-id="04edd-172">The following code example shows the use of the <xref:System.Security.PermissionSet.Count%2A> property to get the number of permission objects in a permission set.</span></span> <span data-ttu-id="04edd-173">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-173">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#5)]
 [!code-csharp[System.Security.PermissionSet#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#5)]
 [!code-vb[System.Security.PermissionSet#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit&#xA;override this.Demand : unit -&gt; unit" Usage="permissionSet.Demand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04edd-174">Fuerza una <see cref="T:System.Security.SecurityException" /> en tiempo de ejecución si a todos los llamadores situados más arriba en la pila de llamadas no se les han concedido los permisos especificados por la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="04edd-174">Forces a <see cref="T:System.Security.SecurityException" /> at run time if all callers higher in the call stack have not been granted the permissions specified by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-175">Use <xref:System.Security.PermissionSet.Demand%2A> en un <xref:System.Security.PermissionSet> para asegurarse de que todos los llamadores tienen todos los permisos en el conjunto con una sola operación.</span><span class="sxs-lookup"><span data-stu-id="04edd-175">Use <xref:System.Security.PermissionSet.Demand%2A> on a <xref:System.Security.PermissionSet> to ensure that all callers have all permissions in the set with one operation.</span></span>  
  
 <span data-ttu-id="04edd-176">Los permisos del código que llama a este método no se examinan; la comprobación comienza desde el llamador inmediato de ese código y continúa hasta la pila.</span><span class="sxs-lookup"><span data-stu-id="04edd-176">The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="04edd-177">La pila de llamadas suele representarse de forma decreciente, por lo que más arriba en la pila de llamadas de métodos llamar a métodos inferior en la pila de llamadas.</span><span class="sxs-lookup"><span data-stu-id="04edd-177">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="04edd-178"><xref:System.Security.PermissionSet.Demand%2A> se realiza correctamente sólo si no hay ningún <xref:System.Security.SecurityException> se produce.</span><span class="sxs-lookup"><span data-stu-id="04edd-178"><xref:System.Security.PermissionSet.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is thrown.</span></span>  
  
 <span data-ttu-id="04edd-179">Si el <xref:System.Security.PermissionSet> contiene permisos que no heredan de <xref:System.Security.CodeAccessPermission>, el `Demand` se llama a métodos de estos permisos también.</span><span class="sxs-lookup"><span data-stu-id="04edd-179">If the <xref:System.Security.PermissionSet> contains permissions that do not inherit from <xref:System.Security.CodeAccessPermission>, the `Demand` methods of those permissions are called as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-180">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.Demand%2A> método para solicitar todos los permisos en un conjunto de permisos.</span><span class="sxs-lookup"><span data-stu-id="04edd-180">The following code example shows the use of the <xref:System.Security.PermissionSet.Demand%2A> method to demand all the permissions in a permission set.</span></span> <span data-ttu-id="04edd-181">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-181">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#4)]
 [!code-csharp[System.Security.PermissionSet#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#4)]
 [!code-vb[System.Security.PermissionSet#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="04edd-182">Un llamador de la cadena de llamadas no tiene el permiso demandado.</span><span class="sxs-lookup"><span data-stu-id="04edd-182">A caller in the call chain does not have the permission demanded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Deny();" />
      <MemberSignature Language="F#" Value="abstract member Deny : unit -&gt; unit&#xA;override this.Deny : unit -&gt; unit" Usage="permissionSet.Deny " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Deny</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Deny is obsolete and will be removed in a future release of the .NET Framework. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04edd-183">Hace que cualquier <see cref="M:System.Security.PermissionSet.Demand" /> que pase por el código de llamada para un permiso que tiene una intersección con un permiso de un tipo incluido en el <see cref="T:System.Security.PermissionSet" /> actual genere un error.</span><span class="sxs-lookup"><span data-stu-id="04edd-183">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for a permission that has an intersection with a permission of a type contained in the current <see cref="T:System.Security.PermissionSet" /> to fail.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-184">Este método evita que los llamadores situados en la pila de llamadas de acceso al recurso protegido a través del código que llama a este método, incluso si los llamadores tienen permiso para acceder a él.</span><span class="sxs-lookup"><span data-stu-id="04edd-184">This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</span></span> <span data-ttu-id="04edd-185">La pila de llamadas suele representarse de forma decreciente, por lo que más arriba en la pila de llamadas de métodos llamar a métodos inferior en la pila de llamadas.</span><span class="sxs-lookup"><span data-stu-id="04edd-185">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="04edd-186"><xref:System.Security.PermissionSet.Deny%2A> puede limitar la responsabilidad del programador o ayudar a evitar vulnerabilidades de seguridad accidental, ya que ayuda a evitar que el método que llama a <xref:System.Security.PermissionSet.Deny%2A> desde que se usa para tener acceso al recurso protegido por el permiso denegado.</span><span class="sxs-lookup"><span data-stu-id="04edd-186"><xref:System.Security.PermissionSet.Deny%2A> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <xref:System.Security.PermissionSet.Deny%2A> from being used to access the resource protected by the denied permission.</span></span> <span data-ttu-id="04edd-187">Si llama un método <xref:System.Security.PermissionSet.Deny%2A> en un permiso y si un <xref:System.Security.PermissionSet.Demand%2A> para ese permiso se invoque un llamante más abajo en la pila de llamadas, se produce un error en dicha comprobación de seguridad cuando se alcanza el <xref:System.Security.PermissionSet.Deny%2A>.</span><span class="sxs-lookup"><span data-stu-id="04edd-187">If a method calls <xref:System.Security.PermissionSet.Deny%2A> on a permission, and if a <xref:System.Security.PermissionSet.Demand%2A> for that permission is invoked by a caller lower in the call stack, that security check fails when it reaches the <xref:System.Security.PermissionSet.Deny%2A>.</span></span>  
  
 <span data-ttu-id="04edd-188"><xref:System.Security.PermissionSet.Deny%2A> se omite para un permiso no concedido ya no se puede realizar una petición para ese permiso.</span><span class="sxs-lookup"><span data-stu-id="04edd-188"><xref:System.Security.PermissionSet.Deny%2A> is ignored for a permission that is not granted because a demand for that permission cannot succeed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="04edd-189">Una llamada anterior a <see cref="M:System.Security.PermissionSet.Deny" /> ya ha restringido los permisos para el marco de pila actual.</span><span class="sxs-lookup"><span data-stu-id="04edd-189">A previous call to <see cref="M:System.Security.PermissionSet.Deny" /> has already restricted the permissions for the current stack frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Equals(System.Object)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="permissionSet.Equals o" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="permissionSet.Equals obj" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Equals(System.Object)" FrameworkAlternate="netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="04edd-190">Objeto que se va a comparar con el objeto <see cref="T:System.Security.PermissionSet" /> actual.</span><span class="sxs-lookup"><span data-stu-id="04edd-190">The object to compare with the current <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <param name="obj">To be added.</param>
        <summary><span data-ttu-id="04edd-191">Determina si el objeto <see cref="T:System.Security.PermissionSet" /> o <see cref="T:System.Security.NamedPermissionSet" /> especificado es igual al objeto <see cref="T:System.Security.PermissionSet" /> actual.</span><span class="sxs-lookup"><span data-stu-id="04edd-191">Determines whether the specified <see cref="T:System.Security.PermissionSet" /> or <see cref="T:System.Security.NamedPermissionSet" /> object is equal to the current <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="04edd-192">Es <see langword="true" /> si el objeto especificado es igual al objeto <see cref="T:System.Security.PermissionSet" /> actual; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-192"><see langword="true" /> if the specified object is equal to the current <see cref="T:System.Security.PermissionSet" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-193">Igualdad viene determinada por los permisos incluidos en el conjunto de permisos especificado por `obj`.</span><span class="sxs-lookup"><span data-stu-id="04edd-193">Equality is determined by the permissions contained in the permission set specified by `obj`.</span></span> <span data-ttu-id="04edd-194">`obj` puede ser un <xref:System.Security.PermissionSet> objeto o un <xref:System.Security.NamedPermissionSet> objeto.</span><span class="sxs-lookup"><span data-stu-id="04edd-194">`obj` can be either a <xref:System.Security.PermissionSet> object or a <xref:System.Security.NamedPermissionSet> object.</span></span> <span data-ttu-id="04edd-195">Si `obj` es un <xref:System.Security.NamedPermissionSet>, se omiten el nombre y descripción.</span><span class="sxs-lookup"><span data-stu-id="04edd-195">If `obj` is a <xref:System.Security.NamedPermissionSet>, the name and description are ignored.</span></span>  
  
 <span data-ttu-id="04edd-196">Para obtener más información, vea <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="04edd-196">For more information, see <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public virtual void FromXml (System.Security.SecurityElement et);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement et) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FromXml (et As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ et);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="permissionSet.FromXml et" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="et" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="et"><span data-ttu-id="04edd-197">Codificación XML que se usará para reconstruir el objeto de seguridad.</span><span class="sxs-lookup"><span data-stu-id="04edd-197">The XML encoding to use to reconstruct the security object.</span></span></param>
        <summary><span data-ttu-id="04edd-198">Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</span><span class="sxs-lookup"><span data-stu-id="04edd-198">Reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="04edd-199">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.FromXml%2A> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-199">The following code example shows the use of the <xref:System.Security.PermissionSet.FromXml%2A> method.</span></span> <span data-ttu-id="04edd-200">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-200">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#17)]
 [!code-csharp[System.Security.PermissionSet#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#17)]
 [!code-vb[System.Security.PermissionSet#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04edd-201">El parámetro <paramref name="et" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-201">The <paramref name="et" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="04edd-202">El parámetro <paramref name="et" /> no es un elemento de permiso válido.</span><span class="sxs-lookup"><span data-stu-id="04edd-202">The <paramref name="et" /> parameter is not a valid permission element.</span></span>  
  
<span data-ttu-id="04edd-203">O bien</span><span class="sxs-lookup"><span data-stu-id="04edd-203">-or-</span></span> 
<span data-ttu-id="04edd-204">No se admite el número de la versión del parámetro <paramref name="et" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-204">The <paramref name="et" /> parameter's version number is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="permissionSet.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04edd-205">Devuelve un enumerador para los permisos del conjunto.</span><span class="sxs-lookup"><span data-stu-id="04edd-205">Returns an enumerator for the permissions of the set.</span></span></summary>
        <returns><span data-ttu-id="04edd-206">Objeto enumerador para los permisos del conjunto.</span><span class="sxs-lookup"><span data-stu-id="04edd-206">An enumerator object for the permissions of the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-207">El enumerador se utiliza como un índice para tener acceso a objetos de los permisos en el conjunto.</span><span class="sxs-lookup"><span data-stu-id="04edd-207">Use the enumerator as an index to access individual permission objects in the set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-208">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.GetEnumerator%2A> método para enumerar todos los permisos en un conjunto de permisos.</span><span class="sxs-lookup"><span data-stu-id="04edd-208">The following code example shows the use of the <xref:System.Security.PermissionSet.GetEnumerator%2A> method to list all the permissions in a permission set.</span></span> <span data-ttu-id="04edd-209">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-209">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#18)]
 [!code-csharp[System.Security.PermissionSet#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#18)]
 [!code-vb[System.Security.PermissionSet#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#18)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="04edd-210">Al heredar de <see cref="T:System.Security.PermissionSet" />, puede cambiar el comportamiento de la <see cref="M:System.Security.PermissionSet.GetEnumerator" /> método invalidando el <see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-210">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.GetEnumerator" /> method by overriding the <see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IEnumerator GetEnumeratorImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumeratorImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetEnumeratorImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEnumeratorImpl () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IEnumerator ^ GetEnumeratorImpl();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorImpl : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumeratorImpl : unit -&gt; System.Collections.IEnumerator" Usage="permissionSet.GetEnumeratorImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04edd-211">Devuelve un enumerador para los permisos del conjunto.</span><span class="sxs-lookup"><span data-stu-id="04edd-211">Returns an enumerator for the permissions of the set.</span></span></summary>
        <returns><span data-ttu-id="04edd-212">Objeto enumerador para los permisos del conjunto.</span><span class="sxs-lookup"><span data-stu-id="04edd-212">An enumerator object for the permissions of the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-213">El <xref:System.Security.PermissionSet.GetEnumeratorImpl%2A> método es la implementación para el <xref:System.Security.PermissionSet.GetEnumerator%2A> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-213">The <xref:System.Security.PermissionSet.GetEnumeratorImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="permissionSet.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04edd-214">Obtiene un código hash para el objeto <see cref="T:System.Security.PermissionSet" /> que es adecuado para su uso en algoritmos hash y estructuras de datos como una tabla hash.</span><span class="sxs-lookup"><span data-stu-id="04edd-214">Gets a hash code for the <see cref="T:System.Security.PermissionSet" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="04edd-215">Código hash para el objeto <see cref="T:System.Security.PermissionSet" /> actual.</span><span class="sxs-lookup"><span data-stu-id="04edd-215">A hash code for the current <see cref="T:System.Security.PermissionSet" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-216">El código hash para dos instancias del mismo conjunto de permisos podría ser diferente, por lo que no se debe usar un código hash para comparar dos <xref:System.Security.PermissionSet> objetos.</span><span class="sxs-lookup"><span data-stu-id="04edd-216">The hash code for two instances of the same permission set might be different, so a hash code should not be used to compare two <xref:System.Security.PermissionSet> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission GetPermission (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission GetPermission(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetPermission(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPermission (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ GetPermission(Type ^ permClass);" />
      <MemberSignature Language="F#" Value="member this.GetPermission : Type -&gt; System.Security.IPermission" Usage="permissionSet.GetPermission permClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="04edd-217">Tipo del objeto de permiso deseado.</span><span class="sxs-lookup"><span data-stu-id="04edd-217">The type of the desired permission object.</span></span></param>
        <summary><span data-ttu-id="04edd-218">Obtiene un objeto de permiso del tipo especificado, si existe en el conjunto.</span><span class="sxs-lookup"><span data-stu-id="04edd-218">Gets a permission object of the specified type, if it exists in the set.</span></span></summary>
        <returns><span data-ttu-id="04edd-219">Copia del objeto de permiso, del tipo especificado por el parámetro <paramref name="permClass" />, incluido en el <see cref="T:System.Security.PermissionSet" />, o <see langword="null" /> si no existe ninguno.</span><span class="sxs-lookup"><span data-stu-id="04edd-219">A copy of the permission object of the type specified by the <paramref name="permClass" /> parameter contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-220">El método devuelve `null` para un `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="04edd-220">The method returns `null` for an `Unrestricted`<xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="04edd-221">Aunque un `Unrestricted` <xref:System.Security.PermissionSet> eficazmente contiene todos los permisos, no tiene ninguna instancia real que devolver.</span><span class="sxs-lookup"><span data-stu-id="04edd-221">Although an `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions, it does not have any actual instances to return.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="04edd-222">Al heredar de <see cref="T:System.Security.PermissionSet" />, puede cambiar el comportamiento de la <see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /> método invalidando el <see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-222">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /> method by overriding the <see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission GetPermissionImpl (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission GetPermissionImpl(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPermissionImpl (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ GetPermissionImpl(Type ^ permClass);" />
      <MemberSignature Language="F#" Value="abstract member GetPermissionImpl : Type -&gt; System.Security.IPermission&#xA;override this.GetPermissionImpl : Type -&gt; System.Security.IPermission" Usage="permissionSet.GetPermissionImpl permClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="04edd-223">Tipo del objeto de permiso.</span><span class="sxs-lookup"><span data-stu-id="04edd-223">The type of the permission object.</span></span></param>
        <summary><span data-ttu-id="04edd-224">Obtiene un objeto de permiso del tipo especificado, si existe en el conjunto.</span><span class="sxs-lookup"><span data-stu-id="04edd-224">Gets a permission object of the specified type, if it exists in the set.</span></span></summary>
        <returns><span data-ttu-id="04edd-225">Copia del objeto de permiso, del tipo especificado por el parámetro <paramref name="permClass" />, incluido en el <see cref="T:System.Security.PermissionSet" />, o <see langword="null" /> si no existe ninguno.</span><span class="sxs-lookup"><span data-stu-id="04edd-225">A copy of the permission object, of the type specified by the <paramref name="permClass" /> parameter, contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-226">El <xref:System.Security.PermissionSet.GetPermissionImpl%2A> método es la implementación para el <xref:System.Security.PermissionSet.GetPermission%2A> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-226">The <xref:System.Security.PermissionSet.GetPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.GetPermission%2A> method.</span></span>  
  
 <span data-ttu-id="04edd-227">El método devuelve `null` para un `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="04edd-227">The method returns `null` for an `Unrestricted`<xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="04edd-228">Aunque un `Unrestricted` <xref:System.Security.PermissionSet> eficazmente contiene todos los permisos, no tiene ninguna instancia real que devolver.</span><span class="sxs-lookup"><span data-stu-id="04edd-228">Although an `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions, it does not have any actual instances to return.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet Intersect (System.Security.PermissionSet other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.PermissionSet Intersect(class System.Security.PermissionSet other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (other As PermissionSet) As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::PermissionSet ^ Intersect(System::Security::PermissionSet ^ other);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Security.PermissionSet -&gt; System.Security.PermissionSet" Usage="permissionSet.Intersect other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="04edd-229">Conjunto de permisos para combinar con el <see cref="T:System.Security.PermissionSet" /> actual.</span><span class="sxs-lookup"><span data-stu-id="04edd-229">A permission set to intersect with the current <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="04edd-230">Crea y devuelve un conjunto de permisos que es la intersección del <see cref="T:System.Security.PermissionSet" /> actual y el <see cref="T:System.Security.PermissionSet" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="04edd-230">Creates and returns a permission set that is the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="04edd-231">Nuevo conjunto de permisos que representa la intersección del <see cref="T:System.Security.PermissionSet" /> actual y el destino especificado.</span><span class="sxs-lookup"><span data-stu-id="04edd-231">A new permission set that represents the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified target.</span></span> <span data-ttu-id="04edd-232">Este objeto es <see langword="null" /> si la intersección está vacía.</span><span class="sxs-lookup"><span data-stu-id="04edd-232">This object is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-233">La intersección de dos conjuntos de permisos es un conjunto de permisos que describe el conjunto de operaciones que se describen en ambos.</span><span class="sxs-lookup"><span data-stu-id="04edd-233">The intersection of two permission sets is a permission set that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="04edd-234">En concreto, representa los permisos mínimos para que cualquier solicitud que pase ambos permisos establece también pasa su intersección.</span><span class="sxs-lookup"><span data-stu-id="04edd-234">Specifically, it represents the minimum permissions such that any demand that passes both permission sets also passes their intersection.</span></span>  
  
 <span data-ttu-id="04edd-235">Para cada tipo de permiso que está presente en ambos conjuntos, las dos instancias de estos permisos forman una intersección con el permiso `Intersect` método; el permiso resultante se incluye en el cuadro <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="04edd-235">For each type of permission that is present in both sets, the two instances of those permissions are intersected using the permission's `Intersect` method; the resulting permission is included in the resulting <xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="04edd-236">Tipos de permisos que existen en solo uno de los dos conjuntos se excluyen del conjunto resultante.</span><span class="sxs-lookup"><span data-stu-id="04edd-236">Permission types that exist in only one of the two sets are excluded from the resulting set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-237">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.Intersect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-237">The following code example shows the use of the <xref:System.Security.PermissionSet.Intersect%2A> method.</span></span> <span data-ttu-id="04edd-238">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-238">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#12)]
 [!code-csharp[System.Security.PermissionSet#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#12)]
 [!code-vb[System.Security.PermissionSet#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEmpty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEmpty();" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : unit -&gt; bool" Usage="permissionSet.IsEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04edd-239">Obtiene un valor que indica si el elemento <see cref="T:System.Security.PermissionSet" /> está activo.</span><span class="sxs-lookup"><span data-stu-id="04edd-239">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> is empty.</span></span></summary>
        <returns><span data-ttu-id="04edd-240">Es <see langword="true" /> si <see cref="T:System.Security.PermissionSet" /> está vacío, en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-240"><see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is empty; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-241">Un <xref:System.Security.PermissionSet> puede estar vacío y aún contiene instancias de permisos si esos permisos están restringidos por completo.</span><span class="sxs-lookup"><span data-stu-id="04edd-241">A <xref:System.Security.PermissionSet> can be empty and yet contain instances of permissions if those permissions are in the fully-restricted state.</span></span> <span data-ttu-id="04edd-242">Los permisos que se encuentran en un estado completamente restringido si sus `IsSubsetOf` métodos devuelven `true` cuando `null` se pasa como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="04edd-242">Permissions are in a fully restricted state if their `IsSubsetOf` methods return `true` when `null` is passed as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Security.PermissionSet.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04edd-243">Obtiene un valor que indica si la colección es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="04edd-243">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="04edd-244">Siempre es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-244">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-245">Un <xref:System.Security.PermissionSet> no puede ser de solo lectura, por lo que esta propiedad es siempre `false`.</span><span class="sxs-lookup"><span data-stu-id="04edd-245">A <xref:System.Security.PermissionSet> cannot be read-only, so this property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-246">En el ejemplo de código siguiente se muestra el valor devuelto por la <xref:System.Security.PermissionSet.IsReadOnly%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="04edd-246">The following code example shows the value returned by the <xref:System.Security.PermissionSet.IsReadOnly%2A> property.</span></span> <span data-ttu-id="04edd-247">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-247">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#7)]
 [!code-csharp[System.Security.PermissionSet#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#7)]
 [!code-vb[System.Security.PermissionSet#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.PermissionSet target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubsetOf(class System.Security.PermissionSet target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As PermissionSet) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Security::PermissionSet ^ target);" />
      <MemberSignature Language="F#" Value="member this.IsSubsetOf : System.Security.PermissionSet -&gt; bool" Usage="permissionSet.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="04edd-248">Conjunto de permisos para probar la relación del subconjunto.</span><span class="sxs-lookup"><span data-stu-id="04edd-248">The permission set to test for the subset relationship.</span></span> <span data-ttu-id="04edd-249">Debe ser un <see cref="T:System.Security.PermissionSet" /> o <see cref="T:System.Security.NamedPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-249">This must be either a <see cref="T:System.Security.PermissionSet" /> or a <see cref="T:System.Security.NamedPermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="04edd-250">Determina si el <see cref="T:System.Security.PermissionSet" /> actual es un subconjunto del <see cref="T:System.Security.PermissionSet" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="04edd-250">Determines whether the current <see cref="T:System.Security.PermissionSet" /> is a subset of the specified <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="04edd-251">Es <see langword="true" /> si el <see cref="T:System.Security.PermissionSet" /> actual es un subconjunto del parámetro <paramref name="target" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-251"><see langword="true" /> if the current <see cref="T:System.Security.PermissionSet" /> is a subset of the <paramref name="target" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-252">Un <xref:System.Security.PermissionSet> es un subconjunto del destino <xref:System.Security.PermissionSet> si todas las solicitudes que se ejecuta correctamente para el <xref:System.Security.PermissionSet> también obtienen el destino.</span><span class="sxs-lookup"><span data-stu-id="04edd-252">A <xref:System.Security.PermissionSet> is a subset of the target <xref:System.Security.PermissionSet> if all demands that succeed for the <xref:System.Security.PermissionSet> also succeed for the target.</span></span> <span data-ttu-id="04edd-253">Es decir, el destino contiene al menos los permisos incluidos en el subconjunto.</span><span class="sxs-lookup"><span data-stu-id="04edd-253">That is, the target contains at least the permissions contained in the subset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-254">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.IsSubsetOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-254">The following code example shows the use of the <xref:System.Security.PermissionSet.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="04edd-255">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-255">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#11)]
 [!code-csharp[System.Security.PermissionSet#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#11)]
 [!code-vb[System.Security.PermissionSet#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Security.PermissionSet.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04edd-256">Obtiene un valor que indica si está garantizado que la colección es segura para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="04edd-256">Gets a value indicating whether the collection is guaranteed to be thread safe.</span></span></summary>
        <value><span data-ttu-id="04edd-257">Siempre es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-257">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-258"><xref:System.Security.PermissionSet> no controla automáticamente la seguridad para subprocesos, por lo que esta propiedad es siempre `false`.</span><span class="sxs-lookup"><span data-stu-id="04edd-258"><xref:System.Security.PermissionSet> does not automatically handle thread safety, so this property is always `false`.</span></span>  
  
 <span data-ttu-id="04edd-259">Este método es necesario para admitir <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="04edd-259">This method is required to support <xref:System.Collections.ICollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-260">En el ejemplo de código siguiente se muestra el valor devuelto por la <xref:System.Security.PermissionSet.IsSynchronized%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="04edd-260">The following code example shows the value returned by the <xref:System.Security.PermissionSet.IsSynchronized%2A> property.</span></span> <span data-ttu-id="04edd-261">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-261">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#6)]
 [!code-csharp[System.Security.PermissionSet#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#6)]
 [!code-vb[System.Security.PermissionSet#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="member this.IsUnrestricted : unit -&gt; bool" Usage="permissionSet.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04edd-262">Determina si el <see cref="T:System.Security.PermissionSet" /> es <see langword="Unrestricted" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-262">Determines whether the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />.</span></span></summary>
        <returns><span data-ttu-id="04edd-263">Es <see langword="true" /> si el <see cref="T:System.Security.PermissionSet" /> es <see langword="Unrestricted" />; si no, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-263"><see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-264">Un `Unrestricted` <xref:System.Security.PermissionSet> contiene todos los permisos que implementan de forma efectiva el <xref:System.Security.Permissions.IUnrestrictedPermission> interfaz.</span><span class="sxs-lookup"><span data-stu-id="04edd-264">An `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-265">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.IsUnrestricted%2A> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-265">The following code example shows the use of the <xref:System.Security.PermissionSet.IsUnrestricted%2A> method.</span></span> <span data-ttu-id="04edd-266">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-266">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#19)]
 [!code-csharp[System.Security.PermissionSet#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#19)]
 [!code-vb[System.Security.PermissionSet#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PermitOnly();" />
      <MemberSignature Language="F#" Value="abstract member PermitOnly : unit -&gt; unit&#xA;override this.PermitOnly : unit -&gt; unit" Usage="permissionSet.PermitOnly " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.PermitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04edd-267">Hace que cualquier <see cref="M:System.Security.PermissionSet.Demand" /> que pase por el código de llamada para cualquier <see cref="T:System.Security.PermissionSet" /> que no sea un subconjunto del <see cref="T:System.Security.PermissionSet" /> actual genere un error.</span><span class="sxs-lookup"><span data-stu-id="04edd-267">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for any <see cref="T:System.Security.PermissionSet" /> that is not a subset of the current <see cref="T:System.Security.PermissionSet" /> to fail.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-268"><xref:System.Security.PermissionSet.PermitOnly%2A> es similar a <xref:System.Security.PermissionSet.Deny%2A>, ya que ambos provocan recorridos de pila producirá un error cuando se realizarían correctamente en caso contrario.</span><span class="sxs-lookup"><span data-stu-id="04edd-268"><xref:System.Security.PermissionSet.PermitOnly%2A> is similar to <xref:System.Security.PermissionSet.Deny%2A>, in that both cause stack walks to fail when they would otherwise succeed.</span></span> <span data-ttu-id="04edd-269">La diferencia es que <xref:System.Security.PermissionSet.Deny%2A> especifica los permisos que hará que el recorrido de pila producirá un error, pero <xref:System.Security.PermissionSet.PermitOnly%2A> especifica los permisos que no producen un error en el recorrido de pila.</span><span class="sxs-lookup"><span data-stu-id="04edd-269">The difference is that <xref:System.Security.PermissionSet.Deny%2A> specifies permissions that will cause the stack walk to fail, but <xref:System.Security.PermissionSet.PermitOnly%2A> specifies the only permissions that do not cause the stack walk to fail.</span></span> <span data-ttu-id="04edd-270">Llame a este método para asegurarse de que el código puede utilizarse para tener acceso solo a los recursos especificados.</span><span class="sxs-lookup"><span data-stu-id="04edd-270">Call this method to ensure that your code can be used to access only the specified resources.</span></span>  
  
 <span data-ttu-id="04edd-271"><xref:System.Security.PermissionSet.PermitOnly%2A> se omite para un permiso no concedido porque no se puede realizar una petición para ese permiso.</span><span class="sxs-lookup"><span data-stu-id="04edd-271"><xref:System.Security.PermissionSet.PermitOnly%2A> is ignored for a permission not granted because a demand for that permission cannot succeed.</span></span> <span data-ttu-id="04edd-272">Sin embargo, si el código situado más abajo en la llamada de la pila más adelante llamadas <xref:System.Security.PermissionSet.Demand%2A> para ese permiso, un <xref:System.Security.SecurityException> se produce cuando el recorrido de pila alcanza el código que intentó llamar a <xref:System.Security.PermissionSet.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="04edd-272">However, if code lower on the call stack later calls <xref:System.Security.PermissionSet.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.PermissionSet.PermitOnly%2A>.</span></span> <span data-ttu-id="04edd-273">Esto es porque el código que llamó <xref:System.Security.PermissionSet.PermitOnly%2A> no dispone del permiso, aunque haya llamado a <xref:System.Security.PermissionSet.PermitOnly%2A> para ese permiso.</span><span class="sxs-lookup"><span data-stu-id="04edd-273">This is because the code that called <xref:System.Security.PermissionSet.PermitOnly%2A> has not been granted the permission, even though it called <xref:System.Security.PermissionSet.PermitOnly%2A> for that permission.</span></span> <span data-ttu-id="04edd-274">La pila de llamadas suele representarse de forma decreciente, por lo que más arriba en la pila de llamadas de métodos llamar a métodos inferior en la pila de llamadas.</span><span class="sxs-lookup"><span data-stu-id="04edd-274">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission RemovePermission (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission RemovePermission(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RemovePermission(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemovePermission (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ RemovePermission(Type ^ permClass);" />
      <MemberSignature Language="F#" Value="member this.RemovePermission : Type -&gt; System.Security.IPermission" Usage="permissionSet.RemovePermission permClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="04edd-275">Tipo del permiso que se va a eliminar.</span><span class="sxs-lookup"><span data-stu-id="04edd-275">The type of permission to delete.</span></span></param>
        <summary><span data-ttu-id="04edd-276">Quita un permiso de un tipo determinado del conjunto.</span><span class="sxs-lookup"><span data-stu-id="04edd-276">Removes a permission of a certain type from the set.</span></span></summary>
        <returns><span data-ttu-id="04edd-277">Permiso que se quita del conjunto.</span><span class="sxs-lookup"><span data-stu-id="04edd-277">The permission removed from the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="04edd-278">No se puede quitar permisos de un conjunto de permisos sin restricciones.</span><span class="sxs-lookup"><span data-stu-id="04edd-278">You cannot remove permissions from an unrestricted permission set.</span></span> <span data-ttu-id="04edd-279">El permiso establecido sigue sin restricciones después de intentar quitar el permiso y no se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="04edd-279">The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</span></span>  
  
 <span data-ttu-id="04edd-280">El código de C# siguiente intenta quitar el <xref:System.Security.Permissions.FileIOPermission> desde el `FullTrust` conjunto de permisos, pero no se quita el permiso.</span><span class="sxs-lookup"><span data-stu-id="04edd-280">The following C# code attempts to remove the <xref:System.Security.Permissions.FileIOPermission> from the `FullTrust` permission set, but the permission is not removed.</span></span>  
  
```  
PolicyLevel myPol = PolicyLevel.CreateAppDomainLevel();  
PermissionSet myPermSet = myPol.GetNamedPermissionSet("FullTrust");  
myPermSet.RemovePermission(typeof(FileIOPermission));  
```  
  
   
  
## Examples  
 <span data-ttu-id="04edd-281">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.RemovePermission%2A> método para quitar un <xref:System.Security.Permissions.FileIOPermission> desde un permiso establecido.</span><span class="sxs-lookup"><span data-stu-id="04edd-281">The following code example shows the use of the <xref:System.Security.PermissionSet.RemovePermission%2A> method to remove a <xref:System.Security.Permissions.FileIOPermission> from a permission set.</span></span> <span data-ttu-id="04edd-282">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-282">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#15)]
 [!code-csharp[System.Security.PermissionSet#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#15)]
 [!code-vb[System.Security.PermissionSet#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04edd-283">Se llama al método desde un <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-283">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="04edd-284">Al heredar de <see cref="T:System.Security.PermissionSet" />, puede cambiar el comportamiento de la <see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /> método invalidando el <see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-284">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /> method by overriding the <see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RemovePermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission RemovePermissionImpl (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission RemovePermissionImpl(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RemovePermissionImpl (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ RemovePermissionImpl(Type ^ permClass);" />
      <MemberSignature Language="F#" Value="abstract member RemovePermissionImpl : Type -&gt; System.Security.IPermission&#xA;override this.RemovePermissionImpl : Type -&gt; System.Security.IPermission" Usage="permissionSet.RemovePermissionImpl permClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="04edd-285">Tipo del permiso que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="04edd-285">The type of the permission to remove.</span></span></param>
        <summary><span data-ttu-id="04edd-286">Quita un permiso de un tipo determinado del conjunto.</span><span class="sxs-lookup"><span data-stu-id="04edd-286">Removes a permission of a certain type from the set.</span></span></summary>
        <returns><span data-ttu-id="04edd-287">Permiso que se quita del conjunto.</span><span class="sxs-lookup"><span data-stu-id="04edd-287">The permission removed from the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-288">El <xref:System.Security.PermissionSet.RemovePermissionImpl%2A> método es la implementación para el <xref:System.Security.PermissionSet.RemovePermission%2A> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-288">The <xref:System.Security.PermissionSet.RemovePermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.RemovePermission%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04edd-289">No se puede quitar permisos de un conjunto de permisos sin restricciones.</span><span class="sxs-lookup"><span data-stu-id="04edd-289">You cannot remove permissions from an unrestricted permission set.</span></span> <span data-ttu-id="04edd-290">El permiso establecido sigue sin restricciones después de intentar quitar el permiso y no se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="04edd-290">The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04edd-291">Se llama al método desde un <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-291">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RevertAssert">
      <MemberSignature Language="C#" Value="public static void RevertAssert ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertAssert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RevertAssert" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertAssert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertAssert();" />
      <MemberSignature Language="F#" Value="static member RevertAssert : unit -&gt; unit" Usage="System.Security.PermissionSet.RevertAssert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04edd-292">Provoca que se elimine cualquier <see cref="M:System.Security.CodeAccessPermission.Assert" /> anterior para el marco actual y que ya no esté en vigor.</span><span class="sxs-lookup"><span data-stu-id="04edd-292">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame to be removed and no longer be in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-293">Si no hay ningún <xref:System.Security.CodeAccessPermission.Assert%2A> para el marco actual, un <xref:System.ExecutionEngineException> se produce.</span><span class="sxs-lookup"><span data-stu-id="04edd-293">If there is no <xref:System.Security.CodeAccessPermission.Assert%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04edd-294">No hay ningún <see cref="M:System.Security.CodeAccessPermission.Assert" /> anterior para el fotograma actual.</span><span class="sxs-lookup"><span data-stu-id="04edd-294">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission SetPermission (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission SetPermission(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPermission (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ SetPermission(System::Security::IPermission ^ perm);" />
      <MemberSignature Language="F#" Value="member this.SetPermission : System.Security.IPermission -&gt; System.Security.IPermission" Usage="permissionSet.SetPermission perm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="04edd-295">Permiso que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="04edd-295">The permission to set.</span></span></param>
        <summary><span data-ttu-id="04edd-296">Establece un permiso en el <see cref="T:System.Security.PermissionSet" />, para lo que reemplaza cualquier permiso existente del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="04edd-296">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span></span></summary>
        <returns><span data-ttu-id="04edd-297">Permiso establecido.</span><span class="sxs-lookup"><span data-stu-id="04edd-297">The set permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-298">Este método quita cualquier objeto de permiso existente del mismo tipo desde el <xref:System.Security.PermissionSet> y lo reemplaza con el `perm` parámetro.</span><span class="sxs-lookup"><span data-stu-id="04edd-298">This method removes any existing permission object of the same type from the <xref:System.Security.PermissionSet> and replaces it with the `perm` parameter.</span></span> <span data-ttu-id="04edd-299">Si un permiso que implementa <xref:System.Security.Permissions.IUnrestrictedPermission> se establece en un <xref:System.Security.PermissionSet> decir <xref:System.Security.Permissions.PermissionState.Unrestricted>, resultante <xref:System.Security.PermissionSet> ya no es `Unrestricted`.</span><span class="sxs-lookup"><span data-stu-id="04edd-299">If a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is set on a <xref:System.Security.PermissionSet> that is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the resulting <xref:System.Security.PermissionSet> is no longer `Unrestricted`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-300">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.SetPermission%2A> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-300">The following code example shows the use of the <xref:System.Security.PermissionSet.SetPermission%2A> method.</span></span> <span data-ttu-id="04edd-301">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-301">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#16)]
 [!code-csharp[System.Security.PermissionSet#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#16)]
 [!code-vb[System.Security.PermissionSet#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04edd-302">Se llama al método desde un <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-302">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="04edd-303">Al heredar de <see cref="T:System.Security.PermissionSet" />, puede cambiar el comportamiento de la <see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /> método invalidando el <see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-303">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /> method by overriding the <see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SetPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission SetPermissionImpl (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission SetPermissionImpl(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetPermissionImpl (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ SetPermissionImpl(System::Security::IPermission ^ perm);" />
      <MemberSignature Language="F#" Value="abstract member SetPermissionImpl : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.SetPermissionImpl : System.Security.IPermission -&gt; System.Security.IPermission" Usage="permissionSet.SetPermissionImpl perm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="04edd-304">Permiso que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="04edd-304">The permission to set.</span></span></param>
        <summary><span data-ttu-id="04edd-305">Establece un permiso en el <see cref="T:System.Security.PermissionSet" />, para lo que reemplaza cualquier permiso existente del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="04edd-305">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span></span></summary>
        <returns><span data-ttu-id="04edd-306">Permiso establecido.</span><span class="sxs-lookup"><span data-stu-id="04edd-306">The set permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-307">El <xref:System.Security.PermissionSet.SetPermissionImpl%2A> método es la implementación para el <xref:System.Security.PermissionSet.SetPermission%2A> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-307">The <xref:System.Security.PermissionSet.SetPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.SetPermission%2A> method.</span></span>  
  
 <span data-ttu-id="04edd-308">Este método quita cualquier objeto de permiso existente del mismo tipo desde el <xref:System.Security.PermissionSet> y lo reemplaza con el `perm` parámetro.</span><span class="sxs-lookup"><span data-stu-id="04edd-308">This method removes any existing permission object of the same type from the <xref:System.Security.PermissionSet> and replaces it with the `perm` parameter.</span></span> <span data-ttu-id="04edd-309">Si un permiso que implementa <xref:System.Security.Permissions.IUnrestrictedPermission> se establece en un <xref:System.Security.PermissionSet> decir <xref:System.Security.Permissions.PermissionState.Unrestricted>, resultante <xref:System.Security.PermissionSet> ya no es `Unrestricted`.</span><span class="sxs-lookup"><span data-stu-id="04edd-309">If a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is set on a <xref:System.Security.PermissionSet> that is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the resulting <xref:System.Security.PermissionSet> is no longer `Unrestricted`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04edd-310">Se llama al método desde un <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-310">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Security.PermissionSet.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04edd-311">Obtiene el objeto raíz de la colección actual.</span><span class="sxs-lookup"><span data-stu-id="04edd-311">Gets the root object of the current collection.</span></span></summary>
        <value><span data-ttu-id="04edd-312">Objeto raíz de la colección actual.</span><span class="sxs-lookup"><span data-stu-id="04edd-312">The root object of the current collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-313">Este método es necesario para admitir <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="04edd-313">This method is required to support <xref:System.Collections.ICollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-314">En el ejemplo de código siguiente se muestra el uso de <xref:System.Security.PermissionSet.SyncRoot%2A> propiedad va a obtener el objeto raíz de la colección actual.</span><span class="sxs-lookup"><span data-stu-id="04edd-314">The following code example shows the use of <xref:System.Security.PermissionSet.SyncRoot%2A> property to get the root object of the current collection.</span></span> <span data-ttu-id="04edd-315">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-315">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#8)]
 [!code-csharp[System.Security.PermissionSet#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#8)]
 [!code-vb[System.Security.PermissionSet#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="04edd-316">Objeto que inició la devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="04edd-316">The object that initiated the callback.</span></span> <span data-ttu-id="04edd-317">La funcionalidad de este parámetro aún no está implementada.</span><span class="sxs-lookup"><span data-stu-id="04edd-317">The functionality for this parameter is not currently implemented.</span></span></param>
        <summary><span data-ttu-id="04edd-318">Se ejecuta cuando todo el gráfico de objetos ha sido deserializado.</span><span class="sxs-lookup"><span data-stu-id="04edd-318">Runs when the entire object graph has been deserialized.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="permissionSet.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04edd-319">Devuelve una representación de cadena de <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-319">Returns a string representation of the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="04edd-320">Representación del objeto <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="04edd-320">A representation of the <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-321">La representación de cadena es útil en la depuración para ver el estado de un <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="04edd-321">The string representation is useful in debugging to see the state of a <xref:System.Security.PermissionSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-322">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.ToString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-322">The following code example shows the use of the <xref:System.Security.PermissionSet.ToString%2A> method.</span></span> <span data-ttu-id="04edd-323">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-323">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#10)]
 [!code-csharp[System.Security.PermissionSet#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#10)]
 [!code-vb[System.Security.PermissionSet#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public virtual System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="permissionSet.ToXml " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04edd-324">Crea una codificación XML del objeto de seguridad y su estado actual.</span><span class="sxs-lookup"><span data-stu-id="04edd-324">Creates an XML encoding of the security object and its current state.</span></span></summary>
        <returns><span data-ttu-id="04edd-325">Codificación XML del objeto de seguridad, incluida cualquier información de estado.</span><span class="sxs-lookup"><span data-stu-id="04edd-325">An XML encoding of the security object, including any state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="04edd-326">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.ToXml%2A> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-326">The following code example shows the use of the <xref:System.Security.PermissionSet.ToXml%2A> method.</span></span> <span data-ttu-id="04edd-327">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-327">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#17)]
 [!code-csharp[System.Security.PermissionSet#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#17)]
 [!code-vb[System.Security.PermissionSet#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet Union (System.Security.PermissionSet other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.PermissionSet Union(class System.Security.PermissionSet other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (other As PermissionSet) As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::PermissionSet ^ Union(System::Security::PermissionSet ^ other);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Security.PermissionSet -&gt; System.Security.PermissionSet" Usage="permissionSet.Union other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="04edd-328">Permiso establecido para formar la unión con el <see cref="T:System.Security.PermissionSet" /> actual.</span><span class="sxs-lookup"><span data-stu-id="04edd-328">The permission set to form the union with the current <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="04edd-329">Crea un <see cref="T:System.Security.PermissionSet" /> que es la unión del actual <see cref="T:System.Security.PermissionSet" /> y el <see cref="T:System.Security.PermissionSet" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="04edd-329">Creates a <see cref="T:System.Security.PermissionSet" /> that is the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="04edd-330">Nuevo conjunto de permisos que representa la unión del <see cref="T:System.Security.PermissionSet" /> actual y el <see cref="T:System.Security.PermissionSet" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="04edd-330">A new permission set that represents the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04edd-331">El resultado de una llamada a <xref:System.Security.PermissionSet.Union%2A> es un <xref:System.Security.PermissionSet> que representa todas las operaciones representadas por el actual <xref:System.Security.PermissionSet> , así como todas las operaciones representadas por el <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="04edd-331">The result of a call to <xref:System.Security.PermissionSet.Union%2A> is a <xref:System.Security.PermissionSet> that represents all the operations represented by the current <xref:System.Security.PermissionSet> as well as all the operations represented by the specified <xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="04edd-332">Si cualquiera de ellos es `Unrestricted`, la unión es `Unrestricted` también.</span><span class="sxs-lookup"><span data-stu-id="04edd-332">If either set is `Unrestricted`, the union is `Unrestricted` as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04edd-333">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.PermissionSet.Union%2A> método.</span><span class="sxs-lookup"><span data-stu-id="04edd-333">The following code example shows the use of the <xref:System.Security.PermissionSet.Union%2A> method.</span></span> <span data-ttu-id="04edd-334">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.PermissionSet> clase.</span><span class="sxs-lookup"><span data-stu-id="04edd-334">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#13)]
 [!code-csharp[System.Security.PermissionSet#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#13)]
 [!code-vb[System.Security.PermissionSet#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
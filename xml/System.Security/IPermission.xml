<Type Name="IPermission" FullName="System.Security.IPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="adb453df576ea391542ab5badc8751b4b2f2aa85" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58742994" /></Metadata><TypeSignature Language="C#" Value="public interface IPermission : System.Security.ISecurityEncodable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPermission implements class System.Security.ISecurityEncodable" />
  <TypeSignature Language="DocId" Value="T:System.Security.IPermission" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPermission&#xA;Implements ISecurityEncodable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPermission : System::Security::ISecurityEncodable" />
  <TypeSignature Language="F#" Value="type IPermission = interface&#xA;    interface ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a8b20-101">Define métodos implementados por tipos de permiso.</span><span class="sxs-lookup"><span data-stu-id="a8b20-101">Defines methods implemented by permission types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8b20-102">Los permisos en common language runtime son objetos que describen conjuntos de operaciones que se pueden proteger para los recursos especificados.</span><span class="sxs-lookup"><span data-stu-id="a8b20-102">Permissions in the common language runtime are objects that describe sets of operations that can be secured for specified resources.</span></span> <span data-ttu-id="a8b20-103">Un objeto de permiso describe las operaciones o acceso que está sujeta a control de seguridad; no representa un derecho para realizar operaciones o acceso.</span><span class="sxs-lookup"><span data-stu-id="a8b20-103">A permission object describes operations or access that is subject to security control; it does not represent access or a right to perform operations.</span></span> <span data-ttu-id="a8b20-104">Los permisos se usan por el código de la aplicación y el sistema de seguridad de .NET Framework de las maneras siguientes.</span><span class="sxs-lookup"><span data-stu-id="a8b20-104">Permissions are used by both application code and the .NET Framework security system in the following ways.</span></span>  
  
-   <span data-ttu-id="a8b20-105">Código solicita los permisos que necesita para poder ejecutarse.</span><span class="sxs-lookup"><span data-stu-id="a8b20-105">Code requests the permissions it needs in order to run.</span></span>  
  
-   <span data-ttu-id="a8b20-106">La directiva de seguridad del sistema concede permisos al código en el orden de ejecución para él.</span><span class="sxs-lookup"><span data-stu-id="a8b20-106">The security system policy grants permissions to code in order for it to run.</span></span>  
  
-   <span data-ttu-id="a8b20-107">El código solicita que el código de llamada tiene un permiso.</span><span class="sxs-lookup"><span data-stu-id="a8b20-107">Code demands that calling code has a permission.</span></span>  
  
-   <span data-ttu-id="a8b20-108">Código reemplaza la pila de seguridad mediante assert/deny/sólo permiso.</span><span class="sxs-lookup"><span data-stu-id="a8b20-108">Code overrides the security stack using assert/deny/permit-only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8b20-109">Si escribe un nuevo permiso, debe implementar esta interfaz en su clase.</span><span class="sxs-lookup"><span data-stu-id="a8b20-109">If you write a new permission, you must implement this interface in your class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a8b20-110">Un permiso puede tener acceso varios subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a8b20-110">A permission can be accessed by multiple threads.</span></span> <span data-ttu-id="a8b20-111">Al implementar esta interfaz, debe garantizar que el <xref:System.Security.IPermission.IsSubsetOf%2A>, <xref:System.Security.IPermission.Intersect%2A>, <xref:System.Security.IPermission.Union%2A>, y <xref:System.Security.IPermission.Copy%2A> las implementaciones de método son seguros para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a8b20-111">When implementing this interface, you must guarantee that the <xref:System.Security.IPermission.IsSubsetOf%2A>, <xref:System.Security.IPermission.Intersect%2A>, <xref:System.Security.IPermission.Union%2A>, and <xref:System.Security.IPermission.Copy%2A> method implementations are thread safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8b20-112">En este ejemplo se muestra cómo definir una clase de permiso para su uso con la seguridad de acceso del código.</span><span class="sxs-lookup"><span data-stu-id="a8b20-112">This example shows how to define a permission class for use with code access security.</span></span> <span data-ttu-id="a8b20-113">Se implementan todas las interfaces de permiso necesarias.</span><span class="sxs-lookup"><span data-stu-id="a8b20-113">All of the necessary permission interfaces are implemented.</span></span>  
  
 [!code-cpp[Permission#1](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#1)]
 [!code-csharp[Permission#1](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#1)]
 [!code-vb[Permission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission" Usage="iPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8b20-114">Crea y devuelve una copia idéntica del permiso actual.</span><span class="sxs-lookup"><span data-stu-id="a8b20-114">Creates and returns an identical copy of the current permission.</span></span></summary>
        <returns><span data-ttu-id="a8b20-115">Copia del permiso actual.</span><span class="sxs-lookup"><span data-stu-id="a8b20-115">A copy of the current permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8b20-116">Una copia de un permiso representa el mismo acceso a los recursos que el permiso original.</span><span class="sxs-lookup"><span data-stu-id="a8b20-116">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8b20-117">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Security.IPermission.Copy%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a8b20-117">The following code example demonstrates implementing the <xref:System.Security.IPermission.Copy%2A> method.</span></span> <span data-ttu-id="a8b20-118">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.IPermission> clase.</span><span class="sxs-lookup"><span data-stu-id="a8b20-118">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#4](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#4)]
 [!code-csharp[Permission#4](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#4)]
 [!code-vb[Permission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit" Usage="iPermission.Demand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8b20-119">Produce una <see cref="T:System.Security.SecurityException" /> en tiempo de ejecución si no se cumple el requisito de seguridad.</span><span class="sxs-lookup"><span data-stu-id="a8b20-119">Throws a <see cref="T:System.Security.SecurityException" /> at run time if the security requirement is not met.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8b20-120">Este método se usa normalmente por las bibliotecas seguras para asegurarse de que los llamadores tienen permiso para acceder a un recurso.</span><span class="sxs-lookup"><span data-stu-id="a8b20-120">This method is typically used by secure libraries to ensure that callers have permission to access a resource.</span></span> <span data-ttu-id="a8b20-121">Por ejemplo, llama una clase de archivo en una biblioteca de clases seguras <xref:System.Security.CodeAccessPermission.Demand%2A> para necesarios <xref:System.Security.Permissions.FileIOPermission> antes de realizar una operación de archivo solicitada por el llamador.</span><span class="sxs-lookup"><span data-stu-id="a8b20-121">For example, a file class in a secure class library calls <xref:System.Security.CodeAccessPermission.Demand%2A> for the necessary <xref:System.Security.Permissions.FileIOPermission> before performing a file operation requested by the caller.</span></span>  
  
 <span data-ttu-id="a8b20-122">Aunque la mayoría de las clases que implementan este método de interfaz cumplen los criterios de seguridad mediante la realización de un recorrido de pila completa, no se realiza necesariamente un recorrido de pila.</span><span class="sxs-lookup"><span data-stu-id="a8b20-122">Although the majority of the classes that implement this interface method satisfy the security criteria by performing a full stack walk, a stack walk is not necessarily performed.</span></span> <span data-ttu-id="a8b20-123">Un ejemplo de una implementación que no realiza un recorrido de pila es <xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8b20-123">An example of an implementation that does not perform a stack walk is <xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a8b20-124">Cuando se realiza un recorrido de pila, los permisos del código que llama a este método no se examinan; la comprobación comienza desde el llamador inmediato de ese código y continúa hasta la pila.</span><span class="sxs-lookup"><span data-stu-id="a8b20-124">When a stack walk is performed, the permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="a8b20-125">La pila de llamadas suele representarse de forma decreciente, por lo que más arriba en la pila de llamadas de métodos llamar a métodos inferior en la pila de llamadas.</span><span class="sxs-lookup"><span data-stu-id="a8b20-125">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="a8b20-126"><xref:System.Security.CodeAccessPermission.Demand%2A> se realiza correctamente sólo si no hay ningún <xref:System.Security.SecurityException> se genera.</span><span class="sxs-lookup"><span data-stu-id="a8b20-126"><xref:System.Security.CodeAccessPermission.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="iPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="a8b20-127">Permiso para formar intersección con el permiso actual.</span><span class="sxs-lookup"><span data-stu-id="a8b20-127">A permission to intersect with the current permission.</span></span> <span data-ttu-id="a8b20-128">Debe ser del mismo tipo que el permiso actual.</span><span class="sxs-lookup"><span data-stu-id="a8b20-128">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="a8b20-129">Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="a8b20-129">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="a8b20-130">Nuevo permiso que representa la intersección del permiso actual y del permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="a8b20-130">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="a8b20-131">Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</span><span class="sxs-lookup"><span data-stu-id="a8b20-131">This new permission is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8b20-132">La intersección de dos permisos es un permiso que describe el conjunto de operaciones descritas en ambos.</span><span class="sxs-lookup"><span data-stu-id="a8b20-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="a8b20-133">Sólo una petición que pase ambos permisos originales pasará la intersección.</span><span class="sxs-lookup"><span data-stu-id="a8b20-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="a8b20-134">Las instrucciones siguientes deben ser true para todas las implementaciones de la <xref:System.Security.IPermission.Intersect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a8b20-134">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.Intersect%2A> method.</span></span> <span data-ttu-id="a8b20-135">`X` y `Y` representan <xref:System.Security.IPermission> referencias de objeto que no sean `null`.</span><span class="sxs-lookup"><span data-stu-id="a8b20-135">`X` and `Y` represent <xref:System.Security.IPermission> object references that are not `null`.</span></span>  
  
-   <span data-ttu-id="a8b20-136">`X`. Intersect (`X`) devuelve un valor igual a `X`.</span><span class="sxs-lookup"><span data-stu-id="a8b20-136">`X`.Intersect(`X`) returns a value equal to `X`.</span></span>  
  
-   <span data-ttu-id="a8b20-137">`X`. Intersect (`Y`) devuelve el mismo valor que `Y`. Intersect (`X`).</span><span class="sxs-lookup"><span data-stu-id="a8b20-137">`X`.Intersect(`Y`) returns the same value as `Y`.Intersect(`X`).</span></span>  
  
-   <span data-ttu-id="a8b20-138">`X`. Intersect (`null`) devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="a8b20-138">`X`.Intersect(`null`) returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8b20-139">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Security.IPermission.Intersect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a8b20-139">The following code example demonstrates implementing the <xref:System.Security.IPermission.Intersect%2A> method.</span></span> <span data-ttu-id="a8b20-140">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.IPermission> clase.</span><span class="sxs-lookup"><span data-stu-id="a8b20-140">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#2](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#2)]
 [!code-csharp[Permission#2](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#2)]
 [!code-vb[Permission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8b20-141">El parámetro <paramref name="target" /> no es <see langword="null" /> y tampoco es una instancia de la misma clase que el permiso actual.</span><span class="sxs-lookup"><span data-stu-id="a8b20-141">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="iPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="a8b20-142">Permiso que se va a probar para la relación de subconjunto.</span><span class="sxs-lookup"><span data-stu-id="a8b20-142">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="a8b20-143">Este permiso debe ser del mismo tipo que el permiso actual.</span><span class="sxs-lookup"><span data-stu-id="a8b20-143">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="a8b20-144">Determina si el permiso actual es un subconjunto del permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="a8b20-144">Determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="a8b20-145"><see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8b20-145"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8b20-146">El permiso actual es un subconjunto del permiso especificado si el permiso actual especifica un conjunto de operaciones que está incluido completamente por el permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="a8b20-146">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="a8b20-147">Por ejemplo, un permiso que representa el acceso a C:\example.txt es un subconjunto de un permiso que representa el acceso a C:\\.</span><span class="sxs-lookup"><span data-stu-id="a8b20-147">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="a8b20-148">Si este método devuelve `true`, el permiso actual no representa ningún más acceso al recurso protegido que tiene el permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="a8b20-148">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="a8b20-149">Las instrucciones siguientes deben ser true para todas las implementaciones de la <xref:System.Security.IPermission.IsSubsetOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a8b20-149">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="a8b20-150">`X`, `Y`, y `Z` representan <xref:System.Security.IPermission> objetos que no son `null`.</span><span class="sxs-lookup"><span data-stu-id="a8b20-150">`X`, `Y`, and `Z` represent <xref:System.Security.IPermission> objects that are not `null`.</span></span>  
  
-   <span data-ttu-id="a8b20-151">`X`. IsSubsetOf (`X`) devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="a8b20-151">`X`.IsSubsetOf(`X`) returns `true`.</span></span>  
  
-   <span data-ttu-id="a8b20-152">`X`. IsSubsetOf (`Y`) devuelve el mismo valor que `Y`. IsSubsetOf (`X`) únicamente si `X` y `Y` representan el mismo conjunto de permisos.</span><span class="sxs-lookup"><span data-stu-id="a8b20-152">`X`.IsSubsetOf(`Y`) returns the same value as `Y`.IsSubsetOf(`X`) if and only if `X` and `Y` represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="a8b20-153">Si `X`. IsSubsetOf (`Y`) y `Y`. IsSubsetOf (`Z`) ambos devuelven `true`, `X`. IsSubsetOf (`Z`) devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="a8b20-153">If `X`.IsSubsetOf(`Y`) and `Y`.IsSubsetOf(`Z`) both return `true`, `X`.IsSubsetOf(`Z`) returns `true`.</span></span>  
  
 <span data-ttu-id="a8b20-154">Si `X` representa un <xref:System.Security.IPermission> objeto con un estado de permiso <xref:System.Security.Permissions.PermissionState.None> y `Y` representa un <xref:System.Security.IPermission> objeto que se `null`, `X`. IsSubsetOf (`Y`) devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="a8b20-154">If `X` represents an empty <xref:System.Security.IPermission> object with a permission state of <xref:System.Security.Permissions.PermissionState.None> and `Y` represents an <xref:System.Security.IPermission> object that is `null`, `X`.IsSubsetOf(`Y`) returns `true`.</span></span> <span data-ttu-id="a8b20-155">Si `Z` también es un permiso vacío, la operación de establecimiento compuesta `X`. Union(Z). También devuelve IsSubsetOf `true` porque la unión de dos permisos vacíos es un permiso vacío.</span><span class="sxs-lookup"><span data-stu-id="a8b20-155">If `Z` is also an empty permission, the compound set operation `X`.Union(Z).IsSubsetOf(Y) also returns `true` because the union of two empty permissions is an empty permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8b20-156">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Security.IPermission.IsSubsetOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a8b20-156">The following code example demonstrates implementing the <xref:System.Security.IPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="a8b20-157">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.IPermission> clase.</span><span class="sxs-lookup"><span data-stu-id="a8b20-157">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#3](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#3)]
 [!code-csharp[Permission#3](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#3)]
 [!code-vb[Permission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8b20-158">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</span><span class="sxs-lookup"><span data-stu-id="a8b20-158">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="iPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="a8b20-159">Permiso para combinar con el permiso actual.</span><span class="sxs-lookup"><span data-stu-id="a8b20-159">A permission to combine with the current permission.</span></span> <span data-ttu-id="a8b20-160">Debe ser del mismo tipo que el permiso actual.</span><span class="sxs-lookup"><span data-stu-id="a8b20-160">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="a8b20-161">Crea un permiso que es la unión del permiso actual y el permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="a8b20-161">Creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="a8b20-162">Nuevo permiso que representa la unión del permiso actual y el permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="a8b20-162">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8b20-163">El resultado de una llamada a <xref:System.Security.IPermission.Union%2A> es un permiso que representa todas las operaciones representadas por el permiso actual y el permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="a8b20-163">The result of a call to <xref:System.Security.IPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="a8b20-164">Cualquier solicitud que pase alguno de estos permisos pasa su unión.</span><span class="sxs-lookup"><span data-stu-id="a8b20-164">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="a8b20-165">Las instrucciones siguientes deben ser true para todas las implementaciones de la <xref:System.Security.IPermission.Union%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a8b20-165">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.Union%2A> method.</span></span> <span data-ttu-id="a8b20-166">`X` y `Y` representan <xref:System.Security.IPermission> objetos que no son `null`.</span><span class="sxs-lookup"><span data-stu-id="a8b20-166">`X` and `Y` represent <xref:System.Security.IPermission> objects that are not `null`.</span></span>  
  
-   <span data-ttu-id="a8b20-167">`X`. Union (`X`) devuelve un objeto que tiene el mismo valor que `X`.</span><span class="sxs-lookup"><span data-stu-id="a8b20-167">`X`.Union(`X`) returns an object that has the same value as `X`.</span></span>  
  
-   <span data-ttu-id="a8b20-168">`X`. Union (`Y`) devuelve un objeto que tiene el mismo valor que el objeto devuelto por `Y`. Union (`X`).</span><span class="sxs-lookup"><span data-stu-id="a8b20-168">`X`.Union(`Y`) returns an object that has the same value as the object returned by `Y`.Union(`X`).</span></span>  
  
-   <span data-ttu-id="a8b20-169">`X`. Union (`null`) devuelve un objeto que tiene el mismo valor que `X`.</span><span class="sxs-lookup"><span data-stu-id="a8b20-169">`X`.Union(`null`) returns an object that has the same value as `X`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8b20-170">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Security.IPermission.Union%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a8b20-170">The following code example demonstrates implementing the <xref:System.Security.IPermission.Union%2A> method.</span></span> <span data-ttu-id="a8b20-171">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.IPermission> clase.</span><span class="sxs-lookup"><span data-stu-id="a8b20-171">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#5](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#5)]
 [!code-csharp[Permission#5](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#5)]
 [!code-vb[Permission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#5)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8b20-172">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</span><span class="sxs-lookup"><span data-stu-id="a8b20-172">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="ProjectElementContainer" FullName="Microsoft.Build.Construction.ProjectElementContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed7e5a4042d99601e8c969f4f21d30cf3085ec7f" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55372647" /></Metadata><TypeSignature Language="C#" Value="public abstract class ProjectElementContainer : Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProjectElementContainer extends Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Construction.ProjectElementContainer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProjectElementContainer&#xA;Inherits ProjectElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectElementContainer abstract : Microsoft::Build::Construction::ProjectElement" />
  <TypeSignature Language="F#" Value="type ProjectElementContainer = class&#xA;    inherit ProjectElement" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Construction.ProjectElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="14a17-101">Proporciona una clase contenedora abstracta para los elementos de proyecto.</span><span class="sxs-lookup"><span data-stu-id="14a17-101">Provides an abstract container class for project elements.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllChildren">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; AllChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; AllChildren" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.AllChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllChildren As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ AllChildren { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllChildren : seq&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="Microsoft.Build.Construction.ProjectElementContainer.AllChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14a17-102">Obtiene un enumerador recursivo con prioridad de profundidad sobre todos los elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="14a17-102">Gets a recursive depth-first enumerator over all child elements.</span></span></summary>
        <value><span data-ttu-id="14a17-103">Un enumerador recursivo profundidad con prioridad a través de todos los elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="14a17-103">A recursive depth-first enumerator over all child elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14a17-104">La recursividad es posible porque los contenedores de elementos de proyecto pueden contener a elementos secundarios que son contenedores de elementos de proyecto.</span><span class="sxs-lookup"><span data-stu-id="14a17-104">Recursion is possible because project element containers may contain children that are themselves project element containers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public void AppendChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.AppendChild : Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElementContainer.AppendChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="14a17-105">Elemento de proyecto que se va a anexar.</span><span class="sxs-lookup"><span data-stu-id="14a17-105">The project element to be appended.</span></span></param>
        <summary><span data-ttu-id="14a17-106">Anexa el elemento <paramref name="child" /> como el último elemento secundario de este contenedor de proyecto.</span><span class="sxs-lookup"><span data-stu-id="14a17-106">Appends the <paramref name="child" /> element as the last child of this project container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14a17-107">Produce una excepción si este contenedor de proyecto no tiene un elemento primario, o si el `child` ya tiene un elemento primario del elemento, o si el `child` elemento creado por otro <xref:Microsoft.Build.Construction.ProjectRootElement>.</span><span class="sxs-lookup"><span data-stu-id="14a17-107">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt; Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; Children" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As ICollection(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ Children { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="Microsoft.Build.Construction.ProjectElementContainer.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14a17-108">Obtiene todos los elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="14a17-108">Gets all child elements.</span></span></summary>
        <value><span data-ttu-id="14a17-109">Todos los elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="14a17-109">All child elements.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenReversed">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt; ChildrenReversed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; ChildrenReversed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildrenReversed As ICollection(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ ChildrenReversed { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildrenReversed : System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14a17-110">Obtiene todos los elementos secundarios, empezando por el último elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="14a17-110">Gets all child elements, starting from the last child.</span></span></summary>
        <value><span data-ttu-id="14a17-111">Todos los elementos de secundarios, empezando desde el último elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="14a17-111">All child elements, starting from the last child.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Build.Construction.ProjectElementContainer.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14a17-112">Obtiene el número de elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="14a17-112">Gets the number of child elements.</span></span></summary>
        <value><span data-ttu-id="14a17-113">Número de elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="14a17-113">The number of child elements.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElement FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectElement FirstChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstChild As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectElement ^ FirstChild { Microsoft::Build::Construction::ProjectElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstChild : Microsoft.Build.Construction.ProjectElement" Usage="Microsoft.Build.Construction.ProjectElementContainer.FirstChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14a17-114">Obtiene el primer elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="14a17-114">Gets the first child element.</span></span></summary>
        <value><span data-ttu-id="14a17-115">El primer elemento secundario, o <see langword="null" /> si no existe ningún elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="14a17-115">The first child element, or <see langword="null" /> if no child element exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14a17-116">Use <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A> para inicializar esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="14a17-116">Use <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A> to initialize this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfterChild">
      <MemberSignature Language="C#" Value="public void InsertAfterChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAfterChild(class Microsoft.Build.Construction.ProjectElement child, class Microsoft.Build.Construction.ProjectElement reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAfterChild (child As ProjectElement, reference As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAfterChild(Microsoft::Build::Construction::ProjectElement ^ child, Microsoft::Build::Construction::ProjectElement ^ reference);" />
      <MemberSignature Language="F#" Value="member this.InsertAfterChild : Microsoft.Build.Construction.ProjectElement * Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElementContainer.InsertAfterChild (child, reference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
        <Parameter Name="reference" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="14a17-117">Elemento de proyecto que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="14a17-117">The project element to be inserted.</span></span></param>
        <param name="reference"><span data-ttu-id="14a17-118">Elemento de proyecto después del cual se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="14a17-118">The project element to be inserted after.</span></span></param>
        <summary><span data-ttu-id="14a17-119">Inserta el elemento <paramref name="child" /> después del elemento <paramref name="reference" />.</span><span class="sxs-lookup"><span data-stu-id="14a17-119">Inserts the <paramref name="child" /> element after the <paramref name="reference" /> element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14a17-120">Si el `reference` elemento es null, este método es equivalente a <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>.</span><span class="sxs-lookup"><span data-stu-id="14a17-120">If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>.</span></span>  
  
 <span data-ttu-id="14a17-121">Produce una excepción si este contenedor de proyecto no tiene un elemento primario, o si el `child` ya tiene un elemento primario del elemento, o si el `child` elemento creado por otro <xref:Microsoft.Build.Construction.ProjectRootElement>, o si el `reference` elemento no es un elemento secundario de este contenedor de proyecto .</span><span class="sxs-lookup"><span data-stu-id="14a17-121">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBeforeChild">
      <MemberSignature Language="C#" Value="public void InsertBeforeChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertBeforeChild(class Microsoft.Build.Construction.ProjectElement child, class Microsoft.Build.Construction.ProjectElement reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertBeforeChild (child As ProjectElement, reference As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertBeforeChild(Microsoft::Build::Construction::ProjectElement ^ child, Microsoft::Build::Construction::ProjectElement ^ reference);" />
      <MemberSignature Language="F#" Value="member this.InsertBeforeChild : Microsoft.Build.Construction.ProjectElement * Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElementContainer.InsertBeforeChild (child, reference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
        <Parameter Name="reference" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="14a17-122">Elemento de proyecto que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="14a17-122">The project element to be inserted.</span></span></param>
        <param name="reference"><span data-ttu-id="14a17-123">Elemento de proyecto delante del cual se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="14a17-123">The project element to be inserted before.</span></span></param>
        <summary><span data-ttu-id="14a17-124">Inserta el elemento <paramref name="child" /> antes del elemento <paramref name="reference" />.</span><span class="sxs-lookup"><span data-stu-id="14a17-124">Inserts the <paramref name="child" /> element before the <paramref name="reference" /> element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14a17-125">Si el `reference` elemento es null, este método es equivalente a <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>.</span><span class="sxs-lookup"><span data-stu-id="14a17-125">If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>.</span></span>  
  
 <span data-ttu-id="14a17-126">Produce una excepción si este contenedor de proyecto no tiene un elemento primario, o si el `child` ya tiene un elemento primario del elemento, o si el `child` elemento creado por otro <xref:Microsoft.Build.Construction.ProjectRootElement>, o si el `reference` elemento no es un elemento secundario de este contenedor de proyecto .</span><span class="sxs-lookup"><span data-stu-id="14a17-126">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElement LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectElement LastChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastChild As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectElement ^ LastChild { Microsoft::Build::Construction::ProjectElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastChild : Microsoft.Build.Construction.ProjectElement" Usage="Microsoft.Build.Construction.ProjectElementContainer.LastChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14a17-127">Obtiene el último elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="14a17-127">Gets the last child element.</span></span></summary>
        <value><span data-ttu-id="14a17-128">El último elemento secundario, o <see langword="null" /> si no existe ningún elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="14a17-128">The last child element, or <see langword="null" /> if no child element exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14a17-129">Use <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A> para inicializar esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="14a17-129">Use <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A> to initialize this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public void PrependChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrependChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrependChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrependChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.PrependChild : Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElementContainer.PrependChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="14a17-130">Elemento de proyecto que se va a anteponer.</span><span class="sxs-lookup"><span data-stu-id="14a17-130">The project element to be prepended.</span></span></param>
        <summary><span data-ttu-id="14a17-131">Antepone el elemento <paramref name="child" /> como el primer elemento secundario de este contenedor de proyecto.</span><span class="sxs-lookup"><span data-stu-id="14a17-131">Prepends the <paramref name="child" /> element as the first child of this project container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14a17-132">Produce una excepción si este contenedor de proyecto no tiene un elemento primario, o si el `child` ya tiene un elemento primario del elemento, o si el `child` elemento creado por otro <xref:Microsoft.Build.Construction.ProjectRootElement>.</span><span class="sxs-lookup"><span data-stu-id="14a17-132">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllChildren">
      <MemberSignature Language="C#" Value="public void RemoveAllChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllChildren ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllChildren();" />
      <MemberSignature Language="F#" Value="member this.RemoveAllChildren : unit -&gt; unit" Usage="projectElementContainer.RemoveAllChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14a17-133">Quita todos los elementos secundarios, si hay alguno, de este contenedor de proyecto.</span><span class="sxs-lookup"><span data-stu-id="14a17-133">Removes all the children, if any, from this project container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14a17-134">Es seguro modificar a los elementos secundarios de esta manera durante la enumeración.</span><span class="sxs-lookup"><span data-stu-id="14a17-134">It is safe to modify the children in this way during enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public void RemoveChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.RemoveChild : Microsoft.Build.Construction.ProjectElement -&gt; unit" Usage="projectElementContainer.RemoveChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="14a17-135">Elemento de proyecto que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="14a17-135">The project element to be removed.</span></span></param>
        <summary><span data-ttu-id="14a17-136">Quita un elemento <paramref name="child" /> de este contenedor de proyecto.</span><span class="sxs-lookup"><span data-stu-id="14a17-136">Removes a <paramref name="child" /> element from this project container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14a17-137">Produce una excepción si el elemento secundario no está actualmente asociado por este contenedor de proyecto.</span><span class="sxs-lookup"><span data-stu-id="14a17-137">Throws an exception if the child element is not currently parented by this project container.</span></span> <span data-ttu-id="14a17-138">Es seguro quitar a un elemento secundario de este modo durante la enumeración.</span><span class="sxs-lookup"><span data-stu-id="14a17-138">It is safe to remove a child this way during enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
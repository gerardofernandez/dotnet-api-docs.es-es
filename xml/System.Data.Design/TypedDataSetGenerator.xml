<Type Name="TypedDataSetGenerator" FullName="System.Data.Design.TypedDataSetGenerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fbbb5b6217549212251d407aca40eee9f2b2baab" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52192504" /></Metadata><TypeSignature Language="C#" Value="public sealed class TypedDataSetGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypedDataSetGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Design.TypedDataSetGenerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypedDataSetGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypedDataSetGenerator sealed" />
  <TypeSignature Language="F#" Value="type TypedDataSetGenerator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a702c-101">Genera una clase <see cref="T:System.Data.DataSet" /> fuertemente tipada.</span><span class="sxs-lookup"><span data-stu-id="a702c-101">Generates a strongly typed <see cref="T:System.Data.DataSet" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a702c-102">La <xref:System.Data.TypedDataSetGenerator> clase toma la información proporcionada (por ejemplo, un esquema XML) y crea una clase dataset con tipo.</span><span class="sxs-lookup"><span data-stu-id="a702c-102">The <xref:System.Data.TypedDataSetGenerator> class takes information provided (for example, an XML schema) and creates a typed dataset class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Generate">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a702c-103">Genera una clase <see cref="T:System.Data.DataSet" /> fuertemente tipada.</span><span class="sxs-lookup"><span data-stu-id="a702c-103">Generates a strongly typed <see cref="T:System.Data.DataSet" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a702c-104">Genera un objeto <xref:System.Data.DataSet> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-104">Generates a strongly typed <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public static string Generate (System.Data.DataSet dataSet, System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Generate(class System.Data.DataSet dataSet, class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Generate(System::Data::DataSet ^ dataSet, System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider);" />
      <MemberSignature Language="F#" Value="static member Generate : System.Data.DataSet * System.CodeDom.CodeNamespace * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="System.Data.Design.TypedDataSetGenerator.Generate (dataSet, codeNamespace, codeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="a702c-105"><see cref="T:System.Data.DataSet" /> de origen que especifica los metadatos para el <see cref="T:System.Data.DataSet" /> con información de tipos.</span><span class="sxs-lookup"><span data-stu-id="a702c-105">The source <see cref="T:System.Data.DataSet" /> that specifies the metadata for the typed <see cref="T:System.Data.DataSet" />.</span></span></param>
        <param name="codeNamespace"><span data-ttu-id="a702c-106">El espacio de nombres que proporciona el espacio de nombres de destino para el <see cref="T:System.Data.DataSet" /> con información de tipos.</span><span class="sxs-lookup"><span data-stu-id="a702c-106">The namespace that provides the target namespace for the typed <see cref="T:System.Data.DataSet" />.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="a702c-107">El valor de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico de idioma que se va a utilizar para generar el conjunto de datos.</span><span class="sxs-lookup"><span data-stu-id="a702c-107">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</span></span></param>
        <summary><span data-ttu-id="a702c-108">Genera un objeto <see cref="T:System.Data.DataSet" /> fuertemente tipado basándose en un <see cref="T:System.Data.DataSet" /> existente.</span><span class="sxs-lookup"><span data-stu-id="a702c-108">Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on an existing <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="a702c-109"><see cref="T:System.Data.DataSet" /> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-109">A strongly typed <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a702c-110">Genera un objeto <xref:System.Data.DataSet> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-110">Generates a strongly typed <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="a702c-111">El conjunto de datos se crea en el espacio de nombres indicado en el `codeNamespace` parámetro y el conjunto de datos se genera en el lenguaje de programación administrado que se indica en la `codeProvider` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a702c-111">The dataset is created in the namespace indicated in the `codeNamespace` parameter, and the dataset is generated in the managed programming language indicated in the `codeProvider` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public static string Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Generate(string inputFileContent, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Generate (inputFileContent As String, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, codeProvider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Generate(System::String ^ inputFileContent, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider);" />
      <MemberSignature Language="F#" Value="static member Generate : string * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="System.Data.Design.TypedDataSetGenerator.Generate (inputFileContent, compileUnit, mainNamespace, codeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputFileContent" Type="System.String" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="inputFileContent"><span data-ttu-id="a702c-112">Cadena que representa el esquema XML en el que se basará <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="a702c-112">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="a702c-113"><see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-113">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</span></span></param>
        <param name="mainNamespace"><span data-ttu-id="a702c-114"><see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-114">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="a702c-115">El valor de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico de idioma que se va a utilizar para generar el conjunto de datos.</span><span class="sxs-lookup"><span data-stu-id="a702c-115">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</span></span></param>
        <summary><span data-ttu-id="a702c-116">Genera un <see cref="T:System.Data.DataSet" /> fuertemente tipado basándose en el archivo de entrada proporcionado.</span><span class="sxs-lookup"><span data-stu-id="a702c-116">Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</span></span></summary>
        <returns><span data-ttu-id="a702c-117"><see cref="T:System.Data.DataSet" /> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-117">A strongly typed <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="a702c-118">Genera un objeto <xref:System.Data.DataSet> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-118">Generates a strongly typed <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public static void Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Collections.Hashtable customDBProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Generate(string inputFileContent, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, class System.Collections.Hashtable customDBProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Generate (inputFileContent As String, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, codeProvider As CodeDomProvider, customDBProviders As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Generate(System::String ^ inputFileContent, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::Collections::Hashtable ^ customDBProviders);" />
      <MemberSignature Language="F#" Value="static member Generate : string * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.CodeDom.Compiler.CodeDomProvider * System.Collections.Hashtable -&gt; unit" Usage="System.Data.Design.TypedDataSetGenerator.Generate (inputFileContent, compileUnit, mainNamespace, codeProvider, customDBProviders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputFileContent" Type="System.String" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="customDBProviders" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="inputFileContent"><span data-ttu-id="a702c-119">Cadena que representa el esquema XML en el que se basará <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="a702c-119">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="a702c-120"><see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-120">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</span></span></param>
        <param name="mainNamespace"><span data-ttu-id="a702c-121"><see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-121">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="a702c-122"><see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico del lenguaje que se va a utilizar para generar el conjunto de datos.</span><span class="sxs-lookup"><span data-stu-id="a702c-122">The language specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</span></span></param>
        <param name="customDBProviders"><span data-ttu-id="a702c-123">Un valor HashTable que asigna conexiones a proveedores concretos del conjunto de datos con tipo.</span><span class="sxs-lookup"><span data-stu-id="a702c-123">A HashTable that maps connections to specific providers in the typed dataset.</span></span></param>
        <summary><span data-ttu-id="a702c-124">Genera un <see cref="T:System.Data.DataSet" /> fuertemente tipado basándose en el archivo de entrada proporcionado.</span><span class="sxs-lookup"><span data-stu-id="a702c-124">Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="a702c-125">Genera un objeto <xref:System.Data.DataSet> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-125">Generates a strongly typed <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public static void Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Data.Common.DbProviderFactory specifiedFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Generate(string inputFileContent, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, class System.Data.Common.DbProviderFactory specifiedFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Common.DbProviderFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Generate (inputFileContent As String, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, codeProvider As CodeDomProvider, specifiedFactory As DbProviderFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Generate(System::String ^ inputFileContent, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::Data::Common::DbProviderFactory ^ specifiedFactory);" />
      <MemberSignature Language="F#" Value="static member Generate : string * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.CodeDom.Compiler.CodeDomProvider * System.Data.Common.DbProviderFactory -&gt; unit" Usage="System.Data.Design.TypedDataSetGenerator.Generate (inputFileContent, compileUnit, mainNamespace, codeProvider, specifiedFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputFileContent" Type="System.String" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="specifiedFactory" Type="System.Data.Common.DbProviderFactory" />
      </Parameters>
      <Docs>
        <param name="inputFileContent"><span data-ttu-id="a702c-126">Cadena que representa el esquema XML en el que se basará <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="a702c-126">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="a702c-127"><see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-127">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</span></span></param>
        <param name="mainNamespace"><span data-ttu-id="a702c-128"><see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-128">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="a702c-129">El valor de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico de idioma que se va a utilizar para generar el conjunto de datos.</span><span class="sxs-lookup"><span data-stu-id="a702c-129">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</span></span></param>
        <param name="specifiedFactory"><span data-ttu-id="a702c-130"><see cref="T:System.Data.Common.DbProviderFactory" /> se utiliza para invalidar el proveedor contenido en <paramref name="inputFileContent" />.</span><span class="sxs-lookup"><span data-stu-id="a702c-130">The <see cref="T:System.Data.Common.DbProviderFactory" /> to use to override the provider contained in the <paramref name="inputFileContent" />.</span></span></param>
        <summary><span data-ttu-id="a702c-131">Genera un <see cref="T:System.Data.DataSet" /> fuertemente tipado basándose en el archivo de entrada proporcionado.</span><span class="sxs-lookup"><span data-stu-id="a702c-131">Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="a702c-132">Genera un objeto <xref:System.Data.DataSet> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-132">Generates a strongly typed <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public static string Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Data.Design.TypedDataSetGenerator.GenerateOption option);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Generate(string inputFileContent, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, valuetype System.Data.Design.TypedDataSetGenerator/GenerateOption option) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Generate (inputFileContent As String, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, codeProvider As CodeDomProvider, option As TypedDataSetGenerator.GenerateOption) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Generate(System::String ^ inputFileContent, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::Data::Design::TypedDataSetGenerator::GenerateOption option);" />
      <MemberSignature Language="F#" Value="static member Generate : string * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.CodeDom.Compiler.CodeDomProvider * System.Data.Design.TypedDataSetGenerator.GenerateOption -&gt; string" Usage="System.Data.Design.TypedDataSetGenerator.Generate (inputFileContent, compileUnit, mainNamespace, codeProvider, option)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputFileContent" Type="System.String" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="option" Type="System.Data.Design.TypedDataSetGenerator+GenerateOption" />
      </Parameters>
      <Docs>
        <param name="inputFileContent"><span data-ttu-id="a702c-133">Cadena que representa el esquema XML en el que se basará <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="a702c-133">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="a702c-134"><see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-134">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</span></span></param>
        <param name="mainNamespace"><span data-ttu-id="a702c-135"><see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-135">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="a702c-136">El valor de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico de idioma que se va a utilizar para generar el conjunto de datos.</span><span class="sxs-lookup"><span data-stu-id="a702c-136">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</span></span></param>
        <param name="option"><span data-ttu-id="a702c-137"><see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> que determina qué componentes y métodos adicionales (si proceden) se van a crear al generar un conjunto de datos con tipo.</span><span class="sxs-lookup"><span data-stu-id="a702c-137">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</span></span></param>
        <summary><span data-ttu-id="a702c-138">Genera un <see cref="T:System.Data.DataSet" /> fuertemente tipado basándose en el archivo de entrada proporcionado.</span><span class="sxs-lookup"><span data-stu-id="a702c-138">Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</span></span></summary>
        <returns><span data-ttu-id="a702c-139"><see cref="T:System.Data.DataSet" /> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-139">A strongly typed <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="a702c-140">Genera un objeto <xref:System.Data.DataSet> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-140">Generates a strongly typed <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public static void Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Collections.Hashtable customDBProviders, System.Data.Design.TypedDataSetGenerator.GenerateOption option);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Generate(string inputFileContent, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, class System.Collections.Hashtable customDBProviders, valuetype System.Data.Design.TypedDataSetGenerator/GenerateOption option) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Generate (inputFileContent As String, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, codeProvider As CodeDomProvider, customDBProviders As Hashtable, option As TypedDataSetGenerator.GenerateOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Generate(System::String ^ inputFileContent, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::Collections::Hashtable ^ customDBProviders, System::Data::Design::TypedDataSetGenerator::GenerateOption option);" />
      <MemberSignature Language="F#" Value="static member Generate : string * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.CodeDom.Compiler.CodeDomProvider * System.Collections.Hashtable * System.Data.Design.TypedDataSetGenerator.GenerateOption -&gt; unit" Usage="System.Data.Design.TypedDataSetGenerator.Generate (inputFileContent, compileUnit, mainNamespace, codeProvider, customDBProviders, option)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputFileContent" Type="System.String" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="customDBProviders" Type="System.Collections.Hashtable" />
        <Parameter Name="option" Type="System.Data.Design.TypedDataSetGenerator+GenerateOption" />
      </Parameters>
      <Docs>
        <param name="inputFileContent"><span data-ttu-id="a702c-141">Cadena que representa el esquema XML en el que se basará <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="a702c-141">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="a702c-142"><see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-142">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</span></span></param>
        <param name="mainNamespace"><span data-ttu-id="a702c-143"><see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-143">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="a702c-144">El valor de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico de idioma que se va a utilizar para generar el conjunto de datos.</span><span class="sxs-lookup"><span data-stu-id="a702c-144">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</span></span></param>
        <param name="customDBProviders"><span data-ttu-id="a702c-145">Un valor HashTable que asigna conexiones a proveedores concretos del conjunto de datos con tipo.</span><span class="sxs-lookup"><span data-stu-id="a702c-145">A HashTable that maps connections to specific providers in the typed dataset.</span></span></param>
        <param name="option"><span data-ttu-id="a702c-146"><see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> que determina qué componentes y métodos adicionales (si proceden) se van a crear al generar un conjunto de datos con tipo.</span><span class="sxs-lookup"><span data-stu-id="a702c-146">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</span></span></param>
        <summary><span data-ttu-id="a702c-147">Genera un <see cref="T:System.Data.DataSet" /> fuertemente tipado basándose en el archivo de entrada proporcionado.</span><span class="sxs-lookup"><span data-stu-id="a702c-147">Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="a702c-148">Genera un objeto <xref:System.Data.DataSet> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-148">Generates a strongly typed <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public static string Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Data.Design.TypedDataSetGenerator.GenerateOption option, string dataSetNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Generate(string inputFileContent, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, valuetype System.Data.Design.TypedDataSetGenerator/GenerateOption option, string dataSetNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Generate (inputFileContent As String, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, codeProvider As CodeDomProvider, option As TypedDataSetGenerator.GenerateOption, dataSetNamespace As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Generate(System::String ^ inputFileContent, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::Data::Design::TypedDataSetGenerator::GenerateOption option, System::String ^ dataSetNamespace);" />
      <MemberSignature Language="F#" Value="static member Generate : string * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.CodeDom.Compiler.CodeDomProvider * System.Data.Design.TypedDataSetGenerator.GenerateOption * string -&gt; string" Usage="System.Data.Design.TypedDataSetGenerator.Generate (inputFileContent, compileUnit, mainNamespace, codeProvider, option, dataSetNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputFileContent" Type="System.String" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="option" Type="System.Data.Design.TypedDataSetGenerator+GenerateOption" />
        <Parameter Name="dataSetNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputFileContent"><span data-ttu-id="a702c-149">Cadena que representa el esquema XML en el que se basará <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="a702c-149">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="a702c-150"><see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-150">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</span></span></param>
        <param name="mainNamespace"><span data-ttu-id="a702c-151"><see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-151">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="a702c-152">El valor de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico de idioma que se va a utilizar para generar el conjunto de datos.</span><span class="sxs-lookup"><span data-stu-id="a702c-152">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</span></span></param>
        <param name="option"><span data-ttu-id="a702c-153"><see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> que determina qué componentes y métodos adicionales (si proceden) se van a crear al generar un conjunto de datos con tipo.</span><span class="sxs-lookup"><span data-stu-id="a702c-153">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</span></span></param>
        <param name="dataSetNamespace"><span data-ttu-id="a702c-154">Cadena que contiene el espacio de nombres del conjunto de datos generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-154">A string that contains the namespace of the generated dataset.</span></span></param>
        <summary><span data-ttu-id="a702c-155">Genera un <see cref="T:System.Data.DataSet" /> fuertemente tipado basándose en el archivo de entrada proporcionado.</span><span class="sxs-lookup"><span data-stu-id="a702c-155">Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</span></span></summary>
        <returns><span data-ttu-id="a702c-156"><see cref="T:System.Data.DataSet" /> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-156">A strongly typed <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="a702c-157">Genera un objeto <xref:System.Data.DataSet> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-157">Generates a strongly typed <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public static void Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Collections.Hashtable customDBProviders, System.Data.Design.TypedDataSetGenerator.GenerateOption option, string dataSetNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Generate(string inputFileContent, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, class System.Collections.Hashtable customDBProviders, valuetype System.Data.Design.TypedDataSetGenerator/GenerateOption option, string dataSetNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Generate (inputFileContent As String, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, codeProvider As CodeDomProvider, customDBProviders As Hashtable, option As TypedDataSetGenerator.GenerateOption, dataSetNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Generate(System::String ^ inputFileContent, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::Collections::Hashtable ^ customDBProviders, System::Data::Design::TypedDataSetGenerator::GenerateOption option, System::String ^ dataSetNamespace);" />
      <MemberSignature Language="F#" Value="static member Generate : string * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.CodeDom.Compiler.CodeDomProvider * System.Collections.Hashtable * System.Data.Design.TypedDataSetGenerator.GenerateOption * string -&gt; unit" Usage="System.Data.Design.TypedDataSetGenerator.Generate (inputFileContent, compileUnit, mainNamespace, codeProvider, customDBProviders, option, dataSetNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputFileContent" Type="System.String" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="customDBProviders" Type="System.Collections.Hashtable" />
        <Parameter Name="option" Type="System.Data.Design.TypedDataSetGenerator+GenerateOption" />
        <Parameter Name="dataSetNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputFileContent"><span data-ttu-id="a702c-158">Cadena que representa el esquema XML en el que se basará <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="a702c-158">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="a702c-159"><see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-159">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</span></span></param>
        <param name="mainNamespace"><span data-ttu-id="a702c-160"><see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-160">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="a702c-161">El valor de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico de idioma que se va a utilizar para generar el conjunto de datos.</span><span class="sxs-lookup"><span data-stu-id="a702c-161">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</span></span></param>
        <param name="customDBProviders"><span data-ttu-id="a702c-162">Un valor HashTable que asigna conexiones a proveedores concretos del conjunto de datos con tipo.</span><span class="sxs-lookup"><span data-stu-id="a702c-162">A HashTable that maps connections to specific providers in the typed dataset.</span></span></param>
        <param name="option"><span data-ttu-id="a702c-163"><see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> que determina qué componentes y métodos adicionales (si proceden) se van a crear al generar un conjunto de datos con tipo.</span><span class="sxs-lookup"><span data-stu-id="a702c-163">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</span></span></param>
        <param name="dataSetNamespace"><span data-ttu-id="a702c-164">Cadena que contiene el espacio de nombres del conjunto de datos generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-164">A string that contains the namespace of the generated dataset.</span></span></param>
        <summary><span data-ttu-id="a702c-165">Genera un <see cref="T:System.Data.DataSet" /> fuertemente tipado basándose en el archivo de entrada proporcionado.</span><span class="sxs-lookup"><span data-stu-id="a702c-165">Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="a702c-166">Genera un objeto <xref:System.Data.DataSet> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-166">Generates a strongly typed <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public static string Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Data.Design.TypedDataSetGenerator.GenerateOption option, string dataSetNamespace, string basePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Generate(string inputFileContent, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, valuetype System.Data.Design.TypedDataSetGenerator/GenerateOption option, string dataSetNamespace, string basePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Generate (inputFileContent As String, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, codeProvider As CodeDomProvider, option As TypedDataSetGenerator.GenerateOption, dataSetNamespace As String, basePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Generate(System::String ^ inputFileContent, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::Data::Design::TypedDataSetGenerator::GenerateOption option, System::String ^ dataSetNamespace, System::String ^ basePath);" />
      <MemberSignature Language="F#" Value="static member Generate : string * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.CodeDom.Compiler.CodeDomProvider * System.Data.Design.TypedDataSetGenerator.GenerateOption * string * string -&gt; string" Usage="System.Data.Design.TypedDataSetGenerator.Generate (inputFileContent, compileUnit, mainNamespace, codeProvider, option, dataSetNamespace, basePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputFileContent" Type="System.String" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="option" Type="System.Data.Design.TypedDataSetGenerator+GenerateOption" />
        <Parameter Name="dataSetNamespace" Type="System.String" />
        <Parameter Name="basePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputFileContent"><span data-ttu-id="a702c-167">Cadena que representa el esquema XML en el que se basará <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="a702c-167">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="a702c-168"><see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-168">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</span></span></param>
        <param name="mainNamespace"><span data-ttu-id="a702c-169"><see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-169">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="a702c-170">El valor de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico de idioma que se va a utilizar para generar el conjunto de datos.</span><span class="sxs-lookup"><span data-stu-id="a702c-170">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</span></span></param>
        <param name="option"><span data-ttu-id="a702c-171"><see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> que determina qué componentes y métodos adicionales (si proceden) se van a crear al generar un conjunto de datos con tipo.</span><span class="sxs-lookup"><span data-stu-id="a702c-171">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</span></span></param>
        <param name="dataSetNamespace"><span data-ttu-id="a702c-172">Cadena que contiene el espacio de nombres del conjunto de datos generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-172">A string that contains the namespace of the generated dataset.</span></span></param>
        <param name="basePath"><span data-ttu-id="a702c-173">Cadena que representa la ruta de acceso del esquema basándose en la ruta de acceso relativa del archivo de entrada del conjunto de datos.</span><span class="sxs-lookup"><span data-stu-id="a702c-173">A string that represents the path to the schema based on the relative path of the dataset input file.</span></span></param>
        <summary><span data-ttu-id="a702c-174">Genera un <see cref="T:System.Data.DataSet" /> fuertemente tipado basándose en el archivo de entrada proporcionado.</span><span class="sxs-lookup"><span data-stu-id="a702c-174">Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</span></span></summary>
        <returns><span data-ttu-id="a702c-175"><see cref="T:System.Data.DataSet" /> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-175">A strongly typed <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="a702c-176">Genera un objeto <xref:System.Data.DataSet> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-176">Generates a strongly typed <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public static void Generate (string inputFileContent, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Collections.Hashtable customDBProviders, System.Data.Design.TypedDataSetGenerator.GenerateOption option, string dataSetNamespace, string basePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Generate(string inputFileContent, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, class System.Collections.Hashtable customDBProviders, valuetype System.Data.Design.TypedDataSetGenerator/GenerateOption option, string dataSetNamespace, string basePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Generate (inputFileContent As String, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, codeProvider As CodeDomProvider, customDBProviders As Hashtable, option As TypedDataSetGenerator.GenerateOption, dataSetNamespace As String, basePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Generate(System::String ^ inputFileContent, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::Collections::Hashtable ^ customDBProviders, System::Data::Design::TypedDataSetGenerator::GenerateOption option, System::String ^ dataSetNamespace, System::String ^ basePath);" />
      <MemberSignature Language="F#" Value="static member Generate : string * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.CodeDom.Compiler.CodeDomProvider * System.Collections.Hashtable * System.Data.Design.TypedDataSetGenerator.GenerateOption * string * string -&gt; unit" Usage="System.Data.Design.TypedDataSetGenerator.Generate (inputFileContent, compileUnit, mainNamespace, codeProvider, customDBProviders, option, dataSetNamespace, basePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputFileContent" Type="System.String" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="customDBProviders" Type="System.Collections.Hashtable" />
        <Parameter Name="option" Type="System.Data.Design.TypedDataSetGenerator+GenerateOption" />
        <Parameter Name="dataSetNamespace" Type="System.String" />
        <Parameter Name="basePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputFileContent"><span data-ttu-id="a702c-177">Cadena que representa el esquema XML en el que se basará <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="a702c-177">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</span></span></param>
        <param name="compileUnit"><span data-ttu-id="a702c-178"><see cref="T:System.CodeDom.CodeCompileUnit" /> que va a contener el código generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-178">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</span></span></param>
        <param name="mainNamespace"><span data-ttu-id="a702c-179"><see cref="T:System.CodeDom.CodeNamespace" /> que contiene el conjunto de datos generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-179">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</span></span></param>
        <param name="codeProvider"><span data-ttu-id="a702c-180">El valor de <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> específico de idioma que se va a utilizar para generar el conjunto de datos.</span><span class="sxs-lookup"><span data-stu-id="a702c-180">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</span></span></param>
        <param name="customDBProviders"><span data-ttu-id="a702c-181">Un valor HashTable que asigna conexiones a proveedores concretos del conjunto de datos con tipo.</span><span class="sxs-lookup"><span data-stu-id="a702c-181">A HashTable that maps connections to specific providers in the typed dataset.</span></span></param>
        <param name="option"><span data-ttu-id="a702c-182"><see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> que determina qué componentes y métodos adicionales (si proceden) se van a crear al generar un conjunto de datos con tipo.</span><span class="sxs-lookup"><span data-stu-id="a702c-182">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</span></span></param>
        <param name="dataSetNamespace"><span data-ttu-id="a702c-183">Cadena que contiene el espacio de nombres del conjunto de datos generado.</span><span class="sxs-lookup"><span data-stu-id="a702c-183">A string that contains the namespace of the generated dataset.</span></span></param>
        <param name="basePath"><span data-ttu-id="a702c-184">Cadena que representa la ruta de acceso del esquema basándose en la ruta de acceso relativa del archivo de entrada del conjunto de datos.</span><span class="sxs-lookup"><span data-stu-id="a702c-184">A string that represents the path to the schema based on the relative path of the dataset input file.</span></span></param>
        <summary><span data-ttu-id="a702c-185">Genera un <see cref="T:System.Data.DataSet" /> fuertemente tipado basándose en el archivo de entrada proporcionado.</span><span class="sxs-lookup"><span data-stu-id="a702c-185">Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="a702c-186">Genera un objeto <xref:System.Data.DataSet> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="a702c-186">Generates a strongly typed <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProviderName">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a702c-187">Devuelve el primer nombre de proveedor que se encuentra en el archivo de entrada proporcionado.</span><span class="sxs-lookup"><span data-stu-id="a702c-187">Returns the first provider name found in the provided input file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a702c-188">Devuelve el nombre del proveedor.</span><span class="sxs-lookup"><span data-stu-id="a702c-188">Returns the provider name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProviderName">
      <MemberSignature Language="C#" Value="public static string GetProviderName (string inputFileContent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetProviderName(string inputFileContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProviderName (inputFileContent As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetProviderName(System::String ^ inputFileContent);" />
      <MemberSignature Language="F#" Value="static member GetProviderName : string -&gt; string" Usage="System.Data.Design.TypedDataSetGenerator.GetProviderName inputFileContent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputFileContent" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputFileContent"><span data-ttu-id="a702c-189">Cadena que representa el esquema XML en el que se basará <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="a702c-189">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</span></span></param>
        <summary><span data-ttu-id="a702c-190">Devuelve el primer nombre de proveedor que se encuentra en el archivo de entrada proporcionado.</span><span class="sxs-lookup"><span data-stu-id="a702c-190">Returns the first provider name found in the provided input file.</span></span></summary>
        <returns><span data-ttu-id="a702c-191">Cadena que representa el proveedor concreto para este <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="a702c-191">A string that represents the specific provider for this <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="a702c-192">Este método devuelve el primer nombre de proveedor especificado `inputFileContent`.</span><span class="sxs-lookup"><span data-stu-id="a702c-192">This method returns the first provider name in the specified `inputFileContent`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderName">
      <MemberSignature Language="C#" Value="public static string GetProviderName (string inputFileContent, string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetProviderName(string inputFileContent, string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProviderName (inputFileContent As String, tableName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetProviderName(System::String ^ inputFileContent, System::String ^ tableName);" />
      <MemberSignature Language="F#" Value="static member GetProviderName : string * string -&gt; string" Usage="System.Data.Design.TypedDataSetGenerator.GetProviderName (inputFileContent, tableName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputFileContent" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputFileContent"><span data-ttu-id="a702c-193">Cadena que representa el esquema XML en el que se basará <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="a702c-193">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</span></span></param>
        <param name="tableName"><span data-ttu-id="a702c-194">Cadena que representa el nombre de la tabla de la que se va a devolver el nombre del proveedor.</span><span class="sxs-lookup"><span data-stu-id="a702c-194">A string that represents the name of the table to return the provider name from.</span></span></param>
        <summary><span data-ttu-id="a702c-195">Devuelve el nombre del proveedor para <paramref name="tableName" /> del archivo de entrada.</span><span class="sxs-lookup"><span data-stu-id="a702c-195">Returns the provider name for the <paramref name="tableName" /> in the input file.</span></span></summary>
        <returns><span data-ttu-id="a702c-196">Cadena que representa el nombre del proveedor para la tabla concreta que se ha pasado en el parámetro <paramref name="tableName" />.</span><span class="sxs-lookup"><span data-stu-id="a702c-196">A string that represents the provider name for the specific table passed in to the <paramref name="tableName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="a702c-197">Devuelve el nombre del proveedor para el determinado `tableName` en el <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="a702c-197">Returns the provider name for the given `tableName` in the <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Data.Design.TypedDataSetGenerator.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ReferencedAssemblies As ICollection(Of Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ ReferencedAssemblies { System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;" Usage="System.Data.Design.TypedDataSetGenerator.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a702c-198">Obtiene o establece la colección de ensamblados a los que se hace referencia en un conjunto de datos con tipo.</span><span class="sxs-lookup"><span data-stu-id="a702c-198">Gets or sets the collection of assemblies referenced in a typed dataset.</span></span></summary>
        <value><span data-ttu-id="a702c-199">Una colección que contiene todos los ensamblados a los que se hace referencia en el conjunto de datos.</span><span class="sxs-lookup"><span data-stu-id="a702c-199">A collection containing all referenced assemblies in the dataset.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a702c-200">El generador recorre en iteración esta lista y agrega los ensamblados al proyecto.</span><span class="sxs-lookup"><span data-stu-id="a702c-200">The generator iterates over this list and adds the assemblies to your project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="SpeechEventInfo" FullName="System.Speech.Synthesis.TtsEngine.SpeechEventInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd814bb6b13133827dcf68a480e1ffa219b02e78" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58730668" /></Metadata><TypeSignature Language="C#" Value="public struct SpeechEventInfo : IEquatable&lt;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SpeechEventInfo extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure SpeechEventInfo&#xA;Implements IEquatable(Of SpeechEventInfo)" />
  <TypeSignature Language="C++ CLI" Value="public value class SpeechEventInfo : IEquatable&lt;System::Speech::Synthesis::TtsEngine::SpeechEventInfo&gt;" />
  <TypeSignature Language="F#" Value="type SpeechEventInfo = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ImmutableObject(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="22a01-101">Se usa para especificar el tipo de evento, y sus argumentos (si existen) que se generarán como parte de la representación de texto a voz por parte de un motor de voz sintetizada personalizado.</span><span class="sxs-lookup"><span data-stu-id="22a01-101">Used to specify the type of event, and its arguments (if any)  to be generated as part of the rendering of text to speech by a custom synthetic speech engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22a01-102">Un motor de síntesis de voz personalizado solicita la generación de eventos en la plataforma de voz proporcionando una adecuada <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instancia a <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A> miembro de la <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> pasa el objeto de sitio de motor para las implementaciones de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, y <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="22a01-102">A custom speech synthesis engine requests the generation of events under the Speech Platform by providing an appropriate <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance to <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A> member of the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> engine site object passed to implementations of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22a01-103">El ejemplo siguiente es parte de una implementación de síntesis de voz personalizado hereda de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>y el uso de la utilización de <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, y <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="22a01-103">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="22a01-104">La implementación de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="22a01-104">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="22a01-105">Recibe una matriz de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancias y crea una nueva matriz de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancias que se pasarán a la `Speak` método en un motor de síntesis subyacente.</span><span class="sxs-lookup"><span data-stu-id="22a01-105">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="22a01-106">Si el <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> por se encuentra el valor de enumeración de la <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propiedad en el <xref:System.Speech.Synthesis.TtsEngine.FragmentState> devuelto por la <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> propiedad de cada uno <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancia es <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, la implementación</span><span class="sxs-lookup"><span data-stu-id="22a01-106">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="22a01-107">Americanism a Britishisms se traduce en el texto que se hablará.</span><span class="sxs-lookup"><span data-stu-id="22a01-107">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="22a01-108">Si el <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propiedad en el <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces proporcionadas con el soporte técnico de implementación el <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> tipo de evento, un <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instancia se utiliza para crear un evento a la unidad que se crea un indicador de progreso de sintetizador.</span><span class="sxs-lookup"><span data-stu-id="22a01-108">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="22a01-109">A continuación, se llama a un motor de representación de voz con modificado <xref:System.Speech.Synthesis.TtsEngine.TextFragment> matriz.</span><span class="sxs-lookup"><span data-stu-id="22a01-109">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechEventInfo (short eventId, short parameterType, int param1, IntPtr param2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 eventId, int16 parameterType, int32 param1, native int param2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventId As Short, parameterType As Short, param1 As Integer, param2 As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechEventInfo(short eventId, short parameterType, int param1, IntPtr param2);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.TtsEngine.SpeechEventInfo : int16 * int16 * int * nativeint -&gt; System.Speech.Synthesis.TtsEngine.SpeechEventInfo" Usage="new System.Speech.Synthesis.TtsEngine.SpeechEventInfo (eventId, parameterType, param1, param2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int16" />
        <Parameter Name="parameterType" Type="System.Int16" />
        <Parameter Name="param1" Type="System.Int32" />
        <Parameter Name="param2" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="eventId"><span data-ttu-id="22a01-110">Una instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> que indica el tipo de evento de la plataforma de voz que el objeto <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> va a administrar.</span><span class="sxs-lookup"><span data-stu-id="22a01-110">An instance of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> indicating the sort of Speech platform event the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object is to handle.</span></span></param>
        <param name="parameterType"><span data-ttu-id="22a01-111">Una instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> que indica cómo va a interpretarse la referencia de <see langword="System.IntPtr" /> de <paramref name="param2" /> e, implícitamente, el uso de <paramref name="param1" />.</span><span class="sxs-lookup"><span data-stu-id="22a01-111">An instance of <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> indicating how the <see langword="System.IntPtr" /> reference of <paramref name="param2" /> is to be interpreted, and, by implication, the use of <paramref name="param1" />.</span></span></param>
        <param name="param1"><span data-ttu-id="22a01-112">Un valor entero que se pasará a la plataforma de voz cuando se genere el evento solicitado por la instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> que se construirá.</span><span class="sxs-lookup"><span data-stu-id="22a01-112">An integer value to be passed to the Speech platform when the event requested by the instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> to be constructed is generated.</span></span>  
  
<span data-ttu-id="22a01-113">El significado exacto de este entero está determinado implícitamente por el valor de <paramref name="parameterType" />.</span><span class="sxs-lookup"><span data-stu-id="22a01-113">The exact meaning of this integer is implicitly determined by the value of <paramref name="parameterType" />.</span></span></param>
        <param name="param2"><span data-ttu-id="22a01-114">Una instancia de <see langword="System.IntPtr" /> que hace referencia a un objeto.</span><span class="sxs-lookup"><span data-stu-id="22a01-114">A <see langword="System.IntPtr" /> instance referencing an object.</span></span> <span data-ttu-id="22a01-115">que se pasará a la plataforma de voz cuando se genere el evento solicitado por la instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> que se construirá.</span><span class="sxs-lookup"><span data-stu-id="22a01-115">to be passed to the Speech platform when the event requested by the instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> to be constructed is generated.</span></span>  
  
<span data-ttu-id="22a01-116">El valor <paramref name="parameterType" /> define explícitamente el tipo al que se debe hacer referencia.</span><span class="sxs-lookup"><span data-stu-id="22a01-116">The type which must be referenced is explicitly defined by the value <paramref name="parameterType" />.</span></span> <span data-ttu-id="22a01-117">El valor <see langword="System.IntPtr.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="22a01-117">The value <see langword="System.IntPtr.Zero" />.</span></span></param>
        <summary><span data-ttu-id="22a01-118">Crea un elemento <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> adecuado.</span><span class="sxs-lookup"><span data-stu-id="22a01-118">Constructs an appropriate <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22a01-119">Permite los valores utilizados para `parameterType`, `param1`, y `param2` y su significado viene determinado por el tipo de evento que se solicita, según lo especificado por el miembro de <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> utilizado para `eventId`.</span><span class="sxs-lookup"><span data-stu-id="22a01-119">Permitted values used for `parameterType`, `param1`, and `param2` and their meaning is dictated by the type of event being requested, as specified by the member of <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> used for `eventId`.</span></span>  
  
 <span data-ttu-id="22a01-120">Para obtener información detallada sobre los valores adecuados para `parameterType`, `param1`, y `param2`, consulte la documentación de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A></span><span class="sxs-lookup"><span data-stu-id="22a01-120">For detailed information on appropriate values for `parameterType`, `param1`, and `param2`, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A></span></span>  
  
 <span data-ttu-id="22a01-121">El tipo de los eventos que pueden controlarse mediante la infraestructura de la plataforma de voz puede obtenerse a través de la <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propiedad en la implementación de sitio del motor de sintetizador de <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>.</span><span class="sxs-lookup"><span data-stu-id="22a01-121">The type of the events which can be handled by the Speech platform infrastructure can be obtained through the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the synthesizer engine site implementation of <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22a01-122">El ejemplo siguiente es parte de una implementación de síntesis de voz personalizado hereda de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>y el uso de la utilización de <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, y <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="22a01-122">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="22a01-123">La implementación de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="22a01-123">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="22a01-124">Recibe una matriz de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancias y crea una nueva matriz de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancias que se pasarán a la `Speak` método en un motor de síntesis subyacente.</span><span class="sxs-lookup"><span data-stu-id="22a01-124">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="22a01-125">Si el <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> por se encuentra el valor de enumeración de la <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propiedad en el <xref:System.Speech.Synthesis.TtsEngine.FragmentState> devuelto por la <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> propiedad de cada uno <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancia es <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, la implementación</span><span class="sxs-lookup"><span data-stu-id="22a01-125">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="22a01-126">Americanism a Britishisms se traduce en el texto que se hablará.</span><span class="sxs-lookup"><span data-stu-id="22a01-126">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="22a01-127">Si el <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propiedad en el <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces proporcionadas con el soporte técnico de implementación el <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> tipo de evento, un <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instancia se utiliza para crear un evento a la unidad que se crea un indicador de progreso de sintetizador.</span><span class="sxs-lookup"><span data-stu-id="22a01-127">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="22a01-128">A continuación, se llama a un motor de representación de voz con modificado <xref:System.Speech.Synthesis.TtsEngine.TextFragment> matriz.</span><span class="sxs-lookup"><span data-stu-id="22a01-128">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="22a01-129">Determina si una instancia <c>SpeechEventInfo</c> es igual a otro objeto.</span><span class="sxs-lookup"><span data-stu-id="22a01-129">Determines whether a <c>SpeechEventInfo</c> instance is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="speechEventInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="22a01-130">Objeto que se va a evaluar.</span><span class="sxs-lookup"><span data-stu-id="22a01-130">The object to evaluate.</span></span></param>
        <summary><span data-ttu-id="22a01-131">Determina si un objeto específico es una instancia de <c>SpeechEventInfo</c> e igual a la instancia actual de <c>SpeechEventInfo</c>.</span><span class="sxs-lookup"><span data-stu-id="22a01-131">Determines whether a specified object is an instance of <c>SpeechEventInfo</c> and equal to the current instance of <c>SpeechEventInfo</c>.</span></span></summary>
        <returns><span data-ttu-id="22a01-132"><see langword="true" /> si <paramref name="obj" /> es igual al objeto <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> actual; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="22a01-132"><see langword="true" /> if <paramref name="obj" /> is equal to the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Speech.Synthesis.TtsEngine.SpeechEventInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As SpeechEventInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Speech::Synthesis::TtsEngine::SpeechEventInfo other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Speech.Synthesis.TtsEngine.SpeechEventInfo -&gt; bool" Usage="speechEventInfo.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="22a01-133">Objeto <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> que se va a evaluar.</span><span class="sxs-lookup"><span data-stu-id="22a01-133">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to evaluate.</span></span></param>
        <summary><span data-ttu-id="22a01-134">Determina si un objeto específico <c>SpeechEventInfo</c> es igual a la instancia actual de <c>SpeechEventInfo</c>.</span><span class="sxs-lookup"><span data-stu-id="22a01-134">Determines whether a specified <c>SpeechEventInfo</c> object is equal to the current instance of <c>SpeechEventInfo</c>.</span></span></summary>
        <returns><span data-ttu-id="22a01-135"><see langword="true" /> si <paramref name="other" /> es igual al objeto <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> actual; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="22a01-135"><see langword="true" /> if <paramref name="other" /> is equal to the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventId">
      <MemberSignature Language="C#" Value="public short EventId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 EventId" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventId As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short EventId { short get(); };" />
      <MemberSignature Language="F#" Value="member this.EventId : int16" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22a01-136">Obtiene y establece el evento de la plataforma de voz que usa una instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> para realizar solicitudes.</span><span class="sxs-lookup"><span data-stu-id="22a01-136">Gets and set the Speech platform event which an instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is used to request.</span></span></summary>
        <value><span data-ttu-id="22a01-137">Devuelve un miembro de <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> como <see langword="short" />, que indica el tipo de evento que el objeto <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> va a generar.</span><span class="sxs-lookup"><span data-stu-id="22a01-137">Returns a member of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> as a <see langword="short" />, indicating the event type the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object is to generate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="22a01-138">El ejemplo siguiente es parte de una implementación de síntesis de voz personalizado hereda de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>y el uso de la utilización de <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, y <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="22a01-138">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="22a01-139">La implementación de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="22a01-139">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="22a01-140">Recibe una matriz de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancias y crea una nueva matriz de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancias que se pasarán a la `Speak` método en un motor de síntesis subyacente.</span><span class="sxs-lookup"><span data-stu-id="22a01-140">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="22a01-141">Si el <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> por se encuentra el valor de enumeración de la <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propiedad en el <xref:System.Speech.Synthesis.TtsEngine.FragmentState> devuelto por la <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> propiedad de cada uno <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancia es <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, la implementación</span><span class="sxs-lookup"><span data-stu-id="22a01-141">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="22a01-142">Americanism a Britishisms se traduce en el texto que se hablará.</span><span class="sxs-lookup"><span data-stu-id="22a01-142">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="22a01-143">Si el <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propiedad en el <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces proporcionadas con el soporte técnico de implementación el <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> tipo de evento, un <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instancia se utiliza para crear un evento a la unidad que se crea un indicador de progreso de sintetizador.</span><span class="sxs-lookup"><span data-stu-id="22a01-143">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="22a01-144">Los parámetros en <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, incluidos <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> se utilizan para iniciar el evento generado mediante la `LogSpeechEvent` método.</span><span class="sxs-lookup"><span data-stu-id="22a01-144">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="22a01-145">A continuación, se llama a un motor de representación de voz con modificado <xref:System.Speech.Synthesis.TtsEngine.TextFragment> matriz.</span><span class="sxs-lookup"><span data-stu-id="22a01-145">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="speechEventInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22a01-146">Proporciona un código hash para un objeto <c>SpeechEventInfo</c>.</span><span class="sxs-lookup"><span data-stu-id="22a01-146">Provides a hash code for a <c>SpeechEventInfo</c> object.</span></span></summary>
        <returns><span data-ttu-id="22a01-147">Código hash para un objeto <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />.</span><span class="sxs-lookup"><span data-stu-id="22a01-147">A hash code for a <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (event1 As SpeechEventInfo, event2 As SpeechEventInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Speech::Synthesis::TtsEngine::SpeechEventInfo event1, System::Speech::Synthesis::TtsEngine::SpeechEventInfo event2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Speech.Synthesis.TtsEngine.SpeechEventInfo * System.Speech.Synthesis.TtsEngine.SpeechEventInfo -&gt; bool" Usage="event1 = event2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="event1" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
        <Parameter Name="event2" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      </Parameters>
      <Docs>
        <param name="event1"><span data-ttu-id="22a01-148">Objeto <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> que se compara con <paramref name="event2" />.</span><span class="sxs-lookup"><span data-stu-id="22a01-148">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <paramref name="event2" />.</span></span></param>
        <param name="event2"><span data-ttu-id="22a01-149">Objeto <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> que se compara con <paramref name="event1" />.</span><span class="sxs-lookup"><span data-stu-id="22a01-149">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <paramref name="event1" />.</span></span></param>
        <summary><span data-ttu-id="22a01-150">Determina si dos instancias de <c>SpeechEventInfo</c> son iguales.</span><span class="sxs-lookup"><span data-stu-id="22a01-150">Determines whether two instances of <c>SpeechEventInfo</c> are equal.</span></span></summary>
        <returns><span data-ttu-id="22a01-151">Es <see langword="true" /> si <paramref name="event1" /> es igual que <paramref name="event2" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="22a01-151"><see langword="true" /> if <paramref name="event1" /> is the same as <paramref name="event2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="22a01-152">El método equivalente para este operador es <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="22a01-152">The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (event1 As SpeechEventInfo, event2 As SpeechEventInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Speech::Synthesis::TtsEngine::SpeechEventInfo event1, System::Speech::Synthesis::TtsEngine::SpeechEventInfo event2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Speech.Synthesis.TtsEngine.SpeechEventInfo * System.Speech.Synthesis.TtsEngine.SpeechEventInfo -&gt; bool" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality (event1, event2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="event1" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
        <Parameter Name="event2" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      </Parameters>
      <Docs>
        <param name="event1"><span data-ttu-id="22a01-153">Objeto <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> que se compara con <paramref name="event2" />.</span><span class="sxs-lookup"><span data-stu-id="22a01-153">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <paramref name="event2" />.</span></span></param>
        <param name="event2"><span data-ttu-id="22a01-154">Objeto <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> que se compara con <paramref name="event1" />.</span><span class="sxs-lookup"><span data-stu-id="22a01-154">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <paramref name="event1" />.</span></span></param>
        <summary><span data-ttu-id="22a01-155">Determina si dos instancias de <c>SpeechEventInfo</c> no son iguales.</span><span class="sxs-lookup"><span data-stu-id="22a01-155">Determines whether two instances of <c>SpeechEventInfo</c> are not equal.</span></span></summary>
        <returns><span data-ttu-id="22a01-156"><see langword="true" /> si <paramref name="event1" /> es diferente de <paramref name="event2" />; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="22a01-156"><see langword="true" /> if <paramref name="event1" /> is different from <paramref name="event2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="22a01-157">El método equivalente para este operador es <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="22a01-157">The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Param1">
      <MemberSignature Language="C#" Value="public int Param1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Param1" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Param1 As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Param1 { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Param1 : int" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22a01-158">Obtiene y establece el valor de <see langword="integer" /> (<paramref name="param1" /> en el constructor) que se pasará a la plataforma de voz para generar un evento que usa instancia actual de <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> para efectuar solicitudes.</span><span class="sxs-lookup"><span data-stu-id="22a01-158">Gets and set the <see langword="integer" /> value (<paramref name="param1" /> in the constructor) to be passed to the Speech platform to generate an event the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is used to request.</span></span></summary>
        <value><span data-ttu-id="22a01-159">Devuelve el elemento <see langword="integer" /> que se va a pasar a la plataforma de voz cuando se genera el evento especificado por la instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="22a01-159">Returns the <see langword="integer" /> to be passed to Speech platform when the event specified by the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is generated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22a01-160">Los requisitos y el significado de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> propiedad de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> se determinan de forma exclusiva por los valores de la <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> y <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> propiedades el <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instancia.</span><span class="sxs-lookup"><span data-stu-id="22a01-160">The requirements and meaning of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span></span>  
  
 <span data-ttu-id="22a01-161">Para obtener información detallada acerca de cómo usar <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A>, consulte la documentación de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span><span class="sxs-lookup"><span data-stu-id="22a01-161">For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22a01-162">El ejemplo siguiente es parte de una implementación de síntesis de voz personalizado hereda de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>y el uso de la utilización de <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, y <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="22a01-162">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="22a01-163">La implementación de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="22a01-163">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="22a01-164">Recibe una matriz de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancias y crea una nueva matriz de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancias que se pasarán a la `Speak` método en un motor de síntesis subyacente.</span><span class="sxs-lookup"><span data-stu-id="22a01-164">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="22a01-165">Si el <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> por se encuentra el valor de enumeración de la <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propiedad en el <xref:System.Speech.Synthesis.TtsEngine.FragmentState> devuelto por la <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> propiedad de cada uno <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancia es <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, la implementación</span><span class="sxs-lookup"><span data-stu-id="22a01-165">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="22a01-166">Americanism a Britishisms se traduce en el texto que se hablará.</span><span class="sxs-lookup"><span data-stu-id="22a01-166">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="22a01-167">Si el <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propiedad en el <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces proporcionadas con el soporte técnico de implementación el <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> tipo de evento, un <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instancia se utiliza para crear un evento a la unidad que se crea un indicador de progreso de sintetizador.</span><span class="sxs-lookup"><span data-stu-id="22a01-167">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="22a01-168">Los parámetros en <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, incluidos <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> se utilizan para iniciar el evento generado mediante la `LogSpeechEvent` método.</span><span class="sxs-lookup"><span data-stu-id="22a01-168">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="22a01-169">A continuación, se llama a un motor de representación de voz con modificado <xref:System.Speech.Synthesis.TtsEngine.TextFragment> matriz.</span><span class="sxs-lookup"><span data-stu-id="22a01-169">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Param2">
      <MemberSignature Language="C#" Value="public IntPtr Param2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Param2" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Param2 As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Param2 { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Param2 : nativeint" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22a01-170">Obtiene y establece la instancia de <see langword="System.IntPtr" /> (<paramref name="param2" /> en el constructor) que hace referencia al objeto que se pasará a la plataforma de voz para generar un evento que usa la instancia actual de <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> para realizar solicitudes.</span><span class="sxs-lookup"><span data-stu-id="22a01-170">Gets and set the <see langword="System.IntPtr" /> instance (<paramref name="param2" /> in the constructor) referencing the object to be passed to the Speech platform to generate an event the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is used to request.</span></span></summary>
        <value><span data-ttu-id="22a01-171">Devuelve el elemento <see langword="System.IntPtr" /> que hace referencia al objeto que se va a pasar a la plataforma de voz cuando se genera el evento especificado por la instancia de <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="22a01-171">Returns the <see langword="System.IntPtr" /> referencing the object to be passed to Speech platform when the event specified by the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is generated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22a01-172">Los requisitos en el `System.IntPtr` referencia de la <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> propiedad de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> se determinan de forma exclusiva por los valores de la <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> y <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> propiedades el <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instancia.</span><span class="sxs-lookup"><span data-stu-id="22a01-172">The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span></span>  
  
 <span data-ttu-id="22a01-173">Para obtener información detallada acerca de cómo usar <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, consulte la documentación de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span><span class="sxs-lookup"><span data-stu-id="22a01-173">For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22a01-174">El ejemplo siguiente es parte de una implementación de síntesis de voz personalizado hereda de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>y el uso de la utilización de <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, y <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="22a01-174">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="22a01-175">La implementación de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="22a01-175">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="22a01-176">Recibe una matriz de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancias y crea una nueva matriz de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancias que se pasarán a la `Speak` método en un motor de síntesis subyacente.</span><span class="sxs-lookup"><span data-stu-id="22a01-176">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="22a01-177">Si el <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> por se encuentra el valor de enumeración de la <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propiedad en el <xref:System.Speech.Synthesis.TtsEngine.FragmentState> devuelto por la <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> propiedad de cada uno <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancia es <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, la implementación</span><span class="sxs-lookup"><span data-stu-id="22a01-177">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="22a01-178">Americanism a Britishisms se traduce en el texto que se hablará.</span><span class="sxs-lookup"><span data-stu-id="22a01-178">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="22a01-179">Si el <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propiedad en el <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces proporcionadas con el soporte técnico de implementación el <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> tipo de evento, un <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instancia se utiliza para crear un evento a la unidad que se crea un indicador de progreso de sintetizador.</span><span class="sxs-lookup"><span data-stu-id="22a01-179">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="22a01-180">Los parámetros en <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, incluidos <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> se utilizan para iniciar el evento generado mediante la `LogSpeechEvent` método.</span><span class="sxs-lookup"><span data-stu-id="22a01-180">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="22a01-181">A continuación, se llama a un motor de representación de voz con modificado <xref:System.Speech.Synthesis.TtsEngine.TextFragment> matriz.</span><span class="sxs-lookup"><span data-stu-id="22a01-181">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public short ParameterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterType As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short ParameterType { short get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterType : int16" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22a01-182">Devuelve el tipo de datos del objeto al que señala <see langword="IntPtr" /> devuelto por el parámetro <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> en el objeto <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="22a01-182">Returns the data type of the object pointed to by the <see langword="IntPtr" /> returned by the <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> parameter on the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="22a01-183">Un valor de <see langword="short" /> correspondiente a un miembro de la enumeración <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> que indica el tipo de datos del objeto al que apunta el <see langword="IntPtr" /> devuelto por el parámetro <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> y que se usa como segundo argumento del constructor del objeto <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> actual.</span><span class="sxs-lookup"><span data-stu-id="22a01-183">A <see langword="short" /> value corresponding to a member of the <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> enumeration and indicating the data type of the object pointed to by the <see langword="IntPtr" /> returned by the <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> parameter and used as the second argument for the constructor of the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22a01-184">Los requisitos en el `System.IntPtr` referencia de la <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> propiedad de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> se determinan de forma exclusiva por los valores de la <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> y <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> propiedades el <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instancia.</span><span class="sxs-lookup"><span data-stu-id="22a01-184">The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span></span>  
  
 <span data-ttu-id="22a01-185">Para obtener información detallada acerca de cómo usar <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, consulte la documentación de <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span><span class="sxs-lookup"><span data-stu-id="22a01-185">For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22a01-186">El ejemplo siguiente es parte de una implementación de síntesis de voz personalizado hereda de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>y el uso de la utilización de <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, y <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="22a01-186">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="22a01-187">La implementación de <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="22a01-187">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="22a01-188">Recibe una matriz de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancias y crea una nueva matriz de <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancias que se pasarán a la `Speak` método en un motor de síntesis subyacente.</span><span class="sxs-lookup"><span data-stu-id="22a01-188">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="22a01-189">Si el <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> por se encuentra el valor de enumeración de la <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> propiedad en el <xref:System.Speech.Synthesis.TtsEngine.FragmentState> devuelto por la <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> propiedad de cada uno <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instancia es <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, la implementación</span><span class="sxs-lookup"><span data-stu-id="22a01-189">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="22a01-190">Americanism a Britishisms se traduce en el texto que se hablará.</span><span class="sxs-lookup"><span data-stu-id="22a01-190">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="22a01-191">Si el <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> propiedad en el <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces proporcionadas con el soporte técnico de implementación el <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> tipo de evento, un <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instancia se utiliza para crear un evento a la unidad que se crea un indicador de progreso de sintetizador.</span><span class="sxs-lookup"><span data-stu-id="22a01-191">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="22a01-192">Los parámetros en <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, incluidos <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> se utilizan para iniciar el evento generado mediante la `LogSpeechEvent` método.</span><span class="sxs-lookup"><span data-stu-id="22a01-192">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="22a01-193">A continuación, se llama a un motor de representación de voz con modificado <xref:System.Speech.Synthesis.TtsEngine.TextFragment> matriz.</span><span class="sxs-lookup"><span data-stu-id="22a01-193">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
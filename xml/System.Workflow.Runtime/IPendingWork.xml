<Type Name="IPendingWork" FullName="System.Workflow.Runtime.IPendingWork">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a519061d31a9ba6f2445be7c69497c588a08f3af" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48721355" /></Metadata><TypeSignature Language="C#" Value="public interface IPendingWork" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPendingWork" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.IPendingWork" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPendingWork" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPendingWork" />
  <TypeSignature Language="F#" Value="type IPendingWork = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="55ccc-101">Proporciona los métodos para participar en un lote de trabajo.</span><span class="sxs-lookup"><span data-stu-id="55ccc-101">Provides methods to participate in a work batch.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="55ccc-102">La interfaz <xref:System.Workflow.Runtime.IPendingWork> se proporciona para los servicios que quieren participar en el mecanismo por lotes del motor en tiempo de ejecución de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="55ccc-102">The <xref:System.Workflow.Runtime.IPendingWork> interface is provided for services that want to participate in the workflow runtime engine batching mechanism.</span></span> <span data-ttu-id="55ccc-103">El mecanismo por lotes es especialmente útil para los servicios que utilizan un almacén duradero.</span><span class="sxs-lookup"><span data-stu-id="55ccc-103">The batching mechanism is especially useful for services that use a durable store.</span></span> <span data-ttu-id="55ccc-104">A menudo es importante en estos casos para mantener la coherencia entre el almacén duradero utilizado por el servicio y el estado interno del motor en tiempo de ejecución de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="55ccc-104">It is often important in these cases to maintain consistency between the durable store used by the service and the internal state of the workflow runtime engine.</span></span>  
  
 <span data-ttu-id="55ccc-105">Si desea que su servicio participe en el procesamiento por lotes de transacción de flujo de trabajo proporcionado por <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, debe implementar los métodos definidos por la interfaz <xref:System.Workflow.Runtime.IPendingWork>.</span><span class="sxs-lookup"><span data-stu-id="55ccc-105">If you want your service to participate in workflow transaction batching provided by the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, you must implement the methods defined by the <xref:System.Workflow.Runtime.IPendingWork> interface.</span></span> <span data-ttu-id="55ccc-106">El motor en tiempo de ejecución de flujo de trabajo llamará al método <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> en su servicio para confirmar el lote.</span><span class="sxs-lookup"><span data-stu-id="55ccc-106">The workflow runtime engine will call the <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method on your service to commit the batch.</span></span>  
  
 <span data-ttu-id="55ccc-107">La clase <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> implementa la interfaz <xref:System.Workflow.Runtime.IPendingWork>.</span><span class="sxs-lookup"><span data-stu-id="55ccc-107">The <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class implements the <xref:System.Workflow.Runtime.IPendingWork> interface.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Transaction transaction, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Transaction ^ transaction, System::Collections::ICollection ^ items);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Transaction * System.Collections.ICollection -&gt; unit" Usage="iPendingWork.Commit (transaction, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="transaction"><span data-ttu-id="55ccc-108">La clase <see cref="T:System.Transactions.Transaction" /> asociada a este trabajo pendiente.</span><span class="sxs-lookup"><span data-stu-id="55ccc-108">The <see cref="T:System.Transactions.Transaction" /> associated with the pending work.</span></span></param>
        <param name="items"><span data-ttu-id="55ccc-109">Los elementos de trabajo que se van a confirmar.</span><span class="sxs-lookup"><span data-stu-id="55ccc-109">The work items to be committed.</span></span></param>
        <summary><span data-ttu-id="55ccc-110">Confirma la lista de elementos de trabajo utilizando el objeto <see cref="T:System.Transactions.Transaction" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="55ccc-110">Commits the list of work items by using the specified <see cref="T:System.Transactions.Transaction" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ccc-111">El motor en tiempo de ejecución de flujo de trabajo llama al método <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> cuando su semántica dicta que se debería confirmar el trabajo pendiente en el lote de trabajo.</span><span class="sxs-lookup"><span data-stu-id="55ccc-111">The workflow runtime engine calls the <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method when its semantics dictate that the pending work in the work batch should be committed.</span></span> <span data-ttu-id="55ccc-112">Cuando llega a un punto de la confirmación, el motor en tiempo de ejecución de flujo de trabajo llama al método <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> en cada objeto <xref:System.Workflow.Runtime.IPendingWork> en su lote de trabajo; el motor en tiempo de ejecución de flujo de trabajo pasa el método <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> a la colección de elementos asociada a ese objeto <xref:System.Workflow.Runtime.IPendingWork>.</span><span class="sxs-lookup"><span data-stu-id="55ccc-112">When it reaches a commit point, the workflow runtime engine calls the <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method on each <xref:System.Workflow.Runtime.IPendingWork> object in its work batch; the workflow runtime engine passes the <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method the collection of items associated with that <xref:System.Workflow.Runtime.IPendingWork> object.</span></span> <span data-ttu-id="55ccc-113">O se ejecuta correctamente todo el trabajo en un lote o ninguno lo hará.</span><span class="sxs-lookup"><span data-stu-id="55ccc-113">Either all of the work in a batch succeeds or none of it succeeds.</span></span> <span data-ttu-id="55ccc-114">Debería iniciar una excepción si no se puede confirmar alguno de los elementos de trabajo pasa al método <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> en su implementación.</span><span class="sxs-lookup"><span data-stu-id="55ccc-114">You should throw an exception if any of the work items passed to the <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method in your implementation cannot be committed.</span></span> <span data-ttu-id="55ccc-115">Dependiendo de su implementación, puede querer realizar alguna reversión en su método <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> si no puede confirmar sus elementos de trabajo.</span><span class="sxs-lookup"><span data-stu-id="55ccc-115">Depending on your implementation, you may want to perform some rollback in your <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> method if it cannot commit its work items.</span></span> <span data-ttu-id="55ccc-116">Si el motor en tiempo de ejecución de flujo de trabajo confirma correctamente todo el trabajo en el lote de trabajo, llama <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> con el parámetro `succeeded` establecido en `true`; de lo contrario, llama <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> con `succeeded` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="55ccc-116">If the workflow runtime engine successfully commits all of the work in the work batch, it calls <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> with the `succeeded` parameter set to `true`; otherwise, it calls <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> with `succeeded` set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete (bool succeeded, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete(bool succeeded, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete (succeeded As Boolean, items As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete(bool succeeded, System::Collections::ICollection ^ items);" />
      <MemberSignature Language="F#" Value="abstract member Complete : bool * System.Collections.ICollection -&gt; unit" Usage="iPendingWork.Complete (succeeded, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="succeeded" Type="System.Boolean" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="succeeded"><span data-ttu-id="55ccc-117">Es <see langword="true" /> si la transacción se realiza correctamente; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="55ccc-117"><see langword="true" /> if the transaction succeeded; otherwise, <see langword="false" />.</span></span></param>
        <param name="items"><span data-ttu-id="55ccc-118">Un <see cref="T:System.Collections.ICollection" /> de elementos de trabajo.</span><span class="sxs-lookup"><span data-stu-id="55ccc-118">An <see cref="T:System.Collections.ICollection" /> of work items.</span></span></param>
        <summary><span data-ttu-id="55ccc-119">Llamado cuando se ha completado la transacción.</span><span class="sxs-lookup"><span data-stu-id="55ccc-119">Called when the transaction has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ccc-120">Si `succeeded` es `true`, la transacción se ejecutó correctamente y se pueden liberar los recursos utilizado por el lote de trabajo.</span><span class="sxs-lookup"><span data-stu-id="55ccc-120">If `succeeded` is `true`, the transaction succeeded and any resources used by the work batch may be released.</span></span> <span data-ttu-id="55ccc-121">Si `succeeded` es `false`, se produjo un error en la transacción.</span><span class="sxs-lookup"><span data-stu-id="55ccc-121">If `succeeded` is `false`, the transaction failed.</span></span> <span data-ttu-id="55ccc-122">Dependiendo de su implementación, puede realizar una reversión adecuada sobre el trabajo en el lote de trabajo cuando se produzca un error en la transacción.</span><span class="sxs-lookup"><span data-stu-id="55ccc-122">Depending on your implementation, you can perform any appropriate roll back on the work in the work batch when the transaction fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustCommit">
      <MemberSignature Language="C#" Value="public bool MustCommit (System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MustCommit(class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function MustCommit (items As ICollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MustCommit(System::Collections::ICollection ^ items);" />
      <MemberSignature Language="F#" Value="abstract member MustCommit : System.Collections.ICollection -&gt; bool" Usage="iPendingWork.MustCommit items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="55ccc-123">Un <see cref="T:System.Collections.ICollection" /> de elementos de trabajo.</span><span class="sxs-lookup"><span data-stu-id="55ccc-123">An <see cref="T:System.Collections.ICollection" /> of work items.</span></span></param>
        <summary><span data-ttu-id="55ccc-124">Permite que los elementos en el lote de trabajo afirmen cuando deben confirmar inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="55ccc-124">Allows the items in the work batch to assert whether they must commit immediately.</span></span></summary>
        <returns><span data-ttu-id="55ccc-125"><see langword="true" /> si se debe confirmar cualquier elemento de la colección inmediatamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="55ccc-125"><see langword="true" /> if any item in the collection must be committed immediately; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55ccc-126">Si <xref:System.Workflow.Runtime.IPendingWork.MustCommit%2A> devuelve `false`, el trabajo se puede posponer a un punto posterior de la confirmación.</span><span class="sxs-lookup"><span data-stu-id="55ccc-126">If <xref:System.Workflow.Runtime.IPendingWork.MustCommit%2A> returns `false`, the work can be postponed to a future commit point.</span></span> <span data-ttu-id="55ccc-127">Si se debe confirmar cualquiera de los elementos, a continuación, devuelva `true` y todos los elementos se confirmarán en el punto actual de la confirmación.</span><span class="sxs-lookup"><span data-stu-id="55ccc-127">If any of the items must be committed, then return `true` and all items will be committed at the current commit point.</span></span> <span data-ttu-id="55ccc-128">Para obtener una discusión de posibles puntos de la confirmación, vea la clase <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>.</span><span class="sxs-lookup"><span data-stu-id="55ccc-128">For a discussion about possible commit points, see the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
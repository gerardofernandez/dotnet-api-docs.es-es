<Type Name="WorkflowInstance" FullName="System.Workflow.Runtime.WorkflowInstance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f6722f462218341de377b996c28536f8dae9901" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52222300" /></Metadata><TypeSignature Language="C#" Value="public sealed class WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowInstance" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowInstance sealed" />
  <TypeSignature Language="F#" Value="type WorkflowInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8af62-101">Representa una instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-101">Represents a workflow instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="8af62-102">La clase <xref:System.Workflow.Runtime.WorkflowInstance> expone los métodos y propiedades que se pueden utilizar para controlar la ejecución de una instancia de flujo de trabajo; es esencialmente un proxy a la instancia de flujo de trabajo real utilizada por el motor en tiempo de ejecución de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-102">The <xref:System.Workflow.Runtime.WorkflowInstance> class exposes methods and properties that can be used to control the execution of a workflow instance; it is essentially a proxy to the actual workflow instance used by the workflow runtime engine.</span></span> <span data-ttu-id="8af62-103">Un host o un servicio puede indicar al motor en tiempo de ejecución de flujo de trabajo que realice las acciones en una instancia de flujo de trabajo llamando a los métodos adecuados contenidos en la clase <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="8af62-103">A host or a service can instruct the workflow runtime engine to perform actions on a workflow instance by calling the appropriate methods that are contained in the <xref:System.Workflow.Runtime.WorkflowInstance> class.</span></span>  <span data-ttu-id="8af62-104">Si la acción solicitada no es válida, por ejemplo, si el host llama <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> en una instancia de flujo de trabajo que ya se ha completado, el motor en tiempo de ejecución de flujo de trabajo generará una excepción adecuada.</span><span class="sxs-lookup"><span data-stu-id="8af62-104">If the requested action is not valid, for example, if the host calls <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> on a workflow instance that has already completed, the workflow runtime engine will raise an appropriate exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8af62-105">Si una instancia de flujo de trabajo no responde porque no se devuelve una llamada en la aplicación host, la única manera de recuperar la instancia es reiniciar el tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="8af62-105">If a workflow instance becomes unresponsive because a call on the host application does not return, the only way to recover the instance is to restart the runtime.</span></span> <span data-ttu-id="8af62-106">Sin embargo, si la instancia se ha descargado de forma forzada, o se ha interrumpido o suspendido, se puede continuar llamando al método <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8af62-106">However, if the instance has been forcibly unloaded, aborted, or suspended, it can be continued by calling the <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8af62-107">El ejemplo de código siguiente muestra cómo puede crear e iniciar <xref:System.Workflow.Runtime.WorkflowInstance> en un host del flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-107">The following code example demonstrates how you can create and start a <xref:System.Workflow.Runtime.WorkflowInstance> in a workflow host.</span></span> <span data-ttu-id="8af62-108">El código crea una instancia de <xref:System.Workflow.Runtime.WorkflowRuntime>, agrega los servicios al tiempo de ejecución y, a continuación, muestra la manera recomendada de crear un objeto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="8af62-108">The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="8af62-109">El código inicializa <xref:System.Workflow.Runtime.WorkflowInstance> llamando al método <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> y pasándole el tipo previamente creado.</span><span class="sxs-lookup"><span data-stu-id="8af62-109">The code initializes <xref:System.Workflow.Runtime.WorkflowInstance> by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it.</span></span> <span data-ttu-id="8af62-110"><xref:System.Workflow.Runtime.WorkflowInstance> se inicia con la llamada al método <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A>.</span><span class="sxs-lookup"><span data-stu-id="8af62-110">The <xref:System.Workflow.Runtime.WorkflowInstance> is started with the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method call.</span></span>  
  
 <span data-ttu-id="8af62-111">Este ejemplo de código forma parte de la muestra de SDK Cancelar un Flujo de trabajo, del archivo Program.cs.</span><span class="sxs-lookup"><span data-stu-id="8af62-111">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="8af62-112">Para obtener más información, consulte [cancelar un flujo de trabajo](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="8af62-112">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8af62-113">Este tipo es seguro para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="8af62-113">This type is thread safe.</span></span></threadsafe>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)"><span data-ttu-id="8af62-114">Cancelar un flujo de trabajo</span><span class="sxs-lookup"><span data-stu-id="8af62-114">Canceling a Workflow</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="workflowInstance.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8af62-115">Anula la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-115">Aborts the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-116">La instancia de flujo de trabajo se anula de forma sincrónica; es decir, el método vuelve después de que la instancia de flujo de trabajo haya sido anulada.</span><span class="sxs-lookup"><span data-stu-id="8af62-116">The workflow instance is aborted in a synchronous manner; that is, the method returns after the workflow instance has been aborted.</span></span> <span data-ttu-id="8af62-117">El motor en tiempo de ejecución de flujo de trabajo invalida la instancia de flujo de trabajo en la memoria y borra <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span><span class="sxs-lookup"><span data-stu-id="8af62-117">The workflow runtime engine invalidates the workflow instance in memory and clears the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span> <span data-ttu-id="8af62-118">Si su instancia de flujo de trabajo utilizó un servicio de persistencia, no se tendrá en cuenta todo el trabajo realizado desde el último punto de persistencia.</span><span class="sxs-lookup"><span data-stu-id="8af62-118">If a persistence service was used by your workflow instance, all work performed since the last persistence point is thrown away.</span></span> <span data-ttu-id="8af62-119">Después de anular la instancia de flujo de trabajo, el motor en tiempo de ejecución de flujo de trabajo genera el evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted>.</span><span class="sxs-lookup"><span data-stu-id="8af62-119">After it aborts the workflow instance, the workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> event.</span></span> <span data-ttu-id="8af62-120">Puede llamar <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> para recargar la instancia de flujo de trabajo e empezar desde su último punto de persistencia.</span><span class="sxs-lookup"><span data-stu-id="8af62-120">You can call <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> to reload the workflow instance and start from its last persistence point.</span></span>  
  
 <span data-ttu-id="8af62-121">`Abort` es diferente de <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> en que `Abort` simplemente borra la instancia de flujo de trabajo en memoria y se puede reiniciar desde el último punto de persistencia, Finalizar borra la instancia de flujo de trabajo en memoria e informa al servicio de persistencia de que la instancia se ha borrado de la memoria.</span><span class="sxs-lookup"><span data-stu-id="8af62-121">`Abort` is different from <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> in that while `Abort` simply clears the in-memory workflow instance and can be restarted from the last persistence point, Terminate clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</span></span> <span data-ttu-id="8af62-122">Para <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, esto significa que toda la información de estado para esa instancia de flujo de trabajo se elimina de la base de datos cuando se termina.</span><span class="sxs-lookup"><span data-stu-id="8af62-122">For the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, this means that all state information for that workflow instance is deleted from the database upon termination.</span></span> <span data-ttu-id="8af62-123">No podrá recargar la instancia de flujo de trabajo de un punto de persistencia previamente almacenado.</span><span class="sxs-lookup"><span data-stu-id="8af62-123">You will not be able to reload the workflow instance from a previously stored persistence point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8af62-124">El ejemplo siguiente muestra cómo se llama a Anular en una instancia de flujo de trabajo de tipo Workflow1.</span><span class="sxs-lookup"><span data-stu-id="8af62-124">The following example demonstrates calling Abort on a workflow instance of type Workflow1.</span></span>  
  
 [!code-csharp[WF_Samples#13](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#13)]
 [!code-vb[WF_Samples#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8af62-125">El motor en tiempo de ejecución de flujo de trabajo no está en ejecución.</span><span class="sxs-lookup"><span data-stu-id="8af62-125">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyWorkflowChanges">
      <MemberSignature Language="C#" Value="public void ApplyWorkflowChanges (System.Workflow.ComponentModel.WorkflowChanges workflowChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyWorkflowChanges(class System.Workflow.ComponentModel.WorkflowChanges workflowChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyWorkflowChanges(System::Workflow::ComponentModel::WorkflowChanges ^ workflowChanges);" />
      <MemberSignature Language="F#" Value="member this.ApplyWorkflowChanges : System.Workflow.ComponentModel.WorkflowChanges -&gt; unit" Usage="workflowInstance.ApplyWorkflowChanges workflowChanges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowChanges" Type="System.Workflow.ComponentModel.WorkflowChanges" />
      </Parameters>
      <Docs>
        <param name="workflowChanges"><span data-ttu-id="8af62-126"><see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> que especifica las actualizaciones dinámicas para la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-126">A <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> specifying dynamic updates for the workflow instance.</span></span></param>
        <summary><span data-ttu-id="8af62-127">Aplica los cambios a la instancia de flujo de trabajo especificada por el objeto <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" />.</span><span class="sxs-lookup"><span data-stu-id="8af62-127">Applies changes to the workflow instance specified by the <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-128">Si aún no se ha suspendido la instancia de flujo de trabajo, el motor en tiempo de ejecución de flujo de trabajo suspende temporalmente la instancia antes de aplicar los cambios.</span><span class="sxs-lookup"><span data-stu-id="8af62-128">If the workflow instance is not already suspended, the workflow runtime engine temporarily suspends the instance before applying the changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8af62-129">El ejemplo siguiente muestra cómo se llama a ApplyWorkflowChanges a un objeto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="8af62-129">The following example demonstrates calling ApplyWorkflowChanges to a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  <span data-ttu-id="8af62-130">Este ejemplo es de la muestra de SDK Máquina de estados de la Clasificación, del archivo Mainform.cs.</span><span class="sxs-lookup"><span data-stu-id="8af62-130">This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</span></span>  <span data-ttu-id="8af62-131">Para obtener más información, consulte el [ejemplo de equipo de estado de ordenación](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="8af62-131">For more information, see the [Ordering State Machine Sample](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[WF_Samples#89](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#89)]
 [!code-vb[WF_Samples#89](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#89)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8af62-132">El motor en tiempo de ejecución de flujo de trabajo no está en ejecución.</span><span class="sxs-lookup"><span data-stu-id="8af62-132">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnqueueItem">
      <MemberSignature Language="C#" Value="public void EnqueueItem (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnqueueItem(class System.IComparable queueName, object item, class System.Workflow.Runtime.IPendingWork pendingWork, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnqueueItem (queueName As IComparable, item As Object, pendingWork As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnqueueItem(IComparable ^ queueName, System::Object ^ item, System::Workflow::Runtime::IPendingWork ^ pendingWork, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.EnqueueItem : IComparable * obj * System.Workflow.Runtime.IPendingWork * obj -&gt; unit" Usage="workflowInstance.EnqueueItem (queueName, item, pendingWork, workItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="pendingWork" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queueName"><span data-ttu-id="8af62-133">Nombre del objeto <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="8af62-133">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></param>
        <param name="item"><span data-ttu-id="8af62-134">Objeto que se va a poner en cola.</span><span class="sxs-lookup"><span data-stu-id="8af62-134">The object to enqueue.</span></span></param>
        <param name="pendingWork"><span data-ttu-id="8af62-135"><see cref="T:System.Workflow.Runtime.IPendingWork" />que permite notificar el remitente cuando se entrega el elemento <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="8af62-135">An <see cref="T:System.Workflow.Runtime.IPendingWork" /> that allows the sender to be notified when <paramref name="item" /> is delivered.</span></span></param>
        <param name="workItem"><span data-ttu-id="8af62-136">Objeto que se pasará a los métodos <see cref="T:System.Workflow.Runtime.IPendingWork" />.</span><span class="sxs-lookup"><span data-stu-id="8af62-136">An object to be passed to the <see cref="T:System.Workflow.Runtime.IPendingWork" /> methods.</span></span></param>
        <summary><span data-ttu-id="8af62-137">Envía un mensaje a la cola del flujo de trabajo especificada sincrónicamente.</span><span class="sxs-lookup"><span data-stu-id="8af62-137">Posts a message to the specified workflow queue synchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-138">Envía el `item` al <xref:System.Workflow.Runtime.WorkflowQueue> especificado.</span><span class="sxs-lookup"><span data-stu-id="8af62-138">Sends the `item` to the specified <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="8af62-139">Si quiere recibir una notificación cuando se entregue el mensaje, puede implementar <xref:System.Workflow.Runtime.IPendingWork> en su servicio y pasar `workItem` y un objeto <xref:System.Workflow.Runtime.IPendingWork> a <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="8af62-139">If you want to be notified when the message is delivered, you can implement <xref:System.Workflow.Runtime.IPendingWork> in your service and pass a `workItem` and an <xref:System.Workflow.Runtime.IPendingWork> object to <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="8af62-140">Si no quiere recibir una notificación, puede pasar una referencia nula (`Nothing` en Visual Basic) para `pendingWork` y `workItem`.</span><span class="sxs-lookup"><span data-stu-id="8af62-140">If you do not want such notification, you can pass a null reference (`Nothing` in Visual Basic) for `pendingWork` and `workItem`.</span></span>  
  
 <span data-ttu-id="8af62-141">Al usar este método con un flujo de trabajo del equipo de estado, puede obtener una excepción con el mensaje "La cola '{0}' no está habilitada".</span><span class="sxs-lookup"><span data-stu-id="8af62-141">When using this method with a state machine workflow, you might get an exception with the message "Queue '{0}' is not enabled."</span></span> <span data-ttu-id="8af62-142">Esto sucede cuando el estado actual del equipo de estado no sabe cómo administrar un evento concreto.</span><span class="sxs-lookup"><span data-stu-id="8af62-142">This happens when the current state of the state machine does not know how to handle a specific event.</span></span> <span data-ttu-id="8af62-143">Por ejemplo, cuando un estado distinto del estado actual contiene la <xref:System.Workflow.Activities.EventDrivenActivity> que contiene la <xref:System.Workflow.Activities.HandleExternalEventActivity> que está representada por la cola' {0}.'</span><span class="sxs-lookup"><span data-stu-id="8af62-143">For example, when some state other than the current state contains the <xref:System.Workflow.Activities.EventDrivenActivity> that contains the <xref:System.Workflow.Activities.HandleExternalEventActivity> that is represented by the queue '{0}'.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8af62-144">No se garantiza que la instancia de flujo de trabajo envíe los mensajes en el orden en que se enviaron.</span><span class="sxs-lookup"><span data-stu-id="8af62-144">Messages are not guaranteed to be received by the workflow instance in the order that they were sent.</span></span> <span data-ttu-id="8af62-145">Por ejemplo, si al recibir un mensaje en una cola existente (Cola A) un flujo de trabajo crea otra cola (Cola B) que, a continuación, escucha otros mensaje enviados después del primer mensaje, es posible que el segundo mensaje llegue primero, y que no se reciba debido a que todavía no se ha creado su cola.</span><span class="sxs-lookup"><span data-stu-id="8af62-145">For example, if receiving a message in an existing queue (Queue A) causes a workflow to create another queue (Queue B), which then listens for another message sent after the first message, it is possible that the second message will arrive first, and will not be received due to its queue not being created yet.</span></span> <span data-ttu-id="8af62-146">Para evitar este problema, no se debería enviar el segundo mensaje hasta que se compruebe la presencia de la segunda cola (utilizar <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.)</span><span class="sxs-lookup"><span data-stu-id="8af62-146">To prevent this issue, the second message should not be sent until the presence of the second queue is verified (using <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8af62-147">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="8af62-147">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="8af62-148">Cuando se produce el evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>, se llama al método `OnWorkflowIdled` definido en este ejemplo.</span><span class="sxs-lookup"><span data-stu-id="8af62-148">When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called.</span></span> <span data-ttu-id="8af62-149">Determina qué flujo de trabajo está inactivo utilizando la propiedad <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> y, a continuación, obtiene una colección de elementos en cola para la instancia de flujo de trabajo llamando al método <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.</span><span class="sxs-lookup"><span data-stu-id="8af62-149">It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method.</span></span> <span data-ttu-id="8af62-150">El código itera sobre la colección para determinar qué actividad está esperando para el evento que ralentizó el flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-150">The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</span></span> <span data-ttu-id="8af62-151">Envía a continuación una excepción a la cola del flujo de trabajo utilizando el método <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> junto con el nombre del elemento de cola de evento.</span><span class="sxs-lookup"><span data-stu-id="8af62-151">It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.</span></span>  
  
 <span data-ttu-id="8af62-152">Este ejemplo de código forma parte de la muestra de SDK Cancelar un Flujo de trabajo, del archivo Program.cs.</span><span class="sxs-lookup"><span data-stu-id="8af62-152">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="8af62-153">Para obtener más información, consulte [cancelar un flujo de trabajo](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="8af62-153">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8af62-154"><paramref name="queueName" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8af62-154"><paramref name="queueName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8af62-155">El motor en tiempo de ejecución de flujo de trabajo no está en ejecución.</span><span class="sxs-lookup"><span data-stu-id="8af62-155">The workflow runtime engine is not running.</span></span>  
  
<span data-ttu-id="8af62-156">O bien</span><span class="sxs-lookup"><span data-stu-id="8af62-156">-or-</span></span> 
<span data-ttu-id="8af62-157"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> especificado por <paramref name="queueName" /> no existe.</span><span class="sxs-lookup"><span data-stu-id="8af62-157">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> does not exist.</span></span>  
  
<span data-ttu-id="8af62-158">O bien</span><span class="sxs-lookup"><span data-stu-id="8af62-158">-or-</span></span> 
<span data-ttu-id="8af62-159"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> especificado por <paramref name="queueName" />no está habilitado.</span><span class="sxs-lookup"><span data-stu-id="8af62-159">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> is not enabled.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)"><span data-ttu-id="8af62-160">Cancelar un flujo de trabajo</span><span class="sxs-lookup"><span data-stu-id="8af62-160">Canceling a Workflow</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnqueueItemOnIdle">
      <MemberSignature Language="C#" Value="public void EnqueueItemOnIdle (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnqueueItemOnIdle(class System.IComparable queueName, object item, class System.Workflow.Runtime.IPendingWork pendingWork, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnqueueItemOnIdle (queueName As IComparable, item As Object, pendingWork As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnqueueItemOnIdle(IComparable ^ queueName, System::Object ^ item, System::Workflow::Runtime::IPendingWork ^ pendingWork, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.EnqueueItemOnIdle : IComparable * obj * System.Workflow.Runtime.IPendingWork * obj -&gt; unit" Usage="workflowInstance.EnqueueItemOnIdle (queueName, item, pendingWork, workItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="pendingWork" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queueName"><span data-ttu-id="8af62-161">Nombre del objeto <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="8af62-161">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></param>
        <param name="item"><span data-ttu-id="8af62-162">Objeto que se va a poner en cola.</span><span class="sxs-lookup"><span data-stu-id="8af62-162">The object to enqueue.</span></span></param>
        <param name="pendingWork"><span data-ttu-id="8af62-163"><see cref="T:System.Workflow.Runtime.IPendingWork" />que permite notificar el remitente cuando se entrega el elemento <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="8af62-163">An <see cref="T:System.Workflow.Runtime.IPendingWork" /> that allows the sender to be notified when <paramref name="item" /> is delivered.</span></span></param>
        <param name="workItem"><span data-ttu-id="8af62-164">Objeto que se pasará a los métodos <see cref="T:System.Workflow.Runtime.IPendingWork" />.</span><span class="sxs-lookup"><span data-stu-id="8af62-164">An object to be passed to the <see cref="T:System.Workflow.Runtime.IPendingWork" /> methods.</span></span></param>
        <summary><span data-ttu-id="8af62-165">Envía un mensaje a la cola del flujo de trabajo especificada cuando el flujo de trabajo está inactivo.</span><span class="sxs-lookup"><span data-stu-id="8af62-165">Posts a message to the specified workflow queue when the workflow is idle.</span></span> <span data-ttu-id="8af62-166"><see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /> espera hasta que el flujo de trabajo alcanza un punto inactivo y se pone a la cola después de comprobar que el programador del flujo de trabajo está inactivo (es decir, no se ejecuta ninguna operación activa).</span><span class="sxs-lookup"><span data-stu-id="8af62-166"><see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /> waits until the workflow reaches an idle point and enqueues after verifying that the workflow scheduler is idle (that is, no active operation is being executed).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-167">Espera a que la instancia de flujo de trabajo se vuelva inactiva y, a continuación, envía `item` al <xref:System.Workflow.Runtime.WorkflowQueue> especificado.</span><span class="sxs-lookup"><span data-stu-id="8af62-167">Waits for the workflow instance to become idle and then sends the `item` to the specified <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="8af62-168">Si usted llama <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A> mientras se suspende la instancia de flujo de trabajo, el motor en tiempo de ejecución de flujo de trabajo iniciará <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8af62-168">If you call <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A> while the workflow instance is suspended, the workflow runtime engine will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="8af62-169">Si quiere recibir una notificación cuando se entregue el mensaje, puede implementar <xref:System.Workflow.Runtime.IPendingWork> en su servicio y pasar `workItem` y un objeto <xref:System.Workflow.Runtime.IPendingWork> a <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="8af62-169">If you want to be notified when the message is delivered, you can implement <xref:System.Workflow.Runtime.IPendingWork> in your service and pass a `workItem` and an <xref:System.Workflow.Runtime.IPendingWork> object to <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="8af62-170">Si no quiere recibir una notificación, puede pasar una referencia nula (`Nothing` en Visual Basic) para `pendingWork` y `workItem`.</span><span class="sxs-lookup"><span data-stu-id="8af62-170">If you do not want such notification, you can pass a null reference (`Nothing` in Visual Basic) for `pendingWork` and `workItem`.</span></span>  
  
 <span data-ttu-id="8af62-171">Cuando utilice este método con un flujo de trabajo de equipo de estado, podría obtener una excepción que contiene el mensaje "Cola del mensaje' {0}' no está habilitado."</span><span class="sxs-lookup"><span data-stu-id="8af62-171">When you are using this method with a state machine workflow, you might get an exception that contains the message "Queue '{0}' is not enabled."</span></span> <span data-ttu-id="8af62-172">Esto sucede cuando el estado actual del equipo de estado no sabe cómo administrar un evento específico.</span><span class="sxs-lookup"><span data-stu-id="8af62-172">This occurs when the current state of the state machine does not know how to handle a specific event.</span></span> <span data-ttu-id="8af62-173">Por ejemplo, cuando un estado distinto del estado actual contiene la <xref:System.Workflow.Activities.EventDrivenActivity> que contiene la <xref:System.Workflow.Activities.HandleExternalEventActivity> que está representada por la cola' {0}.'</span><span class="sxs-lookup"><span data-stu-id="8af62-173">For example, when some state other than the current state contains the <xref:System.Workflow.Activities.EventDrivenActivity> that contains the <xref:System.Workflow.Activities.HandleExternalEventActivity> that is represented by the queue '{0}'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8af62-174">El ejemplo siguiente muestra cómo enviar información a una instancia de flujo de trabajo mediante el método `EnqueueItemOnIdle`.</span><span class="sxs-lookup"><span data-stu-id="8af62-174">The following example demonstrates sending information to a workflow instance using the `EnqueueItemOnIdle` method.</span></span> <span data-ttu-id="8af62-175">Primero, un objeto WorkflowInstance se crea y se inicia; después, se creará un objeto que implementa la interfaz <xref:System.Workflow.Runtime.IPendingWork>.</span><span class="sxs-lookup"><span data-stu-id="8af62-175">First, a WorkflowInstance object is created and started; next, an object that implements the <xref:System.Workflow.Runtime.IPendingWork> interface is created.</span></span> <span data-ttu-id="8af62-176">`EnqueueItemOnIdle` a continuación, se llama, pasando los valores de cadena para el nombre de cola, el elemento en cola y el elemento de trabajo que se pasarán a los métodos del objeto pendingWork.</span><span class="sxs-lookup"><span data-stu-id="8af62-176">`EnqueueItemOnIdle` is then called, passing in string values for the queue name, the enqueued item, and the work item to be passed to the methods of the pendingWork object.</span></span>  
  
 [!code-csharp[WF_Samples#12](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#12)]
 [!code-vb[WF_Samples#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8af62-177"><paramref name="queueName" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8af62-177"><paramref name="queueName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8af62-178">El motor en tiempo de ejecución de flujo de trabajo no está en ejecución.</span><span class="sxs-lookup"><span data-stu-id="8af62-178">The workflow runtime engine is not running.</span></span>  
  
<span data-ttu-id="8af62-179">O bien</span><span class="sxs-lookup"><span data-stu-id="8af62-179">-or-</span></span> 
<span data-ttu-id="8af62-180">Se suspende la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-180">The workflow instance is suspended.</span></span>  
  
<span data-ttu-id="8af62-181">O bien</span><span class="sxs-lookup"><span data-stu-id="8af62-181">-or-</span></span> 
<span data-ttu-id="8af62-182"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> especificado por <paramref name="queueName" /> no existe.</span><span class="sxs-lookup"><span data-stu-id="8af62-182">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> does not exist.</span></span>  
  
<span data-ttu-id="8af62-183">O bien</span><span class="sxs-lookup"><span data-stu-id="8af62-183">-or-</span></span> 
<span data-ttu-id="8af62-184"><see cref="T:System.Workflow.Runtime.WorkflowQueue" /> especificado por <paramref name="queueName" />no está habilitado.</span><span class="sxs-lookup"><span data-stu-id="8af62-184">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> is not enabled.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="workflowInstance.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8af62-185">Objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="8af62-185">The object to compare.</span></span></param>
        <summary><span data-ttu-id="8af62-186">Devuelve un valor que indica si el objeto especificado es igual a <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="8af62-186">Returns a value that indicates whether the specified object is equal to the <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span></span></summary>
        <returns><span data-ttu-id="8af62-187">Es <see langword="true" /> si el objeto especificado es igual a <see cref="T:System.Workflow.Runtime.WorkflowInstance" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8af62-187"><see langword="true" /> if the specified object is equal to this <see cref="T:System.Workflow.Runtime.WorkflowInstance" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-188">El objeto debe ser una instancia de la clase <xref:System.Workflow.Runtime.WorkflowInstance> y tener el mismo <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> que <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="8af62-188">The object must be an instance of the <xref:System.Workflow.Runtime.WorkflowInstance> class and have the same <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> as this <xref:System.Workflow.Runtime.WorkflowInstance>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="workflowInstance.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8af62-189">Devuelve el código hash de esta instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-189">Returns the hash code for this workflow instance.</span></span></summary>
        <returns><span data-ttu-id="8af62-190">Código hash de esta <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="8af62-190">The hash code for this <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-191"><xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A> devuelve un código hash basado en el valor de <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</span><span class="sxs-lookup"><span data-stu-id="8af62-191"><xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A> returns a hash code based on the value of <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowDefinition">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity GetWorkflowDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Activity GetWorkflowDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowDefinition () As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Activity ^ GetWorkflowDefinition();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowDefinition : unit -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowInstance.GetWorkflowDefinition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8af62-192">Recupera la actividad raíz para esta instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-192">Retrieves the root activity for this workflow instance.</span></span></summary>
        <returns><span data-ttu-id="8af62-193">Un objeto <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="8af62-193">An <see cref="T:System.Workflow.ComponentModel.Activity" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-194">Puede utilizar la actividad raíz para navegar la jerarquía de la actividad del flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-194">You can use the root activity to navigate the activity hierarchy of the workflow.</span></span>  
  
 <span data-ttu-id="8af62-195">Este método no es seguro para subprocesos por lo que el host debería sincronizar sus llamadas a este método.</span><span class="sxs-lookup"><span data-stu-id="8af62-195">This method is not thread safe, so the host should synchronize its calls to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8af62-196">El ejemplo siguiente muestra cómo recuperar la definición de flujo de trabajo de una instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-196">The following example demonstrates retrieving the workflow definition from a workflow instance.</span></span>  <span data-ttu-id="8af62-197">Este ejemplo es de la muestra de SDK Máquina de estados de la Clasificación, del archivo Mainform.cs.</span><span class="sxs-lookup"><span data-stu-id="8af62-197">This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</span></span>  <span data-ttu-id="8af62-198">Para obtener más información, consulte el [ejemplo de equipo de estado de ordenación](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="8af62-198">For more information, see the [Ordering State Machine Sample](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[WF_Samples#86](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#86)]
 [!code-vb[WF_Samples#86](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#86)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowNextTimerExpiration">
      <MemberSignature Language="C#" Value="public DateTime GetWorkflowNextTimerExpiration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetWorkflowNextTimerExpiration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowNextTimerExpiration () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetWorkflowNextTimerExpiration();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowNextTimerExpiration : unit -&gt; DateTime" Usage="workflowInstance.GetWorkflowNextTimerExpiration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8af62-199">Devuelve el punto siguiente en el momento en que se programa <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> para recibir un mensaje del temporizador.</span><span class="sxs-lookup"><span data-stu-id="8af62-199">Returns the next point in time that this <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> is scheduled to be delivered a timer message.</span></span></summary>
        <returns><span data-ttu-id="8af62-200">Un valor DateTime que representa la hora <see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /> siguiente en que se entregará un mensaje del temporizador a <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="8af62-200">A DateTime value that represents the next <see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /> time this <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> will be delivered a timer message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8af62-201">El ejemplo siguiente muestra cómo utilizar el método <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A> para determinar si se ponen en cola más mensajes del temporizador de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-201">The following example demonstrates using the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A> method to determine if more workflow timer messages are enqueued.</span></span> <span data-ttu-id="8af62-202">Este ejemplo es de la muestra de SDK de WorkflowThreading del archivo Program.cs.</span><span class="sxs-lookup"><span data-stu-id="8af62-202">This example is from the WorkflowThreading SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="8af62-203">Para obtener más información, consulte [ejemplo de subprocesamiento de flujo de trabajo](https://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9).</span><span class="sxs-lookup"><span data-stu-id="8af62-203">For more information, see [Workflow Threading Sample](https://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9).</span></span>  
  
 [!code-csharp[WF_Samples#284](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#284)]
 [!code-vb[WF_Samples#284](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#284)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Workflow.Runtime.TimerEventSubscription" />
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowQueueData">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt; GetWorkflowQueueData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.Runtime.WorkflowQueueInfo&gt; GetWorkflowQueueData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowQueueData () As ReadOnlyCollection(Of WorkflowQueueInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::Runtime::WorkflowQueueInfo ^&gt; ^ GetWorkflowQueueData();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowQueueData : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt;" Usage="workflowInstance.GetWorkflowQueueData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8af62-204">Obtiene una colección de los objetos <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> que contiene los elementos pendientes y las actividades subscritas para las colas del flujo de trabajo asociadas a esta instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-204">Gets a collection of <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> objects that contains the pending items and subscribed activities for the workflow queues associated with this workflow instance.</span></span></summary>
        <returns><span data-ttu-id="8af62-205">Colección <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de objetos <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /></span><span class="sxs-lookup"><span data-stu-id="8af62-205">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-206"><xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> devuelve una colección de objetos <xref:System.Workflow.Runtime.WorkflowQueueInfo>, cada uno de los cuales contiene información sobre el estado de una de las colas de flujo de trabajo asociadas a esta instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-206"><xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> returns a collection of <xref:System.Workflow.Runtime.WorkflowQueueInfo> objects, each of which contains information about the state of one of the workflow queues associated with this workflow instance.</span></span> <span data-ttu-id="8af62-207"><xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType> contiene los elementos pendientes de <xref:System.Workflow.Runtime.WorkflowQueue> y <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> contiene una lista de las actividades que se suscriben para la entrega del elemento en <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="8af62-207"><xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType> contains the pending items for a <xref:System.Workflow.Runtime.WorkflowQueue> and <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> contains a list of the activities that are subscribed for item delivery on a <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8af62-208">El ejemplo de código siguiente muestra cómo puede utilizar el método <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> para obtener información sobre el estado de todas las colas de flujo de trabajo asociadas a un objeto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="8af62-208">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method to obtain information about the state of all workflow queues associated with a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="8af62-209">Cuando se produce el evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>, se llama al método `OnWorkflowIdled` definido en este ejemplo.</span><span class="sxs-lookup"><span data-stu-id="8af62-209">When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called.</span></span> <span data-ttu-id="8af62-210">Determina qué flujo de trabajo está inactivo utilizando la propiedad <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> y, a continuación, obtiene una colección de elementos en cola para la instancia de flujo de trabajo llamando al método <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.</span><span class="sxs-lookup"><span data-stu-id="8af62-210">It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method.</span></span> <span data-ttu-id="8af62-211">El código itera sobre la colección para determinar qué actividad está esperando para el evento que ralentizó el flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-211">The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</span></span> <span data-ttu-id="8af62-212">Envía a continuación una excepción a la cola del flujo de trabajo utilizando el método <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> junto con el nombre del elemento de cola de evento.</span><span class="sxs-lookup"><span data-stu-id="8af62-212">It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.</span></span>  
  
 <span data-ttu-id="8af62-213">Este ejemplo de código forma parte de la muestra de SDK Cancelar un Flujo de trabajo, del archivo Program.cs.</span><span class="sxs-lookup"><span data-stu-id="8af62-213">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="8af62-214">Para obtener más información, consulte [cancelar un flujo de trabajo](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="8af62-214">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8af62-215">El motor en tiempo de ejecución de flujo de trabajo no está en ejecución.</span><span class="sxs-lookup"><span data-stu-id="8af62-215">The workflow runtime engine is not running.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)"><span data-ttu-id="8af62-216">Cancelar un flujo de trabajo</span><span class="sxs-lookup"><span data-stu-id="8af62-216">Canceling a Workflow</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public Guid InstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowInstance.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid InstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : Guid" Usage="System.Workflow.Runtime.WorkflowInstance.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8af62-217">Obtiene el identificador único de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-217">Gets the unique identifier for the workflow instance.</span></span></summary>
        <value><span data-ttu-id="8af62-218"><see cref="T:System.Guid" /> de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-218">The <see cref="T:System.Guid" /> of the workflow instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-219">Puede utilizar <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> para hacer referencia a la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-219">You can use <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> to reference the workflow instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8af62-220">El ejemplo de código siguiente muestra cómo puede utilizar la propiedad <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> para obtener información sobre un objeto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="8af62-220">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property to obtain information about a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="8af62-221">El primer fragmento de código crea una variable <xref:System.Workflow.Runtime.WorkflowInstance> denominada `instanceId`.</span><span class="sxs-lookup"><span data-stu-id="8af62-221">The first code snippet creates a <xref:System.Workflow.Runtime.WorkflowInstance> variable named `instanceId`.</span></span>  
  
 [!code-csharp[WF_Samples#210](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#210)]
 [!code-vb[WF_Samples#210](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#210)]  
  
 <span data-ttu-id="8af62-222">El segundo fragmento de código utiliza la propiedad <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> como el primer objeto en una llamada de constructor `OrderEventArgs` cuando se llama al método `CallBackForApproval`.</span><span class="sxs-lookup"><span data-stu-id="8af62-222">The second snippet uses the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property as the first object in an `OrderEventArgs` constructor call when the `CallBackForApproval` method is called.</span></span>  
  
 <span data-ttu-id="8af62-223">Este ejemplo de código forma la parte de la muestra de SDK Escuche, del archivo OrderServiceImple.cs.</span><span class="sxs-lookup"><span data-stu-id="8af62-223">This code example is part of the Listen SDK Sample from the OrderServiceImple.cs file.</span></span> <span data-ttu-id="8af62-224">Para obtener más información, consulte [ejemplo escuchar](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="8af62-224">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#211](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#211)]
 [!code-vb[WF_Samples#211](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#211)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)"><span data-ttu-id="8af62-225">Ejemplo de escucha</span><span class="sxs-lookup"><span data-stu-id="8af62-225">Listen Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberSignature Language="F#" Value="member this.Load : unit -&gt; unit" Usage="workflowInstance.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8af62-226">Carga una instancia de flujo de trabajo previamente descargada.</span><span class="sxs-lookup"><span data-stu-id="8af62-226">Loads a previously unloaded workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-227"><xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> es sincrónico; si se puede cargar la instancia de flujo de trabajo, <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> devolverá cuando el motor en tiempo de ejecución de flujo de trabajo haya cargado en la memoria y haya programado la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-227"><xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is synchronous; if the workflow instance can be loaded, <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> will return after the workflow instance has been loaded into memory and scheduled by the workflow runtime engine.</span></span> <span data-ttu-id="8af62-228">El tiempo de ejecución genera el evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> después de que el servicio de persistencia haya restaurado la instancia de flujo de trabajo en memoria, pero antes de que el motor en tiempo de ejecución de flujo de trabajo programe la instancia.</span><span class="sxs-lookup"><span data-stu-id="8af62-228">The runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> event after the persistence service has restored the workflow instance in memory, but before the workflow runtime engine schedules the instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8af62-229">El ejemplo siguiente muestra cómo cargar un objeto <xref:System.Workflow.Runtime.WorkflowInstance> previamente descargado.</span><span class="sxs-lookup"><span data-stu-id="8af62-229">The following example demonstrates how to load a previously unloaded <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#10](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#10)]
 [!code-vb[WF_Samples#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8af62-230">El motor en tiempo de ejecución de flujo de trabajo no está en ejecución.</span><span class="sxs-lookup"><span data-stu-id="8af62-230">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReloadTrackingProfiles">
      <MemberSignature Language="C#" Value="public void ReloadTrackingProfiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReloadTrackingProfiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadTrackingProfiles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReloadTrackingProfiles();" />
      <MemberSignature Language="F#" Value="member this.ReloadTrackingProfiles : unit -&gt; unit" Usage="workflowInstance.ReloadTrackingProfiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8af62-231">Recargue los perfiles de seguimiento para esta instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-231">Reload the tracking profiles for this workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-232">La infraestructura del seguimiento en tiempo de ejecución recargará cada <xref:System.Workflow.Runtime.Tracking.TrackingProfile> para esta instancia de flujo de trabajo asociada a sus canales del seguimiento.</span><span class="sxs-lookup"><span data-stu-id="8af62-232">The runtime tracking infrastructure will reload each <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for this workflow instance associated with its tracking channels.</span></span> <span data-ttu-id="8af62-233">Si aún no está en estado suspendido, la infraestructura del seguimiento en tiempo de ejecución suspende temporalmente el flujo de trabajo mientras se recargan los perfiles del seguimiento.</span><span class="sxs-lookup"><span data-stu-id="8af62-233">If it is not already in a suspended state, the workflow is temporarily suspended by the runtime tracking infrastructure while the tracking profiles are reloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8af62-234">El motor en tiempo de ejecución de flujo de trabajo no está en ejecución.</span><span class="sxs-lookup"><span data-stu-id="8af62-234">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="workflowInstance.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8af62-235">Reanuda la ejecución de una instancia de flujo de trabajo previamente suspendida.</span><span class="sxs-lookup"><span data-stu-id="8af62-235">Resumes execution of a previously suspended workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-236">El host puede llamar <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A> para reanudar la ejecución de una instancia de flujo de trabajo suspendida previamente.</span><span class="sxs-lookup"><span data-stu-id="8af62-236">The host can call <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A> to resume execution of a workflow instance that has been previously suspended.</span></span> <span data-ttu-id="8af62-237">Si la instancia de flujo de trabajo no está en estado suspendido, no se realiza ninguna acción.</span><span class="sxs-lookup"><span data-stu-id="8af62-237">If the workflow instance is not in the suspended state, no action is taken.</span></span> <span data-ttu-id="8af62-238">El tiempo de ejecución genera el evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> justo antes de que se reanude la ejecución de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-238">The runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event just before execution of the workflow instance is resumed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8af62-239">El ejemplo siguiente muestra cómo llamar a Reanudar en una instancia de flujo de trabajo previamente suspendida.</span><span class="sxs-lookup"><span data-stu-id="8af62-239">The following example demonstrates calling Resume on a previously suspended workflow instance.</span></span>  <span data-ttu-id="8af62-240">Este ejemplo pertenece a Suspenda y Finalice el ejemplo de SDK.</span><span class="sxs-lookup"><span data-stu-id="8af62-240">This example is from the Suspend and Terminate SDK sample.</span></span>  <span data-ttu-id="8af62-241">Para obtener más información, consulte [Suspend y Terminate ejemplo](https://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517).</span><span class="sxs-lookup"><span data-stu-id="8af62-241">For more information, see [Suspend and Terminate Sample](https://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517).</span></span>  
  
 [!code-csharp[WF_Samples#172](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#172)]
 [!code-vb[WF_Samples#172](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#172)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8af62-242">El motor en tiempo de ejecución de flujo de trabajo no está en ejecución.</span><span class="sxs-lookup"><span data-stu-id="8af62-242">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="workflowInstance.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8af62-243">Inicia la ejecución de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-243">Starts the execution of the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-244"><xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> llama <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> en la actividad raíz de esta instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-244"><xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> calls <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> on the root activity of this workflow instance.</span></span> <span data-ttu-id="8af62-245">Si <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> se encuentra con una excepción, finaliza la instancia de flujo de trabajo llamando <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> con la propiedad <xref:System.Exception.Message%2A> de la excepción pasada como la razón para la finalización.</span><span class="sxs-lookup"><span data-stu-id="8af62-245">If <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> encounters an exception, it terminates the workflow instance by calling <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> with the <xref:System.Exception.Message%2A> property of the exception passed as the reason for the termination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8af62-246">El ejemplo de código siguiente muestra cómo puede utilizar el método <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> para iniciar <xref:System.Workflow.Runtime.WorkflowInstance> en un host del flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-246">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method to start a <xref:System.Workflow.Runtime.WorkflowInstance> in a workflow host.</span></span> <span data-ttu-id="8af62-247">El código crea una instancia de <xref:System.Workflow.Runtime.WorkflowRuntime>, agrega los servicios al tiempo de ejecución y, a continuación, muestra la manera recomendada de crear un objeto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="8af62-247">The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="8af62-248">Crea un objeto <xref:System.Type> y lo convierte a uno de los objetos de flujo de trabajo a los cuales el host está asociado.</span><span class="sxs-lookup"><span data-stu-id="8af62-248">It creates a <xref:System.Type> object and casts it to one of the workflow objects with which the host is associated.</span></span> <span data-ttu-id="8af62-249">Después, el código inicializa <xref:System.Workflow.Runtime.WorkflowInstance> llamando al método <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> y pasándole el tipo previamente creado.</span><span class="sxs-lookup"><span data-stu-id="8af62-249">The code next initializes <xref:System.Workflow.Runtime.WorkflowInstance> by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it.</span></span> <span data-ttu-id="8af62-250"><xref:System.Workflow.Runtime.WorkflowInstance> se inicia con la llamada al método <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A>.</span><span class="sxs-lookup"><span data-stu-id="8af62-250">The <xref:System.Workflow.Runtime.WorkflowInstance> is started with the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method call.</span></span>  
  
 <span data-ttu-id="8af62-251">Este ejemplo de código forma parte de la muestra de SDK Cancelar un Flujo de trabajo, del archivo Program.cs.</span><span class="sxs-lookup"><span data-stu-id="8af62-251">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="8af62-252">Para obtener más información, consulte [cancelar un flujo de trabajo](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="8af62-252">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8af62-253">El motor en tiempo de ejecución de flujo de trabajo no está en ejecución.</span><span class="sxs-lookup"><span data-stu-id="8af62-253">The workflow runtime engine is not running.</span></span>  
  
<span data-ttu-id="8af62-254">O bien</span><span class="sxs-lookup"><span data-stu-id="8af62-254">-or-</span></span> 
<span data-ttu-id="8af62-255">Ya se ha iniciado la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-255">The workflow instance has already been started.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)"><span data-ttu-id="8af62-256">Cancelar un flujo de trabajo</span><span class="sxs-lookup"><span data-stu-id="8af62-256">Canceling a Workflow</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public void Suspend (string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Suspend(string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Suspend (error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Suspend(System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.Suspend : string -&gt; unit" Usage="workflowInstance.Suspend error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="8af62-257">Una descripción de la razón para suspender la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-257">A description of the reason for suspending the workflow instance.</span></span></param>
        <summary><span data-ttu-id="8af62-258">Suspende la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-258">Suspends the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-259">La instancia de flujo de trabajo se suspende de una manera sincrónica.</span><span class="sxs-lookup"><span data-stu-id="8af62-259">The workflow instance is suspended in a synchronous manner.</span></span> <span data-ttu-id="8af62-260">Si se ya se ha suspendido la instancia de flujo de trabajo, no se realiza ninguna acción; de lo contrario, el motor en tiempo de ejecución de flujo de trabajo suspende la instancia de flujo de trabajo, genera el evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> y pasa `reason` en <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="8af62-260">If the workflow instance is already suspended, no action is taken; otherwise, the workflow runtime engine suspends the workflow instance, raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> event and passes `reason` in a <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8af62-261"><xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> no descarga la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-261"><xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> does not unload the workflow instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8af62-262">El ejemplo de código siguiente muestra cómo se llama a Suspender en un objeto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="8af62-262">The following code example demonstrates calling Suspend on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#9](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#9)]
 [!code-vb[WF_Samples#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8af62-263">El motor en tiempo de ejecución de flujo de trabajo no está en ejecución.</span><span class="sxs-lookup"><span data-stu-id="8af62-263">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.Terminate : string -&gt; unit" Usage="workflowInstance.Terminate error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="8af62-264">Una descripción de la razón para finalizar la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-264">A description of the reason for terminating the workflow instance.</span></span></param>
        <summary><span data-ttu-id="8af62-265">Finaliza la instancia de flujo de trabajo de una forma sincrónica.</span><span class="sxs-lookup"><span data-stu-id="8af62-265">Terminates the workflow instance in a synchronous manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-266">La instancia de flujo de trabajo se finaliza de una forma sincrónica.</span><span class="sxs-lookup"><span data-stu-id="8af62-266">The workflow instance is terminated in a synchronous manner.</span></span> <span data-ttu-id="8af62-267">El host llama a <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> para finalizar la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-267">The host calls <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> to terminate the workflow instance.</span></span> <span data-ttu-id="8af62-268">El motor en tiempo de ejecución de flujo de trabajo borra la instancia de flujo de trabajo en memoria e informa al servicio de persistencia que se ha borrado la instancia de la memoria.</span><span class="sxs-lookup"><span data-stu-id="8af62-268">The workflow runtime engine clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</span></span> <span data-ttu-id="8af62-269">Para <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, esto significa que toda la información de estado para esa instancia de flujo de trabajo se elimina de la base de datos cuando se termina.</span><span class="sxs-lookup"><span data-stu-id="8af62-269">For the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, this means that all state information for that workflow instance is deleted from the database upon termination.</span></span> <span data-ttu-id="8af62-270">No podrá recargar la instancia de flujo de trabajo de un punto de persistencia previamente almacenado.</span><span class="sxs-lookup"><span data-stu-id="8af62-270">You will not be able to reload the workflow instance from a previously stored persistence point.</span></span>  
  
 <span data-ttu-id="8af62-271">Una vez borrada la instancia de flujo de trabajo en memoria y se informa al servicio de persistencia de la finalización, el método `Terminate` genera el evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> y pasa `reason` en la propiedad <xref:System.Exception.Message%2A> de <xref:System.Workflow.ComponentModel.WorkflowTerminatedException> contenida en <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="8af62-271">After the in-memory workflow instance is cleared and the persistence service is informed of the termination, the `Terminate` method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event and passes `reason` in the <xref:System.Exception.Message%2A> property of a <xref:System.Workflow.ComponentModel.WorkflowTerminatedException> contained in the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.</span></span>  
  
 <span data-ttu-id="8af62-272">`Terminate` es diferente de <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> en que Finalizar borra la instancia de flujo de trabajo en memoria e informa al servicio de persistencia de la finalización, `Abort` simplemente borra la instancia de flujo de trabajo en memoria, que puede reiniciarse a continuación desde el último punto de persistencia.</span><span class="sxs-lookup"><span data-stu-id="8af62-272">`Terminate` is different from <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> in that while Terminate clears the in-memory workflow instance and informs the persistence service of the termination, `Abort` simply clears the in-memory workflow instance, which can then be restarted from the last persistence point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8af62-273">El ejemplo de código siguiente muestra cómo se llama a Terminar en un objeto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="8af62-273">The following code example demonstrates calling Terminate on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#8](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#8)]
 [!code-vb[WF_Samples#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8af62-274">El motor en tiempo de ejecución de flujo de trabajo no está en ejecución.</span><span class="sxs-lookup"><span data-stu-id="8af62-274">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryUnload">
      <MemberSignature Language="C#" Value="public bool TryUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.TryUnload" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUnload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryUnload();" />
      <MemberSignature Language="F#" Value="member this.TryUnload : unit -&gt; bool" Usage="workflowInstance.TryUnload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8af62-275">Descarga la instancia de flujo de trabajo de la memoria al almacén de persistencia cuando la instancia se suspende o está inactiva.</span><span class="sxs-lookup"><span data-stu-id="8af62-275">Unloads the workflow instance from memory to the persistence store when the instance is suspended or idle.</span></span></summary>
        <returns><span data-ttu-id="8af62-276"><see langword="true" /> si se descargara la instancia de flujo de trabajo; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8af62-276"><see langword="true" /> if the workflow instance was unloaded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-277">Si la instancia de flujo de trabajo está inactiva o suspendida, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> utiliza el servicio de persistencia para quitar la instancia de flujo de trabajo de la memoria y conservarla en un almacén de datos.</span><span class="sxs-lookup"><span data-stu-id="8af62-277">If the workflow instance is idle or suspended, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> uses the persistence service to remove the workflow instance from memory and persist it to a data store.</span></span> <span data-ttu-id="8af62-278">Si no hay ningún servicio de persistencia registrado con <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> inicia <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8af62-278">If there is no persistence service registered with the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="8af62-279">Si la instancia de flujo de trabajo se conserva correctamente, el tiempo de ejecución genera el <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> eventos y devoluciones `true`.</span><span class="sxs-lookup"><span data-stu-id="8af62-279">If the workflow instance is successfully persisted, the runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event, and returns `true`.</span></span> <span data-ttu-id="8af62-280"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> Devuelve `false` si ya se ha descargado la instancia de flujo de trabajo, ha finalizado, anulado o ya se ha completado.</span><span class="sxs-lookup"><span data-stu-id="8af62-280"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> returns `false` if the workflow instance has already been unloaded, has been terminated, has been aborted, or has already completed.</span></span>  
  
 <span data-ttu-id="8af62-281">El host puede utilizar <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> para reclamar los recursos del sistema de un flujo de trabajo inactivo.</span><span class="sxs-lookup"><span data-stu-id="8af62-281">The host can use <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> to reclaim system resources from an idle workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8af62-282">El ejemplo siguiente muestra cómo utilizar el método TryUnload para descargar un flujo de trabajo cuando se desencadena el evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>.</span><span class="sxs-lookup"><span data-stu-id="8af62-282">The following example demonstrates using the TryUnload method to unload a workflow when the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event fires.</span></span> <span data-ttu-id="8af62-283">Este ejemplo pertenece a la muestra de SDK de Utilizar Servicios de Persistencia, del archivo Program.cs.</span><span class="sxs-lookup"><span data-stu-id="8af62-283">This example is from the Using Persistence Services SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="8af62-284">Para obtener más información, consulte [utilizando el ejemplo de servicios de persistencia](https://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6).</span><span class="sxs-lookup"><span data-stu-id="8af62-284">For more information, see [Using Persistence Services Sample](https://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6).</span></span>  
  
 [!code-csharp[WF_Samples#280](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#280)]
 [!code-vb[WF_Samples#280](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#280)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8af62-285">No hay ningún servicio de persistencia registrado con el motor en tiempo de ejecución de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-285">There is no persistence service registered with the workflow runtime engine.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; unit" Usage="workflowInstance.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8af62-286">Descarga la instancia de flujo de trabajo desde la memoria al almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="8af62-286">Unloads the workflow instance from memory to the persistence store.</span></span> <span data-ttu-id="8af62-287">Esta llamada se bloquea hasta que finalice el trabajo actualmente programado o hasta el final de un ámbito de transacción.</span><span class="sxs-lookup"><span data-stu-id="8af62-287">This call blocks until after the currently scheduled work is finished, or the end of a transaction scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af62-288"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> es sincrónica; es decir, se devuelve después de completar cualquier acción que realice.</span><span class="sxs-lookup"><span data-stu-id="8af62-288"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> is synchronous; that is, it returns after completing any action that it performs.</span></span> <span data-ttu-id="8af62-289">Si la instancia de flujo de trabajo no está inactiva, el motor en tiempo de ejecución espera hasta que se pueda interrumpir la instancia.</span><span class="sxs-lookup"><span data-stu-id="8af62-289">If the workflow instance is not idle, the runtime waits until the instance can be interrupted.</span></span> <span data-ttu-id="8af62-290">Sólo se puede interrumpir una instancia una vez finalizado el elemento de trabajo actualmente programado. Generalmente, esto se produce cuando la Actividad actualmente en ejecución vuelve de su método <xref:System.Workflow.ComponentModel.Activity.Execute%2A>.</span><span class="sxs-lookup"><span data-stu-id="8af62-290">An instance can only be interrupted after the currently scheduled work item completes; this is typically when the currently running Activity returns from its <xref:System.Workflow.ComponentModel.Activity.Execute%2A> method.</span></span> <span data-ttu-id="8af62-291">Sin embargo, si la instancia está ejecutando una <xref:System.Workflow.ComponentModel.TransactionScopeActivity>, el ámbito de transacción debe completar la ejecución antes de que se pueda interrumpir la instancia.</span><span class="sxs-lookup"><span data-stu-id="8af62-291">However, if the instance is executing a <xref:System.Workflow.ComponentModel.TransactionScopeActivity>, the transaction scope must complete execution before the instance can be interrupted.</span></span> <span data-ttu-id="8af62-292">A continuación, la descarga utiliza el servicio de persistencia para quitar la instancia de flujo de trabajo de la memoria y lo conserva en un almacén de datos.</span><span class="sxs-lookup"><span data-stu-id="8af62-292">Unload then uses the persistence service to remove the workflow instance from memory and persists it to a data store.</span></span> <span data-ttu-id="8af62-293">Si no hay ningún servicio de persistencia registrado con <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> inicia <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="8af62-293">If there is no persistence service registered with the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="8af62-294">Si se conserva la instancia de flujo de trabajo correctamente, el tiempo de ejecución genera el evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>.</span><span class="sxs-lookup"><span data-stu-id="8af62-294">If the workflow instance is successfully persisted, the runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
 <span data-ttu-id="8af62-295">El host puede utilizar <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> para reclamar los recursos del sistema de un flujo de trabajo inactivo.</span><span class="sxs-lookup"><span data-stu-id="8af62-295">The host can use <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> to reclaim system resources from an idle workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8af62-296">En el siguiente ejemplo se muestra cómo llamar <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> en un objeto <xref:System.Workflow.Runtime.WorkflowInstance>.</span><span class="sxs-lookup"><span data-stu-id="8af62-296">The following example demonstrates calling <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#11](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#11)]
 [!code-vb[WF_Samples#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8af62-297">No hay ningún servicio de persistencia registrado con el motor en tiempo de ejecución de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-297">There is no persistence service registered with the workflow runtime engine.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WorkflowRuntime">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowRuntime WorkflowRuntime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowRuntime WorkflowRuntime" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkflowRuntime As WorkflowRuntime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::WorkflowRuntime ^ WorkflowRuntime { System::Workflow::Runtime::WorkflowRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowRuntime : System.Workflow.Runtime.WorkflowRuntime" Usage="System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8af62-298">Obtiene el estado de <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> para esta instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="8af62-298">Gets the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> for this workflow instance.</span></span></summary>
        <value><span data-ttu-id="8af62-299"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> que representa el entorno de ejecución en el que esta instancia de flujo de trabajo se está ejecutando.</span><span class="sxs-lookup"><span data-stu-id="8af62-299">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> that represents the execution environment in which this workflow instance is running.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8af62-300">El ejemplo siguiente muestra cómo tener acceso a la ejecución <xref:System.Workflow.Runtime.WorkflowRuntime> de un <xref:System.Workflow.Runtime.WorkflowInstance> objeto.</span><span class="sxs-lookup"><span data-stu-id="8af62-300">The following example demonstrates accessing the executing <xref:System.Workflow.Runtime.WorkflowRuntime> of a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#7](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#7)]
 [!code-vb[WF_Samples#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
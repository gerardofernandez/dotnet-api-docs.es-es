<Type Name="ManagementEventWatcher" FullName="System.Management.ManagementEventWatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="943906c69d32cb62fc8495bc1013a68784c0427c" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56764177" /></Metadata><TypeSignature Language="C#" Value="public class ManagementEventWatcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementEventWatcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementEventWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementEventWatcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEventWatcher : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ManagementEventWatcher = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e3af9-101">Se suscribe a notificaciones de eventos temporales basándose en una *consulta de eventos* especificada.</span><span class="sxs-lookup"><span data-stu-id="e3af9-101">Subscribes to temporary event notifications based on a specified *event query*.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3af9-102">El ejemplo siguiente muestra cómo el cliente recibe una notificación cuando una instancia de **Win32_Process** se crea porque es la clase de eventos **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3af9-102">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3af9-103">Para obtener más información, consulte el [Instrumental de administración de Windows](/windows/desktop/wmisdk/wmi-start-page) documentación.</span><span class="sxs-lookup"><span data-stu-id="e3af9-103">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="e3af9-104">El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3af9-104">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3af9-105">Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e3af9-105">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e3af9-106">Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" />.</span><span class="sxs-lookup"><span data-stu-id="e3af9-106">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3af9-107">Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" />.</span><span class="sxs-lookup"><span data-stu-id="e3af9-107">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span></span> <span data-ttu-id="e3af9-108">Para una posterior inicialización, establezca las propiedades del objeto.</span><span class="sxs-lookup"><span data-stu-id="e3af9-108">For further initialization, set the properties on the object.</span></span> <span data-ttu-id="e3af9-109">Éste es el constructor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="e3af9-109">This is the default constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-110">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-110">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-111">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-112">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-113">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3af9-114">El ejemplo siguiente muestra cómo el cliente recibe una notificación cuando una instancia de **Win32_Process** se crea porque es la clase de eventos **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3af9-114">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3af9-115">Para obtener más información, consulte el [Instrumental de administración de Windows](/windows/desktop/wmisdk/wmi-start-page) documentación.</span><span class="sxs-lookup"><span data-stu-id="e3af9-115">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="e3af9-116">El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3af9-116">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3af9-117">Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e3af9-117">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="e3af9-118"><see cref="T:System.Management.EventQuery" /> que representa una consulta de eventos WMI, la cual determina los eventos que escuchará el monitor.</span><span class="sxs-lookup"><span data-stu-id="e3af9-118">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="e3af9-119">Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> cuando se proporciona una *consulta de eventos* WMI.</span><span class="sxs-lookup"><span data-stu-id="e3af9-119">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query*.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3af9-120">El espacio de nombres en el que el monitor escuchará los eventos es el espacio de nombres predeterminado que está configurado actualmente.</span><span class="sxs-lookup"><span data-stu-id="e3af9-120">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-121">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-121">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-122">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-123">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-124">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3af9-125">En este ejemplo de código, el cliente recibe la notificación cuando una instancia de **Win32_Process** se crea porque es la clase de eventos **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3af9-125">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3af9-126">Para obtener más información, consulte el [Instrumental de administración de Windows](/windows/desktop/wmisdk/wmi-start-page) documentación.</span><span class="sxs-lookup"><span data-stu-id="e3af9-126">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="e3af9-127">El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3af9-127">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3af9-128">Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e3af9-128">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/cs/ManagementEventWatcher-E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/vb/ManagementEventWatcher-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="e3af9-129">Consulta de eventos WMI, que define los eventos que escuchará el monitor.</span><span class="sxs-lookup"><span data-stu-id="e3af9-129">A WMI event query, which defines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="e3af9-130">Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> cuando se proporciona una *consulta de eventos* WMI en forma de cadena.</span><span class="sxs-lookup"><span data-stu-id="e3af9-130">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query* in the form of a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3af9-131">El espacio de nombres en el que el monitor escuchará los eventos es el espacio de nombres predeterminado que está configurado actualmente.</span><span class="sxs-lookup"><span data-stu-id="e3af9-131">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-132">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-132">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-133">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-134">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-135">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-135">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3af9-136">El ejemplo siguiente muestra cómo el cliente recibe una notificación cuando una instancia de **Win32_Process** se crea porque es la clase de eventos **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3af9-136">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3af9-137">Para obtener más información, consulte el [Instrumental de administración de Windows](/windows/desktop/wmisdk/wmi-start-page) documentación.</span><span class="sxs-lookup"><span data-stu-id="e3af9-137">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="e3af9-138">El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3af9-138">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3af9-139">Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e3af9-139">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/cs/ManagementEventWatcher-S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/vb/ManagementEventWatcher-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="e3af9-140"><see cref="T:System.Management.ManagementScope" /> que representa el ámbito (espacio de nombres) donde el monitor escuchará los eventos.</span><span class="sxs-lookup"><span data-stu-id="e3af9-140">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="e3af9-141"><see cref="T:System.Management.EventQuery" /> que representa una consulta de eventos WMI, la cual determina los eventos que escuchará el monitor.</span><span class="sxs-lookup"><span data-stu-id="e3af9-141">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="e3af9-142">Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> que escucha los eventos de acuerdo con la *consulta de eventos* WMI dada.</span><span class="sxs-lookup"><span data-stu-id="e3af9-142">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-143">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-143">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-144">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-144">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-145">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-145">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-146">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-146">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3af9-147">En este ejemplo de código, el cliente recibe la notificación cuando una instancia de **Win32_Process** se crea porque es la clase de eventos **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3af9-147">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3af9-148">Para obtener más información, consulte el [Instrumental de administración de Windows](/windows/desktop/wmisdk/wmi-start-page) documentación.</span><span class="sxs-lookup"><span data-stu-id="e3af9-148">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="e3af9-149">El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3af9-149">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3af9-150">Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e3af9-150">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/cs/ManagementEventWatcher-M_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/vb/ManagementEventWatcher-M_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="e3af9-151">Ámbito de administración (espacio de nombres) donde el monitor escuchará los eventos.</span><span class="sxs-lookup"><span data-stu-id="e3af9-151">The management scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="e3af9-152">Consulta que define los eventos que escuchará el monitor.</span><span class="sxs-lookup"><span data-stu-id="e3af9-152">The query that defines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="e3af9-153">Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> que escucha los eventos de acuerdo con la *consulta de eventos* WMI dada.</span><span class="sxs-lookup"><span data-stu-id="e3af9-153">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span></span> <span data-ttu-id="e3af9-154">Para esta variante, la consulta y el ámbito se especifican como cadenas.</span><span class="sxs-lookup"><span data-stu-id="e3af9-154">For this variant, the query and the scope are specified as strings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-155">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-155">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-156">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-156">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-157">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-157">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-158">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-158">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3af9-159">El ejemplo siguiente muestra cómo el cliente recibe una notificación cuando una instancia de **Win32_Process** se crea porque es la clase de eventos **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3af9-159">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3af9-160">Para obtener más información, consulte el [Instrumental de administración de Windows](/windows/desktop/wmisdk/wmi-start-page) documentación.</span><span class="sxs-lookup"><span data-stu-id="e3af9-160">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="e3af9-161">El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3af9-161">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3af9-162">Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e3af9-162">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/cs/ManagementEventWatcher-S_S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/vb/ManagementEventWatcher-S_S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="e3af9-163"><see cref="T:System.Management.ManagementScope" /> que representa el ámbito (espacio de nombres) donde el monitor escuchará los eventos.</span><span class="sxs-lookup"><span data-stu-id="e3af9-163">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="e3af9-164"><see cref="T:System.Management.EventQuery" /> que representa una consulta de eventos WMI, la cual determina los eventos que escuchará el monitor.</span><span class="sxs-lookup"><span data-stu-id="e3af9-164">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span></span></param>
        <param name="options"><span data-ttu-id="e3af9-165"><see cref="T:System.Management.EventWatcherOptions" /> que representa las opciones adicionales utilizadas para inspeccionar los eventos.</span><span class="sxs-lookup"><span data-stu-id="e3af9-165">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span></span></param>
        <summary><span data-ttu-id="e3af9-166">Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> que escucha los eventos de acuerdo con la consulta de eventos WMI dada y las opciones especificadas.</span><span class="sxs-lookup"><span data-stu-id="e3af9-166">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options.</span></span> <span data-ttu-id="e3af9-167">Para esta variante, la consulta y el ámbito son objetos especificados.</span><span class="sxs-lookup"><span data-stu-id="e3af9-167">For this variant, the query and the scope are specified objects.</span></span> <span data-ttu-id="e3af9-168">El objeto de opciones puede especificar opciones como un tiempo de espera e información del contexto.</span><span class="sxs-lookup"><span data-stu-id="e3af9-168">The options object can specify options such as time-out and context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-169">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-169">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-170">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-170">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-171">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-171">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-172">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-172">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3af9-173">El ejemplo siguiente muestra cómo el cliente recibe una notificación cuando una instancia de **Win32_Process** se crea porque es la clase de eventos **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3af9-173">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3af9-174">Para obtener más información, consulte el [Instrumental de administración de Windows](/windows/desktop/wmisdk/wmi-start-page) documentación.</span><span class="sxs-lookup"><span data-stu-id="e3af9-174">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="e3af9-175">El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3af9-175">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3af9-176">Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e3af9-176">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/cs/ManagementEventWatcher-M_E_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/vb/ManagementEventWatcher-M_E_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="e3af9-177">Ámbito de administración (espacio de nombres) donde el monitor escuchará los eventos.</span><span class="sxs-lookup"><span data-stu-id="e3af9-177">The management scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="e3af9-178">Consulta que define los eventos que escuchará el monitor.</span><span class="sxs-lookup"><span data-stu-id="e3af9-178">The query that defines the events for which the watcher will listen.</span></span></param>
        <param name="options"><span data-ttu-id="e3af9-179"><see cref="T:System.Management.EventWatcherOptions" /> que representa las opciones adicionales utilizadas para inspeccionar los eventos.</span><span class="sxs-lookup"><span data-stu-id="e3af9-179">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span></span></param>
        <summary><span data-ttu-id="e3af9-180">Inicializa una nueva instancia de la clase <see cref="T:System.Management.ManagementEventWatcher" /> que escucha los eventos de acuerdo con la *consulta de eventos* WMI dada y las opciones especificadas.</span><span class="sxs-lookup"><span data-stu-id="e3af9-180">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*, according to the specified options.</span></span> <span data-ttu-id="e3af9-181">Para esta variante, la consulta y el ámbito se especifican como cadenas.</span><span class="sxs-lookup"><span data-stu-id="e3af9-181">For this variant, the query and the scope are specified as strings.</span></span> <span data-ttu-id="e3af9-182">El objeto de opciones puede especificar opciones como un tiempo de espera e información del contexto.</span><span class="sxs-lookup"><span data-stu-id="e3af9-182">The options object can specify options such as a time-out and context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-183">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-183">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-184">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-185">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-186">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3af9-187">El ejemplo siguiente muestra cómo el cliente recibe una notificación cuando una instancia de **Win32_Process** se crea porque es la clase de eventos **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3af9-187">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3af9-188">Para obtener más información, consulte el [Instrumental de administración de Windows](/windows/desktop/wmisdk/wmi-start-page) documentación.</span><span class="sxs-lookup"><span data-stu-id="e3af9-188">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="e3af9-189">El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3af9-189">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3af9-190">Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e3af9-190">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/cs/ManagementEventWatcher-S_S_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/vb/ManagementEventWatcher-S_S_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventArrived">
      <MemberSignature Language="C#" Value="public event System.Management.EventArrivedEventHandler EventArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.EventArrivedEventHandler EventArrived" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.EventArrived" />
      <MemberSignature Language="VB.NET" Value="Public Event EventArrived As EventArrivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::EventArrivedEventHandler ^ EventArrived;" />
      <MemberSignature Language="F#" Value="member this.EventArrived : System.Management.EventArrivedEventHandler " Usage="member this.EventArrived : System.Management.EventArrivedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventArrivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3af9-191">Se produce cuando llega un nuevo evento.</span><span class="sxs-lookup"><span data-stu-id="e3af9-191">Occurs when a new event arrives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="e3af9-192">Datos de evento</span><span class="sxs-lookup"><span data-stu-id="e3af9-192">Event Data</span></span>  
 <span data-ttu-id="e3af9-193">El controlador de eventos recibe un argumento de tipo <xref:System.Management.EventArrivedEventArgs> que contiene datos relativos a este evento.</span><span class="sxs-lookup"><span data-stu-id="e3af9-193">The event handler receives an argument of type <xref:System.Management.EventArrivedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="e3af9-194">La siguiente <xref:System.Management.EventArrivedEventArgs> propiedades proporcionan información específica de este evento.</span><span class="sxs-lookup"><span data-stu-id="e3af9-194">The following <xref:System.Management.EventArrivedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="e3af9-195">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="e3af9-195">Property</span></span>|<span data-ttu-id="e3af9-196">Descripción</span><span class="sxs-lookup"><span data-stu-id="e3af9-196">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="e3af9-197"><xref:System.Management.ManagementEventArgs.Context%2A> (se hereda de <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="e3af9-197"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="e3af9-198">Obtiene el contexto de operación devuelto desde la operación que desencadenó el evento.</span><span class="sxs-lookup"><span data-stu-id="e3af9-198">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.EventArrivedEventArgs.NewEvent%2A>|<span data-ttu-id="e3af9-199">Obtiene el evento WMI que se entrega.</span><span class="sxs-lookup"><span data-stu-id="e3af9-199">Gets the WMI event that was delivered.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-200">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-200">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-201">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-201">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-202">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-202">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-203">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-203">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementEventWatcher ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="managementEventWatcher.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3af9-204">Garantiza que se borran las llamadas pendientes.</span><span class="sxs-lookup"><span data-stu-id="e3af9-204">Ensures that outstanding calls are cleared.</span></span> <span data-ttu-id="e3af9-205">Es el destructor del objeto.</span><span class="sxs-lookup"><span data-stu-id="e3af9-205">This is the destructor for the object.</span></span> <span data-ttu-id="e3af9-206">En C#, los finalizadores se expresan mediante la sintaxis del destructor.</span><span class="sxs-lookup"><span data-stu-id="e3af9-206">In C#, finalizers are expressed using destructor syntax.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-207">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-207">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-208">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-208">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-209">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-209">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-210">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-210">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Management.EventWatcherOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventWatcherOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As EventWatcherOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventWatcherOptions ^ Options { System::Management::EventWatcherOptions ^ get(); void set(System::Management::EventWatcherOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Management.EventWatcherOptions with get, set" Usage="System.Management.ManagementEventWatcher.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventWatcherOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3af9-211">Obtiene o establece las opciones que se utilizan para inspeccionar los eventos.</span><span class="sxs-lookup"><span data-stu-id="e3af9-211">Gets or sets the options used to watch for events.</span></span></summary>
        <value><span data-ttu-id="e3af9-212">Las opciones de evento utilizadas para inspeccionar los eventos.</span><span class="sxs-lookup"><span data-stu-id="e3af9-212">The event options used to watch for events.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="e3af9-213">Valor de propiedad</span><span class="sxs-lookup"><span data-stu-id="e3af9-213">Property Value</span></span>  
 <span data-ttu-id="e3af9-214">Las opciones utilizadas para inspeccionar los eventos.</span><span class="sxs-lookup"><span data-stu-id="e3af9-214">The options used to watch for events.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-215">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-215">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-216">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-216">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-217">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-217">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-218">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-218">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3af9-219">El ejemplo siguiente muestra cómo el cliente recibe una notificación cuando una instancia de **Win32_Process** se crea porque es la clase de eventos **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3af9-219">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3af9-220">Para obtener más información, consulte el [Instrumental de administración de Windows](/windows/desktop/wmisdk/wmi-start-page) documentación.</span><span class="sxs-lookup"><span data-stu-id="e3af9-220">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="e3af9-221">El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3af9-221">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3af9-222">Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e3af9-222">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/cs/ManagementEventWatcher_Options.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/vb/ManagementEventWatcher_Options.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public System.Management.EventQuery Query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventQuery Query" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Query" />
      <MemberSignature Language="VB.NET" Value="Public Property Query As EventQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventQuery ^ Query { System::Management::EventQuery ^ get(); void set(System::Management::EventQuery ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Query : System.Management.EventQuery with get, set" Usage="System.Management.ManagementEventWatcher.Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3af9-223">Obtiene o establece los criterios que se aplicarán a los eventos.</span><span class="sxs-lookup"><span data-stu-id="e3af9-223">Gets or sets the criteria to apply to events.</span></span></summary>
        <value><span data-ttu-id="e3af9-224">La consulta que se aplican a eventos.</span><span class="sxs-lookup"><span data-stu-id="e3af9-224">The query to apply to events.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="e3af9-225">Valor de propiedad</span><span class="sxs-lookup"><span data-stu-id="e3af9-225">Property Value</span></span>  
 <span data-ttu-id="e3af9-226">Los criterios que se aplican a los eventos, que es igual a la *consulta de evento*.</span><span class="sxs-lookup"><span data-stu-id="e3af9-226">The criteria to apply to the events, which is equal to the *event query*.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-227">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-227">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-228">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-228">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-229">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-229">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-230">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-230">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3af9-231">El ejemplo siguiente muestra cómo el cliente recibe una notificación cuando una instancia de **Win32_Process** se crea porque es la clase de eventos **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3af9-231">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3af9-232">Para obtener más información, consulte el [Instrumental de administración de Windows](/windows/desktop/wmisdk/wmi-start-page) documentación.</span><span class="sxs-lookup"><span data-stu-id="e3af9-232">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="e3af9-233">El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3af9-233">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3af9-234">Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e3af9-234">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/cs/ManagementEventWatcher_Query.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/vb/ManagementEventWatcher_Query.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Management.ManagementScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As ManagementScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::ManagementScope ^ Scope { System::Management::ManagementScope ^ get(); void set(System::Management::ManagementScope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.Management.ManagementScope with get, set" Usage="System.Management.ManagementEventWatcher.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3af9-235">Obtiene o establece el ámbito (espacio de nombres) en que se inspeccionarán los eventos.</span><span class="sxs-lookup"><span data-stu-id="e3af9-235">Gets or sets the scope in which to watch for events (namespace or scope).</span></span></summary>
        <value><span data-ttu-id="e3af9-236">El ámbito en el que se va a inspeccionar los eventos.</span><span class="sxs-lookup"><span data-stu-id="e3af9-236">The scope in which to watch for events.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="e3af9-237">Valor de propiedad</span><span class="sxs-lookup"><span data-stu-id="e3af9-237">Property Value</span></span>  
 <span data-ttu-id="e3af9-238">El ámbito en el que se va a inspeccionar los eventos (espacio de nombres o ámbito).</span><span class="sxs-lookup"><span data-stu-id="e3af9-238">The scope in which to watch for events (namespace or scope).</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-239">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-239">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-240">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-240">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-241">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-241">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-242">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-242">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3af9-243">El ejemplo siguiente muestra cómo el cliente recibe una notificación cuando una instancia de **Win32_Process** se crea porque es la clase de eventos **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3af9-243">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3af9-244">Para obtener más información, consulte el [Instrumental de administración de Windows](/windows/desktop/wmisdk/wmi-start-page) documentación.</span><span class="sxs-lookup"><span data-stu-id="e3af9-244">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="e3af9-245">El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3af9-245">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3af9-246">Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e3af9-246">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/cs/ManagementEventWatcher_Scope.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/vb/ManagementEventWatcher_Scope.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="managementEventWatcher.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3af9-247">Se suscribe a eventos con la consulta dada y los entrega, asincrónicamente, a través del evento <see cref="E:System.Management.ManagementEventWatcher.EventArrived" />.</span><span class="sxs-lookup"><span data-stu-id="e3af9-247">Subscribes to events with the given query and delivers them, asynchronously, through the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-248">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-248">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-249">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-249">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-250">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-250">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-251">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-251">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="managementEventWatcher.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3af9-252">Cancela la suscripción, ya sea sincrónica o asincrónica.</span><span class="sxs-lookup"><span data-stu-id="e3af9-252">Cancels the subscription whether it is synchronous or asynchronous.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-253">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-253">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-254">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-254">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-255">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-255">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-256">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-256">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3af9-257">El ejemplo siguiente muestra cómo el cliente recibe una notificación cuando una instancia de **Win32_Process** se crea porque es la clase de eventos **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3af9-257">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3af9-258">Para obtener más información, consulte el [Instrumental de administración de Windows](/windows/desktop/wmisdk/wmi-start-page) documentación.</span><span class="sxs-lookup"><span data-stu-id="e3af9-258">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="e3af9-259">El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3af9-259">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3af9-260">Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e3af9-260">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/cs/ManagementEventWatcher_Stop.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/vb/ManagementEventWatcher_Stop.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event System.Management.StoppedEventHandler Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.StoppedEventHandler Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As StoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::StoppedEventHandler ^ Stopped;" />
      <MemberSignature Language="F#" Value="member this.Stopped : System.Management.StoppedEventHandler " Usage="member this.Stopped : System.Management.StoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.StoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e3af9-261">Se produce cuando se cancela una suscripción.</span><span class="sxs-lookup"><span data-stu-id="e3af9-261">Occurs when a subscription is canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="e3af9-262">Datos de evento</span><span class="sxs-lookup"><span data-stu-id="e3af9-262">Event Data</span></span>  
 <span data-ttu-id="e3af9-263">El controlador de eventos recibe un argumento de tipo <xref:System.Management.StoppedEventArgs> que contiene datos relativos a este evento.</span><span class="sxs-lookup"><span data-stu-id="e3af9-263">The event handler receives an argument of type <xref:System.Management.StoppedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="e3af9-264">La siguiente <xref:System.Management.StoppedEventArgs> propiedades proporcionan información específica de este evento.</span><span class="sxs-lookup"><span data-stu-id="e3af9-264">The following <xref:System.Management.StoppedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="e3af9-265">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="e3af9-265">Property</span></span>|<span data-ttu-id="e3af9-266">Descripción</span><span class="sxs-lookup"><span data-stu-id="e3af9-266">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="e3af9-267"><xref:System.Management.ManagementEventArgs.Context%2A> (se hereda de <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="e3af9-267"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="e3af9-268">Obtiene el contexto de operación devuelto desde la operación que desencadenó el evento.</span><span class="sxs-lookup"><span data-stu-id="e3af9-268">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.StoppedEventArgs.Status%2A>|<span data-ttu-id="e3af9-269">Obtiene el estado de finalización de la operación.</span><span class="sxs-lookup"><span data-stu-id="e3af9-269">Gets the completion status of the operation.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-270">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-270">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-271">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-271">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-272">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-272">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-273">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-273">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForNextEvent">
      <MemberSignature Language="C#" Value="public System.Management.ManagementBaseObject WaitForNextEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementBaseObject WaitForNextEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.WaitForNextEvent" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForNextEvent () As ManagementBaseObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementBaseObject ^ WaitForNextEvent();" />
      <MemberSignature Language="F#" Value="member this.WaitForNextEvent : unit -&gt; System.Management.ManagementBaseObject" Usage="managementEventWatcher.WaitForNextEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementBaseObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e3af9-274">Espera al siguiente evento que coincida con la consulta especificada que va a llegar, y lo devuelve.</span><span class="sxs-lookup"><span data-stu-id="e3af9-274">Waits for the next event that matches the specified query to arrive, and then returns it.</span></span></summary>
        <returns><span data-ttu-id="e3af9-275"><see cref="T:System.Management.ManagementBaseObject" /> que representa el evento recién llegado.</span><span class="sxs-lookup"><span data-stu-id="e3af9-275">A <see cref="T:System.Management.ManagementBaseObject" /> representing the newly arrived event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3af9-276">Si el objeto de Monitor de eventos contiene opciones con un tiempo de espera especificado, la API esperará el siguiente evento únicamente para la cantidad especificada de tiempo; en caso contrario, la API se bloqueará hasta que se produzca el evento siguiente.</span><span class="sxs-lookup"><span data-stu-id="e3af9-276">If the event watcher object contains options with a specified time-out, the API will wait for the next event only for the specified amount of time; otherwise, the API will be blocked until the next event occurs.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="e3af9-277">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="e3af9-277">.NET Framework Security</span></span>  
 <span data-ttu-id="e3af9-278">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="e3af9-278">Full trust for the immediate caller.</span></span> <span data-ttu-id="e3af9-279">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="e3af9-279">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="e3af9-280">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="e3af9-280">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3af9-281">El ejemplo siguiente muestra cómo el cliente recibe una notificación cuando una instancia de **Win32_Process** se crea porque es la clase de eventos **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="e3af9-281">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="e3af9-282">Para obtener más información, consulte el [Instrumental de administración de Windows](/windows/desktop/wmisdk/wmi-start-page) documentación.</span><span class="sxs-lookup"><span data-stu-id="e3af9-282">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="e3af9-283">El cliente recibe eventos de forma sincrónica tras llamar al método <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3af9-283">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="e3af9-284">Para probar este ejemplo, inicie un proceso, como Bloc de notas, mientras se ejecuta el código de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="e3af9-284">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/cs/ManagementEventWatcher_WaitForNextEvent.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/vb/ManagementEventWatcher_WaitForNextEvent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="ManagementObjectCollection" FullName="System.Management.ManagementObjectCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="971e0df134456adc632ecb41b99edf6e4044f78d" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51323451" /></Metadata><TypeSignature Language="C#" Value="public class ManagementObjectCollection : IDisposable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementObjectCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementObjectCollection&#xA;Implements ICollection, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementObjectCollection : IDisposable, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ManagementObjectCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a92c5-101">Representa diversas colecciones de objetos de administración recuperados mediante WMI.</span><span class="sxs-lookup"><span data-stu-id="a92c5-101">Represents different collections of management objects retrieved through WMI.</span></span> <span data-ttu-id="a92c5-102">Los objetos de esta colección pertenecen a tipos derivados de <see cref="T:System.Management.ManagementBaseObject" />, incluidos <see cref="T:System.Management.ManagementObject" /> y <see cref="T:System.Management.ManagementClass" />.</span><span class="sxs-lookup"><span data-stu-id="a92c5-102">The objects in this collection are of <see cref="T:System.Management.ManagementBaseObject" />-derived types, including <see cref="T:System.Management.ManagementObject" /> and <see cref="T:System.Management.ManagementClass" />.</span></span> <span data-ttu-id="a92c5-103">La colección puede ser el resultado de una consulta WMI ejecutada mediante un objeto <see cref="T:System.Management.ManagementObjectSearcher" /> o una enumeración de objetos de administración de un tipo especificado que se recuperan mediante <see cref="T:System.Management.ManagementClass" /> que representa a dicho tipo.</span><span class="sxs-lookup"><span data-stu-id="a92c5-103">The collection can be the result of a WMI query executed through a <see cref="T:System.Management.ManagementObjectSearcher" />, or an enumeration of management objects of a specified type retrieved through a <see cref="T:System.Management.ManagementClass" /> representing that type.</span></span> <span data-ttu-id="a92c5-104">Además, puede ser una colección de objetos de administración relacionados de una manera especificada con un objeto de administración concreto; en ese caso, la colección se recuperaría por medio de un método como <see cref="M:System.Management.ManagementObject.GetRelated" />.</span><span class="sxs-lookup"><span data-stu-id="a92c5-104">In addition, this can be a collection of management objects related in a specified way to a specific management object - in this case the collection would be retrieved through a method such as <see cref="M:System.Management.ManagementObject.GetRelated" />.</span></span> <span data-ttu-id="a92c5-105">La colección se puede recorrer utilizando <see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" /> y los objetos que contiene se pueden inspeccionar y manipular para realizar diversas tareas administrativas.</span><span class="sxs-lookup"><span data-stu-id="a92c5-105">The collection can be walked using the <see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" /> and objects in it can be inspected or manipulated for various management tasks.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a92c5-106">Copia la colección en una matriz.</span><span class="sxs-lookup"><span data-stu-id="a92c5-106">Copies the collection to an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="managementObjectCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a92c5-107">Matriz en la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="a92c5-107">An array to copy to.</span></span></param>
        <param name="index"><span data-ttu-id="a92c5-108">Índice por el que se va a comenzar.</span><span class="sxs-lookup"><span data-stu-id="a92c5-108">The index to start from.</span></span></param>
        <summary><span data-ttu-id="a92c5-109">Copia la colección en una matriz.</span><span class="sxs-lookup"><span data-stu-id="a92c5-109">Copies the collection to an array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="a92c5-110">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="a92c5-110">.NET Framework Security</span></span>  
 <span data-ttu-id="a92c5-111">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="a92c5-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="a92c5-112">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="a92c5-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="a92c5-113">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="a92c5-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Management.ManagementBaseObject[] objectCollection, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Management.ManagementBaseObject[] objectCollection, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (objectCollection As ManagementBaseObject(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Management::ManagementBaseObject ^&gt; ^ objectCollection, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Management.ManagementBaseObject[] * int -&gt; unit" Usage="managementObjectCollection.CopyTo (objectCollection, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectCollection" Type="System.Management.ManagementBaseObject[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="objectCollection"><span data-ttu-id="a92c5-114">Matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="a92c5-114">The target array.</span></span></param>
        <param name="index"><span data-ttu-id="a92c5-115">Índice por el que se va a comenzar.</span><span class="sxs-lookup"><span data-stu-id="a92c5-115">The index to start from.</span></span></param>
        <summary><span data-ttu-id="a92c5-116">Copia los elementos de la colección en una matriz <see cref="T:System.Management.ManagementBaseObject" />.</span><span class="sxs-lookup"><span data-stu-id="a92c5-116">Copies the items in the collection to a <see cref="T:System.Management.ManagementBaseObject" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="a92c5-117">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="a92c5-117">.NET Framework Security</span></span>  
 <span data-ttu-id="a92c5-118">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="a92c5-118">Full trust for the immediate caller.</span></span> <span data-ttu-id="a92c5-119">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="a92c5-119">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="a92c5-120">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="a92c5-120">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementObjectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Management.ManagementObjectCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a92c5-121">Obtiene un valor que indica el número de objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="a92c5-121">Gets a value indicating the number of objects in the collection.</span></span></summary>
        <value><span data-ttu-id="a92c5-122">Devuelve un valor <see cref="T:System.Int32" /> que indica el número de objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="a92c5-122">Returns an <see cref="T:System.Int32" /> value indicating the number of objects in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a92c5-123">Esta propiedad es muy cara, ya que requiere que se deben enumerar todos los miembros de la colección.</span><span class="sxs-lookup"><span data-stu-id="a92c5-123">This property is very expensive - it requires that all members of the collection be enumerated.</span></span>  
  
## <a name="property-value"></a><span data-ttu-id="a92c5-124">Valor de propiedad</span><span class="sxs-lookup"><span data-stu-id="a92c5-124">Property Value</span></span>  
 <span data-ttu-id="a92c5-125">Número de objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="a92c5-125">The number of objects in the collection.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="a92c5-126">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="a92c5-126">.NET Framework Security</span></span>  
 <span data-ttu-id="a92c5-127">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="a92c5-127">Full trust for the immediate caller.</span></span> <span data-ttu-id="a92c5-128">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="a92c5-128">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="a92c5-129">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="a92c5-129">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="managementObjectCollection.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a92c5-130">Libera los recursos asociados a este objeto.</span><span class="sxs-lookup"><span data-stu-id="a92c5-130">Releases resources associated with this object.</span></span> <span data-ttu-id="a92c5-131">Tras llamar a este método, cuando se intenta utilizar este objeto, se produce una excepción <see cref="T:System.ObjectDisposedException" />.</span><span class="sxs-lookup"><span data-stu-id="a92c5-131">After this method has been called, an attempt to use this object will result in an <see cref="T:System.ObjectDisposedException" /> being thrown.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="a92c5-132">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="a92c5-132">.NET Framework Security</span></span>  
 <span data-ttu-id="a92c5-133">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="a92c5-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="a92c5-134">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="a92c5-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="a92c5-135">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="a92c5-135">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IDisposable.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementObjectCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementObjectCollection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="managementObjectCollection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a92c5-136">Se deshace de los recursos que mantiene el objeto.</span><span class="sxs-lookup"><span data-stu-id="a92c5-136">Disposes of resources the object is holding.</span></span> <span data-ttu-id="a92c5-137">Es el destructor del objeto.</span><span class="sxs-lookup"><span data-stu-id="a92c5-137">This is the destructor for the object.</span></span> <span data-ttu-id="a92c5-138">Los finalizadores se expresan mediante la sintaxis del destructor.</span><span class="sxs-lookup"><span data-stu-id="a92c5-138">Finalizers are expressed using destructor syntax.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="a92c5-139">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="a92c5-139">.NET Framework Security</span></span>  
 <span data-ttu-id="a92c5-140">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="a92c5-140">Full trust for the immediate caller.</span></span> <span data-ttu-id="a92c5-141">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="a92c5-141">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="a92c5-142">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="a92c5-142">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection.ManagementObjectEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection/ManagementObjectEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As ManagementObjectCollection.ManagementObjectEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection::ManagementObjectEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Management.ManagementObjectCollection.ManagementObjectEnumerator" Usage="managementObjectCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection+ManagementObjectEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a92c5-143">Devuelve el enumerador de la colección.</span><span class="sxs-lookup"><span data-stu-id="a92c5-143">Returns the enumerator for the collection.</span></span></summary>
        <returns><span data-ttu-id="a92c5-144"><see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="a92c5-144">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a92c5-145">Solo puede recorrer en iteración (como en Visual Basic .NET `For Each` instrucción o C# `For` instrucción) a través de un enumerador de avance y solo una vez.</span><span class="sxs-lookup"><span data-stu-id="a92c5-145">You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time.</span></span> <span data-ttu-id="a92c5-146">Se libera la memoria que contiene las instancias de WMI para que no se podrá rebobinar el enumerador.</span><span class="sxs-lookup"><span data-stu-id="a92c5-146">The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</span></span> <span data-ttu-id="a92c5-147">Por lo tanto, el <xref:System.Management.ManagementObjectCollection.Count%2A> no se puede utilizar el método puesto que requiere un retroceso del enumerador.</span><span class="sxs-lookup"><span data-stu-id="a92c5-147">Therefore, the <xref:System.Management.ManagementObjectCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.</span></span>  
  
 <span data-ttu-id="a92c5-148">Enumeradores de sólo avance son generalmente mucho más rápidos y utilizan menos memoria que los enumeradores convencionales, pero no permiten las llamadas a <xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="a92c5-148">Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to  <xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A>.</span></span>  
  
 <span data-ttu-id="a92c5-149">Si un enumerador es susceptible de retroceso, los objetos de la colección se mantendrán disponibles para varias enumeraciones.</span><span class="sxs-lookup"><span data-stu-id="a92c5-149">If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="a92c5-150">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="a92c5-150">.NET Framework Security</span></span>  
 <span data-ttu-id="a92c5-151">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="a92c5-151">Full trust for the immediate caller.</span></span> <span data-ttu-id="a92c5-152">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="a92c5-152">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="a92c5-153">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="a92c5-153">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementObjectCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Management.ManagementObjectCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a92c5-154">Obtiene un valor que indica si el objeto está sincronizado.</span><span class="sxs-lookup"><span data-stu-id="a92c5-154">Gets a value indicating whether the object is synchronized.</span></span></summary>
        <value><span data-ttu-id="a92c5-155">Devuelve un valor <see cref="T:System.Boolean" /> que indica si el objeto está sincronizado.</span><span class="sxs-lookup"><span data-stu-id="a92c5-155">Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="a92c5-156">Valor de propiedad</span><span class="sxs-lookup"><span data-stu-id="a92c5-156">Property Value</span></span>  
 <span data-ttu-id="a92c5-157">`true`, si el objeto está sincronizado; en caso contrario `false`.</span><span class="sxs-lookup"><span data-stu-id="a92c5-157">`true`, if the object is synchronized, otherwise `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="a92c5-158">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="a92c5-158">.NET Framework Security</span></span>  
 <span data-ttu-id="a92c5-159">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="a92c5-159">Full trust for the immediate caller.</span></span> <span data-ttu-id="a92c5-160">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="a92c5-160">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="a92c5-161">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="a92c5-161">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementObjectCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Management.ManagementObjectCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a92c5-162">Obtiene el objeto que se utilizará para la sincronización.</span><span class="sxs-lookup"><span data-stu-id="a92c5-162">Gets the object to be used for synchronization.</span></span></summary>
        <value><span data-ttu-id="a92c5-163">Devuelve un valor <see cref="T:System.Object" /> que representa el objeto que se va a utilizar para la sincronización.</span><span class="sxs-lookup"><span data-stu-id="a92c5-163">Returns an <see cref="T:System.Object" /> value that represents the object to be used for synchronization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="a92c5-164">Valor de propiedad</span><span class="sxs-lookup"><span data-stu-id="a92c5-164">Property Value</span></span>  
 <span data-ttu-id="a92c5-165">El objeto que se usará para la sincronización.</span><span class="sxs-lookup"><span data-stu-id="a92c5-165">The object to be used for synchronization.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="a92c5-166">Seguridad de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="a92c5-166">.NET Framework Security</span></span>  
 <span data-ttu-id="a92c5-167">Plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="a92c5-167">Full trust for the immediate caller.</span></span> <span data-ttu-id="a92c5-168">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="a92c5-168">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="a92c5-169">Para obtener más información, consulte [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="a92c5-169">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a92c5-170">Devuelve un objeto <see cref="T:System.Collections.IEnumerator" /> que itera a través del objeto <see cref="T:System.Management.ManagementObjectCollection" />.</span><span class="sxs-lookup"><span data-stu-id="a92c5-170">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.ManagementObjectCollection" />.</span></span></summary>
        <returns><span data-ttu-id="a92c5-171">Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.Management.ManagementObjectCollection" />.</span><span class="sxs-lookup"><span data-stu-id="a92c5-171">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.ManagementObjectCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a92c5-172">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="a92c5-172">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="a92c5-173">La instrucción `foreach` del lenguaje C# (`for each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="a92c5-173">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="a92c5-174">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="a92c5-174">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="a92c5-175">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="a92c5-175">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="a92c5-176">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="a92c5-176">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="a92c5-177"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="a92c5-177"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="a92c5-178">En esta posición, una llamada a <xref:System.Collections.IEnumerator.Current%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="a92c5-178">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="a92c5-179">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="a92c5-179">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="a92c5-180"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="a92c5-180"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="a92c5-181"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="a92c5-181"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="a92c5-182">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="a92c5-182">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="a92c5-183">Cuando el enumerador está en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="a92c5-183">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="a92c5-184">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, al llamar a <xref:System.Collections.IEnumerator.Current%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="a92c5-184">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="a92c5-185">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="a92c5-185">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="a92c5-186">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="a92c5-186">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="a92c5-187">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda invalida invalidado y la siguiente llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="a92c5-187">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="a92c5-188">Si la colección se modifica entre <xref:System.Collections.IEnumerator.MoveNext%2A> y <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> devuelve el elemento que está establecido, incluso si el enumerador ya se ha invalidado.</span><span class="sxs-lookup"><span data-stu-id="a92c5-188">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="a92c5-189">La enumeración en una colección no es un procedimiento seguro para subprocesos ya que el enumerador carece de acceso exclusivo.</span><span class="sxs-lookup"><span data-stu-id="a92c5-189">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="a92c5-190">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="a92c5-190">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a92c5-191">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a92c5-191">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="a92c5-192">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="a92c5-192">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="EventProviderTraceListener" FullName="System.Diagnostics.Eventing.EventProviderTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc3a536032ad30455f71a24acfb91451082f02ea" /><Meta Name="ms.sourcegitcommit" Value="ddce15914650a504a7399d539ac1f7cfed3c2caa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/07/2019" /><Meta Name="ms.locfileid" Value="66759786" /></Metadata><TypeSignature Language="C#" Value="public class EventProviderTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventProviderTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.EventProviderTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class EventProviderTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventProviderTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type EventProviderTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2be3d-101">Agente de escucha de <see cref="T:System.Diagnostics.TraceSource" /> que escribe los eventos en el subsistema ETW.</span><span class="sxs-lookup"><span data-stu-id="2be3d-101">A listener for <see cref="T:System.Diagnostics.TraceSource" /> that writes events to the ETW subsystem.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2be3d-102">Todos los datos del evento (trace o debug) del evento de origen se escribe en el subsistema ETW como una cadena.</span><span class="sxs-lookup"><span data-stu-id="2be3d-102">All event data (trace or debug) from the source event is written to the ETW subsystem as a string.</span></span> <span data-ttu-id="2be3d-103">Los elementos de datos se delimitan mediante una coma.</span><span class="sxs-lookup"><span data-stu-id="2be3d-103">The data elements are delimited using a comma.</span></span> <span data-ttu-id="2be3d-104">Para especificar un delimitador distinto, use el <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="2be3d-104">To specify a different delimiter, use the <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A> property.</span></span>  
  
 <span data-ttu-id="2be3d-105">Agregar el agente de escucha <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> registra el proveedor con el subsistema ETW.</span><span class="sxs-lookup"><span data-stu-id="2be3d-105">Adding the listener to <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> registers the provider with the ETW subsystem.</span></span> <span data-ttu-id="2be3d-106">Debe crear una sesión de seguimiento ETW mediante el programa ejecutable Logman.exe (o similar) para escribir los eventos en un archivo de registro.</span><span class="sxs-lookup"><span data-stu-id="2be3d-106">You must create an ETW trace session using the Logman.exe executable program (or something similar) to write the events to a log file.</span></span>  
  
 <span data-ttu-id="2be3d-107">No es necesario un manifiesto para consumir eventos desde el agente de escucha porque los datos del evento están una sola cadena.</span><span class="sxs-lookup"><span data-stu-id="2be3d-107">You do not need a manifest to consume events from the listener because the event data is a single string.</span></span>  
  
 <span data-ttu-id="2be3d-108">Cuando se llama a la <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> métodos para escribir los eventos, pasa un <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> valor de enumeración.</span><span class="sxs-lookup"><span data-stu-id="2be3d-108">When you call the <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> methods to write events, you pass a <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration value.</span></span> <span data-ttu-id="2be3d-109">La enumeración contiene valores de nivel y palabra clave.</span><span class="sxs-lookup"><span data-stu-id="2be3d-109">The enumeration contains both level and keyword values.</span></span> <span data-ttu-id="2be3d-110">Al habilitar un proveedor de agente de escucha de seguimiento desde una sesión de ETW, el valor del nivel que especifique puede ser el valor asociado a uno de los siguientes <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> valores de enumeración:</span><span class="sxs-lookup"><span data-stu-id="2be3d-110">When you enable a trace listener provider from an ETW session, the level value that you specify can be the value associated with one of the following <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration values:</span></span>  
  
-   <span data-ttu-id="2be3d-111">Crítico (el valor es 1)</span><span class="sxs-lookup"><span data-stu-id="2be3d-111">Critical (value is 1)</span></span>  
  
-   <span data-ttu-id="2be3d-112">Error (el valor es 2)</span><span class="sxs-lookup"><span data-stu-id="2be3d-112">Error (value is 2)</span></span>  
  
-   <span data-ttu-id="2be3d-113">Información (el valor es 8)</span><span class="sxs-lookup"><span data-stu-id="2be3d-113">Information (value is 8)</span></span>  
  
-   <span data-ttu-id="2be3d-114">Verbose (el valor es 16)</span><span class="sxs-lookup"><span data-stu-id="2be3d-114">Verbose (value is 16)</span></span>  
  
-   <span data-ttu-id="2be3d-115">Advertencia (valor es 4)</span><span class="sxs-lookup"><span data-stu-id="2be3d-115">Warning (value is 4)</span></span>  
  
 <span data-ttu-id="2be3d-116">El valor de palabra clave que especifique para la sesión puede ser el valor asociado a uno de los siguientes <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> valores de enumeración:</span><span class="sxs-lookup"><span data-stu-id="2be3d-116">The keyword value that you specify for the session can be the value associated with one of the following <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration values:</span></span>  
  
-   <span data-ttu-id="2be3d-117">Resume (el valor es de 2048)</span><span class="sxs-lookup"><span data-stu-id="2be3d-117">Resume (value is 2,048)</span></span>  
  
-   <span data-ttu-id="2be3d-118">Iniciar (el valor es 256)</span><span class="sxs-lookup"><span data-stu-id="2be3d-118">Start (value is 256)</span></span>  
  
-   <span data-ttu-id="2be3d-119">Detener (el valor es 512)</span><span class="sxs-lookup"><span data-stu-id="2be3d-119">Stop (value is 512)</span></span>  
  
-   <span data-ttu-id="2be3d-120">Suspender (el valor es 1.024)</span><span class="sxs-lookup"><span data-stu-id="2be3d-120">Suspend (value is 1,024)</span></span>  
  
-   <span data-ttu-id="2be3d-121">Transferir (el valor es 4.096)</span><span class="sxs-lookup"><span data-stu-id="2be3d-121">Transfer (value is 4,096)</span></span>  
  
   
  
## Examples  
  
```csharp  
private static Guid providerId = new Guid("{B3F0C8FC-E8A8-4868-8901-1465E8A2F41B}");  
  
    EventProviderTraceListener listener = new EventProviderTraceListener(providerId.ToString(), "Test Listener", "::");  
  
    // You should use the All default level and control the level using the  
    // ETW session; otherwise, you may not log all the events requested by the  
    // session.  
    TraceSource source = new TraceSource("MyProvider", SourceLevels.All);  
  
    source.Listeners.Add(listener);  
  
    source.TraceData(TraceEventType.Warning | TraceEventType.Start, 2, new object[] { "abc", "def", true, 123 });  
  
    source.TraceEvent(TraceEventType.Warning, 12, "Provider guid: {0}", new object[] { providerId });  
  
    source.TraceInformation("string {0}, bool {1}, int {2}, ushort {3}", new object[] { "abc", false, 123, (UInt32)5 });  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2be3d-122">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="2be3d-122">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.EventProviderTraceListener : string -&gt; System.Diagnostics.Eventing.EventProviderTraceListener" Usage="new System.Diagnostics.Eventing.EventProviderTraceListener providerId" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId"><span data-ttu-id="2be3d-123"><see cref="T:System.Guid" /> de cadena único que identifica al proveedor.</span><span class="sxs-lookup"><span data-stu-id="2be3d-123">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span></span></param>
        <summary><span data-ttu-id="2be3d-124">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> utilizando el identificador de proveedor especificado.</span><span class="sxs-lookup"><span data-stu-id="2be3d-124">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.EventProviderTraceListener : string * string -&gt; System.Diagnostics.Eventing.EventProviderTraceListener" Usage="new System.Diagnostics.Eventing.EventProviderTraceListener (providerId, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId"><span data-ttu-id="2be3d-125"><see cref="T:System.Guid" /> de cadena único que identifica al proveedor.</span><span class="sxs-lookup"><span data-stu-id="2be3d-125">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span></span></param>
        <param name="name"><span data-ttu-id="2be3d-126">Nombre del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="2be3d-126">Name of the listener.</span></span></param>
        <summary><span data-ttu-id="2be3d-127">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> mediante el identificador de proveedor y el nombre del agente de escucha especificados.</span><span class="sxs-lookup"><span data-stu-id="2be3d-127">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier and name of the listener.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId, string name, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId, string name, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String, name As String, delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId, System::String ^ name, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.EventProviderTraceListener : string * string * string -&gt; System.Diagnostics.Eventing.EventProviderTraceListener" Usage="new System.Diagnostics.Eventing.EventProviderTraceListener (providerId, name, delimiter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId"><span data-ttu-id="2be3d-128"><see cref="T:System.Guid" /> de cadena único que identifica al proveedor.</span><span class="sxs-lookup"><span data-stu-id="2be3d-128">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span></span></param>
        <param name="name"><span data-ttu-id="2be3d-129">Nombre del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="2be3d-129">Name of the listener.</span></span></param>
        <param name="delimiter"><span data-ttu-id="2be3d-130">Delimitador utilizado para delimitar los datos de evento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-130">Delimiter used to delimit the event data.</span></span> <span data-ttu-id="2be3d-131">(Para obtener más detalles, consulte la propiedad <see cref="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />.)</span><span class="sxs-lookup"><span data-stu-id="2be3d-131">(For more details, see the <see cref="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" /> property.)</span></span></param>
        <summary><span data-ttu-id="2be3d-132">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> mediante el identificador de proveedor, el nombre del agente de escucha y el delimitador especificados.</span><span class="sxs-lookup"><span data-stu-id="2be3d-132">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier, name of the listener, and delimiter.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="eventProviderTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2be3d-133">Cierra el flujo de salida para que ya no reciba resultados de la traza o de la depuración.</span><span class="sxs-lookup"><span data-stu-id="2be3d-133">Closes the output stream so it no longer receives tracing or debugging output.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2be3d-134">Obtiene o establece el delimitador usado para delimitar los datos de eventos que se escriben en el subsistema ETW.</span><span class="sxs-lookup"><span data-stu-id="2be3d-134">Gets or sets the delimiter used to delimit the event data that is written to the ETW subsystem.</span></span></summary>
        <value><span data-ttu-id="2be3d-135">Delimitador utilizado para delimitar los datos de evento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-135">The delimiter used to delimit the event data.</span></span> <span data-ttu-id="2be3d-136">El delimitador predeterminado es una coma.</span><span class="sxs-lookup"><span data-stu-id="2be3d-136">The default delimiter is a comma.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2be3d-137">El agente de escucha convierte los elementos de datos en cadenas y, a continuación, concatena las cadenas, utilizando el delimitador especificado para delimitar cada elemento de datos de la cadena.</span><span class="sxs-lookup"><span data-stu-id="2be3d-137">The listener converts the data elements to strings and then concatenates the strings together, using the specified delimiter to delimit each data element in the string.</span></span> <span data-ttu-id="2be3d-138">La cadena, a continuación, se escribe como los datos del evento en el subsistema ETW.</span><span class="sxs-lookup"><span data-stu-id="2be3d-138">The string is then written as the event data in the ETW subsystem.</span></span>  
  
 <span data-ttu-id="2be3d-139">Para analizar correctamente la cadena, el consumidor debe conocer el delimitador que se usó.</span><span class="sxs-lookup"><span data-stu-id="2be3d-139">To successfully parse the string, the consumer must know the delimiter that was used.</span></span>  
  
 <span data-ttu-id="2be3d-140">Si los datos contienen una cadena que puede contener una coma, especificar un delimitador adecuado, de modo que se pueden analizar correctamente los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-140">If the data contains a string that may contain a comma, specify an appropriate delimiter, so that the event data can be correctly parsed.</span></span>  
  
 <span data-ttu-id="2be3d-141">No es necesario un manifiesto para consumir eventos desde el agente de escucha porque los datos del evento están una sola cadena.</span><span class="sxs-lookup"><span data-stu-id="2be3d-141">You do not need a manifest to consume events from the listener because the event data is a single string.</span></span>  
  
 <span data-ttu-id="2be3d-142">El delimitador se aplica a los datos de evento escritos mediante la <xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="2be3d-142">The delimiter applies to event data written using the <xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="override this.Fail : string * string -&gt; unit" Usage="eventProviderTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="2be3d-143">Mensaje que se va a emitir.</span><span class="sxs-lookup"><span data-stu-id="2be3d-143">A message to emit.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="2be3d-144">Mensaje detallado que se va a emitir.</span><span class="sxs-lookup"><span data-stu-id="2be3d-144">A detailed message to emit.</span></span></param>
        <summary><span data-ttu-id="2be3d-145">Emite un mensaje de error y un mensaje de error detallado para el agente de escucha que se crea al implementar la clase <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="2be3d-145">Emits an error message and a detailed error message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override sealed void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="eventProviderTraceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2be3d-146">Vacía el búfer de salida.</span><span class="sxs-lookup"><span data-stu-id="2be3d-146">Flushes the output buffer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="override this.GetSupportedAttributes : unit -&gt; string[]" Usage="eventProviderTraceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2be3d-147">Obtiene los atributos personalizados admitidos por el agente de escucha de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-147">Gets the custom attributes supported by the trace listener.</span></span></summary>
        <returns><span data-ttu-id="2be3d-148">Una matriz de cadena que denomina los atributos personalizados admitidos por el agente de escucha de seguimiento, o bien, <see langword="null" /> si no hay ningún atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="2be3d-148">A string array naming the custom attributes supported by the trace listener, or <see langword="null" /> if there are no custom attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IsThreadSafe">
      <MemberSignature Language="C#" Value="public override sealed bool IsThreadSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadSafe" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property IsThreadSafe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsThreadSafe { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsThreadSafe : bool" Usage="System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2be3d-149">Obtiene un valor que indica si el agente de escucha de seguimiento es seguro para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="2be3d-149">Gets a value indicating whether the trace listener is thread safe.</span></span></summary>
        <value><span data-ttu-id="2be3d-150">Es <see langword="true" /> si el agente de escucha de seguimiento es seguro para la ejecución de subprocesos; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2be3d-150"><see langword="true" /> if the trace listener is thread safe; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2be3d-151">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2be3d-151">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Diagnostics.TraceListener.IsThreadSafe" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="eventProviderTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="2be3d-152">Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</span><span class="sxs-lookup"><span data-stu-id="2be3d-152">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="2be3d-153">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-153">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="2be3d-154">Uno de los valores de <see cref="T:System.Diagnostics.TraceEventType" /> que indican el tipo de evento que provocó el seguimiento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-154">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="2be3d-155">Identificador numérico para el evento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-155">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="2be3d-156">Información de seguimiento que se va a emitir.</span><span class="sxs-lookup"><span data-stu-id="2be3d-156">The trace data to emit.</span></span></param>
        <summary><span data-ttu-id="2be3d-157">Escribe la información de seguimiento, un objeto de datos y la información de evento en los resultados específicos del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="2be3d-157">Writes trace information, a data object and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="eventProviderTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="2be3d-158">Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</span><span class="sxs-lookup"><span data-stu-id="2be3d-158">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="2be3d-159">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-159">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="2be3d-160">Uno de los valores de <see cref="T:System.Diagnostics.TraceEventType" /> que indican el tipo de evento que provocó el seguimiento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-160">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="2be3d-161">Identificador numérico para el evento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-161">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="2be3d-162">Matriz de objetos que se van a emitir como datos.</span><span class="sxs-lookup"><span data-stu-id="2be3d-162">An array of objects to emit as data.</span></span></param>
        <summary><span data-ttu-id="2be3d-163">Escribe la información de seguimiento, un objeto de datos y la información de evento en los resultados específicos del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="2be3d-163">Writes trace information, a data object and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int -&gt; unit" Usage="eventProviderTraceListener.TraceEvent (eventCache, source, eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="2be3d-164">Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</span><span class="sxs-lookup"><span data-stu-id="2be3d-164">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="2be3d-165">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-165">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="2be3d-166">Uno de los valores de <see cref="T:System.Diagnostics.TraceEventType" /> que indican el tipo de evento que provocó el seguimiento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-166">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="2be3d-167">Identificador numérico para el evento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-167">A numeric identifier for the event.</span></span></param>
        <summary><span data-ttu-id="2be3d-168">Escribe la información de seguimiento y de evento en los resultados específicos del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="2be3d-168">Writes trace and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="eventProviderTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="2be3d-169">Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</span><span class="sxs-lookup"><span data-stu-id="2be3d-169">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="2be3d-170">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-170">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="2be3d-171">Uno de los valores de <see cref="T:System.Diagnostics.TraceEventType" /> que indican el tipo de evento que provocó el seguimiento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-171">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="2be3d-172">Identificador numérico para el evento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-172">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="2be3d-173">Mensaje que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="2be3d-173">A message to write.</span></span></param>
        <summary><span data-ttu-id="2be3d-174">Escribe la información de seguimiento, un mensaje y la información de evento en los resultados específicos del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="2be3d-174">Writes trace information, a message, and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="eventProviderTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="2be3d-175">Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</span><span class="sxs-lookup"><span data-stu-id="2be3d-175">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="2be3d-176">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-176">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="2be3d-177">Uno de los valores de <see cref="T:System.Diagnostics.TraceEventType" /> que indican el tipo de evento que provocó el seguimiento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-177">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="2be3d-178">Identificador numérico para el evento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-178">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="2be3d-179">Cadena de formato que contiene cero o más elementos de formato, que corresponden a objetos de la matriz <paramref name="args" />.</span><span class="sxs-lookup"><span data-stu-id="2be3d-179">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="2be3d-180">Matriz de <see langword="object" /> que contiene cero o más objetos a los que se va a dar formato.</span><span class="sxs-lookup"><span data-stu-id="2be3d-180">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="2be3d-181">Escribe la información de seguimiento, una matriz de objetos con formato y la información de evento en los resultados específicos del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="2be3d-181">Writes trace information, a formatted array of objects and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override sealed void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="eventProviderTraceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="2be3d-182">Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</span><span class="sxs-lookup"><span data-stu-id="2be3d-182">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="2be3d-183">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-183">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="id"><span data-ttu-id="2be3d-184">Identificador numérico para el evento.</span><span class="sxs-lookup"><span data-stu-id="2be3d-184">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="2be3d-185">Mensaje que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="2be3d-185">A message to write.</span></span></param>
        <param name="relatedActivityId"><span data-ttu-id="2be3d-186">Objeto <see cref="T:System.Guid" /> que identifica una actividad relacionada.</span><span class="sxs-lookup"><span data-stu-id="2be3d-186">A <see cref="T:System.Guid" /> object identifying a related activity.</span></span></param>
        <summary><span data-ttu-id="2be3d-187">Escribe la información de seguimiento, un mensaje, una identidad de actividad relacionada y la información de evento en los resultados específicos del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="2be3d-187">Writes trace information, a message, a related activity identity and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override sealed void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="eventProviderTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="2be3d-188">Mensaje que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="2be3d-188">A message to write.</span></span></param>
        <summary><span data-ttu-id="2be3d-189">Cuando se reemplaza en una clase derivada, escribe el mensaje especificado en el agente de escucha que se crea en la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2be3d-189">When overridden in a derived class, writes the specified message to the listener you create in the derived class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override sealed void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="eventProviderTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="2be3d-190">Mensaje que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="2be3d-190">A message to write.</span></span></param>
        <summary><span data-ttu-id="2be3d-191">Cuando se reemplaza en una clase derivada, escribe un mensaje en el agente de escucha que se crea en la clase derivada, seguido de un terminador de línea.</span><span class="sxs-lookup"><span data-stu-id="2be3d-191">When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
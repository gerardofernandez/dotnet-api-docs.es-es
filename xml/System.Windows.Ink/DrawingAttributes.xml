<Type Name="DrawingAttributes" FullName="System.Windows.Ink.DrawingAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f7a1e489ff809c0e5409f626e627d31f16c4a6c" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52594809" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DrawingAttributes : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawingAttributes extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.DrawingAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawingAttributes&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawingAttributes : System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type DrawingAttributes = class&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="da916-101">Especifica el aspecto de un elemento <see cref="T:System.Windows.Ink.Stroke" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="da916-101">Specifies the appearance of a <see cref="T:System.Windows.Ink.Stroke" /></span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-102">Use la <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> propiedad para especificar la configuración, como el color, ancho, transparencia y la forma de la punta del lápiz para un <xref:System.Windows.Ink.Stroke>.</span><span class="sxs-lookup"><span data-stu-id="da916-102">Use the <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property to specify settings such as color, width, transparency, and the shape of the stylus tip for a <xref:System.Windows.Ink.Stroke>.</span></span>  
  
 <span data-ttu-id="da916-103">Use la <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> propiedad para especificar los atributos de dibujo de los trazos que se agregan a un <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="da916-103">Use the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> property to specify the drawing attributes for the strokes added to an <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="da916-104">Sólo los trazos que se agregan después de la <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> cambio show se someten a los atributos actualizados.</span><span class="sxs-lookup"><span data-stu-id="da916-104">Only strokes that are added after the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> undergo change show the updated attributes.</span></span> <span data-ttu-id="da916-105">La apariencia de los trazos que ya están en el <xref:System.Windows.Controls.InkCanvas> no cambia.</span><span class="sxs-lookup"><span data-stu-id="da916-105">The appearance of the strokes that are already on the <xref:System.Windows.Controls.InkCanvas> does not change.</span></span>  
  
 <span data-ttu-id="da916-106">Para obtener una lista con los valores de propiedad iniciales de una instancia de la clase <xref:System.Windows.Ink.DrawingAttributes>, vea el constructor <xref:System.Windows.Ink.DrawingAttributes>.</span><span class="sxs-lookup"><span data-stu-id="da916-106">For a list of initial property values for an instance of the <xref:System.Windows.Ink.DrawingAttributes> class, see the <xref:System.Windows.Ink.DrawingAttributes> constructor.</span></span>  
  
<a name="xamlTextUsage_DrawingAttributes"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="da916-107">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="da916-107">XAML Text Usage</span></span>  
 <span data-ttu-id="da916-108">Esta clase no se usa normalmente en XAML.</span><span class="sxs-lookup"><span data-stu-id="da916-108">This class is not typically used in XAML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-109">En el ejemplo siguiente se muestra cómo utilizar dos <xref:System.Windows.Ink.DrawingAttributes> objetos para simular con un lápiz y un marcador de resaltado en la misma <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="da916-109">The following example demonstrates how to use two <xref:System.Windows.Ink.DrawingAttributes> objects to simulate using a pen and a highlighter on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="da916-110">En el ejemplo se da por supuesto que el elemento raíz en el archivo XAML es un <xref:System.Windows.Controls.DockPanel> llamado `root`.</span><span class="sxs-lookup"><span data-stu-id="da916-110">The example assumes the root element in the XAML file is a <xref:System.Windows.Controls.DockPanel> called `root`.</span></span> <span data-ttu-id="da916-111">También se supone que hay un <xref:System.Windows.Controls.Button> llamado `switchHighlighter` y que el <xref:System.Windows.Controls.Primitives.ButtonBase.Click> evento está conectado al controlador de eventos definido en este ejemplo.</span><span class="sxs-lookup"><span data-stu-id="da916-111">It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHighlighter` and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event is connected to the event handler defined in this example.</span></span>  
  
 [!code-csharp[DrawingAttributes#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#3)]
 [!code-vb[DrawingAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawingAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawingAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da916-112">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Ink.DrawingAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-112">Initializes a new instance of the <see cref="T:System.Windows.Ink.DrawingAttributes" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-113">En la siguiente tabla se muestran los valores iniciales de las propiedades de una instancia de la clase <xref:System.Windows.Ink.DrawingAttributes>.</span><span class="sxs-lookup"><span data-stu-id="da916-113">The following table shows initial property values for an instance of the <xref:System.Windows.Ink.DrawingAttributes> class.</span></span>  
  
|<span data-ttu-id="da916-114">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="da916-114">Property</span></span>|<span data-ttu-id="da916-115">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="da916-115">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Windows.Ink.DrawingAttributes.Color%2A>|<span data-ttu-id="da916-116">Negro</span><span class="sxs-lookup"><span data-stu-id="da916-116">Black</span></span>|  
|<xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>|`false`|  
|<xref:System.Windows.Ink.DrawingAttributes.Height%2A>|<span data-ttu-id="da916-117">2 píxeles independientes del dispositivo (DIP)</span><span class="sxs-lookup"><span data-stu-id="da916-117">2 device independent pixels (DIP)</span></span>|  
|<xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>|`false`|  
|<xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>|`false`|  
|<xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>|<xref:System.Windows.Ink.StylusTip.Ellipse?displayProperty=nameWithType>|  
|<xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>|<xref:System.Windows.Media.Matrix.Identity%2A?displayProperty=nameWithType>|  
|<xref:System.Windows.Ink.DrawingAttributes.Width%2A>|<span data-ttu-id="da916-118">DIP 2</span><span class="sxs-lookup"><span data-stu-id="da916-118">2 DIP</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyData">
      <MemberSignature Language="C#" Value="public void AddPropertyData (Guid propertyDataId, object propertyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPropertyData(valuetype System.Guid propertyDataId, object propertyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyData (propertyDataId As Guid, propertyData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyData(Guid propertyDataId, System::Object ^ propertyData);" />
      <MemberSignature Language="F#" Value="member this.AddPropertyData : Guid * obj -&gt; unit" Usage="drawingAttributes.AddPropertyData (propertyDataId, propertyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
        <Parameter Name="propertyData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">
          <span data-ttu-id="da916-119">
            <see cref="T:System.Guid" /> que se va a asociar a la propiedad personalizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-119">The <see cref="T:System.Guid" /> to associate with the custom property.</span>
          </span>
        </param>
        <param name="propertyData">
          <span data-ttu-id="da916-120">Valor de la propiedad personalizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-120">The value of the custom property.</span>
          </span>
          <span data-ttu-id="da916-121">
            <paramref name="propertyData" /> debe ser de tipo <see cref="T:System.Char" />, <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, <see cref="T:System.UInt32" />, <see cref="T:System.Int64" />, <see cref="T:System.UInt64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.DateTime" />, <see cref="T:System.Boolean" />, <see cref="T:System.String" />, <see cref="T:System.Decimal" /> o una matriz de estos tipos de datos; sin embargo, no puede ser una matriz de tipo <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-121">
              <paramref name="propertyData" /> must be of type <see cref="T:System.Char" />, <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, <see cref="T:System.UInt32" />, <see cref="T:System.Int64" />, <see cref="T:System.UInt64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.DateTime" />, <see cref="T:System.Boolean" />, <see cref="T:System.String" />, <see cref="T:System.Decimal" /> or an array of these data types; however it cannot be an array of type <see cref="T:System.String" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da916-122">Agrega una propiedad personalizada al objeto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-122">Adds a custom property to the <see cref="T:System.Windows.Ink.DrawingAttributes" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-123">El <xref:System.Windows.Ink.DrawingAttributes.AddPropertyData%2A> método le permite agregar propiedades personalizadas a un <xref:System.Windows.Ink.DrawingAttributes> objeto.</span><span class="sxs-lookup"><span data-stu-id="da916-123">The <xref:System.Windows.Ink.DrawingAttributes.AddPropertyData%2A> method enables you to add custom properties to a <xref:System.Windows.Ink.DrawingAttributes> object.</span></span> <span data-ttu-id="da916-124">Esto es útil cuando procesa sus propios trazos y desea proporcionar información adicional.</span><span class="sxs-lookup"><span data-stu-id="da916-124">This is useful when you render your own strokes and want to provide extra information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-125">En el ejemplo siguiente se muestra cómo agregar y recuperar una propiedad personalizada desde el <xref:System.Windows.Ink.DrawingAttributes> objeto.</span><span class="sxs-lookup"><span data-stu-id="da916-125">The following example demonstrates how to add and retrieve a custom property from the <xref:System.Windows.Ink.DrawingAttributes> object.</span></span> <span data-ttu-id="da916-126">El ejemplo agrega una propiedad que indica si el <xref:System.Windows.Ink.DrawingAttributes> objeto es un lápiz o un marcador de resaltado.</span><span class="sxs-lookup"><span data-stu-id="da916-126">The example adds a property that indicates whether the <xref:System.Windows.Ink.DrawingAttributes> object is a pen or a highlighter.</span></span> <span data-ttu-id="da916-127">El código en el `ChangeColors_Click` controlador de eventos presenta un nuevo color para los trazos en la <xref:System.Windows.Controls.InkCanvas> que usan el <xref:System.Windows.Ink.DrawingAttributes> objeto, `inkDA`.</span><span class="sxs-lookup"><span data-stu-id="da916-127">The code in the `ChangeColors_Click` event handler renders a new color for strokes on the <xref:System.Windows.Controls.InkCanvas> that use the <xref:System.Windows.Ink.DrawingAttributes> object, `inkDA`.</span></span> <span data-ttu-id="da916-128">En este ejemplo se supone que hay un <xref:System.Windows.Controls.InkCanvas> denominado `inkCanvas1`, y que hay dos <xref:System.Windows.Ink.DrawingAttributes> objetos denominados `inkDA`, y `highlighterDA.`</span><span class="sxs-lookup"><span data-stu-id="da916-128">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> named `inkCanvas1`, and that there are two <xref:System.Windows.Ink.DrawingAttributes> objects named `inkDA`, and `highlighterDA.`</span></span>  
  
 [!code-csharp[DrawingAttributes#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#5)]
 [!code-vb[DrawingAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da916-129">El valor de <paramref name="propertyData" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-129">
              <paramref name="propertyData" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da916-130">
            <paramref name="propertyDataId" /> es un <see cref="T:System.Guid" /> vacío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-130">
              <paramref name="propertyDataId" /> is an empty <see cref="T:System.Guid" />.</span>
          </span>
          <span data-ttu-id="da916-131">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-131">-or-</span>
          </span>
          <span data-ttu-id="da916-132">
            <paramref name="propertyData" /> no es ninguno de los tipos de datos permitidos que se muestran en la sección <see langword="Parameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-132">
              <paramref name="propertyData" /> is not one of the allowed data types listed in the <see langword="Parameters" /> section.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AttributeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.PropertyDataChangedEventHandler AttributeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.PropertyDataChangedEventHandler AttributeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.DrawingAttributes.AttributeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AttributeChanged As PropertyDataChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::PropertyDataChangedEventHandler ^ AttributeChanged;" />
      <MemberSignature Language="F#" Value="member this.AttributeChanged : System.Windows.Ink.PropertyDataChangedEventHandler " Usage="member this.AttributeChanged : System.Windows.Ink.PropertyDataChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.PropertyDataChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da916-133">Se produce cuando cambia una propiedad en el objeto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-133">Occurs when a property in the <see cref="T:System.Windows.Ink.DrawingAttributes" /> object changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="da916-134">El ejemplo siguiente se controla el <xref:System.Windows.Ink.DrawingAttributes.AttributeChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="da916-134">The following example handles the <xref:System.Windows.Ink.DrawingAttributes.AttributeChanged> event.</span></span> <span data-ttu-id="da916-135">En este ejemplo se supone que hay un <xref:System.Windows.Ink.DrawingAttributes> objeto llamado `inkDA` y que el <xref:System.Windows.Ink.DrawingAttributes.AttributeChanged> evento está conectado al controlador de eventos definido en este ejemplo.</span><span class="sxs-lookup"><span data-stu-id="da916-135">This example assumes that there is a <xref:System.Windows.Ink.DrawingAttributes> object called `inkDA` and that the <xref:System.Windows.Ink.DrawingAttributes.AttributeChanged> event is connected to the event handler defined in this example.</span></span>  
  
 [!code-csharp[DrawingAttributes#6](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#6)]
 [!code-vb[DrawingAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Ink.DrawingAttributes Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Ink.DrawingAttributes Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As DrawingAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Ink::DrawingAttributes ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Windows.Ink.DrawingAttributes&#xA;override this.Clone : unit -&gt; System.Windows.Ink.DrawingAttributes" Usage="drawingAttributes.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da916-136">Copia el objeto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-136">Copies the <see cref="T:System.Windows.Ink.DrawingAttributes" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da916-137">Copia del objeto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-137">A copy of the <see cref="T:System.Windows.Ink.DrawingAttributes" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-138">El <xref:System.Windows.Ink.DrawingAttributes.Clone%2A> crea un nuevo método <xref:System.Windows.Ink.DrawingAttributes> objeto y lo rellena con los mismos valores que el objeto actual.</span><span class="sxs-lookup"><span data-stu-id="da916-138">The <xref:System.Windows.Ink.DrawingAttributes.Clone%2A> method creates a new <xref:System.Windows.Ink.DrawingAttributes> object and populates it with the same values as the current object.</span></span> <span data-ttu-id="da916-139">También se copian todas las propiedades personalizadas.</span><span class="sxs-lookup"><span data-stu-id="da916-139">Any custom properties are also copied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-140">En el ejemplo siguiente se muestra cómo copiar un <xref:System.Windows.Ink.DrawingAttributes> objeto.</span><span class="sxs-lookup"><span data-stu-id="da916-140">The following example demonstrates how to copy a <xref:System.Windows.Ink.DrawingAttributes> object.</span></span>  
  
 [!code-csharp[DrawingAttributes#8](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#8)]
 [!code-vb[DrawingAttributes#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Color Color { System::Windows::Media::Color get(); void set(System::Windows::Media::Color value); };" />
      <MemberSignature Language="F#" Value="member this.Color : System.Windows.Media.Color with get, set" Usage="System.Windows.Ink.DrawingAttributes.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da916-141">Obtiene o establece el color de un objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-141">Gets or sets the color of a <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da916-142">Color de un objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-142">The color of a <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_Color"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="da916-143">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="da916-143">XAML Text Usage</span></span>  
 <span data-ttu-id="da916-144">Esta propiedad no se utiliza normalmente en XAML.</span><span class="sxs-lookup"><span data-stu-id="da916-144">This property is not typically used in XAML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-145">En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Ink.DrawingAttributes.Color%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="da916-145">The following example demonstrates how to set the <xref:System.Windows.Ink.DrawingAttributes.Color%2A> property.</span></span> <span data-ttu-id="da916-146">El ejemplo se supone que la aplicación tiene un <xref:System.Windows.Controls.InkCanvas> llamado `inkCanvas1`y dos <xref:System.Windows.Ink.DrawingAttributes> objetos denominados `inkDA` y `highlighterDA`.</span><span class="sxs-lookup"><span data-stu-id="da916-146">The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`.</span></span> <span data-ttu-id="da916-147">Para obtener un ejemplo completo, vea el <xref:System.Windows.Ink.DrawingAttributes> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="da916-147">For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.</span></span>  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPropertyData">
      <MemberSignature Language="C#" Value="public bool ContainsPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.ContainsPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsPropertyData (propertyDataId As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsPropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.ContainsPropertyData : Guid -&gt; bool" Usage="drawingAttributes.ContainsPropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">
          <span data-ttu-id="da916-148">
            <see cref="T:System.Guid" /> que se va a buscar en el objeto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-148">The <see cref="T:System.Guid" /> to locate in the <see cref="T:System.Windows.Ink.DrawingAttributes" /> object .</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da916-149">Devuelve un valor que indica si el identificador de datos de propiedad especificado está definido en el objeto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-149">Returns a value that indicates whether the specified property data identifier is in the <see cref="T:System.Windows.Ink.DrawingAttributes" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da916-150">Es <see langword="true" /> si el identificador de datos de propiedad especificado está en el objeto <see cref="T:System.Windows.Ink.DrawingAttributes" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-150">
              <see langword="true" /> if the specified property data identifier is in the <see cref="T:System.Windows.Ink.DrawingAttributes" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="da916-151">En el ejemplo siguiente se muestra cómo agregar y recuperar una propiedad personalizada desde el <xref:System.Windows.Ink.DrawingAttributes> objeto.</span><span class="sxs-lookup"><span data-stu-id="da916-151">The following example demonstrates how to add and retrieve a custom property from the <xref:System.Windows.Ink.DrawingAttributes> object.</span></span> <span data-ttu-id="da916-152">El ejemplo agrega una propiedad que indica si el <xref:System.Windows.Ink.DrawingAttributes> objeto es un lápiz o un marcador de resaltado.</span><span class="sxs-lookup"><span data-stu-id="da916-152">The example adds a property that indicates whether the <xref:System.Windows.Ink.DrawingAttributes> object is a pen or a highlighter.</span></span> <span data-ttu-id="da916-153">El `ChangeColors_Click` controlador de eventos cambia todos los trazos que se colocaron en el <xref:System.Windows.Controls.InkCanvas> con un <xref:System.Windows.Ink.DrawingAttributes> llamado `inkDA` en un nuevo color.</span><span class="sxs-lookup"><span data-stu-id="da916-153">The `ChangeColors_Click` event handler changes all the strokes that were put on the <xref:System.Windows.Controls.InkCanvas> with a <xref:System.Windows.Ink.DrawingAttributes> called `inkDA` to a new color.</span></span> <span data-ttu-id="da916-154">En este ejemplo se supone que hay un <xref:System.Windows.Controls.InkCanvas> denominado `inkCanvas1`, y que hay dos <xref:System.Windows.Ink.DrawingAttributes> objetos denominados `inkDA`, y `highlighterDA.`</span><span class="sxs-lookup"><span data-stu-id="da916-154">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> named `inkCanvas1`, and that there are two <xref:System.Windows.Ink.DrawingAttributes> objects named `inkDA`, and `highlighterDA.`</span></span>  
  
 [!code-csharp[DrawingAttributes#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#5)]
 [!code-vb[DrawingAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="drawingAttributes.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="da916-155">Objeto <see cref="T:System.Windows.Ink.DrawingAttributes" /> que se va a comparar con el objeto <see cref="T:System.Windows.Ink.DrawingAttributes" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-155">The <see cref="T:System.Windows.Ink.DrawingAttributes" /> object to compare to the current <see cref="T:System.Windows.Ink.DrawingAttributes" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da916-156">Determina si el objeto <see cref="T:System.Windows.Ink.DrawingAttributes" /> especificado es igual al objeto <see cref="T:System.Windows.Ink.DrawingAttributes" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-156">Determines whether the specified <see cref="T:System.Windows.Ink.DrawingAttributes" /> object is equal to the current <see cref="T:System.Windows.Ink.DrawingAttributes" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da916-157">
            <see langword="true" /> si los objetos son iguales; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-157">
              <see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-158">Dos <xref:System.Windows.Ink.DrawingAttributes> objetos son iguales si son iguales las siguientes propiedades:</span><span class="sxs-lookup"><span data-stu-id="da916-158">Two <xref:System.Windows.Ink.DrawingAttributes> objects are equal if the following properties are equal:</span></span>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Color%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Width%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Height%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>  
  
> [!NOTE]
>  <span data-ttu-id="da916-159">El <xref:System.Windows.Ink.DrawingAttributes.Equals%2A> método no comprueba las propiedades personalizadas para la igualdad.</span><span class="sxs-lookup"><span data-stu-id="da916-159">The <xref:System.Windows.Ink.DrawingAttributes.Equals%2A> method does not check the custom properties for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-160">En el ejemplo siguiente se comparan dos <xref:System.Windows.Ink.DrawingAttributes> objetos para la igualdad.</span><span class="sxs-lookup"><span data-stu-id="da916-160">The following example compares two <xref:System.Windows.Ink.DrawingAttributes> objects for equality.</span></span> <span data-ttu-id="da916-161">Dado que el <xref:System.Windows.Ink.DrawingAttributes.Color%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, y <xref:System.Windows.Ink.DrawingAttributes.Width%2A> propiedades `attributes1` y `attributes2` se establecen en los mismos valores, aparece el mensaje "DrawingAttributes son iguales".</span><span class="sxs-lookup"><span data-stu-id="da916-161">Because the <xref:System.Windows.Ink.DrawingAttributes.Color%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, and <xref:System.Windows.Ink.DrawingAttributes.Width%2A> properties on `attributes1` and `attributes2` are set to the same values, the "The DrawingAttributes are equal" message appears.</span></span>  
  
 [!code-csharp[DrawingAttributes#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#10)]
 [!code-vb[DrawingAttributes#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#10)]  
[!code-csharp[DrawingAttributes#12](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#12)]
[!code-vb[DrawingAttributes#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FitToCurve">
      <MemberSignature Language="C#" Value="public bool FitToCurve { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FitToCurve" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.FitToCurve" />
      <MemberSignature Language="VB.NET" Value="Public Property FitToCurve As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FitToCurve { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FitToCurve : bool with get, set" Usage="System.Windows.Ink.DrawingAttributes.FitToCurve" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da916-162">Obtiene o establece un valor que indica si se utiliza el suavizado Bézier para representar el objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-162">Gets or sets a value that indicates whether Bezier smoothing is used to render the <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da916-163">Es <see langword="true" /> si se va a utilizar el suavizado Bézier para representar el objeto <see cref="T:System.Windows.Ink.Stroke" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-163">
              <see langword="true" /> to use Bezier smoothing to render the <see cref="T:System.Windows.Ink.Stroke" />; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="da916-164">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-164">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_FitToCurve"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="da916-165">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="da916-165">XAML Text Usage</span></span>  
 <span data-ttu-id="da916-166">Esta propiedad no se utiliza normalmente en XAML.</span><span class="sxs-lookup"><span data-stu-id="da916-166">This property is not typically used in XAML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-167">En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="da916-167">The following example demonstrates how to set the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property.</span></span> <span data-ttu-id="da916-168">El ejemplo se supone que la aplicación tiene un <xref:System.Windows.Controls.InkCanvas> llamado `inkCanvas1`y dos <xref:System.Windows.Ink.DrawingAttributes> objetos denominados `inkDA` y `highlighterDA`.</span><span class="sxs-lookup"><span data-stu-id="da916-168">The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`.</span></span> <span data-ttu-id="da916-169">Para obtener un ejemplo completo, vea el <xref:System.Windows.Ink.DrawingAttributes> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="da916-169">For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.</span></span>  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="drawingAttributes.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da916-170">Actúa como función hash para un tipo concreto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-170">Serves as a hash function for a particular type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da916-171">Código hash para el objeto <see cref="T:System.Object" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-171">A hash code for the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyData">
      <MemberSignature Language="C#" Value="public object GetPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.GetPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyData (propertyDataId As Guid) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyData : Guid -&gt; obj" Usage="drawingAttributes.GetPropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">
          <span data-ttu-id="da916-172">
            <see cref="T:System.Guid" /> asociado a la propiedad personalizada que se va a obtener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-172">The <see cref="T:System.Guid" /> associated with the custom property to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da916-173">Obtiene el valor de la propiedad personalizada asociada al <see cref="T:System.Guid" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-173">Gets the value of the custom property associated with the specified <see cref="T:System.Guid" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da916-174">Valor de la propiedad personalizada asociada al <see cref="T:System.Guid" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-174">The value of the custom property associated with the specified <see cref="T:System.Guid" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-175">Use la <xref:System.Windows.Ink.DrawingAttributes.GetPropertyData%2A> método para acceder a las propiedades personalizadas que se ha agregado a un <xref:System.Windows.Ink.DrawingAttributes> objeto.</span><span class="sxs-lookup"><span data-stu-id="da916-175">Use the <xref:System.Windows.Ink.DrawingAttributes.GetPropertyData%2A> method to access custom properties you added to a <xref:System.Windows.Ink.DrawingAttributes> object.</span></span> <span data-ttu-id="da916-176"><xref:System.Windows.Ink.DrawingAttributes.GetPropertyData%2A> Devuelve el valor predeterminado de la propiedad integrada si no se ha establecido un valor.</span><span class="sxs-lookup"><span data-stu-id="da916-176"><xref:System.Windows.Ink.DrawingAttributes.GetPropertyData%2A> returns the default value for the built-in property if a value has not been set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-177">En el ejemplo siguiente se muestra cómo agregar y recuperar una propiedad personalizada desde el <xref:System.Windows.Ink.DrawingAttributes> objeto.</span><span class="sxs-lookup"><span data-stu-id="da916-177">The following example demonstrates how to add and retrieve a custom property from the <xref:System.Windows.Ink.DrawingAttributes> object.</span></span> <span data-ttu-id="da916-178">El ejemplo agrega una propiedad que indica si el <xref:System.Windows.Ink.DrawingAttributes> objeto es un lápiz o un marcador de resaltado.</span><span class="sxs-lookup"><span data-stu-id="da916-178">The example adds a property that indicates whether the <xref:System.Windows.Ink.DrawingAttributes> object is a pen or a highlighter.</span></span> <span data-ttu-id="da916-179">El código en el `ChangeColors_Click` controlador de eventos presenta un nuevo color para los trazos en la <xref:System.Windows.Controls.InkCanvas> que usan el <xref:System.Windows.Ink.DrawingAttributes> objeto, `inkDA`.</span><span class="sxs-lookup"><span data-stu-id="da916-179">The code in the `ChangeColors_Click` event handler renders a new color for strokes on the <xref:System.Windows.Controls.InkCanvas> that use the <xref:System.Windows.Ink.DrawingAttributes> object, `inkDA`.</span></span> <span data-ttu-id="da916-180">En este ejemplo se supone que hay un <xref:System.Windows.Controls.InkCanvas> denominado `inkCanvas1`, y que hay dos <xref:System.Windows.Ink.DrawingAttributes> objetos denominados `inkDA`, y `highlighterDA.`</span><span class="sxs-lookup"><span data-stu-id="da916-180">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> named `inkCanvas1`, and that there are two <xref:System.Windows.Ink.DrawingAttributes> objects named `inkDA`, and `highlighterDA.`</span></span>  
  
 [!code-csharp[DrawingAttributes#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#5)]
 [!code-vb[DrawingAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da916-181">El parámetro <paramref name="propertyDataId" /> no está asociado a una propiedad personalizada del objeto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-181">
              <paramref name="propertyDataId" /> is not associated with a custom property of the <see cref="T:System.Windows.Ink.DrawingAttributes" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyDataIds">
      <MemberSignature Language="C#" Value="public Guid[] GetPropertyDataIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Guid[] GetPropertyDataIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.GetPropertyDataIds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyDataIds () As Guid()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Guid&gt; ^ GetPropertyDataIds();" />
      <MemberSignature Language="F#" Value="member this.GetPropertyDataIds : unit -&gt; Guid[]" Usage="drawingAttributes.GetPropertyDataIds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da916-182">Devuelve los GUID de todas las propiedades personalizadas asociadas a <see cref="T:System.Windows.Ink.StrokeCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-182">Returns the GUIDs of any custom properties associated with the <see cref="T:System.Windows.Ink.StrokeCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da916-183">Matriz de tipo <see cref="T:System.Guid" /> que representa los identificadores de los datos de la propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-183">An array of type <see cref="T:System.Guid" /> that represents the property data identifiers.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-184">Los GUID de las propiedades integradas de la <xref:System.Windows.Ink.DrawingAttributes> clase están en el <xref:System.Windows.Ink.DrawingAttributeIds> clase.</span><span class="sxs-lookup"><span data-stu-id="da916-184">The GUIDs for the built-in properties of the <xref:System.Windows.Ink.DrawingAttributes> class are in the <xref:System.Windows.Ink.DrawingAttributeIds> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-185">En el ejemplo siguiente se muestra cómo obtener los identificadores de datos de la propiedad de la <xref:System.Windows.Ink.DrawingAttributes> objeto.</span><span class="sxs-lookup"><span data-stu-id="da916-185">The following example demonstrates how to get the property data identifiers from the <xref:System.Windows.Ink.DrawingAttributes> object.</span></span> <span data-ttu-id="da916-186">En este ejemplo se da por supuesto que un <xref:System.Windows.Ink.DrawingAttributes> llamado `inkDA` se ha declarado.</span><span class="sxs-lookup"><span data-stu-id="da916-186">This example assumes that a <xref:System.Windows.Ink.DrawingAttributes> called `inkDA` has been declared.</span></span>  
  
 [!code-csharp[DrawingAttributes#7](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#7)]
 [!code-vb[DrawingAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Height : double with get, set" Usage="System.Windows.Ink.DrawingAttributes.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da916-187">Obtiene o establece el alto del lápiz óptico utilizado para dibujar el objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-187">Gets or sets the height of the stylus used to draw the <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da916-188">Valor que indica el alto del lápiz óptico utilizado para dibujar el objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-188">The value that indicates the height of the stylus used to draw the <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-189">Los siguientes factores afectan el alto y ancho de un <xref:System.Windows.Ink.Stroke> cuando se procesa, pero no el valor de la <xref:System.Windows.Ink.DrawingAttributes.Height%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="da916-189">The following factors affect the height and width of a <xref:System.Windows.Ink.Stroke> when it is rendered, but not the value of the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property.</span></span>  
  
-   <span data-ttu-id="da916-190">La cantidad de presión aplicada a del lápiz cuando el <xref:System.Windows.Ink.Stroke> se dibuja.</span><span class="sxs-lookup"><span data-stu-id="da916-190">The amount of pressure applied to the stylus when the <xref:System.Windows.Ink.Stroke> is drawn.</span></span>  
  
-   <span data-ttu-id="da916-191">Valor de propiedad <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>.</span><span class="sxs-lookup"><span data-stu-id="da916-191">The value of the <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> property.</span></span>  
  
 <span data-ttu-id="da916-192">Si establece la <xref:System.Windows.Ink.DrawingAttributes.Height%2A> propiedad en 0 píxeles independientes del dispositivo (DIP), se cambia a 2 DIP.</span><span class="sxs-lookup"><span data-stu-id="da916-192">If you set the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property to 0 device independent pixels (DIP), it is changed to 2 DIP.</span></span>  
  
<a name="xamlTextUsage_Height"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="da916-193">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="da916-193">XAML Text Usage</span></span>  
 <span data-ttu-id="da916-194">Esta propiedad no se utiliza normalmente en XAML.</span><span class="sxs-lookup"><span data-stu-id="da916-194">This property is not typically used in XAML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-195">En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Ink.DrawingAttributes.Height%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="da916-195">The following example demonstrates how to set the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property.</span></span> <span data-ttu-id="da916-196">El ejemplo se supone que la aplicación tiene un <xref:System.Windows.Controls.InkCanvas> llamado `inkCanvas1`y dos <xref:System.Windows.Ink.DrawingAttributes> objetos denominados `inkDA` y `highlighterDA`.</span><span class="sxs-lookup"><span data-stu-id="da916-196">The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`.</span></span> <span data-ttu-id="da916-197">Para obtener un ejemplo completo, vea el <xref:System.Windows.Ink.DrawingAttributes> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="da916-197">For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.</span></span>  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="da916-198">El valor de la propiedad <see cref="P:System.Windows.Ink.DrawingAttributes.Height" /> es menor que <see cref="F:System.Double.Epsilon" /> o tiene el valor <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-198">The <see cref="P:System.Windows.Ink.DrawingAttributes.Height" /> property is less than <see cref="F:System.Double.Epsilon" /> or <see cref="F:System.Double.NaN" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IgnorePressure">
      <MemberSignature Language="C#" Value="public bool IgnorePressure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnorePressure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.IgnorePressure" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnorePressure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnorePressure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnorePressure : bool with get, set" Usage="System.Windows.Ink.DrawingAttributes.IgnorePressure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da916-199">Obtiene o establece un valor que indica si el grosor de un objeto <see cref="T:System.Windows.Ink.Stroke" /> representado cambia según la presión aplicada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-199">Gets or sets a value that indicates whether the thickness of a rendered <see cref="T:System.Windows.Ink.Stroke" /> changes according the amount of pressure applied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da916-200">Es <see langword="true" /> para indicar que el grosor del trazo es uniforme; es <see langword="false" /> para indicar que el grosor de un objeto <see cref="T:System.Windows.Ink.Stroke" /> representado aumenta cuando aumenta la presión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-200">
              <see langword="true" /> to indicate that the thickness of the stroke is uniform; <see langword="false" /> to indicate that the thickness of a rendered <see cref="T:System.Windows.Ink.Stroke" /> increases when pressure is increased.</span>
          </span>
          <span data-ttu-id="da916-201">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-201">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_IgnorePressure"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="da916-202">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="da916-202">XAML Text Usage</span></span>  
 <span data-ttu-id="da916-203">Esta propiedad no se utiliza normalmente en XAML.</span><span class="sxs-lookup"><span data-stu-id="da916-203">This property is not typically used in XAML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-204">En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="da916-204">The following example demonstrates how to set the <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A> property.</span></span> <span data-ttu-id="da916-205">El ejemplo se supone que la aplicación tiene un <xref:System.Windows.Controls.InkCanvas> llamado `inkCanvas1`y dos <xref:System.Windows.Ink.DrawingAttributes> objetos denominados `inkDA` y `highlighterDA`.</span><span class="sxs-lookup"><span data-stu-id="da916-205">The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`.</span></span> <span data-ttu-id="da916-206">Para obtener un ejemplo completo, vea el <xref:System.Windows.Ink.DrawingAttributes> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="da916-206">For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.</span></span>  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlighter">
      <MemberSignature Language="C#" Value="public bool IsHighlighter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHighlighter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.IsHighlighter" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHighlighter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHighlighter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHighlighter : bool with get, set" Usage="System.Windows.Ink.DrawingAttributes.IsHighlighter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da916-207">Obtiene o establece un valor que indica si el objeto <see cref="T:System.Windows.Ink.Stroke" /> se parece a un marcador de resaltado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-207">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Ink.Stroke" /> looks like a highlighter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da916-208">Es <see langword="true" /> para representar el objeto <see cref="T:System.Windows.Ink.Stroke" /> como un marcador de resaltado; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-208">
              <see langword="true" /> to render the <see cref="T:System.Windows.Ink.Stroke" /> as a highlighter; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="da916-209">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-209">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-210">Cuando el <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> propiedad está establecida en `true`, el <xref:System.Windows.Ink.Stroke> es ligeramente transparente, lo que permite los trazos situados debajo que aparezca.</span><span class="sxs-lookup"><span data-stu-id="da916-210">When the <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> property is set to `true`, the <xref:System.Windows.Ink.Stroke> is slightly transparent, which allows the strokes underneath to appear.</span></span>  
  
<a name="xamlTextUsage_IsHighlighter"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="da916-211">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="da916-211">XAML Text Usage</span></span>  
 <span data-ttu-id="da916-212">Esta propiedad no se utiliza normalmente en XAML.</span><span class="sxs-lookup"><span data-stu-id="da916-212">This property is not typically used in XAML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-213">En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="da916-213">The following example demonstrates how to set the <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> property.</span></span> <span data-ttu-id="da916-214">El ejemplo se supone que la aplicación tiene un <xref:System.Windows.Controls.InkCanvas> llamado `inkCanvas1`y dos <xref:System.Windows.Ink.DrawingAttributes> objetos denominados `inkDA` y `highlighterDA`.</span><span class="sxs-lookup"><span data-stu-id="da916-214">The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`.</span></span> <span data-ttu-id="da916-215">Para obtener un ejemplo completo, vea el <xref:System.Windows.Ink.DrawingAttributes> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="da916-215">For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.</span></span>  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxHeight">
      <MemberSignature Language="C#" Value="public static readonly double MaxHeight;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaxHeight" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.DrawingAttributes.MaxHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxHeight As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaxHeight;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxHeight : double" Usage="System.Windows.Ink.DrawingAttributes.MaxHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da916-216">Especifica el mayor valor permitido para la propiedad <see cref="P:System.Windows.Ink.DrawingAttributes.Height" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-216">Specifies the largest value allowed for the <see cref="P:System.Windows.Ink.DrawingAttributes.Height" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-217">Use la <xref:System.Windows.Ink.DrawingAttributes.MaxHeight> campo para comprobar si es un valor dentro de los límites permitidos para el <xref:System.Windows.Ink.DrawingAttributes.Height%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="da916-217">Use the <xref:System.Windows.Ink.DrawingAttributes.MaxHeight> field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property.</span></span> <span data-ttu-id="da916-218">Haga esto cuando el valor procede de un origen desconocido, como entrada del usuario sin restricciones.</span><span class="sxs-lookup"><span data-stu-id="da916-218">Do this when the value comes from an unknown source, such as unconstrained user input.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-219">En el ejemplo siguiente se asegura la <xref:System.Windows.Ink.DrawingAttributes.Height%2A> propiedad de la <xref:System.Windows.Ink.DrawingAttributes> se establece en un valor válido.</span><span class="sxs-lookup"><span data-stu-id="da916-219">The following example ensures the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property of the <xref:System.Windows.Ink.DrawingAttributes> is set to a legal value.</span></span> <span data-ttu-id="da916-220">En este ejemplo se supone que hay un <xref:System.Windows.Controls.InkCanvas> llamado `inkCanvas1`.</span><span class="sxs-lookup"><span data-stu-id="da916-220">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.</span></span>  
  
 [!code-csharp[DrawingAttributes#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#14)]
 [!code-vb[DrawingAttributes#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWidth">
      <MemberSignature Language="C#" Value="public static readonly double MaxWidth;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaxWidth" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.DrawingAttributes.MaxWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxWidth As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaxWidth;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxWidth : double" Usage="System.Windows.Ink.DrawingAttributes.MaxWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da916-221">Especifica el mayor valor permitido para la propiedad <see cref="P:System.Windows.Ink.DrawingAttributes.Width" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-221">Specifies the largest value allowed for the <see cref="P:System.Windows.Ink.DrawingAttributes.Width" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-222">Use la <xref:System.Windows.Ink.DrawingAttributes.MaxWidth> campo para comprobar si es un valor dentro de los límites permitidos para el <xref:System.Windows.Ink.DrawingAttributes.Width%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="da916-222">Use the <xref:System.Windows.Ink.DrawingAttributes.MaxWidth> field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property.</span></span> <span data-ttu-id="da916-223">Haga esto cuando el valor procede de un origen desconocido, como entrada del usuario sin restricciones.</span><span class="sxs-lookup"><span data-stu-id="da916-223">Do this when the value comes from an unknown source, such as unconstrained user input.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-224">En el ejemplo siguiente se asegura la <xref:System.Windows.Ink.DrawingAttributes.Width%2A> propiedad de la <xref:System.Windows.Ink.DrawingAttributes> se establece en un valor válido.</span><span class="sxs-lookup"><span data-stu-id="da916-224">The following example ensures the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property of the <xref:System.Windows.Ink.DrawingAttributes> is set to a legal value.</span></span> <span data-ttu-id="da916-225">En este ejemplo se supone que hay un <xref:System.Windows.Controls.InkCanvas> llamado `inkCanvas1`.</span><span class="sxs-lookup"><span data-stu-id="da916-225">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.</span></span>  
  
 [!code-csharp[DrawingAttributes#15](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#15)]
 [!code-vb[DrawingAttributes#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinHeight">
      <MemberSignature Language="C#" Value="public static readonly double MinHeight;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MinHeight" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.DrawingAttributes.MinHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinHeight As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MinHeight;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinHeight : double" Usage="System.Windows.Ink.DrawingAttributes.MinHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da916-226">Especifica el menor valor permitido para la propiedad <see cref="P:System.Windows.Ink.DrawingAttributes.Height" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-226">Specifies the smallest value allowed for the <see cref="P:System.Windows.Ink.DrawingAttributes.Height" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-227">Use la <xref:System.Windows.Ink.DrawingAttributes.MinHeight> campo para comprobar si es un valor dentro de los límites permitidos para el <xref:System.Windows.Ink.DrawingAttributes.Height%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="da916-227">Use the <xref:System.Windows.Ink.DrawingAttributes.MinHeight> field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property.</span></span> <span data-ttu-id="da916-228">Haga esto cuando el valor procede de un origen desconocido, como entrada del usuario sin restricciones.</span><span class="sxs-lookup"><span data-stu-id="da916-228">Do this when the value comes from an unknown source, such as unconstrained user input.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-229">En el ejemplo siguiente se asegura la <xref:System.Windows.Ink.DrawingAttributes.Height%2A> propiedad de la <xref:System.Windows.Ink.DrawingAttributes> se establece en un valor válido.</span><span class="sxs-lookup"><span data-stu-id="da916-229">The following example ensures the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property of the <xref:System.Windows.Ink.DrawingAttributes> is set to a legal value.</span></span> <span data-ttu-id="da916-230">En este ejemplo se supone que hay un <xref:System.Windows.Controls.InkCanvas> llamado `inkCanvas1`.</span><span class="sxs-lookup"><span data-stu-id="da916-230">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.</span></span>  
  
 [!code-csharp[DrawingAttributes#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#14)]
 [!code-vb[DrawingAttributes#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public static readonly double MinWidth;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MinWidth" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.DrawingAttributes.MinWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinWidth As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MinWidth;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinWidth : double" Usage="System.Windows.Ink.DrawingAttributes.MinWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da916-231">Especifica el menor valor permitido para la propiedad <see cref="P:System.Windows.Ink.DrawingAttributes.Width" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-231">Specifies the smallest value allowed for the <see cref="P:System.Windows.Ink.DrawingAttributes.Width" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-232">Use la <xref:System.Windows.Ink.DrawingAttributes.MinWidth> campo para comprobar si es un valor dentro de los límites permitidos para el <xref:System.Windows.Ink.DrawingAttributes.Width%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="da916-232">Use the <xref:System.Windows.Ink.DrawingAttributes.MinWidth> field to check whether a value is within the limits allowed for the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property.</span></span> <span data-ttu-id="da916-233">Haga esto cuando el valor procede de un origen desconocido, como entrada del usuario sin restricciones.</span><span class="sxs-lookup"><span data-stu-id="da916-233">Do this when the value comes from an unknown source, such as unconstrained user input.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-234">En el ejemplo siguiente se asegura la <xref:System.Windows.Ink.DrawingAttributes.Width%2A> propiedad de la <xref:System.Windows.Ink.DrawingAttributes> se establece en un valor válido.</span><span class="sxs-lookup"><span data-stu-id="da916-234">The following example ensures the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property of the <xref:System.Windows.Ink.DrawingAttributes> is set to a legal value.</span></span> <span data-ttu-id="da916-235">En este ejemplo se supone que hay un <xref:System.Windows.Controls.InkCanvas> llamado `inkCanvas1`.</span><span class="sxs-lookup"><span data-stu-id="da916-235">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.</span></span>  
  
 [!code-csharp[DrawingAttributes#15](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#15)]
 [!code-vb[DrawingAttributes#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAttributeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAttributeChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAttributeChanged(class System.Windows.Ink.PropertyDataChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAttributeChanged (e As PropertyDataChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAttributeChanged(System::Windows::Ink::PropertyDataChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAttributeChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit&#xA;override this.OnAttributeChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit" Usage="drawingAttributes.OnAttributeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.PropertyDataChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="da916-236">Objeto <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-236">A <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da916-237">Genera el evento <see cref="E:System.Windows.Ink.DrawingAttributes.AttributeChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-237">Raises the <see cref="E:System.Windows.Ink.DrawingAttributes.AttributeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-238">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="da916-238">Raising an event invokes the event handler through a delegate.</span></span>  
  
 <span data-ttu-id="da916-239">El método <xref:System.Windows.Ink.DrawingAttributes.OnAttributeChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="da916-239">The <xref:System.Windows.Ink.DrawingAttributes.OnAttributeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="da916-240">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="da916-240">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da916-241">El valor de <paramref name="e" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-241">
              <paramref name="e" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="da916-242">Cuando se reemplaza <see cref="M:System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> en una clase derivada, llame a la <see cref="M:System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> método para la clase base para asegurarse de que los delegados registrados reciban el evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="da916-242">When overriding <see cref="M:System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> in a derived class, call the <see cref="M:System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> method for the base class to ensure that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="drawingAttributes.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="da916-243">EventArgs</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-243">EventArgs</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da916-244">Se produce cuando cambia alguna propiedad de <see cref="T:System.Windows.Ink.DrawingAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-244">Occurs when any <see cref="T:System.Windows.Ink.DrawingAttributes" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyDataChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyDataChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyDataChanged(class System.Windows.Ink.PropertyDataChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyDataChanged (e As PropertyDataChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyDataChanged(System::Windows::Ink::PropertyDataChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit&#xA;override this.OnPropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit" Usage="drawingAttributes.OnPropertyDataChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.PropertyDataChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="da916-245">Objeto <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-245">A <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da916-246">Genera el evento <see cref="E:System.Windows.Ink.DrawingAttributes.PropertyDataChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-246">Raises the <see cref="E:System.Windows.Ink.DrawingAttributes.PropertyDataChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-247">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="da916-247">Raising an event invokes the event handler through a delegate.</span></span>  
  
 <span data-ttu-id="da916-248">El método <xref:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="da916-248">The <xref:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="da916-249">Se trata de la técnica preferida para controlar el evento.</span><span class="sxs-lookup"><span data-stu-id="da916-249">This is the preferred technique for handling the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da916-250">El valor de <paramref name="e" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-250">
              <paramref name="e" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="da916-251">Cuando se reemplaza <see cref="M:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> en una clase derivada, llame a la <see cref="M:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> método para la clase base para asegurarse de que los delegados registrados reciban el evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="da916-251">When overriding <see cref="M:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> in a derived class, call the <see cref="M:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" /> method for the base class to ensure registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Ink.DrawingAttributes first, System.Windows.Ink.DrawingAttributes second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Ink.DrawingAttributes first, class System.Windows.Ink.DrawingAttributes second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.op_Equality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (first As DrawingAttributes, second As DrawingAttributes) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Ink::DrawingAttributes ^ first, System::Windows::Ink::DrawingAttributes ^ second);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Ink.DrawingAttributes * System.Windows.Ink.DrawingAttributes -&gt; bool" Usage="first = second" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Windows.Ink.DrawingAttributes" />
        <Parameter Name="second" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="first">
          <span data-ttu-id="da916-252">Primer objeto <see cref="T:System.Windows.Ink.DrawingAttributes" /> que se va a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-252">The first <see cref="T:System.Windows.Ink.DrawingAttributes" /> object to compare.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="da916-253">Segundo objeto <see cref="T:System.Windows.Ink.DrawingAttributes" /> que se va a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-253">The second <see cref="T:System.Windows.Ink.DrawingAttributes" /> object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da916-254">Determina si los objetos <see cref="T:System.Windows.Ink.DrawingAttributes" /> especificados son iguales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-254">Determines whether the specified <see cref="T:System.Windows.Ink.DrawingAttributes" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da916-255">
            <see langword="true" /> si los objetos son iguales; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-255">
              <see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-256">Dos <xref:System.Windows.Ink.DrawingAttributes> objetos son iguales si son iguales las siguientes propiedades:</span><span class="sxs-lookup"><span data-stu-id="da916-256">Two <xref:System.Windows.Ink.DrawingAttributes> objects are equal if the following properties are equal:</span></span>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Color%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Height%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Width%2A>  
  
> [!NOTE]
>  <span data-ttu-id="da916-257">El <xref:System.Windows.Ink.DrawingAttributes.op_Equality%2A> método no comprueba las propiedades personalizadas para la igualdad.</span><span class="sxs-lookup"><span data-stu-id="da916-257">The <xref:System.Windows.Ink.DrawingAttributes.op_Equality%2A> method does not check the custom properties for equality.</span></span>  
  
 <span data-ttu-id="da916-258">El método equivalente para este operador es <xref:System.Windows.Ink.DrawingAttributes.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="da916-258">The equivalent method for this operator is <xref:System.Windows.Ink.DrawingAttributes.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
## Examples  
 <span data-ttu-id="da916-259">En el ejemplo siguiente se comparan dos <xref:System.Windows.Ink.DrawingAttributes> objetos para la igualdad.</span><span class="sxs-lookup"><span data-stu-id="da916-259">The following example compares two <xref:System.Windows.Ink.DrawingAttributes> objects for equality.</span></span> <span data-ttu-id="da916-260">Dado que el <xref:System.Windows.Ink.DrawingAttributes.Color%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, y <xref:System.Windows.Ink.DrawingAttributes.Width%2A> propiedades `attributes1` y `attributes2` se establecen en los mismos valores, aparece el mensaje "DrawingAttributes son iguales".</span><span class="sxs-lookup"><span data-stu-id="da916-260">Because the <xref:System.Windows.Ink.DrawingAttributes.Color%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, and <xref:System.Windows.Ink.DrawingAttributes.Width%2A> properties on `attributes1` and `attributes2` are set to the same values, the "The DrawingAttributes are equal" message appears.</span></span>  
  
 [!code-csharp[DrawingAttributes#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#10)]
 [!code-vb[DrawingAttributes#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#10)]  
[!code-csharp[DrawingAttributes#11](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#11)]
[!code-vb[DrawingAttributes#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Ink.DrawingAttributes first, System.Windows.Ink.DrawingAttributes second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Ink.DrawingAttributes first, class System.Windows.Ink.DrawingAttributes second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.op_Inequality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (first As DrawingAttributes, second As DrawingAttributes) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Ink::DrawingAttributes ^ first, System::Windows::Ink::DrawingAttributes ^ second);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Ink.DrawingAttributes * System.Windows.Ink.DrawingAttributes -&gt; bool" Usage="System.Windows.Ink.DrawingAttributes.op_Inequality (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Windows.Ink.DrawingAttributes" />
        <Parameter Name="second" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="first">
          <span data-ttu-id="da916-261">Primer objeto <see cref="T:System.Windows.Ink.DrawingAttributes" /> que se va a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-261">The first <see cref="T:System.Windows.Ink.DrawingAttributes" /> object to compare.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="da916-262">Segundo objeto <see cref="T:System.Windows.Ink.DrawingAttributes" /> que se va a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-262">The second <see cref="T:System.Windows.Ink.DrawingAttributes" /> object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da916-263">Determina si los objetos <see cref="T:System.Windows.Ink.DrawingAttributes" /> especificados no son iguales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-263">Determines whether the specified <see cref="T:System.Windows.Ink.DrawingAttributes" /> objects are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da916-264">Es <see langword="true" /> si los objetos no son iguales; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-264">
              <see langword="true" /> if the objects are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-265">Dos <xref:System.Windows.Ink.DrawingAttributes> objetos no son iguales si las propiedades siguientes no son iguales:</span><span class="sxs-lookup"><span data-stu-id="da916-265">Two <xref:System.Windows.Ink.DrawingAttributes> objects are not equal if the following properties are not equal:</span></span>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Color%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Height%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>  
  
-   <xref:System.Windows.Ink.DrawingAttributes.Width%2A>  
  
> [!NOTE]
>  <span data-ttu-id="da916-266">El <xref:System.Windows.Ink.DrawingAttributes.op_Inequality%2A> método no comprueba las propiedades personalizadas para la igualdad.</span><span class="sxs-lookup"><span data-stu-id="da916-266">The <xref:System.Windows.Ink.DrawingAttributes.op_Inequality%2A> method does not check the custom properties for equality.</span></span>  
  
 <span data-ttu-id="da916-267">El método equivalente para este operador es la negación del <xref:System.Windows.Ink.DrawingAttributes.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="da916-267">The equivalent method for this operator is the negation of <xref:System.Windows.Ink.DrawingAttributes.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
## Examples  
 <span data-ttu-id="da916-268">En el ejemplo siguiente se comparan dos <xref:System.Windows.Ink.DrawingAttributes> objetos no son iguales.</span><span class="sxs-lookup"><span data-stu-id="da916-268">The following example compares two <xref:System.Windows.Ink.DrawingAttributes> objects for inequality.</span></span> <span data-ttu-id="da916-269">Dado que el <xref:System.Windows.Ink.DrawingAttributes.Color%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, y <xref:System.Windows.Ink.DrawingAttributes.Width%2A> propiedades `attributes1` y `attributes2` se establecen en los mismos valores, aparece el mensaje "DrawingAttributes son iguales".</span><span class="sxs-lookup"><span data-stu-id="da916-269">Because the <xref:System.Windows.Ink.DrawingAttributes.Color%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, and <xref:System.Windows.Ink.DrawingAttributes.Width%2A> properties on `attributes1` and `attributes2` are set to the same values, the "The DrawingAttributes are equal" message appears.</span></span>  
  
 [!code-csharp[DrawingAttributes#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#10)]
 [!code-vb[DrawingAttributes#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#10)]  
[!code-csharp[DrawingAttributes#13](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#13)]
[!code-vb[DrawingAttributes#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyDataChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.DrawingAttributes.PropertyDataChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyDataChanged As PropertyDataChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::PropertyDataChangedEventHandler ^ PropertyDataChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventHandler " Usage="member this.PropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.PropertyDataChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da916-270">Se produce cuando se agregan o se quitan datos de propiedad de la colección <see cref="T:System.Windows.Ink.StrokeCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-270">Occurs when property data is added or removed from the <see cref="T:System.Windows.Ink.StrokeCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="da916-271">El ejemplo siguiente es parte de un trazo personalizado que puede dibujar un efecto tridimensional.</span><span class="sxs-lookup"><span data-stu-id="da916-271">The following example is part of a custom stroke that can draw a three-dimensional effect.</span></span> <span data-ttu-id="da916-272">El trazo que se define y almacena una propiedad personalizada denominada `Shadowed`, que pertenece a <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="da916-272">The stroke defines and stores a custom property called `Shadowed`, which belongs to <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A>.</span></span> <span data-ttu-id="da916-273">Cuando el `Shadowed` los cambios de propiedad, el <xref:System.Windows.Ink.DrawingAttributes.PropertyDataChanged> llamadas del controlador de eventos el <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> método, lo que hace que el trazo se vuelva a dibujar.</span><span class="sxs-lookup"><span data-stu-id="da916-273">When the `Shadowed` property changes, the <xref:System.Windows.Ink.DrawingAttributes.PropertyDataChanged> event handler calls the <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> method, which causes the stroke to be redrawn.</span></span>  
  
 [!code-csharp[StrokeCollectionShadow#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionShadow/CSharp/CustomRenderedStroke.cs#1)]
 [!code-vb[StrokeCollectionShadow#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionShadow/VisualBasic/CustomRenderedStroke.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyData">
      <MemberSignature Language="C#" Value="public void RemovePropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.DrawingAttributes.RemovePropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyData (propertyDataId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.RemovePropertyData : Guid -&gt; unit" Usage="drawingAttributes.RemovePropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">
          <span data-ttu-id="da916-274">
            <see cref="T:System.Guid" /> asociado a la propiedad personalizada que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-274">The <see cref="T:System.Guid" /> associated with the custom property to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da916-275">Quita la propiedad personalizada asociada al <see cref="T:System.Guid" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-275">Removes the custom property associated with the specified <see cref="T:System.Guid" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="da916-276">En el ejemplo siguiente se muestra cómo quitar una propiedad personalizada desde un <xref:System.Windows.Ink.DrawingAttributes> objeto.</span><span class="sxs-lookup"><span data-stu-id="da916-276">The following example demonstrates how to remove a custom property from a <xref:System.Windows.Ink.DrawingAttributes> object.</span></span>  
  
 [!code-csharp[DrawingAttributes#9](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#9)]
 [!code-vb[DrawingAttributes#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da916-277">El parámetro <paramref name="propertyDataId" /> no está asociado a una propiedad personalizada del objeto <see cref="T:System.Windows.Ink.DrawingAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-277">
              <paramref name="propertyDataId" /> is not associated with a custom property of the <see cref="T:System.Windows.Ink.DrawingAttributes" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="StylusTip">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StylusTip StylusTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Ink.StylusTip StylusTip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.StylusTip" />
      <MemberSignature Language="VB.NET" Value="Public Property StylusTip As StylusTip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::StylusTip StylusTip { System::Windows::Ink::StylusTip get(); void set(System::Windows::Ink::StylusTip value); };" />
      <MemberSignature Language="F#" Value="member this.StylusTip : System.Windows.Ink.StylusTip with get, set" Usage="System.Windows.Ink.DrawingAttributes.StylusTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StylusTip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da916-278">Obtiene o establece la forma del lápiz óptico utilizado para dibujar el objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-278">Gets or sets the shape of the stylus used to draw the <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da916-279">Uno de los valores de <see cref="T:System.Windows.Ink.StylusShape" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-279">One of the <see cref="T:System.Windows.Ink.StylusShape" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_StylusTip"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="da916-280">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="da916-280">XAML Text Usage</span></span>  
 <span data-ttu-id="da916-281">Esta propiedad no se utiliza normalmente en XAML.</span><span class="sxs-lookup"><span data-stu-id="da916-281">This property is not typically used in XAML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-282">En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="da916-282">The following example demonstrates how to set the <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> property.</span></span> <span data-ttu-id="da916-283">El ejemplo se supone que la aplicación tiene un <xref:System.Windows.Controls.InkCanvas> llamado `inkCanvas1`y dos <xref:System.Windows.Ink.DrawingAttributes> objetos denominados `inkDA` y `highlighterDA`.</span><span class="sxs-lookup"><span data-stu-id="da916-283">The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`.</span></span> <span data-ttu-id="da916-284">Para obtener un ejemplo completo, vea el <xref:System.Windows.Ink.DrawingAttributes> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="da916-284">For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.</span></span>  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusTipTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Matrix StylusTipTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Matrix StylusTipTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.StylusTipTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property StylusTipTransform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Matrix StylusTipTransform { System::Windows::Media::Matrix get(); void set(System::Windows::Media::Matrix value); };" />
      <MemberSignature Language="F#" Value="member this.StylusTipTransform : System.Windows.Media.Matrix with get, set" Usage="System.Windows.Ink.DrawingAttributes.StylusTipTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da916-285">Obtiene o establece el objeto <see cref="T:System.Windows.Media.Matrix" /> que especifica la transformación que se va a realizar en la punta del lápiz óptico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-285">Gets or sets the <see cref="T:System.Windows.Media.Matrix" /> that specifies the transformation to perform on the stylus' tip.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da916-286">
            <see cref="T:System.Windows.Media.Matrix" /> que especifica la transformación que se va a realizar en la punta del lápiz óptico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-286">A <see cref="T:System.Windows.Media.Matrix" /> that specifies the transformation to perform on the stylus' tip.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-287">Use el <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> propiedad para girar, sesgar o escalar la punta del lápiz óptico.</span><span class="sxs-lookup"><span data-stu-id="da916-287">Use the <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> property to rotate, skew, or scale the stylus tip.</span></span>  
  
<a name="xamlTextUsage_StylusTipTransform"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="da916-288">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="da916-288">XAML Text Usage</span></span>  
 <span data-ttu-id="da916-289">Esta propiedad no se utiliza normalmente en XAML.</span><span class="sxs-lookup"><span data-stu-id="da916-289">This property is not typically used in XAML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-290">En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="da916-290">The following example demonstrates how to set the <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> property.</span></span> <span data-ttu-id="da916-291">El ejemplo se supone que la aplicación tiene un <xref:System.Windows.Controls.InkCanvas> llamado `inkCanvas1`y dos <xref:System.Windows.Ink.DrawingAttributes> objetos denominados `inkDA` y `highlighterDA`.</span><span class="sxs-lookup"><span data-stu-id="da916-291">The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`.</span></span> <span data-ttu-id="da916-292">Para obtener un ejemplo completo, vea el <xref:System.Windows.Ink.DrawingAttributes> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="da916-292">For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.</span></span>  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da916-293">La matriz establecida en <see cref="P:System.Windows.Ink.DrawingAttributes.StylusTipTransform" /> no es una matriz invertible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-293">The matrix set to <see cref="P:System.Windows.Ink.DrawingAttributes.StylusTipTransform" /> is not an invertible matrix.</span>
          </span>
          <span data-ttu-id="da916-294">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-294">-or-</span>
          </span>
          <span data-ttu-id="da916-295">El valor de la propiedad <see cref="P:System.Windows.Media.Matrix.OffsetX" /> u <see cref="P:System.Windows.Media.Matrix.OffsetY" /> de la matriz no es cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-295">The <see cref="P:System.Windows.Media.Matrix.OffsetX" /> or <see cref="P:System.Windows.Media.Matrix.OffsetY" /> property of the matrix is not zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.DrawingAttributes.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da916-296">Se produce cuando ha cambiado el valor de alguna propiedad de <see cref="T:System.Windows.Ink.DrawingAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-296">Occurs when the value of any <see cref="T:System.Windows.Ink.DrawingAttributes" /> property has changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.DrawingAttributes.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Width : double with get, set" Usage="System.Windows.Ink.DrawingAttributes.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da916-297">Obtiene o establece el ancho del lápiz óptico utilizado para dibujar el objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-297">Gets or sets the width of the stylus used to draw the <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da916-298">Ancho del lápiz óptico utilizado para dibujar el objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-298">The width of the stylus used to draw the <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da916-299">Los siguientes factores afectan el alto y ancho de un <xref:System.Windows.Ink.Stroke> cuando se procesa, pero no el valor de la <xref:System.Windows.Ink.DrawingAttributes.Width%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="da916-299">The following factors affect the height and width of a <xref:System.Windows.Ink.Stroke> when it is rendered, but not the value of the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property.</span></span>  
  
-   <span data-ttu-id="da916-300">La cantidad de presión aplicada a del lápiz cuando el <xref:System.Windows.Ink.Stroke> se dibuja.</span><span class="sxs-lookup"><span data-stu-id="da916-300">The amount of pressure applied to the stylus when the <xref:System.Windows.Ink.Stroke> is drawn.</span></span>  
  
-   <span data-ttu-id="da916-301">Valor de propiedad <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>.</span><span class="sxs-lookup"><span data-stu-id="da916-301">The value of the <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> property.</span></span>  
  
 <span data-ttu-id="da916-302">Si establece la <xref:System.Windows.Ink.DrawingAttributes.Width%2A> propiedad en 0 píxeles independientes del dispositivo (DIP), se cambia a 2 DIP.</span><span class="sxs-lookup"><span data-stu-id="da916-302">If you set the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property to 0 device independent pixels (DIP), it is changed to 2 DIP.</span></span>  
  
<a name="xamlTextUsage_Width"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="da916-303">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="da916-303">XAML Text Usage</span></span>  
 <span data-ttu-id="da916-304">Esta propiedad no se utiliza normalmente en XAML.</span><span class="sxs-lookup"><span data-stu-id="da916-304">This property is not typically used in XAML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da916-305">En el ejemplo siguiente se muestra cómo establecer el <xref:System.Windows.Ink.DrawingAttributes.Width%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="da916-305">The following example demonstrates how to set the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property.</span></span> <span data-ttu-id="da916-306">El ejemplo se supone que la aplicación tiene un <xref:System.Windows.Controls.InkCanvas> llamado `inkCanvas1`y dos <xref:System.Windows.Ink.DrawingAttributes> objetos denominados `inkDA` y `highlighterDA`.</span><span class="sxs-lookup"><span data-stu-id="da916-306">The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`.</span></span> <span data-ttu-id="da916-307">Para obtener un ejemplo completo, vea el <xref:System.Windows.Ink.DrawingAttributes> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="da916-307">For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.</span></span>  
  
 [!code-csharp[DrawingAttributes#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#1)]
 [!code-vb[DrawingAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="da916-308">El valor de la propiedad <see cref="P:System.Windows.Ink.DrawingAttributes.Width" /> es menor que <see cref="F:System.Double.Epsilon" /> o tiene el valor <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da916-308">The <see cref="P:System.Windows.Ink.DrawingAttributes.Width" /> property is less than <see cref="F:System.Double.Epsilon" /> or <see cref="F:System.Double.NaN" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>
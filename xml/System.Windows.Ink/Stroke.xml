<Type Name="Stroke" FullName="System.Windows.Ink.Stroke">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="552a4a6d66394cb88938acbfb0ec85179a6b18b3" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52228215" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Stroke : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Stroke extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.Stroke" />
  <TypeSignature Language="VB.NET" Value="Public Class Stroke&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stroke : System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type Stroke = class&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="384f0-101">Representa un trazo único de tinta.</span>
      <span class="sxs-lookup">
        <span data-stu-id="384f0-101">Represents a single ink stroke.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-102">Un <xref:System.Windows.Ink.Stroke> es el objeto de datos que se recopila desde un dispositivo señalador, como un lápiz de tablet PC o un mouse.</span><span class="sxs-lookup"><span data-stu-id="384f0-102">A <xref:System.Windows.Ink.Stroke> is the data object that is collected from a pointing device, such as a tablet pen or a mouse.</span></span> <span data-ttu-id="384f0-103">El <xref:System.Windows.Ink.Stroke> se pueden crear y manipular mediante programación y se puede representar visualmente en un elemento habilitado para tinta, como el <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="384f0-103">The <xref:System.Windows.Ink.Stroke> can be created and manipulated programmatically, and can be represented visually on an ink-enabled element, such as the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="384f0-104">Un <xref:System.Windows.Ink.Stroke> contiene información sobre su posición y apariencia.</span><span class="sxs-lookup"><span data-stu-id="384f0-104">A <xref:System.Windows.Ink.Stroke> contains information about both its position and appearance.</span></span> <span data-ttu-id="384f0-105">El <xref:System.Windows.Ink.Stroke.StylusPoints%2A> propiedad es una colección de <xref:System.Windows.Input.StylusPoint> objetos que especifica la posición de la <xref:System.Windows.Ink.Stroke>.</span><span class="sxs-lookup"><span data-stu-id="384f0-105">The <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property is a collection of <xref:System.Windows.Input.StylusPoint> objects that specifies the position of the <xref:System.Windows.Ink.Stroke>.</span></span> <span data-ttu-id="384f0-106">El <xref:System.Windows.Ink.DrawingAttributes> propiedad especifica la apariencia de un trazo.</span><span class="sxs-lookup"><span data-stu-id="384f0-106">The <xref:System.Windows.Ink.DrawingAttributes> property specifies a stroke's appearance.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Ink.StrokeCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="384f0-107">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-107">Initializes a new instance of the <see cref="T:System.Windows.Ink.Stroke" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stroke (System.Windows.Input.StylusPointCollection stylusPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.StylusPointCollection stylusPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stylusPoints As StylusPointCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stroke(System::Windows::Input::StylusPointCollection ^ stylusPoints);" />
      <MemberSignature Language="F#" Value="new System.Windows.Ink.Stroke : System.Windows.Input.StylusPointCollection -&gt; System.Windows.Ink.Stroke" Usage="new System.Windows.Ink.Stroke stylusPoints" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stylusPoints" Type="System.Windows.Input.StylusPointCollection" />
      </Parameters>
      <Docs>
        <param name="stylusPoints">
          <span data-ttu-id="384f0-108">
            <see cref="T:System.Windows.Input.StylusPointCollection" /> que representa el objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-108">A <see cref="T:System.Windows.Input.StylusPointCollection" /> that represents the <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-109">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-109">Initializes a new instance of the <see cref="T:System.Windows.Ink.Stroke" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="384f0-110">En el ejemplo siguiente se muestra cómo crear un <xref:System.Windows.Ink.Stroke> desde un <xref:System.Windows.Input.StylusPointCollection> y <xref:System.Windows.Ink.DrawingAttributes> objeto.</span><span class="sxs-lookup"><span data-stu-id="384f0-110">The following example demonstrates how to create a <xref:System.Windows.Ink.Stroke> from a <xref:System.Windows.Input.StylusPointCollection> and <xref:System.Windows.Ink.DrawingAttributes> object.</span></span> <span data-ttu-id="384f0-111">En este ejemplo se supone que hay un <xref:System.Windows.Controls.InkPresenter> llamado `myInkPresenter`.</span><span class="sxs-lookup"><span data-stu-id="384f0-111">This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `myInkPresenter`.</span></span>  
  
 [!code-csharp[StrokeSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#2)]
 [!code-vb[StrokeSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="384f0-112">El valor de <paramref name="stylusPoints" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-112">
              <paramref name="stylusPoints" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="384f0-113">El parámetro <paramref name="stylusPoints" /> está vacío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-113">
              <paramref name="stylusPoints" /> is empty..</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stroke (System.Windows.Input.StylusPointCollection stylusPoints, System.Windows.Ink.DrawingAttributes drawingAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.StylusPointCollection stylusPoints, class System.Windows.Ink.DrawingAttributes drawingAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stroke(System::Windows::Input::StylusPointCollection ^ stylusPoints, System::Windows::Ink::DrawingAttributes ^ drawingAttributes);" />
      <MemberSignature Language="F#" Value="new System.Windows.Ink.Stroke : System.Windows.Input.StylusPointCollection * System.Windows.Ink.DrawingAttributes -&gt; System.Windows.Ink.Stroke" Usage="new System.Windows.Ink.Stroke (stylusPoints, drawingAttributes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stylusPoints" Type="System.Windows.Input.StylusPointCollection" />
        <Parameter Name="drawingAttributes" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="stylusPoints">
          <span data-ttu-id="384f0-114">
            <see cref="T:System.Windows.Input.StylusPointCollection" /> que representa el objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-114">A <see cref="T:System.Windows.Input.StylusPointCollection" /> that represents the <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </param>
        <param name="drawingAttributes">
          <span data-ttu-id="384f0-115">Objeto <see cref="T:System.Windows.Ink.DrawingAttributes" /> que especifica la apariencia del objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-115">A <see cref="T:System.Windows.Ink.DrawingAttributes" /> object that specifies the appearance of the <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-116">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-116">Initializes a new instance of the <see cref="T:System.Windows.Ink.Stroke" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="384f0-117">En el ejemplo siguiente se muestra cómo crear un <xref:System.Windows.Ink.Stroke> desde un <xref:System.Windows.Input.StylusPointCollection> y <xref:System.Windows.Ink.DrawingAttributes> objeto.</span><span class="sxs-lookup"><span data-stu-id="384f0-117">The following example demonstrates how to create a <xref:System.Windows.Ink.Stroke> from a <xref:System.Windows.Input.StylusPointCollection> and <xref:System.Windows.Ink.DrawingAttributes> object.</span></span>  <span data-ttu-id="384f0-118">En este ejemplo se supone que hay un <xref:System.Windows.Controls.InkPresenter> llamado `myInkPresenter`.</span><span class="sxs-lookup"><span data-stu-id="384f0-118">This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `myInkPresenter`.</span></span>  
  
 [!code-csharp[StrokeSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#2)]
 [!code-vb[StrokeSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="384f0-119">El valor de <paramref name="stylusPoints" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-119">
              <paramref name="stylusPoints" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="384f0-120">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-120">-or-</span>
          </span>
          <span data-ttu-id="384f0-121">El valor de <paramref name="drawingAtrributes" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-121">
              <paramref name="drawingAtrributes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="384f0-122">
            <paramref name="stylusPoints" /> está vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-122">
              <paramref name="stylusPoints" /> is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyData">
      <MemberSignature Language="C#" Value="public void AddPropertyData (Guid propertyDataId, object propertyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPropertyData(valuetype System.Guid propertyDataId, object propertyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyData (propertyDataId As Guid, propertyData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyData(Guid propertyDataId, System::Object ^ propertyData);" />
      <MemberSignature Language="F#" Value="member this.AddPropertyData : Guid * obj -&gt; unit" Usage="stroke.AddPropertyData (propertyDataId, propertyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
        <Parameter Name="propertyData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">
          <span data-ttu-id="384f0-123">Identificador único de la propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-123">The unique identifier for the property.</span>
          </span>
        </param>
        <param name="propertyData">
          <span data-ttu-id="384f0-124">Valor de la propiedad personalizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-124">The value of the custom property.</span>
          </span>
          <span data-ttu-id="384f0-125">
            <paramref name="propertyData" /> debe ser de tipo <see cref="T:System.Char" />, <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, <see cref="T:System.UInt32" />, <see cref="T:System.Int64" />, <see cref="T:System.UInt64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.DateTime" />, <see cref="T:System.Boolean" />, <see cref="T:System.String" />, <see cref="T:System.Decimal" /> o una matriz de estos tipos de datos, excepto <see cref="T:System.String" />, que no se permite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-125">
              <paramref name="propertyData" /> must be of type <see cref="T:System.Char" />, <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, <see cref="T:System.UInt32" />, <see cref="T:System.Int64" />, <see cref="T:System.UInt64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.DateTime" />, <see cref="T:System.Boolean" />, <see cref="T:System.String" />, <see cref="T:System.Decimal" /> or an array of these data types, except <see cref="T:System.String" />, which is not allowed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-126">Agrega una propiedad personalizada al objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-126">Adds a custom property to the <see cref="T:System.Windows.Ink.Stroke" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-127">Este método es útil si necesita almacenar información adicional en el <xref:System.Windows.Ink.Stroke>.</span><span class="sxs-lookup"><span data-stu-id="384f0-127">This method is useful if you need to store extra information in the <xref:System.Windows.Ink.Stroke>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-128">En el ejemplo siguiente se muestra cómo agregar una propiedad personalizada a un <xref:System.Windows.Ink.Stroke> objeto.</span><span class="sxs-lookup"><span data-stu-id="384f0-128">The following example demonstrates how to add a custom property to a <xref:System.Windows.Ink.Stroke> object.</span></span>  
  
 [!code-csharp[StrokeSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#3)]
 [!code-vb[StrokeSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="384f0-129">El argumento <paramref name="propertyData" /> no es ninguno de los tipos de datos permitidos que se muestran en la sección <see langword="Parameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-129">The <paramref name="propertyData" /> argument is not one of the allowed data types listed in the <see langword="Parameters" /> section.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Ink.Stroke Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Ink.Stroke Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Stroke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Ink::Stroke ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Windows.Ink.Stroke&#xA;override this.Clone : unit -&gt; System.Windows.Ink.Stroke" Usage="stroke.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.Stroke</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="384f0-130">Devuelve una copia en profundidad del objeto <see cref="T:System.Windows.Ink.Stroke" /> existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-130">Returns a deep copy of the existing <see cref="T:System.Windows.Ink.Stroke" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-131">El nuevo objeto <see cref="T:System.Windows.Ink.Stroke" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-131">The new <see cref="T:System.Windows.Ink.Stroke" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-132">Las propiedades de un objeto que es una copia en profundidad de otro objeto tienen los mismos valores que las propiedades del objeto original.</span><span class="sxs-lookup"><span data-stu-id="384f0-132">The properties of an object that is a deep copy of another object have the same values as the properties of the original object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-133">En el ejemplo siguiente se muestra cómo obtener una copia del elemento actual <xref:System.Windows.Ink.Stroke> objeto.</span><span class="sxs-lookup"><span data-stu-id="384f0-133">The following example demonstrates how to get a copy of the current <xref:System.Windows.Ink.Stroke> object.</span></span>  
  
 [!code-csharp[StrokeSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#5)]
 [!code-vb[StrokeSnippets#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPropertyData">
      <MemberSignature Language="C#" Value="public bool ContainsPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsPropertyData (propertyDataId As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsPropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.ContainsPropertyData : Guid -&gt; bool" Usage="stroke.ContainsPropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">
          <span data-ttu-id="384f0-134">Identificador único de la propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-134">The unique identifier for the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-135">Devuelve un valor que indica si el objeto <see cref="T:System.Windows.Ink.Stroke" /> contiene la propiedad personalizada especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-135">Returns a value that indicates whether the <see cref="T:System.Windows.Ink.Stroke" /> object contains the specified custom property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-136">Devuelve <see langword="true" /> si la propiedad personalizada existe; de lo contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-136">Returns <see langword="true" /> if the custom property exists; otherwise, returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="384f0-137">En el ejemplo siguiente se muestra cómo determinar si un <xref:System.Windows.Ink.Stroke> objeto tiene una propiedad personalizada.</span><span class="sxs-lookup"><span data-stu-id="384f0-137">The following example demonstrates how to determine whether a <xref:System.Windows.Ink.Stroke> object has a custom property.</span></span>  
  
 [!code-csharp[StrokeSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#3)]
 [!code-vb[StrokeSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
        <altmember cref="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Draw">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="384f0-138">Representa el objeto de la clase <see cref="T:System.Windows.Ink.Stroke" /> haciendo uso de un objeto de la clase <see cref="T:System.Windows.Media.DrawingContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-138">Renders the <see cref="T:System.Windows.Ink.Stroke" /> object based upon a <see cref="T:System.Windows.Media.DrawingContext" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (System.Windows.Media.DrawingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class System.Windows.Media.DrawingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Draw (context As DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Draw(System::Windows::Media::DrawingContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Draw : System.Windows.Media.DrawingContext -&gt; unit" Usage="stroke.Draw context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="384f0-139">El objeto <see cref="T:System.Windows.Media.DrawingContext" /> en el que se representará el trazo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-139">The <see cref="T:System.Windows.Media.DrawingContext" /> object onto which the stroke will be rendered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-140">Representa el objeto <see cref="T:System.Windows.Ink.Stroke" /> según el <see cref="T:System.Windows.Media.DrawingContext" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-140">Renders the <see cref="T:System.Windows.Ink.Stroke" /> object based upon the specified <see cref="T:System.Windows.Media.DrawingContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="384f0-141">En el ejemplo siguiente se muestra cómo dibujar un <xref:System.Windows.Ink.Stroke> objeto utilizando un <xref:System.Windows.Media.DrawingContext>.</span><span class="sxs-lookup"><span data-stu-id="384f0-141">The following example demonstrates how to draw a <xref:System.Windows.Ink.Stroke> object by using a <xref:System.Windows.Media.DrawingContext>.</span></span>  
  
 [!code-csharp[DrawTransform#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawTransform/CSharp/Program.cs#1)]
 [!code-vb[DrawTransform#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawTransform/VisualBasic/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (System.Windows.Media.DrawingContext drawingContext, System.Windows.Ink.DrawingAttributes drawingAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class System.Windows.Media.DrawingContext drawingContext, class System.Windows.Ink.DrawingAttributes drawingAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Draw(System::Windows::Media::DrawingContext ^ drawingContext, System::Windows::Ink::DrawingAttributes ^ drawingAttributes);" />
      <MemberSignature Language="F#" Value="member this.Draw : System.Windows.Media.DrawingContext * System.Windows.Ink.DrawingAttributes -&gt; unit" Usage="stroke.Draw (drawingContext, drawingAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
        <Parameter Name="drawingAttributes" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="drawingContext">
          <span data-ttu-id="384f0-142">El objeto <see cref="T:System.Windows.Media.DrawingContext" /> en el que se representará el trazo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-142">The <see cref="T:System.Windows.Media.DrawingContext" /> object onto which the stroke will be rendered.</span>
          </span>
        </param>
        <param name="drawingAttributes">
          <span data-ttu-id="384f0-143">Objeto <see cref="T:System.Windows.Ink.DrawingAttributes" /> que define los atributos del trazo que se dibuja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-143">The <see cref="T:System.Windows.Ink.DrawingAttributes" /> object defining the attributes of the stroke that is drawn.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-144">Representa el objeto de la clase <see cref="T:System.Windows.Ink.Stroke" /> haciendo uso de objetos de las clases <see cref="T:System.Windows.Media.DrawingContext" /> y <see cref="T:System.Windows.Ink.DrawingAttributes" /> especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-144">Renders the <see cref="T:System.Windows.Ink.Stroke" /> object based upon the specified <see cref="T:System.Windows.Media.DrawingContext" /> and <see cref="T:System.Windows.Ink.DrawingAttributes" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="384f0-145">En el ejemplo siguiente se muestra cómo dibujar un <xref:System.Windows.Ink.Stroke> objeto utilizando un <xref:System.Windows.Media.DrawingContext> y <xref:System.Windows.Ink.DrawingAttributes>.</span><span class="sxs-lookup"><span data-stu-id="384f0-145">The following example demonstrates how to draw a <xref:System.Windows.Ink.Stroke> object by using a <xref:System.Windows.Media.DrawingContext> and <xref:System.Windows.Ink.DrawingAttributes>.</span></span>  
  
 [!code-csharp[DrawTransform#2](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawTransform/CSharp/Program.cs#2)]
 [!code-vb[DrawTransform#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawTransform/VisualBasic/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawCore">
      <MemberSignature Language="C#" Value="protected virtual void DrawCore (System.Windows.Media.DrawingContext drawingContext, System.Windows.Ink.DrawingAttributes drawingAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DrawCore(class System.Windows.Media.DrawingContext drawingContext, class System.Windows.Ink.DrawingAttributes drawingAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DrawCore(System::Windows::Media::DrawingContext ^ drawingContext, System::Windows::Ink::DrawingAttributes ^ drawingAttributes);" />
      <MemberSignature Language="F#" Value="abstract member DrawCore : System.Windows.Media.DrawingContext * System.Windows.Ink.DrawingAttributes -&gt; unit&#xA;override this.DrawCore : System.Windows.Media.DrawingContext * System.Windows.Ink.DrawingAttributes -&gt; unit" Usage="stroke.DrawCore (drawingContext, drawingAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
        <Parameter Name="drawingAttributes" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="drawingContext">
          <span data-ttu-id="384f0-146">El objeto <see cref="T:System.Windows.Media.DrawingContext" /> en el que se representará el trazo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-146">The <see cref="T:System.Windows.Media.DrawingContext" /> object onto which the stroke will be rendered.</span>
          </span>
        </param>
        <param name="drawingAttributes">
          <span data-ttu-id="384f0-147">Objeto <see cref="T:System.Windows.Ink.DrawingAttributes" /> que define los atributos del trazo que se dibuja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-147">The <see cref="T:System.Windows.Ink.DrawingAttributes" /> object defining the attributes of the stroke that is drawn.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-148">Representa el objeto <see cref="T:System.Windows.Ink.Stroke" /> en el objeto <see cref="T:System.Windows.Media.DrawingContext" /> especificado utilizando el objeto <see cref="T:System.Windows.Ink.DrawingAttributes" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-148">Renders the <see cref="T:System.Windows.Ink.Stroke" /> on the specified <see cref="T:System.Windows.Media.DrawingContext" /> using the specified <see cref="T:System.Windows.Ink.DrawingAttributes" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-149">Invalidar el <xref:System.Windows.Ink.Stroke.DrawCore%2A> método para realizar dibujos personalizados cuando se hereda de la <xref:System.Windows.Ink.Stroke> clase.</span><span class="sxs-lookup"><span data-stu-id="384f0-149">Override the <xref:System.Windows.Ink.Stroke.DrawCore%2A> method to perform custom drawing when you inherit from the <xref:System.Windows.Ink.Stroke> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-150">En el ejemplo siguiente se muestra cómo dibujar un círculo en cada <xref:System.Windows.Input.StylusPoint> de un <xref:System.Windows.Ink.Stroke>.</span><span class="sxs-lookup"><span data-stu-id="384f0-150">The following example demonstrates how to draw a circle at each <xref:System.Windows.Input.StylusPoint> of a <xref:System.Windows.Ink.Stroke>.</span></span> <span data-ttu-id="384f0-151">Si el <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> propiedad está establecida en `true`, el <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> se utiliza para obtener los puntos del lápiz.</span><span class="sxs-lookup"><span data-stu-id="384f0-151">If the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property is set to `true`, the <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> is used to get the stylus points.</span></span> <span data-ttu-id="384f0-152">En caso contrario, el <xref:System.Windows.Ink.Stroke.StylusPoints%2A> se utiliza la propiedad.</span><span class="sxs-lookup"><span data-stu-id="384f0-152">Otherwise, the <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property is used.</span></span>  
  
 [!code-csharp[StrokeSnippets#23](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyStroke.cs#23)]
 [!code-vb[StrokeSnippets#23](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyStroke.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingAttributes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.DrawingAttributes DrawingAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.DrawingAttributes DrawingAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.Stroke.DrawingAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawingAttributes As DrawingAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::DrawingAttributes ^ DrawingAttributes { System::Windows::Ink::DrawingAttributes ^ get(); void set(System::Windows::Ink::DrawingAttributes ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DrawingAttributes : System.Windows.Ink.DrawingAttributes with get, set" Usage="System.Windows.Ink.Stroke.DrawingAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="384f0-153">Obtiene o establece el objeto <see cref="T:System.Windows.Ink.DrawingAttributes" /> para el objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-153">Gets or sets the <see cref="T:System.Windows.Ink.DrawingAttributes" /> for the <see cref="T:System.Windows.Ink.Stroke" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-154">Estos atributos, como el color y ancho, se aplican a la <xref:System.Windows.Ink.Stroke> objeto mientras se dibuja.</span><span class="sxs-lookup"><span data-stu-id="384f0-154">These attributes, such as color and width, are applied to the <xref:System.Windows.Ink.Stroke> object as it is drawn.</span></span>  
  
 <span data-ttu-id="384f0-155">Cambiar <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> hace que el <xref:System.Windows.Ink.Stroke.DrawingAttributesChanged> activación del evento.</span><span class="sxs-lookup"><span data-stu-id="384f0-155">Changing <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> causes the <xref:System.Windows.Ink.Stroke.DrawingAttributesChanged> event to fire.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-156">El ejemplo siguiente se establece la <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> para hacer que un trazo verde.</span><span class="sxs-lookup"><span data-stu-id="384f0-156">The following example sets the <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> to make a stroke green.</span></span>  
  
 [!code-csharp[StrokeSnippets#7](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#7)]
 [!code-vb[StrokeSnippets#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="384f0-157">El valor establecido es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-157">The set value is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DrawingAttributesChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.PropertyDataChangedEventHandler DrawingAttributesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.PropertyDataChangedEventHandler DrawingAttributesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.Stroke.DrawingAttributesChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DrawingAttributesChanged As PropertyDataChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::PropertyDataChangedEventHandler ^ DrawingAttributesChanged;" />
      <MemberSignature Language="F#" Value="member this.DrawingAttributesChanged : System.Windows.Ink.PropertyDataChangedEventHandler " Usage="member this.DrawingAttributesChanged : System.Windows.Ink.PropertyDataChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.PropertyDataChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="384f0-158">Se produce cuando cambia la propiedad <see cref="P:System.Windows.Ink.Stroke.DrawingAttributes" /> asociada al objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-158">Occurs when the <see cref="P:System.Windows.Ink.Stroke.DrawingAttributes" /> associated with the <see cref="T:System.Windows.Ink.Stroke" /> object change.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-159">El <xref:System.Windows.Ink.PropertyDataChangedEventArgs> contiene información acerca de la propiedad que cambió.</span><span class="sxs-lookup"><span data-stu-id="384f0-159">The <xref:System.Windows.Ink.PropertyDataChangedEventArgs> contains information about the property that changed.</span></span> <span data-ttu-id="384f0-160">Puede comparar la <xref:System.Windows.Ink.PropertyDataChangedEventArgs.PropertyGuid%2A> propiedad con respecto a los miembros de <xref:System.Windows.Ink.DrawingAttributeIds> para ver qué valor ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="384f0-160">You can compare the <xref:System.Windows.Ink.PropertyDataChangedEventArgs.PropertyGuid%2A> property against the members of <xref:System.Windows.Ink.DrawingAttributeIds> to see which value changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-161">El ejemplo siguiente muestra cómo agregar un controlador para este evento.</span><span class="sxs-lookup"><span data-stu-id="384f0-161">The following example demonstrates how to add a handler for this event.</span></span>  
  
 [!code-csharp[StrokeSnippets#8](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#8)]
 [!code-vb[StrokeSnippets#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Ink.Stroke.DrawingAttributes" />
        <altmember cref="E:System.Windows.Ink.Stroke.DrawingAttributesReplaced" />
        <altmember cref="M:System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.DrawingAttributesReplacedEventHandler DrawingAttributesReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.DrawingAttributesReplacedEventHandler DrawingAttributesReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.Stroke.DrawingAttributesReplaced" />
      <MemberSignature Language="VB.NET" Value="Public Event DrawingAttributesReplaced As DrawingAttributesReplacedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::DrawingAttributesReplacedEventHandler ^ DrawingAttributesReplaced;" />
      <MemberSignature Language="F#" Value="member this.DrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventHandler " Usage="member this.DrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributesReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="384f0-162">Se produce cuando se reemplazan los atributos de dibujo de un objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-162">Occurs when the drawing attributes of a <see cref="T:System.Windows.Ink.Stroke" /> object are replaced.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="384f0-163">El ejemplo siguiente muestra cómo agregar un controlador para este evento.</span><span class="sxs-lookup"><span data-stu-id="384f0-163">The following example demonstrates how to add a handler for this event.</span></span>  
  
 [!code-csharp[StrokeSnippets#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#9)]
 [!code-vb[StrokeSnippets#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Ink.Stroke.DrawingAttributes" />
        <altmember cref="M:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="GetBezierStylusPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointCollection GetBezierStylusPoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.StylusPointCollection GetBezierStylusPoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetBezierStylusPoints" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBezierStylusPoints () As StylusPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::StylusPointCollection ^ GetBezierStylusPoints();" />
      <MemberSignature Language="F#" Value="member this.GetBezierStylusPoints : unit -&gt; System.Windows.Input.StylusPointCollection" Usage="stroke.GetBezierStylusPoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="384f0-164">Devuelve los puntos de lápiz óptico que utiliza el objeto <see cref="T:System.Windows.Ink.Stroke" /> cuando el valor de la propiedad <see cref="P:System.Windows.Ink.DrawingAttributes.FitToCurve" /> es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-164">Returns the stylus points the <see cref="T:System.Windows.Ink.Stroke" /> uses when <see cref="P:System.Windows.Ink.DrawingAttributes.FitToCurve" /> is <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-165">Objeto de la clase <see cref="T:System.Windows.Input.StylusPointCollection" /> que contiene los puntos de lápiz óptico a lo largo del lomo de un objeto <see cref="T:System.Windows.Ink.Stroke" /> cuando el valor de <see cref="P:System.Windows.Ink.DrawingAttributes.FitToCurve" /> es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-165">A <see cref="T:System.Windows.Input.StylusPointCollection" /> that contains the stylus points along the spine of a <see cref="T:System.Windows.Ink.Stroke" /> when <see cref="P:System.Windows.Ink.DrawingAttributes.FitToCurve" /> is <see langword="true" /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-166">El <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> devuelve un nuevo método <xref:System.Windows.Input.StylusPointCollection> que contiene el lápiz que apunta el <xref:System.Windows.Ink.Stroke> cuando usa el <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> propiedad en el <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> propiedad está establecida en `true`.</span><span class="sxs-lookup"><span data-stu-id="384f0-166">The <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> method returns a new <xref:System.Windows.Input.StylusPointCollection> that contains the stylus points that the <xref:System.Windows.Ink.Stroke> uses when the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property on the <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property is set to `true`.</span></span>  <span data-ttu-id="384f0-167">Para obtener los puntos de lápiz óptico que se utiliza cuando <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> está establecido en `false`, utilice el <xref:System.Windows.Ink.Stroke.StylusPoints%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="384f0-167">To get the stylus points that are used when <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> is set to `false`, use the <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-168">En el ejemplo siguiente se muestra cómo dibujar un círculo en cada <xref:System.Windows.Input.StylusPoint> de un <xref:System.Windows.Ink.Stroke>.</span><span class="sxs-lookup"><span data-stu-id="384f0-168">The following example demonstrates how to draw a circle at each <xref:System.Windows.Input.StylusPoint> of a <xref:System.Windows.Ink.Stroke>.</span></span> <span data-ttu-id="384f0-169">Si el <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> propiedad está establecida en `true`, el <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> se utiliza para obtener los puntos del lápiz.</span><span class="sxs-lookup"><span data-stu-id="384f0-169">If the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property is set to `true`, the <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> is used to get the stylus points.</span></span> <span data-ttu-id="384f0-170">En caso contrario, el <xref:System.Windows.Ink.Stroke.StylusPoints%2A> se utiliza la propiedad.</span><span class="sxs-lookup"><span data-stu-id="384f0-170">Otherwise, the <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property is used.</span></span>  
  
 [!code-csharp[StrokeSnippets#23](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyStroke.cs#23)]
 [!code-vb[StrokeSnippets#23](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyStroke.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Rect GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Rect GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBounds () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Rect GetBounds();" />
      <MemberSignature Language="F#" Value="abstract member GetBounds : unit -&gt; System.Windows.Rect&#xA;override this.GetBounds : unit -&gt; System.Windows.Rect" Usage="stroke.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="384f0-171">Recupera el rectángulo de selección para el objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-171">Retrieves the bounding box for the <see cref="T:System.Windows.Ink.Stroke" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-172">Estructura <see cref="T:System.Windows.Rect" /> que define el rectángulo de selección para el objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-172">A <see cref="T:System.Windows.Rect" /> structure defining the bounding box for the <see cref="T:System.Windows.Ink.Stroke" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="384f0-173">En el ejemplo siguiente se muestra cómo obtener el rectángulo delimitador para un <xref:System.Windows.Ink.Stroke> objeto.</span><span class="sxs-lookup"><span data-stu-id="384f0-173">The following example demonstrates how to get the boundary rectangle for a <xref:System.Windows.Ink.Stroke> object.</span></span>  
  
 [!code-csharp[StrokeSnippets#11](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#11)]
 [!code-vb[StrokeSnippets#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClipResult">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="384f0-174">Devuelve los segmentos del actual objeto <see cref="T:System.Windows.Ink.Stroke" /> que están dentro del área especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-174">Returns segments of the current <see cref="T:System.Windows.Ink.Stroke" /> that are within the specified area.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClipResult">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetClipResult (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetClipResult(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClipResult (lassoPoints As IEnumerable(Of Point)) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ GetClipResult(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints);" />
      <MemberSignature Language="F#" Value="member this.GetClipResult : seq&lt;System.Windows.Point&gt; -&gt; System.Windows.Ink.StrokeCollection" Usage="stroke.GetClipResult lassoPoints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">
          <span data-ttu-id="384f0-175">Puntos que especifican la línea que define dónde se va a recortar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-175">The points that specify the line which defines where to clip.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-176">Devuelve los segmentos del actual objeto <see cref="T:System.Windows.Ink.Stroke" /> que están dentro de los límites especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-176">Returns segments of the current <see cref="T:System.Windows.Ink.Stroke" /> that are within the specified bounds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-177">
            <see cref="T:System.Windows.Ink.StrokeCollection" /> que contiene copias de los segmentos del actual objeto <see cref="T:System.Windows.Ink.Stroke" /> que están dentro de los límites especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-177">A <see cref="T:System.Windows.Ink.StrokeCollection" /> that contains copies of the segments of the current <see cref="T:System.Windows.Ink.Stroke" /> that are within the specified bounds.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-178">El <xref:System.Windows.Ink.Stroke.GetClipResult%2A> método devuelve un <xref:System.Windows.Ink.StrokeCollection> que contiene los trazos que representan los segmentos de la <xref:System.Windows.Ink.Stroke> que está dentro de `lassoPoints`.</span><span class="sxs-lookup"><span data-stu-id="384f0-178">The <xref:System.Windows.Ink.Stroke.GetClipResult%2A> method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that is within `lassoPoints`.</span></span> <span data-ttu-id="384f0-179"><xref:System.Windows.Ink.Stroke.GetClipResult%2A> no se cambia el original <xref:System.Windows.Ink.Stroke>.</span><span class="sxs-lookup"><span data-stu-id="384f0-179"><xref:System.Windows.Ink.Stroke.GetClipResult%2A> does not change the original <xref:System.Windows.Ink.Stroke>.</span></span>  
  
 <span data-ttu-id="384f0-180">El <xref:System.Windows.Ink.Stroke.GetClipResult%2A> método conecta los puntos inicial y final en `lassoPoints` para crear el lazo.</span><span class="sxs-lookup"><span data-stu-id="384f0-180">The <xref:System.Windows.Ink.Stroke.GetClipResult%2A> method connects the first and last points in `lassoPoints` to create the lasso.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-181">El ejemplo siguiente quita la entrada de lápiz que está fuera de los límites especificados.</span><span class="sxs-lookup"><span data-stu-id="384f0-181">The following example removes the ink that is outside of the specified bounds.</span></span>  
  
 [!code-csharp[HitTestSample#6](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#6)]
 [!code-vb[HitTestSample#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClipResult">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetClipResult (System.Windows.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetClipResult(valuetype System.Windows.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetClipResult(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClipResult (bounds As Rect) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ GetClipResult(System::Windows::Rect bounds);" />
      <MemberSignature Language="F#" Value="member this.GetClipResult : System.Windows.Rect -&gt; System.Windows.Ink.StrokeCollection" Usage="stroke.GetClipResult bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">
          <span data-ttu-id="384f0-182">
            <see cref="T:System.Windows.Rect" /> que especifica el área que se va a recortar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-182">A <see cref="T:System.Windows.Rect" /> that specifies the area to clip.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-183">Devuelve los segmentos del actual objeto <see cref="T:System.Windows.Ink.Stroke" /> que están dentro del rectángulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-183">Returns segments of the current <see cref="T:System.Windows.Ink.Stroke" /> that are within the specified rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-184">
            <see cref="T:System.Windows.Ink.StrokeCollection" /> que contiene copias de los segmentos del actual objeto <see cref="T:System.Windows.Ink.Stroke" /> que están dentro de los límites de <paramref name="bounds" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-184">A <see cref="T:System.Windows.Ink.StrokeCollection" /> that contains copies of the segments of the current <see cref="T:System.Windows.Ink.Stroke" /> that are within the bounds of <paramref name="bounds" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-185">El <xref:System.Windows.Ink.Stroke.GetClipResult%2A> método devuelve un <xref:System.Windows.Ink.StrokeCollection> que contiene los trazos que representan los segmentos de la <xref:System.Windows.Ink.Stroke> que está dentro de `bounds`.</span><span class="sxs-lookup"><span data-stu-id="384f0-185">The <xref:System.Windows.Ink.Stroke.GetClipResult%2A> method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that is within `bounds`.</span></span> <span data-ttu-id="384f0-186"><xref:System.Windows.Ink.Stroke.GetClipResult%2A> no se cambia el original <xref:System.Windows.Ink.Stroke>.</span><span class="sxs-lookup"><span data-stu-id="384f0-186"><xref:System.Windows.Ink.Stroke.GetClipResult%2A> does not change the original <xref:System.Windows.Ink.Stroke>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-187">El ejemplo siguiente quita la entrada de lápiz que está fuera de los límites especificados.</span><span class="sxs-lookup"><span data-stu-id="384f0-187">The following example removes the ink that is outside of the specified bounds.</span></span>  
  
 [!code-csharp[HitTestSample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#5)]
 [!code-vb[HitTestSample#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEraseResult">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="384f0-188">Devuelve los segmentos del actual objeto <see cref="T:System.Windows.Ink.Stroke" /> después de que se borre parte del objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-188">Returns the segments of the current <see cref="T:System.Windows.Ink.Stroke" /> after part of the <see cref="T:System.Windows.Ink.Stroke" /> is erased.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEraseResult">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetEraseResult (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetEraseResult(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraseResult (lassoPoints As IEnumerable(Of Point)) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ GetEraseResult(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints);" />
      <MemberSignature Language="F#" Value="member this.GetEraseResult : seq&lt;System.Windows.Point&gt; -&gt; System.Windows.Ink.StrokeCollection" Usage="stroke.GetEraseResult lassoPoints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">
          <span data-ttu-id="384f0-189">Matriz de tipo <see cref="T:System.Windows.Point" /> que especifica el área que se va a borrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-189">An array of type <see cref="T:System.Windows.Point" /> that specifies the area to erase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-190">Devuelve los segmentos del actual objeto <see cref="T:System.Windows.Ink.Stroke" /> que están fuera de los límites especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-190">Returns segments of the current <see cref="T:System.Windows.Ink.Stroke" /> that are outside the specified bounds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-191">
            <see cref="T:System.Windows.Ink.StrokeCollection" /> que contiene los segmentos del actual objeto <see cref="T:System.Windows.Ink.Stroke" /> que están fuera de los límites especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-191">A <see cref="T:System.Windows.Ink.StrokeCollection" /> that contains the segments of the current <see cref="T:System.Windows.Ink.Stroke" /> that are outside the specified bounds.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-192">El <xref:System.Windows.Ink.Stroke.GetEraseResult%2A> método devuelve un <xref:System.Windows.Ink.StrokeCollection> que contiene los trazos que representan los segmentos de la <xref:System.Windows.Ink.Stroke> que están fuera de `lassoPoints`.</span><span class="sxs-lookup"><span data-stu-id="384f0-192">The <xref:System.Windows.Ink.Stroke.GetEraseResult%2A> method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that are outside of `lassoPoints`.</span></span> <span data-ttu-id="384f0-193"><xref:System.Windows.Ink.Stroke.GetEraseResult%2A> no se cambia el original <xref:System.Windows.Ink.Stroke>.</span><span class="sxs-lookup"><span data-stu-id="384f0-193"><xref:System.Windows.Ink.Stroke.GetEraseResult%2A> does not change the original <xref:System.Windows.Ink.Stroke>.</span></span>  
  
 <span data-ttu-id="384f0-194">El <xref:System.Windows.Ink.Stroke.GetClipResult%2A> método conecta los puntos inicial y final en `lassoPoints` para crear el lazo.</span><span class="sxs-lookup"><span data-stu-id="384f0-194">The <xref:System.Windows.Ink.Stroke.GetClipResult%2A> method connects the first and last points in `lassoPoints` to create the lasso.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-195">El ejemplo siguiente quita la entrada de lápiz que está dentro de los límites especificados.</span><span class="sxs-lookup"><span data-stu-id="384f0-195">The following example removes the ink that is within the specified bounds.</span></span>  
  
 [!code-csharp[HitTestSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#1)]
 [!code-vb[HitTestSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEraseResult">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetEraseResult (System.Windows.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetEraseResult(valuetype System.Windows.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetEraseResult(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraseResult (bounds As Rect) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ GetEraseResult(System::Windows::Rect bounds);" />
      <MemberSignature Language="F#" Value="member this.GetEraseResult : System.Windows.Rect -&gt; System.Windows.Ink.StrokeCollection" Usage="stroke.GetEraseResult bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">
          <span data-ttu-id="384f0-196">
            <see cref="T:System.Windows.Rect" /> que especifica el área que se va a borrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-196">A <see cref="T:System.Windows.Rect" /> that specifies the area to erase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-197">Devuelve los segmentos del actual objeto <see cref="T:System.Windows.Ink.Stroke" /> que están fuera del rectángulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-197">Returns segments of the current <see cref="T:System.Windows.Ink.Stroke" /> that are outside the specified rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-198">
            <see cref="T:System.Windows.Ink.StrokeCollection" /> que contiene los segmentos del actual objeto <see cref="T:System.Windows.Ink.Stroke" /> que están fuera de los límites de la estructura <see cref="T:System.Windows.Rect" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-198">A <see cref="T:System.Windows.Ink.StrokeCollection" /> that contains the segments of the current <see cref="T:System.Windows.Ink.Stroke" /> that are outside the bounds of the specified <see cref="T:System.Windows.Rect" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-199">El <xref:System.Windows.Ink.Stroke.GetEraseResult%2A> método devuelve un <xref:System.Windows.Ink.StrokeCollection> que contiene los trazos que representan los segmentos de la <xref:System.Windows.Ink.Stroke> que están fuera de `bounds`.</span><span class="sxs-lookup"><span data-stu-id="384f0-199">The <xref:System.Windows.Ink.Stroke.GetEraseResult%2A> method returns a <xref:System.Windows.Ink.StrokeCollection> that contains strokes that represent the segments of the <xref:System.Windows.Ink.Stroke> that are outside of `bounds`.</span></span> <span data-ttu-id="384f0-200"><xref:System.Windows.Ink.Stroke.GetEraseResult%2A> no se cambia el original <xref:System.Windows.Ink.Stroke>.</span><span class="sxs-lookup"><span data-stu-id="384f0-200"><xref:System.Windows.Ink.Stroke.GetEraseResult%2A> does not change the original <xref:System.Windows.Ink.Stroke>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-201">El ejemplo siguiente quita la entrada de lápiz que está dentro de los límites especificados.</span><span class="sxs-lookup"><span data-stu-id="384f0-201">The following example removes the ink that is within the specified bounds.</span></span>  
  
 [!code-csharp[HitTestSample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#4)]
 [!code-vb[HitTestSample#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEraseResult">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetEraseResult (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; eraserPath, System.Windows.Ink.StylusShape eraserShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetEraseResult(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; eraserPath, class System.Windows.Ink.StylusShape eraserShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraseResult (eraserPath As IEnumerable(Of Point), eraserShape As StylusShape) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ GetEraseResult(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ eraserPath, System::Windows::Ink::StylusShape ^ eraserShape);" />
      <MemberSignature Language="F#" Value="member this.GetEraseResult : seq&lt;System.Windows.Point&gt; * System.Windows.Ink.StylusShape -&gt; System.Windows.Ink.StrokeCollection" Usage="stroke.GetEraseResult (eraserPath, eraserShape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraserPath" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="eraserShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="eraserPath">
          <span data-ttu-id="384f0-202">Matriz de tipo <see cref="T:System.Windows.Point" /> que especifica el trazado que disecciona el objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-202">An array of type <see cref="T:System.Windows.Point" /> that specifies the path that dissects the <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </param>
        <param name="eraserShape">
          <span data-ttu-id="384f0-203">
            <see cref="T:System.Windows.Ink.StylusShape" /> que especifica la forma del borrador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-203">A <see cref="T:System.Windows.Ink.StylusShape" /> that specifies the shape of the eraser.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-204">Devuelve los segmentos del actual objeto <see cref="T:System.Windows.Ink.Stroke" /> una vez diseccionado por el trazado designado utilizando el objeto <see cref="T:System.Windows.Ink.StylusShape" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-204">Returns the segments of the current <see cref="T:System.Windows.Ink.Stroke" /> after it is dissected by the designated path using the specified <see cref="T:System.Windows.Ink.StylusShape" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-205">
            <see cref="T:System.Windows.Ink.StrokeCollection" /> que contiene copias de los segmentos del actual objeto <see cref="T:System.Windows.Ink.Stroke" /> una vez diseccionado por el trazado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-205">A <see cref="T:System.Windows.Ink.StrokeCollection" /> that contains copies of the segments of the current <see cref="T:System.Windows.Ink.Stroke" /> after it is dissected by the specified path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-206">El <xref:System.Windows.Ink.Stroke.GetEraseResult%2A> usos del método `eraserShape` alcance el trazo a lo largo de la prueba `eraserPath` y devuelve un <xref:System.Windows.Ink.StrokeCollection> que representan los segmentos diseccionados.</span><span class="sxs-lookup"><span data-stu-id="384f0-206">The <xref:System.Windows.Ink.Stroke.GetEraseResult%2A> method uses `eraserShape` to hit test the stroke along `eraserPath` and returns a <xref:System.Windows.Ink.StrokeCollection> that represent dissected segments.</span></span> <span data-ttu-id="384f0-207"><xref:System.Windows.Ink.Stroke.GetEraseResult%2A> no se cambia el original <xref:System.Windows.Ink.Stroke>.</span><span class="sxs-lookup"><span data-stu-id="384f0-207"><xref:System.Windows.Ink.Stroke.GetEraseResult%2A> does not change the original <xref:System.Windows.Ink.Stroke>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-208">El ejemplo siguiente muestra cómo borrar la tinta que forma una intersección con una ruta de acceso especificada.</span><span class="sxs-lookup"><span data-stu-id="384f0-208">The following example demonstrates how to erase the ink that intersects a specified path.</span></span>  
  
 [!code-csharp[HitTestSample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#2)]
 [!code-vb[HitTestSample#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGeometry">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="384f0-209">Obtiene la propiedad <see cref="T:System.Windows.Media.Geometry" /> del objeto <see cref="T:System.Windows.Ink.Stroke" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-209">Gets the <see cref="T:System.Windows.Media.Geometry" /> of the current <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry GetGeometry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry GetGeometry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetGeometry" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeometry () As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ GetGeometry();" />
      <MemberSignature Language="F#" Value="member this.GetGeometry : unit -&gt; System.Windows.Media.Geometry" Usage="stroke.GetGeometry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="384f0-210">Obtiene la propiedad <see cref="T:System.Windows.Media.Geometry" /> del objeto <see cref="T:System.Windows.Ink.Stroke" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-210">Gets the <see cref="T:System.Windows.Media.Geometry" /> of the current <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-211">
            <see cref="T:System.Windows.Media.Geometry" /> que representa el objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-211">A <see cref="T:System.Windows.Media.Geometry" /> that represents the <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-212">Use la <xref:System.Windows.Ink.Stroke.GetGeometry%2A> método para obtener un <xref:System.Windows.Media.PathGeometry> para personalizar la forma de la <xref:System.Windows.Ink.Stroke>.</span><span class="sxs-lookup"><span data-stu-id="384f0-212">Use the <xref:System.Windows.Ink.Stroke.GetGeometry%2A> method to get a <xref:System.Windows.Media.PathGeometry> to customize the shape of the <xref:System.Windows.Ink.Stroke>.</span></span> <span data-ttu-id="384f0-213">Considere la posibilidad de almacenar en caché el <xref:System.Windows.Media.Geometry> para evitar llamar a <xref:System.Windows.Ink.Stroke.GetGeometry%2A> varias veces, lo que puede afectar al rendimiento.</span><span class="sxs-lookup"><span data-stu-id="384f0-213">Consider caching the <xref:System.Windows.Media.Geometry> to avoid calling <xref:System.Windows.Ink.Stroke.GetGeometry%2A> multiple times, which may impact performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry GetGeometry (System.Windows.Ink.DrawingAttributes drawingAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry GetGeometry(class System.Windows.Ink.DrawingAttributes drawingAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ GetGeometry(System::Windows::Ink::DrawingAttributes ^ drawingAttributes);" />
      <MemberSignature Language="F#" Value="member this.GetGeometry : System.Windows.Ink.DrawingAttributes -&gt; System.Windows.Media.Geometry" Usage="stroke.GetGeometry drawingAttributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingAttributes" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="drawingAttributes">
          <span data-ttu-id="384f0-214">Objeto <see cref="T:System.Windows.Ink.DrawingAttributes" /> que determina el objeto <see cref="T:System.Windows.Media.Geometry" /> del objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-214">The <see cref="T:System.Windows.Ink.DrawingAttributes" /> that determines the <see cref="T:System.Windows.Media.Geometry" /> of the <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-215">Obtiene el objeto <see cref="T:System.Windows.Media.Geometry" /> del actual objeto <see cref="T:System.Windows.Ink.Stroke" /> utilizando el objeto <see cref="T:System.Windows.Ink.DrawingAttributes" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-215">Gets the <see cref="T:System.Windows.Media.Geometry" /> of the current <see cref="T:System.Windows.Ink.Stroke" /> using the specified <see cref="T:System.Windows.Ink.DrawingAttributes" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-216">
            <see cref="T:System.Windows.Media.Geometry" /> que representa el objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-216">A <see cref="T:System.Windows.Media.Geometry" /> that represents the <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-217">El <xref:System.Windows.Ink.Stroke.GetGeometry%2A> método usa la <xref:System.Windows.Ink.DrawingAttributes.Width%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> y <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> propiedades de `drawingAttributes` para determinar el <xref:System.Windows.Media.Geometry>.</span><span class="sxs-lookup"><span data-stu-id="384f0-217">The <xref:System.Windows.Ink.Stroke.GetGeometry%2A> method uses the <xref:System.Windows.Ink.DrawingAttributes.Width%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> and <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> properties of `drawingAttributes` to determine the <xref:System.Windows.Media.Geometry>.</span></span> <span data-ttu-id="384f0-218">Considere la posibilidad de almacenar en caché el <xref:System.Windows.Media.Geometry> para evitar llamar a <xref:System.Windows.Ink.Stroke.GetGeometry%2A> varias veces, lo que puede afectar al rendimiento.</span><span class="sxs-lookup"><span data-stu-id="384f0-218">Consider caching the <xref:System.Windows.Media.Geometry> to avoid calling <xref:System.Windows.Ink.Stroke.GetGeometry%2A> multiple times, which may impact performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-219">En el ejemplo siguiente se muestra cómo dibujar un círculo en cada <xref:System.Windows.Input.StylusPoint> de un <xref:System.Windows.Ink.Stroke>.</span><span class="sxs-lookup"><span data-stu-id="384f0-219">The following example demonstrates how to draw a circle at each <xref:System.Windows.Input.StylusPoint> of a <xref:System.Windows.Ink.Stroke>.</span></span> <span data-ttu-id="384f0-220">Si el <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> propiedad está establecida en `true`, el <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> se utiliza para obtener los puntos del lápiz.</span><span class="sxs-lookup"><span data-stu-id="384f0-220">If the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property is set to `true`, the <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> is used to get the stylus points.</span></span> <span data-ttu-id="384f0-221">En caso contrario, el <xref:System.Windows.Ink.Stroke.StylusPoints%2A> se utiliza la propiedad.</span><span class="sxs-lookup"><span data-stu-id="384f0-221">Otherwise, the <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property is used.</span></span>  
  
 [!code-csharp[StrokeSnippets#23](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyStroke.cs#23)]
 [!code-vb[StrokeSnippets#23](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyStroke.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyData">
      <MemberSignature Language="C#" Value="public object GetPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyData (propertyDataId As Guid) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyData : Guid -&gt; obj" Usage="stroke.GetPropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">
          <span data-ttu-id="384f0-222">Identificador único de la propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-222">The unique identifier for the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-223">Recupera los datos de la propiedad del GUID especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-223">Retrieves the property data for the specified GUID.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-224">
            <see langword="object" /> que contiene los datos de la propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-224">An <see langword="object" /> containing the property data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="384f0-225">En el ejemplo siguiente se muestra cómo recuperar una propiedad personalizada en un <xref:System.Windows.Ink.Stroke> objeto.</span><span class="sxs-lookup"><span data-stu-id="384f0-225">The following example demonstrates how to retrieve a custom property on a <xref:System.Windows.Ink.Stroke> object.</span></span>  
  
 [!code-csharp[StrokeSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#3)]
 [!code-vb[StrokeSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="384f0-226">El parámetro <paramref name="propertyDataId" /> no está asociado a una propiedad personalizada de <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-226">
              <paramref name="propertyDataId" /> is not associated with a custom property of the <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
        <altmember cref="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.GetPropertyDataIds" />
        <altmember cref="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyDataIds">
      <MemberSignature Language="C#" Value="public Guid[] GetPropertyDataIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Guid[] GetPropertyDataIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.GetPropertyDataIds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyDataIds () As Guid()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Guid&gt; ^ GetPropertyDataIds();" />
      <MemberSignature Language="F#" Value="member this.GetPropertyDataIds : unit -&gt; Guid[]" Usage="stroke.GetPropertyDataIds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="384f0-227">Recupera los GUID de las propiedades personalizadas asociadas al objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-227">Retrieves the GUIDs of any custom properties associated with the <see cref="T:System.Windows.Ink.Stroke" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-228">Matriz de objetos <see cref="T:System.Guid" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-228">An array of <see cref="T:System.Guid" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="384f0-229">El ejemplo siguiente muestra cómo obtener los GUID de propiedades personalizadas de un trazo.</span><span class="sxs-lookup"><span data-stu-id="384f0-229">The following example demonstrates how to get the GUIDs of a stroke's custom properties.</span></span>  
  
 [!code-csharp[DrawTransform#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawTransform/CSharp/Program.cs#3)]
 [!code-vb[DrawTransform#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawTransform/VisualBasic/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
        <altmember cref="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="384f0-230">Devuelve si el objeto <see cref="T:System.Windows.Ink.Stroke" /> forma una intersección o está dentro de un área determinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-230">Returns whether the <see cref="T:System.Windows.Ink.Stroke" /> intersects or is within a certain area.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-231">Puede usar el <xref:System.Windows.Ink.Stroke.HitTest%2A> métodos para determinar si un <xref:System.Windows.Ink.Stroke> forma una intersección con un punto determinado o está dentro de los límites especificados.</span><span class="sxs-lookup"><span data-stu-id="384f0-231">You can use the <xref:System.Windows.Ink.Stroke.HitTest%2A> methods to determine whether a <xref:System.Windows.Ink.Stroke> intersects a certain point or is within specified bounds.</span></span>  
  
 <span data-ttu-id="384f0-232">Los siguientes métodos de protección si el <xref:System.Windows.Ink.Stroke> intersecta.</span><span class="sxs-lookup"><span data-stu-id="384f0-232">The following methods check whether the <xref:System.Windows.Ink.Stroke> is intersected.</span></span>  
  
-   <xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Point%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Point%2CSystem.Double%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Ink.Stroke.HitTest%28System.Collections.Generic.IEnumerable%7BSystem.Windows.Point%7D%2CSystem.Windows.Ink.StylusShape%29?displayProperty=nameWithType>  
  
 <span data-ttu-id="384f0-233">Los siguientes métodos de protección si el <xref:System.Windows.Ink.Stroke> está rodeado.</span><span class="sxs-lookup"><span data-stu-id="384f0-233">The following methods check whether the <xref:System.Windows.Ink.Stroke> is surrounded.</span></span>  
  
-   <xref:System.Windows.Ink.Stroke.HitTest%28System.Collections.Generic.IEnumerable%7BSystem.Windows.Point%7D%2CSystem.Int32%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Rect%2CSystem.Int32%29?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public bool HitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HitTest(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Windows.Point -&gt; bool" Usage="stroke.HitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="384f0-234">
            <see cref="T:System.Windows.Point" /> para la prueba de posicionamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-234">The <see cref="T:System.Windows.Point" /> to hit test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-235">Devuelve un valor que indica si el actual objeto <see cref="T:System.Windows.Ink.Stroke" /> forma una intersección con el punto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-235">Returns a value that indicates whether current <see cref="T:System.Windows.Ink.Stroke" /> intersects the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-236">Es <see langword="true" /> si <paramref name="point" /> interseca con el actual trazo; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-236">
              <see langword="true" /> if <paramref name="point" /> intersects the current stroke; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-237">Este método comporta igual que sobrecargado <xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Point%2CSystem.Double%29> método hace cuando `diameter` es 1.</span><span class="sxs-lookup"><span data-stu-id="384f0-237">This method behaves the same way as the overloaded <xref:System.Windows.Ink.Stroke.HitTest%28System.Windows.Point%2CSystem.Double%29> method does when `diameter` is 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-238">En el ejemplo siguiente se cambia el color de un <xref:System.Windows.Ink.Stroke> si forma una intersección con un área concreta.</span><span class="sxs-lookup"><span data-stu-id="384f0-238">The following example changes the color of a <xref:System.Windows.Ink.Stroke> if it intersects a certain area.</span></span>  
  
 [!code-csharp[HitTestSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#3)]
 [!code-vb[HitTestSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public bool HitTest (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints, int percentageWithinLasso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HitTest(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints, int32 percentageWithinLasso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (lassoPoints As IEnumerable(Of Point), percentageWithinLasso As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HitTest(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints, int percentageWithinLasso);" />
      <MemberSignature Language="F#" Value="member this.HitTest : seq&lt;System.Windows.Point&gt; * int -&gt; bool" Usage="stroke.HitTest (lassoPoints, percentageWithinLasso)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="percentageWithinLasso" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">
          <span data-ttu-id="384f0-239">Matriz de tipo <see cref="T:System.Windows.Point" /> que representa los límites del área objeto de la prueba de posicionamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-239">An array of type <see cref="T:System.Windows.Point" /> that represents the bounds of the area to hit test.</span>
          </span>
        </param>
        <param name="percentageWithinLasso">
          <span data-ttu-id="384f0-240">Porcentaje de la longitud del objeto <see cref="T:System.Windows.Ink.Stroke" /> que debe estar en <paramref name="lassoPoints" /> para que el objeto <see cref="T:System.Windows.Ink.Stroke" /> se considere incluido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-240">The percentage of the length of the <see cref="T:System.Windows.Ink.Stroke" />, that must be in <paramref name="lassoPoints" /> for the <see cref="T:System.Windows.Ink.Stroke" /> to be considered hit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-241">Devuelve un valor que indica si el actual objeto <see cref="T:System.Windows.Ink.Stroke" /> está dentro de los límites especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-241">Returns a value that indicates whether the current <see cref="T:System.Windows.Ink.Stroke" /> is within the specified bounds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-242">Es <see langword="true" /> si el trazo actual está dentro de los límites especificados; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-242">
              <see langword="true" /> if the current stroke is within the specified bounds; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-243">El <xref:System.Windows.Ink.Stroke.HitTest%2A> método conecta los puntos inicial y final en `lassoPoints` para crear el lazo.</span><span class="sxs-lookup"><span data-stu-id="384f0-243">The <xref:System.Windows.Ink.Stroke.HitTest%2A> method connects the first and last points in `lassoPoints` to create the lasso.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-244">En el ejemplo siguiente se representa un trazo de color púrpura si al menos el 80% del trazo está dentro de los límites `myPoints`.</span><span class="sxs-lookup"><span data-stu-id="384f0-244">The following example renders a stroke purple if at least 80% of the stroke is within the bounds of `myPoints`.</span></span>  
  
 [!code-csharp[HitTestSample#7](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#7)]
 [!code-vb[HitTestSample#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public bool HitTest (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; path, System.Windows.Ink.StylusShape stylusShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HitTest(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; path, class System.Windows.Ink.StylusShape stylusShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HitTest(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ path, System::Windows::Ink::StylusShape ^ stylusShape);" />
      <MemberSignature Language="F#" Value="member this.HitTest : seq&lt;System.Windows.Point&gt; * System.Windows.Ink.StylusShape -&gt; bool" Usage="stroke.HitTest (path, stylusShape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="stylusShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="384f0-245">Trazado que <paramref name="stylusShape" /> sigue para la prueba de posicionamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-245">The path that <paramref name="stylusShape" /> follows for hit testing</span>
          </span>
        </param>
        <param name="stylusShape">
          <span data-ttu-id="384f0-246">Forma de <paramref name="path" /> que se utiliza para realizar la prueba de posicionamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-246">The shape of <paramref name="path" /> with which to hit test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-247">Devuelve si el trazado especificado interseca con el objeto <see cref="T:System.Windows.Ink.Stroke" /> utilizando el objeto <see cref="T:System.Windows.Ink.StylusShape" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-247">Returns whether the specified path intersects the <see cref="T:System.Windows.Ink.Stroke" /> using the specified <see cref="T:System.Windows.Ink.StylusShape" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-248">Es <see langword="true" /> si <paramref name="stylusShape" /> interseca con el actual trazo; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-248">
              <see langword="true" /> if <paramref name="stylusShape" /> intersects the current stroke; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-249">El <xref:System.Windows.Ink.Stroke.HitTest%2A> usos del método `stylusShape` alcance el trazo a lo largo de la prueba `eraserPath`.</span><span class="sxs-lookup"><span data-stu-id="384f0-249">The <xref:System.Windows.Ink.Stroke.HitTest%2A> method uses `stylusShape` to hit test the stroke along `eraserPath`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-250">El código siguiente representa un trazo de color púrpura si el trazo que se forma una intersección con la ruta de acceso de `myPoints`.</span><span class="sxs-lookup"><span data-stu-id="384f0-250">The following code renders a stroke purple if the stroke intersects the path of `myPoints`.</span></span>  
  
 [!code-csharp[HitTestSample#9](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#9)]
 [!code-vb[HitTestSample#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public bool HitTest (System.Windows.Point point, double diameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HitTest(valuetype System.Windows.Point point, float64 diameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Point,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HitTest(System::Windows::Point point, double diameter);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Windows.Point * double -&gt; bool" Usage="stroke.HitTest (point, diameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="diameter" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="384f0-251">
            <see cref="T:System.Windows.Point" /> que define el centro del área que se va a someter a una prueba de posicionamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-251">The <see cref="T:System.Windows.Point" /> that defines the center of the area to hit test.</span>
          </span>
        </param>
        <param name="diameter">
          <span data-ttu-id="384f0-252">Diámetro del área que se va a someter a una prueba de posicionamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-252">The diameter of the area to hit test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-253">Devuelve un valor que indica si el actual objeto <see cref="T:System.Windows.Ink.Stroke" /> forma una intersección con el área especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-253">Returns a value that indicates whether current <see cref="T:System.Windows.Ink.Stroke" /> intersects the specified area.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-254">Es <see langword="true" /> si el área especificada forma una intersección con el trazo actual; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-254">
              <see langword="true" /> if the specified area intersects the current stroke; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="384f0-255">En el ejemplo siguiente se cambia el color de un <xref:System.Windows.Ink.Stroke> si forma una intersección con un área concreta.</span><span class="sxs-lookup"><span data-stu-id="384f0-255">The following example changes the color of a <xref:System.Windows.Ink.Stroke> if it intersects a certain area.</span></span>  
  
 [!code-csharp[HitTestSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#3)]
 [!code-vb[HitTestSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public bool HitTest (System.Windows.Rect bounds, int percentageWithinBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HitTest(valuetype System.Windows.Rect bounds, int32 percentageWithinBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Rect,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (bounds As Rect, percentageWithinBounds As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HitTest(System::Windows::Rect bounds, int percentageWithinBounds);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Windows.Rect * int -&gt; bool" Usage="stroke.HitTest (bounds, percentageWithinBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
        <Parameter Name="percentageWithinBounds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bounds">
          <span data-ttu-id="384f0-256">
            <see cref="T:System.Windows.Rect" /> que representa los límites del área para la prueba de posicionamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-256">A <see cref="T:System.Windows.Rect" /> that represents the bounds of the area to hit test.</span>
          </span>
        </param>
        <param name="percentageWithinBounds">
          <span data-ttu-id="384f0-257">El porcentaje de la longitud de <see cref="T:System.Windows.Ink.Stroke" />, que debe estar en <paramref name="percentageWithinBounds" /> para que <see cref="T:System.Windows.Ink.Stroke" /> se considere un acierto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-257">The percentage of the length of the <see cref="T:System.Windows.Ink.Stroke" />, that must be in <paramref name="percentageWithinBounds" /> for the <see cref="T:System.Windows.Ink.Stroke" /> to be considered hit..</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-258">Devuelve un valor que indica si <see cref="T:System.Windows.Ink.Stroke" /> está dentro de los límites del rectángulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-258">Returns a value that indicates whether the <see cref="T:System.Windows.Ink.Stroke" /> is within the bounds of the specified rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="384f0-259">
            <see langword="true" /> si el trazo actual está dentro de los límites de <paramref name="bounds" />; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-259">
              <see langword="true" /> if the current stroke is within the bounds of <paramref name="bounds" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="384f0-260">En el ejemplo siguiente se representa un trazo de color púrpura si al menos el 80% del trazo está dentro de la <xref:System.Windows.Rect>.</span><span class="sxs-lookup"><span data-stu-id="384f0-260">The following example renders a stroke purple if at least 80% of the stroke is within the <xref:System.Windows.Rect>.</span></span>  
  
 [!code-csharp[HitTestSample#8](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestSample/CSharp/Program.cs#8)]
 [!code-vb[HitTestSample#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestSample/VisualBasic/Module1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidated">
      <MemberSignature Language="C#" Value="public event EventHandler Invalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Invalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.Stroke.Invalidated" />
      <MemberSignature Language="VB.NET" Value="Public Event Invalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Invalidated;" />
      <MemberSignature Language="F#" Value="member this.Invalidated : EventHandler " Usage="member this.Invalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="384f0-261">Se produce cuando cambia la apariencia del objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-261">Occurs when the appearance of the <see cref="T:System.Windows.Ink.Stroke" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-262">El <xref:System.Windows.Controls.InkPresenter> controla la <xref:System.Windows.Ink.Stroke.Invalidated> evento y llama el <xref:System.Windows.Ink.Stroke.DrawCore%2A> método.</span><span class="sxs-lookup"><span data-stu-id="384f0-262">The <xref:System.Windows.Controls.InkPresenter> handles the <xref:System.Windows.Ink.Stroke.Invalidated> event and calls the <xref:System.Windows.Ink.Stroke.DrawCore%2A> method.</span></span> <span data-ttu-id="384f0-263">Si se hereda de la <xref:System.Windows.Ink.Stroke> clase y la apariencia del trazo se basa en un estado personalizado, debe llamar a la <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> método para generar el <xref:System.Windows.Ink.Stroke.Invalidated> eventos.</span><span class="sxs-lookup"><span data-stu-id="384f0-263">If you inherit from the <xref:System.Windows.Ink.Stroke> class and your stroke's appearance is based on a custom state, you must call the <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> method to raise the <xref:System.Windows.Ink.Stroke.Invalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDrawingAttributesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawingAttributesChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawingAttributesChanged(class System.Windows.Ink.PropertyDataChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawingAttributesChanged (e As PropertyDataChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawingAttributesChanged(System::Windows::Ink::PropertyDataChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawingAttributesChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit&#xA;override this.OnDrawingAttributesChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit" Usage="stroke.OnDrawingAttributesChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.PropertyDataChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="384f0-264">Objeto <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-264">The <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /> object that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-265">Permite a las clases derivadas modificar el comportamiento predeterminado del evento <see cref="E:System.Windows.Ink.Stroke.DrawingAttributesChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-265">Allows derived classes to modify the default behavior of the <see cref="E:System.Windows.Ink.Stroke.DrawingAttributesChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-266">Al reemplazar este método en una clase derivada, llame a la <xref:System.Windows.Ink.Stroke.OnDrawingAttributesChanged%2A> método de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="384f0-266">When overriding this method in a derived class, call the <xref:System.Windows.Ink.Stroke.OnDrawingAttributesChanged%2A> method of the base class so that registered delegates receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawingAttributesReplaced (System.Windows.Ink.DrawingAttributesReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawingAttributesReplaced(class System.Windows.Ink.DrawingAttributesReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawingAttributesReplaced (e As DrawingAttributesReplacedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawingAttributesReplaced(System::Windows::Ink::DrawingAttributesReplacedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventArgs -&gt; unit&#xA;override this.OnDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventArgs -&gt; unit" Usage="stroke.OnDrawingAttributesReplaced e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.DrawingAttributesReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="384f0-267">Objeto <see cref="T:System.Windows.Ink.DrawingAttributesReplacedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-267">The <see cref="T:System.Windows.Ink.DrawingAttributesReplacedEventArgs" /> object that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-268">Permite a las clases derivadas modificar el comportamiento predeterminado del evento <see cref="E:System.Windows.Ink.Stroke.DrawingAttributesReplaced" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-268">Allows derived classes to modify the default behavior of the <see cref="E:System.Windows.Ink.Stroke.DrawingAttributesReplaced" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-269">Al reemplazar este método en una clase derivada, llame a la <xref:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced%2A> método de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="384f0-269">When overriding this method in a derived class, call the <xref:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced%2A> method of the base class so that registered delegates receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInvalidated">
      <MemberSignature Language="C#" Value="protected virtual void OnInvalidated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInvalidated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInvalidated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInvalidated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInvalidated : EventArgs -&gt; unit&#xA;override this.OnInvalidated : EventArgs -&gt; unit" Usage="stroke.OnInvalidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="384f0-270">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-270">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-271">Genera el evento <see cref="E:System.Windows.Ink.Stroke.Invalidated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-271">Raises the <see cref="E:System.Windows.Ink.Stroke.Invalidated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-272">Si se hereda de la <xref:System.Windows.Ink.Stroke> clase y la apariencia del trazo se basa en un estado personalizado, debe llamar a la <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> método para generar el <xref:System.Windows.Ink.Stroke.Invalidated> eventos.</span><span class="sxs-lookup"><span data-stu-id="384f0-272">If you inherit from the <xref:System.Windows.Ink.Stroke> class and your stroke's appearance is based on a custom state, you must call the <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> method to raise the <xref:System.Windows.Ink.Stroke.Invalidated> event.</span></span> <span data-ttu-id="384f0-273">El <xref:System.Windows.Controls.InkPresenter> controla la <xref:System.Windows.Ink.Stroke.Invalidated> evento y llama el <xref:System.Windows.Ink.Stroke.DrawCore%2A> método.</span><span class="sxs-lookup"><span data-stu-id="384f0-273">The <xref:System.Windows.Controls.InkPresenter> handles the <xref:System.Windows.Ink.Stroke.Invalidated> event and calls the <xref:System.Windows.Ink.Stroke.DrawCore%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-274">En el ejemplo siguiente se dibuja un <xref:System.Windows.Ink.Stroke> como un trazo sólido o como una serie de <xref:System.Windows.Input.StylusPoint> objetos, según la `Mode` propiedad.</span><span class="sxs-lookup"><span data-stu-id="384f0-274">The following example draws a <xref:System.Windows.Ink.Stroke> either as a solid stroke or as a series of <xref:System.Windows.Input.StylusPoint> objects, depending on the `Mode` property.</span></span> <span data-ttu-id="384f0-275">El ejemplo llama a la <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> método, que a su vez llama a la <xref:System.Windows.Ink.Stroke.DrawCore%2A> donde se dibuja el trazo.</span><span class="sxs-lookup"><span data-stu-id="384f0-275">The example calls the <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> method, which in turn calls the <xref:System.Windows.Ink.Stroke.DrawCore%2A> where the stroke is drawn.</span></span>  
  
 [!code-csharp[StrokeSnippets#24](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/CustomRenderedStroke.cs#24)]
 [!code-vb[StrokeSnippets#24](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/CustomRenderedStroke.vb#24)]  
[!code-csharp[StrokeSnippets#25](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/CustomRenderedStroke.cs#25)]
[!code-vb[StrokeSnippets#25](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/CustomRenderedStroke.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="stroke.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="384f0-276">Datos de evento que describen la propiedad que cambió, así como los valores antiguos y nuevos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-276">The event data that describes the property that changed, as well as old and new values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-277">Se produce cuando cambia alguna propiedad de <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-277">Occurs when any <see cref="T:System.Windows.Ink.Stroke" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyDataChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyDataChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyDataChanged(class System.Windows.Ink.PropertyDataChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyDataChanged (e As PropertyDataChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyDataChanged(System::Windows::Ink::PropertyDataChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit&#xA;override this.OnPropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit" Usage="stroke.OnPropertyDataChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.PropertyDataChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="384f0-278">Objeto <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-278">The <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /> object that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-279">Permite a las clases derivadas modificar el comportamiento predeterminado del evento <see cref="E:System.Windows.Ink.Stroke.PropertyDataChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-279">Allows derived classes to modify the default behavior of the <see cref="E:System.Windows.Ink.Stroke.PropertyDataChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-280">Al reemplazar este método en una clase derivada, llame a la <xref:System.Windows.Ink.Stroke.OnPropertyDataChanged%2A> método de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="384f0-280">When overriding this method in a derived class, call the <xref:System.Windows.Ink.Stroke.OnPropertyDataChanged%2A> method of the base class so that registered delegates receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStylusPointsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusPointsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusPointsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.OnStylusPointsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusPointsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusPointsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusPointsChanged : EventArgs -&gt; unit&#xA;override this.OnStylusPointsChanged : EventArgs -&gt; unit" Usage="stroke.OnStylusPointsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="384f0-281">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-281">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-282">Genera el evento <see cref="E:System.Windows.Ink.Stroke.StylusPointsChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-282">Raises the <see cref="E:System.Windows.Ink.Stroke.StylusPointsChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStylusPointsReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusPointsReplaced (System.Windows.Ink.StylusPointsReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusPointsReplaced(class System.Windows.Ink.StylusPointsReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.OnStylusPointsReplaced(System.Windows.Ink.StylusPointsReplacedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusPointsReplaced (e As StylusPointsReplacedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusPointsReplaced(System::Windows::Ink::StylusPointsReplacedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusPointsReplaced : System.Windows.Ink.StylusPointsReplacedEventArgs -&gt; unit&#xA;override this.OnStylusPointsReplaced : System.Windows.Ink.StylusPointsReplacedEventArgs -&gt; unit" Usage="stroke.OnStylusPointsReplaced e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.StylusPointsReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="384f0-283">Objeto <see cref="T:System.Windows.Ink.StylusPointsReplacedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-283">A <see cref="T:System.Windows.Ink.StylusPointsReplacedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-284">Genera el evento <see cref="E:System.Windows.Ink.Stroke.StylusPointsReplaced" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-284">Raises the <see cref="E:System.Windows.Ink.Stroke.StylusPointsReplaced" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyDataChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.Stroke.PropertyDataChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyDataChanged As PropertyDataChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::PropertyDataChangedEventHandler ^ PropertyDataChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventHandler " Usage="member this.PropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.PropertyDataChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="384f0-285">Se produce cuando cambian las propiedades personalizadas en un objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-285">Occurs when the custom properties on a <see cref="T:System.Windows.Ink.Stroke" /> object changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="384f0-286">El ejemplo siguiente muestra cómo agregar un controlador para este evento.</span><span class="sxs-lookup"><span data-stu-id="384f0-286">The following example demonstrates how to add a handler for this event.</span></span>  
  
 [!code-csharp[StrokeSnippets#20](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#20)]
 [!code-vb[StrokeSnippets#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
        <altmember cref="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyData">
      <MemberSignature Language="C#" Value="public void RemovePropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.RemovePropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyData (propertyDataId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.RemovePropertyData : Guid -&gt; unit" Usage="stroke.RemovePropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">
          <span data-ttu-id="384f0-287">Identificador único de la propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-287">The unique identifier for the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-288">Elimina una propiedad personalizada del objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-288">Deletes a custom property from the <see cref="T:System.Windows.Ink.Stroke" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="384f0-289">En el ejemplo siguiente se muestra cómo eliminar una propiedad personalizada desde un <xref:System.Windows.Ink.Stroke> objeto.</span><span class="sxs-lookup"><span data-stu-id="384f0-289">The following example demonstrates how to delete a custom property from a <xref:System.Windows.Ink.Stroke> object.</span></span>  
  
 [!code-csharp[StrokeSnippets#30](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#30)]
 [!code-vb[StrokeSnippets#30](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
        <altmember cref="M:System.Windows.Ink.Stroke.ContainsPropertyData(System.Guid)" />
        <altmember cref="M:System.Windows.Ink.Stroke.GetPropertyData(System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="StylusPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointCollection StylusPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPointCollection StylusPoints" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.Stroke.StylusPoints" />
      <MemberSignature Language="VB.NET" Value="Public Property StylusPoints As StylusPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::StylusPointCollection ^ StylusPoints { System::Windows::Input::StylusPointCollection ^ get(); void set(System::Windows::Input::StylusPointCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StylusPoints : System.Windows.Input.StylusPointCollection with get, set" Usage="System.Windows.Ink.Stroke.StylusPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="384f0-290">Devuelve los puntos de lápiz óptico del objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-290">Returns the stylus points of the <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="384f0-291">
            <see cref="T:System.Windows.Input.StylusPointCollection" /> que contiene los puntos de lápiz óptico que representan el actual objeto <see cref="T:System.Windows.Ink.Stroke" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-291">The <see cref="T:System.Windows.Input.StylusPointCollection" /> that contains the stylus points that represent the current <see cref="T:System.Windows.Ink.Stroke" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-292">Para obtener los puntos de lápiz óptico que se utiliza cuando el <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> propiedad en el <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> propiedad está establecida en `true`, utilice el <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> método.</span><span class="sxs-lookup"><span data-stu-id="384f0-292">To get the stylus points that are used when the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property on the <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A> property is set to `true`, use the <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="384f0-293">El <xref:System.Windows.Input.StylusPointCollection> asignado a la <xref:System.Windows.Ink.Stroke.StylusPoints%2A> propiedad debe tener al menos un <xref:System.Windows.Input.StylusPoint> en ella.</span><span class="sxs-lookup"><span data-stu-id="384f0-293">The <xref:System.Windows.Input.StylusPointCollection> assigned to the <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property must have at least one <xref:System.Windows.Input.StylusPoint> in it.</span></span>  <span data-ttu-id="384f0-294">Si intenta asignar un valor vacío <xref:System.Windows.Input.StylusPointCollection> a <xref:System.Windows.Ink.Stroke.StylusPoints%2A>, o quite todo el <xref:System.Windows.Input.StylusPoint> objetos desde <xref:System.Windows.Ink.Stroke.StylusPoints%2A>, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="384f0-294">If you try to assign an empty <xref:System.Windows.Input.StylusPointCollection> to <xref:System.Windows.Ink.Stroke.StylusPoints%2A>, or remove all the <xref:System.Windows.Input.StylusPoint> objects from <xref:System.Windows.Ink.Stroke.StylusPoints%2A>, an exception occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-295">El ejemplo siguiente es parte de un invalidado <xref:System.Windows.Ink.Stroke> que dibuja un círculo en cada <xref:System.Windows.Input.StylusPoint>.</span><span class="sxs-lookup"><span data-stu-id="384f0-295">The following example is part of an overridden <xref:System.Windows.Ink.Stroke> that draws a circle at each <xref:System.Windows.Input.StylusPoint>.</span></span> <span data-ttu-id="384f0-296">Si el <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> propiedad está establecida en `true`, el <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> se utiliza para obtener los puntos del lápiz.</span><span class="sxs-lookup"><span data-stu-id="384f0-296">If the <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> property is set to `true`, the <xref:System.Windows.Ink.Stroke.GetBezierStylusPoints%2A> is used to get the stylus points.</span></span> <span data-ttu-id="384f0-297">En caso contrario, el <xref:System.Windows.Ink.Stroke.StylusPoints%2A> se utiliza la propiedad.</span><span class="sxs-lookup"><span data-stu-id="384f0-297">Otherwise, the <xref:System.Windows.Ink.Stroke.StylusPoints%2A> property is used.</span></span>  
  
 [!code-csharp[StrokeSnippets#23](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyStroke.cs#23)]
 [!code-vb[StrokeSnippets#23](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyStroke.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusPointsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StylusPointsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StylusPointsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.Stroke.StylusPointsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StylusPointsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StylusPointsChanged;" />
      <MemberSignature Language="F#" Value="member this.StylusPointsChanged : EventHandler " Usage="member this.StylusPointsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="384f0-298">Se produce cuando cambia la propiedad <see cref="P:System.Windows.Ink.Stroke.StylusPoints" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-298">Occurs when the <see cref="P:System.Windows.Ink.Stroke.StylusPoints" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="384f0-299">En el ejemplo siguiente se muestra cómo controlar el <xref:System.Windows.Ink.Stroke.StylusPointsChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="384f0-299">The following example demonstrates how to handle the <xref:System.Windows.Ink.Stroke.StylusPointsChanged> event.</span></span>  
  
 [!code-csharp[StrokeSnippets#28](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#28)]
 [!code-vb[StrokeSnippets#28](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusPointsReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.StylusPointsReplacedEventHandler StylusPointsReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.StylusPointsReplacedEventHandler StylusPointsReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.Stroke.StylusPointsReplaced" />
      <MemberSignature Language="VB.NET" Value="Public Event StylusPointsReplaced As StylusPointsReplacedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::StylusPointsReplacedEventHandler ^ StylusPointsReplaced;" />
      <MemberSignature Language="F#" Value="member this.StylusPointsReplaced : System.Windows.Ink.StylusPointsReplacedEventHandler " Usage="member this.StylusPointsReplaced : System.Windows.Ink.StylusPointsReplacedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StylusPointsReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="384f0-300">Se produce cuando se asigna a la propiedad <see cref="P:System.Windows.Ink.Stroke.StylusPoints" /> una nueva colección <see cref="T:System.Windows.Input.StylusPointCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-300">Occurs when the <see cref="P:System.Windows.Ink.Stroke.StylusPoints" /> property is assigned a new <see cref="T:System.Windows.Input.StylusPointCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="384f0-301">En el ejemplo siguiente se muestra cómo controlar el <xref:System.Windows.Ink.Stroke.StylusPointsReplaced> eventos.</span><span class="sxs-lookup"><span data-stu-id="384f0-301">The following example demonstrates how to handle the <xref:System.Windows.Ink.Stroke.StylusPointsReplaced> event.</span></span>  
  
 [!code-csharp[StrokeSnippets#29](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeSnippets/CSharp/MyBorder.cs#29)]
 [!code-vb[StrokeSnippets#29](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeSnippets/VisualBasic/MyBorder.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.Stroke.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public virtual void Transform (System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transform(valuetype System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.Stroke.Transform(System.Windows.Media.Matrix,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Transform (transformMatrix As Matrix, applyToStylusTip As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Transform(System::Windows::Media::Matrix transformMatrix, bool applyToStylusTip);" />
      <MemberSignature Language="F#" Value="abstract member Transform : System.Windows.Media.Matrix * bool -&gt; unit&#xA;override this.Transform : System.Windows.Media.Matrix * bool -&gt; unit" Usage="stroke.Transform (transformMatrix, applyToStylusTip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformMatrix" Type="System.Windows.Media.Matrix" />
        <Parameter Name="applyToStylusTip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="transformMatrix">
          <span data-ttu-id="384f0-302">Objeto <see cref="T:System.Windows.Media.Matrix" /> que define la transformación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-302">The <see cref="T:System.Windows.Media.Matrix" /> object defining the transformation.</span>
          </span>
        </param>
        <param name="applyToStylusTip">
          <span data-ttu-id="384f0-303">Es <see langword="true" /> para aplicar la transformación a la punta del lápiz óptico; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-303">
              <see langword="true" /> to apply the transformation to the tip of the stylus; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="384f0-304">Realiza una transformación mediante el objeto <see cref="T:System.Windows.Media.Matrix" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="384f0-304">Performs a transformation based upon the specified <see cref="T:System.Windows.Media.Matrix" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="384f0-305">La <xref:System.Windows.Media.Matrix> objeto representa una matriz de 3 x 3 usada para las transformaciones en un espacio bidimensional.</span><span class="sxs-lookup"><span data-stu-id="384f0-305">The <xref:System.Windows.Media.Matrix> object represents a 3x3 matrix used for transformations in two-dimensional space.</span></span> <span data-ttu-id="384f0-306">Cada punto del objeto Stroke se transforma la matriz proporcionada.</span><span class="sxs-lookup"><span data-stu-id="384f0-306">Each point of the Stroke object is transformed by the supplied Matrix.</span></span> <span data-ttu-id="384f0-307">Por ejemplo si el valor original de Point.X es 100, el valor de Point.Y original es de 55 y la transformación Matrix.Scale (0,5, 0,5), el nuevo valor de Point.X es 50 y el nuevo valor de Point.Y es 27,5.</span><span class="sxs-lookup"><span data-stu-id="384f0-307">For example if the original Point.X value is 100, the original Point.Y value is 55, and the transformation Matrix.Scale(0.5, 0.5), the new Point.X value is 50 and the new Point.Y value is 27.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="384f0-308">En el ejemplo siguiente se muestra cómo transformar un <xref:System.Windows.Ink.Stroke> objeto.</span><span class="sxs-lookup"><span data-stu-id="384f0-308">The following example demonstrates how to transform a <xref:System.Windows.Ink.Stroke> object.</span></span>  
  
 [!code-csharp[DrawTransform#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawTransform/CSharp/Program.cs#1)]
 [!code-vb[DrawTransform#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawTransform/VisualBasic/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="GraphicsPath" FullName="System.Drawing.Drawing2D.GraphicsPath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d76b4f131ed0fb365205bcfc0d72419e1798de9f" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63882202" /></Metadata><TypeSignature Language="C#" Value="public sealed class GraphicsPath : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPath extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPath&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPath sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type GraphicsPath = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="e177a-101">Representa una serie de líneas y curvas conectadas.</span><span class="sxs-lookup"><span data-stu-id="e177a-101">Represents a series of connected lines and curves.</span></span> <span data-ttu-id="e177a-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="e177a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-103">Las aplicaciones usar rutas de acceso para dibujar contornos de formas, rellenar los interiores de formas y crear regiones de recorte.</span><span class="sxs-lookup"><span data-stu-id="e177a-103">Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</span></span> <span data-ttu-id="e177a-104">El motor de gráficos mantiene las coordenadas de las formas geométricas en una ruta de acceso en el espacio de coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="e177a-104">The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</span></span>  
  
 <span data-ttu-id="e177a-105">Una ruta de acceso puede estar formada por cualquier número de figuras (subtrazados).</span><span class="sxs-lookup"><span data-stu-id="e177a-105">A path may be composed of any number of figures (subpaths).</span></span> <span data-ttu-id="e177a-106">Cada figura está formada por una secuencia de líneas conectadas y curvas o una forma geométrica primitiva.</span><span class="sxs-lookup"><span data-stu-id="e177a-106">Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</span></span> <span data-ttu-id="e177a-107">El punto inicial de una figura es el primer punto de la secuencia de líneas y curvas conectadas.</span><span class="sxs-lookup"><span data-stu-id="e177a-107">The starting point of a figure is the first point in the sequence of connected lines and curves.</span></span> <span data-ttu-id="e177a-108">El punto final es el último punto de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="e177a-108">The ending point is the last point in the sequence.</span></span> <span data-ttu-id="e177a-109">Los puntos inicial y finales de una forma geométrica primitiva se definen mediante la especificación de primitiva.</span><span class="sxs-lookup"><span data-stu-id="e177a-109">The starting and ending points of a geometric shape primitive are defined by the primitive specification.</span></span>  
  
 <span data-ttu-id="e177a-110">Una figura que consta de una secuencia de líneas conectadas y curvas (cuyos puntos inicial y final pueden ser coincidentes) es una figura abierta, a menos que se cierre explícitamente.</span><span class="sxs-lookup"><span data-stu-id="e177a-110">A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</span></span> <span data-ttu-id="e177a-111">Una figura se puede cerrar explícitamente, mediante el uso de la <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> método, que cierra la figura actual conectando una línea desde el punto final para el punto de partida.</span><span class="sxs-lookup"><span data-stu-id="e177a-111">A figure can be closed explicitly, by using the <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> method, which closes the current figure by connecting a line from the ending point to the starting point.</span></span> <span data-ttu-id="e177a-112">Una figura que consta de una forma geométrica primitiva es una figura cerrada.</span><span class="sxs-lookup"><span data-stu-id="e177a-112">A figure that consists of a geometric shape primitive is a closed figure.</span></span>  
  
 <span data-ttu-id="e177a-113">A efectos de relleno y el recorte (por ejemplo, si una ruta de acceso se representa mediante <xref:System.Drawing.Graphics.FillPath%2A>), todas las figuras se cierran agregando una línea desde el primer punto al último punto de.</span><span class="sxs-lookup"><span data-stu-id="e177a-113">For purposes of filling and clipping (for example, if a path is rendered using <xref:System.Drawing.Graphics.FillPath%2A>), all open figures are closed by adding a line from the figure's first point to its last point.</span></span>  
  
 <span data-ttu-id="e177a-114">Cuando se crea una ruta de acceso o cuando se cierra una figura, se inicia implícitamente una nueva figura.</span><span class="sxs-lookup"><span data-stu-id="e177a-114">A new figure is implicitly started when a path is created or when a figure is closed.</span></span> <span data-ttu-id="e177a-115">Una nueva figura explícitamente cuando se crea el <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="e177a-115">A new figure is explicitly created when the <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> method is called.</span></span>  
  
 <span data-ttu-id="e177a-116">Cuando se agrega una forma geométrica primitiva a una ruta de acceso, agrega una figura que contiene la forma geométrica e implícita también inicia una nueva figura.</span><span class="sxs-lookup"><span data-stu-id="e177a-116">When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</span></span> <span data-ttu-id="e177a-117">Por lo tanto, siempre hay una figura actual en una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-117">Consequently, there is always a current figure in a path.</span></span> <span data-ttu-id="e177a-118">Cuando se agregan líneas y curvas a una ruta de acceso, se agrega una línea implícita, según sea necesario para conectar el punto final de la figura actual hasta el punto inicial de las nuevas líneas y curvas para formar una secuencia de líneas conectadas y curvas.</span><span class="sxs-lookup"><span data-stu-id="e177a-118">When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</span></span>  
  
 <span data-ttu-id="e177a-119">Una figura tiene una dirección que describe cómo se trazan los segmentos de líneas y curvas entre el punto inicial y el punto final.</span><span class="sxs-lookup"><span data-stu-id="e177a-119">A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</span></span> <span data-ttu-id="e177a-120">La dirección se define en el orden en que las líneas y curvas se agregan a una figura o se define mediante la forma geométrica primitiva.</span><span class="sxs-lookup"><span data-stu-id="e177a-120">The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</span></span> <span data-ttu-id="e177a-121">La dirección se utiliza para determinar los interiores de ruta de acceso para el recorte y relleno.</span><span class="sxs-lookup"><span data-stu-id="e177a-121">The direction is used in determining the path interiors for clipping and fill.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f16ec921-56cf-46d1-9741-d7316ad06b23"><span data-ttu-id="e177a-122">Crear y dibujar trazados</span><span class="sxs-lookup"><span data-stu-id="e177a-122">Constructing and Drawing Paths</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-123">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con una enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> de <see langword="Alternate" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration of <see langword="Alternate" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e177a-124">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> como valor de la propiedad <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-124">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> value of <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath fillMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="fillMode"><span data-ttu-id="e177a-125">Enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> que determina cómo se rellena el interior de <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-125">The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled.</span></span></param>
        <summary><span data-ttu-id="e177a-126">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con la enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="e177a-126">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As Point(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="e177a-127">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que define las coordenadas de los puntos que componen este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-127">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="e177a-128">Matriz de elementos de enumeración <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica el tipo de cada uno de los puntos correspondientes de la matriz <paramref name="pts" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-128">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <summary><span data-ttu-id="e177a-129">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con las matrices<see cref="T:System.Drawing.Drawing2D.PathPointType" /> y <see cref="T:System.Drawing.Point" /> que se hayan especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-129">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As PointF(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="e177a-130">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que define las coordenadas de los puntos que componen este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-130">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="e177a-131">Matriz de elementos de enumeración <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica el tipo de cada uno de los puntos correspondientes de la matriz <paramref name="pts" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-131">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <summary><span data-ttu-id="e177a-132">Inicializa una nueva instancia de la matriz <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con las matrices <see cref="T:System.Drawing.Drawing2D.PathPointType" /> y <see cref="T:System.Drawing.PointF" /> especificadas.</span><span class="sxs-lookup"><span data-stu-id="e177a-132">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="e177a-133">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que define las coordenadas de los puntos que componen este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-133">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="e177a-134">Matriz de elementos de enumeración <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica el tipo de cada uno de los puntos correspondientes de la matriz <paramref name="pts" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-134">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <param name="fillMode"><span data-ttu-id="e177a-135">Enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> que especifica cómo se rellena el interior de las formas en este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-135">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></param>
        <summary><span data-ttu-id="e177a-136">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con las matrices <see cref="T:System.Drawing.Drawing2D.PathPointType" /> y <see cref="T:System.Drawing.Point" /> especificadas y con el elemento de enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-136">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="e177a-137">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que define las coordenadas de los puntos que componen este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-137">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="e177a-138">Matriz de elementos de enumeración <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica el tipo de cada uno de los puntos correspondientes de la matriz <paramref name="pts" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-138">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <param name="fillMode"><span data-ttu-id="e177a-139">Enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> que especifica cómo se rellena el interior de las formas en este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-139">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></param>
        <summary><span data-ttu-id="e177a-140">Inicializa una nueva instancia de la matriz <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con las matrices <see cref="T:System.Drawing.Drawing2D.PathPointType" /> y <see cref="T:System.Drawing.PointF" /> especificadas y con el elemento de enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="e177a-140">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddArc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-141">Agrega un arco elíptico a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-141">Appends an elliptical arc to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="e177a-142"><see cref="T:System.Drawing.Rectangle" /> que representa los límites rectangulares de la elipse cuyo arco se toma.</span><span class="sxs-lookup"><span data-stu-id="e177a-142">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span></span></param>
        <param name="startAngle"><span data-ttu-id="e177a-143">Ángulo inicial del arco, medido en grados en el sentido de las agujas del reloj desde el eje X.</span><span class="sxs-lookup"><span data-stu-id="e177a-143">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="e177a-144">Ángulo entre <paramref name="startAngle" /> y el final del arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-144">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="e177a-145">Agrega un arco elíptico a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-145">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-146">Si hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior al principio del arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-146">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="e177a-147">El arco se realiza un seguimiento a lo largo del perímetro de la elipse limitada por el rectángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-147">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="e177a-148">El punto inicial del arco se determina mediante la medición hacia la derecha desde el eje x de la elipse (en el ángulo de 0 grados) en el número de grados del ángulo inicial.</span><span class="sxs-lookup"><span data-stu-id="e177a-148">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="e177a-149">El punto de conexión se encuentra de forma similar mediante la medición hacia la derecha desde el punto de partida en el número de grados del ángulo de barrido.</span><span class="sxs-lookup"><span data-stu-id="e177a-149">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="e177a-150">Si el ángulo de barrido es mayor de 360 grados o menor que-360 grados, el arco se trazará exactamente 360 o -360 grados, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="e177a-150">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-151">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-151">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-152">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-152">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-153">Crea un rectángulo, desde el que se define el arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-153">Creates a rectangle, from which the arc is defined.</span></span>  
  
-   <span data-ttu-id="e177a-154">Crea una ruta de acceso, `myPath`.</span><span class="sxs-lookup"><span data-stu-id="e177a-154">Creates a path, `myPath`.</span></span>  
  
-   <span data-ttu-id="e177a-155">Define un arco elíptico 180 grados que oscila desde 0 a 180 grados y lo anexa a una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-155">Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</span></span>  
  
-   <span data-ttu-id="e177a-156">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-156">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As RectangleF, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="e177a-157"><see cref="T:System.Drawing.RectangleF" /> que representa los límites rectangulares de la elipse cuyo arco se toma.</span><span class="sxs-lookup"><span data-stu-id="e177a-157">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span></span></param>
        <param name="startAngle"><span data-ttu-id="e177a-158">Ángulo inicial del arco, medido en grados en el sentido de las agujas del reloj desde el eje X.</span><span class="sxs-lookup"><span data-stu-id="e177a-158">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="e177a-159">Ángulo entre <paramref name="startAngle" /> y el final del arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-159">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="e177a-160">Agrega un arco elíptico a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-160">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-161">Si hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior al principio del arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-161">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="e177a-162">El arco se realiza un seguimiento a lo largo del perímetro de la elipse limitada por el rectángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-162">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="e177a-163">El punto inicial del arco se determina mediante la medición hacia la derecha desde el eje x de la elipse (en el ángulo de 0 grados) en el número de grados del ángulo inicial.</span><span class="sxs-lookup"><span data-stu-id="e177a-163">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="e177a-164">El punto de conexión se encuentra de forma similar mediante la medición hacia la derecha desde el punto de partida en el número de grados del ángulo de barrido.</span><span class="sxs-lookup"><span data-stu-id="e177a-164">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="e177a-165">Si el ángulo de barrido es mayor de 360 grados o menor que-360 grados, el arco se trazará exactamente 360 o -360 grados, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="e177a-165">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-166">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-166">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="e177a-167">Coordenada x del ángulo superior izquierdo del área rectangular que define la elipse desde la que se dibuja el arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-167">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="e177a-168">Coordenada y del ángulo superior izquierdo del área rectangular que define la elipse desde la que se dibuja el arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-168">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="e177a-169">Ancho del área rectangular que define la elipse desde la que se dibuja el arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-169">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="e177a-170">Alto del área rectangular que define la elipse desde la que se dibuja el arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-170">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="e177a-171">Ángulo inicial del arco, medido en grados en el sentido de las agujas del reloj desde el eje X.</span><span class="sxs-lookup"><span data-stu-id="e177a-171">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="e177a-172">Ángulo entre <paramref name="startAngle" /> y el final del arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-172">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="e177a-173">Agrega un arco elíptico a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-173">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-174">Si hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior al principio del arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-174">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="e177a-175">El arco se realiza un seguimiento a lo largo del perímetro de la elipse limitada por el rectángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-175">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="e177a-176">El punto inicial del arco se determina mediante la medición hacia la derecha desde el eje x de la elipse (en el ángulo de 0 grados) en el número de grados del ángulo inicial.</span><span class="sxs-lookup"><span data-stu-id="e177a-176">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="e177a-177">El punto de conexión se encuentra de forma similar mediante la medición hacia la derecha desde el punto de partida en el número de grados del ángulo de barrido.</span><span class="sxs-lookup"><span data-stu-id="e177a-177">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="e177a-178">Si el ángulo de barrido es mayor de 360 grados o menor que-360 grados, el arco se trazará exactamente 360 o -360 grados, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="e177a-178">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-179">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-179">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="e177a-180">Coordenada x del ángulo superior izquierdo del área rectangular que define la elipse desde la que se dibuja el arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-180">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="e177a-181">Coordenada y del ángulo superior izquierdo del área rectangular que define la elipse desde la que se dibuja el arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-181">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="e177a-182">Ancho del área rectangular que define la elipse desde la que se dibuja el arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-182">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="e177a-183">Alto del área rectangular que define la elipse desde la que se dibuja el arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-183">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="e177a-184">Ángulo inicial del arco, medido en grados en el sentido de las agujas del reloj desde el eje X.</span><span class="sxs-lookup"><span data-stu-id="e177a-184">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="e177a-185">Ángulo entre <paramref name="startAngle" /> y el final del arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-185">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="e177a-186">Agrega un arco elíptico a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-186">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-187">Si hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior al principio del arco.</span><span class="sxs-lookup"><span data-stu-id="e177a-187">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="e177a-188">El arco se realiza un seguimiento a lo largo del perímetro de la elipse limitada por el rectángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-188">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="e177a-189">El punto inicial del arco se determina mediante la medición hacia la derecha desde el eje x de la elipse (en el ángulo de 0 grados) en el número de grados del ángulo inicial.</span><span class="sxs-lookup"><span data-stu-id="e177a-189">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="e177a-190">El punto de conexión se encuentra de forma similar mediante la medición hacia la derecha desde el punto de partida en el número de grados del ángulo de barrido.</span><span class="sxs-lookup"><span data-stu-id="e177a-190">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="e177a-191">Si el ángulo de barrido es mayor de 360 grados o menor que-360 grados, el arco se trazará exactamente 360 o -360 grados, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="e177a-191">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-192">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-192">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBezier">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-193">Agrega una curva Bézier cúbica a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-193">Adds a cubic Bézier curve to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2, valuetype System.Drawing.Point pt3, valuetype System.Drawing.Point pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As Point, pt2 As Point, pt3 As Point, pt4 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::Point pt1, System::Drawing::Point pt2, System::Drawing::Point pt3, System::Drawing::Point pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.Point * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
        <Parameter Name="pt3" Type="System.Drawing.Point" />
        <Parameter Name="pt4" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="e177a-194"><see cref="T:System.Drawing.Point" /> que representa el punto inicial de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-194">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="e177a-195"><see cref="T:System.Drawing.Point" /> que representa el primer punto de control de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-195">A <see cref="T:System.Drawing.Point" /> that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="e177a-196"><see cref="T:System.Drawing.Point" /> que representa el segundo punto de control de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-196">A <see cref="T:System.Drawing.Point" /> that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="e177a-197"><see cref="T:System.Drawing.Point" /> que representa el extremo de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-197">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="e177a-198">Agrega una curva Bézier cúbica a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-198">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-199">La curva cúbica se construye desde el primer punto hasta el cuarto punto mediante el segundo y tercer puntos como puntos de control.</span><span class="sxs-lookup"><span data-stu-id="e177a-199">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="e177a-200">Si hay una línea anterior o segmento de curva en la ilustración, se agrega una línea para conectar el extremo del segmento anterior hasta el punto inicial de la curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="e177a-200">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-201">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-201">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2, valuetype System.Drawing.PointF pt3, valuetype System.Drawing.PointF pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As PointF, pt2 As PointF, pt3 As PointF, pt4 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::PointF pt1, System::Drawing::PointF pt2, System::Drawing::PointF pt3, System::Drawing::PointF pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
        <Parameter Name="pt3" Type="System.Drawing.PointF" />
        <Parameter Name="pt4" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="e177a-202"><see cref="T:System.Drawing.PointF" /> que representa el punto inicial de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-202">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="e177a-203"><see cref="T:System.Drawing.PointF" /> que representa el primer punto de control de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-203">A <see cref="T:System.Drawing.PointF" /> that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="e177a-204"><see cref="T:System.Drawing.PointF" /> que representa el segundo punto de control de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-204">A <see cref="T:System.Drawing.PointF" /> that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="e177a-205"><see cref="T:System.Drawing.PointF" /> que representa el extremo de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-205">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="e177a-206">Agrega una curva Bézier cúbica a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-206">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-207">La curva cúbica se construye desde el primer punto hasta el cuarto punto mediante el segundo y tercer puntos como puntos de control.</span><span class="sxs-lookup"><span data-stu-id="e177a-207">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="e177a-208">Si hay una línea anterior o segmento de curva en la ilustración, se agrega una línea para conectar el extremo del segmento anterior hasta el punto inicial de la curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="e177a-208">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-209">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-209">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(int32 x1, int32 y1, int32 x2, int32 y2, int32 x3, int32 y3, int32 x4, int32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer, x3 As Integer, y3 As Integer, x4 As Integer, y4 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : int * int * int * int * int * int * int * int -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
        <Parameter Name="x3" Type="System.Int32" />
        <Parameter Name="y3" Type="System.Int32" />
        <Parameter Name="x4" Type="System.Int32" />
        <Parameter Name="y4" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="e177a-210">Coordenada x del punto inicial de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-210">The x-coordinate of the starting point of the curve.</span></span></param>
        <param name="y1"><span data-ttu-id="e177a-211">Coordenada y del punto inicial de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-211">The y-coordinate of the starting point of the curve.</span></span></param>
        <param name="x2"><span data-ttu-id="e177a-212">Coordenada x del primer punto de control para la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-212">The x-coordinate of the first control point for the curve.</span></span></param>
        <param name="y2"><span data-ttu-id="e177a-213">Coordenada y del primer punto de control para la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-213">The y-coordinate of the first control point for the curve.</span></span></param>
        <param name="x3"><span data-ttu-id="e177a-214">Coordenada x del segundo punto de control para la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-214">The x-coordinate of the second control point for the curve.</span></span></param>
        <param name="y3"><span data-ttu-id="e177a-215">Coordenada y del segundo punto de control para la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-215">The y-coordinate of the second control point for the curve.</span></span></param>
        <param name="x4"><span data-ttu-id="e177a-216">Coordenada x del extremo de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-216">The x-coordinate of the endpoint of the curve.</span></span></param>
        <param name="y4"><span data-ttu-id="e177a-217">Coordenada y del extremo de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-217">The y-coordinate of the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="e177a-218">Agrega una curva Bézier cúbica a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-218">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-219">La curva cúbica se construye desde el primer punto hasta el cuarto punto mediante el segundo y tercer puntos como puntos de control.</span><span class="sxs-lookup"><span data-stu-id="e177a-219">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="e177a-220">Si hay una línea anterior o segmento de curva en la ilustración, se agrega una línea para conectar el extremo del segmento anterior hasta el punto inicial de la curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="e177a-220">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-221">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-221">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-222">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-222">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-223">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-223">Creates a path.</span></span>  
  
-   <span data-ttu-id="e177a-224">Agrega una curva Bézier cúbica que define los puntos (50, 50), (70, 0), (100, 120) y (150, 50) a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-224">Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</span></span>  
  
-   <span data-ttu-id="e177a-225">Cierra la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-225">Closes the curve.</span></span>  
  
-   <span data-ttu-id="e177a-226">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-226">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Single, y1 As Single, x2 As Single, y2 As Single, x3 As Single, y3 As Single, x4 As Single, y4 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : single * single * single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
        <Parameter Name="x4" Type="System.Single" />
        <Parameter Name="y4" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="e177a-227">Coordenada x del punto inicial de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-227">The x-coordinate of the starting point of the curve.</span></span></param>
        <param name="y1"><span data-ttu-id="e177a-228">Coordenada y del punto inicial de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-228">The y-coordinate of the starting point of the curve.</span></span></param>
        <param name="x2"><span data-ttu-id="e177a-229">Coordenada x del primer punto de control para la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-229">The x-coordinate of the first control point for the curve.</span></span></param>
        <param name="y2"><span data-ttu-id="e177a-230">Coordenada y del primer punto de control para la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-230">The y-coordinate of the first control point for the curve.</span></span></param>
        <param name="x3"><span data-ttu-id="e177a-231">Coordenada x del segundo punto de control para la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-231">The x-coordinate of the second control point for the curve.</span></span></param>
        <param name="y3"><span data-ttu-id="e177a-232">Coordenada y del segundo punto de control para la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-232">The y-coordinate of the second control point for the curve.</span></span></param>
        <param name="x4"><span data-ttu-id="e177a-233">Coordenada x del extremo de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-233">The x-coordinate of the endpoint of the curve.</span></span></param>
        <param name="y4"><span data-ttu-id="e177a-234">Coordenada y del extremo de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-234">The y-coordinate of the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="e177a-235">Agrega una curva Bézier cúbica a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-235">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-236">La curva cúbica se construye desde el primer punto hasta el cuarto punto mediante el segundo y tercer puntos como puntos de control.</span><span class="sxs-lookup"><span data-stu-id="e177a-236">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="e177a-237">Si hay una línea anterior o segmento de curva en la ilustración, se agrega una línea para conectar el extremo del segmento anterior hasta el punto inicial de la curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="e177a-237">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-238">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-238">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBeziers">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-239">Agrega una secuencia de curvas Bézier cúbicas conectadas a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-239">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (params System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (ParamArray points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(... cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-240">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que definen la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-240">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves.</span></span></param>
        <summary><span data-ttu-id="e177a-241">Agrega una secuencia de curvas Bézier cúbicas conectadas a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-241">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-242">El `points` parámetro especifica una matriz de puntos de conexión y puntos de control de las curvas conectadas.</span><span class="sxs-lookup"><span data-stu-id="e177a-242">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="e177a-243">La primera curva se construye desde el primer punto hasta el cuarto punto en el `points` matriz utilizando el segundo y tercer puntos como puntos de control.</span><span class="sxs-lookup"><span data-stu-id="e177a-243">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="e177a-244">Además del extremo de la curva anterior, cada curva posteriores en la secuencia necesita exactamente tres puntos más: los dos puntos en la secuencia son puntos de control y el tercero es el punto de conexión de la curva agregada.</span><span class="sxs-lookup"><span data-stu-id="e177a-244">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="e177a-245">Si hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior hasta el punto inicial de la primera curva cúbica de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="e177a-245">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-246">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-246">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-247">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-247">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-248">Crea una matriz de siete puntos (que representan dos curvas Bézier conectadas).</span><span class="sxs-lookup"><span data-stu-id="e177a-248">Creates an array of seven points (representing two connected Bézier curves).</span></span>  
  
-   <span data-ttu-id="e177a-249">Crea una ruta de acceso y agrega la serie de puntos de curva de Bézier a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-249">Creates a path and adds the series of Bézier curve points to the path.</span></span>  
  
-   <span data-ttu-id="e177a-250">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-250">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-251">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos que definen la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-251">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves.</span></span></param>
        <summary><span data-ttu-id="e177a-252">Agrega una secuencia de curvas Bézier cúbicas conectadas a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-252">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-253">El `points` parámetro especifica una matriz de puntos de conexión y puntos de control de las curvas conectadas.</span><span class="sxs-lookup"><span data-stu-id="e177a-253">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="e177a-254">La primera curva se construye desde el primer punto hasta el cuarto punto en el `points` matriz utilizando el segundo y tercer puntos como puntos de control.</span><span class="sxs-lookup"><span data-stu-id="e177a-254">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="e177a-255">Además del extremo de la curva anterior, cada curva posteriores en la secuencia necesita exactamente tres puntos más: los dos puntos en la secuencia son puntos de control y el tercero es el punto de conexión de la curva agregada.</span><span class="sxs-lookup"><span data-stu-id="e177a-255">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="e177a-256">Si hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior hasta el punto inicial de la primera curva cúbica de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="e177a-256">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-257">Para una ejemplo, vea:</span><span class="sxs-lookup"><span data-stu-id="e177a-257">For an example see:</span></span>  
  
 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBeziers%28System.Drawing.Point%5B%5D%29>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-258">Agrega una curva cerrada a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-258">Adds a closed curve to this path.</span></span> <span data-ttu-id="e177a-259">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="e177a-259">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-260">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que definen la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-260">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="e177a-261">Agrega una curva cerrada a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-261">Adds a closed curve to this path.</span></span> <span data-ttu-id="e177a-262">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="e177a-262">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-263">El usuario debe mantener los puntos originales si son necesarios.</span><span class="sxs-lookup"><span data-stu-id="e177a-263">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e177a-264">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="e177a-264">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="e177a-265">Si el primer punto y el último punto en el `points` matriz no son el mismo punto, la curva se cierra al conectar estos dos puntos.</span><span class="sxs-lookup"><span data-stu-id="e177a-265">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="e177a-266">No se puede establecer el valor de tensión para este método y el valor predeterminado es un valor equivalente en 0,5.</span><span class="sxs-lookup"><span data-stu-id="e177a-266">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-267">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-267">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-268">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos que definen la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-268">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="e177a-269">Agrega una curva cerrada a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-269">Adds a closed curve to this path.</span></span> <span data-ttu-id="e177a-270">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="e177a-270">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-271">El usuario debe mantener los puntos originales si son necesarios.</span><span class="sxs-lookup"><span data-stu-id="e177a-271">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e177a-272">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="e177a-272">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="e177a-273">Si el primer punto y el último punto en el `points` matriz no son el mismo punto, la curva se cierra al conectar estos dos puntos.</span><span class="sxs-lookup"><span data-stu-id="e177a-273">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="e177a-274">No se puede establecer el valor de tensión para este método y el valor predeterminado es un valor equivalente en 0,5.</span><span class="sxs-lookup"><span data-stu-id="e177a-274">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-275">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-275">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-276">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que definen la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-276">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="e177a-277">Valor de 0 a 1 que especifica la inclinación de la curva entre puntos, donde 0 es la curva más cerrada (esquina más apuntada) y 1 es la curva más abierta.</span><span class="sxs-lookup"><span data-stu-id="e177a-277">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span></span></param>
        <summary><span data-ttu-id="e177a-278">Agrega una curva cerrada a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-278">Adds a closed curve to this path.</span></span> <span data-ttu-id="e177a-279">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="e177a-279">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-280">El usuario debe mantener los puntos originales si son necesarios.</span><span class="sxs-lookup"><span data-stu-id="e177a-280">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e177a-281">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="e177a-281">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="e177a-282">Si el primer punto y el último punto en el `points` matriz no son el mismo punto, la curva se cierra al conectar estos dos puntos.</span><span class="sxs-lookup"><span data-stu-id="e177a-282">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-283">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-283">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-284">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-284">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-285">Crea una matriz de seis puntos (que representan una curva spline cardinal).</span><span class="sxs-lookup"><span data-stu-id="e177a-285">Creates an array of six points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="e177a-286">Crea una ruta de acceso y agrega las curvas spline cardinal cerrada en la ruta de acceso (cerrado desde el punto de conexión para el punto de partida).</span><span class="sxs-lookup"><span data-stu-id="e177a-286">Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</span></span>  
  
-   <span data-ttu-id="e177a-287">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-287">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="e177a-288">Tenga en cuenta que se usa una tensión de 0,5.</span><span class="sxs-lookup"><span data-stu-id="e177a-288">Notice that a tension of 0.5 is used.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-289">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos que definen la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-289">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="e177a-290">Valor de 0 a 1 que especifica la inclinación de la curva entre puntos, donde 0 es la curva más cerrada (esquina más apuntada) y 1 es la curva más abierta.</span><span class="sxs-lookup"><span data-stu-id="e177a-290">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span></span></param>
        <summary><span data-ttu-id="e177a-291">Agrega una curva cerrada a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-291">Adds a closed curve to this path.</span></span> <span data-ttu-id="e177a-292">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="e177a-292">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-293">El usuario debe mantener los puntos originales si son necesarios.</span><span class="sxs-lookup"><span data-stu-id="e177a-293">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e177a-294">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="e177a-294">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="e177a-295">Si el primer punto y el último punto en el `points` matriz no son el mismo punto, la curva se cierra al conectar estos dos puntos.</span><span class="sxs-lookup"><span data-stu-id="e177a-295">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-296">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-296">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-297">Agrega una curva spline a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-297">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="e177a-298">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="e177a-298">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-299">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que definen la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-299">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="e177a-300">Agrega una curva spline a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-300">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="e177a-301">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="e177a-301">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-302">El usuario debe mantener los puntos originales si son necesarios.</span><span class="sxs-lookup"><span data-stu-id="e177a-302">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e177a-303">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="e177a-303">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-304">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-304">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-305">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos que definen la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-305">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="e177a-306">Agrega una curva spline a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-306">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="e177a-307">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="e177a-307">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-308">El usuario debe mantener los puntos originales si son necesarios.</span><span class="sxs-lookup"><span data-stu-id="e177a-308">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e177a-309">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="e177a-309">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-310">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-310">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-311">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que definen la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-311">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="e177a-312">Valor que especifica la inclinación de la curva entre puntos de control.</span><span class="sxs-lookup"><span data-stu-id="e177a-312">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="e177a-313">Los valores mayores que 1 producen resultados impredecibles.</span><span class="sxs-lookup"><span data-stu-id="e177a-313">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="e177a-314">Agrega una curva spline a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-314">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-315">El usuario debe mantener los puntos originales si son necesarios.</span><span class="sxs-lookup"><span data-stu-id="e177a-315">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e177a-316">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="e177a-316">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-317">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-317">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-318">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos que definen la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-318">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="e177a-319">Valor que especifica la inclinación de la curva entre puntos de control.</span><span class="sxs-lookup"><span data-stu-id="e177a-319">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="e177a-320">Los valores mayores que 1 producen resultados impredecibles.</span><span class="sxs-lookup"><span data-stu-id="e177a-320">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="e177a-321">Agrega una curva spline a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-321">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-322">El usuario debe mantener los puntos originales si son necesarios.</span><span class="sxs-lookup"><span data-stu-id="e177a-322">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e177a-323">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="e177a-323">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-324">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-324">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-325">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que definen la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-325">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="offset"><span data-ttu-id="e177a-326">Índice del elemento de la matriz <paramref name="points" /> que se usa como primer punto de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-326">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="e177a-327">Valor que especifica la inclinación de la curva entre puntos de control.</span><span class="sxs-lookup"><span data-stu-id="e177a-327">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="e177a-328">Los valores mayores que 1 producen resultados impredecibles.</span><span class="sxs-lookup"><span data-stu-id="e177a-328">Values greater than 1 produce unpredictable results.</span></span></param>
        <param name="tension"><span data-ttu-id="e177a-329">Valor que especifica la inclinación de la curva entre puntos de control.</span><span class="sxs-lookup"><span data-stu-id="e177a-329">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="e177a-330">Los valores mayores que 1 producen resultados impredecibles.</span><span class="sxs-lookup"><span data-stu-id="e177a-330">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="e177a-331">Agrega una curva spline a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-331">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-332">El usuario debe mantener los puntos originales si son necesarios.</span><span class="sxs-lookup"><span data-stu-id="e177a-332">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e177a-333">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="e177a-333">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="e177a-334">La curva comienza en el punto en la matriz especificada por el `offset` parámetro e incluye el número de puntos (segmentos) especificado por `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="e177a-334">The curve begins at the point in the array specified by the `offset` parameter and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-335">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-335">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-336">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-336">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-337">Crea una matriz de cuatro puntos (que representan una curva spline cardinal).</span><span class="sxs-lookup"><span data-stu-id="e177a-337">Creates an array of four points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="e177a-338">Crea una ruta de acceso y el uso de la matriz de puntos, agrega la curva a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-338">Creates a path and using the array of points, adds the curve to the path.</span></span>  
  
-   <span data-ttu-id="e177a-339">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-339">Draws the path to the screen.</span></span>  
  
 <span data-ttu-id="e177a-340">Tenga en cuenta que aunque la matriz contiene cuatro puntos, hay sólo tres segmentos, que es el número especificado en el tercer argumento de la llamada a <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span><span class="sxs-lookup"><span data-stu-id="e177a-340">Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-341">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos que definen la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-341">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="offset"><span data-ttu-id="e177a-342">Índice del elemento de la matriz <paramref name="points" /> que se usa como primer punto de la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-342">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="e177a-343">Número de segmentos usados para dibujar la curva.</span><span class="sxs-lookup"><span data-stu-id="e177a-343">The number of segments used to draw the curve.</span></span> <span data-ttu-id="e177a-344">Un segmento es, en realidad, una línea que conecta dos puntos.</span><span class="sxs-lookup"><span data-stu-id="e177a-344">A segment can be thought of as a line connecting two points.</span></span></param>
        <param name="tension"><span data-ttu-id="e177a-345">Valor que especifica la inclinación de la curva entre puntos de control.</span><span class="sxs-lookup"><span data-stu-id="e177a-345">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="e177a-346">Los valores mayores que 1 producen resultados impredecibles.</span><span class="sxs-lookup"><span data-stu-id="e177a-346">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="e177a-347">Agrega una curva spline a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-347">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-348">El usuario debe mantener los puntos originales si son necesarios.</span><span class="sxs-lookup"><span data-stu-id="e177a-348">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e177a-349">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="e177a-349">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="e177a-350">La curva comienza en el punto en la matriz especificada por `offset`e incluye el número de puntos (segmentos) especificado por `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="e177a-350">The curve begins at the point in the array specified by `offset`, and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-351">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-351">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-352">Agrega una elipse al trazado actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-352">Adds an ellipse to the current path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="e177a-353"><see cref="T:System.Drawing.Rectangle" /> que representa el rectángulo delimitador que define la elipse.</span><span class="sxs-lookup"><span data-stu-id="e177a-353">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="e177a-354">Agrega una elipse al trazado actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-354">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-355">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-355">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-356">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-356">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="e177a-357">Crea un rectángulo delimitador que define una elipse.</span><span class="sxs-lookup"><span data-stu-id="e177a-357">Creates a bounding rectangle that defines an ellipse.</span></span>  
  
 <span data-ttu-id="e177a-358">Crea una ruta de acceso y agrega los puntos suspensivos a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-358">Creates a path and adds the ellipse to the path.</span></span>  
  
 <span data-ttu-id="e177a-359">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-359">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="e177a-360"><see cref="T:System.Drawing.RectangleF" /> que representa el rectángulo delimitador que define la elipse.</span><span class="sxs-lookup"><span data-stu-id="e177a-360">A <see cref="T:System.Drawing.RectangleF" /> that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="e177a-361">Agrega una elipse al trazado actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-361">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-362">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-362">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : int * int * int * int -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="e177a-363">Coordenada x de la esquina superior izquierda del rectángulo delimitador que define la elipse.</span><span class="sxs-lookup"><span data-stu-id="e177a-363">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="e177a-364">Coordenada y de la esquina superior izquierda del rectángulo delimitador que define la elipse.</span><span class="sxs-lookup"><span data-stu-id="e177a-364">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="e177a-365">Ancho del rectángulo delimitador que define la elipse.</span><span class="sxs-lookup"><span data-stu-id="e177a-365">The width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="e177a-366">Alto del rectángulo delimitador que define la elipse.</span><span class="sxs-lookup"><span data-stu-id="e177a-366">The height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="e177a-367">Agrega una elipse al trazado actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-367">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-368">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-368">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Single, y As Single, width As Single, height As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : single * single * single * single -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="e177a-369">Coordenada x de la esquina superior izquierda del rectángulo delimitador que define la elipse.</span><span class="sxs-lookup"><span data-stu-id="e177a-369">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="e177a-370">Coordenada y de la esquina superior izquierda del rectángulo delimitador que define la elipse.</span><span class="sxs-lookup"><span data-stu-id="e177a-370">The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="e177a-371">Ancho del rectángulo delimitador que define la elipse.</span><span class="sxs-lookup"><span data-stu-id="e177a-371">The width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="e177a-372">Alto del rectángulo delimitador que define la elipse.</span><span class="sxs-lookup"><span data-stu-id="e177a-372">The height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="e177a-373">Agrega una elipse al trazado actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-373">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-374">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-374">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLine">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-375">Anexa un segmento de línea a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-375">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.Point pt1, System.Drawing.Point pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As Point, pt2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::Point pt1, System::Drawing::Point pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="e177a-376"><see cref="T:System.Drawing.Point" /> que representa el punto inicial de la línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-376">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the line.</span></span></param>
        <param name="pt2"><span data-ttu-id="e177a-377"><see cref="T:System.Drawing.Point" /> que representa el extremo de la línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-377">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="e177a-378">Anexa un segmento de línea a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-378">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-379">Este método agrega el segmento de línea definido por los puntos especificados al final de este <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="e177a-379">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="e177a-380">Si no hay líneas o curvas en anteriores el <xref:System.Drawing.Drawing2D.GraphicsPath>, se dibuja un segmento de línea para conectar el último punto en la ruta de acceso para el primer punto en el nuevo segmento de línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-380">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-381">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-381">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.PointF pt1, System.Drawing.PointF pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As PointF, pt2 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::PointF pt1, System::Drawing::PointF pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="e177a-382"><see cref="T:System.Drawing.PointF" /> que representa el punto inicial de la línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-382">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the line.</span></span></param>
        <param name="pt2"><span data-ttu-id="e177a-383"><see cref="T:System.Drawing.PointF" /> que representa el extremo de la línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-383">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="e177a-384">Anexa un segmento de línea a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-384">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-385">Este método agrega el segmento de línea definido por los puntos especificados al final de este <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="e177a-385">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="e177a-386">Si no hay líneas o curvas en anteriores el <xref:System.Drawing.Drawing2D.GraphicsPath>, se dibuja un segmento de línea para conectar el último punto en la ruta de acceso para el primer punto en el nuevo segmento de línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-386">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-387">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-387">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : int * int * int * int -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="e177a-388">Coordenada x del punto inicial de la línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-388">The x-coordinate of the starting point of the line.</span></span></param>
        <param name="y1"><span data-ttu-id="e177a-389">Coordenada y del punto inicial de la línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-389">The y-coordinate of the starting point of the line.</span></span></param>
        <param name="x2"><span data-ttu-id="e177a-390">Coordenada x del extremo de la línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-390">The x-coordinate of the endpoint of the line.</span></span></param>
        <param name="y2"><span data-ttu-id="e177a-391">Coordenada y del extremo de la línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-391">The y-coordinate of the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="e177a-392">Agrega un segmento de línea a la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-392">Appends a line segment to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-393">Este método agrega el segmento de línea definido por los puntos especificados al final de la figura actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-393">This method adds the line segment defined by the specified points to the end of the current figure.</span></span> <span data-ttu-id="e177a-394">Si no hay líneas o curvas en anteriores el <xref:System.Drawing.Drawing2D.GraphicsPath>, se dibuja un segmento de línea para conectar el último punto en la ruta de acceso para el primer punto en el nuevo segmento de línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-394">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-395">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-395">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-396">El código crea una ruta de acceso, agrega tres líneas que forman un triángulo y, a continuación, dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-396">The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Single, y1 As Single, x2 As Single, y2 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : single * single * single * single -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="e177a-397">Coordenada x del punto inicial de la línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-397">The x-coordinate of the starting point of the line.</span></span></param>
        <param name="y1"><span data-ttu-id="e177a-398">Coordenada y del punto inicial de la línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-398">The y-coordinate of the starting point of the line.</span></span></param>
        <param name="x2"><span data-ttu-id="e177a-399">Coordenada x del extremo de la línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-399">The x-coordinate of the endpoint of the line.</span></span></param>
        <param name="y2"><span data-ttu-id="e177a-400">Coordenada y del extremo de la línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-400">The y-coordinate of the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="e177a-401">Anexa un segmento de línea a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-401">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-402">Este método agrega el segmento de línea definido por los puntos especificados al final de este <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="e177a-402">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="e177a-403">Si no hay líneas o curvas en anteriores el <xref:System.Drawing.Drawing2D.GraphicsPath>, se dibuja un segmento de línea para conectar el último punto en la ruta de acceso para el primer punto en el nuevo segmento de línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-403">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-404">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-404">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLines">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-405">Anexa una serie de segmentos de línea conectados al final de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-405">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-406">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que definen los segmentos de línea que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="e177a-406">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add.</span></span></param>
        <summary><span data-ttu-id="e177a-407">Anexa una serie de segmentos de línea conectados al final de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-407">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-408">Si hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior con el punto de partida de la línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-408">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="e177a-409">El `points` parámetro especifica una matriz de puntos de conexión.</span><span class="sxs-lookup"><span data-stu-id="e177a-409">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="e177a-410">Los primeros dos especifican la primera línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-410">The first two specify the first line.</span></span> <span data-ttu-id="e177a-411">Cada punto adicional especifica el extremo de un segmento de línea cuyo punto de partida es el punto de conexión de la línea anterior.</span><span class="sxs-lookup"><span data-stu-id="e177a-411">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-412">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-412">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-413">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-413">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-414">Crea una matriz de cuatro puntos que describe un triángulo.</span><span class="sxs-lookup"><span data-stu-id="e177a-414">Creates an array of four points that describe a triangle.</span></span>  
  
-   <span data-ttu-id="e177a-415">Crea una ruta de acceso y agrega la matriz de líneas.</span><span class="sxs-lookup"><span data-stu-id="e177a-415">Creates a path and adds the array of lines.</span></span>  
  
-   <span data-ttu-id="e177a-416">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-416">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="e177a-417">Tenga en cuenta que cada línea después del primer punto usa el punto anterior como el punto inicial y el nuevo punto como punto de conexión.</span><span class="sxs-lookup"><span data-stu-id="e177a-417">Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-418">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos que definen los segmentos de línea que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="e177a-418">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add.</span></span></param>
        <summary><span data-ttu-id="e177a-419">Anexa una serie de segmentos de línea conectados al final de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-419">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-420">Si hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior con el punto de partida de la línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-420">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="e177a-421">El `points` parámetro especifica una matriz de puntos de conexión.</span><span class="sxs-lookup"><span data-stu-id="e177a-421">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="e177a-422">Los primeros dos especifican la primera línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-422">The first two specify the first line.</span></span> <span data-ttu-id="e177a-423">Cada punto adicional especifica el extremo de un segmento de línea cuyo punto de partida es el punto de conexión de la línea anterior.</span><span class="sxs-lookup"><span data-stu-id="e177a-423">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-424">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-424">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPath (addingPath As GraphicsPath, connect As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPath(System::Drawing::Drawing2D::GraphicsPath ^ addingPath, bool connect);" />
      <MemberSignature Language="F#" Value="member this.AddPath : System.Drawing.Drawing2D.GraphicsPath * bool -&gt; unit" Usage="graphicsPath.AddPath (addingPath, connect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addingPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="connect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addingPath"><span data-ttu-id="e177a-425"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="e177a-425">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add.</span></span></param>
        <param name="connect"><span data-ttu-id="e177a-426">Valor booleano que especifica si la primera figura del trazado agregado forma parte de la última figura de este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-426">A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</span></span> <span data-ttu-id="e177a-427">El valor <see langword="true" /> especifica que, si es posible, la primera figura del trazado agregado forma parte de la última figura de este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-427">A value of <see langword="true" /> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</span></span> <span data-ttu-id="e177a-428">El valor <see langword="false" /> especifica que la primera figura del trazado agregado no forma parte de la última figura de este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-428">A value of <see langword="false" /> specifies that the first figure in the added path is separate from the last figure in this path.</span></span></param>
        <summary><span data-ttu-id="e177a-429">Anexa el trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> especificado a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-429">Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-430">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-430">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-431">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-431">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-432">Crea dos trazados, un triángulo de la derecha en posición vertical y el otro un triángulo al revés de arriba.</span><span class="sxs-lookup"><span data-stu-id="e177a-432">Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</span></span>  
  
-   <span data-ttu-id="e177a-433">Agrega la segunda ruta de acceso a la primera.</span><span class="sxs-lookup"><span data-stu-id="e177a-433">Adds the second path to the first.</span></span>  
  
-   <span data-ttu-id="e177a-434">Dibuja la ruta de acceso resultante en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-434">Draws the resultant path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-435">Agrega el contorno de una forma circular a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-435">Adds the outline of a pie shape to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddPie (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="e177a-436"><see cref="T:System.Drawing.Rectangle" /> que representa el rectángulo delimitador que define la elipse cuya forma circular se dibuja.</span><span class="sxs-lookup"><span data-stu-id="e177a-436">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="e177a-437">Ángulo de inicio de la sección circular, medido en grados en el sentido de las agujas del reloj desde el eje X.</span><span class="sxs-lookup"><span data-stu-id="e177a-437">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="e177a-438">Ángulo entre <paramref name="startAngle" />y el final de la sección de la forma circular, medido en grados en el sentido de las agujas del reloj desde <paramref name="startAngle" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-438">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span></span></param>
        <summary><span data-ttu-id="e177a-439">Agrega el contorno de una forma circular a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-439">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-440">La forma de gráfico circular se define mediante un esquema parcial de una elipse y dos líneas radiales que forman una intersección los extremos del contorno parcial.</span><span class="sxs-lookup"><span data-stu-id="e177a-440">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="e177a-441">El contorno parcial comienza en `startAngle` (medido hacia la derecha desde el eje x) y termina en `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="e177a-441">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-442">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-442">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="e177a-443">Coordenada x del ángulo superior izquierdo del rectángulo delimitador que define la elipse desde la que se dibuja la forma circular.</span><span class="sxs-lookup"><span data-stu-id="e177a-443">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="e177a-444">Coordenada y del ángulo superior izquierdo del rectángulo delimitador que define la elipse desde la que se dibuja la forma circular.</span><span class="sxs-lookup"><span data-stu-id="e177a-444">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="e177a-445">Ancho del rectángulo limitador que define la elipse de la que se dibuja la forma circular.</span><span class="sxs-lookup"><span data-stu-id="e177a-445">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="e177a-446">Alto del rectángulo limitador que define la elipse de la que se dibuja la forma circular.</span><span class="sxs-lookup"><span data-stu-id="e177a-446">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="e177a-447">Ángulo de inicio de la sección circular, medido en grados en el sentido de las agujas del reloj desde el eje X.</span><span class="sxs-lookup"><span data-stu-id="e177a-447">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="e177a-448">Ángulo entre <paramref name="startAngle" />y el final de la sección de la forma circular, medido en grados en el sentido de las agujas del reloj desde <paramref name="startAngle" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-448">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span></span></param>
        <summary><span data-ttu-id="e177a-449">Agrega el contorno de una forma circular a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-449">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-450">La forma de gráfico circular se define mediante un esquema parcial de una elipse y dos líneas radiales que forman una intersección los extremos del contorno parcial.</span><span class="sxs-lookup"><span data-stu-id="e177a-450">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="e177a-451">El contorno parcial comienza en `startAngle` (medido hacia la derecha desde el eje x) y termina en `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="e177a-451">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-452">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-452">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-453">El código crea un trazado de gráficos, agrega la forma circular y, a continuación, dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-453">The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="e177a-454">Coordenada x del ángulo superior izquierdo del rectángulo delimitador que define la elipse desde la que se dibuja la forma circular.</span><span class="sxs-lookup"><span data-stu-id="e177a-454">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="e177a-455">Coordenada y del ángulo superior izquierdo del rectángulo delimitador que define la elipse desde la que se dibuja la forma circular.</span><span class="sxs-lookup"><span data-stu-id="e177a-455">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="e177a-456">Ancho del rectángulo limitador que define la elipse de la que se dibuja la forma circular.</span><span class="sxs-lookup"><span data-stu-id="e177a-456">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="e177a-457">Alto del rectángulo limitador que define la elipse de la que se dibuja la forma circular.</span><span class="sxs-lookup"><span data-stu-id="e177a-457">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="e177a-458">Ángulo de inicio de la sección circular, medido en grados en el sentido de las agujas del reloj desde el eje X.</span><span class="sxs-lookup"><span data-stu-id="e177a-458">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="e177a-459">Ángulo entre <paramref name="startAngle" />y el final de la sección de la forma circular, medido en grados en el sentido de las agujas del reloj desde <paramref name="startAngle" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-459">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span></span></param>
        <summary><span data-ttu-id="e177a-460">Agrega el contorno de una forma circular a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-460">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-461">La forma de gráfico circular se define mediante un esquema parcial de una elipse y dos líneas radiales que forman una intersección los extremos del contorno parcial.</span><span class="sxs-lookup"><span data-stu-id="e177a-461">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="e177a-462">El contorno parcial comienza en `startAngle` (medido hacia la derecha desde el eje x) y termina en `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="e177a-462">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-463">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-463">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-464">Agrega un polígono a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-464">Adds a polygon to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-465">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que define el polígono que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="e177a-465">An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add.</span></span></param>
        <summary><span data-ttu-id="e177a-466">Agrega un polígono a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-466">Adds a polygon to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-467">Los puntos en el `points` array definen los vértices de un polígono.</span><span class="sxs-lookup"><span data-stu-id="e177a-467">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="e177a-468">Si el primer punto de la matriz no es igual que el último punto, se conectan los dos puntos para cerrar el polígono.</span><span class="sxs-lookup"><span data-stu-id="e177a-468">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-469">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-469">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-470">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-470">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-471">Crea una matriz de puntos que define un polígono.</span><span class="sxs-lookup"><span data-stu-id="e177a-471">Creates an array of points that defines a polygon.</span></span>  
  
-   <span data-ttu-id="e177a-472">Crea una ruta de acceso y el polígono se agrega a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-472">Creates a path and adds the polygon to the path.</span></span>  
  
-   <span data-ttu-id="e177a-473">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-473">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e177a-474">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que define el polígono que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="e177a-474">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the polygon to add.</span></span></param>
        <summary><span data-ttu-id="e177a-475">Agrega un polígono a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-475">Adds a polygon to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-476">Los puntos en el `points` array definen los vértices de un polígono.</span><span class="sxs-lookup"><span data-stu-id="e177a-476">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="e177a-477">Si el primer punto de la matriz no es igual que el último punto, se conectan los dos puntos para cerrar el polígono.</span><span class="sxs-lookup"><span data-stu-id="e177a-477">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-478">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-478">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-479">Agrega un rectángulo a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-479">Adds a rectangle to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="e177a-480"><see cref="T:System.Drawing.Rectangle" /> que representa el rectángulo que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="e177a-480">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle to add.</span></span></param>
        <summary><span data-ttu-id="e177a-481">Agrega un rectángulo a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-481">Adds a rectangle to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-482">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-482">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-483">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-483">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-484">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-484">Creates a path.</span></span>  
  
-   <span data-ttu-id="e177a-485">Crea un rectángulo y agrega el rectángulo a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-485">Creates a rectangle and adds the rectangle to the path.</span></span>  
  
-   <span data-ttu-id="e177a-486">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-486">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="e177a-487"><see cref="T:System.Drawing.RectangleF" /> que representa el rectángulo que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="e177a-487">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle to add.</span></span></param>
        <summary><span data-ttu-id="e177a-488">Agrega un rectángulo a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-488">Adds a rectangle to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-489">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-489">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-490">Agrega una serie de rectángulos a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-490">Adds a series of rectangles to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As Rectangle())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.Rectangle[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="rects"><span data-ttu-id="e177a-491">Matriz de estructuras <see cref="T:System.Drawing.Rectangle" /> que representa los rectángulos que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="e177a-491">An array of <see cref="T:System.Drawing.Rectangle" /> structures that represents the rectangles to add.</span></span></param>
        <summary><span data-ttu-id="e177a-492">Agrega una serie de rectángulos a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-492">Adds a series of rectangles to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-493">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-493">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-494">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-494">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-495">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-495">Creates a path.</span></span>  
  
-   <span data-ttu-id="e177a-496">Crea una matriz de rectángulos y los rectángulos se agrega a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-496">Creates an array of rectangles and adds the rectangles to the path.</span></span>  
  
-   <span data-ttu-id="e177a-497">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-497">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As RectangleF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.RectangleF[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="rects"><span data-ttu-id="e177a-498">Matriz de estructuras <see cref="T:System.Drawing.RectangleF" /> que representa los rectángulos que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="e177a-498">An array of <see cref="T:System.Drawing.RectangleF" /> structures that represents the rectangles to add.</span></span></param>
        <summary><span data-ttu-id="e177a-499">Agrega una serie de rectángulos a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-499">Adds a series of rectangles to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-500">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-500">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-501">Agrega una cadena de texto a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-501">Adds a text string to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Point origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Point origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As Point, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Point origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Point * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.Point" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e177a-502"><see cref="T:System.String" /> que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="e177a-502">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="e177a-503"><see cref="T:System.Drawing.FontFamily" /> que representa el nombre de la fuente con la que se dibuja la prueba.</span><span class="sxs-lookup"><span data-stu-id="e177a-503">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="e177a-504">Enumeración <see cref="T:System.Drawing.FontStyle" /> que representa la información de estilo sobre el texto (negrita, cursiva, etc.).</span><span class="sxs-lookup"><span data-stu-id="e177a-504">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="e177a-505">Se debe convertir en un entero (vea el ejemplo de código más adelante en esta sección).</span><span class="sxs-lookup"><span data-stu-id="e177a-505">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="e177a-506">Alto del cuadrado Em que delimita el carácter.</span><span class="sxs-lookup"><span data-stu-id="e177a-506">The height of the em square box that bounds the character.</span></span></param>
        <param name="origin"><span data-ttu-id="e177a-507"><see cref="T:System.Drawing.Point" /> que representa el punto donde comienza el texto.</span><span class="sxs-lookup"><span data-stu-id="e177a-507">A <see cref="T:System.Drawing.Point" /> that represents the point where the text starts.</span></span></param>
        <param name="format"><span data-ttu-id="e177a-508"><see cref="T:System.Drawing.StringFormat" /> que especifica información sobre el formato de texto, como el interlineado y la alineación.</span><span class="sxs-lookup"><span data-stu-id="e177a-508">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="e177a-509">Agrega una cadena de texto a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-509">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-510">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-510">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-511">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-511">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-512">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-512">Creates a path.</span></span>  
  
-   <span data-ttu-id="e177a-513">Establece los argumentos de cadena y la fuente.</span><span class="sxs-lookup"><span data-stu-id="e177a-513">Sets up string and font arguments.</span></span>  
  
-   <span data-ttu-id="e177a-514">Agrega la cadena a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-514">Adds the string to the path.</span></span>  
  
-   <span data-ttu-id="e177a-515">Dibuja la cadena en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-515">Draws the string to the screen.</span></span>  
  
 <span data-ttu-id="e177a-516">Hay dos cuestiones importantes que se indicó. En primer lugar, tenga en cuenta que el `fontStyle` argumento se convierte en un entero.</span><span class="sxs-lookup"><span data-stu-id="e177a-516">There are two important things to be pointed out. First, notice that the `fontStyle` argument is cast as an integer.</span></span> <span data-ttu-id="e177a-517">El <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> método lo requiere, así que dos o más <xref:System.Drawing.FontStyle> miembros se pueden combinar para crear el estilo de fuente deseado (en este caso, <xref:System.Drawing.FontStyle.Italic> y <xref:System.Drawing.FontStyle.Underline>).</span><span class="sxs-lookup"><span data-stu-id="e177a-517">The <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> method requires this so that two or more <xref:System.Drawing.FontStyle> members can be combined to create the desired font style (in this case, <xref:System.Drawing.FontStyle.Italic> and <xref:System.Drawing.FontStyle.Underline>).</span></span> <span data-ttu-id="e177a-518">En segundo lugar, tenga en cuenta que el <xref:System.Drawing.Graphics.FillPath%2A> método se utiliza en lugar de <xref:System.Drawing.Graphics.DrawPath%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e177a-518">Secondly, notice that the <xref:System.Drawing.Graphics.FillPath%2A> method is used rather than the <xref:System.Drawing.Graphics.DrawPath%2A> method.</span></span> <span data-ttu-id="e177a-519">Si <xref:System.Drawing.Graphics.FillPath%2A> se usa, se representa texto sólido, mientras que si <xref:System.Drawing.Graphics.DrawPath%2A> es utilizado, el texto será un estilo de contorno.</span><span class="sxs-lookup"><span data-stu-id="e177a-519">If <xref:System.Drawing.Graphics.FillPath%2A> is used, solid text is rendered, whereas if <xref:System.Drawing.Graphics.DrawPath%2A> is used, the text will be an outline style.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#14)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#14)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.PointF origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.PointF origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As PointF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::PointF origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.PointF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.PointF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e177a-520"><see cref="T:System.String" /> que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="e177a-520">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="e177a-521"><see cref="T:System.Drawing.FontFamily" /> que representa el nombre de la fuente con la que se dibuja la prueba.</span><span class="sxs-lookup"><span data-stu-id="e177a-521">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="e177a-522">Enumeración <see cref="T:System.Drawing.FontStyle" /> que representa la información de estilo sobre el texto (negrita, cursiva, etc.).</span><span class="sxs-lookup"><span data-stu-id="e177a-522">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="e177a-523">Se debe convertir en un entero (vea el ejemplo de código más adelante en esta sección).</span><span class="sxs-lookup"><span data-stu-id="e177a-523">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="e177a-524">Alto del cuadrado Em que delimita el carácter.</span><span class="sxs-lookup"><span data-stu-id="e177a-524">The height of the em square box that bounds the character.</span></span></param>
        <param name="origin"><span data-ttu-id="e177a-525"><see cref="T:System.Drawing.PointF" /> que representa el punto donde comienza el texto.</span><span class="sxs-lookup"><span data-stu-id="e177a-525">A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts.</span></span></param>
        <param name="format"><span data-ttu-id="e177a-526"><see cref="T:System.Drawing.StringFormat" /> que especifica información sobre el formato de texto, como el interlineado y la alineación.</span><span class="sxs-lookup"><span data-stu-id="e177a-526">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="e177a-527">Agrega una cadena de texto a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-527">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-528">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-528">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Rectangle layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Rectangle layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As Rectangle, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Rectangle layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Rectangle * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e177a-529"><see cref="T:System.String" /> que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="e177a-529">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="e177a-530"><see cref="T:System.Drawing.FontFamily" /> que representa el nombre de la fuente con la que se dibuja la prueba.</span><span class="sxs-lookup"><span data-stu-id="e177a-530">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="e177a-531">Enumeración <see cref="T:System.Drawing.FontStyle" /> que representa la información de estilo sobre el texto (negrita, cursiva, etc.).</span><span class="sxs-lookup"><span data-stu-id="e177a-531">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="e177a-532">Se debe convertir en un entero (vea el ejemplo de código más adelante en esta sección).</span><span class="sxs-lookup"><span data-stu-id="e177a-532">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="e177a-533">Alto del cuadrado Em que delimita el carácter.</span><span class="sxs-lookup"><span data-stu-id="e177a-533">The height of the em square box that bounds the character.</span></span></param>
        <param name="layoutRect"><span data-ttu-id="e177a-534"><see cref="T:System.Drawing.Rectangle" /> que representa el rectángulo que delimita el texto.</span><span class="sxs-lookup"><span data-stu-id="e177a-534">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the text.</span></span></param>
        <param name="format"><span data-ttu-id="e177a-535"><see cref="T:System.Drawing.StringFormat" /> que especifica información sobre el formato de texto, como el interlineado y la alineación.</span><span class="sxs-lookup"><span data-stu-id="e177a-535">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="e177a-536">Agrega una cadena de texto a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-536">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-537">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-537">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.RectangleF layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As RectangleF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::RectangleF layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="e177a-538"><see cref="T:System.String" /> que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="e177a-538">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="e177a-539"><see cref="T:System.Drawing.FontFamily" /> que representa el nombre de la fuente con la que se dibuja la prueba.</span><span class="sxs-lookup"><span data-stu-id="e177a-539">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="e177a-540">Enumeración <see cref="T:System.Drawing.FontStyle" /> que representa la información de estilo sobre el texto (negrita, cursiva, etc.).</span><span class="sxs-lookup"><span data-stu-id="e177a-540">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="e177a-541">Se debe convertir en un entero (vea el ejemplo de código más adelante en esta sección).</span><span class="sxs-lookup"><span data-stu-id="e177a-541">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="e177a-542">Alto del cuadrado Em que delimita el carácter.</span><span class="sxs-lookup"><span data-stu-id="e177a-542">The height of the em square box that bounds the character.</span></span></param>
        <param name="layoutRect"><span data-ttu-id="e177a-543"><see cref="T:System.Drawing.RectangleF" /> que representa el rectángulo que delimita el texto.</span><span class="sxs-lookup"><span data-stu-id="e177a-543">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the text.</span></span></param>
        <param name="format"><span data-ttu-id="e177a-544"><see cref="T:System.Drawing.StringFormat" /> que especifica información sobre el formato de texto, como el interlineado y la alineación.</span><span class="sxs-lookup"><span data-stu-id="e177a-544">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="e177a-545">Agrega una cadena de texto a este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-545">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-546">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-546">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMarkers">
      <MemberSignature Language="C#" Value="public void ClearMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearMarkers();" />
      <MemberSignature Language="F#" Value="member this.ClearMarkers : unit -&gt; unit" Usage="graphicsPath.ClearMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e177a-547">Borra todos los marcadores de este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-547">Clears all markers from this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-548">Use la <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> método para crear un marcador en la ubicación actual en un <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="e177a-548">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to create a marker at the current location in a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="e177a-549">Use el <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> método para recorrer en iteración los marcadores existentes en una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-549">Use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method to iterate through the existing markers in a path.</span></span>  
  
 <span data-ttu-id="e177a-550">Los marcadores se usan para separar grupos de subtrazados.</span><span class="sxs-lookup"><span data-stu-id="e177a-550">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="e177a-551">Entre dos marcadores puede haber uno o varios subtrazados.</span><span class="sxs-lookup"><span data-stu-id="e177a-551">One or more subpaths can be contained between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-552">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-552">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-553">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-553">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-554">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-554">Creates a path.</span></span>  
  
-   <span data-ttu-id="e177a-555">Agrega varios objetos a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-555">Adds several objects to the path.</span></span>  
  
-   <span data-ttu-id="e177a-556">Agrega marcadores a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-556">Adds markers to the path.</span></span>  
  
-   <span data-ttu-id="e177a-557">Borra todos los marcadores de la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-557">Clears all markers from the path.</span></span>  
  
-   <span data-ttu-id="e177a-558">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-558">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#15)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#15)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="graphicsPath.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e177a-559">Crea una copia exacta de este trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-559">Creates an exact copy of this path.</span></span></summary>
        <returns><span data-ttu-id="e177a-560"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> que crea este método, convertido en objeto.</span><span class="sxs-lookup"><span data-stu-id="e177a-560">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-561">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-561">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-562">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-562">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-563">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-563">Creates a path.</span></span>  
  
-   <span data-ttu-id="e177a-564">Agrega varias figuras a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-564">Adds several figures to the path.</span></span>  
  
-   <span data-ttu-id="e177a-565">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-565">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="e177a-566">Clona una copia de dicha ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-566">Clones a copy of that path.</span></span>  
  
-   <span data-ttu-id="e177a-567">Dibuja la nueva ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-567">Draws the new path to the screen.</span></span>  
  
 <span data-ttu-id="e177a-568">Tenga en cuenta que la llamada la <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> método se debe convertir como un <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="e177a-568">Notice that the call the <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> method must be cast as a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#16)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#16)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllFigures">
      <MemberSignature Language="C#" Value="public void CloseAllFigures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseAllFigures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseAllFigures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseAllFigures();" />
      <MemberSignature Language="F#" Value="member this.CloseAllFigures : unit -&gt; unit" Usage="graphicsPath.CloseAllFigures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e177a-569">Cierra todas las figuras abiertas de este trazado e inicia una nueva figura.</span><span class="sxs-lookup"><span data-stu-id="e177a-569">Closes all open figures in this path and starts a new figure.</span></span> <span data-ttu-id="e177a-570">Cierra cada figura abierta conectando una línea desde su extremo hasta su punto inicial.</span><span class="sxs-lookup"><span data-stu-id="e177a-570">It closes each open figure by connecting a line from its endpoint to its starting point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-571">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-571">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-572">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-572">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-573">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-573">Creates a path.</span></span>  
  
-   <span data-ttu-id="e177a-574">Agrega varias figuras abiertas a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-574">Adds several open figures to the path.</span></span>  
  
-   <span data-ttu-id="e177a-575">Cierra todas las figuras en la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-575">Closes all figures in the path.</span></span>  
  
-   <span data-ttu-id="e177a-576">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-576">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#17)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#17)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseFigure">
      <MemberSignature Language="C#" Value="public void CloseFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseFigure();" />
      <MemberSignature Language="F#" Value="member this.CloseFigure : unit -&gt; unit" Usage="graphicsPath.CloseFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e177a-577">Cierra la figura actual e inicia una nueva figura.</span><span class="sxs-lookup"><span data-stu-id="e177a-577">Closes the current figure and starts a new figure.</span></span> <span data-ttu-id="e177a-578">Si la figura actual contiene una secuencia de líneas y curvas interconectadas, este método cierra el bucle conectando una línea desde el extremo hasta el punto inicial.</span><span class="sxs-lookup"><span data-stu-id="e177a-578">If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-579">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-579">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-580">El código crea un triángulo mediante la creación de una nueva ruta de acceso, iniciar una figura, agregar líneas de intersección de dos a la ilustración y, a continuación, cierra la figura para formar un triángulo.</span><span class="sxs-lookup"><span data-stu-id="e177a-580">The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</span></span> <span data-ttu-id="e177a-581">A continuación, se dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-581">The path is then drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#18)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#18)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="graphicsPath.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e177a-582">Libera todos los recursos utilizados por este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-582">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-583">Una llamada a <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> permite que los recursos utilizados por este <xref:System.Drawing.Drawing2D.GraphicsPath> que reasignarse para otros fines.</span><span class="sxs-lookup"><span data-stu-id="e177a-583">Calling <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.GraphicsPath> to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.FillMode FillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.FillMode FillMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FillMode As FillMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::FillMode FillMode { System::Drawing::Drawing2D::FillMode get(); void set(System::Drawing::Drawing2D::FillMode value); };" />
      <MemberSignature Language="F#" Value="member this.FillMode : System.Drawing.Drawing2D.FillMode with get, set" Usage="System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.FillMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e177a-584">Obtiene o establece una enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> que determina cómo se rellena el interior de las formas en este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-584">Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></summary>
        <value><span data-ttu-id="e177a-585">Enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> que especifica cómo se rellena el interior de las formas en este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-585">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPath ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="graphicsPath.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e177a-586">Permite que un objeto intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por la recolección de elementos no utilizados.</span><span class="sxs-lookup"><span data-stu-id="e177a-586">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flatten">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-587">Convierte cada una de las curvas de este trazado en una secuencia de segmentos conectados.</span><span class="sxs-lookup"><span data-stu-id="e177a-587">Converts each curve in this path into a sequence of connected line segments.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flatten ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten();" />
      <MemberSignature Language="F#" Value="member this.Flatten : unit -&gt; unit" Usage="graphicsPath.Flatten " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e177a-588">Convierte cada una de las curvas de este trazado en una secuencia de segmentos conectados.</span><span class="sxs-lookup"><span data-stu-id="e177a-588">Converts each curve in this path into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-589">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-589">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Flatten matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="e177a-590"><see cref="T:System.Drawing.Drawing2D.Matrix" /> mediante la cual se va a transformar este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> antes de aplanarlo.</span><span class="sxs-lookup"><span data-stu-id="e177a-590">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span></span></param>
        <summary><span data-ttu-id="e177a-591">Aplica la transformación especificada y, a continuación, convierte cada curva de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> en una secuencia de segmentos de línea conectados.</span><span class="sxs-lookup"><span data-stu-id="e177a-591">Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-592">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-592">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Flatten (matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="e177a-593"><see cref="T:System.Drawing.Drawing2D.Matrix" /> mediante la cual se va a transformar este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> antes de aplanarlo.</span><span class="sxs-lookup"><span data-stu-id="e177a-593">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span></span></param>
        <param name="flatness"><span data-ttu-id="e177a-594">Especifica el error máximo permitido entre la curva y su aproximación aplanada.</span><span class="sxs-lookup"><span data-stu-id="e177a-594">Specifies the maximum permitted error between the curve and its flattened approximation.</span></span> <span data-ttu-id="e177a-595">El valor predeterminado es 0,25.</span><span class="sxs-lookup"><span data-stu-id="e177a-595">A value of 0.25 is the default.</span></span> <span data-ttu-id="e177a-596">Si se reduce el valor del aplanamiento aumentará el número de segmentos de línea en la aproximación.</span><span class="sxs-lookup"><span data-stu-id="e177a-596">Reducing the flatness value will increase the number of line segments in the approximation.</span></span></param>
        <summary><span data-ttu-id="e177a-597">Convierte cada curva de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> en una secuencia de segmentos de línea conectados.</span><span class="sxs-lookup"><span data-stu-id="e177a-597">Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-598">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-598">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-599">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-599">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-600">Crea una ruta de acceso de gráficos y una matriz de traslación.</span><span class="sxs-lookup"><span data-stu-id="e177a-600">Creates a graphics path and a translation matrix.</span></span>  
  
-   <span data-ttu-id="e177a-601">Agrega una curva a la ruta de acceso con cuatro puntos.</span><span class="sxs-lookup"><span data-stu-id="e177a-601">Adds a curve to the path using four points.</span></span>  
  
-   <span data-ttu-id="e177a-602">Dibuja la ruta de acceso (curva) en la pantalla, con un lápiz negro.</span><span class="sxs-lookup"><span data-stu-id="e177a-602">Draws the path (curve) to the screen, using a black pen.</span></span>  
  
-   <span data-ttu-id="e177a-603">Desplaza la curva hacia abajo 10 píxeles y se reduce.</span><span class="sxs-lookup"><span data-stu-id="e177a-603">Shifts the curve down 10 pixels and flattens it.</span></span>  
  
-   <span data-ttu-id="e177a-604">Dibuja la curva en la pantalla con una pluma de color rojo.</span><span class="sxs-lookup"><span data-stu-id="e177a-604">Draws the curve to the screen using, a red pen.</span></span>  
  
 <span data-ttu-id="e177a-605">Tenga en cuenta que la curva rojo aplanadas líneas que conectan los puntos.</span><span class="sxs-lookup"><span data-stu-id="e177a-605">Notice that the red curve has flattened lines connecting the points.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#19)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#19)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-606">Devuelve un rectángulo que delimita este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-606">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds();" />
      <MemberSignature Language="F#" Value="member this.GetBounds : unit -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e177a-607">Devuelve un rectángulo que delimita este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-607">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-608"><see cref="T:System.Drawing.RectangleF" /> que representa un rectángulo que delimita este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-608">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-609">El tamaño del rectángulo devuelto viene determinado por el tipo de extremos, el ancho del lápiz y el límite angular de lápiz y, por tanto, genera un "ajustar suelto" a la ruta de acceso delimitada.</span><span class="sxs-lookup"><span data-stu-id="e177a-609">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="e177a-610">La fórmula aproximada es: el rectángulo delimitador inicial se aumenta en el ancho del lápiz y este resultado se multiplica por el límite angular, además de un margen adicional para los extremos.</span><span class="sxs-lookup"><span data-stu-id="e177a-610">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-611">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-611">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-612">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-612">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-613">Crea un trazado de gráficos.</span><span class="sxs-lookup"><span data-stu-id="e177a-613">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="e177a-614">Agrega una elipse (círculo) en él y dibuja en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-614">Adds an ellipse (circle) to it and draws it to the screen.</span></span>  
  
-   <span data-ttu-id="e177a-615">Recupera el rectángulo delimitador para el círculo con una llamada a <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> y dibuja el rectángulo en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-615">Retrieves the bounding rectangle for the circle with a call to <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> and draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="e177a-616">Crea un segundo trazado del gráfico.</span><span class="sxs-lookup"><span data-stu-id="e177a-616">Creates a second graphics path.</span></span>  
  
-   <span data-ttu-id="e177a-617">Agrega un círculo y ensancha la ruta de acceso a un ancho de 10.</span><span class="sxs-lookup"><span data-stu-id="e177a-617">Adds a circle and widens the path to a width of 10.</span></span>  
  
-   <span data-ttu-id="e177a-618">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-618">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="e177a-619">Recupera el rectángulo delimitador para el círculo de segundo.</span><span class="sxs-lookup"><span data-stu-id="e177a-619">Retrieves the bounding rectangle for the second circle.</span></span>  
  
-   <span data-ttu-id="e177a-620">Dibuja el rectángulo delimitador en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-620">Draws the bounding rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="e177a-621">Muestra el tamaño del rectángulo en un cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="e177a-621">Displays the rectangle size in a dialog box.</span></span>  
  
 <span data-ttu-id="e177a-622">Tenga en cuenta que el rectángulo delimitador de la derecha es mayor (a la cuenta para el ancho adicional de la línea).</span><span class="sxs-lookup"><span data-stu-id="e177a-622">Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#20)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#20)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="e177a-623"><see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica la transformación que se va a aplicar a este trazado antes de que se calcule el rectángulo delimitador.</span><span class="sxs-lookup"><span data-stu-id="e177a-623">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span></span> <span data-ttu-id="e177a-624">Este trazado no se transforma de manera permanente, se usa sólo durante el proceso de cálculo del rectángulo delimitador.</span><span class="sxs-lookup"><span data-stu-id="e177a-624">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span></span></param>
        <summary><span data-ttu-id="e177a-625">Devuelve un rectángulo que delimita este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se transforma por la matriz <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="e177a-625">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-626"><see cref="T:System.Drawing.RectangleF" /> que representa un rectángulo que delimita este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-626">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-627">El tamaño del rectángulo devuelto viene determinado por el tipo de extremos, el ancho del lápiz y el límite angular de lápiz y, por tanto, genera un "ajustar suelto" a la ruta de acceso delimitada.</span><span class="sxs-lookup"><span data-stu-id="e177a-627">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="e177a-628">La fórmula aproximada es: el rectángulo delimitador inicial se aumenta en el ancho del lápiz y este resultado se multiplica por el límite angular, además de un margen adicional para los extremos.</span><span class="sxs-lookup"><span data-stu-id="e177a-628">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-629">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="e177a-629">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix * System.Drawing.Pen -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds (matrix, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="e177a-630"><see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica la transformación que se va a aplicar a este trazado antes de que se calcule el rectángulo delimitador.</span><span class="sxs-lookup"><span data-stu-id="e177a-630">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span></span> <span data-ttu-id="e177a-631">Este trazado no se transforma de manera permanente, se usa sólo durante el proceso de cálculo del rectángulo delimitador.</span><span class="sxs-lookup"><span data-stu-id="e177a-631">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span></span></param>
        <param name="pen"><span data-ttu-id="e177a-632"><see cref="T:System.Drawing.Pen" /> con el que se va a dibujar el trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-632">The <see cref="T:System.Drawing.Pen" /> with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <summary><span data-ttu-id="e177a-633">Devuelve un rectángulo que delimita este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando el actual trazado se transforma por la matriz <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificada y se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado.</span><span class="sxs-lookup"><span data-stu-id="e177a-633">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> and drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-634"><see cref="T:System.Drawing.RectangleF" /> que representa un rectángulo que delimita este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-634">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-635">El tamaño del rectángulo devuelto viene determinado por el tipo de extremos, el ancho del lápiz y el límite angular de lápiz y, por tanto, genera un "ajustar suelto" a la ruta de acceso delimitada.</span><span class="sxs-lookup"><span data-stu-id="e177a-635">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="e177a-636">La fórmula aproximada es: el rectángulo delimitador inicial se aumenta en el ancho del lápiz y este resultado se multiplica por el límite angular, además de un margen adicional para los extremos.</span><span class="sxs-lookup"><span data-stu-id="e177a-636">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-637">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="e177a-637">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF GetLastPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.PointF GetLastPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastPoint () As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::PointF GetLastPoint();" />
      <MemberSignature Language="F#" Value="member this.GetLastPoint : unit -&gt; System.Drawing.PointF" Usage="graphicsPath.GetLastPoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e177a-638">Obtiene el último punto de la matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-638">Gets the last point in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-639">Un <see cref="T:System.Drawing.PointF" /> que representa el último punto de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-639">A <see cref="T:System.Drawing.PointF" /> that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-640">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-640">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-641">El código crea una ruta de acceso, agrega una línea a la ruta de acceso y, a continuación, obtiene el último punto en la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-641">The code creates a path, adds a line to the path, and then gets the last point in the path.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#21)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#21)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOutlineVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-642">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-642">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="e177a-643"><see cref="T:System.Drawing.Point" /> que especifica la ubicación que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-643">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="e177a-644"><see cref="T:System.Drawing.Pen" /> que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-644">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="e177a-645">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-645">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-646">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-646">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-647">Este método comprueba si el contorno de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-647">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-648">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-648">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="e177a-649"><see cref="T:System.Drawing.PointF" /> que especifica la ubicación que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-649">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="e177a-650"><see cref="T:System.Drawing.Pen" /> que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-650">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="e177a-651">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-651">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-652">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-652">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-653">Este método comprueba si el contorno de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-653">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-654">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-654">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="e177a-655"><see cref="T:System.Drawing.Point" /> que especifica la ubicación que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-655">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="e177a-656"><see cref="T:System.Drawing.Pen" /> que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-656">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="e177a-657"><see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-657">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="e177a-658">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado y el <see cref="T:System.Drawing.Graphics" /> indicado.</span><span class="sxs-lookup"><span data-stu-id="e177a-658">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-659">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-659">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-660">Este método comprueba si el contorno de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-660">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="e177a-661">Se proporcionan las coordenadas del punto que se comprobará en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="e177a-661">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e177a-662">La matriz de transformación `graphics` temporalmente se aplica antes de realizar pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="e177a-662">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-663">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-663">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="e177a-664"><see cref="T:System.Drawing.PointF" /> que especifica la ubicación que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-664">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="e177a-665"><see cref="T:System.Drawing.Pen" /> que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-665">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="e177a-666"><see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-666">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="e177a-667">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado y el <see cref="T:System.Drawing.Graphics" /> indicado.</span><span class="sxs-lookup"><span data-stu-id="e177a-667">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-668">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-668">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-669">Este método comprueba si el contorno de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-669">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="e177a-670">Se proporcionan las coordenadas del punto que se comprobará en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="e177a-670">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e177a-671">La matriz de transformación `graphics` temporalmente se aplica antes de realizar pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="e177a-671">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-672">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-672">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="e177a-673">Coordenada x del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-673">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="e177a-674">Coordenada Y del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-674">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="e177a-675"><see cref="T:System.Drawing.Pen" /> que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-675">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="e177a-676">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-676">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-677">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-677">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-678">Este método comprueba si el contorno de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-678">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-679">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-679">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="e177a-680">Coordenada x del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-680">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="e177a-681">Coordenada Y del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-681">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="e177a-682"><see cref="T:System.Drawing.Pen" /> que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-682">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="e177a-683">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-683">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-684">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-684">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-685">Este método comprueba si el contorno de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-685">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-686">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-686">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="e177a-687">Coordenada x del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-687">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="e177a-688">Coordenada Y del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-688">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="e177a-689"><see cref="T:System.Drawing.Pen" /> que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-689">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="e177a-690"><see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-690">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="e177a-691">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado y el <see cref="T:System.Drawing.Graphics" /> indicado.</span><span class="sxs-lookup"><span data-stu-id="e177a-691">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-692">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-692">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-693">Este método comprueba si el contorno de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-693">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="e177a-694">Se proporcionan las coordenadas del punto que se comprobará en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="e177a-694">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e177a-695">La matriz de transformación `graphics` temporalmente se aplica antes de realizar pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="e177a-695">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-696">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> eventos.</span><span class="sxs-lookup"><span data-stu-id="e177a-696">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event.</span></span> <span data-ttu-id="e177a-697">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-697">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-698">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-698">Creates a path.</span></span>  
  
-   <span data-ttu-id="e177a-699">Agrega un rectángulo a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-699">Adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="e177a-700">Crea un lápiz ancho y se amplía la ruta de acceso con ese lápiz (para hacer el ejemplo más claro),</span><span class="sxs-lookup"><span data-stu-id="e177a-700">Creates a wide pen and widens the path with that pen (to make the example clearer),</span></span>  
  
-   <span data-ttu-id="e177a-701">Prueba en un punto (100, 50) para ver si se encuentra dentro de (bajo) de uno de los bordes del rectángulo mediante una llamada a <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span><span class="sxs-lookup"><span data-stu-id="e177a-701">Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span></span>  
  
 <span data-ttu-id="e177a-702">El resultado se muestra en el cuadro de mensaje (en este caso, true).</span><span class="sxs-lookup"><span data-stu-id="e177a-702">The result is shown in the message box (in this case, true).</span></span> <span data-ttu-id="e177a-703">En otras palabras, el borde se representa a través de ese punto.</span><span class="sxs-lookup"><span data-stu-id="e177a-703">In other words the edge is rendered over that point.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#22)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#22)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="e177a-704">Coordenada X del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-704">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="e177a-705">Coordenada Y del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-705">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="e177a-706"><see cref="T:System.Drawing.Pen" /> que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-706">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="e177a-707"><see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-707">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="e177a-708">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado y el <see cref="T:System.Drawing.Graphics" /> indicado.</span><span class="sxs-lookup"><span data-stu-id="e177a-708">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-709">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-709">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-710">Este método comprueba si el contorno de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-710">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="e177a-711">Se proporcionan las coordenadas del punto que se comprobará en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="e177a-711">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e177a-712">La matriz de transformación de la `graphics` parámetro temporalmente se aplica antes de realizar pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="e177a-712">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-713">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-713">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-714">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-714">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="e177a-715"><see cref="T:System.Drawing.Point" /> que representa el punto que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-715">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span></span></param>
        <summary><span data-ttu-id="e177a-716">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-716">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-717">Este método devuelve <see langword="true" /> si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-717">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-718">Para obtener un ejemplo, consulte `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="e177a-718">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="e177a-719"><see cref="T:System.Drawing.PointF" /> que representa el punto que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-719">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span></span></param>
        <summary><span data-ttu-id="e177a-720">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-720">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-721">Este método devuelve <see langword="true" /> si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-721">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-722">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-722">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="e177a-723"><see cref="T:System.Drawing.Point" /> que representa el punto que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-723">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="e177a-724"><see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-724">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="e177a-725">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-725">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-726">Este método devuelve <see langword="true" /> si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-726">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-727">Se proporcionan las coordenadas del punto que se comprobará en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="e177a-727">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e177a-728">La matriz de transformación de la `graphics` parámetro temporalmente se aplica antes de realizar pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="e177a-728">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-729">Para obtener un ejemplo, consulte `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="e177a-729">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="e177a-730"><see cref="T:System.Drawing.PointF" /> que representa el punto que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-730">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="e177a-731"><see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-731">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="e177a-732">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-732">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-733">Este método devuelve <see langword="true" /> si el punto especificado está contenido dentro de este objeto; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-733">This method returns <see langword="true" /> if the specified point is contained within this; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-734">Se proporcionan las coordenadas del punto que se comprobará en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="e177a-734">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e177a-735">La matriz de transformación de la `graphics` parámetro temporalmente se aplica antes de realizar pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="e177a-735">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-736">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-736">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="e177a-737">Coordenada x del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-737">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="e177a-738">Coordenada Y del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-738">The y-coordinate of the point to test.</span></span></param>
        <summary><span data-ttu-id="e177a-739">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-739">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-740">Este método devuelve <see langword="true" /> si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-740">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-741">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-741">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="e177a-742">Coordenada x del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-742">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="e177a-743">Coordenada Y del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-743">The y-coordinate of the point to test.</span></span></param>
        <summary><span data-ttu-id="e177a-744">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-744">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-745">Este método devuelve <see langword="true" /> si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-745">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-746">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-746">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="e177a-747">Coordenada x del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-747">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="e177a-748">Coordenada Y del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-748">The y-coordinate of the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="e177a-749"><see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-749">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="e177a-750">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, utilizando el <see cref="T:System.Drawing.Graphics" /> indicado.</span><span class="sxs-lookup"><span data-stu-id="e177a-750">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-751">Este método devuelve <see langword="true" /> si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-751">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-752">Se proporcionan las coordenadas del punto que se comprobará en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="e177a-752">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e177a-753">La matriz de transformación `graphics` temporalmente se aplica antes de realizar pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="e177a-753">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-754">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-754">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-755">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-755">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-756">Crea una ruta de acceso y agrega una elipse al trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-756">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="e177a-757">Comprueba si el punto especificado está dentro de la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-757">Tests whether the specified point is contained within the path.</span></span>  
  
-   <span data-ttu-id="e177a-758">Muestra el resultado en un cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="e177a-758">Displays the result in a dialog box.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#23)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#23)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="e177a-759">Coordenada X del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-759">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="e177a-760">Coordenada Y del punto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="e177a-760">The y-coordinate of the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="e177a-761"><see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e177a-761">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="e177a-762">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> en la región de recorte visible del <see cref="T:System.Drawing.Graphics" /> indicado.</span><span class="sxs-lookup"><span data-stu-id="e177a-762">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="e177a-763">Este método devuelve <see langword="true" /> si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-763">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-764">Se proporcionan las coordenadas del punto que se comprobará en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="e177a-764">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e177a-765">La matriz de transformación de la `graphics` parámetro temporalmente se aplica antes de realizar pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="e177a-765">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-766">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-766">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathData">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PathData PathData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.PathData PathData" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathData As PathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PathData ^ PathData { System::Drawing::Drawing2D::PathData ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathData : System.Drawing.Drawing2D.PathData" Usage="System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PathData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e177a-767">Obtiene los datos <see cref="T:System.Drawing.Drawing2D.PathData" /> que encapsulan matrices de puntos (<paramref name="points" />) y tipos (<paramref name="types" />) para este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-767">Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays of points (<paramref name="points" />) and types (<paramref name="types" />) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <value><span data-ttu-id="e177a-768"><see cref="T:System.Drawing.Drawing2D.PathData" /> que encapsulan matrices de puntos y tipos para este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-768">A <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays for both the points and types for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathPoints">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF[] PathPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF[] PathPoints" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathPoints As PointF()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::PointF&gt; ^ PathPoints { cli::array &lt;System::Drawing::PointF&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathPoints : System.Drawing.PointF[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e177a-769">Obtiene los puntos del trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-769">Gets the points in the path.</span></span></summary>
        <value><span data-ttu-id="e177a-770">Una matriz de objetos <see cref="T:System.Drawing.PointF" /> que representan el trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-770">An array of <see cref="T:System.Drawing.PointF" /> objects that represent the path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathTypes">
      <MemberSignature Language="C#" Value="public byte[] PathTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] PathTypes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathTypes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ PathTypes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathTypes : byte[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e177a-771">Obtiene los tipos de los puntos correspondientes de la matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-771">Gets the types of the corresponding points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array.</span></span></summary>
        <value><span data-ttu-id="e177a-772">Matriz de bytes que especifica los tipos de los puntos correspondientes del trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-772">An array of bytes that specifies the types of the corresponding points in the path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-773">La matriz de bytes devueltos por la <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> propiedad especifica los tipos de punto y marcas para los puntos de datos en una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-773">The array of bytes returned by the <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> property specifies point types and flags for the data points in a path.</span></span> <span data-ttu-id="e177a-774">Para cada punto, bits entre 0 y 2 indican el tipo de un punto y bits 3 al 7 contienen un conjunto de marcadores que especifican los atributos de un punto.</span><span class="sxs-lookup"><span data-stu-id="e177a-774">For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</span></span> <span data-ttu-id="e177a-775">La siguiente tabla muestra los valores posibles y sus significados.</span><span class="sxs-lookup"><span data-stu-id="e177a-775">The following table shows possible values and their meanings.</span></span>  
  
|<span data-ttu-id="e177a-776">Valor</span><span class="sxs-lookup"><span data-stu-id="e177a-776">Value</span></span>|<span data-ttu-id="e177a-777">Significado</span><span class="sxs-lookup"><span data-stu-id="e177a-777">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="e177a-778">0</span><span class="sxs-lookup"><span data-stu-id="e177a-778">0</span></span>|<span data-ttu-id="e177a-779">Indica que el punto es el inicio de una figura.</span><span class="sxs-lookup"><span data-stu-id="e177a-779">Indicates that the point is the start of a figure.</span></span>|  
|<span data-ttu-id="e177a-780">1</span><span class="sxs-lookup"><span data-stu-id="e177a-780">1</span></span>|<span data-ttu-id="e177a-781">Indica que el punto es uno de los dos extremos de una línea.</span><span class="sxs-lookup"><span data-stu-id="e177a-781">Indicates that the point is one of the two endpoints of a line.</span></span>|  
|<span data-ttu-id="e177a-782">3</span><span class="sxs-lookup"><span data-stu-id="e177a-782">3</span></span>|<span data-ttu-id="e177a-783">Indica que el punto es un punto de control o el punto de conexión de una curva spline de Bézier cúbica.</span><span class="sxs-lookup"><span data-stu-id="e177a-783">Indicates that the point is an endpoint or control point of a cubic Bézier spline.</span></span>|  
|<span data-ttu-id="e177a-784">0x7</span><span class="sxs-lookup"><span data-stu-id="e177a-784">0x7</span></span>|<span data-ttu-id="e177a-785">Las máscaras de todos los bits excepto los tres bits de orden inferior, que indican el tipo de punto.</span><span class="sxs-lookup"><span data-stu-id="e177a-785">Masks all bits except for the three low-order bits, which indicate the point type.</span></span>|  
|<span data-ttu-id="e177a-786">0x20</span><span class="sxs-lookup"><span data-stu-id="e177a-786">0x20</span></span>|<span data-ttu-id="e177a-787">Especifica que el punto es un marcador.</span><span class="sxs-lookup"><span data-stu-id="e177a-787">Specifies that the point is a marker.</span></span>|  
|<span data-ttu-id="e177a-788">0x80</span><span class="sxs-lookup"><span data-stu-id="e177a-788">0x80</span></span>|<span data-ttu-id="e177a-789">Especifica que el punto es el último punto de un subtrazado cerrado (figura).</span><span class="sxs-lookup"><span data-stu-id="e177a-789">Specifies that the point is the last point in a closed subpath (figure).</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointCount">
      <MemberSignature Language="C#" Value="public int PointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PointCount : int" Usage="System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e177a-790">Obtiene el número de elementos de la matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> o de la matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-790">Gets the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span></span></summary>
        <value><span data-ttu-id="e177a-791">Un entero que especifica el número de elementos de la matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />o de la matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-791">An integer that specifies the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="graphicsPath.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e177a-792">Vacía las matrices <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> y <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> y establece <see cref="T:System.Drawing.Drawing2D.FillMode" /> en <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-792">Empties the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-793">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-793">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-794">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-794">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-795">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-795">Creates a path.</span></span>  
  
-   <span data-ttu-id="e177a-796">Agrega a varios elementos primitivos.</span><span class="sxs-lookup"><span data-stu-id="e177a-796">Adds several primitives to it.</span></span>  
  
-   <span data-ttu-id="e177a-797">Dibuja la matriz de puntos de la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-797">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="e177a-798">Restablece la ruta de acceso a un estado vacío.</span><span class="sxs-lookup"><span data-stu-id="e177a-798">Resets the path to an empty state.</span></span>  
  
-   <span data-ttu-id="e177a-799">Vuelve a adquirir la matriz de puntos (si existe).</span><span class="sxs-lookup"><span data-stu-id="e177a-799">Re-acquires the points array (if it exists).</span></span>  
  
-   <span data-ttu-id="e177a-800">Dibuja la matriz en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-800">Draws the array to the screen.</span></span>  
  
 <span data-ttu-id="e177a-801">Tenga en cuenta que no encuentra ninguna matriz después de la llamada de restablecimiento.</span><span class="sxs-lookup"><span data-stu-id="e177a-801">Notice that it finds no array following the reset call.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#24)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#24)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="graphicsPath.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e177a-802">Invierte el orden de los puntos en la matriz de <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-802">Reverses the order of points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-803">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-803">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-804">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-804">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-805">Crea una ruta de acceso y agrega a varios elementos primitivos a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-805">Creates a path and adds several primitives to the path.</span></span>  
  
-   <span data-ttu-id="e177a-806">Dibuja la matriz de puntos de la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-806">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="e177a-807">Dibuja la matriz de puntos invertido en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-807">Draws the reversed points array to the screen.</span></span>  
  
 <span data-ttu-id="e177a-808">Observe que la segunda lista de puntos en orden inverso de la primera.</span><span class="sxs-lookup"><span data-stu-id="e177a-808">Notice that the second listing of points is in reverse order from the first.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#25)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#25)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMarkers">
      <MemberSignature Language="C#" Value="public void SetMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMarkers();" />
      <MemberSignature Language="F#" Value="member this.SetMarkers : unit -&gt; unit" Usage="graphicsPath.SetMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e177a-809">Establece un marcador en este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-809">Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-810">Este método crea un marcador en la ruta de acceso que se puede usar para separar dos secciones de la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-810">This method creates a marker on the path that can be used to separate sections of the path.</span></span> <span data-ttu-id="e177a-811">A continuación, puede usar el <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> métodos para iterar por los marcadores en la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-811">You can then use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> methods to iterate through the markers in the path.</span></span>  
  
 <span data-ttu-id="e177a-812">Los marcadores se usan para separar grupos de subtrazados.</span><span class="sxs-lookup"><span data-stu-id="e177a-812">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="e177a-813">Entre los dos marcadores de la ruta de acceso puede ser uno o varios subtrazados.</span><span class="sxs-lookup"><span data-stu-id="e177a-813">One or more subpaths can be contained between two markers in the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-814">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-814">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-815">El código crea una ruta de acceso y agrega a varios elementos primitivos a la ruta de acceso separada por los marcadores y dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-815">The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#26)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#26)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartFigure">
      <MemberSignature Language="C#" Value="public void StartFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartFigure();" />
      <MemberSignature Language="F#" Value="member this.StartFigure : unit -&gt; unit" Usage="graphicsPath.StartFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e177a-816">Inicia una nueva figura sin cerrar la actual.</span><span class="sxs-lookup"><span data-stu-id="e177a-816">Starts a new figure without closing the current figure.</span></span> <span data-ttu-id="e177a-817">Todos los puntos siguientes agregados al trazado se incorporan a esta nueva figura.</span><span class="sxs-lookup"><span data-stu-id="e177a-817">All subsequent points added to the path are added to this new figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-818">El usuario debe mantener los puntos originales si son necesarios.</span><span class="sxs-lookup"><span data-stu-id="e177a-818">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e177a-819">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="e177a-819">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="e177a-820">Este método inicia un subtrazado nuevo en la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-820">This method starts a new subpath in the path.</span></span> <span data-ttu-id="e177a-821">Subtrazados permiten dividir una ruta de acceso en las secciones y usar la <xref:System.Drawing.Drawing2D.GraphicsPathIterator> clase para recorrer en iteración los subtrazados.</span><span class="sxs-lookup"><span data-stu-id="e177a-821">Subpaths allow you to separate a path into sections and use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator> class to iterate through the subpaths.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-822">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-822">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-823">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-823">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-824">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-824">Creates a path.</span></span>  
  
-   <span data-ttu-id="e177a-825">Agrega dos conjuntos de cifras.</span><span class="sxs-lookup"><span data-stu-id="e177a-825">Adds two sets of figures.</span></span> <span data-ttu-id="e177a-826">El primer conjunto de figuras combina a cuatro elementos primitivos en dos cifras.</span><span class="sxs-lookup"><span data-stu-id="e177a-826">The first set of figures combines four primitives into two figures.</span></span> <span data-ttu-id="e177a-827">El segundo conjunto de figuras combina a los mismos tipos primitivos de cuatro (excepto en que están desplazados en el eje y) en tres cifras.</span><span class="sxs-lookup"><span data-stu-id="e177a-827">The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</span></span>  
  
-   <span data-ttu-id="e177a-828">Todas las cifras se dibuja en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-828">Draws all the figures to the screen.</span></span>  
  
 <span data-ttu-id="e177a-829">Tenga en cuenta la diferencia en la apariencia entre los dos conjuntos de figuras.</span><span class="sxs-lookup"><span data-stu-id="e177a-829">Notice the difference in the appearance between the two sets of figures.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#27)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#27)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="e177a-830"><see cref="T:System.Drawing.Drawing2D.Matrix" /> que representa la transformación que se va a aplicar.</span><span class="sxs-lookup"><span data-stu-id="e177a-830">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the transformation to apply.</span></span></param>
        <summary><span data-ttu-id="e177a-831">Aplica una matriz de transformación a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-831">Applies a transform matrix to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-832">La transformación puede escalar, traducir, rotar o sesgar el <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="e177a-832">The transformation can scale, translate, rotate, or skew the <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-833">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-833">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-834">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-834">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-835">Crea una ruta de acceso y agrega una elipse al trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-835">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="e177a-836">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-836">Draws path to the screen.</span></span>  
  
-   <span data-ttu-id="e177a-837">Crea una matriz de transformación para traducir la ruta de acceso de 100 unidades en la dirección del eje x.</span><span class="sxs-lookup"><span data-stu-id="e177a-837">Creates a transform matrix to translate the path 100 units in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="e177a-838">Dibuja la ruta de acceso transformado en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e177a-838">Draws the transformed path to the screen.</span></span>  
  
 <span data-ttu-id="e177a-839">Tenga en cuenta que la elipse original se dibuja en negro y la elipse transformada se dibuja en rojo.</span><span class="sxs-lookup"><span data-stu-id="e177a-839">Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#28)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#28)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Warp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-840">Aplica una transformación de alabeo, definida por un rectángulo y un paralelogramo, a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-840">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warp (destPoints As PointF(), srcRect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="e177a-841">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que definen un paralelogramo en que se transforma el rectángulo definido por <paramref name="srcRect" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-841">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="e177a-842">La matriz puede contener tres elementos o cuatro.</span><span class="sxs-lookup"><span data-stu-id="e177a-842">The array can contain either three or four elements.</span></span> <span data-ttu-id="e177a-843">Si la matriz contiene tres elementos, el ángulo inferior derecho del paralelogramo viene definido por los tres primeros puntos.</span><span class="sxs-lookup"><span data-stu-id="e177a-843">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="e177a-844"><see cref="T:System.Drawing.RectangleF" /> que representa el rectángulo que se transforma en el paralelogramo definido por <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-844">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <summary><span data-ttu-id="e177a-845">Aplica una transformación de alabeo, definida por un rectángulo y un paralelogramo, a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-845">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-846">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-846">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="e177a-847">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que definen un paralelogramo en que se transforma el rectángulo definido por <paramref name="srcRect" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-847">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="e177a-848">La matriz puede contener tres elementos o cuatro.</span><span class="sxs-lookup"><span data-stu-id="e177a-848">The array can contain either three or four elements.</span></span> <span data-ttu-id="e177a-849">Si la matriz contiene tres elementos, el ángulo inferior derecho del paralelogramo viene definido por los tres primeros puntos.</span><span class="sxs-lookup"><span data-stu-id="e177a-849">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="e177a-850"><see cref="T:System.Drawing.RectangleF" /> que representa el rectángulo que se transforma en el paralelogramo definido por <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-850">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <param name="matrix"><span data-ttu-id="e177a-851"><see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica la transformación geométrica que se va a aplicar al trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-851">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <summary><span data-ttu-id="e177a-852">Aplica una transformación de alabeo, definida por un rectángulo y un paralelogramo, a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-852">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-853">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-853">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="e177a-854">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que define un paralelogramo en que se transforma el rectángulo definido por <paramref name="srcRect" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-854">An array of <see cref="T:System.Drawing.PointF" /> structures that defines a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="e177a-855">La matriz puede contener tres elementos o cuatro.</span><span class="sxs-lookup"><span data-stu-id="e177a-855">The array can contain either three or four elements.</span></span> <span data-ttu-id="e177a-856">Si la matriz contiene tres elementos, el ángulo inferior derecho del paralelogramo viene definido por los tres primeros puntos.</span><span class="sxs-lookup"><span data-stu-id="e177a-856">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="e177a-857"><see cref="T:System.Drawing.RectangleF" /> que representa el rectángulo que se transforma en el paralelogramo definido por <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-857">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <param name="matrix"><span data-ttu-id="e177a-858"><see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica la transformación geométrica que se va a aplicar al trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-858">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <param name="warpMode"><span data-ttu-id="e177a-859">Enumeración <see cref="T:System.Drawing.Drawing2D.WarpMode" /> que especifica si esta operación de alabeo usa el modo en perspectiva o bilineal.</span><span class="sxs-lookup"><span data-stu-id="e177a-859">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span></span></param>
        <summary><span data-ttu-id="e177a-860">Aplica una transformación de alabeo, definida por un rectángulo y un paralelogramo, a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-860">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-861">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-861">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode * single -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="e177a-862">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que definen un paralelogramo en que se transforma el rectángulo definido por <paramref name="srcRect" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-862">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="e177a-863">La matriz puede contener tres elementos o cuatro.</span><span class="sxs-lookup"><span data-stu-id="e177a-863">The array can contain either three or four elements.</span></span> <span data-ttu-id="e177a-864">Si la matriz contiene tres elementos, el ángulo inferior derecho del paralelogramo viene definido por los tres primeros puntos.</span><span class="sxs-lookup"><span data-stu-id="e177a-864">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="e177a-865"><see cref="T:System.Drawing.RectangleF" /> que representa el rectángulo que se transforma en el paralelogramo definido por <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-865">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <param name="matrix"><span data-ttu-id="e177a-866"><see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica la transformación geométrica que se va a aplicar al trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-866">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <param name="warpMode"><span data-ttu-id="e177a-867">Enumeración <see cref="T:System.Drawing.Drawing2D.WarpMode" /> que especifica si esta operación de alabeo usa el modo en perspectiva o bilineal.</span><span class="sxs-lookup"><span data-stu-id="e177a-867">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span></span></param>
        <param name="flatness"><span data-ttu-id="e177a-868">Valor de 0 a 1 que especifica cómo es de plano el trazado resultante.</span><span class="sxs-lookup"><span data-stu-id="e177a-868">A value from 0 through 1 that specifies how flat the resulting path is.</span></span> <span data-ttu-id="e177a-869">Para obtener más información, vea los métodos <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-869">For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods.</span></span></param>
        <summary><span data-ttu-id="e177a-870">Aplica una transformación de alabeo, definida por un rectángulo y un paralelogramo, a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-870">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e177a-871">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-871">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-872">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-872">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-873">Crea una ruta de acceso y agrega un rectángulo a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-873">Creates a path and adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="e177a-874">Dibuja el rectángulo en la pantalla en negro.</span><span class="sxs-lookup"><span data-stu-id="e177a-874">Draws that rectangle to the screen in black.</span></span>  
  
-   <span data-ttu-id="e177a-875">Distorsiona la ruta de acceso con un alabeo en perspectiva.</span><span class="sxs-lookup"><span data-stu-id="e177a-875">Warps the path with a perspective warp.</span></span>  
  
-   <span data-ttu-id="e177a-876">Dibuja el rectángulo distorsionado (ruta de acceso) en la pantalla en rojo.</span><span class="sxs-lookup"><span data-stu-id="e177a-876">Draws the warped rectangle (path) to the screen in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#29)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#29)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Widen">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e177a-877">Reemplaza este trazado con curvas que rodean el área que está rellena cuando ese trazado se dibuja con el lápiz especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-877">Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen -&gt; unit" Usage="graphicsPath.Widen pen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="e177a-878"><see cref="T:System.Drawing.Pen" /> que especifica el ancho entre el contorno original del trazado y el nuevo contorno que este método crea.</span><span class="sxs-lookup"><span data-stu-id="e177a-878">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <summary><span data-ttu-id="e177a-879">Agrega un contorno adicional al trazado.</span><span class="sxs-lookup"><span data-stu-id="e177a-879">Adds an additional outline to the path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-880">Este método crea un contorno alrededor de las líneas originales en este <xref:System.Drawing.Drawing2D.GraphicsPath>, con una distancia entre las líneas existentes y el nuevo contorno igual al ancho de la <xref:System.Drawing.Pen> utilizado en la llamada a <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="e177a-880">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="e177a-881">Si desea rellenar el espacio entre las líneas se debe usar el <xref:System.Drawing.Graphics.FillPath%2A> en lugar de tener la <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="e177a-881">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-882">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-882">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Widen (pen, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="e177a-883"><see cref="T:System.Drawing.Pen" /> que especifica el ancho entre el contorno original del trazado y el nuevo contorno que este método crea.</span><span class="sxs-lookup"><span data-stu-id="e177a-883">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <param name="matrix"><span data-ttu-id="e177a-884"><see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica la transformación que se va a aplicar al trazado antes de ensancharlo.</span><span class="sxs-lookup"><span data-stu-id="e177a-884">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span></span></param>
        <summary><span data-ttu-id="e177a-885">Agrega un contorno adicional al trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="e177a-885">Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-886">Este método crea un contorno alrededor de las líneas originales en este <xref:System.Drawing.Drawing2D.GraphicsPath>, con una distancia entre las líneas existentes y el nuevo contorno igual al ancho de la <xref:System.Drawing.Pen> utilizado en la llamada a <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="e177a-886">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="e177a-887">Si desea rellenar el espacio entre las líneas se debe usar el <xref:System.Drawing.Graphics.FillPath%2A> en lugar de tener la <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="e177a-887">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-888">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e177a-888">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Widen (pen, matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="e177a-889"><see cref="T:System.Drawing.Pen" /> que especifica el ancho entre el contorno original del trazado y el nuevo contorno que este método crea.</span><span class="sxs-lookup"><span data-stu-id="e177a-889">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <param name="matrix"><span data-ttu-id="e177a-890"><see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica la transformación que se va a aplicar al trazado antes de ensancharlo.</span><span class="sxs-lookup"><span data-stu-id="e177a-890">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span></span></param>
        <param name="flatness"><span data-ttu-id="e177a-891">Valor que especifica cómo son de planas las curvas.</span><span class="sxs-lookup"><span data-stu-id="e177a-891">A value that specifies the flatness for curves.</span></span></param>
        <summary><span data-ttu-id="e177a-892">Reemplaza este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con curvas que rodean el área rellena cuando se dibuja este trazado con el lápiz especificado.</span><span class="sxs-lookup"><span data-stu-id="e177a-892">Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> with curves that enclose the area that is filled when this path is drawn by the specified pen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e177a-893">Este método crea un contorno alrededor de las líneas originales en este <xref:System.Drawing.Drawing2D.GraphicsPath>, con una distancia entre las líneas existentes y el nuevo contorno igual al ancho de la <xref:System.Drawing.Pen> utilizado en la llamada a <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="e177a-893">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="e177a-894">Si desea rellenar el espacio entre las líneas se debe usar el <xref:System.Drawing.Graphics.FillPath%2A> en lugar de tener la <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="e177a-894">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e177a-895">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="e177a-895">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e177a-896">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="e177a-896">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e177a-897">Crea una ruta de acceso y agrega la ruta de acceso de dos elipses.</span><span class="sxs-lookup"><span data-stu-id="e177a-897">Creates a path and adds two ellipses to the path.</span></span>  
  
-   <span data-ttu-id="e177a-898">Dibuja la ruta de acceso en negro.</span><span class="sxs-lookup"><span data-stu-id="e177a-898">Draws the path in black.</span></span>  
  
-   <span data-ttu-id="e177a-899">Se amplía la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="e177a-899">Widens the path.</span></span>  
  
-   <span data-ttu-id="e177a-900">Dibuja la ruta de acceso en rojo.</span><span class="sxs-lookup"><span data-stu-id="e177a-900">Draws the path in red.</span></span>  
  
 <span data-ttu-id="e177a-901">Tenga en cuenta que usa la segunda representación <xref:System.Drawing.Graphics.FillPath%2A> en lugar de <xref:System.Drawing.Graphics.DrawPath%2A>, por lo que la ilustración representada tiene el contorno relleno.</span><span class="sxs-lookup"><span data-stu-id="e177a-901">Notice that the second rendering uses <xref:System.Drawing.Graphics.FillPath%2A> instead of <xref:System.Drawing.Graphics.DrawPath%2A>, and hence the rendered figure has the outline filled.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#30)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#30)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
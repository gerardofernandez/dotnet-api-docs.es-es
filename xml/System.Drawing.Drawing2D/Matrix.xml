<Type Name="Matrix" FullName="System.Drawing.Drawing2D.Matrix">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a65e3ba88f758ba0e325ee6bbe7d6adcfc16159f" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63881749" /></Metadata><TypeSignature Language="C#" Value="public sealed class Matrix : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Matrix extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.Matrix" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Matrix&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Matrix sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type Matrix = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="14cd8-101">Encapsula una matriz 3 por 3 afín que representa una transformación geométrica.</span><span class="sxs-lookup"><span data-stu-id="14cd8-101">Encapsulates a 3-by-3 affine matrix that represents a geometric transform.</span></span> <span data-ttu-id="14cd8-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="14cd8-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cd8-103">En [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] puede almacenar una transformación afín en un <xref:System.Drawing.Drawing2D.Matrix> objeto.</span><span class="sxs-lookup"><span data-stu-id="14cd8-103">In [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] you can store an affine transformation in a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="14cd8-104">Dado que la tercera columna de una matriz que representa una transformación afín siempre es (0, 0, 1), especifique solo los seis números en las dos primeras columnas cuando se construye un <xref:System.Drawing.Drawing2D.Matrix> objeto.</span><span class="sxs-lookup"><span data-stu-id="14cd8-104">Because the third column of a matrix that represents an affine transformation is always (0, 0, 1), you specify only the six numbers in the first two columns when you construct a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="14cd8-105">La instrucción `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` crea la matriz se muestra en la ilustración siguiente.</span><span class="sxs-lookup"><span data-stu-id="14cd8-105">The statement `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` constructs the matrix shown in the following figure.</span></span>  
  
 <span data-ttu-id="14cd8-106">![Transformaciones](~/add/media/aboutgdip05-art10.gif "transformaciones")</span><span class="sxs-lookup"><span data-stu-id="14cd8-106">![Transformations](~/add/media/aboutgdip05-art10.gif "Transformations")</span></span>  
  
## <a name="composite-transformations"></a><span data-ttu-id="14cd8-107">Transformaciones compuestas</span><span class="sxs-lookup"><span data-stu-id="14cd8-107">Composite Transformations</span></span>  
 <span data-ttu-id="14cd8-108">Una transformación compuesta es una secuencia de transformaciones, una tras otra.</span><span class="sxs-lookup"><span data-stu-id="14cd8-108">A composite transformation is a sequence of transformations, one followed by the other.</span></span> <span data-ttu-id="14cd8-109">Tenga en cuenta las matrices y las transformaciones en la lista siguiente:</span><span class="sxs-lookup"><span data-stu-id="14cd8-109">Consider the matrices and transformations in the following list:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="14cd8-110">Una matriz</span><span class="sxs-lookup"><span data-stu-id="14cd8-110">Matrix A</span></span>|<span data-ttu-id="14cd8-111">Girar 90 grados</span><span class="sxs-lookup"><span data-stu-id="14cd8-111">Rotate 90 degrees</span></span>|  
|<span data-ttu-id="14cd8-112">Matriz B</span><span class="sxs-lookup"><span data-stu-id="14cd8-112">Matrix B</span></span>|<span data-ttu-id="14cd8-113">Escalar por un factor de 2 en la dirección del eje x</span><span class="sxs-lookup"><span data-stu-id="14cd8-113">Scale by a factor of 2 in the x direction</span></span>|  
|<span data-ttu-id="14cd8-114">Matriz de C</span><span class="sxs-lookup"><span data-stu-id="14cd8-114">Matrix C</span></span>|<span data-ttu-id="14cd8-115">Traslación de 3 unidades en la dirección del eje y</span><span class="sxs-lookup"><span data-stu-id="14cd8-115">Translate 3 units in the y direction</span></span>|  
  
 <span data-ttu-id="14cd8-116">Si se empieza con el punto (2, 1) - representado por la matriz [2 1 1] - y multiplique por A, B, a continuación, a continuación, C, el punto (2, 1) se someterá a las tres transformaciones en el orden mostrado.</span><span class="sxs-lookup"><span data-stu-id="14cd8-116">If we start with the point (2, 1) - represented by the matrix [2 1 1] - and multiply by A, then B, then C, the point (2, 1) will undergo the three transformations in the order listed.</span></span>  
  
 <span data-ttu-id="14cd8-117">[2 1 1]ABC = [-2 5 1]</span><span class="sxs-lookup"><span data-stu-id="14cd8-117">[2 1 1]ABC = [-2 5 1]</span></span>  
  
 <span data-ttu-id="14cd8-118">En lugar de almacenar las tres partes de la transformación compuesta en tres matrices independientes, puede multiplicar A, B y C juntas para obtener una matriz de 3 x 3 único que almacena toda la transformación compuesta.</span><span class="sxs-lookup"><span data-stu-id="14cd8-118">Rather than store the three parts of the composite transformation in three separate matrices, you can multiply A, B, and C together to get a single 3×3 matrix that stores the entire composite transformation.</span></span> <span data-ttu-id="14cd8-119">Supongamos que ABC = D. A continuación, un punto multiplicado por D ofrece el mismo resultado que un punto multiplicado por A, B, a continuación, a continuación, C.</span><span class="sxs-lookup"><span data-stu-id="14cd8-119">Suppose ABC = D. Then a point multiplied by D gives the same result as a point multiplied by A, then B, then C.</span></span>  
  
 <span data-ttu-id="14cd8-120">[2 1 1]D = [-2 5 1]</span><span class="sxs-lookup"><span data-stu-id="14cd8-120">[2 1 1]D = [-2 5 1]</span></span>  
  
 <span data-ttu-id="14cd8-121">La siguiente ilustración muestra las matrices A, B, C y D.</span><span class="sxs-lookup"><span data-stu-id="14cd8-121">The following illustration shows the matrices A, B, C, and D.</span></span>  
  
 <span data-ttu-id="14cd8-122">![Transformaciones](~/add/media/aboutgdip05-art12.gif "transformaciones")</span><span class="sxs-lookup"><span data-stu-id="14cd8-122">![Transformations](~/add/media/aboutgdip05-art12.gif "Transformations")</span></span>  
  
 <span data-ttu-id="14cd8-123">El hecho de que la matriz de una transformación compuesta se puede formar mediante la multiplicación de matrices de transformación individuales significa que cualquier secuencia de transformaciones afines puede almacenarse en una sola <xref:System.Drawing.Drawing2D.Matrix> objeto.</span><span class="sxs-lookup"><span data-stu-id="14cd8-123">The fact that the matrix of a composite transformation can be formed by multiplying the individual transformation matrices means that any sequence of affine transformations can be stored in a single <xref:System.Drawing.Drawing2D.Matrix> object.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="14cd8-124">Es importante el orden de una transformación compuesta.</span><span class="sxs-lookup"><span data-stu-id="14cd8-124">The order of a composite transformation is important.</span></span> <span data-ttu-id="14cd8-125">En general, girar, escalar y, luego, traducir es el mismo como escala, rotar, a continuación, traducir.</span><span class="sxs-lookup"><span data-stu-id="14cd8-125">In general, rotate, then scale, then translate is not the same as scale, then rotate, then translate.</span></span> <span data-ttu-id="14cd8-126">De forma similar, el orden de la multiplicación de matrices es importante.</span><span class="sxs-lookup"><span data-stu-id="14cd8-126">Similarly, the order of matrix multiplication is important.</span></span> <span data-ttu-id="14cd8-127">En general, ABC no es lo mismo que BAC.</span><span class="sxs-lookup"><span data-stu-id="14cd8-127">In general, ABC is not the same as BAC.</span></span>  
  
 <span data-ttu-id="14cd8-128">El <xref:System.Drawing.Drawing2D.Matrix> clase proporciona varios métodos para la creación de una transformación compuesta: <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>, <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>, <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>, <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>, <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>, y <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>.</span><span class="sxs-lookup"><span data-stu-id="14cd8-128">The <xref:System.Drawing.Drawing2D.Matrix> class provides several methods for building a composite transformation: <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>, <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>, <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>, <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>, <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>, and <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>.</span></span> <span data-ttu-id="14cd8-129">El ejemplo siguiente crea la matriz de una transformación compuesta que primero gira 30 grados, a continuación, se escala en un factor de 2 en la dirección del eje y y, a continuación, traslada 5 unidades en la dirección x:</span><span class="sxs-lookup"><span data-stu-id="14cd8-129">The following example creates the matrix of a composite transformation that first rotates 30 degrees, then scales by a factor of 2 in the y direction, and then translates 5 units in the x direction:</span></span>  
  
 [!code-csharp[System.Drawing.CoordinateSystems#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/CS/Class1.cs#11)]
 [!code-vb[System.Drawing.CoordinateSystems#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/VB/Class1.vb#11)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/9fef7451-bddf-4c68-9350-400d1f1f25a3"><span data-ttu-id="14cd8-130">Sistemas de coordenadas y transformaciones</span><span class="sxs-lookup"><span data-stu-id="14cd8-130">Coordinate Systems and Transformations</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14cd8-131">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-131">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14cd8-132">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.Matrix" /> como matriz de identidad.</span><span class="sxs-lookup"><span data-stu-id="14cd8-132">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class as the identity matrix.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.Rectangle rect, System.Drawing.Point[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Point[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, plgpts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::Rectangle rect, cli::array &lt;System::Drawing::Point&gt; ^ plgpts);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : System.Drawing.Rectangle * System.Drawing.Point[] -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (rect, plgpts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="plgpts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="14cd8-133">Estructura <see cref="T:System.Drawing.Rectangle" /> que representa el rectángulo que se va a transformar.</span><span class="sxs-lookup"><span data-stu-id="14cd8-133">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to be transformed.</span></span></param>
        <param name="plgpts"><span data-ttu-id="14cd8-134">Matriz de tres estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos de un paralelogramo en el que se van a transformar las esquinas superior izquierda, superior derecha e inferior izquierda del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-134">An array of three <see cref="T:System.Drawing.Point" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span></span> <span data-ttu-id="14cd8-135">Estas tres primeras esquinas determinan la esquina inferior derecha del paralelogramo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-135">The lower-right corner of the parallelogram is implied by the first three corners.</span></span></param>
        <summary><span data-ttu-id="14cd8-136">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.Matrix" /> en la transformación geométrica definida por la matriz de puntos y el rectángulo especificados.</span><span class="sxs-lookup"><span data-stu-id="14cd8-136">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cd8-137">Este método inicializa la nueva matriz, que representa la transformación geométrica que asigna el rectángulo especificado por el `rect` parámetro en el paralelogramo definido por los tres puntos en el `plgpts` parámetro.</span><span class="sxs-lookup"><span data-stu-id="14cd8-137">This method initializes the new Matrix such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="14cd8-138">La esquina superior izquierda del rectángulo se asigna al primer punto en el `plgpts` matriz, la esquina superior derecha se asigna al segundo punto y la esquina inferior izquierda se asigna al tercer punto.</span><span class="sxs-lookup"><span data-stu-id="14cd8-138">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="14cd8-139">El punto inferior derecha del paralelogramo está implícito en los tres primeros.</span><span class="sxs-lookup"><span data-stu-id="14cd8-139">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.RectangleF rect, System.Drawing.PointF[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.PointF[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, plgpts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::RectangleF rect, cli::array &lt;System::Drawing::PointF&gt; ^ plgpts);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : System.Drawing.RectangleF * System.Drawing.PointF[] -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (rect, plgpts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="plgpts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="14cd8-140">Estructura <see cref="T:System.Drawing.RectangleF" /> que representa el rectángulo que se va a transformar.</span><span class="sxs-lookup"><span data-stu-id="14cd8-140">A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to be transformed.</span></span></param>
        <param name="plgpts"><span data-ttu-id="14cd8-141">Matriz de tres estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos de un paralelogramo en el que se van a transformar las esquinas superior izquierda, superior derecha e inferior izquierda del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-141">An array of three <see cref="T:System.Drawing.PointF" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span></span> <span data-ttu-id="14cd8-142">Estas tres primeras esquinas determinan la esquina inferior derecha del paralelogramo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-142">The lower-right corner of the parallelogram is implied by the first three corners.</span></span></param>
        <summary><span data-ttu-id="14cd8-143">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.Matrix" /> en la transformación geométrica definida por la matriz de puntos y el rectángulo especificados.</span><span class="sxs-lookup"><span data-stu-id="14cd8-143">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cd8-144">Este método inicializa la nueva <xref:System.Drawing.Drawing2D.Matrix> , que representa la transformación geométrica que asigna el rectángulo especificado por el `rect` parámetro en el paralelogramo definido por los tres puntos en el `plgpts` parámetro.</span><span class="sxs-lookup"><span data-stu-id="14cd8-144">This method initializes the new <xref:System.Drawing.Drawing2D.Matrix> such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="14cd8-145">La esquina superior izquierda del rectángulo se asigna al primer punto en el `plgpts` matriz, la esquina superior derecha se asigna al segundo punto y la esquina inferior izquierda se asigna al tercer punto.</span><span class="sxs-lookup"><span data-stu-id="14cd8-145">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="14cd8-146">El punto inferior derecha del paralelogramo está implícito en los tres primeros.</span><span class="sxs-lookup"><span data-stu-id="14cd8-146">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 m11, float32 m12, float32 m21, float32 m22, float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (m11 As Single, m12 As Single, m21 As Single, m22 As Single, dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : single * single * single * single * single * single -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (m11, m12, m21, m22, dx, dy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="m11" Type="System.Single" />
        <Parameter Name="m12" Type="System.Single" />
        <Parameter Name="m21" Type="System.Single" />
        <Parameter Name="m22" Type="System.Single" />
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="m11"><span data-ttu-id="14cd8-147">Valor de la primera fila y primera columna de la nueva <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-147">The value in the first row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="m12"><span data-ttu-id="14cd8-148">Valor de la primera fila y segunda columna de la nueva <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-148">The value in the first row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="m21"><span data-ttu-id="14cd8-149">Valor de la segunda fila y primera columna de la nueva <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-149">The value in the second row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="m22"><span data-ttu-id="14cd8-150">Valor de la segunda fila y segunda columna de la nueva <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-150">The value in the second row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="dx"><span data-ttu-id="14cd8-151">Valor de la tercera fila y primera columna de la nueva <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-151">The value in the third row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="dy"><span data-ttu-id="14cd8-152">Valor de la tercera fila y segunda columna de la nueva <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-152">The value in the third row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="14cd8-153">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.Matrix" /> con los elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="14cd8-153">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class with the specified elements.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.Matrix Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::Matrix ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Drawing.Drawing2D.Matrix" Usage="matrix.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14cd8-154">Crea una copia exacta de este objeto <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-154">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="14cd8-155">La <see cref="T:System.Drawing.Drawing2D.Matrix" /> que este método crea.</span><span class="sxs-lookup"><span data-stu-id="14cd8-155">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that this method creates.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="matrix.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14cd8-156">Libera todos los recursos utilizados por este <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-156">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cd8-157">Una llamada a `Dispose` permite que los recursos utilizados por este <xref:System.Drawing.Drawing2D.Matrix> objeto se asignen de nuevo para otros fines.</span><span class="sxs-lookup"><span data-stu-id="14cd8-157">Calling `Dispose` allows the resources used by this <xref:System.Drawing.Drawing2D.Matrix> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public float[] Elements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Elements" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.Elements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elements As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Elements { cli::array &lt;float&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Elements : single[]" Usage="System.Drawing.Drawing2D.Matrix.Elements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14cd8-158">Obtiene una matriz de valores numéricos de punto flotante que representa los elementos de esta <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-158">Gets an array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="14cd8-159">Matriz de valores numéricos de punto flotante que representa los elementos de esta <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-159">An array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cd8-160">Los elementos m11, m12, m21, m22, dx y dy de la <xref:System.Drawing.Drawing2D.Matrix> se representan mediante los valores de la matriz en ese orden.</span><span class="sxs-lookup"><span data-stu-id="14cd8-160">The elements m11, m12, m21, m22, dx, and dy of the <xref:System.Drawing.Drawing2D.Matrix> are represented by the values in the array in that order.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="matrix.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="14cd8-161">El objeto que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="14cd8-161">The object to test.</span></span></param>
        <summary><span data-ttu-id="14cd8-162">Comprueba si el objeto especificado es una <see cref="T:System.Drawing.Drawing2D.Matrix" /> y si es idéntico a esta <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-162">Tests whether the specified object is a <see cref="T:System.Drawing.Drawing2D.Matrix" /> and is identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="14cd8-163">Este método devuelve <see langword="true" /> si el parámetro <paramref name="obj" /> es la <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificada idéntica a esta <see cref="T:System.Drawing.Drawing2D.Matrix" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-163">This method returns <see langword="true" /> if <paramref name="obj" /> is the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Matrix ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="matrix.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14cd8-164">Permite que un objeto intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por la recolección de elementos no utilizados.</span><span class="sxs-lookup"><span data-stu-id="14cd8-164">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="matrix.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14cd8-165">Devuelve un código hash.</span><span class="sxs-lookup"><span data-stu-id="14cd8-165">Returns a hash code.</span></span></summary>
        <returns><span data-ttu-id="14cd8-166">Código hash de este <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-166">The hash code for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public void Invert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Invert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invert();" />
      <MemberSignature Language="F#" Value="member this.Invert : unit -&gt; unit" Usage="matrix.Invert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14cd8-167">Invierte esta <see cref="T:System.Drawing.Drawing2D.Matrix" />, si se puede invertir.</span><span class="sxs-lookup"><span data-stu-id="14cd8-167">Inverts this <see cref="T:System.Drawing.Drawing2D.Matrix" />, if it is invertible.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14cd8-168">En el ejemplo de código siguiente se crea una matriz y se invierte.</span><span class="sxs-lookup"><span data-stu-id="14cd8-168">The following code example creates a matrix and inverts it:</span></span>  
  
```csharp  
Matrix myMatrix = new Matrix(3, 5, 1, 2, 2, 4);  
 myMatrix.Invert();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIdentity : bool" Usage="System.Drawing.Drawing2D.Matrix.IsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14cd8-169">Obtiene un valor que indica si esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> es la matriz de identidad.</span><span class="sxs-lookup"><span data-stu-id="14cd8-169">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is the identity matrix.</span></span></summary>
        <value><span data-ttu-id="14cd8-170">Esta propiedad es <see langword="true" /> si este objeto <see cref="T:System.Drawing.Drawing2D.Matrix" /> es la matriz de identidad; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-170">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is identity; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvertible">
      <MemberSignature Language="C#" Value="public bool IsInvertible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvertible" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsInvertible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInvertible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInvertible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInvertible : bool" Usage="System.Drawing.Drawing2D.Matrix.IsInvertible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14cd8-171">Obtiene un valor que indica si la <see cref="T:System.Drawing.Drawing2D.Matrix" /> se puede invertir.</span><span class="sxs-lookup"><span data-stu-id="14cd8-171">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible.</span></span></summary>
        <value><span data-ttu-id="14cd8-172">Esta propiedad es <see langword="true" /> si este objeto <see cref="T:System.Drawing.Drawing2D.Matrix" /> se puede invertir; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-172">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Multiply">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14cd8-173">Multiplica esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> por la <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificada anteponiéndole la <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="14cd8-173">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Multiply : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="matrix.Multiply matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="14cd8-174">La <see cref="T:System.Drawing.Drawing2D.Matrix" /> por la que se va a multiplicar esta <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-174">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span></span></param>
        <summary><span data-ttu-id="14cd8-175">Multiplica esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> por la matriz especificada en el parámetro <paramref name="matrix" />, anteponiéndole la <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="14cd8-175">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14cd8-176">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>.</span><span class="sxs-lookup"><span data-stu-id="14cd8-176">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Multiply : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Multiply (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="14cd8-177">La <see cref="T:System.Drawing.Drawing2D.Matrix" /> por la que se va a multiplicar esta <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-177">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span></span></param>
        <param name="order"><span data-ttu-id="14cd8-178">El <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> que representa el orden de la multiplicación.</span><span class="sxs-lookup"><span data-stu-id="14cd8-178">The <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that represents the order of the multiplication.</span></span></param>
        <summary><span data-ttu-id="14cd8-179">Multiplica esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> por la matriz especificada en el parámetro <paramref name="matrix" /> y en el orden especificado en el parámetro <paramref name="order" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-179">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, and in the order specified in the <paramref name="order" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cd8-180">Si el orden especificado es <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>, este <xref:System.Drawing.Drawing2D.Matrix> se multiplica por la matriz especificada en un orden antepuesto.</span><span class="sxs-lookup"><span data-stu-id="14cd8-180">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in a prepended order.</span></span> <span data-ttu-id="14cd8-181">Si el orden especificado es <xref:System.Drawing.Drawing2D.MatrixOrder.Append>, este <xref:System.Drawing.Drawing2D.Matrix> se multiplica por la matriz especificada en un orden pospuesto.</span><span class="sxs-lookup"><span data-stu-id="14cd8-181">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Append>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in an appended order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14cd8-182">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="14cd8-182">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="14cd8-183">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="14cd8-183">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14cd8-184">Crea tres matrices.</span><span class="sxs-lookup"><span data-stu-id="14cd8-184">Creates three matrices.</span></span>  
  
-   <span data-ttu-id="14cd8-185">Enumera el contenido de la matriz de 1 a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="14cd8-185">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="14cd8-186">Multiplica la matriz 1 por la matriz 2 y almacena el resultado en la matriz 1.</span><span class="sxs-lookup"><span data-stu-id="14cd8-186">Multiplies matrix 1 by matrix 2 and stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="14cd8-187">Enumera el contenido de la matriz de 1 a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="14cd8-187">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="14cd8-188">Multiplica el resultado almacenado en la matriz 1 por la matriz 3 y vuelve a guardar el resultado en la matriz 1.</span><span class="sxs-lookup"><span data-stu-id="14cd8-188">Multiplies the result stored in matrix 1 by matrix 3, and again stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="14cd8-189">Enumera el contenido de la matriz de 1 a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="14cd8-189">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="14cd8-190">Dibuja un rectángulo en la pantalla antes de aplicar la transformación de matriz 1 (el rectángulo azul).</span><span class="sxs-lookup"><span data-stu-id="14cd8-190">Draws a rectangle to the screen prior to applying the matrix 1 transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="14cd8-191">Aplica la transformación al rectángulo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-191">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="14cd8-192">Dibuja el rectángulo transformado a la pantalla (rectángulo rojo), con las mismas coordenadas que el rectángulo anterior.</span><span class="sxs-lookup"><span data-stu-id="14cd8-192">Draws the transformed rectangle to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="14cd8-193">Tenga en cuenta que el rectángulo rojo se le ha ajustado por un factor de dos en dirección horizontal, a continuación, se gira 90 grados y después se mueve (convertido) 250 puntos en la dirección del eje x y 50 puntos en la dirección del eje y.</span><span class="sxs-lookup"><span data-stu-id="14cd8-193">Notice that the red rectangle has been scaled by a factor of two in the horizontal direction, then rotated 90 degrees, and then moved (translated) 250 points in the x direction and 50 points in the y direction.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetX">
      <MemberSignature Language="C#" Value="public float OffsetX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetX" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetX { float get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetX : single" Usage="System.Drawing.Drawing2D.Matrix.OffsetX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14cd8-194">Obtiene el valor de conversión x (el valor dx o el elemento de la tercera fila, primera columna) de esta <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-194">Gets the x translation value (the dx value, or the element in the third row and first column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="14cd8-195">Valor de conversión x de este objeto <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-195">The x translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetY">
      <MemberSignature Language="C#" Value="public float OffsetY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetY" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetY" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetY { float get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetY : single" Usage="System.Drawing.Drawing2D.Matrix.OffsetY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14cd8-196">Obtiene el valor de traducción y (el valor dy o el elemento de la tercera fila, segunda columna) de esta <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-196">Gets the y translation value (the dy value, or the element in the third row and second column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="14cd8-197">Valor de conversión y de este objeto <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-197">The y translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="matrix.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14cd8-198">Restablece esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> para que tenga los elementos de la matriz de identidad.</span><span class="sxs-lookup"><span data-stu-id="14cd8-198">Resets this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to have the elements of the identity matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cd8-199">Los elementos de la diagonal principal de la matriz de identidad son 1.</span><span class="sxs-lookup"><span data-stu-id="14cd8-199">The elements on the main diagonal of the identity matrix are 1.</span></span> <span data-ttu-id="14cd8-200">Todos los demás elementos de la matriz de identidad son 0.</span><span class="sxs-lookup"><span data-stu-id="14cd8-200">All other elements of the identity matrix are 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14cd8-201">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="14cd8-201">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="14cd8-202">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="14cd8-202">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14cd8-203">Crea una matriz de escala.</span><span class="sxs-lookup"><span data-stu-id="14cd8-203">Creates a scaling matrix.</span></span>  
  
-   <span data-ttu-id="14cd8-204">Enumera los elementos de matriz a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="14cd8-204">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="14cd8-205">Restablece la matriz de identidad.</span><span class="sxs-lookup"><span data-stu-id="14cd8-205">Resets the matrix to identity.</span></span>  
  
-   <span data-ttu-id="14cd8-206">Enumera los elementos a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="14cd8-206">Lists the elements to the screen.</span></span>  
  
-   <span data-ttu-id="14cd8-207">Convierte la matriz con 50 puntos en el eje x y 40 puntos en el eje y.</span><span class="sxs-lookup"><span data-stu-id="14cd8-207">Translates the matrix by 50 points in the x-axis and 40 points in the y-axis.</span></span>  
  
-   <span data-ttu-id="14cd8-208">Enumera los elementos de la matriz convertida a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="14cd8-208">Lists the elements of the translated matrix to the screen.</span></span>  
  
-   <span data-ttu-id="14cd8-209">Dibuja que un rectángulo se dibujará en la pantalla antes de aplicar la transformación de matriz (el rectángulo azul).</span><span class="sxs-lookup"><span data-stu-id="14cd8-209">Draws a rectangle is drawn to the screen prior to applying the matrix transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="14cd8-210">Aplica la transformación al rectángulo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-210">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="14cd8-211">Dibuja que el rectángulo transformado se dibuja en la pantalla (rectángulo rojo), con las mismas coordenadas que el rectángulo anterior.</span><span class="sxs-lookup"><span data-stu-id="14cd8-211">Draws the transformed rectangle is drawn to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="14cd8-212">Tenga en cuenta que el rectángulo rojo no se escaló (debido a la reset) pero se ha convertido en los ejes x y y.</span><span class="sxs-lookup"><span data-stu-id="14cd8-212">Notice that the red rectangle was not scaled (because of the reset) but was translated in the x-axis and y-axis.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rotate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14cd8-213">Aplica a esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> un giro del ángulo especificado y en el sentido de las agujas del reloj en torno al origen.</span><span class="sxs-lookup"><span data-stu-id="14cd8-213">Applies a clockwise rotation of the specified angle about the origin to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle);" />
      <MemberSignature Language="F#" Value="member this.Rotate : single -&gt; unit" Usage="matrix.Rotate angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="14cd8-214">Ángulo de rotación, en grados.</span><span class="sxs-lookup"><span data-stu-id="14cd8-214">The angle of the rotation, in degrees.</span></span></param>
        <summary><span data-ttu-id="14cd8-215">Antepone a esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> un giro en el sentido de las agujas del reloj, en torno al origen y del ángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="14cd8-215">Prepend to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> a clockwise rotation, around the origin and by the specified angle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14cd8-216">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span><span class="sxs-lookup"><span data-stu-id="14cd8-216">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Rotate : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Rotate (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="14cd8-217">Ángulo (alcance) de rotación, en grados.</span><span class="sxs-lookup"><span data-stu-id="14cd8-217">The angle (extent) of the rotation, in degrees.</span></span></param>
        <param name="order"><span data-ttu-id="14cd8-218">Un <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> que especifica el orden (agregar o anteponer) en el que se aplica el giro a esta <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-218">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="14cd8-219">Aplica a esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> un giro en el sentido de las agujas del reloj y en la cantidad especificada en el parámetro <paramref name="angle" />, en torno al origen (coordenadas x e y cero).</span><span class="sxs-lookup"><span data-stu-id="14cd8-219">Applies a clockwise rotation of an amount specified in the <paramref name="angle" /> parameter, around the origin (zero x and y coordinates) for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14cd8-220">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="14cd8-220">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="14cd8-221">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="14cd8-221">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14cd8-222">Dibuja un rectángulo en la pantalla antes de aplicar una transformación de giro (rectángulo azul).</span><span class="sxs-lookup"><span data-stu-id="14cd8-222">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="14cd8-223">Crea una matriz y lo gira 45 grados.</span><span class="sxs-lookup"><span data-stu-id="14cd8-223">Creates a matrix and rotates it 45 degrees.</span></span>  
  
-   <span data-ttu-id="14cd8-224">Se aplica esta transformación de matriz al rectángulo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-224">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="14cd8-225">Dibuja el rectángulo transformado en la pantalla (rectángulo rojo).</span><span class="sxs-lookup"><span data-stu-id="14cd8-225">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="14cd8-226">Tenga en cuenta que el rectángulo rojo se ha girado en torno a 0, 0 coordenadas de pantalla.</span><span class="sxs-lookup"><span data-stu-id="14cd8-226">Notice that the red rectangle has been rotated around the 0, 0 screen coordinates.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateAt">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14cd8-227">Aplica a esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> un giro en el sentido de las agujas del reloj en torno al punto especificado anteponiendo el giro.</span><span class="sxs-lookup"><span data-stu-id="14cd8-227">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the rotation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : single * System.Drawing.PointF -&gt; unit" Usage="matrix.RotateAt (angle, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="14cd8-228">Ángulo (alcance) de rotación, en grados.</span><span class="sxs-lookup"><span data-stu-id="14cd8-228">The angle (extent) of the rotation, in degrees.</span></span></param>
        <param name="point"><span data-ttu-id="14cd8-229"><see cref="T:System.Drawing.PointF" /> que representa el centro del giro.</span><span class="sxs-lookup"><span data-stu-id="14cd8-229">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span></span></param>
        <summary><span data-ttu-id="14cd8-230">Aplica a esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> un giro en el sentido de las agujas del reloj en torno al punto especificado en el parámetro <paramref name="point" />, anteponiendo el giro.</span><span class="sxs-lookup"><span data-stu-id="14cd8-230">Applies a clockwise rotation to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> around the point specified in the <paramref name="point" /> parameter, and by prepending the rotation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14cd8-231">En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.Drawing.Drawing2D.Matrix> y <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> método para girar una cadena.</span><span class="sxs-lookup"><span data-stu-id="14cd8-231">The following code example demonstrates using a <xref:System.Drawing.Drawing2D.Matrix> and the <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> method to rotate a string.</span></span> <span data-ttu-id="14cd8-232">En este ejemplo está diseñado para usarse con Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="14cd8-232">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="14cd8-233">Crear un formulario y pegue el código siguiente en él.</span><span class="sxs-lookup"><span data-stu-id="14cd8-233">Create a form and paste the following code into it.</span></span> <span data-ttu-id="14cd8-234">Llame a la `DrawVerticalStringFromBottomUp` método en el formulario <xref:System.Windows.Forms.Control.Paint> controlador de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="14cd8-234">Call the `DrawVerticalStringFromBottomUp` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.MiscExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.MiscExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.MiscExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : single * System.Drawing.PointF * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.RotateAt (angle, point, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="14cd8-235">Ángulo de rotación, en grados.</span><span class="sxs-lookup"><span data-stu-id="14cd8-235">The angle of the rotation, in degrees.</span></span></param>
        <param name="point"><span data-ttu-id="14cd8-236"><see cref="T:System.Drawing.PointF" /> que representa el centro del giro.</span><span class="sxs-lookup"><span data-stu-id="14cd8-236">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span></span></param>
        <param name="order"><span data-ttu-id="14cd8-237"><see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> que especifica el orden (agregar o anteponer) en que se aplica el giro.</span><span class="sxs-lookup"><span data-stu-id="14cd8-237">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied.</span></span></param>
        <summary><span data-ttu-id="14cd8-238">Aplica a esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> un giro en el sentido de las agujas del reloj en torno al punto especificado y en el orden especificado.</span><span class="sxs-lookup"><span data-stu-id="14cd8-238">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14cd8-239">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="14cd8-239">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="14cd8-240">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="14cd8-240">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14cd8-241">Dibuja un rectángulo en la pantalla antes de aplicar una transformación de giro (rectángulo azul).</span><span class="sxs-lookup"><span data-stu-id="14cd8-241">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="14cd8-242">Crea una matriz y lo gira 45 grados alrededor de un punto especificado.</span><span class="sxs-lookup"><span data-stu-id="14cd8-242">Creates a matrix and rotates it 45 degrees around a specified point.</span></span>  
  
-   <span data-ttu-id="14cd8-243">Se aplica a esta matriz es el rectángulo de transformación.</span><span class="sxs-lookup"><span data-stu-id="14cd8-243">Applies this matrix transform is to the rectangle.</span></span>  
  
-   <span data-ttu-id="14cd8-244">Dibuja el rectángulo transformado en la pantalla (rectángulo rojo).</span><span class="sxs-lookup"><span data-stu-id="14cd8-244">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="14cd8-245">Tenga en cuenta que el rectángulo rojo se ha girado en torno a la esquina superior izquierda del rectángulo (el punto de giro especificado el <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> método).</span><span class="sxs-lookup"><span data-stu-id="14cd8-245">Notice that the red rectangle has been rotated around the upper left-hand corner of the rectangle (the rotation point specified the <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> method).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Scale">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14cd8-246">Aplica el vector de escala especificado a esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> anteponiendo el vector de escala.</span><span class="sxs-lookup"><span data-stu-id="14cd8-246">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single -&gt; unit" Usage="matrix.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="14cd8-247">Valor por el que se va a ajustar el tamaño de <see cref="T:System.Drawing.Drawing2D.Matrix" /> en la dirección del eje x.</span><span class="sxs-lookup"><span data-stu-id="14cd8-247">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span></span></param>
        <param name="scaleY"><span data-ttu-id="14cd8-248">Valor por el que se va a ajustar el tamaño de <see cref="T:System.Drawing.Drawing2D.Matrix" /> en la dirección del eje y.</span><span class="sxs-lookup"><span data-stu-id="14cd8-248">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span></span></param>
        <summary><span data-ttu-id="14cd8-249">Aplica el vector de escala especificado a esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> anteponiendo el vector de escala.</span><span class="sxs-lookup"><span data-stu-id="14cd8-249">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14cd8-250">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span><span class="sxs-lookup"><span data-stu-id="14cd8-250">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Scale (scaleX, scaleY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="14cd8-251">Valor por el que se va a ajustar el tamaño de <see cref="T:System.Drawing.Drawing2D.Matrix" /> en la dirección del eje x.</span><span class="sxs-lookup"><span data-stu-id="14cd8-251">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span></span></param>
        <param name="scaleY"><span data-ttu-id="14cd8-252">Valor por el que se va a ajustar el tamaño de <see cref="T:System.Drawing.Drawing2D.Matrix" /> en la dirección del eje y.</span><span class="sxs-lookup"><span data-stu-id="14cd8-252">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span></span></param>
        <param name="order"><span data-ttu-id="14cd8-253"><see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> que especifica el orden (agregar o anteponer) en que se aplica el vector de escala a esta <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-253">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the scale vector is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="14cd8-254">Aplica el vector de escala especificado (<paramref name="scaleX" /> y <paramref name="scaleY" />) a esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> en el orden especificado.</span><span class="sxs-lookup"><span data-stu-id="14cd8-254">Applies the specified scale vector (<paramref name="scaleX" /> and <paramref name="scaleY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> using the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14cd8-255">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="14cd8-255">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="14cd8-256">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="14cd8-256">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14cd8-257">Dibuja un rectángulo en la pantalla antes de aplicar una transformación de escala (el rectángulo azul).</span><span class="sxs-lookup"><span data-stu-id="14cd8-257">Draws a rectangle to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="14cd8-258">Crea una matriz y lo escala por 3 en el eje x y 2 en el eje y.</span><span class="sxs-lookup"><span data-stu-id="14cd8-258">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="14cd8-259">Se aplica esta transformación de matriz al rectángulo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-259">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="14cd8-260">Dibuja el rectángulo transformado en la pantalla (rectángulo rojo).</span><span class="sxs-lookup"><span data-stu-id="14cd8-260">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="14cd8-261">Tenga en cuenta que el rectángulo rojo se le ha ajustado por un factor de 3 en el eje x y de 2 en el eje y, incluida la esquina superior izquierda del rectángulo (punto inicial del rectángulo).</span><span class="sxs-lookup"><span data-stu-id="14cd8-261">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Shear">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14cd8-262">Aplica el vector de recorte especificado a este objeto <see cref="T:System.Drawing.Drawing2D.Matrix" /> anteponiendo el vector de recorte.</span><span class="sxs-lookup"><span data-stu-id="14cd8-262">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear vector.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY);" />
      <MemberSignature Language="F#" Value="member this.Shear : single * single -&gt; unit" Usage="matrix.Shear (shearX, shearY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="shearX"><span data-ttu-id="14cd8-263">Factor de recorte horizontal.</span><span class="sxs-lookup"><span data-stu-id="14cd8-263">The horizontal shear factor.</span></span></param>
        <param name="shearY"><span data-ttu-id="14cd8-264">Factor de recorte vertical.</span><span class="sxs-lookup"><span data-stu-id="14cd8-264">The vertical shear factor.</span></span></param>
        <summary><span data-ttu-id="14cd8-265">Aplica el vector de recorte especificado a este objeto <see cref="T:System.Drawing.Drawing2D.Matrix" /> anteponiendo la transformación de recorte.</span><span class="sxs-lookup"><span data-stu-id="14cd8-265">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear transformation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cd8-266">La transformación aplicada en este método es un recorte puro sólo si uno de los parámetros es 0.</span><span class="sxs-lookup"><span data-stu-id="14cd8-266">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="14cd8-267">Aplicado a un rectángulo en el origen, cuando el `shearY` factor es 0, la transformación desplaza el borde inferior horizontalmente por `shearX` veces la altura del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-267">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="14cd8-268">Cuando el `shearX` factor es 0, mueve el borde derecho verticalmente `shearY` veces el ancho del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-268">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="14cd8-269">Precaución está en orden cuando ambos parámetros son distintos de cero, ya que son difíciles de predecir los resultados.</span><span class="sxs-lookup"><span data-stu-id="14cd8-269">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="14cd8-270">Por ejemplo, si ambos factores son 1, la transformación es singular (por lo tanto, invertible), es todo el plano en una sola línea.</span><span class="sxs-lookup"><span data-stu-id="14cd8-270">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14cd8-271">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="14cd8-271">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="14cd8-272">El código realiza la acción siguiente:</span><span class="sxs-lookup"><span data-stu-id="14cd8-272">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="14cd8-273">Dibuja un rectángulo en la pantalla, con un lápiz verde, antes de aplicar una transformación de escala.</span><span class="sxs-lookup"><span data-stu-id="14cd8-273">Draws a rectangle to the screen, using a green pen, prior to applying a scaling transform.</span></span>  
  
-   <span data-ttu-id="14cd8-274">Crea un <xref:System.Drawing.Drawing2D.Matrix> y lo usa para establecer una transformación de coordenadas para la <xref:System.Drawing.Graphics>.</span><span class="sxs-lookup"><span data-stu-id="14cd8-274">Creates a <xref:System.Drawing.Drawing2D.Matrix> and uses it to set a world-coordinate transform for the <xref:System.Drawing.Graphics>.</span></span>  
  
-   <span data-ttu-id="14cd8-275">Dibuja otro rectángulo con una pluma de color rojo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-275">Draws another rectangle using a red pen.</span></span>  
  
-   <span data-ttu-id="14cd8-276">Dibuja una elipse con un pincel azul.</span><span class="sxs-lookup"><span data-stu-id="14cd8-276">Draws an ellipse using a blue pen.</span></span>  
  
 <span data-ttu-id="14cd8-277">El resultado es un rectángulo verde, un paralelogramo rojo y una elipse azul transformada.</span><span class="sxs-lookup"><span data-stu-id="14cd8-277">The result is a green rectangle, a red parallelogram and a transformed, blue ellipse.</span></span> <span data-ttu-id="14cd8-278">Tenga en cuenta que el rectángulo verde (dibujado antes de establecer la transformación) usa directamente las coordenadas proporcionadas por la <xref:System.Drawing.Graphics.DrawRectangle%2A> llamar.</span><span class="sxs-lookup"><span data-stu-id="14cd8-278">Notice that the green rectangle (drawn prior to setting the transform) directly uses the coordinates supplied in the <xref:System.Drawing.Graphics.DrawRectangle%2A> call.</span></span> <span data-ttu-id="14cd8-279">Las dos figuras se transforman antes de dibujo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-279">The other two figures are transformed prior to drawing.</span></span> <span data-ttu-id="14cd8-280">El rectángulo se transforma en un paralelogramo (rojo) y la elipse (azul) se transforma para ajustarse en el paralelogramo transformado.</span><span class="sxs-lookup"><span data-stu-id="14cd8-280">The rectangle is transformed to a parallelogram (red), and the ellipse (blue) is transformed to fit into the transformed parallelogram.</span></span> <span data-ttu-id="14cd8-281">Tenga en cuenta que la parte inferior del rectángulo se mueve (recortada) en el eje x por un factor de dos veces el alto del rectángulo, por tanto, forman el paralelogramo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-281">Notice the bottom of the rectangle is moved (sheared) in the x-axis by a factor of two times the height of the rectangle, thus forming the parallelogram.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Shear : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Shear (shearX, shearY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="shearX"><span data-ttu-id="14cd8-282">Factor de recorte horizontal.</span><span class="sxs-lookup"><span data-stu-id="14cd8-282">The horizontal shear factor.</span></span></param>
        <param name="shearY"><span data-ttu-id="14cd8-283">Factor de recorte vertical.</span><span class="sxs-lookup"><span data-stu-id="14cd8-283">The vertical shear factor.</span></span></param>
        <param name="order"><span data-ttu-id="14cd8-284"><see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> que especifica el orden (agregar o anteponer) en que se aplica el recorte.</span><span class="sxs-lookup"><span data-stu-id="14cd8-284">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the shear is applied.</span></span></param>
        <summary><span data-ttu-id="14cd8-285">Aplica el vector de recorte especificado a esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> en el orden especificado.</span><span class="sxs-lookup"><span data-stu-id="14cd8-285">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cd8-286">La transformación aplicada en este método es un recorte puro sólo si uno de los parámetros es 0.</span><span class="sxs-lookup"><span data-stu-id="14cd8-286">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="14cd8-287">Aplicado a un rectángulo en el origen, cuando el `shearY` factor es 0, la transformación desplaza el borde inferior horizontalmente por `shearX` veces la altura del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-287">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="14cd8-288">Cuando el `shearX` factor es 0, mueve el borde derecho verticalmente `shearY` veces el ancho del rectángulo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-288">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="14cd8-289">Precaución está en orden cuando ambos parámetros son distintos de cero, ya que son difíciles de predecir los resultados.</span><span class="sxs-lookup"><span data-stu-id="14cd8-289">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="14cd8-290">Por ejemplo, si ambos factores son 1, la transformación es singular (por lo tanto, invertible), es todo el plano en una sola línea.</span><span class="sxs-lookup"><span data-stu-id="14cd8-290">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14cd8-291">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="14cd8-291">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformPoints">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14cd8-292">Aplica la transformación geométrica que representa esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> a una matriz de puntos.</span><span class="sxs-lookup"><span data-stu-id="14cd8-292">Applies the geometric transform this <see cref="T:System.Drawing.Drawing2D.Matrix" /> represents to an array of points.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.Point[] -&gt; unit" Usage="matrix.TransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="14cd8-293">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que se van a transformar.</span><span class="sxs-lookup"><span data-stu-id="14cd8-293">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="14cd8-294">Aplica la transformación geométrica que representa esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> a una matriz de puntos especificada.</span><span class="sxs-lookup"><span data-stu-id="14cd8-294">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14cd8-295">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="14cd8-295">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="14cd8-296">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="14cd8-296">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14cd8-297">Crea una matriz de puntos que forman un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-297">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="14cd8-298">Dibuja esta matriz de puntos (en la pantalla antes de aplicar una transformación de escala (el rectángulo azul).</span><span class="sxs-lookup"><span data-stu-id="14cd8-298">Draws this array of points (to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="14cd8-299">Crea una matriz y lo escala por 3 en el eje x y 2 en el eje y.</span><span class="sxs-lookup"><span data-stu-id="14cd8-299">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="14cd8-300">Se aplica esta transformación de matriz a la matriz de puntos.</span><span class="sxs-lookup"><span data-stu-id="14cd8-300">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="14cd8-301">Dibuja la matriz transformada en la pantalla (rectángulo rojo).</span><span class="sxs-lookup"><span data-stu-id="14cd8-301">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="14cd8-302">Tenga en cuenta que el rectángulo rojo se le ha ajustado por un factor de 3 en el eje x y de 2 en el eje y, incluida la esquina superior izquierda del rectángulo (punto inicial del rectángulo).</span><span class="sxs-lookup"><span data-stu-id="14cd8-302">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.PointF[] -&gt; unit" Usage="matrix.TransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="14cd8-303">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos que se van a transformar.</span><span class="sxs-lookup"><span data-stu-id="14cd8-303">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="14cd8-304">Aplica la transformación geométrica que representa esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> a una matriz de puntos especificada.</span><span class="sxs-lookup"><span data-stu-id="14cd8-304">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14cd8-305">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="14cd8-305">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformVectors">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14cd8-306">Multiplica cada vector de una matriz por la matriz.</span><span class="sxs-lookup"><span data-stu-id="14cd8-306">Multiplies each vector in an array by the matrix.</span></span> <span data-ttu-id="14cd8-307">Los elementos de conversión de esta matriz (tercera fila) se omiten.</span><span class="sxs-lookup"><span data-stu-id="14cd8-307">The translation elements of this matrix (third row) are ignored.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformVectors : System.Drawing.Point[] -&gt; unit" Usage="matrix.TransformVectors pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="14cd8-308">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que se van a transformar.</span><span class="sxs-lookup"><span data-stu-id="14cd8-308">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="14cd8-309">Aplica sólo los componentes de escala y giro de esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> a la matriz de puntos especificada.</span><span class="sxs-lookup"><span data-stu-id="14cd8-309">Applies only the scale and rotate components of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to the specified array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14cd8-310">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="14cd8-310">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="14cd8-311">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="14cd8-311">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14cd8-312">Crea una matriz de puntos que forman un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="14cd8-312">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="14cd8-313">Dibuja esta matriz de puntos en la pantalla antes de aplicar una transformación de escala (el rectángulo azul).</span><span class="sxs-lookup"><span data-stu-id="14cd8-313">Draws this array of points to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="14cd8-314">Crea una matriz de escala por 3 en el eje x y 2 en el eje y y lo traduce a 100 en ambos ejes.</span><span class="sxs-lookup"><span data-stu-id="14cd8-314">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis, and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="14cd8-315">Enumera los elementos de matriz a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="14cd8-315">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="14cd8-316">Se aplica esta transformación de matriz a la matriz de puntos.</span><span class="sxs-lookup"><span data-stu-id="14cd8-316">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="14cd8-317">Dibuja la matriz transformada en la pantalla (rectángulo rojo).</span><span class="sxs-lookup"><span data-stu-id="14cd8-317">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="14cd8-318">Tenga en cuenta que el rectángulo rojo se ha reducido por un factor de 3 en el eje x y de 2 en el eje y, incluida la esquina superior izquierda del rectángulo (punto inicial del rectángulo), pero se omite el vector de conversión (los dos últimos elementos de la matriz).</span><span class="sxs-lookup"><span data-stu-id="14cd8-318">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle) but the translation vector (the last two elements of the matrix) is ignored.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformVectors : System.Drawing.PointF[] -&gt; unit" Usage="matrix.TransformVectors pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="14cd8-319">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que se van a transformar.</span><span class="sxs-lookup"><span data-stu-id="14cd8-319">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="14cd8-320">Multiplica cada vector de una matriz por la matriz.</span><span class="sxs-lookup"><span data-stu-id="14cd8-320">Multiplies each vector in an array by the matrix.</span></span> <span data-ttu-id="14cd8-321">Los elementos de conversión de esta matriz (tercera fila) se omiten.</span><span class="sxs-lookup"><span data-stu-id="14cd8-321">The translation elements of this matrix (third row) are ignored.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14cd8-322">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="14cd8-322">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14cd8-323">Aplica el vector de conversión especificado a esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> anteponiendo el vector de conversión.</span><span class="sxs-lookup"><span data-stu-id="14cd8-323">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY);" />
      <MemberSignature Language="F#" Value="member this.Translate : single * single -&gt; unit" Usage="matrix.Translate (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="14cd8-324">Valor x por el que se va a convertir este objeto <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-324">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="offsetY"><span data-ttu-id="14cd8-325">Valor y por el que se va a convertir este objeto <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-325">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="14cd8-326">Aplica el vector de conversión especificado (<paramref name="offsetX" /> y <paramref name="offsetY" />) a esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> anteponiendo el vector de conversión.</span><span class="sxs-lookup"><span data-stu-id="14cd8-326">Applies the specified translation vector (<paramref name="offsetX" /> and <paramref name="offsetY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14cd8-327">Para obtener un ejemplo, consulte <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span><span class="sxs-lookup"><span data-stu-id="14cd8-327">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Translate : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Translate (offsetX, offsetY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="14cd8-328">Valor x por el que se va a convertir este objeto <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-328">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="offsetY"><span data-ttu-id="14cd8-329">Valor y por el que se va a convertir este objeto <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-329">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="order"><span data-ttu-id="14cd8-330">Un <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> que especifica el orden (agregar o anteponer) en el que se aplica la conversión a esta <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="14cd8-330">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the translation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="14cd8-331">Aplica el vector de conversión especificado a esta <see cref="T:System.Drawing.Drawing2D.Matrix" /> en el orden especificado.</span><span class="sxs-lookup"><span data-stu-id="14cd8-331">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14cd8-332">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="14cd8-332">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="14cd8-333">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="14cd8-333">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="14cd8-334">Dibuja un rectángulo en la pantalla antes de aplicar una transformación de traslación (el rectángulo azul).</span><span class="sxs-lookup"><span data-stu-id="14cd8-334">Draws a rectangle to the screen prior to applying a translate transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="14cd8-335">Crea una matriz y lo traduce a 100 en ambos ejes.</span><span class="sxs-lookup"><span data-stu-id="14cd8-335">Creates a matrix and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="14cd8-336">Se aplica esta transformación de matriz al rectángulo</span><span class="sxs-lookup"><span data-stu-id="14cd8-336">Applies this matrix transform to the rectangle,</span></span>  
  
-   <span data-ttu-id="14cd8-337">Dibuja el rectángulo transformado en la pantalla (rectángulo rojo).</span><span class="sxs-lookup"><span data-stu-id="14cd8-337">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="14cd8-338">Observe que el principio del rectángulo rojo se encuentra a 100 puntos en los dos ejes desde el principio del triángulo azul.</span><span class="sxs-lookup"><span data-stu-id="14cd8-338">Notice that the beginning of the red rectangle is located 100 points in both axes from the beginning of the blue triangle.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTransformPoints">
      <MemberSignature Language="C#" Value="public void VectorTransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VectorTransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub VectorTransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VectorTransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.VectorTransformPoints : System.Drawing.Point[] -&gt; unit" Usage="matrix.VectorTransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="14cd8-339">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que se van a transformar.</span><span class="sxs-lookup"><span data-stu-id="14cd8-339">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="14cd8-340">Multiplica cada vector de una matriz por la matriz.</span><span class="sxs-lookup"><span data-stu-id="14cd8-340">Multiplies each vector in an array by the matrix.</span></span> <span data-ttu-id="14cd8-341">Los elementos de conversión de esta matriz (tercera fila) se omiten.</span><span class="sxs-lookup"><span data-stu-id="14cd8-341">The translation elements of this matrix (third row) are ignored.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
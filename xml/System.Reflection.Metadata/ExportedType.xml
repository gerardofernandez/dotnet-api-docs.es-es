<Type Name="ExportedType" FullName="System.Reflection.Metadata.ExportedType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f70207dd8fd767cd52c71c1c53ee8807ee469f9d" /><Meta Name="ms.sourcegitcommit" Value="7555c040bd7cb677d117ddf03e647aa7bf625bfc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/08/2019" /><Meta Name="ms.locfileid" Value="65440018" /></Metadata><TypeSignature Language="C#" Value="public struct ExportedType" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ExportedType extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.ExportedType" />
  <TypeSignature Language="VB.NET" Value="Public Structure ExportedType" />
  <TypeSignature Language="C++ CLI" Value="public value class ExportedType" />
  <TypeSignature Language="F#" Value="type ExportedType = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.0.22.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.TypeAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.TypeAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.ExportedType.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As TypeAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::TypeAttributes Attributes { System::Reflection::TypeAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.TypeAttributes" Usage="System.Reflection.Metadata.ExportedType.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.CustomAttributeHandleCollection GetCustomAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.CustomAttributeHandleCollection GetCustomAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.ExportedType.GetCustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes () As CustomAttributeHandleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::CustomAttributeHandleCollection GetCustomAttributes();" />
      <MemberSignature Language="F#" Value="member this.GetCustomAttributes : unit -&gt; System.Reflection.Metadata.CustomAttributeHandleCollection" Usage="exportedType.GetCustomAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.CustomAttributeHandleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.EntityHandle Implementation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.EntityHandle Implementation" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.ExportedType.Implementation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Implementation As EntityHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::EntityHandle Implementation { System::Reflection::Metadata::EntityHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.Implementation : System.Reflection.Metadata.EntityHandle" Usage="System.Reflection.Metadata.ExportedType.Implementation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.EntityHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ba11-101">Obtiene un identificador para resolver la implementación del tipo de destino.</span><span class="sxs-lookup"><span data-stu-id="7ba11-101">Gets a handle to resolve the implementation of the target type.</span></span></summary>
        <value><list type="bullet">
            <item>
              <description><span data-ttu-id="7ba11-102">
                <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" /> que representa otro módulo del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7ba11-102">
                <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" /> representing another module in the assembly.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="7ba11-103">
                <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" /> que representa otro ensamblado si <see cref="P:System.Reflection.Metadata.ExportedType.IsForwarder" /> es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="7ba11-103">
                <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" /> representing another assembly if <see cref="P:System.Reflection.Metadata.ExportedType.IsForwarder" /> is <see langword="true" />.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="7ba11-104">
                <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" /> que representa el tipo exportado declarativo en los que esto era está anidado.</span><span class="sxs-lookup"><span data-stu-id="7ba11-104">
                <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" /> representing the declaring exported type in which this was is nested.</span></span></description>
            </item>
          </list></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsForwarder">
      <MemberSignature Language="C#" Value="public bool IsForwarder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForwarder" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.ExportedType.IsForwarder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsForwarder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsForwarder { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsForwarder : bool" Usage="System.Reflection.Metadata.ExportedType.IsForwarder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StringHandle Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.StringHandle Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.ExportedType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As StringHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::StringHandle Name { System::Reflection::Metadata::StringHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : System.Reflection.Metadata.StringHandle" Usage="System.Reflection.Metadata.ExportedType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StringHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ba11-105">Obtiene el nombre del tipo de destino, o <see langword="default" /> si el tipo es anidado o definido en un espacio de nombres raíz.</span><span class="sxs-lookup"><span data-stu-id="7ba11-105">Gets the name of the target type, or <see langword="default" /> if the type is nested or defined in a root namespace.</span></span></summary>
        <value><span data-ttu-id="7ba11-106">Un <see cref="T:System.Reflection.Metadata.StringHandle" /> instancia de struct.</span><span class="sxs-lookup"><span data-stu-id="7ba11-106">A <see cref="T:System.Reflection.Metadata.StringHandle" /> struct instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StringHandle Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.StringHandle Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.ExportedType.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespace As StringHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::StringHandle Namespace { System::Reflection::Metadata::StringHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : System.Reflection.Metadata.StringHandle" Usage="System.Reflection.Metadata.ExportedType.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StringHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ba11-107">Obtiene el nombre completo del espacio de nombres que contiene el tipo de destino, o <see langword="default" /> si el tipo es anidado o definido en un espacio de nombres raíz.</span><span class="sxs-lookup"><span data-stu-id="7ba11-107">Gets the full name of the namespace that contains the target type, or <see langword="default" /> if the type is nested or defined in a root namespace.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceDefinition">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.NamespaceDefinitionHandle NamespaceDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.NamespaceDefinitionHandle NamespaceDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.ExportedType.NamespaceDefinition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamespaceDefinition As NamespaceDefinitionHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::NamespaceDefinitionHandle NamespaceDefinition { System::Reflection::Metadata::NamespaceDefinitionHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceDefinition : System.Reflection.Metadata.NamespaceDefinitionHandle" Usage="System.Reflection.Metadata.ExportedType.NamespaceDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.NamespaceDefinitionHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ba11-108">Obtiene el identificador de la definición del espacio de nombres donde se define el tipo de destino, o <see langword="default" /> si el tipo es anidado o definido en un espacio de nombres raíz.</span><span class="sxs-lookup"><span data-stu-id="7ba11-108">Gets the definition handle of the namespace where the target type is defined, or <see langword="default" /> if the type is nested or defined in a root namespace.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

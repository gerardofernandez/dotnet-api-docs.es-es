<Type Name="SqlColumnEncryptionKeyStoreProvider" FullName="System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="52f8ffde38235f63ff0a0ad0131f2d809b2bcb3a" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51938607" /></Metadata><TypeSignature Language="C#" Value="public abstract class SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SqlColumnEncryptionKeyStoreProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SqlColumnEncryptionKeyStoreProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlColumnEncryptionKeyStoreProvider abstract" />
  <TypeSignature Language="F#" Value="type SqlColumnEncryptionKeyStoreProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="82730-101">Clase base para todos los proveedores de almacén de claves.</span><span class="sxs-lookup"><span data-stu-id="82730-101">Base class for all key store providers.</span></span> <span data-ttu-id="82730-102">Un proveedor personalizado debe derivar de esta clase y reemplazar sus funciones miembro y, a continuación, registrarla mediante SqlConnection.RegisterColumnEncryptionKeyStoreProviders().</span><span class="sxs-lookup"><span data-stu-id="82730-102">A custom provider must derive from this class and override its member functions and then register it using SqlConnection.RegisterColumnEncryptionKeyStoreProviders().</span></span> <span data-ttu-id="82730-103">Para obtener más información, vea <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.</span><span class="sxs-lookup"><span data-stu-id="82730-103">For details see, <see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">Always Encrypted</see>.</span></span></summary>
    <remarks>To be added.</remarks>
    <related type="ExternalDocumentation" href="https://blogs.msdn.com/b/sqlsecurity/archive/tags/always+encrypted/"><span data-ttu-id="82730-104">Blog de Always Encrypted</span><span class="sxs-lookup"><span data-stu-id="82730-104">Always Encrypted Blog</span></span></related>
    <related type="ExternalDocumentation" href="/sql/relational-databases/security/encryption/always-encrypted-client-development"><span data-ttu-id="82730-105">Always Encrypted (desarrollo de cliente)</span><span class="sxs-lookup"><span data-stu-id="82730-105">Always Encrypted (client development)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlColumnEncryptionKeyStoreProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SqlColumnEncryptionKeyStoreProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82730-106">Inicializa una nueva instancia de SqlColumnEncryptionKeyStoreProviderClass.</span><span class="sxs-lookup"><span data-stu-id="82730-106">Initializes a new instance of the SqlColumnEncryptionKeyStoreProviderClass.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public abstract byte[] DecryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] encryptedColumnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] encryptedColumnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DecryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, encryptedColumnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ DecryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ encryptedColumnEncryptionKey);" />
      <MemberSignature Language="F#" Value="abstract member DecryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionKeyStoreProvider.DecryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, encryptedColumnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="encryptedColumnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="82730-107">Ruta de acceso de la clave maestra.</span><span class="sxs-lookup"><span data-stu-id="82730-107">The master key path.</span></span></param>
        <param name="encryptionAlgorithm"><span data-ttu-id="82730-108">Algoritmo de cifrado.</span><span class="sxs-lookup"><span data-stu-id="82730-108">The encryption algorithm.</span></span></param>
        <param name="encryptedColumnEncryptionKey"><span data-ttu-id="82730-109">Clave de cifrado de la columna cifrada.</span><span class="sxs-lookup"><span data-stu-id="82730-109">The encrypted column encryption key.</span></span></param>
        <summary><span data-ttu-id="82730-110">Descifra el valor cifrado especificado de la clave de cifrado de una columna.</span><span class="sxs-lookup"><span data-stu-id="82730-110">Decrypts the specified encrypted value of a column encryption key.</span></span> <span data-ttu-id="82730-111">Se espera que el valor cifrado se cifre mediante la clave maestra de columna con la ruta de acceso de clave especificada y mediante el algoritmo especificado.</span><span class="sxs-lookup"><span data-stu-id="82730-111">The encrypted value is expected to be encrypted using the column master key with the specified key path and using the specified algorithm.</span></span></summary>
        <returns><span data-ttu-id="82730-112">Devuelve <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="82730-112">Returns <see cref="T:System.Byte" />.</span></span>   
<span data-ttu-id="82730-113">Clave de cifrado de la columna descifrada.</span><span class="sxs-lookup"><span data-stu-id="82730-113">The decrypted column encryption key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptColumnEncryptionKey">
      <MemberSignature Language="C#" Value="public abstract byte[] EncryptColumnEncryptionKey (string masterKeyPath, string encryptionAlgorithm, byte[] columnEncryptionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, unsigned int8[] columnEncryptionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EncryptColumnEncryptionKey (masterKeyPath As String, encryptionAlgorithm As String, columnEncryptionKey As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ EncryptColumnEncryptionKey(System::String ^ masterKeyPath, System::String ^ encryptionAlgorithm, cli::array &lt;System::Byte&gt; ^ columnEncryptionKey);" />
      <MemberSignature Language="F#" Value="abstract member EncryptColumnEncryptionKey : string * string * byte[] -&gt; byte[]" Usage="sqlColumnEncryptionKeyStoreProvider.EncryptColumnEncryptionKey (masterKeyPath, encryptionAlgorithm, columnEncryptionKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
        <Parameter Name="columnEncryptionKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="82730-114">Ruta de acceso de la clave maestra.</span><span class="sxs-lookup"><span data-stu-id="82730-114">The master key path.</span></span></param>
        <param name="encryptionAlgorithm"><span data-ttu-id="82730-115">Algoritmo de cifrado.</span><span class="sxs-lookup"><span data-stu-id="82730-115">The encryption algorithm.</span></span></param>
        <param name="columnEncryptionKey"><span data-ttu-id="82730-116">Clave de cifrado de la columna cifrada.</span><span class="sxs-lookup"><span data-stu-id="82730-116">The encrypted column encryption key.</span></span></param>
        <summary><span data-ttu-id="82730-117">Cifra una clave de cifrado de una columna usando la clave maestra de columna con la ruta de acceso de clave especificada y usando el algoritmo especificado.</span><span class="sxs-lookup"><span data-stu-id="82730-117">Encrypts a column encryption key using the column master key with the specified key path and using the specified algorithm.</span></span></summary>
        <returns><span data-ttu-id="82730-118">Devuelve <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="82730-118">Returns <see cref="T:System.Byte" />.</span></span>   
<span data-ttu-id="82730-119">Clave de cifrado de la columna cifrada.</span><span class="sxs-lookup"><span data-stu-id="82730-119">The encrypted column encryption key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public virtual byte[] SignColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] SignColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ SignColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations);" />
      <MemberSignature Language="F#" Value="abstract member SignColumnMasterKeyMetadata : string * bool -&gt; byte[]&#xA;override this.SignColumnMasterKeyMetadata : string * bool -&gt; byte[]" Usage="sqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="82730-120">Ruta de acceso de la clave maestra de columna.</span><span class="sxs-lookup"><span data-stu-id="82730-120">The column master key path.</span></span></param>
        <param name="allowEnclaveComputations"><span data-ttu-id="82730-121"><see langword="true" /> para indicar que la clave maestra de columna admite los cálculos de enclave; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="82730-121"><see langword="true" /> to indicate that the column master key supports enclave computations; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="82730-122">Cuando se implementa en una clase derivada, firma digitalmente los metadatos de la clave maestra de columna con la clave maestra de columna a la que hace referencia el parámetro <paramref name="masterKeyPath" />.</span><span class="sxs-lookup"><span data-stu-id="82730-122">When implemented in a derived class, digitally signs the column master key metadata with the column master key referenced by the <paramref name="masterKeyPath" /> parameter.</span></span> <span data-ttu-id="82730-123">Los valores de entrada usados para generar la firma deben ser los valores especificados de los parámetros <paramref name="masterKeyPath" /> y <paramref name="allowEnclaveComputations" />.</span><span class="sxs-lookup"><span data-stu-id="82730-123">The input values used to generate the signature should be the specified values of the <paramref name="masterKeyPath" /> and <paramref name="allowEnclaveComputations" /> parameters.</span></span></summary>
        <returns><span data-ttu-id="82730-124">Firma de los metadatos de la clave maestra de columna.</span><span class="sxs-lookup"><span data-stu-id="82730-124">The signature of the column master key metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82730-125">Para asegurarse de que el <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> método no interrumpe las aplicaciones que dependen de una API antigua, se produce un <xref:System.NotImplementedException> excepción de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="82730-125">To ensure that the <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> method doesn't break applications that rely on an old API, it throws a <xref:System.NotImplementedException> exception by default.</span></span>  
  
 <span data-ttu-id="82730-126">El <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> método se utilizará las herramientas de cliente que generan las claves maestras de columna (CMK) para los clientes.</span><span class="sxs-lookup"><span data-stu-id="82730-126">The <xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> method will be used by client tools that generate Column Master Keys (CMK) for customers.</span></span> <span data-ttu-id="82730-127"><xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> debe ser implementada por los proveedores de almacén de claves correspondientes que desee usar con los enclaves [Always Encrypted](https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span><span class="sxs-lookup"><span data-stu-id="82730-127"><xref:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.SignColumnMasterKeyMetadata%2A> must be implemented by the corresponding key store providers that wish to use enclaves with [Always Encrypted](https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="82730-128">En todos los casos.</span><span class="sxs-lookup"><span data-stu-id="82730-128">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyColumnMasterKeyMetadata">
      <MemberSignature Language="C#" Value="public virtual bool VerifyColumnMasterKeyMetadata (string masterKeyPath, bool allowEnclaveComputations, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifyColumnMasterKeyMetadata(string masterKeyPath, bool allowEnclaveComputations, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider.VerifyColumnMasterKeyMetadata(System.String,System.Boolean,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyColumnMasterKeyMetadata (masterKeyPath As String, allowEnclaveComputations As Boolean, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifyColumnMasterKeyMetadata(System::String ^ masterKeyPath, bool allowEnclaveComputations, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="abstract member VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool&#xA;override this.VerifyColumnMasterKeyMetadata : string * bool * byte[] -&gt; bool" Usage="sqlColumnEncryptionKeyStoreProvider.VerifyColumnMasterKeyMetadata (masterKeyPath, allowEnclaveComputations, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="masterKeyPath" Type="System.String" />
        <Parameter Name="allowEnclaveComputations" Type="System.Boolean" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="masterKeyPath"><span data-ttu-id="82730-129">Ruta de acceso de la clave maestra de columna.</span><span class="sxs-lookup"><span data-stu-id="82730-129">The column master key path.</span></span></param>
        <param name="allowEnclaveComputations"><span data-ttu-id="82730-130">Indica si la clave maestra de columna admite los cálculos de enclave.</span><span class="sxs-lookup"><span data-stu-id="82730-130">Indicates whether the column master key supports enclave computations.</span></span></param>
        <param name="signature"><span data-ttu-id="82730-131">Firma de los metadatos de la clave maestra de columna.</span><span class="sxs-lookup"><span data-stu-id="82730-131">The signature of the column master key metadata.</span></span></param>
        <summary><span data-ttu-id="82730-132">Cuando se implementa en una clase derivada, se espera que este método compruebe que la firma especificada es válida para la clave maestra de columna con la ruta de acceso de la clave y el comportamiento de enclave especificados.</span><span class="sxs-lookup"><span data-stu-id="82730-132">When implemented in a derived class, this method is expected to verify the specified signature is valid for the column master key with the specified key path and the specified enclave behavior.</span></span> <span data-ttu-id="82730-133">La implementación predeterminada genera la excepción NotImplementedException.</span><span class="sxs-lookup"><span data-stu-id="82730-133">The default implementation throws NotImplementedException.</span></span></summary>
        <returns><span data-ttu-id="82730-134">Cuando se implementa en una clase derivada, se espera que el método devuelva true si la firma especificada es válida o false si la firma especificada no es válida.</span><span class="sxs-lookup"><span data-stu-id="82730-134">When implemented in a derived class, the method is expected to return true if the specified signature is valid, or false if the specified signature is not valid.</span></span> <span data-ttu-id="82730-135">La implementación predeterminada genera la excepción NotImplementedException.</span><span class="sxs-lookup"><span data-stu-id="82730-135">The default implementation throws NotImplementedException.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
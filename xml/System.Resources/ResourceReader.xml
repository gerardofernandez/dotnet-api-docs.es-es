<Type Name="ResourceReader" FullName="System.Resources.ResourceReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="832e37192b3ed0725638e849f2a7f8d0cc3d2129" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57939337" /></Metadata><TypeSignature Language="C#" Value="public sealed class ResourceReader : System.Resources.IResourceReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceReader extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable, class System.Resources.IResourceReader" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceReader&#xA;Implements IResourceReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceReader sealed : System::Resources::IResourceReader" />
  <TypeSignature Language="F#" Value="type ResourceReader = class&#xA;    interface IResourceReader&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.Reader</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Resources.IResourceReader</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b4571-101">Enumera los recursos en un archivo binario de recursos (.resources) leyendo pares secuenciales de nombre/valor del recurso.</span><span class="sxs-lookup"><span data-stu-id="b4571-101">Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="b4571-102">El <xref:System.Resources.ResourceReader> clase proporciona una implementación estándar de la <xref:System.Resources.IResourceReader> interfaz.</span><span class="sxs-lookup"><span data-stu-id="b4571-102">The <xref:System.Resources.ResourceReader> class provides a standard implementation of the <xref:System.Resources.IResourceReader> interface.</span></span> <span data-ttu-id="b4571-103">Un <xref:System.Resources.ResourceReader> instancia representa un archivo .resources independiente o un archivo .resources incrustado en un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="b4571-103">A <xref:System.Resources.ResourceReader> instance represents either a standalone .resources file or a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="b4571-104">Sirve para enumerar los recursos en un archivo .resources y recuperar sus pares nombre/valor.</span><span class="sxs-lookup"><span data-stu-id="b4571-104">It is used to enumerate the resources in a .resources file and retrieve its name/value pairs.</span></span> <span data-ttu-id="b4571-105">Difiere de la <xref:System.Resources.ResourceManager> (clase), que se usa para recuperar recursos con nombre especificados de un archivo .resources incrustado en un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="b4571-105">It differs from the <xref:System.Resources.ResourceManager> class, which is used to retrieve specified named resources from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="b4571-106">El <xref:System.Resources.ResourceManager> clase se utiliza para recuperar recursos cuyos nombres se conocen de antemano, mientras que la <xref:System.Resources.ResourceReader> clase es útil para recuperar los recursos cuyo número o los nombres exactos no se conocen en tiempo de compilación.</span><span class="sxs-lookup"><span data-stu-id="b4571-106">The <xref:System.Resources.ResourceManager> class is used to retrieve resources whose names are known in advance, whereas the <xref:System.Resources.ResourceReader> class is useful for retrieving resources whose number or precise names are not known at compile time.</span></span> <span data-ttu-id="b4571-107">Por ejemplo, una aplicación puede utilizar un archivo de recursos para almacenar información de configuración que se organiza en secciones y los elementos de una sección, donde el número de secciones o elementos en una sección no se conoce de antemano.</span><span class="sxs-lookup"><span data-stu-id="b4571-107">For example, an application may use a resources file to store configuration information that is organized into sections and items in a section, where the number of sections or items in a section is not known in advance.</span></span> <span data-ttu-id="b4571-108">Los recursos, a continuación, se pueden denominar genéricamente (como `Section1`, `Section1Item1`, `Section1Item2`, etc.) y recuperar usando un <xref:System.Resources.ResourceReader> objeto.</span><span class="sxs-lookup"><span data-stu-id="b4571-108">Resources can then be named generically (such as `Section1`, `Section1Item1`, `Section1Item2`, and so on) and retrieved by using a <xref:System.Resources.ResourceReader> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4571-109">Este tipo implementa la <xref:System.IDisposable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="b4571-109">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="b4571-110">Cuando haya terminado de utilizar el tipo, debe deshacerse de él directa o indirectamente.</span><span class="sxs-lookup"><span data-stu-id="b4571-110">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="b4571-111">Para deshacerse del tipo directamente, llame a su <xref:System.IDisposable.Dispose%2A> método en un `try` / `catch` bloque.</span><span class="sxs-lookup"><span data-stu-id="b4571-111">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="b4571-112">Para deshacerse de él, indirectamente, usar una construcción de lenguaje, como `using` (en C#) o `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="b4571-112">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="b4571-113">Para obtener más información, vea la sección "Uso de un objeto que implementa IDisposable" en el <xref:System.IDisposable> tema de la interfaz.</span><span class="sxs-lookup"><span data-stu-id="b4571-113">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="b4571-114">Para obtener más información sobre el uso de la <xref:System.Resources.ResourceReader> de clases, vea las secciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="b4571-114">For more information about using the <xref:System.Resources.ResourceReader> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="b4571-115">Instancias de un objeto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="b4571-115">Instantiating a ResourceReader object</span></span>](#instantiate)  
  
-   [<span data-ttu-id="b4571-116">Enumerar los recursos de un objeto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="b4571-116">Enumerating a ResourceReader object's resources</span></span>](#enumerate)  
  
    -   [<span data-ttu-id="b4571-117">Recuperar los recursos mediante propiedades IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="b4571-117">Retrieving resources by using IDictionaryEnumerator properties</span></span>](#idictionaryenumerator)  
  
    -   [<span data-ttu-id="b4571-118">Recuperar recursos por nombre con GetResourceData</span><span class="sxs-lookup"><span data-stu-id="b4571-118">Retrieving resources by name with GetResourceData</span></span>](#getresourcedata)  
  
<a name="instantiate"></a>   
## <a name="instantiating-a-resourcereader-object"></a><span data-ttu-id="b4571-119">Instancias de un objeto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="b4571-119">Instantiating a ResourceReader Object</span></span>  
 <span data-ttu-id="b4571-120">Un archivo .resources es un archivo binario que se ha compilado desde un archivo de texto o un archivo .resx XML por [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span><span class="sxs-lookup"><span data-stu-id="b4571-120">A .resources file is a binary file that has been compiled from either a text file or an XML .resx file by [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span></span> <span data-ttu-id="b4571-121">Un <xref:System.Resources.ResourceReader> objeto puede representar un archivo .resources independiente o un archivo .resources que se ha incrustado en un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="b4571-121">A <xref:System.Resources.ResourceReader> object can represent either a standalone .resources file or a .resources file that has been embedded in an assembly.</span></span>  
  
 <span data-ttu-id="b4571-122">Para crear instancias de un <xref:System.Resources.ResourceReader> objeto que lee un archivo .resources independiente, use el <xref:System.Resources.ResourceReader> constructor de clase con un flujo de entrada o una cadena que contiene el nombre del archivo .resources.</span><span class="sxs-lookup"><span data-stu-id="b4571-122">To instantiate a <xref:System.Resources.ResourceReader> object that reads from a standalone .resources file, use the <xref:System.Resources.ResourceReader> class constructor with either an input stream or a string that contains the .resources file name.</span></span> <span data-ttu-id="b4571-123">El ejemplo siguiente muestra ambos enfoques.</span><span class="sxs-lookup"><span data-stu-id="b4571-123">The following example illustrates both approaches.</span></span> <span data-ttu-id="b4571-124">Crea una instancia de la primera una <xref:System.Resources.ResourceReader> objeto que representa un archivo .resources denominado `Resources1.resources` mediante su nombre de archivo.</span><span class="sxs-lookup"><span data-stu-id="b4571-124">The first instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources1.resources` by using its file name.</span></span> <span data-ttu-id="b4571-125">Crea una instancia de la segunda una <xref:System.Resources.ResourceReader> objeto que representa un archivo .resources denominado `Resources2.resources` mediante el uso de un flujo creado a partir del archivo.</span><span class="sxs-lookup"><span data-stu-id="b4571-125">The second instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources2.resources` by using a stream created from the file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#2)]  
  
 <span data-ttu-id="b4571-126">Para crear un <xref:System.Resources.ResourceReader> crear una instancia de objeto que representa un archivo .resources incrustado, un <xref:System.Reflection.Assembly> objeto desde el ensamblado en el que se incrusta el archivo. Resources.</span><span class="sxs-lookup"><span data-stu-id="b4571-126">To create a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file, instantiate an <xref:System.Reflection.Assembly> object from the assembly in which the .resources file is embedded.</span></span> <span data-ttu-id="b4571-127">Su <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> método devuelve un <xref:System.IO.Stream> objeto que puede pasarse a la <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="b4571-127">Its <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method returns a <xref:System.IO.Stream> object that can be passed to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="b4571-128">El ejemplo siguiente crea un <xref:System.Resources.ResourceReader> objeto que representa un archivo .resources incrustado.</span><span class="sxs-lookup"><span data-stu-id="b4571-128">The following example instantiates a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#3)]
 [!code-vb[System.Resources.ResourceReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#3)]  
  
<a name="enumerate"></a>   
## <a name="enumerating-a-resourcereader-objects-resources"></a><span data-ttu-id="b4571-129">Enumerar los recursos de un objeto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="b4571-129">Enumerating a ResourceReader Object's Resources</span></span>  
 <span data-ttu-id="b4571-130">Para enumerar los recursos en un archivo .resources, llame a la <xref:System.Resources.ResourceReader.GetEnumerator%2A> método, que devuelve un <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> objeto.</span><span class="sxs-lookup"><span data-stu-id="b4571-130">To enumerate the resources in a .resources file, you call the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method, which returns an <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="b4571-131">Se llama a la `IDictionaryEnumerator.MoveNext` método para mover de un recurso a la siguiente.</span><span class="sxs-lookup"><span data-stu-id="b4571-131">You call the `IDictionaryEnumerator.MoveNext` method to move from one resource to the next.</span></span> <span data-ttu-id="b4571-132">El método devuelve `false` cuando se han enumerado todos los recursos en el archivo. Resources.</span><span class="sxs-lookup"><span data-stu-id="b4571-132">The method returns `false` when all the resources in the .resources file have been enumerated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4571-133">Aunque el <xref:System.Resources.ResourceReader> la clase implementa la <xref:System.Collections.IEnumerable> interfaz y la <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> método, el <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> método no proporciona el <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementación.</span><span class="sxs-lookup"><span data-stu-id="b4571-133">Although the <xref:System.Resources.ResourceReader> class implements the <xref:System.Collections.IEnumerable> interface and the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> method, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method does not provide the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="b4571-134">En su lugar, el <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> método devuelve un <xref:System.Collections.IDictionaryEnumerator> objeto de interfaz que proporciona acceso al par de nombre/valor de cada recurso.</span><span class="sxs-lookup"><span data-stu-id="b4571-134">Instead, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method  returns an <xref:System.Collections.IDictionaryEnumerator> interface object that provides access to each resource's name/value pair.</span></span>  
  
 <span data-ttu-id="b4571-135">Puede recuperar los recursos individuales de la colección de dos maneras:</span><span class="sxs-lookup"><span data-stu-id="b4571-135">You can retrieve the individual resources in the collection in two ways:</span></span>  
  
-   <span data-ttu-id="b4571-136">Puede recorrer en iteración cada recurso en el <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> recopilación y uso <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> propiedades para recuperar el nombre del recurso y el valor.</span><span class="sxs-lookup"><span data-stu-id="b4571-136">You can iterate each resource in the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and use <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> properties to retrieve the resource name and value.</span></span> <span data-ttu-id="b4571-137">Se recomienda esta técnica cuando todos los recursos son del mismo tipo, o se conoce el tipo de datos de cada recurso.</span><span class="sxs-lookup"><span data-stu-id="b4571-137">We recommend this technique when all the resources are of the same type, or you know the data type of each resource.</span></span>  
  
-   <span data-ttu-id="b4571-138">Puede recuperar el nombre de cada recurso cuando se recorren en el <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> colección y llamar a la <xref:System.Resources.ResourceReader.GetResourceData%2A> método para recuperar los datos del recurso.</span><span class="sxs-lookup"><span data-stu-id="b4571-138">You can retrieve the name of each resource when you iterate the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and call the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve the resource's data.</span></span> <span data-ttu-id="b4571-139">Se recomienda este enfoque cuando no conoce el tipo de datos de cada recurso o si el enfoque anterior produce excepciones.</span><span class="sxs-lookup"><span data-stu-id="b4571-139">We recommend this approach when you do not know the data type of each resource or if the previous approach throws exceptions.</span></span>  
  
<a name="idictionaryenumerator"></a>   
### <a name="retrieving-resources-by-using-idictionaryenumerator-properties"></a><span data-ttu-id="b4571-140">Recuperar los recursos mediante propiedades IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="b4571-140">Retrieving Resources by Using IDictionaryEnumerator Properties</span></span>  
 <span data-ttu-id="b4571-141">El primer método consiste en enumerar los recursos en un archivo .resources implica recuperar directamente el par de nombre/valor de cada recurso.</span><span class="sxs-lookup"><span data-stu-id="b4571-141">The first method of enumerating the resources in a .resources file involves directly retrieving each resource's name/value pair.</span></span> <span data-ttu-id="b4571-142">Después de llamar a la `IDictionaryEnumerator.MoveNext` método para desplazarse a cada recurso de la colección, se puede recuperar el recurso nombre de la <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> propiedad y los datos de recursos desde el <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="b4571-142">After you call the `IDictionaryEnumerator.MoveNext` method to move to each resource in the collection, you can retrieve the resource name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property and the resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b4571-143">El ejemplo siguiente muestra cómo recuperar el nombre y valor de cada recurso en un archivo .resources mediante el <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> y <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propiedades.</span><span class="sxs-lookup"><span data-stu-id="b4571-143">The following example shows how to retrieve the name and value of each resource in a .resources file by using the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="b4571-144">Para ejecutar el ejemplo, cree el siguiente archivo de texto denominado ApplicationResources.txt para definir los recursos de cadena.</span><span class="sxs-lookup"><span data-stu-id="b4571-144">To run the example, create the following text file named ApplicationResources.txt to define string resources.</span></span>  
  
```  
Title="Contact Information"  
Label1="First Name:"  
Label2="Middle Name:"  
Label3="Last Name:"  
Label4="SSN:"  
Label5="Street Address:"  
Label6="City:"  
Label7="State:"  
Label8="Zip Code:"  
Label9="Home Phone:"  
Label10="Business Phone:"  
Label11="Mobile Phone:"  
Label12="Other Phone:"  
Label13="Fax:"  
Label14="Email Address:"  
Label15="Alternate Email Address:"  
```  
  
 <span data-ttu-id="b4571-145">A continuación, puede convertir el archivo de recursos de texto en un archivo binario denominado ApplicationResources.resources mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="b4571-145">You can then convert the text resource file to a binary file named ApplicationResources.resources by using the following command:</span></span>  
  
 <span data-ttu-id="b4571-146">**Resgen ApplicationResources.txt**</span><span class="sxs-lookup"><span data-stu-id="b4571-146">**resgen ApplicationResources.txt**</span></span>  
  
 <span data-ttu-id="b4571-147">El ejemplo siguiente, a continuación, utiliza el <xref:System.Resources.ResourceReader> clase para enumerar cada recurso en el archivo binario .resources independiente y mostrar su nombre de clave y valor correspondiente.</span><span class="sxs-lookup"><span data-stu-id="b4571-147">The following example then uses the <xref:System.Resources.ResourceReader> class to enumerate each resource in the standalone binary .resources file and to display its key name and corresponding value.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/class1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/class1.vb#1)]  
  
 <span data-ttu-id="b4571-148">El intento de recuperar los datos de recursos de la <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propiedad puede producir las excepciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="b4571-148">The attempt to retrieve resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property can throw the following exceptions:</span></span>  
  
-   <span data-ttu-id="b4571-149">Un <xref:System.FormatException> si los datos no están en el formato esperado.</span><span class="sxs-lookup"><span data-stu-id="b4571-149">A <xref:System.FormatException> if the data is not in the expected format.</span></span>  
  
-   <span data-ttu-id="b4571-150">Un <xref:System.IO.FileNotFoundException> si no se encuentra el ensamblado que contiene el tipo al que pertenecen los datos.</span><span class="sxs-lookup"><span data-stu-id="b4571-150">A <xref:System.IO.FileNotFoundException> if the assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <span data-ttu-id="b4571-151">Un <xref:System.TypeLoadException> si no puede ser el tipo al que pertenecen los datos no se encuentra.</span><span class="sxs-lookup"><span data-stu-id="b4571-151">A <xref:System.TypeLoadException> if the type to which the data belongs cannot be cannot be found.</span></span>  
  
 <span data-ttu-id="b4571-152">Normalmente, estas excepciones se producen si el archivo .resources se ha modificado manualmente, si el ensamblado en el que se define un tipo ha no se han incluido con una aplicación o se ha eliminado accidentalmente, o si el ensamblado es una versión anterior que sea anterior a un tipo.</span><span class="sxs-lookup"><span data-stu-id="b4571-152">Typically, these exceptions are thrown if the .resources file has been modified manually, if the assembly in which a type is defined has either not been included with an application or has been inadvertently deleted, or if the assembly is an older version that predates a type.</span></span> <span data-ttu-id="b4571-153">Si se produce una de estas excepciones, puede recuperar los recursos de enumerar cada recurso y llamando a la <xref:System.Resources.ResourceReader.GetResourceData%2A> método, como se muestra en la sección siguiente.</span><span class="sxs-lookup"><span data-stu-id="b4571-153">If one of these exceptions is thrown, you can retrieve resources by enumerating each resource and calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method, as the following section shows.</span></span> <span data-ttu-id="b4571-154">Este enfoque proporciona escribe información acerca de los datos del <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propiedad intenta devolver.</span><span class="sxs-lookup"><span data-stu-id="b4571-154">This approach provides you with some information about the data type that the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property attempted to return.</span></span>  
  
<a name="getresourcedata"></a>   
### <a name="retrieving-resources-by-name-with-getresourcedata"></a><span data-ttu-id="b4571-155">Recuperación de recursos por nombre con GetResourceData</span><span class="sxs-lookup"><span data-stu-id="b4571-155">Retrieving Resources by Name with GetResourceData</span></span>  
 <span data-ttu-id="b4571-156">El segundo enfoque para enumerar los recursos en un archivo .resources también implica navegar por los recursos en el archivo mediante una llamada a la `IDictionaryEnumerator.MoveNext` método.</span><span class="sxs-lookup"><span data-stu-id="b4571-156">The second approach to enumerating resources in a .resources file also involves navigating through the resources in the file by calling the `IDictionaryEnumerator.MoveNext` method.</span></span> <span data-ttu-id="b4571-157">Para cada recurso, recupera el nombre del recurso desde el <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> propiedad, que, a continuación, se pasa a la <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> método para recuperar los datos del recurso.</span><span class="sxs-lookup"><span data-stu-id="b4571-157">For each resource, you retrieve the resource's name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property, which is then passed to the <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> method to retrieve the resource's data.</span></span> <span data-ttu-id="b4571-158">Esto se devuelve como una matriz de bytes en el `resourceData` argumento.</span><span class="sxs-lookup"><span data-stu-id="b4571-158">This is returned as a byte array in the `resourceData` argument.</span></span>  
  
 <span data-ttu-id="b4571-159">Este enfoque es más difícil que recuperar el nombre del recurso y el valor de la <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> y <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propiedades, porque devuelve los bytes reales que forman el valor del recurso.</span><span class="sxs-lookup"><span data-stu-id="b4571-159">This approach is more awkward than retrieving the resource name and value from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties, because it returns the actual bytes that form the resource value.</span></span> <span data-ttu-id="b4571-160">Sin embargo, si el intento de recuperar el recurso produce una excepción, el <xref:System.Resources.ResourceReader.GetResourceData%2A> método puede ayudar a identificar el origen de la excepción si se suministra información sobre el tipo de datos del recurso.</span><span class="sxs-lookup"><span data-stu-id="b4571-160">However, if the attempt to retrieve the resource throws an exception, the <xref:System.Resources.ResourceReader.GetResourceData%2A> method can help identify the source of the exception by supplying information about the resource's data type.</span></span> <span data-ttu-id="b4571-161">Para obtener más información acerca de la cadena que indica el tipo de datos del recurso, consulte <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span><span class="sxs-lookup"><span data-stu-id="b4571-161">For more information about the string that indicates the resource's data type, see <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span></span>  
  
 <span data-ttu-id="b4571-162">El ejemplo siguiente muestra cómo usar este enfoque para recuperar los recursos y para controlar las excepciones que se producen.</span><span class="sxs-lookup"><span data-stu-id="b4571-162">The following example illustrates how to use this approach to retrieve resources and to handle any exceptions that are thrown.</span></span> <span data-ttu-id="b4571-163">Crea mediante programación un archivo .resources binario que contiene cuatro cadenas, uno booleano, un entero, un mapa de bits y otra personalizada `DateTimeTZI` objeto.</span><span class="sxs-lookup"><span data-stu-id="b4571-163">It programmatically creates a binary .resources file that contains four strings, one Boolean, one integer, one bitmap, and one custom `DateTimeTZI` object.</span></span> <span data-ttu-id="b4571-164">Para ejecutar el ejemplo, realice lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="b4571-164">To run the example, do the following:</span></span>  
  
1.  <span data-ttu-id="b4571-165">Crear un ensamblado denominado Library.dll que contiene el `DateTimeTZI` estructura.</span><span class="sxs-lookup"><span data-stu-id="b4571-165">Create an assembly named Library.dll that contains the `DateTimeTZI` structure.</span></span> <span data-ttu-id="b4571-166">Este es el código fuente para el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="b4571-166">The following is the source code for the assembly.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/library.cs#4)]
     [!code-vb[System.Resources.ResourceReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/library.vb#4)]  
  
     <span data-ttu-id="b4571-167">Compile el código fuente en C# mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="b4571-167">Compile the source code in C# by using the following command:</span></span>  
  
    ```  
    csc /t:library library.cs  
    ```  
  
     <span data-ttu-id="b4571-168">O bien, puede compilar en Visual Basic mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="b4571-168">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc library.vb /t:library  
    ```  
  
2.  <span data-ttu-id="b4571-169">Compile y ejecute el siguiente código fuente, lo que crea un archivo .resources denominado ContactResources.resources.</span><span class="sxs-lookup"><span data-stu-id="b4571-169">Compile and execute the following source code, which creates a .resources file named ContactResources.resources.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/createresourceex1.cs#5)]
     [!code-vb[System.Resources.ResourceReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/createresourceex1.vb#5)]  
  
     <span data-ttu-id="b4571-170">El archivo de código fuente se denomina CreateResources.cs.</span><span class="sxs-lookup"><span data-stu-id="b4571-170">The source code file is named CreateResources.cs.</span></span> <span data-ttu-id="b4571-171">Puede compilar en C# mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="b4571-171">You can compile it in C# by using the following command:</span></span>  
  
    ```  
    csc CreateResources.cs /r:library.dll  
    ```  
  
     <span data-ttu-id="b4571-172">O bien, puede compilar en Visual Basic mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="b4571-172">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc CreateResources.vb /r:library.dll  
    ```  
  
3.  <span data-ttu-id="b4571-173">Compile y ejecute el siguiente código para enumerar los recursos en el archivo ContactResources.resources.</span><span class="sxs-lookup"><span data-stu-id="b4571-173">Compile and run the following code to enumerate the resources in the ContactResources.resources file.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/readresourceex1.cs#6)]
     [!code-vb[System.Resources.ResourceReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/readresourceex1.vb#6)]  
  
     <span data-ttu-id="b4571-174">Después de modificar el código fuente (por ejemplo, generando deliberadamente un <xref:System.FormatException> al final de la `try` bloque) o cambiar el nombre del ensamblado Library.dll para que no está disponible en tiempo de ejecución, puede ejecutar el ejemplo para ver cómo las llamadas a <xref:System.Resources.ResourceReader.GetResourceData%2A> le permiten recuperar o volver a crear alguna información de recursos.</span><span class="sxs-lookup"><span data-stu-id="b4571-174">After modifying the source code (for example, by deliberately throwing a <xref:System.FormatException> at the end of the `try` block) or renaming the Library.dll assembly so that it is unavailable at runtime, you can run the example to see how calls to <xref:System.Resources.ResourceReader.GetResourceData%2A> enable you to retrieve or recreate some resource information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4571-175">Inicializa una nueva instancia de la clase <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="b4571-175">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="b4571-176">[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)].</span><span class="sxs-lookup"><span data-stu-id="b4571-176">[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)].</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : System.IO.Stream -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b4571-177">Flujo de entrada para la lectura de recursos.</span><span class="sxs-lookup"><span data-stu-id="b4571-177">The input stream for reading resources.</span></span></param>
        <summary><span data-ttu-id="b4571-178">Inicializa una nueva instancia de la clase <see cref="T:System.Resources.ResourceReader" /> para la secuencia especificada.</span><span class="sxs-lookup"><span data-stu-id="b4571-178">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4571-179">El <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor crea un <xref:System.Resources.ResourceReader> objeto que recupera los recursos desde un archivo .resources independiente o desde un archivo .resources archivo incrustado en un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="b4571-179">The <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources either from a standalone .resources file or from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="b4571-180">Para leer de un archivo .resources independiente, crear una instancia de un <xref:System.IO.Stream> objeto y pasarlo a la <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="b4571-180">To read from a standalone .resources file, instantiate a <xref:System.IO.Stream> object and pass it to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="b4571-181">Para leer desde un archivo .resources incrustado, llame a la <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> método con el nombre del archivo .resources y pase el valor devuelto distingue mayúsculas de minúsculas <xref:System.IO.Stream> de objeto para el <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="b4571-181">To read from an embedded .resources file, call the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method with the case-sensitive name of the .resources file, and pass the returned <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]
  
## Examples  
 <span data-ttu-id="b4571-182">El ejemplo de esta sección usa el siguiente archivo .txt denominado `PatientForm.txt` para definir los recursos utilizados por una aplicación.</span><span class="sxs-lookup"><span data-stu-id="b4571-182">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="b4571-183">Puede compilar el archivo .txt en un archivo .resources mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="b4571-183">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="b4571-184">**Resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="b4571-184">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="b4571-185">En el siguiente ejemplo se da por supuesto que el archivo de recursos está incrustado en el ensamblado que contiene código ejecutable de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="b4571-185">The following example assumes that the resource file is embedded in the assembly that contains the application's executable code.</span></span> <span data-ttu-id="b4571-186">Recupera un archivo de recursos denominado `PatientForm.resources` desde los ensamblados que se está ejecutando actualmente y muestra el nombre y valor de cada uno de sus recursos.</span><span class="sxs-lookup"><span data-stu-id="b4571-186">It retrieves a resource file named `PatientForm.resources` from the currently executing assemblies and displays the name and value of each of its resources.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream1.vb#1)]  
  
 <span data-ttu-id="b4571-187">Si el ejemplo de C# se denomina `Example.cs`, puede compilar mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="b4571-187">If the C# example is named `Example.cs`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="b4571-188">**csc Example.cs /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="b4571-188">**csc Example.cs /res:PatientForm.resources**</span></span>  
  
 <span data-ttu-id="b4571-189">Si el ejemplo de Visual Basic se denomina `Example.vb`, puede compilar mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="b4571-189">If the Visual Basic example is named `Example.vb`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="b4571-190">**vbc Example.vb /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="b4571-190">**vbc Example.vb /res:PatientForm.resources**</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b4571-191">El parámetro <paramref name="stream" /> no se puede leer.</span><span class="sxs-lookup"><span data-stu-id="b4571-191">The <paramref name="stream" /> parameter is not readable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b4571-192">El parámetro <paramref name="stream" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4571-192">The <paramref name="stream" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b4571-193">Error de E/S durante el acceso al parámetro <paramref name="stream" />.</span><span class="sxs-lookup"><span data-stu-id="b4571-193">An I/O error has occurred while accessing <paramref name="stream" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b4571-194">para proporcionar servicios de serialización.</span><span class="sxs-lookup"><span data-stu-id="b4571-194">for providing serialization services.</span></span> <span data-ttu-id="b4571-195">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="b4571-195">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="b4571-196">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span><span class="sxs-lookup"><span data-stu-id="b4571-196">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="b4571-197">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="b4571-197">requires full trust for the immediate caller.</span></span> <span data-ttu-id="b4571-198">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="b4571-198">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : string -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b4571-199">Ruta de acceso y nombre del archivo de recursos que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="b4571-199">The path and name of the resource file to read.</span></span> <span data-ttu-id="b4571-200"><c>filename</c> no distingue mayúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="b4571-200"><c>filename</c> is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="b4571-201">Inicializa una nueva instancia de la clase <see cref="T:System.Resources.ResourceReader" /> para el archivo de recursos denominado especificado.</span><span class="sxs-lookup"><span data-stu-id="b4571-201">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified named resource file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4571-202">El <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> constructor crea un <xref:System.Resources.ResourceReader> objeto que recupera los recursos de un archivo .resources independiente.</span><span class="sxs-lookup"><span data-stu-id="b4571-202">The <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources from a standalone .resources file.</span></span> <span data-ttu-id="b4571-203">Para recuperar recursos desde un archivo .resources incrustado, utilice la <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="b4571-203">To retrieve resources from an embedded .resources file, use the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

## Examples  
 <span data-ttu-id="b4571-204">El ejemplo de esta sección usa el siguiente archivo .txt denominado `PatientForm.txt` para definir los recursos utilizados por una aplicación.</span><span class="sxs-lookup"><span data-stu-id="b4571-204">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="b4571-205">Puede compilar este archivo .txt en un archivo .resources mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="b4571-205">You can compile this .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="b4571-206">**Resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="b4571-206">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="b4571-207">En el ejemplo siguiente se enumeran los recursos de `PatientForm.resources` y muestra el nombre y valor de cada uno.</span><span class="sxs-lookup"><span data-stu-id="b4571-207">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b4571-208">El parámetro <paramref name="fileName" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4571-208">The <paramref name="fileName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="b4571-209">No se puede encontrar el archivo.</span><span class="sxs-lookup"><span data-stu-id="b4571-209">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b4571-210">Error de E/S.</span><span class="sxs-lookup"><span data-stu-id="b4571-210">An I/O error has occurred.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="b4571-211">El archivo de recursos tiene un formato no válido.</span><span class="sxs-lookup"><span data-stu-id="b4571-211">The resource file has an invalid format.</span></span> <span data-ttu-id="b4571-212">Por ejemplo, la longitud del archivo puede ser cero.</span><span class="sxs-lookup"><span data-stu-id="b4571-212">For example, the length of the file may be zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resourceReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4571-213">Libera todos los recursos del sistema operativo asociados a este objeto <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="b4571-213">Releases all operating system resources associated with this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4571-214"><xref:System.Resources.ResourceReader.Close%2A> puede llamarse de forma segura varias veces.</span><span class="sxs-lookup"><span data-stu-id="b4571-214"><xref:System.Resources.ResourceReader.Close%2A> can be safely called multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4571-215">El ejemplo siguiente se mueve a través de recursos de un archivo y muestra todos los pares de clave-valor que encuentra.</span><span class="sxs-lookup"><span data-stu-id="b4571-215">The following example moves through a file's resources and displays all the key/value pairs it finds.</span></span> <span data-ttu-id="b4571-216">El código, a continuación, usa el <xref:System.Resources.ResourceReader.Close%2A> método para apagar el <xref:System.Resources.ResourceReader> y liberar todos los recursos utilizados por ella.</span><span class="sxs-lookup"><span data-stu-id="b4571-216">The code then uses the <xref:System.Resources.ResourceReader.Close%2A> method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>  
  
 [!code-cpp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="resourceReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4571-217">Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="b4571-217">Releases all resources used by the current instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4571-218">Cuando haya terminado de utilizar esta instancia de <xref:System.Resources.ResourceReader>, llame a <xref:System.Resources.ResourceReader.Dispose%2A> para liberar todos los recursos utilizados por esta instancia.</span><span class="sxs-lookup"><span data-stu-id="b4571-218">When you are finished using this instance of <xref:System.Resources.ResourceReader>, call <xref:System.Resources.ResourceReader.Dispose%2A> to release all resources used by this instance.</span></span> <span data-ttu-id="b4571-219">Debe eliminar las demás referencias a este <xref:System.Resources.ResourceReader> para que el recolector de elementos no utilizados pueda reclamar la memoria de la instancia en lugar de mantener activo para la finalización de la instancia.</span><span class="sxs-lookup"><span data-stu-id="b4571-219">You should eliminate further references to this <xref:System.Resources.ResourceReader> instance so that the garbage collector can reclaim the memory of the instance instead of keeping it alive for finalization.</span></span>  
  
 <span data-ttu-id="b4571-220"><xref:System.Resources.ResourceReader.Dispose%2A> llama al método Dispose (Boolean) privado, que contiene el código para liberar recursos no administrados y no administrados.</span><span class="sxs-lookup"><span data-stu-id="b4571-220"><xref:System.Resources.ResourceReader.Dispose%2A> calls the private Dispose(Boolean) method, which contains the code to release managed and unmanaged resources.</span></span> <span data-ttu-id="b4571-221">Para obtener más información, consulte [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="b4571-221">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resourceReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4571-222">Devuelve un enumerador para este objeto <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="b4571-222">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></summary>
        <returns><span data-ttu-id="b4571-223">Enumerator para este objeto <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="b4571-223">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4571-224">Normalmente, enumerar los recursos mediante una llamada a la <xref:System.Resources.ResourceReader.GetEnumerator%2A> método y, a continuación, llamar repetidamente a la <xref:System.Collections.IEnumerator.MoveNext%2A> método en el valor devuelto <xref:System.Collections.IDictionaryEnumerator> objeto hasta que el método devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="b4571-224">Typically, you enumerate resources by calling the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method and then repeatedly calling the <xref:System.Collections.IEnumerator.MoveNext%2A> method on the returned <xref:System.Collections.IDictionaryEnumerator> object until the method returns `false`.</span></span> <span data-ttu-id="b4571-225">El nombre del recurso está disponible desde el <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> propiedad; su valor desde el <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="b4571-225">The resource name is available from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property; its value from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b4571-226">El ejemplo muestra cómo enumerar los recursos de esta manera.</span><span class="sxs-lookup"><span data-stu-id="b4571-226">The example illustrates how to enumerate resources in this way.</span></span>  
  
 <span data-ttu-id="b4571-227">La implementación de la <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propiedad por la <xref:System.Resources.ResourceReader> clase puede producir las excepciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="b4571-227">The implementation of the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property by the <xref:System.Resources.ResourceReader> class can throw the following exceptions:</span></span>  
  
-   <xref:System.IO.FileNotFoundException>  
  
     <span data-ttu-id="b4571-228">No se encuentra el ensamblado que contiene el tipo al que pertenecen los datos.</span><span class="sxs-lookup"><span data-stu-id="b4571-228">The assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <xref:System.FormatException>  
  
     <span data-ttu-id="b4571-229">Los datos no están en el formato esperado.</span><span class="sxs-lookup"><span data-stu-id="b4571-229">The data is not in the expected format.</span></span>  
  
-   <xref:System.TypeLoadException>  
  
     <span data-ttu-id="b4571-230">No se encuentra el tipo al que pertenecen los datos.</span><span class="sxs-lookup"><span data-stu-id="b4571-230">The type to which the data belongs cannot be found.</span></span>  
  
 <span data-ttu-id="b4571-231">Puede controlar la excepción llamando a la <xref:System.Resources.ResourceReader.GetResourceData%2A> método para recuperar información sobre el tipo de datos y la matriz de bytes asignados para el recurso mencionado.</span><span class="sxs-lookup"><span data-stu-id="b4571-231">You can handle the exception by calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve information about the data type and the byte array assigned to the named resource.</span></span> <span data-ttu-id="b4571-232">Para obtener más información, vea la sección "Recuperación de recursos por nombre con GetResourceData" en el <xref:System.Resources.ResourceReader> tema de la clase.</span><span class="sxs-lookup"><span data-stu-id="b4571-232">For more information, see the "Retrieving Resources by Name with GetResourceData" section in the <xref:System.Resources.ResourceReader> class topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4571-233">La <xref:System.Resources.ResourceReader> clase incluye dos métodos que devuelven los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="b4571-233">The <xref:System.Resources.ResourceReader> class includes two methods that return enumerators.</span></span> <span data-ttu-id="b4571-234">El <xref:System.Resources.ResourceReader.GetEnumerator%2A> método devuelve un <xref:System.Collections.IDictionaryEnumerator> objeto de la interfaz y es el método recomendado, debe llamar al enumerar los recursos.</span><span class="sxs-lookup"><span data-stu-id="b4571-234">The <xref:System.Resources.ResourceReader.GetEnumerator%2A> method returns an <xref:System.Collections.IDictionaryEnumerator> interface object and is the recommended method to call when enumerating resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4571-235">El ejemplo de esta sección usa el siguiente archivo .txt denominado `PatientForm.txt` para definir los recursos utilizados por una aplicación.</span><span class="sxs-lookup"><span data-stu-id="b4571-235">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="b4571-236">Puede compilar el archivo .txt en un archivo .resources mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="b4571-236">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="b4571-237">**Resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="b4571-237">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="b4571-238">En el ejemplo siguiente se enumeran los recursos de `PatientForm.resources` y muestra el nombre y valor de cada uno.</span><span class="sxs-lookup"><span data-stu-id="b4571-238">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b4571-239">El lector se ha cerrado o se ha eliminado y no se puede obtener acceso.</span><span class="sxs-lookup"><span data-stu-id="b4571-239">The reader has been closed or disposed, and cannot be accessed.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceData">
      <MemberSignature Language="C#" Value="public void GetResourceData (string resourceName, out string resourceType, out byte[] resourceData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetResourceData(string resourceName, [out] string&amp; resourceType, [out] unsigned int8[]&amp; resourceData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetResourceData (resourceName As String, ByRef resourceType As String, ByRef resourceData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetResourceData(System::String ^ resourceName, [Runtime::InteropServices::Out] System::String ^ % resourceType, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % resourceData);" />
      <MemberSignature Language="F#" Value="member this.GetResourceData : string *  *  -&gt; unit" Usage="resourceReader.GetResourceData (resourceName, resourceType, resourceData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resourceType" Type="System.String" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resourceData" Type="System.Byte[]" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resourceName"><span data-ttu-id="b4571-240">Nombre de un recurso.</span><span class="sxs-lookup"><span data-stu-id="b4571-240">The name of a resource.</span></span></param>
        <param name="resourceType"><span data-ttu-id="b4571-241">El resultado que devuelve este método contiene una cadena que representa el nombre de tipo del recurso recuperado.</span><span class="sxs-lookup"><span data-stu-id="b4571-241">When this method returns, contains a string that represents the type name of the retrieved resource.</span></span> <span data-ttu-id="b4571-242">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="b4571-242">This parameter is passed uninitialized.</span></span></param>
        <param name="resourceData"><span data-ttu-id="b4571-243">Cuando este método devuelve el control al sistema, contiene una matriz de bytes que es la representación binaria del tipo recuperado.</span><span class="sxs-lookup"><span data-stu-id="b4571-243">When this method returns, contains a byte array that is the binary representation of the retrieved type.</span></span> <span data-ttu-id="b4571-244">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="b4571-244">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="b4571-245">Recupera el nombre de tipo y datos de un recurso con nombre a partir de un archivo de recursos o secuencia abierto.</span><span class="sxs-lookup"><span data-stu-id="b4571-245">Retrieves the type name and data of a named resource from an open resource file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4571-246">El <xref:System.Resources.ResourceReader.GetResourceData%2A> método recupera el valor de un recurso con nombre como una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="b4571-246">The <xref:System.Resources.ResourceReader.GetResourceData%2A> method retrieves the value of a named resource as a byte array.</span></span> <span data-ttu-id="b4571-247">Normalmente se usa cuando el <xref:System.Collections.IDictionaryEnumerator.Value%2A> propiedad produce una excepción cuando intenta recuperar el valor de un recurso.</span><span class="sxs-lookup"><span data-stu-id="b4571-247">It is typically used when the <xref:System.Collections.IDictionaryEnumerator.Value%2A> property throws an exception when it tries to retrieve the value of a resource.</span></span>  
  
 <span data-ttu-id="b4571-248">`resourceType` es una cadena que representa el tipo de datos del recurso.</span><span class="sxs-lookup"><span data-stu-id="b4571-248">`resourceType` is a string that represents the data type of the resource.</span></span> <span data-ttu-id="b4571-249">Puede ser cualquiera de los siguientes valores:</span><span class="sxs-lookup"><span data-stu-id="b4571-249">It can be any of the following values:</span></span>  
  
-   <span data-ttu-id="b4571-250">La representación de cadena de un `ResourceTypeCode` miembro de enumeración que indica el tipo de datos del recurso.</span><span class="sxs-lookup"><span data-stu-id="b4571-250">The string representation of a `ResourceTypeCode` enumeration member that indicates the data type of the resource.</span></span> <span data-ttu-id="b4571-251">`ResourceTypeCode` es una enumeración privada que usa .para indicar que un formato binario especial se utiliza para almacenar uno de los 19 tipos de datos comunes.</span><span class="sxs-lookup"><span data-stu-id="b4571-251">`ResourceTypeCode` is a private enumeration that is used by .to indicate that a special binary format is used to store one of 19 common data types.</span></span> <span data-ttu-id="b4571-252">Se incluyen los tipos de datos primitivos de .NET Framework (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), así como <xref:System.String>, <xref:System.DateTime>, y <xref:System.TimeSpan>, además, el `ResourceTypeCode` enumeración incluye los valores mostrados en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="b4571-252">These include the .NET Framework primitive data types (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), as well as <xref:System.String>, <xref:System.DateTime>, and <xref:System.TimeSpan>, In addition, the `ResourceTypeCode` enumeration includes the values shown in the following table.</span></span>  
  
    |<span data-ttu-id="b4571-253">Valor ResourceTypeCode</span><span class="sxs-lookup"><span data-stu-id="b4571-253">ResourceTypeCode value</span></span>|<span data-ttu-id="b4571-254">Descripción</span><span class="sxs-lookup"><span data-stu-id="b4571-254">Description</span></span>|  
    |----------------------------|-----------------|  
    |`ResourceTypeCode.ByteArray`|<span data-ttu-id="b4571-255">Los datos están una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="b4571-255">The data is a byte array.</span></span> <span data-ttu-id="b4571-256">Este tipo de datos con frecuencia los resultados de la llamada a la <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="b4571-256">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> method.</span></span>|  
    |`ResourceTypeCode.Null`|<span data-ttu-id="b4571-257">Los datos están una referencia nula.</span><span class="sxs-lookup"><span data-stu-id="b4571-257">The data is a null reference.</span></span> <span data-ttu-id="b4571-258">Este tipo de datos con frecuencia los resultados de la llamada a la <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> método con un objeto cuyo valor es `null`.</span><span class="sxs-lookup"><span data-stu-id="b4571-258">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> method with an object whose value is `null`.</span></span>|  
    |`ResourceTypeCode.Stream`|<span data-ttu-id="b4571-259">Los datos se almacenan en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="b4571-259">The data is stored in a stream.</span></span> <span data-ttu-id="b4571-260">Este tipo de datos con frecuencia los resultados de la llamada a la <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> o <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="b4571-260">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> or <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> method.</span></span>|  
  
     <span data-ttu-id="b4571-261">Suponiendo que `resourceData` no ha sido dañado, normalmente se puede convertir desde una matriz de bytes a su valor original mediante una llamada a un <xref:System.BitConverter> o <xref:System.IO.BinaryReader> método.</span><span class="sxs-lookup"><span data-stu-id="b4571-261">Assuming that `resourceData` has not been corrupted, it can usually be converted from a byte array back to its original value by calling a <xref:System.BitConverter> or <xref:System.IO.BinaryReader> method.</span></span>  
  
-   <span data-ttu-id="b4571-262">Una cadena que contiene el nombre completo del tipo cuyos datos serializados se asignan a la `resourceData` argumento (por ejemplo, `System.String`).</span><span class="sxs-lookup"><span data-stu-id="b4571-262">A string that contains the fully qualified name of the type whose serialized data is assigned to the `resourceData` argument (for example, `System.String`).</span></span> <span data-ttu-id="b4571-263">Además, para los tipos que no forman parte de la biblioteca de clases de .NET Framework, la cadena incluye el nombre, versión, referencia cultural y clave pública del ensamblado que contiene el tipo.</span><span class="sxs-lookup"><span data-stu-id="b4571-263">In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</span></span> <span data-ttu-id="b4571-264">Por ejemplo, la siguiente cadena indica que los datos serializados representan una instancia de la `Person` escriba en el `Extensions` espacio de nombres, que se encuentra en la versión 1.0 de un ensamblado denominado utilidad que tiene ninguna clave pública y ninguna referencia cultural designada.</span><span class="sxs-lookup"><span data-stu-id="b4571-264">For example, the following string indicates that the serialized data represents an instance of the `Person` type in the `Extensions` namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</span></span>  
  
     `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`  
  
     <span data-ttu-id="b4571-265">Suponiendo que `resourceData` no se ha dañado y que está disponible, el tipo de origen `resourceData` puede convertirse de una matriz de bytes a su valor original mediante la conversión de la matriz de bytes a un <xref:System.IO.Stream> objeto y pasar la secuencia a la <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType>método.</span><span class="sxs-lookup"><span data-stu-id="b4571-265">Assuming that `resourceData` has not been corrupted and that the source type is available, `resourceData` can be converted from a byte array back to its original value by converting the byte array to a <xref:System.IO.Stream> object and passing the stream to the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="b4571-266">La cadena utilizada para describir el tipo de datos en el <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> llamada al método.</span><span class="sxs-lookup"><span data-stu-id="b4571-266">The string used to describe the data type in the <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b4571-267"><paramref name="resourceName" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4571-267"><paramref name="resourceName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b4571-268"><paramref name="resourceName" /> no existe.</span><span class="sxs-lookup"><span data-stu-id="b4571-268"><paramref name="resourceName" /> does not exist.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="b4571-269"><paramref name="resourceName" /> tiene un tipo no válido.</span><span class="sxs-lookup"><span data-stu-id="b4571-269"><paramref name="resourceName" /> has an invalid type.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="b4571-270">Los datos del recurso están dañados.</span><span class="sxs-lookup"><span data-stu-id="b4571-270">The retrieved resource data is corrupt.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b4571-271">El objeto <see cref="T:System.Resources.ResourceReader" /> actual no se ha inicializado, probablemente porque está cerrado.</span><span class="sxs-lookup"><span data-stu-id="b4571-271">The current <see cref="T:System.Resources.ResourceReader" /> object is not initialized, probably because it is closed.</span></span></exception>
        <altmember cref="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4571-272">Devuelve un enumerador para este objeto <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="b4571-272">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></summary>
        <returns><span data-ttu-id="b4571-273">Enumerator para este objeto <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="b4571-273">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4571-274"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> es una implementación de interfaz explícita.</span><span class="sxs-lookup"><span data-stu-id="b4571-274"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> is an explicit interface implementation.</span></span> <span data-ttu-id="b4571-275">Solo se puede utilizar cuando la instancia de <xref:System.Resources.ResourceReader> se convierte en una interfaz <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="b4571-275">It can be used only when the <xref:System.Resources.ResourceReader> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span> <span data-ttu-id="b4571-276">El método recomendado para enumerar los recursos en un archivo .resources es llamar a la <xref:System.Collections.IEnumerator.MoveNext%2A> método de la <xref:System.Collections.IDictionaryEnumerator> objeto devuelto por la <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="b4571-276">The recommended approach to enumerating the resources in a .resources file is to call the <xref:System.Collections.IEnumerator.MoveNext%2A> method of the <xref:System.Collections.IDictionaryEnumerator> object returned by the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b4571-277">El lector ya se ha cerrado y no es accesible.</span><span class="sxs-lookup"><span data-stu-id="b4571-277">The reader has already been closed and cannot be accessed.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4571-278">Libera los recursos que usa <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="b4571-278">Releases the resources used by the <see cref="T:System.Resources.ResourceReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="b4571-279">Llamar a Dispose permite a los recursos utilizados por el <xref:System.Resources.ResourceReader> que reasignarse para otros fines.</span><span class="sxs-lookup"><span data-stu-id="b4571-279">Calling Dispose allows the resources used by the <xref:System.Resources.ResourceReader> to be reallocated for other purposes.</span></span> <span data-ttu-id="b4571-280">Para obtener más información acerca de Dispose, vea [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="b4571-280">For more information about Dispose, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>

## Examples  
<span data-ttu-id="b4571-281">El ejemplo de código siguiente se mueve a través de recursos de un archivo e imprime todos los pares de clave-valor que encuentra.</span><span class="sxs-lookup"><span data-stu-id="b4571-281">The following code example moves through a file's resources and prints out all the key/value pairs it finds.</span></span> <span data-ttu-id="b4571-282">El código, a continuación, usa el método de theIDisposable.Dispose para apagar el <xref:System.Resources.ResourceReader> y liberar todos los recursos utilizados por ella.</span><span class="sxs-lookup"><span data-stu-id="b4571-282">The code then uses theIDisposable.Dispose method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>

```vb
Imports System
Imports System.Resources
Imports System.Collections

Public Class ReadResources

    Public Shared Sub Main(args() As String)
        ' Create a resource reader for items.resources 
        ' and get an enumerator to iterate through the file. 
        Dim reader As IResourceReader = New ResourceReader("items.resources")
        Dim en As IDictionaryEnumerator = reader.GetEnumerator()

        ' Iterate through the file, printing the key and value pairs. 
        While en.MoveNext()
            Console.WriteLine()
            Console.WriteLine("Name: {0}", en.Key)
            Console.WriteLine("Value: {0}", en.Value)
        End While 

        ' Clean up all resources associated with the reader. 
        ' Calling Dispose is equivalent to calling Close.
        reader.Dispose()
    End Sub 

End Class
```

```csharp
using System;
using System.Resources;
using System.Collections;

public class ReadResources 
{
    public static void Main(string[] args) 
    {
        // Create a resource reader for items.resources 
        // and get an enumerator to iterate through the file.
        IResourceReader reader = new ResourceReader("items.resources");
        IDictionaryEnumerator en = reader.GetEnumerator();

        // Iterate through the file, printing the key/value pairs. 
        while (en.MoveNext()) 
        {
            Console.WriteLine();
            Console.WriteLine("Name: {0}", en.Key);
            Console.WriteLine("Value: {0}", en.Value);
        }

        // Clean up all resources associated with the reader. 
        // Calling Dispose is equivalent to calling Close.
        reader.Dispose();
    }
}
```

```cpp
using namespace System;
using namespace System::Resources;
using namespace System::Collections;
int main()
{
   array<String^>^args = Environment::GetCommandLineArgs();

   // Create a resource reader for items.resources 
   // and get an enumerator to iterate through the file.
   IResourceReader^ reader = gcnew ResourceReader( "items.resources" );
   IDictionaryEnumerator^ en = reader->GetEnumerator();

   // Iterate through the file, printing the key/value pairs. 
   while ( en->MoveNext() )
   {
      Console::WriteLine();
      Console::WriteLine( "Name: {0}", en->Key );
      Console::WriteLine( "Value: {0}", en->Value );
   }

   // Clean up all resources associated with the reader. 
   // Calling the destructor is equivalent to calling Close.
   reader->~IResourceReader();
}
```

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="TextElementEnumerator" FullName="System.Globalization.TextElementEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cbf8e17410599af369261ad8f54a24ddedaa1f83" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52375896" /></Metadata><TypeSignature Language="C#" Value="public class TextElementEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TextElementEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TextElementEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class TextElementEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextElementEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type TextElementEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b15cb-101">Enumera los elementos de texto de una cadena.</span><span class="sxs-lookup"><span data-stu-id="b15cb-101">Enumerates the text elements of a string.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cb-102">.NET Framework define un elemento de texto como una unidad de texto que se muestra como un carácter único, es decir, un grafemas.</span><span class="sxs-lookup"><span data-stu-id="b15cb-102">The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="b15cb-103">Un elemento de texto puede ser cualquiera de las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="b15cb-103">A text element can be any of the following:</span></span>  
  
-   <span data-ttu-id="b15cb-104">Un carácter base, que se representa como una sola <xref:System.Char> valor.</span><span class="sxs-lookup"><span data-stu-id="b15cb-104">A base character, which is represented as a single <xref:System.Char> value.</span></span> <span data-ttu-id="b15cb-105">Por ejemplo, LATIN CAPITAL LETTER A (u+0041) y LATIN pequeña letra AE (00E6) son caracteres bases.</span><span class="sxs-lookup"><span data-stu-id="b15cb-105">For example, LATIN CAPITAL LETTER A (U+0041) and LATIN SMALL LETTER AE (U+00E6) are base characters.</span></span>  
  
-   <span data-ttu-id="b15cb-106">Una combinación de caracteres de secuencia, que consta de un carácter base y uno o más caracteres de combinación.</span><span class="sxs-lookup"><span data-stu-id="b15cb-106">A combining character sequence, which consists of a base character and one or more combining characters.</span></span> <span data-ttu-id="b15cb-107">Por ejemplo, ejemplo, mayúscula latina A (u+0041) seguido de combinar acento largo (0304) es una combinación secuencia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="b15cb-107">For example, example, LATIN CAPITAL LETTER A (U+0041) followed by COMBINING MACRON (U+0304) is a combining character sequence.</span></span>  
  
-   <span data-ttu-id="b15cb-108">Suplentes pares, lo que la [estándar Unicode](https://go.microsoft.com/fwlink/?linkid=37123) define como una representación de caracteres codificados para un único carácter abstracto que consta de una secuencia de dos unidades de código: un suplente alto y un suplente bajo.</span><span class="sxs-lookup"><span data-stu-id="b15cb-108">Surrogate pairs, which the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines as a coded character representation for a single abstract character that consists of a sequence of two code units: a high surrogate, and a low surrogate.</span></span> <span data-ttu-id="b15cb-109">Los pares suplentes se utilizan para representar los caracteres fuera del plano multilingüe básico de Unicode como caracteres con codificación UTF-16.</span><span class="sxs-lookup"><span data-stu-id="b15cb-109">Surrogate pairs are used to represent characters outside of the Unicode Basic Multilingual Plane as UTF-16 encoded characters.</span></span> <span data-ttu-id="b15cb-110">Por ejemplo, GOTHIC letra SAUIL (U + 1034 entrante3) se representa en la codificación como un suplente alto cuyo valor es 0xD800 y un suplente bajo cuyo valor es 0xDF43 UTF-16.</span><span class="sxs-lookup"><span data-stu-id="b15cb-110">For example, GOTHIC LETTER SAUIL (U+10343) is represented in UTF-16 encoding as a high surrogate whose value is 0xD800 and a low surrogate whose value is 0xDF43.</span></span> <span data-ttu-id="b15cb-111">Un par suplente puede representar un carácter base o un carácter de combinación.</span><span class="sxs-lookup"><span data-stu-id="b15cb-111">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="b15cb-112">El <xref:System.Globalization.TextElementEnumerator> clase le permite trabajar con los elementos de texto en una cadena en lugar de con solo <xref:System.Char> objetos.</span><span class="sxs-lookup"><span data-stu-id="b15cb-112">The <xref:System.Globalization.TextElementEnumerator> class allows you to work with the text elements in a string rather than with single <xref:System.Char> objects.</span></span>  
  
 <span data-ttu-id="b15cb-113">Crea instancias de un <xref:System.Globalization.TextElementEnumerator> objeto que representa una cadena determinada, pase la cadena para el <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="b15cb-113">You instantiate a <xref:System.Globalization.TextElementEnumerator> object that represents a particular string by passing the string to the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b15cb-114">Esto devuelve un enumerador que se coloca antes del primer elemento de texto en la cadena.</span><span class="sxs-lookup"><span data-stu-id="b15cb-114">This returns an enumerator that is positioned before the first text element in the string.</span></span> <span data-ttu-id="b15cb-115">Una llamada a la <xref:System.Globalization.TextElementEnumerator.Reset%2A> método también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="b15cb-115">Calling the <xref:System.Globalization.TextElementEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="b15cb-116">Dado que esto representa un estado no válido, debe llamar a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> para hacer avanzar el enumerador hasta el primer elemento de texto de la cadena antes de leer el valor de la <xref:System.Globalization.TextElementEnumerator.Current%2A> propiedad para devolver el elemento de texto actual.</span><span class="sxs-lookup"><span data-stu-id="b15cb-116">Because this represents an invalid state, you must call <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> to advance the enumerator to the first text element of the string before reading the value of the <xref:System.Globalization.TextElementEnumerator.Current%2A> property to return the current text element.</span></span>  
  
 <span data-ttu-id="b15cb-117">Cuando se trabaja con un <xref:System.Globalization.TextElementEnumerator> de objeto, usted es responsable de colocar el enumerador.</span><span class="sxs-lookup"><span data-stu-id="b15cb-117">When working with a <xref:System.Globalization.TextElementEnumerator> object, you are responsible for positioning the enumerator.</span></span> <span data-ttu-id="b15cb-118">El <xref:System.Globalization.TextElementEnumerator.Current%2A> propiedad devuelve el mismo elemento de texto hasta que llame a cualquiera <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> o <xref:System.Globalization.TextElementEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cb-118">The <xref:System.Globalization.TextElementEnumerator.Current%2A> property returns the same text element until you call either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A>.</span></span> <span data-ttu-id="b15cb-119">El enumerador se encuentra en un estado no válido si se coloca antes del primer elemento de texto o después del último elemento de texto en la cadena.</span><span class="sxs-lookup"><span data-stu-id="b15cb-119">The enumerator is in an invalid state if it is positioned before the first text element or after the last text element in the string.</span></span> <span data-ttu-id="b15cb-120">Cuando el enumerador está en un estado no válido, intenta recuperar el valor de la <xref:System.Globalization.TextElementEnumerator.Current%2A> propiedad produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="b15cb-120">When the enumerator is in an invalid state, attempting to retrieve the value of the <xref:System.Globalization.TextElementEnumerator.Current%2A> property throws an exception.</span></span> <span data-ttu-id="b15cb-121">Puede determinar si el enumerador se encuentra en un estado no válido mediante la comprobación de si el valor devuelto de la <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> propiedad es `false`.</span><span class="sxs-lookup"><span data-stu-id="b15cb-121">You can determine whether the enumerator is in an invalid state by testing whether the return value of the <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="b15cb-122">El <xref:System.Globalization.TextElementEnumerator> objeto representa una instantánea del estado actual de una variable de cadena o literal de cadena en el momento en que el <xref:System.Globalization.TextElementEnumerator> se crea una instancia de objeto.</span><span class="sxs-lookup"><span data-stu-id="b15cb-122">The <xref:System.Globalization.TextElementEnumerator> object represents a snapshot of the current state of a string variable or string literal at the moment that the <xref:System.Globalization.TextElementEnumerator> object is instantiated.</span></span> <span data-ttu-id="b15cb-123">Ten en cuenta lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="b15cb-123">Note that:</span></span>  
  
-   <span data-ttu-id="b15cb-124">Los enumeradores de elemento de texto solo sirve para leer datos de una cadena.</span><span class="sxs-lookup"><span data-stu-id="b15cb-124">Text element enumerators can only be used to read data in a string.</span></span> <span data-ttu-id="b15cb-125">No pueden modificar la cadena subyacente.</span><span class="sxs-lookup"><span data-stu-id="b15cb-125">They cannot modify the underlying string.</span></span>  
  
-   <span data-ttu-id="b15cb-126">Un enumerador no tiene acceso exclusivo a la cadena que representa.</span><span class="sxs-lookup"><span data-stu-id="b15cb-126">An enumerator does not have exclusive access to the string that it represents.</span></span> <span data-ttu-id="b15cb-127">Una variable de cadena se puede modificar después de crear el enumerador.</span><span class="sxs-lookup"><span data-stu-id="b15cb-127">A string variable can be modified after the enumerator is created.</span></span>  
  
-   <span data-ttu-id="b15cb-128">Un <xref:System.Globalization.TextElementEnumerator> objeto enumera los elementos de texto está presentes en la cadena en el momento en que el <xref:System.Globalization.TextElementEnumerator> se crea una instancia de objeto.</span><span class="sxs-lookup"><span data-stu-id="b15cb-128">A <xref:System.Globalization.TextElementEnumerator> object enumerates the text elements present in the string at the time that the <xref:System.Globalization.TextElementEnumerator> object was instantiated.</span></span> <span data-ttu-id="b15cb-129">No refleja los cambios posteriores a la variable de cadena si esa variable se puede modificar posteriormente.</span><span class="sxs-lookup"><span data-stu-id="b15cb-129">It does not reflect any subsequent changes to the string variable if that variable is modified afterward.</span></span>  
  
-   <span data-ttu-id="b15cb-130">Dado que el <xref:System.Globalization.TextElementEnumerator> no invalide la clase <xref:System.Object.Equals%2A?displayProperty=nameWithType>, dos <xref:System.Globalization.TextElementEnumerator> objetos que representan la misma cadena se considerarán iguales.</span><span class="sxs-lookup"><span data-stu-id="b15cb-130">Because the <xref:System.Globalization.TextElementEnumerator> class does not override <xref:System.Object.Equals%2A?displayProperty=nameWithType>, two <xref:System.Globalization.TextElementEnumerator> objects that represent the same string will be considered unequal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b15cb-131">En el ejemplo siguiente se usa el <xref:System.Globalization.TextElementEnumerator> clase para enumerar los elementos de texto de una cadena.</span><span class="sxs-lookup"><span data-stu-id="b15cb-131">The following example uses the <xref:System.Globalization.TextElementEnumerator> class to enumerate the text elements of a string.</span></span>  
  
 [!code-cpp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CPP/tee_summary.cpp#1)]
 [!code-csharp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CS/tee_summary.cs#1)]
 [!code-vb[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/VB/tee_summary.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.StringInfo" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Globalization.TextElementEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b15cb-132">Obtiene el elemento de texto actual de la cadena.</span><span class="sxs-lookup"><span data-stu-id="b15cb-132">Gets the current text element in the string.</span></span></summary>
        <value><span data-ttu-id="b15cb-133">Objeto que contiene el elemento de texto actual de la cadena.</span><span class="sxs-lookup"><span data-stu-id="b15cb-133">An object containing the current text element in the string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cb-134">Después de crea un enumerador o después de un <xref:System.Globalization.TextElementEnumerator.Reset%2A> se llama, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> debe llamarse para hacer avanzar el enumerador hasta el primer elemento de texto de la cadena antes de leer el valor de <xref:System.Globalization.TextElementEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cb-134">After an enumerator is created or after a <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.</span></span> <span data-ttu-id="b15cb-135">En caso contrario, <xref:System.Globalization.TextElementEnumerator.Current%2A> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="b15cb-135">Otherwise, <xref:System.Globalization.TextElementEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="b15cb-136"><xref:System.Globalization.TextElementEnumerator.Current%2A> también produce una excepción si la última llamada a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> devuelve `false`, lo que indica el final de la cadena.</span><span class="sxs-lookup"><span data-stu-id="b15cb-136"><xref:System.Globalization.TextElementEnumerator.Current%2A> also throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`, which indicates the end of the string.</span></span>  
  
 <span data-ttu-id="b15cb-137"><xref:System.Globalization.TextElementEnumerator.Current%2A> no se mueve la posición del enumerador y las llamadas consecutivas a <xref:System.Globalization.TextElementEnumerator.Current%2A> devuelven el mismo objeto hasta que <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> o <xref:System.Globalization.TextElementEnumerator.Reset%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="b15cb-137"><xref:System.Globalization.TextElementEnumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Globalization.TextElementEnumerator.Current%2A> return the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b15cb-138">El enumerador se sitúa antes del primer elemento de texto de la cadena o después del último.</span><span class="sxs-lookup"><span data-stu-id="b15cb-138">The enumerator is positioned before the first text element of the string or after the last text element.</span></span></exception>
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="ElementIndex">
      <MemberSignature Language="C#" Value="public int ElementIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementIndex" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementIndex : int" Usage="System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b15cb-139">Obtiene el índice del elemento de texto en el que está situado actualmente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="b15cb-139">Gets the index of the text element that the enumerator is currently positioned over.</span></span></summary>
        <value><span data-ttu-id="b15cb-140">Índice del elemento de texto en el que está situado actualmente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="b15cb-140">The index of the text element that the enumerator is currently positioned over.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b15cb-141">El enumerador se sitúa antes del primer elemento de texto de la cadena o después del último.</span><span class="sxs-lookup"><span data-stu-id="b15cb-141">The enumerator is positioned before the first text element of the string or after the last text element.</span></span></exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElement">
      <MemberSignature Language="C#" Value="public string GetTextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextElement () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextElement();" />
      <MemberSignature Language="F#" Value="member this.GetTextElement : unit -&gt; string" Usage="textElementEnumerator.GetTextElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b15cb-142">Obtiene el elemento de texto actual de la cadena.</span><span class="sxs-lookup"><span data-stu-id="b15cb-142">Gets the current text element in the string.</span></span></summary>
        <returns><span data-ttu-id="b15cb-143">Nueva cadena que contiene el elemento de texto actual de la cadena que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="b15cb-143">A new string containing the current text element in the string being read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cb-144">Este método devuelve el mismo elemento de texto como el <xref:System.Globalization.TextElementEnumerator.Current%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="b15cb-144">This method returns the same text element as the <xref:System.Globalization.TextElementEnumerator.Current%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b15cb-145">El enumerador se sitúa antes del primer elemento de texto de la cadena o después del último.</span><span class="sxs-lookup"><span data-stu-id="b15cb-145">The enumerator is positioned before the first text element of the string or after the last text element.</span></span></exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="textElementEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b15cb-146">Desplaza el enumerador al siguiente elemento de texto de la cadena.</span><span class="sxs-lookup"><span data-stu-id="b15cb-146">Advances the enumerator to the next text element of the string.</span></span></summary>
        <returns><span data-ttu-id="b15cb-147">Es <see langword="true" /> si el enumerador avanzó con éxito hasta el siguiente elemento de texto; y <see langword="false" /> si el enumerador alcanzó el final de la cadena.</span><span class="sxs-lookup"><span data-stu-id="b15cb-147"><see langword="true" /> if the enumerator was successfully advanced to the next text element; <see langword="false" /> if the enumerator has passed the end of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cb-148">Después de crea un enumerador o después de un <xref:System.Globalization.TextElementEnumerator.Reset%2A> es llama, el enumerador se coloca antes del primer elemento de texto de la cadena y la primera llamada a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> desplaza el enumerador hasta el primer elemento de texto de la cadena.</span><span class="sxs-lookup"><span data-stu-id="b15cb-148">After an enumerator is created or after a <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, the enumerator is positioned before the first text element of the string, and the first call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> moves the enumerator over the first text element of the string.</span></span>  
  
 <span data-ttu-id="b15cb-149">Si se modifica la cadena de una vez creado el enumerador, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="b15cb-149">If the string is modified after this enumerator was created, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> throws an exception.</span></span>  
  
 <span data-ttu-id="b15cb-150">Tras el final de la cadena, las siguientes llamadas a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> devolver `false` hasta <xref:System.Globalization.TextElementEnumerator.Reset%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="b15cb-150">After the end of the string is passed, subsequent calls to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> return `false` until <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="textElementEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b15cb-151">Establece el enumerador en su posición inicial (antes del primer elemento de texto de la cadena).</span><span class="sxs-lookup"><span data-stu-id="b15cb-151">Sets the enumerator to its initial position, which is before the first text element in the string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cb-152">El <xref:System.Globalization.TextElementEnumerator.Reset%2A> método mueve el enumerador al principio de la cadena, antes del primer elemento de texto.</span><span class="sxs-lookup"><span data-stu-id="b15cb-152">The <xref:System.Globalization.TextElementEnumerator.Reset%2A> method moves the enumerator to the beginning of the string, before the first text element.</span></span> <span data-ttu-id="b15cb-153">Después de llamar a <xref:System.Globalization.TextElementEnumerator.Reset%2A>, debe llamar a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> para hacer avanzar el enumerador hasta el primer elemento de texto de la cadena antes de llamar a <xref:System.Globalization.TextElementEnumerator.Current%2A> para leer el valor del primer elemento de texto.</span><span class="sxs-lookup"><span data-stu-id="b15cb-153">After calling <xref:System.Globalization.TextElementEnumerator.Reset%2A>, you must call <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> to advance the enumerator to the first text element of the string before calling <xref:System.Globalization.TextElementEnumerator.Current%2A> to read the value of the first text element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>
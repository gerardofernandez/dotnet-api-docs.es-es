<Type Name="DiscoveryServiceExtension" FullName="System.ServiceModel.Discovery.DiscoveryServiceExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e9faff290765e4c3d6ff0d236ce2818c02c1acc" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39936782" /></Metadata><TypeSignature Language="C#" Value="public abstract class DiscoveryServiceExtension : System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DiscoveryServiceExtension extends System.Object implements class System.ServiceModel.IExtension`1&lt;class System.ServiceModel.ServiceHostBase&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DiscoveryServiceExtension&#xA;Implements IExtension(Of ServiceHostBase)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DiscoveryServiceExtension abstract : System::ServiceModel::IExtension&lt;System::ServiceModel::ServiceHostBase ^&gt;" />
  <TypeSignature Language="F#" Value="type DiscoveryServiceExtension = class&#xA;    interface IExtension&lt;ServiceHostBase&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="4ef8d-101">Una clase de extensión de WCF abstracta para especificar un servicio de detección personalizado o para obtener los extremos publicados.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-101">An abstract WCF extension class for specifying a custom discovery service or for getting the published endpoints.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef8d-102">Derive una clase desde <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension> e invalide el método <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> para devolver el servicio de detección personalizado.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-102">Derive a class from <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension> and override the <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> method to return your custom discovery service.</span></span> <span data-ttu-id="4ef8d-103">Agregue la clase derivada a las extensiones <xref:System.ServiceModel.ServiceHost> que hospedan su servicio reconocible.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-103">Add your derived class to the <xref:System.ServiceModel.ServiceHost> extensions that host your discoverable service.</span></span> <span data-ttu-id="4ef8d-104">Cuando se llama a <xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A>, el comportamiento itera a través de las extensiones en el host del servicio y busca una clase <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension>.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-104">When the <xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A> is called the behavior iterates through the extensions in the service host and looks for a <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension>.</span></span> <span data-ttu-id="4ef8d-105">Si se encuentra uno, se llama a <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> para obtener el servicio de descarga personalizado.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-105">If one is found its <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> is called to get the custom discovery service.</span></span> <span data-ttu-id="4ef8d-106">Si no se encuentra una extensión, se utiliza la implementación del servicio de descarga predeterminado.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-106">If an extension is not found the default discovery service implementation is used.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DiscoveryServiceExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DiscoveryServiceExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ef8d-107">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" />.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Discovery.DiscoveryServiceExtension" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiscoveryService">
      <MemberSignature Language="C#" Value="protected abstract System.ServiceModel.Discovery.DiscoveryService GetDiscoveryService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Discovery.DiscoveryService GetDiscoveryService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetDiscoveryService () As DiscoveryService" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::ServiceModel::Discovery::DiscoveryService ^ GetDiscoveryService();" />
      <MemberSignature Language="F#" Value="abstract member GetDiscoveryService : unit -&gt; System.ServiceModel.Discovery.DiscoveryService" Usage="discoveryServiceExtension.GetDiscoveryService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Discovery.DiscoveryService</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ef8d-108">Invalide este método para devolver su implementación de <see cref="T:System.ServiceModel.Discovery.DiscoveryService" /> personalizada.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-108">Override this method to return your custom <see cref="T:System.ServiceModel.Discovery.DiscoveryService" /> implementation.</span></span></summary>
        <returns><span data-ttu-id="4ef8d-109">Una implementación del servicio de descarga personalizada.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-109">A custom discovery service implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef8d-110">Un <xref:System.InvalidOperationException> se produce al abrir el host de servicio si este método devuelve `null`</span><span class="sxs-lookup"><span data-stu-id="4ef8d-110">An <xref:System.InvalidOperationException> is thrown while opening the service host if this method returns `null`</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishedEndpoints">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt; PublishedEndpoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt; PublishedEndpoints" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublishedEndpoints As ReadOnlyCollection(Of EndpointDiscoveryMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ServiceModel::Discovery::EndpointDiscoveryMetadata ^&gt; ^ PublishedEndpoints { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ServiceModel::Discovery::EndpointDiscoveryMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublishedEndpoints : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;" Usage="System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ef8d-111">Obtiene una colección de solo lectura de puntos de conexión publicados.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-111">Gets a read-only collection of published endpoints.</span></span></summary>
        <value><span data-ttu-id="4ef8d-112">Una colección de solo lectura de extremos publicados.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-112">A read-only collection of published endpoints.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef8d-113">Se debería tener acceso a la propiedad únicamente después de que se haya abierto <xref:System.ServiceModel.ServiceHost> correctamente.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-113">The property should be accessed only after the <xref:System.ServiceModel.ServiceHost> has successfully opened.</span></span> <span data-ttu-id="4ef8d-114">Cuando la clase <xref:System.ServiceModel.ServiceHost> está en estado <xref:System.ServiceModel.CommunicationState.Opening>, la clase <xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata> se genera y agrega a la colección.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-114">When the <xref:System.ServiceModel.ServiceHost> is in <xref:System.ServiceModel.CommunicationState.Opening> state, the <xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata> is being generated and added to the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;.Attach">
      <MemberSignature Language="C#" Value="void IExtension&lt;ServiceHostBase&gt;.Attach (System.ServiceModel.ServiceHostBase owner);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;.Attach(class System.ServiceModel.ServiceHostBase owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension&lt;System#ServiceModel#ServiceHostBase&gt;#Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Sub Attach (owner As ServiceHostBase) Implements IExtension(Of ServiceHostBase).Attach" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;.Attach(System::ServiceModel::ServiceHostBase ^ owner) = System::ServiceModel::IExtension&lt;System::ServiceModel::ServiceHostBase ^&gt;::Attach;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.IExtension`1.Attach(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="4ef8d-115">El host del servicio al que se va a adjuntar la extensión.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-115">The service host to attach the extension to.</span></span></param>
        <summary><span data-ttu-id="4ef8d-116">Adjunta la extensión al host del servicio especificado.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-116">Attaches the extension to the specified service host.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;.Detach">
      <MemberSignature Language="C#" Value="void IExtension&lt;ServiceHostBase&gt;.Detach (System.ServiceModel.ServiceHostBase owner);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;.Detach(class System.ServiceModel.ServiceHostBase owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension&lt;System#ServiceModel#ServiceHostBase&gt;#Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Sub Detach (owner As ServiceHostBase) Implements IExtension(Of ServiceHostBase).Detach" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.IExtension&lt;System.ServiceModel.ServiceHostBase&gt;.Detach(System::ServiceModel::ServiceHostBase ^ owner) = System::ServiceModel::IExtension&lt;System::ServiceModel::ServiceHostBase ^&gt;::Detach;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.IExtension`1.Detach(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="4ef8d-117">El host del servicio del que desasociar.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-117">The service host to detach from.</span></span></param>
        <summary><span data-ttu-id="4ef8d-118">Sobrecargue este método para permitir desasociar la extensión de su host de servicio.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-118">Overload this method to allow the extension to be detached from its service host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef8d-119">La implementación de la clase base de este método produce una excepción <xref:System.InvalidOperationException>, que indica que no se pueden desasociar las extensiones de servicio de descarga.</span><span class="sxs-lookup"><span data-stu-id="4ef8d-119">The base class implementation of this method throws an <xref:System.InvalidOperationException> that indicates discovery service extensions cannot be detached.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="DirectoryEntries" FullName="System.DirectoryServices.DirectoryEntries">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8ea204b0a55c8bb59e04a3eb1fe2e9d6ffe147c9" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37763993" /></Metadata><TypeSignature Language="C#" Value="public class DirectoryEntries : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DirectoryEntries extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.DirectoryEntries" />
  <TypeSignature Language="VB.NET" Value="Public Class DirectoryEntries&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryEntries : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type DirectoryEntries = class&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1f966-101">Contiene una colección de objetos <see cref="T:System.DirectoryServices.DirectoryEntry" />.</span><span class="sxs-lookup"><span data-stu-id="1f966-101">Contains a collection of <see cref="T:System.DirectoryServices.DirectoryEntry" /> objects.</span></span></summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission"><see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
    <altmember cref="T:System.DirectoryServices.DirectoryEntry" />
    <altmember cref="P:System.DirectoryServices.DirectoryEntry.Children" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry Add (string name, string schemaClassName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.DirectoryEntry Add(string name, string schemaClassName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, schemaClassName As String) As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::DirectoryEntry ^ Add(System::String ^ name, System::String ^ schemaClassName);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; System.DirectoryServices.DirectoryEntry" Usage="directoryEntries.Add (name, schemaClassName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schemaClassName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1f966-102">Nombre de la nueva entrada.</span><span class="sxs-lookup"><span data-stu-id="1f966-102">The name of the new entry.</span></span></param>
        <param name="schemaClassName"><span data-ttu-id="1f966-103">Nombre del esquema utilizado para la nueva entrada.</span><span class="sxs-lookup"><span data-stu-id="1f966-103">The name of the schema that is used for the new entry.</span></span></param>
        <summary><span data-ttu-id="1f966-104">Crea una nueva entrada en el contenedor.</span><span class="sxs-lookup"><span data-stu-id="1f966-104">Creates a new entry in the container.</span></span></summary>
        <returns><span data-ttu-id="1f966-105">Objeto <see cref="T:System.DirectoryServices.DirectoryEntry" /> que representa la nueva entrada.</span><span class="sxs-lookup"><span data-stu-id="1f966-105">A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the new entry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f966-106">Debe llamar a la <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> método en la nueva entrada para realizar la creación permanentes.</span><span class="sxs-lookup"><span data-stu-id="1f966-106">You must call the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method on the new entry to make the creation permanent.</span></span> <span data-ttu-id="1f966-107">Cuando se llama a este método, a continuación, puede establecer los valores de propiedad obligatorio en la nueva entrada.</span><span class="sxs-lookup"><span data-stu-id="1f966-107">When you call this method, you can then set mandatory property values on the new entry.</span></span> <span data-ttu-id="1f966-108">Los proveedores tienen requisitos diferentes para las propiedades que deben establecerse antes de llamar a la <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> se realiza el método.</span><span class="sxs-lookup"><span data-stu-id="1f966-108">The providers each have different requirements for properties that need to be set before a call to the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method is made.</span></span> <span data-ttu-id="1f966-109">Si no se cumplen esos requisitos, el proveedor podría generar una excepción.</span><span class="sxs-lookup"><span data-stu-id="1f966-109">If those requirements are not met, the provider might throw an exception.</span></span> <span data-ttu-id="1f966-110">Póngase en contacto con su proveedor para determinar qué propiedades deben establecerse antes de confirmar los cambios.</span><span class="sxs-lookup"><span data-stu-id="1f966-110">Check with your provider to determine which properties must be set before committing changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f966-111">El siguiente ejemplo de Visual Basic .NET crea un nuevo <xref:System.DirectoryServices.DirectoryEntry> objeto con una ruta de acceso especificada, a continuación, crea una nueva entrada en el contenedor y lo guarda.</span><span class="sxs-lookup"><span data-stu-id="1f966-111">The following Visual Basic .NET example creates a new <xref:System.DirectoryServices.DirectoryEntry> object with a specified path, then creates a new entry in the container and saves it.</span></span>  
  
```vb  
Dim strPath As String = "IIS://localhost/W3SVC/1/Root"  
' Create a new 'DirectoryEntry' object with the given path.  
Dim myDE As New DirectoryEntry(strPath)  
Dim myEntries As DirectoryEntries = myDE.Children  
' Create a new entry 'Sample' in the container.  
Dim myDirectoryEntry As DirectoryEntry = myEntries.Add("CN=Sample", myDE.SchemaClassName)  
' Save changes of entry in the 'Active Directory Domain Services'.  
myDirectoryEntry.CommitChanges()  
Console.WriteLine(myDirectoryEntry.Name + " entry is created in container.")  
```  
  
 <span data-ttu-id="1f966-112">En el ejemplo de C# siguiente se crea un nuevo <xref:System.DirectoryServices.DirectoryEntry> objeto con una ruta de acceso especificada, a continuación, crea una nueva entrada en el contenedor y lo guarda.</span><span class="sxs-lookup"><span data-stu-id="1f966-112">The following C# example creates a new <xref:System.DirectoryServices.DirectoryEntry> object with a specified path, then creates a new entry in the container and saves it.</span></span>  
  
```csharp  
String strPath = "IIS://localhost/W3SVC/1/Root";  
  
// Create a new 'DirectoryEntry' object with the given path.  
DirectoryEntry myDE = new DirectoryEntry(strPath);  
DirectoryEntries myEntries = myDE.Children;  
  
// Create a new entry 'Sample' in the container.  
DirectoryEntry myDirectoryEntry =   
   myEntries.Add("CN=Sample", myDE.SchemaClassName);  
// Save changes of entry in the 'Active Directory Domain Services'.  
myDirectoryEntry.CommitChanges();  
Console.WriteLine (myDirectoryEntry.Name + " entry is created in container.");  
```  
  
 <span data-ttu-id="1f966-113">El siguiente ejemplo de C++ crea un nuevo <xref:System.DirectoryServices.DirectoryEntry> objeto con una ruta de acceso especificada, a continuación, crea una nueva entrada en el contenedor y lo guarda.</span><span class="sxs-lookup"><span data-stu-id="1f966-113">The following C++ example creates a new <xref:System.DirectoryServices.DirectoryEntry> object with a specified path, then creates a new entry in the container and saves it.</span></span>  
  
```cpp  
String* strPath = S"IIS://localhost/W3SVC/1/Root";  
  
// Create a new 'DirectoryEntry' object with the given path.  
DirectoryEntry* myDE = new DirectoryEntry(strPath);  
DirectoryEntries* myEntries = myDE->Children;  
  
// Create a new entry 'Sample' in the container.  
DirectoryEntry* myDirectoryEntry = myEntries->Add(S"CN=Sample", myDE->SchemaClassName);  
// Save changes of entry in the 'Active Directory Domain Services'.  
myDirectoryEntry->CommitChanges();  
Console::WriteLine("{0} entry is created in container.", myDirectoryEntry->Name);  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="1f966-114">Se produjo un error durante la llamada a la interfaz subyacente.</span><span class="sxs-lookup"><span data-stu-id="1f966-114">An error occurred during the call to the underlying interface.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f966-115">Devuelve un miembro de esta colección.</span><span class="sxs-lookup"><span data-stu-id="1f966-115">Returns a member of this collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry Find (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.DirectoryEntry Find(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntries.Find(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (name As String) As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::DirectoryEntry ^ Find(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Find : string -&gt; System.DirectoryServices.DirectoryEntry" Usage="directoryEntries.Find name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1f966-116">Contiene el nombre del objeto secundario que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="1f966-116">Contains the name of the child object for which to search.</span></span></param>
        <summary><span data-ttu-id="1f966-117">Devuelve el miembro de esta colección con el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="1f966-117">Returns the member of this collection with the specified name.</span></span></summary>
        <returns><span data-ttu-id="1f966-118"><see cref="T:System.DirectoryServices.DirectoryEntry" /> que representa el objeto secundario encontrado.</span><span class="sxs-lookup"><span data-stu-id="1f966-118">A <see cref="T:System.DirectoryServices.DirectoryEntry" /> that represents the child object that was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f966-119">Si los objetos secundarios de diferentes tipos tienen el mismo nombre, se devuelve el primer objeto secundario coincidente.</span><span class="sxs-lookup"><span data-stu-id="1f966-119">If child objects of different types have the same name, the first matching child object is returned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f966-120">El proveedor de servicios de Internet Information Server (IIS) no admite este método.</span><span class="sxs-lookup"><span data-stu-id="1f966-120">The Internet Information Services (IIS) provider does not support this method.</span></span> <span data-ttu-id="1f966-121">Usar sobrecargado <xref:System.DirectoryServices.DirectoryEntries.Find%2A> método y especifique una cadena vacía ("") para el `schemaClassName` parámetro.</span><span class="sxs-lookup"><span data-stu-id="1f966-121">Use the overloaded <xref:System.DirectoryServices.DirectoryEntries.Find%2A> method and specify an empty string ("") for the `schemaClassName` parameter.</span></span>  
>   
>  <span data-ttu-id="1f966-122">Si no se encuentra ningún resultado coincidente, un <xref:System.DirectoryServices.DirectoryServicesCOMException> con el error se produce código 0x2030.</span><span class="sxs-lookup"><span data-stu-id="1f966-122">If no matching result is found, a <xref:System.DirectoryServices.DirectoryServicesCOMException> with error code 0x2030 is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1f966-123">El objeto de Servicios de dominio de Active Directory no es un contenedor.</span><span class="sxs-lookup"><span data-stu-id="1f966-123">The Active Directory Domain Services object is not a container.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="1f966-124">Se produjo un error durante la llamada a la interfaz subyacente.</span><span class="sxs-lookup"><span data-stu-id="1f966-124">An error occurred during the call to the underlying interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry Find (string name, string schemaClassName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.DirectoryEntry Find(string name, string schemaClassName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (name As String, schemaClassName As String) As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::DirectoryEntry ^ Find(System::String ^ name, System::String ^ schemaClassName);" />
      <MemberSignature Language="F#" Value="member this.Find : string * string -&gt; System.DirectoryServices.DirectoryEntry" Usage="directoryEntries.Find (name, schemaClassName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schemaClassName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1f966-125">Nombre del objeto de directorio secundario que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="1f966-125">The name of the child directory object for which to search.</span></span></param>
        <param name="schemaClassName"><span data-ttu-id="1f966-126">Nombre de la clase del objeto de directorio secundario que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="1f966-126">The class name of the child directory object for which to search.</span></span></param>
        <summary><span data-ttu-id="1f966-127">Devuelve el miembro de esta colección con el nombre especificado y del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="1f966-127">Returns the member of this collection with the specified name and of the specified type.</span></span></summary>
        <returns><span data-ttu-id="1f966-128">Objeto <see cref="T:System.DirectoryServices.DirectoryEntry" /> que representa el objeto secundario encontrado.</span><span class="sxs-lookup"><span data-stu-id="1f966-128">A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the child object that was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f966-129">Si no se encuentra ningún resultado coincidente, un <xref:System.DirectoryServices.DirectoryServicesCOMException> con el error se produce código 0x2030.</span><span class="sxs-lookup"><span data-stu-id="1f966-129">If no matching result is found, a <xref:System.DirectoryServices.DirectoryServicesCOMException> with error code 0x2030 is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f966-130">El siguiente ejemplo de Visual Basic .NET crea un nuevo <xref:System.DirectoryServices.DirectoryEntry> objeto con la ruta de acceso especificada, a continuación, crea una nueva entrada en el contenedor y lo guarda.</span><span class="sxs-lookup"><span data-stu-id="1f966-130">The following Visual Basic .NET example creates a new <xref:System.DirectoryServices.DirectoryEntry> object with the specified path, then creates a new entry in the container and saves it.</span></span> <span data-ttu-id="1f966-131">Intenta recuperar la entrada recién creada.</span><span class="sxs-lookup"><span data-stu-id="1f966-131">It attempts to retrieve the newly created entry.</span></span>  
  
```vb  
Try  
     Dim myEntry1 As DirectoryEntry  
     Dim myEntry2 As DirectoryEntry  
     Dim strPath As String = "LDAP://DC=fabrikam,DC=com"  
  
     ' Create a 'DirectoryEntry' object with the given path.  
     Dim myDE As New DirectoryEntry(strPath)  
     Dim myEntries As DirectoryEntries = myDE.Children  
  
     ' Create a new entry in the container.  
     myEntry1 = myEntries.Add("CN=Sample Entry", myDE.SchemaClassName)  
     ' Save changes in the 'Active Directory Domain Services' store.  
     myEntry1.CommitChanges()  
  
     ' Find a child in the 'DirectoryEntries' collection which has the   
     ' specified name and type.  
     myEntry2 = myEntries.Find("CN=Sample Entry", myDE.SchemaClassName)  
     Console.WriteLine(myEntry2.Name + " is found in container.")  
  
     Catch e As Exception  
          Console.WriteLine("The following exception was raised : {0}", e.Message.ToString())  
     End Try  
```  
  
 <span data-ttu-id="1f966-132">En el ejemplo de C# siguiente se muestra cómo crear un nuevo <xref:System.DirectoryServices.DirectoryEntry> objeto con la ruta de acceso especificada, a continuación, crea una nueva entrada en el contenedor y lo guarda.</span><span class="sxs-lookup"><span data-stu-id="1f966-132">The following C# example shows how to create a new <xref:System.DirectoryServices.DirectoryEntry> object with the specified path, then creates a new entry in the container and saves it.</span></span> <span data-ttu-id="1f966-133">Intenta recuperar el recién-crea la entrada.</span><span class="sxs-lookup"><span data-stu-id="1f966-133">It attempts to retrieve the newly- created entry.</span></span>  
  
```csharp  
using System;  
using System.DirectoryServices;   
  
class MyClass1  
{  
   static void Main()  
   {  
      try  
      {          
         DirectoryEntry myEntry1;  
         DirectoryEntry myEntry2;  
         String strPath = "LDAP://DC=fabrikam,DC=com";  
  
         // Create a 'DirectoryEntry' object with the given path.  
         DirectoryEntry myDE = new DirectoryEntry(strPath);  
         DirectoryEntries myEntries = myDE.Children;  
  
         // Create a new entry in the container.  
         myEntry1 = myEntries.Add("CN=Sample Entry",myDE.SchemaClassName);  
         // Save changes in the 'Active Directory Domain Services' store.  
         myEntry1.CommitChanges();  
  
         // Find a child in the 'DirectoryEntries' collection which has the   
         // specified name and type.  
         myEntry2 = myEntries.Find("CN=Sample Entry",myDE.SchemaClassName);  
         Console.WriteLine (myEntry2.Name + " is found in container.");  
  
      }  
      catch(Exception e)  
      {  
         Console.WriteLine("The following exception was raised : {0}",e.Message);  
      }  
   }  
}  
  
```  
  
 <span data-ttu-id="1f966-134">El siguiente ejemplo de C++ crea un nuevo <xref:System.DirectoryServices.DirectoryEntry> objeto con la ruta de acceso especificada, a continuación, crea una nueva entrada en el contenedor y lo guarda.</span><span class="sxs-lookup"><span data-stu-id="1f966-134">The following C++ example creates a new <xref:System.DirectoryServices.DirectoryEntry> object with the specified path, then creates a new entry in the container and saves it.</span></span> <span data-ttu-id="1f966-135">Intenta recuperar la nueva entrada.</span><span class="sxs-lookup"><span data-stu-id="1f966-135">It attempts to retrieve the new entry.</span></span>  
  
```cpp  
#using <mscorlib.dll>  
#using <System.dll>  
#using <System.Directoryservices.dll>  
  
using namespace System;  
using namespace System::DirectoryServices;   
  
int main() {  
    try {          
        DirectoryEntry* myEntry1;  
        DirectoryEntry* myEntry2;  
        String* strPath = S"LDAP://DC=fabrikam,DC=com";  
  
        // Create a 'DirectoryEntry' object with the given path.  
        DirectoryEntry* myDE = new DirectoryEntry(strPath);  
        DirectoryEntries* myEntries = myDE->Children;  
  
        // Create a new entry in the container.  
        myEntry1 = myEntries->Add(S"CN=Sample Entry", myDE->SchemaClassName);  
        // Save changes in the 'Active Directory Domain Services' store.  
        myEntry1->CommitChanges();  
  
        // Find a child in the 'DirectoryEntries' collection which has the   
        // specified name and type.  
        myEntry2 = myEntries->Find(S"CN=Sample Entry", myDE->SchemaClassName);  
        Console::WriteLine ("{0} is found in container.", myEntry2->Name);  
    } catch(Exception* e) {  
        Console::WriteLine("The following exception was raised : {0}", e->Message);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1f966-136">El objeto de Servicios de dominio de Active Directory no es un contenedor.</span><span class="sxs-lookup"><span data-stu-id="1f966-136">The Active Directory Domain Services object is not a container.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="1f966-137">Se produjo un error durante la llamada a la interfaz subyacente.</span><span class="sxs-lookup"><span data-stu-id="1f966-137">An error occurred during the call to the underlying interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntries.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="directoryEntries.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f966-138">Devuelve un enumerador que procesa una iteración en la colección.</span><span class="sxs-lookup"><span data-stu-id="1f966-138">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="1f966-139">Objeto <see cref="T:System.Collections.IEnumerator" /> que puede usarse para recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="1f966-139">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.DirectoryServices.DirectoryEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.DirectoryServices.DirectoryEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (entry As DirectoryEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::DirectoryServices::DirectoryEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.DirectoryServices.DirectoryEntry -&gt; unit" Usage="directoryEntries.Remove entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.DirectoryServices.DirectoryEntry" />
      </Parameters>
      <Docs>
        <param name="entry"><span data-ttu-id="1f966-140">Nombre del objeto <see cref="T:System.DirectoryServices.DirectoryEntry" /> que se va a eliminar.</span><span class="sxs-lookup"><span data-stu-id="1f966-140">The name of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> object to delete.</span></span></param>
        <summary><span data-ttu-id="1f966-141">Elimina un miembro de esta colección.</span><span class="sxs-lookup"><span data-stu-id="1f966-141">Deletes a member of this collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f966-142">Si la entrada que se va a quitar es un contenedor, el contenedor debe estar vacío.</span><span class="sxs-lookup"><span data-stu-id="1f966-142">If the entry to be removed is a container, the container must be empty.</span></span> <span data-ttu-id="1f966-143">Para eliminar un contenedor y todos sus elementos secundarios, use el <xref:System.DirectoryServices.DirectoryEntry.DeleteTree%2A> método.</span><span class="sxs-lookup"><span data-stu-id="1f966-143">To delete a container and all its children, use the <xref:System.DirectoryServices.DirectoryEntry.DeleteTree%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f966-144">El siguiente ejemplo de Visual Basic .NET crea un nuevo <xref:System.DirectoryServices.DirectoryEntry> objeto con la ruta de acceso especificada, a continuación, crea una nueva entrada en el contenedor y lo guarda.</span><span class="sxs-lookup"><span data-stu-id="1f966-144">The following Visual Basic .NET example creates a new <xref:System.DirectoryServices.DirectoryEntry> object with the specified path, then creates a new entry in the container and saves it.</span></span> <span data-ttu-id="1f966-145">Por último, recupera la nueva entrada y lo elimina.</span><span class="sxs-lookup"><span data-stu-id="1f966-145">Finally, it retrieves the new entry and deletes it.</span></span>  
  
```vb  
Imports System  
Imports System.DirectoryServices  
  
Class MyClass1  
   Shared Sub Main()  
      Try  
         Dim strPath As String = "IIS://localhost/W3SVC/1/Root"  
         Dim strName As String = ""  
  
         ' Create a new 'DirectoryEntry' object with the given path.  
         Dim myDE As New DirectoryEntry(strPath)  
         Dim myEntries As DirectoryEntries = myDE.Children  
  
         ' Create a new entry 'Sample' in the container.  
         Dim myDirectoryEntry As DirectoryEntry = myEntries.Add("Sample", myDE.SchemaClassName)  
         ' Save changes of entry in the 'Active Directory Domain Services'.  
         myDirectoryEntry.CommitChanges()  
         Console.WriteLine(myDirectoryEntry.Name + " entry is created in container.")  
  
         ' Find 'Sample' entry in container.  
         myDirectoryEntry = myEntries.Find("Sample", myDE.SchemaClassName)  
         Console.WriteLine(myDirectoryEntry.Name + " found in container.")  
         ' Remove 'Sample' entry from container.  
         strName = myDirectoryEntry.Name  
         myEntries.Remove(myDirectoryEntry)  
         Console.WriteLine(strName + " entry is removed from container.")  
  
      Catch e As Exception  
         Console.WriteLine("The following exception was raised : {0}", e.Message.ToString())  
      End Try  
   End Sub 'Main  
End Class 'MyClass1  
  
```  
  
 <span data-ttu-id="1f966-146">En el ejemplo de C# siguiente se crea un nuevo <xref:System.DirectoryServices.DirectoryEntry> objeto con la ruta de acceso especificada, a continuación, crea una nueva entrada en el contenedor y lo guarda.</span><span class="sxs-lookup"><span data-stu-id="1f966-146">The following C# example creates a new <xref:System.DirectoryServices.DirectoryEntry> object with the specified path, then creates a new entry in the container and saves it.</span></span> <span data-ttu-id="1f966-147">Por último, recupera la nueva entrada y lo elimina.</span><span class="sxs-lookup"><span data-stu-id="1f966-147">Finally, it retrieves the new entry and deletes it.</span></span>  
  
```csharp  
using System;  
using System.DirectoryServices;   
  
class MyClass1  
{  
   static void Main()  
   {  
      try  
      {  
         String strPath = "IIS://localhost/W3SVC/1/Root";  
         String strName = "";  
  
         // Create a new 'DirectoryEntry' object with the given path.  
         DirectoryEntry myDE = new DirectoryEntry(strPath);  
         DirectoryEntries myEntries = myDE.Children;  
  
         // Create a new entry 'Sample' in the container.  
         DirectoryEntry myDirectoryEntry =   
            myEntries.Add("Sample", myDE.SchemaClassName);  
         // Save changes of entry in the 'Active Directory Domain Services'.  
         myDirectoryEntry.CommitChanges();  
         Console.WriteLine (myDirectoryEntry.Name +   
            " entry is created in container.");  
  
         // Find 'Sample' entry in container.  
         myDirectoryEntry = myEntries.Find("Sample", myDE.SchemaClassName);  
         Console.WriteLine(myDirectoryEntry.Name + " found in container.");  
         // Remove 'Sample' entry from container.  
         strName = myDirectoryEntry.Name;  
         myEntries.Remove(myDirectoryEntry);  
         Console.WriteLine(strName+ " entry is removed from container.");  
  
      }  
      catch(Exception e)  
      {  
         Console.WriteLine("The following exception was raised : {0}",  
            e.Message);  
      }  
   }  
}  
  
```  
  
 <span data-ttu-id="1f966-148">El siguiente ejemplo de C++ crea un nuevo <xref:System.DirectoryServices.DirectoryEntry> objeto con la ruta de acceso especificada, a continuación, crea una nueva entrada en el contenedor y lo guarda.</span><span class="sxs-lookup"><span data-stu-id="1f966-148">The following C++ example creates a new <xref:System.DirectoryServices.DirectoryEntry> object with the specified path, then creates a new entry in the container and saves it.</span></span> <span data-ttu-id="1f966-149">Por último, recupera la nueva entrada y lo elimina.</span><span class="sxs-lookup"><span data-stu-id="1f966-149">Finally, it retrieves the new entry and deletes it.</span></span>  
  
```cpp  
#using <mscorlib.dll>  
#using <System.dll>  
#using <System.Directoryservices.dll>  
  
using namespace System;  
using namespace System::DirectoryServices;   
  
int main() {  
    try {  
        String* strPath = S"IIS://localhost/W3SVC/1/Root";  
        String* strName = S"";  
  
        // Create a new 'DirectoryEntry' object with the given path.  
        DirectoryEntry* myDE = new DirectoryEntry(strPath);  
        DirectoryEntries* myEntries = myDE->Children;  
  
        // Create a new entry 'Sample' in the container.  
        DirectoryEntry* myDirectoryEntry =  myEntries->Add(S"Sample", myDE->SchemaClassName);  
        // Save changes of entry in the 'Active Directory Domain Services'.  
        myDirectoryEntry->CommitChanges();  
        Console::WriteLine(S"{0} entry is created in container.", myDirectoryEntry->Name);  
  
        // Find 'Sample' entry in container.  
        myDirectoryEntry = myEntries->Find(S"Sample", myDE->SchemaClassName);  
        Console::WriteLine(S"{0} found in container.", myDirectoryEntry->Name);  
        // Remove 'Sample' entry from container.  
        strName = myDirectoryEntry->Name;  
        myEntries->Remove(myDirectoryEntry);  
        Console::WriteLine(S"{0} entry is removed from container.", strName);  
    } catch(Exception* e) {  
        Console::WriteLine(S"The following exception was raised : {0}", e->Message);  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="1f966-150">Se produjo un error durante la llamada a la interfaz subyacente.</span><span class="sxs-lookup"><span data-stu-id="1f966-150">An error occurred during the call to the underlying interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaFilter">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SchemaNameCollection SchemaFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.SchemaNameCollection SchemaFilter" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectoryEntries.SchemaFilter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaFilter As SchemaNameCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SchemaNameCollection ^ SchemaFilter { System::DirectoryServices::SchemaNameCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaFilter : System.DirectoryServices.SchemaNameCollection" Usage="System.DirectoryServices.DirectoryEntries.SchemaFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SchemaNameCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f966-151">Obtiene los esquemas que especifican los objetos secundarios que están incluidos en la colección.</span><span class="sxs-lookup"><span data-stu-id="1f966-151">Gets the schemas that specify which child objects are contained in the collection.</span></span></summary>
        <value><span data-ttu-id="1f966-152"><see cref="T:System.DirectoryServices.SchemaNameCollection" /> que especifica los objetos secundarios que están incluidos en la instancia de <see cref="T:System.DirectoryServices.DirectoryEntries" />.</span><span class="sxs-lookup"><span data-stu-id="1f966-152">A <see cref="T:System.DirectoryServices.SchemaNameCollection" /> that specifies which child objects are contained in the <see cref="T:System.DirectoryServices.DirectoryEntries" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f966-153">Si el <xref:System.DirectoryServices.DirectoryEntries.SchemaFilter%2A> propiedad está vacía, los objetos secundarios de todos los tipos son visibles en la colección; en caso contrario, solo aquellos de los tipos especificados están visibles.</span><span class="sxs-lookup"><span data-stu-id="1f966-153">If the <xref:System.DirectoryServices.DirectoryEntries.SchemaFilter%2A> property is empty, child objects of all types are visible in the collection; otherwise, only those of the specified types are visible.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
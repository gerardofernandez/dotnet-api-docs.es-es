<Type Name="CryptoProvider" FullName="System.Security.RightsManagement.CryptoProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da52c0cce7a5105634c3fc618994d9c5b805aba0" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55407877" /></Metadata><TypeSignature Language="C#" Value="public class CryptoProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CryptoProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.CryptoProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CryptoProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoProvider : IDisposable" />
  <TypeSignature Language="F#" Value="type CryptoProvider = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2f0cc-101">Proporciona servicios de administración de derechos digitales para cifrar y descifrar contenido protegido.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-101">Provides digital rights management services for encrypting and decrypting protected content.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0cc-102"><xref:System.Security.RightsManagement.CryptoProvider> se crea como resultado de la <xref:System.Security.RightsManagement.UseLicense.Bind%2A> método cuando enlace un derechos administrados <xref:System.Security.RightsManagement.UseLicense> a un <xref:System.Security.RightsManagement.SecureEnvironment>.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-102"><xref:System.Security.RightsManagement.CryptoProvider> is created as a result of the <xref:System.Security.RightsManagement.UseLicense.Bind%2A> method when binding a rights managed <xref:System.Security.RightsManagement.UseLicense> to a <xref:System.Security.RightsManagement.SecureEnvironment>.</span></span>  
  
 <span data-ttu-id="2f0cc-103">Como ocurre con otros <xref:System.Security.RightsManagement> tipos, <xref:System.Security.RightsManagement.CryptoProvider> sólo es útil en aplicaciones de plena confianza.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-103">As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.CryptoProvider> is only usable in full trust applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0cc-104">El ejemplo siguiente muestra cómo usar el <xref:System.Security.RightsManagement.CryptoProvider> clase para crear un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-104">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider> class to create an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.RightsManagement.UseLicense" />
    <altmember cref="T:System.Security.RightsManagement.SecureEnvironment" />
  </Docs>
  <Members>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BlockSize : int" Usage="System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0cc-105">Obtiene el tamaño del bloque cifrado, en bytes.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-105">Gets the cipher block size, in bytes.</span></span></summary>
        <value><span data-ttu-id="2f0cc-106">Tamaño del bloque cifrado, en bytes.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-106">The cipher block size, in bytes.</span></span>  <span data-ttu-id="2f0cc-107">El tamaño de bloque predeterminado para Advanced Encryption Standard (AES) es 8.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-107">The default block size for Advanced Encryption Standard (AES) is 8.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0cc-108">El `clearText` y `cipherText` búferes pasados a <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> y <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> debe ser n \*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes de longitud, donde "n" es un entero mayor o igual que 1.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-108">The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n\*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.</span></span>  
  
 <span data-ttu-id="2f0cc-109">Si <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> es `false`, búferes pasados a <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> debe ser la misma longitud que los búferes pasados a <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-109">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `false`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span></span>  
  
 <span data-ttu-id="2f0cc-110">Si <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> es `true`, búferes pasados a <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> puede tener una longitud diferente de los búferes pasados a <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (todos los tamaños de búfer todavía siempre deben ser un múltiplo de <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes de longitud).</span><span class="sxs-lookup"><span data-stu-id="2f0cc-110">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `true`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).</span></span>  
  
 <span data-ttu-id="2f0cc-111">Un <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> de 1 indica que el cifrado es un cifrado de secuencias; un <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> de 2 o superior indica un cifrado por bloques.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-111">A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 1 indicates that the cipher is a stream cipher; a <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 2 or greater indicates a block cipher.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0cc-112">El ejemplo siguiente muestra cómo usar el <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> propiedad en la conversión de datos de texto sin cifrar en texto cifra datos.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-112">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property in converting clear-text data to encrypted-text data.</span></span>  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundGrants">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt; BoundGrants { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.RightsManagement.ContentGrant&gt; BoundGrants" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundGrants As ReadOnlyCollection(Of ContentGrant)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ BoundGrants { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundGrants : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;" Usage="System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0cc-113">Obtiene una colección que enumera los derechos que han pasado la comprobación y que se conceden al usuario.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-113">Gets a collection listing the rights that passed verification and that are granted to the user.</span></span></summary>
        <value><span data-ttu-id="2f0cc-114">Colección que enumera los derechos que han pasado la comprobación y que se conceden al usuario.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-114">A collection enumerating the rights that passed verification and that are granted to the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0cc-115">El ejemplo siguiente muestra cómo usar el <xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> propiedad para obtener una lista de derechos concedidos a través de un <xref:System.Security.RightsManagement.UseLicense>.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-115">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> property to obtain a list rights granted through a <xref:System.Security.RightsManagement.UseLicense>.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecrypt">
      <MemberSignature Language="C#" Value="public bool CanDecrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDecrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanDecrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanDecrypt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDecrypt : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0cc-116">Obtiene un valor que indica si el usuario tiene derechos para descifrar.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-116">Gets a value that indicates whether the user has rights to decrypt.</span></span></summary>
        <value><span data-ttu-id="2f0cc-117"><see langword="true" /> Si el <see cref="T:System.Security.RightsManagement.UseLicense" /> concede al usuario derechos para descifrar; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-117"><see langword="true" /> if the <see cref="T:System.Security.RightsManagement.UseLicense" /> grants the user rights to decrypt; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0cc-118"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> Devuelve `true` si el <xref:System.Security.RightsManagement.UseLicense> enlazados a este <xref:System.Security.RightsManagement.CryptoProvider> concede al usuario derechos de acceso de lectura, como ver, editar, imprimir o propietario.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-118"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns `true` if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user read access rights such as View, Edit, Print, or Owner.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0cc-119">El ejemplo siguiente muestra cómo usar el <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> propiedad para determinar si se permite el descifrado.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-119">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> property to determine if decryption is allowed.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanEncrypt">
      <MemberSignature Language="C#" Value="public bool CanEncrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEncrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanEncrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanEncrypt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEncrypt : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0cc-120">Obtiene un valor que indica si el usuario tiene derechos para cifrar.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-120">Gets a value that indicates whether the user has rights to encrypt.</span></span></summary>
        <value><span data-ttu-id="2f0cc-121"><see langword="true" /> Si el <see cref="T:System.Security.RightsManagement.UseLicense" /> concede al usuario derechos para cifrar; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-121"><see langword="true" /> if the <see cref="T:System.Security.RightsManagement.UseLicense" /> grants the user rights to encrypt; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0cc-122"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> Devuelve `true` si el <xref:System.Security.RightsManagement.UseLicense> enlazados a este <xref:System.Security.RightsManagement.CryptoProvider> concede al usuario derechos de acceso de escritura, como editar o propietario.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-122"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns `true` if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user write access rights such as Edit or Owner.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanMergeBlocks">
      <MemberSignature Language="C#" Value="public bool CanMergeBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMergeBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMergeBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMergeBlocks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanMergeBlocks : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0cc-123">Obtiene un valor que indica si <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> y <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> pueden aceptar búferes con tamaños de bloque de longitud diferente.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-123">Gets a value that indicates whether <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> and <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> can accept buffers that are different block sizes in length.</span></span></summary>
        <value><span data-ttu-id="2f0cc-124"><see langword="true" /> Si el búfer pasado a <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> puede tener una longitud diferente desde el búfer pasado a <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; en caso contrario, <see langword="false" /> si los búferes pasados a <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> y <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> debe ser exactamente la misma longitud.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-124"><see langword="true" /> if the buffer passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> can be a different length from the buffer passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; otherwise, <see langword="false" /> if the buffers passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> and <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> must be the exact same length.</span></span>  <span data-ttu-id="2f0cc-125">AES el valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-125">For AES the default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0cc-126">El `clearText` y `cipherText` búferes pasados a <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> y <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> debe ser n \*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes de longitud, donde "n" es un entero mayor o igual que 1.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-126">The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n\*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.</span></span>  
  
 <span data-ttu-id="2f0cc-127">Si <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> es `false`, búferes pasados a <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> debe ser la misma longitud que los búferes pasados a <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-127">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `false`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span></span>  
  
 <span data-ttu-id="2f0cc-128">Si <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> es `true`, búferes pasados a <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> puede tener una longitud diferente de los búferes pasados a <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (todos los tamaños de búfer todavía siempre deben ser un múltiplo de <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes de longitud).</span><span class="sxs-lookup"><span data-stu-id="2f0cc-128">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `true`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public byte[] Decrypt (byte[] cryptoText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Decrypt(unsigned int8[] cryptoText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrypt (cryptoText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ cryptoText);" />
      <MemberSignature Language="F#" Value="member this.Decrypt : byte[] -&gt; byte[]" Usage="cryptoProvider.Decrypt cryptoText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cryptoText"><span data-ttu-id="2f0cc-129">Texto cifrado que se va a descifrar.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-129">The cipher text to decrypt.</span></span></param>
        <summary><span data-ttu-id="2f0cc-130">Descifra texto cifrado para obtener texto no cifrado.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-130">Decrypts cipher text to clear text.</span></span></summary>
        <returns><span data-ttu-id="2f0cc-131">Texto descifrado de <paramref name="cryptoText" />.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-131">The decrypted clear text of <paramref name="cryptoText" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0cc-132">El ejemplo siguiente muestra cómo usar el <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> método para convertir los datos cifrados en datos sin cifrar.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-132">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> method to convert encrypted data to unencrypted data.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewdecrypt)]
 [!code-vb[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f0cc-133"><paramref name="cipherText" /> es null.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-133"><paramref name="cipherText" /> is null.</span></span></exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException"><span data-ttu-id="2f0cc-134">Derecho de descifrado no concedido.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-134">Decryption right not granted.</span></span></exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0cc-135">Libera los recursos que usa <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-135">Releases the resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cryptoProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0cc-136">Libera todos los recursos que usa <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-136">Releases all resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0cc-137"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> realiza <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(`true`).</span><span class="sxs-lookup"><span data-stu-id="2f0cc-137"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(`true`).</span></span>  
  
 <span data-ttu-id="2f0cc-138">Llame a <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> cuando haya terminado de usar <xref:System.Security.RightsManagement.CryptoProvider>.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-138">Call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> when you are finished using the <xref:System.Security.RightsManagement.CryptoProvider>.</span></span> <span data-ttu-id="2f0cc-139">El método <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> deja el <xref:System.Security.RightsManagement.CryptoProvider> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-139">The <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> method leaves the <xref:System.Security.RightsManagement.CryptoProvider> in an unusable state.</span></span> <span data-ttu-id="2f0cc-140">Después de llamar a <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, debe liberar todas las referencias a la <xref:System.Security.RightsManagement.CryptoProvider> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Security.RightsManagement.CryptoProvider> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-140">After calling <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, you must release all references to the <xref:System.Security.RightsManagement.CryptoProvider> so the garbage collector can reclaim the memory that the <xref:System.Security.RightsManagement.CryptoProvider> was occupying.</span></span> <span data-ttu-id="2f0cc-141">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="2f0cc-141">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2f0cc-142">Realice siempre una llamada a <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.Security.RightsManagement.CryptoProvider>.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-142">Always call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> before you release your last reference to the <xref:System.Security.RightsManagement.CryptoProvider>.</span></span> <span data-ttu-id="2f0cc-143">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.Security.RightsManagement.CryptoProvider> del objeto `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-143">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.RightsManagement.CryptoProvider> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cryptoProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="2f0cc-144">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-144"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="2f0cc-145">Libera los recursos no administrados que usa <see cref="T:System.Security.RightsManagement.CryptoProvider" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-145">Releases the unmanaged resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0cc-146">Este método se llama por el público `Dispose()` método y el <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-146">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="2f0cc-147">`Dispose()` invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-147">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="2f0cc-148"><xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-148"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="2f0cc-149">Cuando el `disposing` parámetro es true, este método libera todos los recursos mantenidos por los objetos administrados que este <xref:System.Security.RightsManagement.CryptoProvider> referencias.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-149">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.CryptoProvider> references.</span></span> <span data-ttu-id="2f0cc-150">Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-150">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2f0cc-151">
            <see langword="Dispose" /> puede recibir varias llamadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-151">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="2f0cc-152">Cuando se reemplaza <see langword="Dispose(Boolean)" /> tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-152">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="2f0cc-153">Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="2f0cc-153">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="2f0cc-154">Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [reemplazar el método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="2f0cc-154">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (byte[] clearText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(unsigned int8[] clearText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (clearText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ clearText);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : byte[] -&gt; byte[]" Usage="cryptoProvider.Encrypt clearText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clearText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="clearText"><span data-ttu-id="2f0cc-155">Contenido de texto no cifrado que se va a cifrar.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-155">The clear text content to encrypt.</span></span></param>
        <summary><span data-ttu-id="2f0cc-156">Cifra texto no cifrado para obtener texto cifrado.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-156">Encrypts clear text to cipher text.</span></span></summary>
        <returns><span data-ttu-id="2f0cc-157">Cifra texto cifrado del <paramref name="clearText" /> proporcionado.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-157">Encrypted cipher text of the given <paramref name="clearText" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0cc-158">La longitud en bytes de la `clearText` búfer debe ser un múltiplo del cifrado de <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-158">The byte length of the `clearText` buffer should be a multiple of the cipher <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property.</span></span>  
  
 <span data-ttu-id="2f0cc-159">El sistema de administración de derechos digitales usa AES cifrado por bloques.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-159">The digital rights management system uses AES block cipher.</span></span>  <span data-ttu-id="2f0cc-160">Con AES, bloques se cifran por separado, tal que los dos bloques de texto no cifrado idéntico generan resultados de texto de cifrado idénticos.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-160">With AES, blocks are encrypted independently such that two blocks of identical clear text produce identical cipher text results.</span></span>  <span data-ttu-id="2f0cc-161">Para minimizar las posibles amenazas de descifrado de cifrado de bloques independientes, las aplicaciones deberían emplear métodos para modificar el contenido, como la compresión, para evitar el cifrado de bloques de texto no cifrado idénticos.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-161">To minimize potential decryption threats from independent block encryption, applications should employ methods to modify content, such as compression, to avoid encrypting identical clear text blocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0cc-162">El ejemplo siguiente muestra cómo usar el <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> método para convertir datos de texto sin cifrar en texto cifra datos.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-162">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> method to convert clear-text data to encrypted-text data.</span></span>  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f0cc-163"><paramref name="clearText" /> es null.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-163"><paramref name="clearText" /> is null.</span></span></exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException"><span data-ttu-id="2f0cc-164">No se permite el cifrado.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-164">Encryption is not permitted.</span></span></exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CryptoProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CryptoProvider ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cryptoProvider.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0cc-165">Libera recursos y realiza la limpieza interna antes de que recopilación de elementos no utilizados reclame la instancia.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-165">Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0cc-166"><xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> realiza <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(`false`).</span><span class="sxs-lookup"><span data-stu-id="2f0cc-166"><xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(`false`).</span></span>  
  
 <span data-ttu-id="2f0cc-167">Este método invalida <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-167">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="2f0cc-168">Código de la aplicación no debe llamar a este método; un objeto `Finalize` método se invoca automáticamente durante la recolección de elementos no utilizados, a menos que se ha deshabilitado la finalización por el recolector de elementos no utilizados mediante una llamada a la <xref:System.GC.SuppressFinalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2f0cc-168">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="2f0cc-169">Para obtener más información, consulte [métodos de finalización y destructores](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md), y [reemplazar el método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="2f0cc-169">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
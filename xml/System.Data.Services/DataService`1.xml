<Type Name="DataService&lt;T&gt;" FullName="System.Data.Services.DataService&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2bdecb2ccf26527403496c91fb99f1dff9e71f9a" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53511622" /></Metadata><TypeSignature Language="C#" Value="public class DataService&lt;T&gt; : System.Data.Services.IRequestHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataService`1&lt;T&gt; extends System.Object implements class System.Data.Services.IRequestHandler" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.DataService`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DataService(Of T)&#xA;Implements IRequestHandler" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class DataService : System::Data::Services::IRequestHandler" />
  <TypeSignature Language="F#" Value="type DataService&lt;'T&gt; = class&#xA;    interface IRequestHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.Services.IRequestHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Allowed)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ServiceModel.ServiceBehavior(InstanceContextMode=System.ServiceModel.InstanceContextMode.PerCall)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="0b7cd-101">Tipo que define el servicio de datos.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-101">Type that defines the data service.</span></span></typeparam>
    <summary><span data-ttu-id="0b7cd-102">Punto de entrada principal para desarrollar un servicio de datos de ADO.NET.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-102">The main entry point for developing an ADO.NET Data Service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b7cd-103">La clase <xref:System.Data.Services.DataService%601> realiza la integración básica de todos los componentes del sistema servidor.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-103">The <xref:System.Data.Services.DataService%601> class does the basic integration of all components of the server system.</span></span> <span data-ttu-id="0b7cd-104">Un nuevo servicio de datos que utiliza valores predeterminados del sistema para la autorización y almacenamiento en caché se crea definiendo una clase que deriva de la clase <xref:System.Data.Services.DataService%601> y haciendo referencia a un modelo de datos compatible.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-104">A new data service that uses system defaults for authorization and caching is created by defining a class that derives from the <xref:System.Data.Services.DataService%601> class and by referencing a compatible data model.</span></span>  
  
 <span data-ttu-id="0b7cd-105">El tipo de <xref:System.Data.Services.DataService%601> debe exponer al menos una propiedad que devuelve un conjunto de entidades que es una colección <xref:System.Linq.IQueryable%601> de tipos de entidad.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-105">The type of the <xref:System.Data.Services.DataService%601> must expose at least one property that returns an entity set that is an <xref:System.Linq.IQueryable%601> collection of entity types.</span></span> <span data-ttu-id="0b7cd-106">Esta clase también debe implementar la interfaz <xref:System.Data.Services.IUpdatable> para permitir realizar actualizaciones en recursos de entidad.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-106">This class must also implement the <xref:System.Data.Services.IUpdatable> interface to enable updates to be made to entity resources.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b7cd-107">Crea un nuevo servicio de datos que implementa datos del tipo indicado por la clase de plantilla.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-107">Creates a new data service that deploys data of the type indicated by the template class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b7cd-108">Un nuevo servicio de datos que utiliza valores predeterminados del sistema para la autorización y almacenamiento en caché se crea definiendo una clase que deriva de la clase <xref:System.Data.Services.DataService%601> y haciendo referencia a un modelo de datos compatible.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-108">A new data service that uses system defaults for authorization and caching is created by defining a class that derives from the <xref:System.Data.Services.DataService%601> class and by referencing a compatible data model.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachHost">
      <MemberSignature Language="C#" Value="public void AttachHost (System.Data.Services.IDataServiceHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachHost(class System.Data.Services.IDataServiceHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.AttachHost(System.Data.Services.IDataServiceHost)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachHost (host As IDataServiceHost)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachHost(System::Data::Services::IDataServiceHost ^ host);" />
      <MemberSignature Language="F#" Value="member this.AttachHost : System.Data.Services.IDataServiceHost -&gt; unit" Usage="dataService.AttachHost host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.Data.Services.IDataServiceHost" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="0b7cd-109">Instancia de <see cref="T:System.Data.Services.IDataServiceHost" />.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-109">An instance of <see cref="T:System.Data.Services.IDataServiceHost" />.</span></span></param>
        <summary><span data-ttu-id="0b7cd-110">Adjunta el host del servicio de datos al servicio de datos identificado por el parámetro <paramref name="host" />.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-110">Attaches the data service host to the data service identified by the parameter <paramref name="host" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b7cd-111">El servicio de datos utiliza el host <xref:System.Data.Services.IDataServiceHost> adjunto para procesar solicitudes.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-111">The <xref:System.Data.Services.IDataServiceHost> host attached is used by the data service to process requests.</span></span> <span data-ttu-id="0b7cd-112">No hay ningún requisito para configurar un host cuando el servicio de datos se hospeda en Windows Communication Foundation (WCF).</span><span class="sxs-lookup"><span data-stu-id="0b7cd-112">There is no requirement to set up a host when the data service is hosted in Windows Communication Foundation (WCF).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSource">
      <MemberSignature Language="C#" Value="protected virtual T CreateDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !T CreateDataSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.CreateDataSource" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSource () As T" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual T CreateDataSource();" />
      <MemberSignature Language="F#" Value="abstract member CreateDataSource : unit -&gt; 'T&#xA;override this.CreateDataSource : unit -&gt; 'T" Usage="dataService.CreateDataSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b7cd-113">Crea un origen de datos de la clase de plantilla que será utilizada por el servicio de datos.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-113">Creates a data source of the template class that will be used by the data service.</span></span></summary>
        <returns><span data-ttu-id="0b7cd-114">Una instancia del origen de datos.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-114">An instance of the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b7cd-115">De forma predeterminada, se utilizará un constructor sin parámetros en el tipo si está disponible.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-115">By default, a constructor without parameters on the type will be used if available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDataSource">
      <MemberSignature Language="C#" Value="protected T CurrentDataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T CurrentDataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.DataService`1.CurrentDataSource" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentDataSource As T" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property T CurrentDataSource { T get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDataSource : 'T" Usage="System.Data.Services.DataService&lt;'T&gt;.CurrentDataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b7cd-116">Obtiene la instancia del origen de datos que se utiliza actualmente para procesar la solicitud.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-116">Gets the data source instance currently being used to process the request.</span></span></summary>
        <value><span data-ttu-id="0b7cd-117">La instancia del origen de datos para el servicio.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-117">The data source instance for the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b7cd-118">Una instancia de la clase de plantilla utilizada cuando se construyó la clase.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-118">An instance of the template class used when the class was constructed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleException">
      <MemberSignature Language="C#" Value="protected virtual void HandleException (System.Data.Services.HandleExceptionArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void HandleException(class System.Data.Services.HandleExceptionArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.HandleException(System.Data.Services.HandleExceptionArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub HandleException (args As HandleExceptionArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void HandleException(System::Data::Services::HandleExceptionArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member HandleException : System.Data.Services.HandleExceptionArgs -&gt; unit&#xA;override this.HandleException : System.Data.Services.HandleExceptionArgs -&gt; unit" Usage="dataService.HandleException args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Data.Services.HandleExceptionArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="0b7cd-119">Argumentos de excepción.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-119">Exception arguments.</span></span></param>
        <summary><span data-ttu-id="0b7cd-120">Se llama cuando se produce una excepción al procesar una solicitud.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-120">Called when an exception is raised while processing a request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b7cd-121">Un servicio de datos puede modificar la instancia de `args` para personalizar cómo se enviará la excepción en la respuesta.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-121">A data service may modify the `args` instance to customize how the exception will be sent in the response.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStartProcessingRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnStartProcessingRequest (System.Data.Services.ProcessRequestArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStartProcessingRequest(class System.Data.Services.ProcessRequestArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.OnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStartProcessingRequest (args As ProcessRequestArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStartProcessingRequest(System::Data::Services::ProcessRequestArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnStartProcessingRequest : System.Data.Services.ProcessRequestArgs -&gt; unit&#xA;override this.OnStartProcessingRequest : System.Data.Services.ProcessRequestArgs -&gt; unit" Usage="dataService.OnStartProcessingRequest args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Data.Services.ProcessRequestArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="0b7cd-122"><see cref="T:System.Data.Services.ProcessRequestArgs" /> que contiene información acerca de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-122"><see cref="T:System.Data.Services.ProcessRequestArgs" /> that contains information about the request.</span></span></param>
        <summary><span data-ttu-id="0b7cd-123">Se llama antes de procesar cada solicitud.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-123">Called before processing each request.</span></span> <span data-ttu-id="0b7cd-124">Para las solicitudes por lotes, se llama una vez para la solicitud por lotes superior y una vez para cada operación del lote.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-124">For batch requests, it is called one time for the top batch request and one time for each operation in the batch.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessingPipeline">
      <MemberSignature Language="C#" Value="public System.Data.Services.DataServiceProcessingPipeline ProcessingPipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Services.DataServiceProcessingPipeline ProcessingPipeline" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.DataService`1.ProcessingPipeline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessingPipeline As DataServiceProcessingPipeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::DataServiceProcessingPipeline ^ ProcessingPipeline { System::Data::Services::DataServiceProcessingPipeline ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessingPipeline : System.Data.Services.DataServiceProcessingPipeline" Usage="System.Data.Services.DataService&lt;'T&gt;.ProcessingPipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.DataServiceProcessingPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b7cd-125">Obtiene un objeto que define los eventos para el servicio de datos que procesa la canalización.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-125">Gets an object that defines the events for the data service processing pipeline.</span></span></summary>
        <value><span data-ttu-id="0b7cd-126">Un objeto <see cref="T:System.Data.Services.DataServiceProcessingPipeline" /> que se utiliza para definir los eventos del servicio de datos que procesa la canalización.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-126">A <see cref="T:System.Data.Services.DataServiceProcessingPipeline" /> object that is used to define events for the data service processing pipeline.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProcessRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.ProcessRequest" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessRequest ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessRequest();" />
      <MemberSignature Language="F#" Value="member this.ProcessRequest : unit -&gt; unit" Usage="dataService.ProcessRequest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b7cd-127">Procesa una solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-127">Processes an HTTP request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b7cd-128">Se debe invocar el método <xref:System.Data.Services.DataService%601.AttachHost%2A> antes de llamar a <xref:System.Data.Services.DataService%601.ProcessRequest%2A> para obtener información de solicitud y generar la respuesta.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-128">The <xref:System.Data.Services.DataService%601.AttachHost%2A> method should be invoked before you call <xref:System.Data.Services.DataService%601.ProcessRequest%2A> to get request information and build the response.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequestForMessage">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessRequestForMessage (System.IO.Stream messageBody);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessRequestForMessage(class System.IO.Stream messageBody) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.ProcessRequestForMessage(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessRequestForMessage (messageBody As Stream) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessRequestForMessage(System::IO::Stream ^ messageBody);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequestForMessage : System.IO.Stream -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessRequestForMessage : System.IO.Stream -&gt; System.ServiceModel.Channels.Message" Usage="dataService.ProcessRequestForMessage messageBody" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Services.IRequestHandler.ProcessRequestForMessage(System.IO.Stream)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBody" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="messageBody"><span data-ttu-id="0b7cd-129">El cuerpo de la solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-129">The body of the HTTP request.</span></span></param>
        <summary><span data-ttu-id="0b7cd-130">Procesa una solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-130">Processes an HTTP request.</span></span></summary>
        <returns><span data-ttu-id="0b7cd-131">Mensaje de respuesta.</span><span class="sxs-lookup"><span data-stu-id="0b7cd-131">Response message.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
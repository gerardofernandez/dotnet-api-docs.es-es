<Type Name="ExpandSegment" FullName="System.Data.Services.ExpandSegment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a658a17877546c7d39c2cdcf7e66e5e008f70df1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55398829" /></Metadata><TypeSignature Language="C#" Value="public class ExpandSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpandSegment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.ExpandSegment" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpandSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpandSegment" />
  <TypeSignature Language="F#" Value="type ExpandSegment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("ExpandSegment ({name},Filter={filter})]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7a4b2-101">Representa el segmento de una consulta que indica si los datos deben devolverse insertados en lugar de devolverlos como contenido diferido.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-101">The segment of a query that indicates whether data should be returned inline instead of as deferred content.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4b2-102">Un `$expand` cláusula indica que cada `$expand` se debe expandir completamente el elemento.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-102">An `$expand` clause indicates that each `$expand` item should be fully expanded.</span></span> <span data-ttu-id="7a4b2-103">Por ejemplo, el valor `OrderLines.Product.Image` con `$expand` hace `OrderLines`, el `Product` de cada elemento de `OrderLines`y el `Image` de la `Product` de cada elemento de `OrderLines` que debe expandirse.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-103">For example, the value `OrderLines.Product.Image` with `$expand` causes `OrderLines`, the `Product` of each element in `OrderLines`, and the `Image` of the `Product` of each element in `OrderLines` to be expanded.</span></span>  
  
 <span data-ttu-id="7a4b2-104">La propiedad más a la izquierda en un `$expand` cláusula debe ser una propiedad del tipo de entidad en el conjunto de entidades identificado por el último segmento de ruta de acceso del URI de solicitud.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-104">The left-most property in an `$expand` clause must be a property on the entity type within the entity set identified by the last path segment in the request URI.</span></span>  
  
 <span data-ttu-id="7a4b2-105">Cláusula de expansión redundantes reglas son aceptables y se omiten.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-105">Redundant expand clause rules are acceptable and ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a4b2-106">El siguiente URI se expande el `OrderLines` asociadas a cada `Order` devueltos por la consulta.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-106">The following URI expands the `OrderLines` associated with each `Order` returned by the query.</span></span>  
  
```  
http://host/service.svc/Orders?$expand=OrderLines  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpandSegment (string name, System.Linq.Expressions.Expression filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Linq.Expressions.Expression filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, filter As Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpandSegment(System::String ^ name, System::Linq::Expressions::Expression ^ filter);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.ExpandSegment : string * System.Linq.Expressions.Expression -&gt; System.Data.Services.ExpandSegment" Usage="new System.Data.Services.ExpandSegment (name, filter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7a4b2-107">Nombre de la propiedad que se va a expandir.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-107">The name of the property to be expanded.</span></span></param>
        <param name="filter"><span data-ttu-id="7a4b2-108">Opción de filtro en la consulta a la que se aplica el segmento de expansión.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-108">The filter option in the query to which the expand segment applies.</span></span></param>
        <summary><span data-ttu-id="7a4b2-109">Inicializa un objeto <see cref="T:System.Data.Services.ExpandSegment" /> con el nombre de propiedad especificado y una expresión de filtrado, posiblemente null.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-109">Initializes an <see cref="T:System.Data.Services.ExpandSegment" /> object with the specified property name and a filtering expression, possibly null.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandedProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Providers.ResourceProperty ExpandedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Services.Providers.ResourceProperty ExpandedProperty" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegment.ExpandedProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpandedProperty As ResourceProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Providers::ResourceProperty ^ ExpandedProperty { System::Data::Services::Providers::ResourceProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpandedProperty : System.Data.Services.Providers.ResourceProperty" Usage="System.Data.Services.ExpandSegment.ExpandedProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Providers.ResourceProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a4b2-110">Obtiene la propiedad que se va a expandir.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-110">Gets the property to be expanded.</span></span></summary>
        <value><span data-ttu-id="7a4b2-111">Propiedad que va a expandirse.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-111">The property to expand.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression Filter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegment.Filter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Filter As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression ^ Filter { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Linq.Expressions.Expression" Usage="System.Data.Services.ExpandSegment.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a4b2-112">Opción de filtro en la consulta a la que se aplica el segmento de expansión.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-112">The filter option in the query to which the expand segment applies.</span></span></summary>
        <value><span data-ttu-id="7a4b2-113">Expresión que especifica el filtro en los datos de destino.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-113">An expression that specifies the filter on target data.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFilter">
      <MemberSignature Language="C#" Value="public bool HasFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFilter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegment.HasFilter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFilter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFilter : bool" Usage="System.Data.Services.ExpandSegment.HasFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a4b2-114">Obtiene un valor que indica si la instrucción de expansión se utiliza con una expresión de filtro.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-114">Gets a value that indicates whether the expand statement is used with a filter expression.</span></span></summary>
        <value><span data-ttu-id="7a4b2-115"><see langword="true" /> Si la instrucción de expansión se utiliza con una expresión de filtro; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-115"><see langword="true" /> if the expand statement is used with a filter expression; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResultsExpected">
      <MemberSignature Language="C#" Value="public int MaxResultsExpected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResultsExpected" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegment.MaxResultsExpected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxResultsExpected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxResultsExpected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxResultsExpected : int" Usage="System.Data.Services.ExpandSegment.MaxResultsExpected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a4b2-116">Obtiene el número máximo de resultados esperados.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-116">Gets the maximum number of results expected.</span></span></summary>
        <value><span data-ttu-id="7a4b2-117">Valor entero que indica el número máximo de resultados.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-117">The integer value that indicates maximum number of results.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a4b2-118">Para habilitar el servicio de datos detectar un error para satisfacer esta restricción, expanda los proveedores debe devolver no más de <xref:System.Data.Services.ExpandSegment.MaxResultsExpected%2A> + 1 elementos.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-118">To enable the data service to detect a failure to meet this constraint, expand providers should return no more than <xref:System.Data.Services.ExpandSegment.MaxResultsExpected%2A> + 1 elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegment.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Services.ExpandSegment.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a4b2-119">Nombre de la propiedad que se va a expandir.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-119">The name of the property to be expanded.</span></span></summary>
        <value><span data-ttu-id="7a4b2-120">Valor de cadena que contiene el nombre de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-120">A string value containing the name of the property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathHasFilter">
      <MemberSignature Language="C#" Value="public static bool PathHasFilter (System.Collections.Generic.IEnumerable&lt;System.Data.Services.ExpandSegment&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool PathHasFilter(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Services.ExpandSegment&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PathHasFilter (path As IEnumerable(Of ExpandSegment)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool PathHasFilter(System::Collections::Generic::IEnumerable&lt;System::Data::Services::ExpandSegment ^&gt; ^ path);" />
      <MemberSignature Language="F#" Value="static member PathHasFilter : seq&lt;System.Data.Services.ExpandSegment&gt; -&gt; bool" Usage="System.Data.Services.ExpandSegment.PathHasFilter path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Services.ExpandSegment&gt;" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="7a4b2-121">Enumeración de los segmentos en los que se va a comprobar si hay filtros.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-121">The enumeration of segments to check for filters.</span></span></param>
        <summary><span data-ttu-id="7a4b2-122">Devuelve un valor que indica si la ruta de acceso incluye una opción de filtro en los datos de destino.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-122">Returns a value that indicates whether the path includes a filter option on target data.</span></span></summary>
        <returns><span data-ttu-id="7a4b2-123">Es <see langword="true" /> si alguno de los segmentos en la ruta de acceso tiene un filtro; de lo contrario es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7a4b2-123"><see langword="true" /> if any of the segments in the path has a filter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
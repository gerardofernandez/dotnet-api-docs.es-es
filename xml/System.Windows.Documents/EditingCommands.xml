<Type Name="EditingCommands" FullName="System.Windows.Documents.EditingCommands">
  <Metadata><Meta Name="ms.openlocfilehash" Value="84b5572cf9ba0ae76ee1c5c3bb7375f8ce499c04" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37521579" /></Metadata><TypeSignature Language="C#" Value="public static class EditingCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EditingCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.EditingCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type EditingCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d59bd-101">Proporciona un conjunto estándar de comandos relacionados con la edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-101">Provides a standard set of editing related commands.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-102">La siguiente tabla muestra los comandos de edición y el valor predeterminado asociado gestos claves (con nombres de clave desde el <xref:System.Windows.Input.Key> y <xref:System.Windows.Input.ModifierKeys> enumeraciones).</span><span class="sxs-lookup"><span data-stu-id="d59bd-102">The following table shows the editing commands and the associated default key gestures (with key names from the <xref:System.Windows.Input.Key> and <xref:System.Windows.Input.ModifierKeys> enumerations).</span></span>  
  
|<span data-ttu-id="d59bd-103">Comando de edición</span><span class="sxs-lookup"><span data-stu-id="d59bd-103">Editing command</span></span>|<span data-ttu-id="d59bd-104">Gesto de teclas predeterminado</span><span class="sxs-lookup"><span data-stu-id="d59bd-104">Default key gesture</span></span>|  
|---------------------|-------------------------|  
|<xref:System.Windows.Documents.EditingCommands.AlignCenter%2A>|`Ctrl`+`E`|  
|<xref:System.Windows.Documents.EditingCommands.AlignJustify%2A>|`Ctrl`+`J`|  
|<xref:System.Windows.Documents.EditingCommands.AlignLeft%2A>|`Ctrl`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.AlignRight%2A>|`Ctrl`+`R`|  
|<xref:System.Windows.Documents.EditingCommands.Backspace%2A>|`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A>|<span data-ttu-id="d59bd-105">ningún gesto de teclas predeterminado</span><span class="sxs-lookup"><span data-stu-id="d59bd-105">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A>|`Ctrl`+`OemOpenBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>|`Ctrl`+`Shift`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.Delete%2A>|`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A>|`Ctrl`+`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A>|`Ctrl`+`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A>|`Shift`+`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A>|`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A>|<span data-ttu-id="d59bd-106">ningún gesto de teclas predeterminado</span><span class="sxs-lookup"><span data-stu-id="d59bd-106">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A>|`Ctrl`+`OemCloseBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>|`Ctrl`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A>|`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A>|`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A>|`Ctrl`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>|`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A>|`Ctrl`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A>|`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A>|`Ctrl`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>|`Ctrl`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>|`Ctrl`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A>|`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A>|`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A>|`Up`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A>|`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A>|`Ctrl`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A>|`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A>|`Shift`+`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A>|`Ctrl`+`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>|`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>|`Ctrl`+`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A>|`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>|`Ctrl`+`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A>|`Ctrl`+`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A>|`Ctrl`+`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A>|`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A>|`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A>|`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A>|`Shift`+`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A>|`Ctrl`+`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.TabBackward%2A>|`Shift`+`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.TabForward%2A>|`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBold%2A>|`Ctrl`+`B`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A>|`Ctrl`+`Shift`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A>|`Insert`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A>|`Ctrl`+`I`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A>|`Ctrl`+`Shift`+`N`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A>|`Ctrl`+`OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A>|`Ctrl`+`Shift+OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A>|`Ctrl`+`U`|  
  
 <span data-ttu-id="d59bd-107">Comandos de movimiento de símbolo de intercalación y selección de expansión de los comandos comparten un conjunto común de movimientos de claves de forma predeterminada, la diferencia general que se va a la adición de la <xref:System.Windows.Input.ModifierKeys.Shift> clave para diferenciar los comandos de selección de los comandos de movimiento de símbolo de intercalación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-107">Caret movement commands and selection expanding commands share a common set of default key gestures, the general difference being the addition of the <xref:System.Windows.Input.ModifierKeys.Shift> key to differentiate selection commands from caret movement commands.</span></span>  <span data-ttu-id="d59bd-108">Por ejemplo, el <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> comando tiene un gesto de teclas predeterminado de <xref:System.Windows.Input.Key.Left>y la correspondiente <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> comando tiene un gesto de teclas predeterminado de <xref:System.Windows.Input.ModifierKeys.Shift> + <xref:System.Windows.Input.Key.Left>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-108">For example, the <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.Key.Left>, and the corresponding <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.ModifierKeys.Shift>+<xref:System.Windows.Input.Key.Left>.</span></span>  
  
 <span data-ttu-id="d59bd-109">En general, las definiciones de comando proporcionan por el <xref:System.Windows.Documents.EditingCommands> clase no realice el uso de parámetros del comando (el `parameter` parámetro esperado por el <xref:System.Windows.Input.ICommand.Execute%2A> método).</span><span class="sxs-lookup"><span data-stu-id="d59bd-109">In general, the command definitions provided by the <xref:System.Windows.Documents.EditingCommands> class do not make use of command parameters (the `parameter` parameter expected by the <xref:System.Windows.Input.ICommand.Execute%2A> method).</span></span>  
  
 <span data-ttu-id="d59bd-110">Para obtener más información sobre los comandos y los comandos, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d59bd-110">For more information on commands and commanding, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-111">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-111">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-112">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-112">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-113">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-113">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-114">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-114">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-115">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-115">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-116">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-116">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-117">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-117">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-118">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-118">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
  </Docs>
  <Members>
    <Member MemberName="AlignCenter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignCenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignCenter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignCenter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignCenter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-119">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />, que solicita que se centre el párrafo actual o una selección de párrafos.</span><span class="sxs-lookup"><span data-stu-id="d59bd-119">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> command, which requests that the current paragraph or a selection of paragraphs be centered.</span></span></summary>
        <value><span data-ttu-id="d59bd-120">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-120">The requested command.</span></span>  <span data-ttu-id="d59bd-121">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="E" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-121">The default key gesture for this command is <see langword="Ctrl" />+<see langword="E" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-122">Este comando funciona en el <xref:System.Windows.Documents.Paragraph> nivel.</span><span class="sxs-lookup"><span data-stu-id="d59bd-122">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="d59bd-123">Si se invoca este comando en una selección parcial del contenido dentro de un párrafo (incluida una selección vacía donde el símbolo de intercalación está dentro de un párrafo), el efecto solicitado se aplica a todo el párrafo.</span><span class="sxs-lookup"><span data-stu-id="d59bd-123">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="d59bd-124">Si se invoca este comando en una selección que abarca varios párrafos, el efecto se aplica a todo el contenido de cada párrafo que participa en la selección.</span><span class="sxs-lookup"><span data-stu-id="d59bd-124">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="d59bd-125">En la siguiente ilustración se muestra un ejemplo de contenido centrado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-125">The following figure shows an example of centered content.</span></span>  
  
 <span data-ttu-id="d59bd-126">![Captura de pantalla: Valor de propiedad TextAlign de Center](~/add/media/flowdoc-textalign-center.png "captura de pantalla: valor de propiedad TextAlign de Center")</span><span class="sxs-lookup"><span data-stu-id="d59bd-126">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="d59bd-127">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-127">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignCenter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-128">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-128">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignCenter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-129">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-129">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-130">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-130">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-131">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-131">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-132">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-132">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-133">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-133">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-134">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-134">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-135">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-135">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-136">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-136">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignJustify">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignJustify { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignJustify" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignJustify As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignJustify { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignJustify : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-137">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />, que solicita que se justifique el párrafo actual o una selección de párrafos.</span><span class="sxs-lookup"><span data-stu-id="d59bd-137">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> command, which requests that the current paragraph or a selection of paragraphs be justified.</span></span></summary>
        <value><span data-ttu-id="d59bd-138">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-138">The requested command.</span></span>  <span data-ttu-id="d59bd-139">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="J" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-139">The default key gesture for this command is <see langword="Ctrl" />+<see langword="J" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-140">Este comando funciona en el <xref:System.Windows.Documents.Paragraph> nivel.</span><span class="sxs-lookup"><span data-stu-id="d59bd-140">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="d59bd-141">Si se invoca este comando en una selección parcial del contenido dentro de un párrafo (incluida una selección vacía donde el símbolo de intercalación está dentro de un párrafo), el efecto solicitado se aplica a todo el párrafo.</span><span class="sxs-lookup"><span data-stu-id="d59bd-141">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="d59bd-142">Si se invoca este comando en una selección que abarca varios párrafos, el efecto se aplica a todos los párrafos de la selección.</span><span class="sxs-lookup"><span data-stu-id="d59bd-142">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to all the paragraphs in the selection.</span></span>  
  
 <span data-ttu-id="d59bd-143">Cuando se justifica el contenido, el espaciado horizontal dentro de cada línea del contenido se ajusta para que las líneas justificadas son de ancho igual o casi igual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-143">When content is justified, the horizontal spacing within each line of content is adjusted so that the justified lines are of equal or near-equal width.</span></span>  <span data-ttu-id="d59bd-144">Normalmente se justifica el contenido para crear bordes suavizados en los lados del contenido.</span><span class="sxs-lookup"><span data-stu-id="d59bd-144">Content is typically justified to create smooth edges on the sides of the content.</span></span>  
  
 <span data-ttu-id="d59bd-145">Dado que a menudo es más corto que el resto, la última línea de un párrafo puede quedarse sin justificar después de invoca este comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-145">Because it is often shorter than the rest, the last line in a paragraph may remain unjustified after this command is invoked.</span></span>  
  
 <span data-ttu-id="d59bd-146">La siguiente ilustración muestra justificado contenido (alineados a la izquierda).</span><span class="sxs-lookup"><span data-stu-id="d59bd-146">The following figure shows unjustified (left-aligned) content.</span></span>  
  
 <span data-ttu-id="d59bd-147">![Captura de pantalla: El contenido no está justificado](~/add/media/content-unjustified.png "captura de pantalla: contenido no está justificado")</span><span class="sxs-lookup"><span data-stu-id="d59bd-147">![Screenshot: Content is unjustified](~/add/media/content-unjustified.png "Screenshot: Content is unjustified")</span></span>  
  
 <span data-ttu-id="d59bd-148">La siguiente ilustración muestra el mismo contenido una vez que se ha justificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-148">The following figure shows the same content after it has been justified.</span></span>  
  
 <span data-ttu-id="d59bd-149">![Texto justificado a la captura de pantalla de contenido](~/add/media/content-justified.png "texto justificado a la captura de pantalla de contenido")</span><span class="sxs-lookup"><span data-stu-id="d59bd-149">![Screenshot of content justified text](~/add/media/content-justified.png "Screenshot of content justified text")</span></span>  
  
 <span data-ttu-id="d59bd-150">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-150">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-151">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-151">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignJustify"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-152">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-152">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignJustify"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-153">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-153">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-154">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-154">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-155">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-155">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-156">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-156">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-157">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-157">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-158">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-158">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-159">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-159">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-160">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-160">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignLeft : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-161">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />, que solicita que una selección de contenido se alinee a la izquierda.</span><span class="sxs-lookup"><span data-stu-id="d59bd-161">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> command, which requests that a selection of content be aligned left.</span></span></summary>
        <value><span data-ttu-id="d59bd-162">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-162">The requested command.</span></span>  <span data-ttu-id="d59bd-163">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="L" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-163">The default key gesture for this command is <see langword="Ctrl" />+<see langword="L" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-164">Este comando funciona en el <xref:System.Windows.Documents.Paragraph> nivel.</span><span class="sxs-lookup"><span data-stu-id="d59bd-164">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="d59bd-165">Si se invoca este comando en una selección parcial del contenido dentro de un párrafo (incluida una selección vacía donde el símbolo de intercalación está dentro de un párrafo), el efecto solicitado se aplica a todo el párrafo.</span><span class="sxs-lookup"><span data-stu-id="d59bd-165">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="d59bd-166">Si se invoca este comando en una selección que abarca varios párrafos, el efecto se aplica a todo el contenido de cada párrafo que participa en la selección.</span><span class="sxs-lookup"><span data-stu-id="d59bd-166">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="d59bd-167">En la siguiente ilustración se muestra un ejemplo de contenido alineado a la izquierda.</span><span class="sxs-lookup"><span data-stu-id="d59bd-167">The following figure shows an example of left-aligned content.</span></span>  
  
 <span data-ttu-id="d59bd-168">![Captura de pantalla: Valor de propiedad TextAlign de izquierda](~/add/media/flowdoc-textalign-left.png "captura de pantalla: valor de propiedad TextAlign de izquierda")</span><span class="sxs-lookup"><span data-stu-id="d59bd-168">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="d59bd-169">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-169">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-170">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-170">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignLeft"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-171">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-171">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignLeft"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-172">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-172">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-173">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-173">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-174">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-174">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-175">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-175">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-176">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-176">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-177">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-177">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-178">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-178">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-179">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-179">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignRight : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-180">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" />, que solicita que una selección de contenido se alinee a la derecha.</span><span class="sxs-lookup"><span data-stu-id="d59bd-180">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> command, which requests that a selection of content be aligned right.</span></span></summary>
        <value><span data-ttu-id="d59bd-181">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-181">The requested command.</span></span>  <span data-ttu-id="d59bd-182">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="R" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-182">The default key gesture for this command is <see langword="Ctrl" />+<see langword="R" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-183">Este comando funciona en el <xref:System.Windows.Documents.Paragraph> nivel.</span><span class="sxs-lookup"><span data-stu-id="d59bd-183">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="d59bd-184">Si se invoca este comando en una selección parcial del contenido dentro de un párrafo (incluida una selección vacía donde el símbolo de intercalación está dentro de un párrafo), el efecto solicitado se aplica a todo el párrafo.</span><span class="sxs-lookup"><span data-stu-id="d59bd-184">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="d59bd-185">Si se invoca este comando en una selección que abarca varios párrafos, el efecto se aplica a todo el contenido de cada párrafo que participa en la selección.</span><span class="sxs-lookup"><span data-stu-id="d59bd-185">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="d59bd-186">En la siguiente ilustración se muestra un ejemplo de contenido alineado a la derecha.</span><span class="sxs-lookup"><span data-stu-id="d59bd-186">The following figure shows an example of right-aligned content.</span></span>  
  
 <span data-ttu-id="d59bd-187">![Captura de pantalla: Valor de propiedad TextAlign de derecha](~/add/media/flowdoc-textalign-right.png "captura de pantalla: valor de Right de propiedad TextAlign")</span><span class="sxs-lookup"><span data-stu-id="d59bd-187">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="d59bd-188">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-188">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-189">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-189">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignRight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-190">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-190">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignRight"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-191">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-191">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-192">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-192">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-193">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-193">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-194">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-194">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-195">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-195">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-196">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-196">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-197">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-197">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-198">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-198">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="Backspace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Backspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Backspace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Backspace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Backspace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Backspace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Backspace : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Backspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-199">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.Backspace" />, que solicita que se aplique un retroceso en la posición actual o encima de la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-199">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> command, which requests that a backspace be entered at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="d59bd-200">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-200">The requested command.</span></span>  <span data-ttu-id="d59bd-201">El gesto de tecla predeterminado para este comando es <see langword="Backspace" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-201">The default key gesture for this command is <see langword="Backspace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-202">Cuando se invoca en una selección vacía, este comando elimina el carácter o separador de párrafo justo antes del símbolo de intercalación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-202">When invoked on an empty selection, this command deletes the character or paragraph separator just before the caret.</span></span> <span data-ttu-id="d59bd-203">Cuando se invoca en una selección no vacía, este comando elimina la selección.</span><span class="sxs-lookup"><span data-stu-id="d59bd-203">When invoked on a non-empty selection, this command deletes the selection.</span></span>  
  
 <span data-ttu-id="d59bd-204">Este comando mantiene el formato de la selección eliminada para el contenido que se inserte en la misma ubicación inmediatamente después de invoca este comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-204">This command retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  <span data-ttu-id="d59bd-205">Compare con la <xref:System.Windows.Documents.EditingCommands.Delete%2A> comando, que no mantiene el formato anterior.</span><span class="sxs-lookup"><span data-stu-id="d59bd-205">Contrast with the <xref:System.Windows.Documents.EditingCommands.Delete%2A> command, which does not retain previous formatting.</span></span>  
  
 <span data-ttu-id="d59bd-206">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-206">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-207">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-207">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Backspace"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-208">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-208">XAML Attribute Usage</span></span>  
  
```  
<object property="Backspace"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-209">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-209">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-210">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-210">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-211">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-211">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-212">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-212">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-213">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-213">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-214">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-214">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-215">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-215">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-216">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-216">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrectSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-217">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />, que solicita que se corrija cualquier palabra mal escrita en la posición actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-217">Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> command, which requests that any misspelled word at the current position be corrected.</span></span></summary>
        <value><span data-ttu-id="d59bd-218">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-218">The requested command.</span></span>  <span data-ttu-id="d59bd-219">Este comando no tiene ningún gesto de teclas predeterminado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-219">This command has no default key gesture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-220">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-220">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CorrectSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-221">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-221">XAML Attribute Usage</span></span>  
  
```  
<object property="CorrectSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-222">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />, que solicita que se reduzca 1 punto el tamaño de fuente de la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-222">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> command, which requests that the font size for the current selection be decreased by 1 point.</span></span></summary>
        <value><span data-ttu-id="d59bd-223">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-223">The requested command.</span></span>  <span data-ttu-id="d59bd-224">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="OemOpenBrackets" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-224">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemOpenBrackets" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-225">Si se invoca este comando en una selección vacía donde el símbolo de intercalación está dentro de una palabra, la selección se expande automáticamente para aplicar el comando a la palabra completa.</span><span class="sxs-lookup"><span data-stu-id="d59bd-225">If this command is invoked on an empty selection where the caret is within a word, the selection is automatically expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="d59bd-226">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-226">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-227">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-227">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-228">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-228">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-229">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-229">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-230">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-230">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-231">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-231">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-232">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-232">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-233">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-233">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-234">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-234">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-235">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-235">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-236">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-236">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-237">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />, que solicita que se reduzca una posición de tabulación la sangría del párrafo actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-237">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> command, which requests that indentation for the current paragraph be decreased by one tab stop.</span></span></summary>
        <value><span data-ttu-id="d59bd-238">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-238">The requested command.</span></span>  <span data-ttu-id="d59bd-239">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="T" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-239">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-240">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-240">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-241">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-241">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d59bd-242">Este comando no tiene ningún efecto en un elemento de texto a menos que el <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> propiedad del elemento de texto se establece en `true`.</span><span class="sxs-lookup"><span data-stu-id="d59bd-242">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-243">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-243">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-244">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-244">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-245">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-245">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-246">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-246">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-247">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-247">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-248">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-248">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-249">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-249">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-250">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-250">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-251">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-251">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-252">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.Delete" />, que solicita que se elimine la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-252">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> command, which requests that the current selection be deleted.</span></span></summary>
        <value><span data-ttu-id="d59bd-253">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-253">The requested command.</span></span>  <span data-ttu-id="d59bd-254">El gesto de tecla predeterminado para este comando es <see langword="Delete" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-254">The default key gesture for this command is <see langword="Delete" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-255">Este comando descarta cualquier formato de la selección eliminada.</span><span class="sxs-lookup"><span data-stu-id="d59bd-255">This command discards any formatting from the deleted selection.</span></span>  <span data-ttu-id="d59bd-256">Compare con la <xref:System.Windows.Documents.EditingCommands.Backspace%2A> de comandos, que mantiene el formato de la selección eliminada para el contenido que se inserte en la misma ubicación inmediatamente después de invoca este comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-256">Contrast with the <xref:System.Windows.Documents.EditingCommands.Backspace%2A> command, which retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  
  
 <span data-ttu-id="d59bd-257">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-257">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-258">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-258">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-259">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-259">XAML Attribute Usage</span></span>  
  
```  
<object property="Delete"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-260">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-260">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-261">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-261">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-262">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-262">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-263">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-263">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-264">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-264">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-265">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-265">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-266">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-266">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-267">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-267">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNextWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeleteNextWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeleteNextWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeleteNextWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeleteNextWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteNextWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-268">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />, que solicita que se elimine la palabra siguiente (respecto a la posición actual).</span><span class="sxs-lookup"><span data-stu-id="d59bd-268">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> command, which requests that the next word (relative to a current position) be deleted.</span></span></summary>
        <value><span data-ttu-id="d59bd-269">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-269">The requested command.</span></span>  <span data-ttu-id="d59bd-270">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Delete" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-270">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Delete" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-271">Si el símbolo de intercalación está dentro de una palabra, se elimina el resto de la palabra entre la posición actual y el final de la palabra.</span><span class="sxs-lookup"><span data-stu-id="d59bd-271">If the caret is within a word, the remainder of the word between the current position and the end of the word is deleted.</span></span>  
  
 <span data-ttu-id="d59bd-272">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-272">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-273">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-273">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeleteNextWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-274">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-274">XAML Attribute Usage</span></span>  
  
```  
<object property="DeleteNextWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-275">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-275">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-276">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-276">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-277">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-277">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-278">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-278">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-279">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-279">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-280">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-280">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-281">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-281">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-282">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-282">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="DeletePreviousWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeletePreviousWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeletePreviousWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeletePreviousWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeletePreviousWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeletePreviousWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-283">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />, que solicita que se elimine la palabra anterior (respecto a la posición actual).</span><span class="sxs-lookup"><span data-stu-id="d59bd-283">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> command, which requests that the previous word (relative to a current position) be deleted.</span></span></summary>
        <value><span data-ttu-id="d59bd-284">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-284">The requested command.</span></span>  <span data-ttu-id="d59bd-285">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Backspace" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-285">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Backspace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-286">Si el símbolo de intercalación está dentro de una palabra, se elimina el resto de la palabra entre la posición actual y el principio de la palabra.</span><span class="sxs-lookup"><span data-stu-id="d59bd-286">If the caret is within a word, the remainder of the word between the current position and the beginning of the word is deleted.</span></span>  
  
 <span data-ttu-id="d59bd-287">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-287">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-288">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-288">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeletePreviousWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-289">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-289">XAML Attribute Usage</span></span>  
  
```  
<object property="DeletePreviousWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-290">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-290">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-291">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-291">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-292">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-292">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-293">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-293">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-294">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-294">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-295">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-295">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-296">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-296">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-297">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-297">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="EnterLineBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterLineBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterLineBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterLineBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterLineBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterLineBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-298">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />, que solicita que se inserte un salto de línea en la posición actual o encima de la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-298">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> command, which requests that a line break be inserted at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="d59bd-299">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-299">The requested command.</span></span>  <span data-ttu-id="d59bd-300">El gesto de teclas predeterminado para este comando es <see langword="Shift" /> + <see langword="Enter" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-300">The default key gesture for this command is <see langword="Shift" />+<see langword="Enter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-301">Para los editores que admiten contenido dinámico, como <xref:System.Windows.Controls.RichTextBox>, este comando hace que un <xref:System.Windows.Documents.LineBreak> elemento va a insertar en la posición actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-301">For editors that support flow content, such as <xref:System.Windows.Controls.RichTextBox>, this command causes a <xref:System.Windows.Documents.LineBreak> element to be inserted at the current position.</span></span>  
  
 <span data-ttu-id="d59bd-302">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-302">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-303">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox> y <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-303">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_EnterLineBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-304">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-304">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterLineBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-305">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-305">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-306">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-306">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-307">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-307">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-308">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-308">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-309">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-309">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-310">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-310">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-311">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-311">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-312">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-312">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      </Docs>
    </Member>
    <Member MemberName="EnterParagraphBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterParagraphBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterParagraphBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterParagraphBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterParagraphBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterParagraphBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-313">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />, que solicita que se inserte un salto de párrafo en la posición actual o encima de la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-313">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> command, which requests that a paragraph break be inserted at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="d59bd-314">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-314">The requested command.</span></span>  <span data-ttu-id="d59bd-315">El gesto de tecla predeterminado para este comando es <see langword="Enter" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-315">The default key gesture for this command is <see langword="Enter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-316">Este comando es equivalente al usuario presionar la tecla ENTRAR.</span><span class="sxs-lookup"><span data-stu-id="d59bd-316">This command is equivalent to the user pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="d59bd-317">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-317">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-318">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox> y <xref:System.Windows.Controls.TextBox> (cuando el <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> propiedad es `true`).</span><span class="sxs-lookup"><span data-stu-id="d59bd-318">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property is `true`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d59bd-319">Este comando no tiene ningún efecto en un elemento de texto a menos que el <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> propiedad del elemento de texto se establece en `true`.</span><span class="sxs-lookup"><span data-stu-id="d59bd-319">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_EnterParagraphBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-320">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-320">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterParagraphBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-321">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-321">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-322">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-322">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-323">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-323">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-324">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-324">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-325">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-325">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-326">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-326">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-327">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-327">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-328">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-328">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IgnoreSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IgnoreSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IgnoreSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IgnoreSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-329">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />, que solicita que se omitan todas las instancias de palabras mal escritas en la posición actual o en la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-329">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</span></span></summary>
        <value><span data-ttu-id="d59bd-330">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-330">The requested command.</span></span>  <span data-ttu-id="d59bd-331">Este comando no tiene ningún gesto de teclas predeterminado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-331">This command has no default key gesture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-332">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-332">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_IgnoreSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-333">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-333">XAML Attribute Usage</span></span>  
  
```  
<object property="IgnoreSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-334">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />, que solicita que se aumente 1 punto el tamaño de fuente de la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-334">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> command, which requests that the font size for the current selection be increased by 1 point.</span></span></summary>
        <value><span data-ttu-id="d59bd-335">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-335">The requested command.</span></span>  <span data-ttu-id="d59bd-336">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="OemCloseBrackets" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-336">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemCloseBrackets" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-337">Si se invoca este comando en una selección vacía donde el símbolo de intercalación está dentro de una palabra, la selección se expande para aplicar el comando a la palabra completa.</span><span class="sxs-lookup"><span data-stu-id="d59bd-337">If this command is invoked on an empty selection where the caret is within a word, the selection is expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="d59bd-338">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-338">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-339">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-339">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-340">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-340">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-341">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-341">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-342">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-342">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-343">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-343">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-344">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-344">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-345">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-345">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-346">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-346">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-347">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-347">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-348">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-348">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-349">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />, que solicita que se aumente una posición de tabulación la sangría del párrafo actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-349">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> command, which requests that indentation for the current paragraph be increased by one tab stop.</span></span></summary>
        <value><span data-ttu-id="d59bd-350">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-350">The requested command.</span></span>  <span data-ttu-id="d59bd-351">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="T" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-351">The default key gesture for this command is <see langword="Ctrl" />+<see langword="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-352">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-352">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-353">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-353">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d59bd-354">Este comando no tiene ningún efecto en un elemento de texto a menos que el <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> propiedad del elemento de texto se establece en `true`.</span><span class="sxs-lookup"><span data-stu-id="d59bd-354">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-355">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-355">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-356">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-356">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-357">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-357">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-358">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-358">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-359">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-359">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-360">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-360">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-361">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-361">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-362">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-362">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-363">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-363">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-364">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />, que solicita que el símbolo de intercalación se desplace a la línea inferior.</span><span class="sxs-lookup"><span data-stu-id="d59bd-364">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> command, which requests that the caret move down by one line.</span></span></summary>
        <value><span data-ttu-id="d59bd-365">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-365">The requested command.</span></span>  <span data-ttu-id="d59bd-366">El gesto de tecla predeterminado para este comando es <see langword="Down" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-366">The default key gesture for this command is <see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-367">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-367">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-368">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox> y <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-368">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-369">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-369">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-370">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-370">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-371">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-371">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-372">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-372">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-373">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-373">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-374">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-374">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-375">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-375">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-376">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-376">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-377">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-377">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-378">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />, que solicita que el símbolo de intercalación se desplace a la página siguiente.</span><span class="sxs-lookup"><span data-stu-id="d59bd-378">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> command, which requests that the caret move down by one page.</span></span></summary>
        <value><span data-ttu-id="d59bd-379">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-379">The requested command.</span></span>  <span data-ttu-id="d59bd-380">El gesto de tecla predeterminado para este comando es <see langword="PageDown" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-380">The default key gesture for this command is <see langword="PageDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-381">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-381">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-382">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox> y <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-382">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-383">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-383">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-384">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-384">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-385">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-385">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-386">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-386">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-387">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-387">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-388">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-388">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-389">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-389">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-390">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-390">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-391">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-391">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-392">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />, que solicita que el símbolo de intercalación se desplace al párrafo siguiente.</span><span class="sxs-lookup"><span data-stu-id="d59bd-392">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> command, which requests that the caret move down by one paragraph.</span></span></summary>
        <value><span data-ttu-id="d59bd-393">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-393">The requested command.</span></span>  <span data-ttu-id="d59bd-394">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Down" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-394">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-395">Este comando coloca el símbolo de intercalación al principio del párrafo siguiente.</span><span class="sxs-lookup"><span data-stu-id="d59bd-395">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="d59bd-396">Este comando se comporta como <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> cuando se invoca en un <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-396">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="d59bd-397">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-397">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-398">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox> y <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-398">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-399">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-399">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-400">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-400">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-401">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-401">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-402">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-402">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-403">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-403">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-404">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-404">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-405">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-405">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-406">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-406">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-407">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-407">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-408">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />, que solicita que el símbolo de intercalación se desplace un carácter a la izquierda.</span><span class="sxs-lookup"><span data-stu-id="d59bd-408">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> command, which requests that the caret move one character left.</span></span></summary>
        <value><span data-ttu-id="d59bd-409">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-409">The requested command.</span></span>  <span data-ttu-id="d59bd-410">El gesto de tecla predeterminado para este comando es <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-410">The default key gesture for this command is <see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-411">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-411">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-412">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-412">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-413">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-413">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-414">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-414">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-415">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-415">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-416">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-416">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-417">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-417">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-418">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-418">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-419">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-419">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-420">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-420">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-421">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-421">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-422">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />, que solicita que el símbolo de intercalación se desplace una palabra a la izquierda.</span><span class="sxs-lookup"><span data-stu-id="d59bd-422">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> command, which requests that the caret move one word left.</span></span></summary>
        <value><span data-ttu-id="d59bd-423">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-423">The requested command.</span></span>  <span data-ttu-id="d59bd-424">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-424">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-425">Si el símbolo de intercalación está dentro de una palabra, este comando mueve el símbolo de intercalación al principio de esa palabra.</span><span class="sxs-lookup"><span data-stu-id="d59bd-425">If the caret is within a word, this command moves the caret to the beginning of that word.</span></span>  <span data-ttu-id="d59bd-426">En caso contrario, este comando mueve el símbolo de intercalación al principio de la palabra anterior.</span><span class="sxs-lookup"><span data-stu-id="d59bd-426">Otherwise, this command moves the caret to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="d59bd-427">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-427">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-428">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-428">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-429">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-429">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-430">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-430">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-431">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-431">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-432">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-432">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-433">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-433">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-434">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-434">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-435">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-435">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-436">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-436">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-437">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-437">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-438">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />, que solicita que el símbolo de intercalación se desplace un carácter a la derecha.</span><span class="sxs-lookup"><span data-stu-id="d59bd-438">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> command, which requests that the caret move one character right.</span></span></summary>
        <value><span data-ttu-id="d59bd-439">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-439">The requested command.</span></span>  <span data-ttu-id="d59bd-440">El gesto de tecla predeterminado para este comando es <see langword="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-440">The default key gesture for this command is <see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-441">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-441">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-442">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-442">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-443">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-443">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-444">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-444">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-445">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-445">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-446">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-446">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-447">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-447">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-448">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-448">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-449">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-449">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-450">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-450">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-451">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-451">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-452">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />, que solicita que el símbolo de intercalación se desplace una palabra a la derecha.</span><span class="sxs-lookup"><span data-stu-id="d59bd-452">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> command, which requests that the caret move right by one word.</span></span></summary>
        <value><span data-ttu-id="d59bd-453">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-453">The requested command.</span></span>  <span data-ttu-id="d59bd-454">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-454">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-455">Si el símbolo de intercalación está dentro de una palabra, este comando mueve el símbolo de intercalación hasta el final de esa palabra.</span><span class="sxs-lookup"><span data-stu-id="d59bd-455">If the caret is within a word, this command moves the caret to the end of that word.</span></span>  <span data-ttu-id="d59bd-456">En caso contrario, este comando mueve el símbolo de intercalación al principio de la palabra siguiente.</span><span class="sxs-lookup"><span data-stu-id="d59bd-456">Otherwise, this command moves the caret to the beginning of the next word.</span></span>  
  
 <span data-ttu-id="d59bd-457">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-457">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-458">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-458">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-459">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-459">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-460">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-460">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-461">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-461">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-462">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-462">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-463">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-463">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-464">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-464">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-465">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-465">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-466">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-466">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-467">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-467">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-468">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />, que solicita que el símbolo de intercalación se mueva hasta el final del contenido.</span><span class="sxs-lookup"><span data-stu-id="d59bd-468">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> command, which requests that the caret move to the very end of content.</span></span></summary>
        <value><span data-ttu-id="d59bd-469">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-469">The requested command.</span></span>  <span data-ttu-id="d59bd-470">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="End" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-470">The default key gesture for this command is <see langword="Ctrl" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-471">Un *contenedor de texto* es el elemento que constituye el borde final del contenido en cuestión.</span><span class="sxs-lookup"><span data-stu-id="d59bd-471">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="d59bd-472"><xref:System.Windows.Controls.TextBlock> y <xref:System.Windows.Documents.FlowDocument> son ejemplos de los contenedores de texto.</span><span class="sxs-lookup"><span data-stu-id="d59bd-472"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="d59bd-473">El contenido incluido de forma colectiva en un contenedor de texto se conoce como un *documento*.</span><span class="sxs-lookup"><span data-stu-id="d59bd-473">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="d59bd-474">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-474">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-475">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-475">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-476">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-476">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-477">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-477">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-478">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-478">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-479">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-479">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-480">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-480">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-481">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-481">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-482">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-482">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-483">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-483">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-484">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-484">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-485">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />, que solicita que el símbolo de intercalación se mueva hasta el principio del contenido.</span><span class="sxs-lookup"><span data-stu-id="d59bd-485">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> command, which requests that the caret move to the very beginning of content.</span></span></summary>
        <value><span data-ttu-id="d59bd-486">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-486">The requested command.</span></span>  <span data-ttu-id="d59bd-487">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Home" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-487">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-488">Un *contenedor de texto* es el elemento que constituye el borde final del contenido en cuestión.</span><span class="sxs-lookup"><span data-stu-id="d59bd-488">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="d59bd-489"><xref:System.Windows.Controls.TextBlock> y <xref:System.Windows.Documents.FlowDocument> son ejemplos de los contenedores de texto.</span><span class="sxs-lookup"><span data-stu-id="d59bd-489"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="d59bd-490">El contenido incluido de forma colectiva en un contenedor de texto se conoce como un *documento*.</span><span class="sxs-lookup"><span data-stu-id="d59bd-490">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="d59bd-491">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-491">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-492">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-492">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-493">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-493">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-494">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-494">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-495">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-495">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-496">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-496">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-497">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-497">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-498">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-498">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-499">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-499">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-500">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-500">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-501">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-501">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-502">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />, que solicita que el símbolo de intercalación se mueva hasta el final de la línea actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-502">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> command, which requests that the caret move to the end of the current line.</span></span></summary>
        <value><span data-ttu-id="d59bd-503">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-503">The requested command.</span></span>  <span data-ttu-id="d59bd-504">El gesto de tecla predeterminado para este comando es <see langword="End" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-504">The default key gesture for this command is <see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-505">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-505">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-506">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-506">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-507">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-507">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-508">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-508">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-509">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-509">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-510">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-510">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-511">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-511">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-512">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-512">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-513">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-513">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-514">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-514">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-515">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-515">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-516">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />, que solicita que el símbolo de intercalación se mueva hasta el principio de la línea actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-516">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> command, which requests that the caret move to the beginning of the current line.</span></span></summary>
        <value><span data-ttu-id="d59bd-517">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-517">The requested command.</span></span>  <span data-ttu-id="d59bd-518">El gesto de tecla predeterminado para este comando es <see langword="Home" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-518">The default key gesture for this command is <see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-519">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-519">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-520">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-520">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-521">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-521">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-522">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-522">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-523">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-523">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-524">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-524">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-525">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-525">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-526">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-526">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-527">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-527">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-528">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-528">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-529">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-529">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-530">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />, que solicita que el símbolo de intercalación se desplace a la línea superior.</span><span class="sxs-lookup"><span data-stu-id="d59bd-530">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> command, which requests that the caret move up by one line.</span></span></summary>
        <value><span data-ttu-id="d59bd-531">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-531">The requested command.</span></span>  <span data-ttu-id="d59bd-532">El gesto de tecla predeterminado para este comando es <see langword="Up" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-532">The default key gesture for this command is <see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-533">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-533">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-534">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox> y <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-534">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-535">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-535">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-536">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-536">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-537">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-537">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-538">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-538">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-539">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-539">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-540">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-540">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-541">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-541">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-542">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-542">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-543">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-543">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-544">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />, que solicita que el símbolo de intercalación se desplace a la página superior.</span><span class="sxs-lookup"><span data-stu-id="d59bd-544">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> command, which requests that the caret move up by one page.</span></span></summary>
        <value><span data-ttu-id="d59bd-545">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-545">The requested command.</span></span>  <span data-ttu-id="d59bd-546">El gesto de tecla predeterminado para este comando es <see langword="PageUp" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-546">The default key gesture for this command is <see langword="PageUp" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-547">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-547">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-548">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox> y <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-548">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-549">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-549">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-550">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-550">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-551">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-551">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-552">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-552">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-553">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-553">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-554">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-554">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-555">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-555">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-556">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-556">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-557">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-557">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-558">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />, que solicita que el símbolo de intercalación se desplace al párrafo anterior.</span><span class="sxs-lookup"><span data-stu-id="d59bd-558">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> command, which requests that the caret move up by one paragraph.</span></span></summary>
        <value><span data-ttu-id="d59bd-559">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-559">The requested command.</span></span>  <span data-ttu-id="d59bd-560">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Up" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-560">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-561">Este comando coloca el símbolo de intercalación al principio del párrafo siguiente.</span><span class="sxs-lookup"><span data-stu-id="d59bd-561">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="d59bd-562">Este comando se comporta como <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> cuando se invoca en un <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-562">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="d59bd-563">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-563">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-564">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox> y <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-564">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-565">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-565">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-566">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-566">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-567">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-567">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-568">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-568">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-569">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-569">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-570">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-570">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-571">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-571">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-572">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-572">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-573">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-573">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-574">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />, que solicita que la selección actual se amplíe hasta la línea inferior.</span><span class="sxs-lookup"><span data-stu-id="d59bd-574">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> command, which requests that the current selection be expanded down by one line.</span></span></summary>
        <value><span data-ttu-id="d59bd-575">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-575">The requested command.</span></span>  <span data-ttu-id="d59bd-576">El gesto de teclas predeterminado para este comando es <see langword="Shift" /> + <see langword="Down" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-576">The default key gesture for this command is <see langword="Shift" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-577">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-577">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-578">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-578">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-579">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-579">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-580">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-580">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-581">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-581">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-582">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-582">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-583">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-583">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-584">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-584">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-585">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-585">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-586">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-586">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-587">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-587">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-588">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />, que solicita que la selección actual se amplíe hasta la página siguiente.</span><span class="sxs-lookup"><span data-stu-id="d59bd-588">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> command, which requests that the current selection be expanded down by one page.</span></span></summary>
        <value><span data-ttu-id="d59bd-589">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-589">The requested command.</span></span>  <span data-ttu-id="d59bd-590">El gesto de teclas predeterminado para este comando es <see langword="Shift" /> + <see langword="PageDown" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-590">The default key gesture for this command is <see langword="Shift" />+<see langword="PageDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-591">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-591">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-592">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-592">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-593">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-593">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-594">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-594">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-595">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-595">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-596">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-596">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-597">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-597">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-598">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-598">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-599">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-599">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-600">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-600">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-601">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-601">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-602">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />, que solicita que la selección actual se amplíe hasta el párrafo siguiente.</span><span class="sxs-lookup"><span data-stu-id="d59bd-602">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> command, which requests that the current selection be expanded down by one paragraph.</span></span></summary>
        <value><span data-ttu-id="d59bd-603">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-603">The requested command.</span></span>  <span data-ttu-id="d59bd-604">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Down" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-604">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-605">Este comando amplía la selección hasta el principio del párrafo siguiente.</span><span class="sxs-lookup"><span data-stu-id="d59bd-605">This command expands the selection to the beginning of the next paragraph.</span></span>  <span data-ttu-id="d59bd-606">En caso contrario, este comando amplía la selección hasta el final del párrafo actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-606">Otherwise, this command expands the selection to the end of the current paragraph.</span></span>  <span data-ttu-id="d59bd-607">La selección ampliada incluye el salto de párrafo que marca el final del párrafo.</span><span class="sxs-lookup"><span data-stu-id="d59bd-607">The expanded selection includes the paragraph break that marks the end of the paragraph.</span></span>  
  
 <span data-ttu-id="d59bd-608">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-608">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-609">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-609">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-610">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-610">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-611">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-611">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-612">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-612">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-613">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-613">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-614">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-614">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-615">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-615">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-616">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-616">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-617">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-617">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-618">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-618">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-619">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />, que solicita que la selección actual se amplíe hasta el carácter de la izquierda.</span><span class="sxs-lookup"><span data-stu-id="d59bd-619">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> command, which requests that the current selection be expanded left by one character.</span></span></summary>
        <value><span data-ttu-id="d59bd-620">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-620">The requested command.</span></span>  <span data-ttu-id="d59bd-621">El gesto de teclas predeterminado para este comando es <see langword="Shift" /> + <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-621">The default key gesture for this command is <see langword="Shift" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-622">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-622">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-623">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-623">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-624">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-624">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-625">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-625">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-626">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-626">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-627">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-627">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-628">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-628">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-629">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-629">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-630">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-630">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-631">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-631">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-632">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-632">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-633">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />, que solicita que la selección actual se amplíe hasta la palabra de la izquierda.</span><span class="sxs-lookup"><span data-stu-id="d59bd-633">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> command, which requests that the current selection be expanded left by one word.</span></span></summary>
        <value><span data-ttu-id="d59bd-634">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-634">The requested command.</span></span>  <span data-ttu-id="d59bd-635">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-635">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-636">Si el símbolo de intercalación está dentro de una palabra, este comando amplía la selección hasta el principio de esa palabra.</span><span class="sxs-lookup"><span data-stu-id="d59bd-636">If the caret is within a word, this command expands the selection to the beginning of that word.</span></span>  <span data-ttu-id="d59bd-637">En caso contrario, este comando amplía la selección hasta el principio de la palabra anterior.</span><span class="sxs-lookup"><span data-stu-id="d59bd-637">Otherwise, this command expands the selection to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="d59bd-638">La selección ampliada no incluye el delimitador de palabra.</span><span class="sxs-lookup"><span data-stu-id="d59bd-638">The expanded selection does not include the word delimiter.</span></span>  <span data-ttu-id="d59bd-639">Compare con <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, que incluye el delimitador de palabra en la selección expandida.</span><span class="sxs-lookup"><span data-stu-id="d59bd-639">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, which does include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="d59bd-640">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-640">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-641">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-641">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-642">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-642">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-643">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-643">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-644">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-644">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-645">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-645">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-646">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-646">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-647">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-647">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-648">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-648">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-649">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-649">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-650">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-650">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-651">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />, que solicita que la selección actual se amplíe hasta el carácter de la derecha.</span><span class="sxs-lookup"><span data-stu-id="d59bd-651">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> command, which requests that the current selection be expanded right by one character.</span></span></summary>
        <value><span data-ttu-id="d59bd-652">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-652">The requested command.</span></span>  <span data-ttu-id="d59bd-653">El gesto de teclas predeterminado para este comando es <see langword="Shift" /> + <see langword="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-653">The default key gesture for this command is <see langword="Shift" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-654">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-654">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-655">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-655">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-656">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-656">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-657">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-657">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-658">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-658">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-659">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-659">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-660">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-660">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-661">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-661">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-662">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-662">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-663">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-663">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-664">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-664">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-665">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />, que solicita que la selección actual se amplíe hasta la palabra de la derecha.</span><span class="sxs-lookup"><span data-stu-id="d59bd-665">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> command, which requests that the current selection be expanded right by one word.</span></span></summary>
        <value><span data-ttu-id="d59bd-666">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-666">The requested command.</span></span>  <span data-ttu-id="d59bd-667">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-667">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-668">Si el símbolo de intercalación está dentro de una palabra, este comando amplía la selección al final de esa palabra.</span><span class="sxs-lookup"><span data-stu-id="d59bd-668">If the caret is within a word, this command expands the selection to the end of that word.</span></span>  <span data-ttu-id="d59bd-669">En caso contrario, este comando amplía la selección hasta el final de la palabra siguiente.</span><span class="sxs-lookup"><span data-stu-id="d59bd-669">Otherwise, this command expands the selection to the end of the next word.</span></span>  
  
 <span data-ttu-id="d59bd-670">La selección ampliada incluye el delimitador de palabra.</span><span class="sxs-lookup"><span data-stu-id="d59bd-670">The expanded selection includes the word delimiter.</span></span>  <span data-ttu-id="d59bd-671">Compare con <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> que no incluye el delimitador de palabra en la selección expandida.</span><span class="sxs-lookup"><span data-stu-id="d59bd-671">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> which does not include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="d59bd-672">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-672">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-673">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-673">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-674">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-674">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-675">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-675">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-676">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-676">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-677">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-677">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-678">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-678">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-679">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-679">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-680">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-680">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-681">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-681">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-682">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-682">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-683">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />, que solicita que la selección actual se amplíe hasta el final del contenido.</span><span class="sxs-lookup"><span data-stu-id="d59bd-683">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> command, which requests that the current selection be expanded to the very end of content.</span></span></summary>
        <value><span data-ttu-id="d59bd-684">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-684">The requested command.</span></span>  <span data-ttu-id="d59bd-685">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="End" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-685">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-686">Un *contenedor de texto* es el elemento que constituye el borde final del contenido en cuestión.</span><span class="sxs-lookup"><span data-stu-id="d59bd-686">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="d59bd-687"><xref:System.Windows.Controls.TextBlock> y <xref:System.Windows.Documents.FlowDocument> son ejemplos de los contenedores de texto.</span><span class="sxs-lookup"><span data-stu-id="d59bd-687"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="d59bd-688">El contenido incluido de forma colectiva en un contenedor de texto se conoce como un *documento*.</span><span class="sxs-lookup"><span data-stu-id="d59bd-688">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="d59bd-689">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-689">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-690">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-690">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-691">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-691">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-692">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-692">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-693">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-693">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-694">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-694">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-695">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-695">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-696">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-696">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-697">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-697">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-698">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-698">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-699">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-699">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-700">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />, que solicita que la selección actual se amplíe hasta el principio del contenido.</span><span class="sxs-lookup"><span data-stu-id="d59bd-700">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> command, which requests that the current selection be expanded to the very beginning of content.</span></span></summary>
        <value><span data-ttu-id="d59bd-701">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-701">The requested command.</span></span>  <span data-ttu-id="d59bd-702">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Home" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-702">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-703">Un *contenedor de texto* es el elemento que constituye el borde final del contenido en cuestión.</span><span class="sxs-lookup"><span data-stu-id="d59bd-703">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="d59bd-704"><xref:System.Windows.Controls.TextBlock> y <xref:System.Windows.Documents.FlowDocument> son ejemplos de los contenedores de texto.</span><span class="sxs-lookup"><span data-stu-id="d59bd-704"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="d59bd-705">El contenido incluido de forma colectiva en un contenedor de texto se conoce como un *documento*.</span><span class="sxs-lookup"><span data-stu-id="d59bd-705">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="d59bd-706">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-706">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-707">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-707">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-708">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-708">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-709">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-709">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-710">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-710">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-711">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-711">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-712">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-712">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-713">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-713">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-714">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-714">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-715">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-715">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-716">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-716">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-717">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />, que solicita que la selección actual se amplíe hasta el final de la línea actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-717">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> command, which requests that the current selection be expanded to the end of the current line.</span></span></summary>
        <value><span data-ttu-id="d59bd-718">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-718">The requested command.</span></span>  <span data-ttu-id="d59bd-719">El gesto de teclas predeterminado para este comando es <see langword="Shift" /> + <see langword="End" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-719">The default key gesture for this command is <see langword="Shift" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-720">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-720">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-721">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-721">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-722">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-722">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-723">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-723">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-724">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-724">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-725">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-725">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-726">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-726">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-727">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-727">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-728">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-728">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-729">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-729">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-730">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-730">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-731">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />, que solicita que la selección actual se amplíe hasta el principio de la línea actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-731">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> command, which requests that the current selection be expanded to the beginning of the current line.</span></span></summary>
        <value><span data-ttu-id="d59bd-732">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-732">The requested command.</span></span>  <span data-ttu-id="d59bd-733">El gesto de teclas predeterminado para este comando es <see langword="Shift" /> + <see langword="Home" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-733">The default key gesture for this command is <see langword="Shift" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-734">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-734">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-735">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-735">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-736">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-736">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-737">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-737">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-738">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-738">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-739">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-739">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-740">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-740">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-741">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-741">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-742">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-742">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-743">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-743">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-744">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-744">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-745">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />, que solicita que la selección actual se amplíe hasta la línea superior.</span><span class="sxs-lookup"><span data-stu-id="d59bd-745">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> command, which requests that the current selection be expanded up by one line.</span></span></summary>
        <value><span data-ttu-id="d59bd-746">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-746">The requested command.</span></span>  <span data-ttu-id="d59bd-747">El gesto de teclas predeterminado para este comando es <see langword="Shift" /> + <see langword="Up" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-747">The default key gesture for this command is <see langword="Shift" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-748">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-748">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-749">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-749">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-750">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-750">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-751">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-751">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-752">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-752">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-753">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-753">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-754">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-754">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-755">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-755">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-756">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-756">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-757">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-757">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-758">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-758">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-759">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />, que solicita que la selección actual se expanda una página.</span><span class="sxs-lookup"><span data-stu-id="d59bd-759">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> command, which requests that the current selection be expanded  up by one page.</span></span></summary>
        <value><span data-ttu-id="d59bd-760">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-760">The requested command.</span></span>  <span data-ttu-id="d59bd-761">El gesto de teclas predeterminado para este comando es <see langword="Shift" /> + <see langword="PageUp" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-761">The default key gesture for this command is <see langword="Shift" />+<see langword="PageUp" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-762">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-762">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-763">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-763">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-764">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-764">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-765">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-765">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-766">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-766">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-767">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-767">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-768">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-768">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-769">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-769">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-770">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-770">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-771">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-771">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-772">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-772">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-773">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />, que solicita que la selección actual se amplíe hasta el párrafo anterior.</span><span class="sxs-lookup"><span data-stu-id="d59bd-773">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> command, which requests that the current selection be expanded up by one paragraph.</span></span></summary>
        <value><span data-ttu-id="d59bd-774">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-774">The requested command.</span></span>  <span data-ttu-id="d59bd-775">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Up" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-775">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-776">Si el símbolo de intercalación está al principio de un párrafo, este comando amplía la selección hasta el principio del párrafo anterior.</span><span class="sxs-lookup"><span data-stu-id="d59bd-776">If the caret is at the beginning of a paragraph, this command expands the selection to the beginning of the previous paragraph.</span></span>  <span data-ttu-id="d59bd-777">En caso contrario, este comando amplía la selección hasta el principio del párrafo actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-777">Otherwise, this command expands the selection to the beginning of the current paragraph.</span></span>  
  
 <span data-ttu-id="d59bd-778">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-778">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-779">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-779">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-780">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-780">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-781">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-781">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-782">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-782">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-783">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-783">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-784">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-784">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-785">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-785">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-786">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-786">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-787">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-787">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-788">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-788">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="TabBackward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabBackward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabBackward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabBackward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabBackward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabBackward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-789">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-789">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> command.</span></span></summary>
        <value><span data-ttu-id="d59bd-790">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-790">The requested command.</span></span>  <span data-ttu-id="d59bd-791">El gesto de teclas predeterminado para este comando es <see langword="Shift" /> + <see langword="Tab" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-791">The default key gesture for this command is <see langword="Shift" />+<see langword="Tab" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-792">El comportamiento de este comando depende de la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-792">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="d59bd-793">Si la selección no está vacío, este comando es equivalente a <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-793">If the selection is non-empty, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span></span> <span data-ttu-id="d59bd-794">Si el símbolo de intercalación está en una celda de tabla (representado por la <xref:System.Windows.Documents.TableCell> elemento), este comando mueve el símbolo de intercalación a la celda anterior.</span><span class="sxs-lookup"><span data-stu-id="d59bd-794">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the previous cell.</span></span> <span data-ttu-id="d59bd-795">En caso contrario, se inserta un carácter de tabulación en la posición actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-795">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="d59bd-796">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-796">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-797">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox> y <xref:System.Windows.Controls.TextBox> (cuando el <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> propiedad es `true`).</span><span class="sxs-lookup"><span data-stu-id="d59bd-797">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabBackward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-798">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-798">XAML Attribute Usage</span></span>  
  
```  
<object property="TabBackward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-799">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-799">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-800">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-800">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-801">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-801">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-802">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-802">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-803">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-803">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-804">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-804">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-805">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-805">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-806">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-806">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabForward" />
      </Docs>
    </Member>
    <Member MemberName="TabForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabForward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-807">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.TabForward" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-807">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> command.</span></span></summary>
        <value><span data-ttu-id="d59bd-808">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-808">The requested command.</span></span>  <span data-ttu-id="d59bd-809">El gesto de tecla predeterminado para este comando es <see langword="Tab" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-809">The default key gesture for this command is <see langword="Tab" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-810">El comportamiento de este comando depende de la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-810">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="d59bd-811">Si la selección no está vacío o si la selección está vacía y la posición actual del símbolo de intercalación está al principio de un párrafo, este comando es equivalente a <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-811">If the selection is non-empty, or if the selection is empty and the current caret position is at the beginning of a  paragraph, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span></span> <span data-ttu-id="d59bd-812">Si el símbolo de intercalación está en una celda de tabla (representado por la <xref:System.Windows.Documents.TableCell> elemento), este comando mueve el símbolo de intercalación a la celda siguiente.</span><span class="sxs-lookup"><span data-stu-id="d59bd-812">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the next cell.</span></span> <span data-ttu-id="d59bd-813">Si el símbolo de intercalación está en la última celda de una tabla, este comando hace que una nueva fila que se debe anexar a la tabla, con el símbolo de intercalación está situado en la primera celda de la nueva fila.</span><span class="sxs-lookup"><span data-stu-id="d59bd-813">If the caret is in the last cell of a table, this command causes a new row to be appended to the table, with the caret positioned in the first cell of the new row.</span></span>  <span data-ttu-id="d59bd-814">En caso contrario, se inserta un carácter de tabulación en la posición actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-814">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="d59bd-815">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-815">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-816">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox> y <xref:System.Windows.Controls.TextBox> (cuando el <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> propiedad es `true`).</span><span class="sxs-lookup"><span data-stu-id="d59bd-816">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabForward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-817">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-817">XAML Attribute Usage</span></span>  
  
```  
<object property="TabForward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-818">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-818">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-819">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-819">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-820">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-820">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-821">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-821">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-822">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-822">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-823">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-823">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-824">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-824">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-825">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-825">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabBackward" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBold">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBold" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBold As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBold { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBold : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-826">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />, que solicita que se alterne el formato <see cref="T:System.Windows.Documents.Bold" /> en la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-826">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> command, which requests that <see cref="T:System.Windows.Documents.Bold" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="d59bd-827">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-827">The requested command.</span></span>  <span data-ttu-id="d59bd-828">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="B" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-828">The default key gesture for this command is <see langword="Ctrl" />+<see langword="B" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-829">Si el <xref:System.Windows.FontWeight> para la selección actual está en el intervalo de <xref:System.Windows.FontWeights.Thin%2A> a <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> se aplica a la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-829">If the <xref:System.Windows.FontWeight> for the current selection is in the range from <xref:System.Windows.FontWeights.Thin%2A> to <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> is applied to the current selection.</span></span>  <span data-ttu-id="d59bd-830">En caso contrario, <xref:System.Windows.FontWeights.Normal%2A> se aplica.</span><span class="sxs-lookup"><span data-stu-id="d59bd-830">Otherwise, <xref:System.Windows.FontWeights.Normal%2A> is applied.</span></span>  <span data-ttu-id="d59bd-831">Para obtener una lista comparativa de <xref:System.Windows.FontWeight> valores, vea <xref:System.Windows.FontWeights>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-831">For a comparative list of <xref:System.Windows.FontWeight> values, see <xref:System.Windows.FontWeights>.</span></span>  
  
 <span data-ttu-id="d59bd-832">Cuando la selección está vacía y el símbolo de intercalación está dentro de una palabra, la selección se expande para incluir la palabra completa.</span><span class="sxs-lookup"><span data-stu-id="d59bd-832">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="d59bd-833">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-833">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-834">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-834">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBold"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-835">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-835">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBold"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-836">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-836">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-837">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-837">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-838">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-838">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-839">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-839">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-840">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-840">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-841">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-841">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-842">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-842">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-843">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-843">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBullets">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBullets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBullets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBullets As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBullets { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBullets : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-844">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" />, que solicita que se alterne el formato de lista no ordenada (también conocida como lista con viñetas) en la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-844">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="d59bd-845">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-845">The requested command.</span></span>  <span data-ttu-id="d59bd-846">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="L" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-846">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="L" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-847">Este comando funciona en el <xref:System.Windows.Documents.Paragraph> nivel.</span><span class="sxs-lookup"><span data-stu-id="d59bd-847">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="d59bd-848">Si se invoca este comando en una selección parcial del contenido dentro de un párrafo (incluida una selección vacía donde el símbolo de intercalación está dentro de un párrafo), el efecto solicitado se aplica a todo el párrafo.</span><span class="sxs-lookup"><span data-stu-id="d59bd-848">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="d59bd-849">Si se invoca este comando en una selección que abarca varios párrafos, el efecto se aplica a todo el contenido de cada párrafo que participa en la selección.</span><span class="sxs-lookup"><span data-stu-id="d59bd-849">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="d59bd-850">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-850">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-851">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-851">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBullets"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-852">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-852">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBullets"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-853">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-853">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-854">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-854">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-855">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-855">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-856">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-856">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-857">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-857">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-858">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-858">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-859">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-859">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-860">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-860">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      </Docs>
    </Member>
    <Member MemberName="ToggleInsert">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleInsert" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleInsert As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleInsert { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleInsert : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-861">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" />, que alterna el modo de escritura entre Insertar y Sobrescribir.</span><span class="sxs-lookup"><span data-stu-id="d59bd-861">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> command, which toggles the typing mode between Insert and Overtype.</span></span></summary>
        <value><span data-ttu-id="d59bd-862">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-862">The requested command.</span></span>  <span data-ttu-id="d59bd-863">El gesto de tecla predeterminado para este comando es <see langword="Insert" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-863">The default key gesture for this command is <see langword="Insert" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-864">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-864">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-865">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, y <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-865">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleInsert"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-866">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-866">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleInsert"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-867">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-867">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-868">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-868">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-869">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-869">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-870">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-870">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-871">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-871">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-872">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-872">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-873">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-873">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-874">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-874">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleItalic">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleItalic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleItalic As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleItalic { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleItalic : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-875">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />, que solicita que se alterne el formato <see cref="T:System.Windows.Documents.Italic" /> en la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-875">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> command, which requests that <see cref="T:System.Windows.Documents.Italic" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="d59bd-876">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-876">The requested command.</span></span>  <span data-ttu-id="d59bd-877">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="I" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-877">The default key gesture for this command is <see langword="Ctrl" />+<see langword="I" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-878">Si el <xref:System.Windows.FontStyle> para la selección actual es <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> se aplica a la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-878">If the <xref:System.Windows.FontStyle> for the current selection is <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> is applied to the current selection.</span></span>  <span data-ttu-id="d59bd-879">En caso contrario, <xref:System.Windows.FontStyles.Normal%2A> se aplica.</span><span class="sxs-lookup"><span data-stu-id="d59bd-879">Otherwise, <xref:System.Windows.FontStyles.Normal%2A> is applied.</span></span>  
  
 <span data-ttu-id="d59bd-880">Cuando la selección está vacía y el símbolo de intercalación está dentro de una palabra, la selección se expande para incluir la palabra completa.</span><span class="sxs-lookup"><span data-stu-id="d59bd-880">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="d59bd-881">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-881">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-882">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-882">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleItalic"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-883">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-883">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleItalic"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-884">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-884">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-885">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-885">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-886">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-886">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-887">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-887">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-888">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-888">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-889">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-889">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-890">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-890">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-891">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-891">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleNumbering">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleNumbering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleNumbering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleNumbering As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleNumbering { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleNumbering : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-892">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />, que solicita que se alterne el formato de lista ordenada (también conocida como lista numerada) en la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-892">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="d59bd-893">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-893">The requested command.</span></span>  <span data-ttu-id="d59bd-894">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="N" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-894">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="N" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-895">Este comando funciona en el <xref:System.Windows.Documents.Paragraph> nivel.</span><span class="sxs-lookup"><span data-stu-id="d59bd-895">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="d59bd-896">Si se invoca este comando en una selección parcial del contenido dentro de un párrafo (incluida una selección vacía donde el símbolo de intercalación está dentro de un párrafo), el efecto solicitado se aplica a todo el párrafo.</span><span class="sxs-lookup"><span data-stu-id="d59bd-896">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="d59bd-897">Si se invoca este comando en una selección que abarca varios párrafos, el efecto se aplica a todo el contenido de cada párrafo que participa en la selección.</span><span class="sxs-lookup"><span data-stu-id="d59bd-897">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="d59bd-898">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-898">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-899">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-899">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleNumbering"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-900">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-900">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleNumbering"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-901">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-901">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-902">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-902">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-903">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-903">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-904">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-904">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-905">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-905">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-906">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-906">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-907">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-907">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-908">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-908">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSubscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSubscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSubscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSubscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSubscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSubscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-909">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />, que solicita que se alterne el formato de subíndice en la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-909">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> command, which requests that subscript formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="d59bd-910">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-910">The requested command.</span></span>  <span data-ttu-id="d59bd-911">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="OemPlus" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-911">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemPlus" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-912">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-912">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSubscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-913">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-913">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSubscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-914">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-914">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-915">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-915">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-916">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-916">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-917">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-917">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-918">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-918">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-919">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-919">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-920">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-920">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-921">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-921">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSuperscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSuperscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSuperscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSuperscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSuperscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSuperscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-922">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />, que solicita que se alterne el formato de superíndice en la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-922">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> command, which requests that superscript formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="d59bd-923">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-923">The requested command.</span></span>  <span data-ttu-id="d59bd-924">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="OemPlus" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-924">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="OemPlus" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-925">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-925">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSuperscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-926">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-926">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSuperscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-927">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-927">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-928">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-928">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-929">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-929">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-930">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-930">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-931">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-931">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-932">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-932">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-933">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-933">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-934">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-934">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleUnderline">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleUnderline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleUnderline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleUnderline As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleUnderline { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleUnderline : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d59bd-935">Representa el comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />, que solicita que se alterne el formato <see cref="T:System.Windows.Documents.Underline" /> en la selección actual.</span><span class="sxs-lookup"><span data-stu-id="d59bd-935">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> command, which requests that <see cref="T:System.Windows.Documents.Underline" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="d59bd-936">Comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-936">The requested command.</span></span>  <span data-ttu-id="d59bd-937">El gesto de teclas predeterminado para este comando es <see langword="Ctrl" /> + <see langword="U" />.</span><span class="sxs-lookup"><span data-stu-id="d59bd-937">The default key gesture for this command is <see langword="Ctrl" />+<see langword="U" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d59bd-938">Cuando la selección está vacía y el símbolo de intercalación está dentro de una palabra, la selección se expande para incluir la palabra completa.</span><span class="sxs-lookup"><span data-stu-id="d59bd-938">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="d59bd-939">No hay necesariamente una implementación real que responda a este comando en un objeto dado; en muchos casos, la implementación que responde a un comando es responsabilidad del autor de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="d59bd-939">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="d59bd-940">Este comando se admite de forma nativa <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="d59bd-940">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleUnderline"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d59bd-941">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="d59bd-941">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleUnderline"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d59bd-942">El ejemplo siguiente muestra cómo invocar un comando de edición en un objeto que admite el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-942">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="d59bd-943">En este ejemplo, un <xref:System.Windows.Controls.RichTextBox> actúa como el destino del comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-943">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="d59bd-944">Tenga en cuenta que <xref:System.Windows.Controls.RichTextBox> implementa el <xref:System.Windows.IInputElement> interfaz (se hereda de <xref:System.Windows.FrameworkElement>), y que incluye compatibilidad nativa con muchos comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-944">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-945">El primer argumento para el <xref:System.Windows.Input.RoutedCommand.Execute%2A> método es un parámetro de comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-945">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="d59bd-946">Comandos de edición más omiten el parámetro de comando; en general, este parámetro debe ser `null` para comandos de edición.</span><span class="sxs-lookup"><span data-stu-id="d59bd-946">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="d59bd-947">El segundo argumento especifica el objeto al que se enrutará el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-947">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="d59bd-948">Este objeto debe implementar la <xref:System.Windows.IInputElement> interfaz y debe incluir un controlador para el comando especificado.</span><span class="sxs-lookup"><span data-stu-id="d59bd-948">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="d59bd-949">Por lo general, un comando se omite cuando se invoca en un objeto que no controla el comando.</span><span class="sxs-lookup"><span data-stu-id="d59bd-949">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
  </Members>
</Type>
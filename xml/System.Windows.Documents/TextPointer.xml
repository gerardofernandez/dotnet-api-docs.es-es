<Type Name="TextPointer" FullName="System.Windows.Documents.TextPointer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ef1fa4261a591f0ee0dbabc844bc1a0c4f26492" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53227756" /></Metadata><TypeSignature Language="C#" Value="public class TextPointer : System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextPointer extends System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextPointer" />
  <TypeSignature Language="VB.NET" Value="Public Class TextPointer&#xA;Inherits ContentPosition" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextPointer : System::Windows::Documents::ContentPosition" />
  <TypeSignature Language="F#" Value="type TextPointer = class&#xA;    inherit ContentPosition" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.ContentPosition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="68615-101">Representa una posición dentro de un <see cref="T:System.Windows.Documents.FlowDocument" /> o <see cref="T:System.Windows.Controls.TextBlock" />.</span><span class="sxs-lookup"><span data-stu-id="68615-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-102">La <xref:System.Windows.Documents.TextPointer> clase presenta la terminología siguiente:</span><span class="sxs-lookup"><span data-stu-id="68615-102">The <xref:System.Windows.Documents.TextPointer> class introduces the following terminology:</span></span>  
  
-   <span data-ttu-id="68615-103">-Inherentemente, coloque un <xref:System.Windows.Documents.TextPointer> siempre apunta a un *posición* en contenido.</span><span class="sxs-lookup"><span data-stu-id="68615-103">Position - Inherently, a <xref:System.Windows.Documents.TextPointer> always points to a *position* in content.</span></span>  <span data-ttu-id="68615-104">Estas posiciones se encuentran entre caracteres en el contenido, o entre el flujo de contenido de etiquetas de los elementos que definen la estructura del contenido.</span><span class="sxs-lookup"><span data-stu-id="68615-104">Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.</span></span>  
  
-   <span data-ttu-id="68615-105">La posición actual - ya un <xref:System.Windows.Documents.TextPointer> siempre indica una posición y porque muchas de las operaciones que pueden realizarse a través de un <xref:System.Windows.Documents.TextPointer> son relativas a la posición que apunta actualmente el <xref:System.Windows.Documents.TextPointer>, tiene sentido simplemente hacer referencia a la posición indicada por una <xref:System.Windows.Documents.TextPointer> como el *posición actual*.</span><span class="sxs-lookup"><span data-stu-id="68615-105">Current Position - Because a <xref:System.Windows.Documents.TextPointer> always indicates a position, and because many of the operations that can be performed through a <xref:System.Windows.Documents.TextPointer> are relative to the position currently pointed to by the <xref:System.Windows.Documents.TextPointer>, it makes sense to simply refer to the position indicated by a <xref:System.Windows.Documents.TextPointer> as the *current position*.</span></span>  
  
-   <span data-ttu-id="68615-106">Posición de inserción: una *posición de inserción* es una posición donde se puede agregar contenido nuevo sin romper ninguna regla semántica para el contenido asociado.</span><span class="sxs-lookup"><span data-stu-id="68615-106">Insertion Position - An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="68615-107">En la práctica, una posición de inserción está en cualquier lugar en donde se puede colocar un símbolo de intercalación de contenido.</span><span class="sxs-lookup"><span data-stu-id="68615-107">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="68615-108">Un ejemplo de válido <xref:System.Windows.Documents.TextPointer> posición que no es una posición de inserción es la posición entre dos adyacentes <xref:System.Windows.Documents.Paragraph> etiquetas (es decir, entre la etiqueta de cierre del párrafo anterior y la etiqueta de apertura del párrafo siguiente).</span><span class="sxs-lookup"><span data-stu-id="68615-108">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
-   <span data-ttu-id="68615-109">Símbolos - para los fines de <xref:System.Windows.Documents.TextPointer> las operaciones que implican los símbolos, cualquiera de las siguientes opciones se considera un *símbolo*:</span><span class="sxs-lookup"><span data-stu-id="68615-109">Symbol - For the purposes of <xref:System.Windows.Documents.TextPointer> operations that involve symbols, any of the following is considered to be a *symbol*:</span></span>  
  
    -   <span data-ttu-id="68615-110">Una etiqueta inicial o final para un <xref:System.Windows.Documents.TextElement> elemento.</span><span class="sxs-lookup"><span data-stu-id="68615-110">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
    -   <span data-ttu-id="68615-111">Un <xref:System.Windows.UIElement> elemento dentro de un <xref:System.Windows.Documents.InlineUIContainer> o <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="68615-111">A <xref:System.Windows.UIElement> element contained within an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="68615-112">Tenga en cuenta que tales un <xref:System.Windows.UIElement> siempre se cuentan como exactamente un símbolo; cualquier contenido adicional o elementos que forman parte del <xref:System.Windows.UIElement> no se cuentan como símbolos.</span><span class="sxs-lookup"><span data-stu-id="68615-112">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
    -   <span data-ttu-id="68615-113">Cada uno de ellos de 16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] carácter dentro de un texto <xref:System.Windows.Documents.Run> elemento.</span><span class="sxs-lookup"><span data-stu-id="68615-113">Each 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
-   <span data-ttu-id="68615-114">Contenedor de texto - A *contenedor de texto* es el elemento que constituye el borde final para el contenido dinámico en cuestión; la posición indicada por una <xref:System.Windows.Documents.TextPointer> siempre se encuentra dentro de un contenedor de texto.</span><span class="sxs-lookup"><span data-stu-id="68615-114">Text Container - A *text container* is the element that forms the ultimate border for the flow content at hand; the position indicated by a <xref:System.Windows.Documents.TextPointer> always falls within a text container.</span></span>  <span data-ttu-id="68615-115">Actualmente, un contenedor de texto debe ser un <xref:System.Windows.Documents.FlowDocument> o <xref:System.Windows.Controls.TextBlock>.</span><span class="sxs-lookup"><span data-stu-id="68615-115">Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.</span></span>  <span data-ttu-id="68615-116">En general, las operaciones entre <xref:System.Windows.Documents.TextPointer> no se admiten las instancias de los contenedores de texto diferente.</span><span class="sxs-lookup"><span data-stu-id="68615-116">Generally speaking, operations between <xref:System.Windows.Documents.TextPointer> instances in different text containers are not supported.</span></span>  
  
-   <span data-ttu-id="68615-117">Documento: el contenido de un contenedor de texto se conoce como un *documento*, como en el <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> método y el <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> y <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="68615-117">Document - The content in a text container is referred to as a *document*, as in the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method and the <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> and <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> properties.</span></span>  
  
 <span data-ttu-id="68615-118">El <xref:System.Windows.Documents.TextPointer> clase está diseñada para facilitar la exploración transversal y manipulación de contenido que se representa mediante [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] elementos de contenido dinámico; en general, estos elementos se derivan de <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="68615-118">The <xref:System.Windows.Documents.TextPointer> class is intended to facilitate traversal and manipulation of content that is represented by [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] flow content elements; in general, such elements derive from <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="68615-119">Algunas de las operaciones que <xref:System.Windows.Documents.TextPointer> facilita incluyen lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="68615-119">Some of the operations that <xref:System.Windows.Documents.TextPointer> facilitates include the following:</span></span>  
  
-   <span data-ttu-id="68615-120">Realizar una comparación ordinal de la posición actual con una segunda posición especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-120">Perform an ordinal comparison of the current position with a second specified position.</span></span>  <span data-ttu-id="68615-121">Consulte la <xref:System.Windows.Documents.TextPointer.CompareTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="68615-121">See the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method.</span></span>  
  
-   <span data-ttu-id="68615-122">Determinar el tipo de contenido adyacente a la posición actual en una dirección especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-122">Determine the type of content adjacent to the current position in a specified direction.</span></span>  <span data-ttu-id="68615-123">Consulte la <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> método y <xref:System.Windows.Documents.TextPointerContext> enumeración.</span><span class="sxs-lookup"><span data-stu-id="68615-123">See the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method and <xref:System.Windows.Documents.TextPointerContext> enumeration.</span></span>  
  
-   <span data-ttu-id="68615-124">Obtener el <xref:System.Windows.Documents.TextElement> que establece el ámbito o es adyacente a la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-124">Get the <xref:System.Windows.Documents.TextElement> that scopes or is adjacent to the current position.</span></span>  <span data-ttu-id="68615-125">Consulte <xref:System.Windows.Documents.Paragraph> y <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> método.</span><span class="sxs-lookup"><span data-stu-id="68615-125">See <xref:System.Windows.Documents.Paragraph> and the <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> method.</span></span>  
  
-   <span data-ttu-id="68615-126">Obtener el contenedor de texto que establece el ámbito del documento actual.</span><span class="sxs-lookup"><span data-stu-id="68615-126">Get the text container that scopes the current document.</span></span>  <span data-ttu-id="68615-127">Vea la propiedad <xref:System.Windows.Documents.TextPointer.Parent%2A>.</span><span class="sxs-lookup"><span data-stu-id="68615-127">See the <xref:System.Windows.Documents.TextPointer.Parent%2A> property.</span></span>  
  
-   <span data-ttu-id="68615-128">Obtener un número especificado de caracteres antes o después de la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-128">Get a specified number of characters preceding or following the current position.</span></span>  <span data-ttu-id="68615-129">Consulte la <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> método.</span><span class="sxs-lookup"><span data-stu-id="68615-129">See the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="68615-130">Inserte una cadena de caracteres en la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-130">Insert a string of characters at the current position.</span></span>  <span data-ttu-id="68615-131">Consulte la <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> método.</span><span class="sxs-lookup"><span data-stu-id="68615-131">See the <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="68615-132">Buscar los límites de las líneas en el contenido.</span><span class="sxs-lookup"><span data-stu-id="68615-132">Find line boundaries in content.</span></span>  <span data-ttu-id="68615-133">Consulte la <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> método y <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="68615-133">See the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property.</span></span>  
  
-   <span data-ttu-id="68615-134">Traducir entre <xref:System.Windows.Documents.TextPointer> las posiciones y el símbolo de desplazamientos en contenido.</span><span class="sxs-lookup"><span data-stu-id="68615-134">Translate between <xref:System.Windows.Documents.TextPointer> positions and symbol offsets into content.</span></span>  <span data-ttu-id="68615-135">Consulte la <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> y <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="68615-135">See the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods.</span></span>  
  
-   <span data-ttu-id="68615-136">Realizar pruebas de posicionamiento visual mediante la traducción entre un <xref:System.Windows.Documents.TextPointer> posición y un <xref:System.Windows.Point> que representan coordenadas relativas.</span><span class="sxs-lookup"><span data-stu-id="68615-136">Perform visual hit testing by translating between a <xref:System.Windows.Documents.TextPointer> position and a <xref:System.Windows.Point> representing relative coordinates.</span></span>  
  
-   <span data-ttu-id="68615-137">Buscar una posición de inserción cercanos o comprobar si la posición actual es una posición de inserción.</span><span class="sxs-lookup"><span data-stu-id="68615-137">Find a nearby insertion position, or check whether the current position is an insertion position.</span></span>  <span data-ttu-id="68615-138">Consulte la <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> y <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> métodos y <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="68615-138">See the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> methods and the <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> property.</span></span>  
  
 <span data-ttu-id="68615-139">La posición y <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indicado por un <xref:System.Windows.Documents.TextPointer> objeto son inmutables.</span><span class="sxs-lookup"><span data-stu-id="68615-139">The position and <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indicated by a <xref:System.Windows.Documents.TextPointer> object are immutable.</span></span>  <span data-ttu-id="68615-140">Cuando contenido editado o modificado, la posición indicada por una <xref:System.Windows.Documents.TextPointer> no cambia en relación con el texto adyacente; en su lugar el desplazamiento de esa posición desde el principio del contenido se ajusta proporcionalmente para reflejar la nueva posición relativa en contenido.</span><span class="sxs-lookup"><span data-stu-id="68615-140">When content is edited or modified, the position indicated by a <xref:System.Windows.Documents.TextPointer> does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.</span></span>  <span data-ttu-id="68615-141">Por ejemplo, un <xref:System.Windows.Documents.TextPointer> que indica una posición al principio de un párrafo dado continúa apuntando al principio del párrafo, incluso cuando el contenido se inserta o elimina antes o después del párrafo.</span><span class="sxs-lookup"><span data-stu-id="68615-141">For example, a <xref:System.Windows.Documents.TextPointer> that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.</span></span>  
  
 <span data-ttu-id="68615-142">La <xref:System.Windows.Documents.TextPointer> clase no proporciona ningún constructor público.</span><span class="sxs-lookup"><span data-stu-id="68615-142">The <xref:System.Windows.Documents.TextPointer> class does not provide any public constructors.</span></span>  <span data-ttu-id="68615-143">Una instancia de <xref:System.Windows.Documents.TextPointer> se crea mediante el uso de las propiedades o métodos de otros objetos (incluidos otros <xref:System.Windows.Documents.TextPointer> objetos).</span><span class="sxs-lookup"><span data-stu-id="68615-143">An instance of <xref:System.Windows.Documents.TextPointer> is created by using properties or methods of other objects (including other <xref:System.Windows.Documents.TextPointer> objects).</span></span> <span data-ttu-id="68615-144">En la lista siguiente proporciona algunos ejemplos de métodos y propiedades que creación y devuelven un <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="68615-144">The following list provides a few examples of methods and properties that create and return a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="68615-145">Esta lista no es exhaustiva:</span><span class="sxs-lookup"><span data-stu-id="68615-145">This list is not exhaustive:</span></span>  
  
-   <span data-ttu-id="68615-146">Desde un <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> y <xref:System.Windows.Documents.TextRange.End%2A>.</span><span class="sxs-lookup"><span data-stu-id="68615-146">From a <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>.</span></span>  
  
-   <span data-ttu-id="68615-147">Desde un <xref:System.Windows.Documents.TextElement>: <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, y <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span><span class="sxs-lookup"><span data-stu-id="68615-147">From a <xref:System.Windows.Documents.TextElement>:  <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, and <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span></span>  
  
-   <span data-ttu-id="68615-148">Desde un <xref:System.Windows.Controls.TextBlock> (contenedor de texto): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, y <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span><span class="sxs-lookup"><span data-stu-id="68615-148">From a <xref:System.Windows.Controls.TextBlock> (text container): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, and <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span></span>  
  
-   <span data-ttu-id="68615-149">Desde un <xref:System.Windows.Documents.FlowDocument> (contenedor de texto): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, y <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span><span class="sxs-lookup"><span data-stu-id="68615-149">From a <xref:System.Windows.Documents.FlowDocument> (text container): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, and <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span></span>  
  
-   <span data-ttu-id="68615-150">Desde una existente <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, y <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span><span class="sxs-lookup"><span data-stu-id="68615-150">From an existing <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68615-151">En el ejemplo siguiente se muestra cómo usar un <xref:System.Windows.Documents.TextPointer> para buscar una posición justo dentro de la primera <xref:System.Windows.Documents.Run> elemento en un contenedor de texto especificado.</span><span class="sxs-lookup"><span data-stu-id="68615-151">The following example demonstrates how to use a <xref:System.Windows.Documents.TextPointer> to find a position just inside of the first <xref:System.Windows.Documents.Run> element in a specified text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer1)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer1)]  
  
 <span data-ttu-id="68615-152">El ejemplo siguiente implementa un algoritmo de búsqueda sencillo utilizando <xref:System.Windows.Documents.TextPointer> instalaciones.</span><span class="sxs-lookup"><span data-stu-id="68615-152">The following example implements a simplistic find algorithm using <xref:System.Windows.Documents.TextPointer> facilities.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.TextRange" />
    <altmember cref="T:System.Windows.Documents.TextPointerContext" />
    <altmember cref="T:System.Windows.Documents.TextElement" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.CompareTo position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="68615-153"><see cref="T:System.Windows.Documents.TextPointer" /> que especifica una posición para comparar a la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span></span></param>
        <summary><span data-ttu-id="68615-154">Realiza una comparación de ordinales entre las posiciones especificadas por el <see cref="T:System.Windows.Documents.TextPointer" /> actual y un segundo <see cref="T:System.Windows.Documents.TextPointer" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="68615-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="68615-155">-1 si el <see cref="T:System.Windows.Documents.TextPointer" /> actual precede a <paramref name="position" />; 0 si las ubicaciones son las mismas; +1 si el <see cref="T:System.Windows.Documents.TextPointer" /> actual sigue a <paramref name="position" />.</span><span class="sxs-lookup"><span data-stu-id="68615-155">-1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-156">Un valor de -1 indica que la posición especificada por el actual <xref:System.Windows.Documents.TextPointer> precede a la posición especificada por `position`.</span><span class="sxs-lookup"><span data-stu-id="68615-156">A value of -1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> precedes the position specified by `position`.</span></span>  <span data-ttu-id="68615-157">Un valor de 0 indica que las posiciones indicadas son iguales.</span><span class="sxs-lookup"><span data-stu-id="68615-157">A value of 0 indicates that the indicated positions are equal.</span></span>  <span data-ttu-id="68615-158">Un valor de + 1 positivo indica que la posición especificada por el actual <xref:System.Windows.Documents.TextPointer> sigue a la posición especificada por `position`.</span><span class="sxs-lookup"><span data-stu-id="68615-158">A value of positive +1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> follows the position specified by `position`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68615-159">El ejemplo siguiente muestra un uso de este método.</span><span class="sxs-lookup"><span data-stu-id="68615-159">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="68615-160">En el ejemplo, el <xref:System.Windows.Documents.TextPointer.CompareTo%2A> método se utiliza junto con el <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> método para comprobar si un determinado <xref:System.Windows.Documents.TextElement> está vacío.</span><span class="sxs-lookup"><span data-stu-id="68615-160">In the example, the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method is used in conjunction with the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to test whether a specified <xref:System.Windows.Documents.TextElement> is empty.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68615-161"><paramref name="position" /> especifica una posición fuera del contenedor de texto asociado a la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-161"><paramref name="position" /> specifies a position outside of the text container associated with the current position.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTextInRun">
      <MemberSignature Language="C#" Value="public int DeleteTextInRun (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DeleteTextInRun(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteTextInRun (count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DeleteTextInRun(int count);" />
      <MemberSignature Language="F#" Value="member this.DeleteTextInRun : int -&gt; int" Usage="textPointer.DeleteTextInRun count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="68615-162">El número de caracteres para eliminar, a partir de la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-162">The number of characters to delete, starting at the current position.</span></span> <span data-ttu-id="68615-163">Especifique un valor positivo para eliminar caracteres que siguen a la posición actual y un valor negativo para eliminar caracteres que preceden a la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span></span></param>
        <summary><span data-ttu-id="68615-164">Elimina el número de caracteres especificado de la posición indicada por el <see cref="T:System.Windows.Documents.TextPointer" /> actual.</span><span class="sxs-lookup"><span data-stu-id="68615-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="68615-165">El número de caracteres eliminado realmente.</span><span class="sxs-lookup"><span data-stu-id="68615-165">The number of characters actually deleted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-166">Especifique un valor positivo para eliminar caracteres que siguen a la posición actual (como en <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); Especifique un valor negativo para eliminar caracteres que preceden a la posición actual (como en <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="68615-166">Specify a positive value to delete characters that follow the current position (as in <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); specify a negative value to delete characters that precede the current position (as in <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="68615-167">El número de caracteres eliminado realmente puede ser menor que el número especificado por `count`.</span><span class="sxs-lookup"><span data-stu-id="68615-167">The number of characters actually deleted may be less than the number specified by `count`.</span></span>  <span data-ttu-id="68615-168">Esto sucede en casos donde `count` especifica más caracteres que existen para eliminarse.</span><span class="sxs-lookup"><span data-stu-id="68615-168">This happens in cases where `count` specifies more characters than exist to be deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68615-169">Se ha llamado al método en una posición en la que el texto no está permitido.</span><span class="sxs-lookup"><span data-stu-id="68615-169">The method is called at a position where text is not allowed.</span></span></exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetTextInRun" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DocumentEnd">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentEnd As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentEnd { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEnd : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68615-170">Obtiene <see cref="T:System.Windows.Documents.TextPointer" /> al final del contenido en el contenedor de texto asociado a la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span></span></summary>
        <value><span data-ttu-id="68615-171"><see cref="T:System.Windows.Documents.TextPointer" /> al final del contenido en el contenedor de texto asociado a la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-171">A <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-172">El <xref:System.Windows.Documents.TextPointer.Parent%2A> para el valor devuelto <xref:System.Windows.Documents.TextPointer> siempre es un contenedor de texto (<xref:System.Windows.Controls.TextBlock> o <xref:System.Windows.Documents.FlowDocument>), en lugar de un <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="68615-172">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStart">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentStart As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentStart { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentStart : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68615-173">Obtiene <see cref="T:System.Windows.Documents.TextPointer" /> al principio del contenido en el contenedor de texto asociado a la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span></span></summary>
        <value><span data-ttu-id="68615-174"><see cref="T:System.Windows.Documents.TextPointer" /> al principio del contenido en el contenedor de texto asociado a la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-174">A <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-175">Utilice la posición devuelta por esta propiedad como una posición de línea base desde la que se va a trabajar con desplazamientos relativos a otras posiciones.</span><span class="sxs-lookup"><span data-stu-id="68615-175">Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.</span></span>  <span data-ttu-id="68615-176">El <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> y <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> métodos proporcionan un medio para traducir entre las posiciones y posición desplazamientos.</span><span class="sxs-lookup"><span data-stu-id="68615-176">The <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods provide a way to translate between positions and position offsets.</span></span>  
  
 <span data-ttu-id="68615-177">El <xref:System.Windows.Documents.TextPointer.Parent%2A> para el valor devuelto <xref:System.Windows.Documents.TextPointer> siempre es un contenedor de texto (<xref:System.Windows.Controls.TextBlock> o <xref:System.Windows.Documents.FlowDocument>), en lugar de un <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="68615-177">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="GetAdjacentElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject GetAdjacentElement (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject GetAdjacentElement(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjacentElement (direction As LogicalDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ GetAdjacentElement(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetAdjacentElement : System.Windows.Documents.LogicalDirection -&gt; System.Windows.DependencyObject" Usage="textPointer.GetAdjacentElement direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="68615-178">Uno de los valores de <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica la dirección lógica en la que buscar un elemento adyacente.</span><span class="sxs-lookup"><span data-stu-id="68615-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span></span></param>
        <summary><span data-ttu-id="68615-179">Devuelve el elemento, en caso de que exista, que limita al <see cref="T:System.Windows.Documents.TextPointer" /> actual en la dirección lógica especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="68615-180">El elemento adyacente en la <paramref name="direction" /> especificada o <see langword="null" /> si no existe ningún elemento adyacente.</span><span class="sxs-lookup"><span data-stu-id="68615-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-181">El elemento devuelto es normalmente un <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="68615-181">The returned element is typically a <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="68615-182">Un <xref:System.Windows.UIElement> puede devolver cuando la <xref:System.Windows.Documents.TextPointer> indica una posición dentro de un <xref:System.Windows.Documents.BlockUIContainer> elemento o un <xref:System.Windows.Documents.InlineUIContainer> elemento.</span><span class="sxs-lookup"><span data-stu-id="68615-182">A <xref:System.Windows.UIElement> can be returned when the <xref:System.Windows.Documents.TextPointer> indicates a position inside a <xref:System.Windows.Documents.BlockUIContainer> element or an <xref:System.Windows.Documents.InlineUIContainer> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetCharacterRect (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetCharacterRect(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterRect (direction As LogicalDirection) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetCharacterRect(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterRect : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Rect" Usage="textPointer.GetCharacterRect direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="68615-183">Uno de los valores de <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica la dirección lógica en la que buscar un rectángulo de selección del contenido.</span><span class="sxs-lookup"><span data-stu-id="68615-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span></span></param>
        <summary><span data-ttu-id="68615-184">Devuelve un rectángulo de selección (<see cref="T:System.Windows.Rect" />) para el contenido que limita el <see cref="T:System.Windows.Documents.TextPointer" /> actual en la dirección lógica especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="68615-185">Un rectángulo de selección para el contenido que limita el <see cref="T:System.Windows.Documents.TextPointer" /> actual en la dirección especificada o <see cref="P:System.Windows.Rect.Empty" /> si no hay disponible información de presentación actual válida.</span><span class="sxs-lookup"><span data-stu-id="68615-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-186"><xref:System.Windows.Documents.TextElement> los bordes no se consideran contenido para los fines de este método.</span><span class="sxs-lookup"><span data-stu-id="68615-186"><xref:System.Windows.Documents.TextElement> edges are not considered content for the purposes of this method.</span></span>  <span data-ttu-id="68615-187">Si el <xref:System.Windows.Documents.TextPointer> se coloca antes un <xref:System.Windows.Documents.TextElement> edge, el valor devuelto es un cuadro de límite para el siguiente que no sean de<xref:System.Windows.Documents.TextElement> contenido en la dirección especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-187">If the <xref:System.Windows.Documents.TextPointer> is positioned before a <xref:System.Windows.Documents.TextElement> edge, the return value is a bounding box for the next non-<xref:System.Windows.Documents.TextElement> content in the specified direction.</span></span>  <span data-ttu-id="68615-188">Si no hay ningún contenido en la dirección especificada, un ancho de cero <xref:System.Windows.Rect> se devuelve con un alto que coincide con el alto de los anteriores contenido.</span><span class="sxs-lookup"><span data-stu-id="68615-188">If there is no content in the specified direction, a zero-width <xref:System.Windows.Rect> is returned with a height matching the height of any preceding content.</span></span>  
  
 <span data-ttu-id="68615-189">La operación realizada por este método depende de un diseño válido.</span><span class="sxs-lookup"><span data-stu-id="68615-189">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="68615-190">Cuando sea necesario, este método intenta automáticamente volver a generar un diseño válido antes de continuar con la operación.</span><span class="sxs-lookup"><span data-stu-id="68615-190">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="68615-191">Volver a generar un diseño puede ser una operación relativamente costosa.</span><span class="sxs-lookup"><span data-stu-id="68615-191">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="68615-192">Use el <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> propiedad para comprobar un diseño válido antes de realizar las operaciones que se pueden regenerar el diseño.</span><span class="sxs-lookup"><span data-stu-id="68615-192">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="68615-193">Para obtener más información, vea [Diseño](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="68615-193">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      </Docs>
    </Member>
    <Member MemberName="GetInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="68615-194">Uno de los valores de <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica la dirección lógica en la que buscar la posición de inserción más cercana.</span><span class="sxs-lookup"><span data-stu-id="68615-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span></span></param>
        <summary><span data-ttu-id="68615-195">Devuelve <see cref="T:System.Windows.Documents.TextPointer" /> a la posición de inserción más cercana en la dirección lógica especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="68615-196">Devuelve <see cref="T:System.Windows.Documents.TextPointer" /> a la posición de inserción más cercana en la dirección especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-197">Una posición de inserción es una posición donde se puede agregar contenido nuevo sin romper ninguna regla semántica para el contenido asociado.</span><span class="sxs-lookup"><span data-stu-id="68615-197">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="68615-198">En la práctica, una posición de inserción está en cualquier lugar en donde se puede colocar un símbolo de intercalación de contenido.</span><span class="sxs-lookup"><span data-stu-id="68615-198">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="68615-199">Un ejemplo de válido <xref:System.Windows.Documents.TextPointer> posición que no es una posición de inserción es la posición entre dos adyacentes <xref:System.Windows.Documents.Paragraph> etiquetas (es decir, entre la etiqueta de cierre del párrafo anterior y la etiqueta de apertura del párrafo siguiente).</span><span class="sxs-lookup"><span data-stu-id="68615-199">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 <span data-ttu-id="68615-200">Si el <xref:System.Windows.Documents.TextPointer> ya que apunta a una posición de inserción válido, pero la etiqueta de cierre para una secuencia de formato vacío sigue directamente a esa posición en la dirección especificada, el <xref:System.Windows.Documents.TextPointer> devuelta por este método se ajusta para que apunte a la inserción posición justo después del cierre de la secuencia de formato.</span><span class="sxs-lookup"><span data-stu-id="68615-200">If the <xref:System.Windows.Documents.TextPointer> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <xref:System.Windows.Documents.TextPointer> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.</span></span> <span data-ttu-id="68615-201">Por ejemplo, considere la posibilidad de la secuencia de marcado `<Bold>a</Bold>b`.</span><span class="sxs-lookup"><span data-stu-id="68615-201">For example, consider the markup sequence `<Bold>a</Bold>b`.</span></span> <span data-ttu-id="68615-202">Tenga en cuenta que hay dos posiciones de inserción entre las letras `a` y `b` : uno que precede el `Bold` etiqueta y uno justo después del cierre `Bold` etiqueta.</span><span class="sxs-lookup"><span data-stu-id="68615-202">Note that there are two insertion positions between the letters `a` and `b` - one that precedes the closing `Bold` tag, and one directly following the closing `Bold` tag.</span></span> <span data-ttu-id="68615-203">Si <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> se llama en un <xref:System.Windows.Documents.TextPointer> a la posición directamente después de la letra `a` y antes del cierre de `Bold` etiqueta y con un `direction` de <xref:System.Windows.Documents.LogicalDirection.Forward>, el valor devuelto <xref:System.Windows.Documents.TextPointer> se ajusta para que apunte a la posición justo antes de la letra `b`, después del cierre `Bold` etiqueta.</span><span class="sxs-lookup"><span data-stu-id="68615-203">If <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> is called on a <xref:System.Windows.Documents.TextPointer> to the position directly after the letter `a` and before of the closing `Bold` tag, and with a `direction` of <xref:System.Windows.Documents.LogicalDirection.Forward>, the returned <xref:System.Windows.Documents.TextPointer> is adjusted to point to the position just before the letter `b`, after the closing `Bold` tag.</span></span> <span data-ttu-id="68615-204">Se realiza un ajuste similar para el formato de etiquetas de apertura cuando se trabaja en la dirección lógica contraria.</span><span class="sxs-lookup"><span data-stu-id="68615-204">A similar adjustment is made for opening formatting tags when working in the opposite logical direction.</span></span> <span data-ttu-id="68615-205">Este método está pensado para proporcionar un medio de anulación de ambigüedades entre posiciones de inserción en casos similares.</span><span class="sxs-lookup"><span data-stu-id="68615-205">This method is intended to provide a means of disambiguation between insertion positions in similar cases.</span></span>  
  
 <span data-ttu-id="68615-206">Este método puede utilizarse también para ser selectivo acerca de los puntos de inserción cuando está implicada en una secuencia de etiquetas estructurales.</span><span class="sxs-lookup"><span data-stu-id="68615-206">This method can also be used to be selective about insertion points when a sequence of structural tags is involved.</span></span> <span data-ttu-id="68615-207">Por ejemplo, cuando en una posición entre etiquetas de párrafo de apertura y cierre, el parámetro de dirección puede usarse para seleccionar el punto de inserción más cercano al principio del párrafo siguiente (especificando <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) o al final de la anterior (párrafo mediante la especificación de <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="68615-207">For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) or at the end of the preceding paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="68615-208">Si el puntero ya está en la posición de inserción, y no hay ninguna etiqueta de formato adyacente en la instancia especificada `direction`, el valor devuelto <xref:System.Windows.Documents.TextPointer> apunta a la misma posición que realiza la llamada <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="68615-208">If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified `direction`, the returned <xref:System.Windows.Documents.TextPointer> points to the same position as the calling <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
 <span data-ttu-id="68615-209">Es posible que no exista ninguna posición de inserción válido con respecto a la posición en la que apunta un <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="68615-209">It is possible that no valid insertion position exists relative to the position pointed to by a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="68615-210">Esto puede ocurrir si el contenido que se hace referencia es estructuralmente incompleto, como se muestra en una tabla vacía o una lista.</span><span class="sxs-lookup"><span data-stu-id="68615-210">This can happen if the referenced content is structurally incomplete, as in an empty table or list.</span></span>  <span data-ttu-id="68615-211">En tales casos, este método devuelve simplemente una <xref:System.Windows.Documents.TextPointer> a la misma posición que el <xref:System.Windows.Documents.TextPointer> desde que se llamó a este método.</span><span class="sxs-lookup"><span data-stu-id="68615-211">In such cases, this method simply returns a <xref:System.Windows.Documents.TextPointer> to the same position as the <xref:System.Windows.Documents.TextPointer> from which this method was called.</span></span>  <span data-ttu-id="68615-212">Este método devuelve siempre válido <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="68615-212">This method always returns a valid <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68615-213">En este ejemplo se muestra cómo usar el <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> método para comprobar si un <xref:System.Windows.Documents.TextElement> está vacía de contenido imprimible.</span><span class="sxs-lookup"><span data-stu-id="68615-213">This example shows how to use the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to check whether a specified <xref:System.Windows.Documents.TextElement> is empty of printable content.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLineStartPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68615-214">Devuelve <see cref="T:System.Windows.Documents.TextPointer" /> al principio de una línea que se especifica con respecto al <see cref="T:System.Windows.Documents.TextPointer" /> actual.</span><span class="sxs-lookup"><span data-stu-id="68615-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="68615-215">El número de marcadores de inicio de línea que se omiten al determinar la línea para la que se devuelve la posición inicial.</span><span class="sxs-lookup"><span data-stu-id="68615-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span></span> <span data-ttu-id="68615-216">Los valores negativos especifican las líneas que preceden, 0 especifica la línea actual y los valores positivos, las líneas que siguen.</span><span class="sxs-lookup"><span data-stu-id="68615-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span></span></param>
        <summary><span data-ttu-id="68615-217">Devuelve <see cref="T:System.Windows.Documents.TextPointer" /> al principio de una línea que se especifica con respecto al <see cref="T:System.Windows.Documents.TextPointer" /> actual.</span><span class="sxs-lookup"><span data-stu-id="68615-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="68615-218"><see cref="T:System.Windows.Documents.TextPointer" /> que señala al principio de la línea especificada (con <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> establecido en <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), o <see langword="null" /> si la línea especificada está fuera del intervalo o no se puede localizar.</span><span class="sxs-lookup"><span data-stu-id="68615-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-219">Si el <xref:System.Windows.Documents.TextPointer> apunta a una posición ambigua, por ejemplo, entre las dos líneas, la línea en la dirección especificada por <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> está seleccionada como la línea inicial relativa.</span><span class="sxs-lookup"><span data-stu-id="68615-219">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="68615-220">La operación realizada por este método depende de un diseño válido.</span><span class="sxs-lookup"><span data-stu-id="68615-220">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="68615-221">Cuando sea necesario, este método intenta automáticamente volver a generar un diseño válido antes de continuar con la operación.</span><span class="sxs-lookup"><span data-stu-id="68615-221">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="68615-222">Volver a generar un diseño puede ser una operación relativamente costosa.</span><span class="sxs-lookup"><span data-stu-id="68615-222">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="68615-223">Use <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> para comprobar un diseño válido antes de realizar las operaciones que se pueden regenerar el diseño.</span><span class="sxs-lookup"><span data-stu-id="68615-223">Use <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="68615-224">Para obtener más información, vea [Diseño](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="68615-224">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count, out int actualCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count, [out] int32&amp; actualCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer, ByRef actualCount As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count, [Runtime::InteropServices::Out] int % actualCount);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int *  -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition (count, actualCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="actualCount" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="68615-225">El número de marcadores de inicio de línea que se omiten al determinar la línea para la que se devuelve la posición inicial.</span><span class="sxs-lookup"><span data-stu-id="68615-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span></span> <span data-ttu-id="68615-226">Los valores negativos especifican las líneas que preceden, 0 especifica la línea actual y los valores positivos, las líneas que siguen.</span><span class="sxs-lookup"><span data-stu-id="68615-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span></span></param>
        <param name="actualCount"><span data-ttu-id="68615-227">Cuando se devuelve este método, contiene el número real de marcadores de inicio de línea omitidos al determinar la línea para la que se devuelve la posición inicial.</span><span class="sxs-lookup"><span data-stu-id="68615-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span></span>  <span data-ttu-id="68615-228">Este valor puede ser menor que <paramref name="count" /> si se llega al principio o al fin del contenido antes de omitir el número de líneas especificado.</span><span class="sxs-lookup"><span data-stu-id="68615-228">This value may be less than <paramref name="count" /> if the beginning or end of content is encountered before the specified number of lines are skipped.</span></span> <span data-ttu-id="68615-229">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="68615-229">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="68615-230">Devuelve <see cref="T:System.Windows.Documents.TextPointer" /> al principio de una línea que se especifica con respecto al <see cref="T:System.Windows.Documents.TextPointer" /> actual e informa sobre el número de líneas omitidas.</span><span class="sxs-lookup"><span data-stu-id="68615-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span></span></summary>
        <returns><span data-ttu-id="68615-231"><see cref="T:System.Windows.Documents.TextPointer" /> que señala al principio de la línea especificada (con <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> establecido en <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />) o al principio de la línea más cercana a la línea especificada si ésta está fuera del intervalo.</span><span class="sxs-lookup"><span data-stu-id="68615-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-232">Si el <xref:System.Windows.Documents.TextPointer> apunta a una posición ambigua, por ejemplo, entre las dos líneas, la línea en la dirección especificada por el <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> propiedad está seleccionada como la línea inicial relativa.</span><span class="sxs-lookup"><span data-stu-id="68615-232">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextContextPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextContextPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextContextPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextContextPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextContextPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextContextPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextContextPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="68615-233">Uno de los valores de <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica la dirección lógica en la que buscar el símbolo siguiente.</span><span class="sxs-lookup"><span data-stu-id="68615-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span></span></param>
        <summary><span data-ttu-id="68615-234">Devuelve un puntero al símbolo siguiente en la dirección lógica especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-234">Returns a pointer to the next symbol in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="68615-235"><see cref="T:System.Windows.Documents.TextPointer" /> al símbolo siguiente en la dirección solicitada o <see langword="null" /> si el <see cref="T:System.Windows.Documents.TextPointer" /> actual limita el inicio o el fin del contenido.</span><span class="sxs-lookup"><span data-stu-id="68615-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-236">Cualquiera de las siguientes acciones se considera un símbolo:</span><span class="sxs-lookup"><span data-stu-id="68615-236">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="68615-237">Una etiqueta inicial o final para un <xref:System.Windows.Documents.TextElement> elemento.</span><span class="sxs-lookup"><span data-stu-id="68615-237">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="68615-238">Un <xref:System.Windows.UIElement> elemento contenido en un <xref:System.Windows.Documents.InlineUIContainer> o <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="68615-238">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="68615-239">Tenga en cuenta que tales un <xref:System.Windows.UIElement> siempre se cuentan como exactamente un símbolo; cualquier contenido adicional o elementos que forman parte del <xref:System.Windows.UIElement> no se cuentan como símbolos.</span><span class="sxs-lookup"><span data-stu-id="68615-239">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="68615-240">16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] carácter dentro de un texto <xref:System.Windows.Documents.Run> elemento.</span><span class="sxs-lookup"><span data-stu-id="68615-240">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 <span data-ttu-id="68615-241">Si el símbolo siguiente se clasifica por categorías como <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, o <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (identificada por el <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> método), el <xref:System.Windows.Documents.TextPointer> devuelta por este método avanza por exactamente un símbolo desde la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-241">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, or <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (as identified by the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method), then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced by exactly one symbol from the current position.</span></span>  
  
 <span data-ttu-id="68615-242">Si el símbolo siguiente se clasifica por categorías como <xref:System.Windows.Documents.TextPointerContext.Text>, el <xref:System.Windows.Documents.TextPointer> devuelto por este método avanza más allá del texto en el símbolo de no texto siguiente (es decir, la siguiente posición donde la <xref:System.Windows.Documents.TextPointerContext> no <xref:System.Windows.Documents.TextPointerContext.Text>).</span><span class="sxs-lookup"><span data-stu-id="68615-242">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.Text>, then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <xref:System.Windows.Documents.TextPointerContext> is not <xref:System.Windows.Documents.TextPointerContext.Text>).</span></span>  <span data-ttu-id="68615-243">El recuento exacto de símbolos cruzado se puede calcular de antemano mediante una llamada a la <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> método.</span><span class="sxs-lookup"><span data-stu-id="68615-243">The exact symbol count crossed can be calculated in advance by calling the <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68615-244">El ejemplo siguiente muestra un uso de este método.</span><span class="sxs-lookup"><span data-stu-id="68615-244">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="68615-245">El ejemplo se usa el <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> método junto con el <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> método para recorrer y extraer los símbolos en un determinado <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="68615-245">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> method in conjunction with the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to traverse and extract the symbols in a specified <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 <span data-ttu-id="68615-246">Aunque el ejemplo se puede usar para extraer un [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] estructura para el contenido de un determinado <xref:System.Windows.Documents.TextElement>, que está pensado únicamente con fines ilustrativos y no debe usarse en código de producción.</span><span class="sxs-lookup"><span data-stu-id="68615-246">While the example can be used to extract a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] structure for the contents of a given <xref:System.Windows.Documents.TextElement>, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="68615-247">Consulte la <xref:System.Xml> espacio de nombres para un amplio conjunto de tipos diseñados para trabajar con y procesamiento de XML.</span><span class="sxs-lookup"><span data-stu-id="68615-247">See the <xref:System.Xml> namespace for a rich set of types designed for working with and processing XML.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextcontextposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextcontextposition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="68615-248">Uno de los valores de <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica la dirección lógica en la que buscar la posición de inserción siguiente.</span><span class="sxs-lookup"><span data-stu-id="68615-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span></span></param>
        <summary><span data-ttu-id="68615-249">Devuelve <see cref="T:System.Windows.Documents.TextPointer" /> a la posición de inserción siguiente en la dirección lógica especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="68615-250"><see cref="T:System.Windows.Documents.TextPointer" /> que identifica la posición de inserción siguiente en la dirección solicitada o <see langword="null" /> si no se puede buscar ninguna posición de inserción siguiente.</span><span class="sxs-lookup"><span data-stu-id="68615-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-251">Un *posición de inserción* es una posición donde se puede agregar contenido nuevo sin romper ninguna regla semántica para el contenido asociado.</span><span class="sxs-lookup"><span data-stu-id="68615-251">An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="68615-252">En la práctica, una posición de inserción está en cualquier lugar en donde se puede colocar un símbolo de intercalación de contenido.</span><span class="sxs-lookup"><span data-stu-id="68615-252">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="68615-253">Un ejemplo de válido <xref:System.Windows.Documents.TextPointer> posición que no es una posición de inserción es la posición entre dos adyacentes <xref:System.Windows.Documents.Paragraph> etiquetas (es decir, entre la etiqueta de cierre del párrafo anterior y la etiqueta de apertura del párrafo siguiente).</span><span class="sxs-lookup"><span data-stu-id="68615-253">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68615-254">El ejemplo siguiente muestra un uso de este método.</span><span class="sxs-lookup"><span data-stu-id="68615-254">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="68615-255">El ejemplo se usa el <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> método atraviesen los límites del elemento de contenido con el fin de contar el número de <xref:System.Windows.Documents.Paragraph> elementos presentes entre dos especificados <xref:System.Windows.Documents.TextPointer> instancias.</span><span class="sxs-lookup"><span data-stu-id="68615-255">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> method to traverse content element boundaries in order to count the number of <xref:System.Windows.Documents.Paragraph> elements present between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetToPosition">
      <MemberSignature Language="C#" Value="public int GetOffsetToPosition (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOffsetToPosition(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetToPosition (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOffsetToPosition(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.GetOffsetToPosition : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.GetOffsetToPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="68615-256"><see cref="T:System.Windows.Documents.TextPointer" /> que especifica una posición para buscar la distancia hasta ella (en símbolos).</span><span class="sxs-lookup"><span data-stu-id="68615-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span></span></param>
        <summary><span data-ttu-id="68615-257">Devuelve el recuento de símbolos entre el <see cref="T:System.Windows.Documents.TextPointer" /> actual y un segundo <see cref="T:System.Windows.Documents.TextPointer" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="68615-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="68615-258">El número relativo de símbolos entre el <see cref="T:System.Windows.Documents.TextPointer" /> actual y <paramref name="position" />.</span><span class="sxs-lookup"><span data-stu-id="68615-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span></span>  <span data-ttu-id="68615-259">Un valor negativo indica que el <see cref="T:System.Windows.Documents.TextPointer" /> actual sigue a la posición especificada por <paramref name="position" />, 0 indica que las posiciones son iguales y un valor positivo, que el <see cref="T:System.Windows.Documents.TextPointer" /> actual precede a la posición especificada por <paramref name="position" />.</span><span class="sxs-lookup"><span data-stu-id="68615-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-260">Cualquiera de las siguientes acciones se considera un símbolo:</span><span class="sxs-lookup"><span data-stu-id="68615-260">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="68615-261">Una etiqueta inicial o final para un <xref:System.Windows.Documents.TextElement> elemento.</span><span class="sxs-lookup"><span data-stu-id="68615-261">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="68615-262">Un <xref:System.Windows.UIElement> elemento contenido en un <xref:System.Windows.Documents.InlineUIContainer> o <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="68615-262">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="68615-263">Tenga en cuenta que tales un <xref:System.Windows.UIElement> siempre se cuentan como exactamente un símbolo; cualquier contenido adicional o elementos que forman parte del <xref:System.Windows.UIElement> no se cuentan como símbolos.</span><span class="sxs-lookup"><span data-stu-id="68615-263">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="68615-264">16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] carácter dentro de un texto <xref:System.Windows.Documents.Run> elemento.</span><span class="sxs-lookup"><span data-stu-id="68615-264">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68615-265">El ejemplo siguiente muestra un uso de este método.</span><span class="sxs-lookup"><span data-stu-id="68615-265">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="68615-266">El ejemplo se usa el <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> método para buscar los desplazamientos para dos <xref:System.Windows.Documents.TextPointer> instancias y, a continuación, usa esta información para guardar y restaurar la selección en un <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="68615-266">The example uses the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> method to find the offsets for two <xref:System.Windows.Documents.TextPointer> instances, and then uses this information to save and restore the selection in a <xref:System.Windows.Controls.RichTextBox>.</span></span>  <span data-ttu-id="68615-267">El ejemplo supone que el contenido de la <xref:System.Windows.Controls.RichTextBox> no han cambiado entre una selección de guardado y restauración de la selección.</span><span class="sxs-lookup"><span data-stu-id="68615-267">The example assumes that the contents of the <xref:System.Windows.Controls.RichTextBox> have not changed between a selection save and a selection restore.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68615-268"><paramref name="position" /> especifica una posición fuera del contenedor de texto asociado a la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-268"><paramref name="position" /> specifies a position outside of the text container associated with the current position.</span></span></exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetPositionAtOffset" />
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPointerContext">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointerContext GetPointerContext (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Documents.TextPointerContext GetPointerContext(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPointerContext (direction As LogicalDirection) As TextPointerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointerContext GetPointerContext(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPointerContext : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointerContext" Usage="textPointer.GetPointerContext direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="68615-269">Uno de los valores de <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica la dirección lógica en la que determinar la categoría para el contenido adyacente.</span><span class="sxs-lookup"><span data-stu-id="68615-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span></span></param>
        <summary><span data-ttu-id="68615-270">Devuelve un indicador de categoría para el contenido adyacente al <see cref="T:System.Windows.Documents.TextPointer" /> actual en la dirección lógica especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="68615-271">Uno de los valores de <see cref="T:System.Windows.Documents.TextPointerContext" /> que indica la categoría para el contenido adyacente en la dirección lógica especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="68615-272">El ejemplo siguiente muestra un uso de este método.</span><span class="sxs-lookup"><span data-stu-id="68615-272">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="68615-273">El ejemplo se usa el <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> método para implementar un algoritmo para calcular el saldo de apertura y cierre de las etiquetas de elementos entre dos especificados <xref:System.Windows.Documents.TextPointer> posiciones.</span><span class="sxs-lookup"><span data-stu-id="68615-273">The example uses the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <xref:System.Windows.Documents.TextPointer> positions.</span></span>  <span data-ttu-id="68615-274">Cada etiqueta de elemento de apertura se cuenta como + 1 y cada etiqueta de elemento de cierre se cuenta como -1.</span><span class="sxs-lookup"><span data-stu-id="68615-274">Each opening element tag is counted as +1, and each closing element tag is counted as -1.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPositionAtOffset">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68615-275">Devuelve <see cref="T:System.Windows.Documents.TextPointer" /> a la posición indicada por el desplazamiento especificado, en símbolos, a partir del principio del contenido.</span><span class="sxs-lookup"><span data-stu-id="68615-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="68615-276">Un desplazamiento, en símbolos, para el que calcular y devolver la posición.</span><span class="sxs-lookup"><span data-stu-id="68615-276">An offset, in symbols, for which to calculate and return the position.</span></span>  <span data-ttu-id="68615-277">Si el desplazamiento es negativo, la posición se calcula en la dirección lógica contraria a la indicada por la propiedad <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" />.</span><span class="sxs-lookup"><span data-stu-id="68615-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span></span></param>
        <summary><span data-ttu-id="68615-278">Devuelve <see cref="T:System.Windows.Documents.TextPointer" /> a la posición indicada por el desplazamiento especificado, en símbolos, a partir del principio del <see cref="T:System.Windows.Documents.TextPointer" /> actual.</span><span class="sxs-lookup"><span data-stu-id="68615-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="68615-279"><see cref="T:System.Windows.Documents.TextPointer" /> a la posición indicada por el desplazamiento especificado o <see langword="null" /> si no se encuentra ninguna posición correspondiente.</span><span class="sxs-lookup"><span data-stu-id="68615-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-280">Cualquiera de las siguientes acciones se considera un símbolo:</span><span class="sxs-lookup"><span data-stu-id="68615-280">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="68615-281">Una etiqueta inicial o final para el <xref:System.Windows.Documents.TextElement> elemento.</span><span class="sxs-lookup"><span data-stu-id="68615-281">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="68615-282">Un <xref:System.Windows.UIElement> elemento contenido en un <xref:System.Windows.Documents.InlineUIContainer> o <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="68615-282">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="68615-283">Tenga en cuenta que tales un <xref:System.Windows.UIElement> siempre se cuentan como exactamente un símbolo; cualquier contenido adicional o elementos que forman parte del <xref:System.Windows.UIElement> no se cuentan como símbolos.</span><span class="sxs-lookup"><span data-stu-id="68615-283">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="68615-284">16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] carácter dentro de un texto <xref:System.Windows.Documents.Run> elemento.</span><span class="sxs-lookup"><span data-stu-id="68615-284">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68615-285">El ejemplo siguiente muestra un uso de este método.</span><span class="sxs-lookup"><span data-stu-id="68615-285">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="68615-286">El ejemplo se usa el <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> método para implementar un par de métodos, uno para calcular el desplazamiento a una posición especificada con respecto a cualquier párrafo de hospedaje y el otro para devolver un <xref:System.Windows.Documents.TextPointer> a un desplazamiento especificado en un párrafo especificado.</span><span class="sxs-lookup"><span data-stu-id="68615-286">The example uses the <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <xref:System.Windows.Documents.TextPointer> to a specified offset in a specified paragraph.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getpositionatoffset)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getpositionatoffset)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer, direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int * System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset (offset, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="68615-287">Un desplazamiento, en símbolos, para el que calcular y devolver la posición.</span><span class="sxs-lookup"><span data-stu-id="68615-287">An offset, in symbols, for which to calculate and return the position.</span></span>  <span data-ttu-id="68615-288">Si el desplazamiento es negativo, el <see cref="T:System.Windows.Documents.TextPointer" /> devuelto precede al <see cref="T:System.Windows.Documents.TextPointer" /> actual; de lo contrario, le sigue.</span><span class="sxs-lookup"><span data-stu-id="68615-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span></span></param>
        <param name="direction"><span data-ttu-id="68615-289">Uno de los valores de <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica la dirección lógica del <see cref="T:System.Windows.Documents.TextPointer" /> devuelto.</span><span class="sxs-lookup"><span data-stu-id="68615-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></param>
        <summary><span data-ttu-id="68615-290">Devuelve <see cref="T:System.Windows.Documents.TextPointer" /> a la posición indicada por el desplazamiento especificado, en símbolos, a partir del principio del <see cref="T:System.Windows.Documents.TextPointer" /> actual y en la dirección especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span></span></summary>
        <returns><span data-ttu-id="68615-291"><see cref="T:System.Windows.Documents.TextPointer" /> a la posición indicada por el desplazamiento especificado o <see langword="null" /> si el desplazamiento se extiende más allá del final del contenido.</span><span class="sxs-lookup"><span data-stu-id="68615-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-292">Cualquiera de las siguientes acciones se considera un símbolo:</span><span class="sxs-lookup"><span data-stu-id="68615-292">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="68615-293">Una etiqueta inicial o final para el <xref:System.Windows.Documents.TextElement> elemento.</span><span class="sxs-lookup"><span data-stu-id="68615-293">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="68615-294">Un <xref:System.Windows.UIElement> elemento contenido en un <xref:System.Windows.Documents.InlineUIContainer> o <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="68615-294">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="68615-295">Tenga en cuenta que tales un <xref:System.Windows.UIElement> siempre se cuentan como exactamente un símbolo; cualquier contenido adicional o elementos que forman parte del <xref:System.Windows.UIElement> no se cuentan como símbolos.</span><span class="sxs-lookup"><span data-stu-id="68615-295">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="68615-296">16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] carácter dentro de un texto <xref:System.Windows.Documents.Run> elemento.</span><span class="sxs-lookup"><span data-stu-id="68615-296">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextInRun">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68615-297">Devuelve el texto adyacente al <see cref="T:System.Windows.Documents.TextPointer" /> actual.</span><span class="sxs-lookup"><span data-stu-id="68615-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public string GetTextInRun (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextInRun(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection -&gt; string" Usage="textPointer.GetTextInRun direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="68615-298">Uno de los valores de <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica la dirección lógica en la que buscar y devolver cualquier texto adyacente.</span><span class="sxs-lookup"><span data-stu-id="68615-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span></span></param>
        <summary><span data-ttu-id="68615-299">Devuelve una cadena que contiene cualquier texto adyacente al <see cref="T:System.Windows.Documents.TextPointer" /> actual en la dirección lógica especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="68615-300">Una cadena que contiene cualquier texto adyacente en la dirección lógica especificada o <see cref="F:System.String.Empty" /> si no se puede buscar ningún texto adyacente.</span><span class="sxs-lookup"><span data-stu-id="68615-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-301">Este método devuelve sólo ininterrumpidas ejecuciones de texto.</span><span class="sxs-lookup"><span data-stu-id="68615-301">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="68615-302">Se devuelve nada si cualquier tipo de símbolos distinto <xref:System.Windows.Documents.TextPointerContext.Text> es adyacente a la actual <xref:System.Windows.Documents.TextPointer> en la dirección especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-302">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="68615-303">Del mismo modo, se devuelve texto solo hasta el siguiente símbolo que no sean de texto.</span><span class="sxs-lookup"><span data-stu-id="68615-303">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68615-304">El ejemplo siguiente muestra un uso de este método.</span><span class="sxs-lookup"><span data-stu-id="68615-304">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="68615-305">El ejemplo se usa el <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> método para implementar un extractor de texto simple.</span><span class="sxs-lookup"><span data-stu-id="68615-305">The example uses the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method to implement a simple text extractor.</span></span>  <span data-ttu-id="68615-306">El método devuelve una concatenación de cadenas de todo el texto entre dos especificados <xref:System.Windows.Documents.TextPointer> instancias.</span><span class="sxs-lookup"><span data-stu-id="68615-306">The method returns a string concatenation of all text between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 <span data-ttu-id="68615-307">Aunque el ejemplo se puede usar para extraer cualquier texto comprendido entre dos <xref:System.Windows.Documents.TextPointer> instancias, está pensado únicamente con fines ilustrativos y no debe usarse en código de producción.</span><span class="sxs-lookup"><span data-stu-id="68615-307">While the example can be used to extract any text between two <xref:System.Windows.Documents.TextPointer> instances, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="68615-308">Utilice la propiedad <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="68615-308">Use the <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_gettextinrun)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_gettextinrun)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public int GetTextInRun (System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection, textBuffer As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextInRun(System::Windows::Documents::LogicalDirection direction, cli::array &lt;char&gt; ^ textBuffer, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection * char[] * int * int -&gt; int" Usage="textPointer.GetTextInRun (direction, textBuffer, startIndex, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
        <Parameter Name="textBuffer" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="68615-309">Uno de los valores de <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica la dirección lógica en la que buscar y copiar cualquier texto adyacente.</span><span class="sxs-lookup"><span data-stu-id="68615-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span></span></param>
        <param name="textBuffer"><span data-ttu-id="68615-310">Un búfer en el que se copia texto.</span><span class="sxs-lookup"><span data-stu-id="68615-310">A buffer into which any text is copied.</span></span></param>
        <param name="startIndex"><span data-ttu-id="68615-311">Un índice en <paramref name="textBuffer" /> en el que se comienza a escribir texto copiado.</span><span class="sxs-lookup"><span data-stu-id="68615-311">An index into <paramref name="textBuffer" /> at which to begin writing copied text.</span></span></param>
        <param name="count"><span data-ttu-id="68615-312">Número máximo de caracteres que se pueden copiar.</span><span class="sxs-lookup"><span data-stu-id="68615-312">The maximum number of characters to copy.</span></span></param>
        <summary><span data-ttu-id="68615-313">Copia el número de caracteres máximo especificado desde cualquier texto adyacente en la dirección especificada en una matriz de caracteres proporcionada por un llamador.</span><span class="sxs-lookup"><span data-stu-id="68615-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span></span></summary>
        <returns><span data-ttu-id="68615-314">Número de caracteres copiados realmente en <paramref name="textBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="68615-314">The number of characters actually copied into <paramref name="textBuffer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-315">Este método devuelve sólo ininterrumpidas ejecuciones de texto.</span><span class="sxs-lookup"><span data-stu-id="68615-315">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="68615-316">Se devuelve nada si cualquier tipo de símbolos distinto <xref:System.Windows.Documents.TextPointerContext.Text> es adyacente a la actual <xref:System.Windows.Documents.TextPointer> en la dirección especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-316">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="68615-317">Del mismo modo, se devuelve texto solo hasta el siguiente símbolo que no sean de texto.</span><span class="sxs-lookup"><span data-stu-id="68615-317">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68615-318"><paramref name="startIndex" /> es menor que 0 o mayor que la propiedad <see cref="P:System.Array.Length" /> de <paramref name="textBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="68615-318"><paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span></span>  
  
<span data-ttu-id="68615-319">O bien</span><span class="sxs-lookup"><span data-stu-id="68615-319">-or-</span></span> 
 <span data-ttu-id="68615-320"><paramref name="count" /> es menor que 0 o mayor que el espacio restante en <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span><span class="sxs-lookup"><span data-stu-id="68615-320"><paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span></span> <span data-ttu-id="68615-321">menus <paramref name="startIndex" />).</span><span class="sxs-lookup"><span data-stu-id="68615-321">minus <paramref name="startIndex" />).</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextRunLength">
      <MemberSignature Language="C#" Value="public int GetTextRunLength (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextRunLength(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextRunLength (direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextRunLength(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextRunLength : System.Windows.Documents.LogicalDirection -&gt; int" Usage="textPointer.GetTextRunLength direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="68615-322">Uno de los valores de <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica la dirección lógica en la que contar el número de caracteres.</span><span class="sxs-lookup"><span data-stu-id="68615-322">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span></span></param>
        <summary><span data-ttu-id="68615-323">Devuelve el número de caracteres Unicode entre el <see cref="T:System.Windows.Documents.TextPointer" /> actual y el símbolo de no texto siguiente, en la dirección lógica especificada.</span><span class="sxs-lookup"><span data-stu-id="68615-323">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="68615-324">El número de caracteres Unicode entre el <see cref="T:System.Windows.Documents.TextPointer" /> actual y el símbolo de no texto siguiente.</span><span class="sxs-lookup"><span data-stu-id="68615-324">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span></span>  <span data-ttu-id="68615-325">Este número puede ser 0 si no hay texto adyacente.</span><span class="sxs-lookup"><span data-stu-id="68615-325">This number may be 0 if there is no adjacent text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-326">Cualquiera de las siguientes acciones se considera un símbolo:</span><span class="sxs-lookup"><span data-stu-id="68615-326">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="68615-327">Una etiqueta inicial o final para el <xref:System.Windows.Documents.TextElement> elemento.</span><span class="sxs-lookup"><span data-stu-id="68615-327">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="68615-328">Un <xref:System.Windows.UIElement> elemento contenido en un <xref:System.Windows.Documents.InlineUIContainer> o <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="68615-328">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="68615-329">Tenga en cuenta que tales un <xref:System.Windows.UIElement> siempre se cuentan como exactamente un símbolo; cualquier contenido adicional o elementos que forman parte del <xref:System.Windows.UIElement> no se cuentan como símbolos.</span><span class="sxs-lookup"><span data-stu-id="68615-329">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="68615-330">16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] carácter dentro de un texto <xref:System.Windows.Documents.Run> elemento.</span><span class="sxs-lookup"><span data-stu-id="68615-330">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValidLayout">
      <MemberSignature Language="C#" Value="public bool HasValidLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidLayout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidLayout : bool" Usage="System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.HasValidLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68615-331">Obtiene un valor que indica si el contenedor de texto asociado a la posición actual tiene un diseño válido (actualizado).</span><span class="sxs-lookup"><span data-stu-id="68615-331">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span></span></summary>
        <value><span data-ttu-id="68615-332"><see langword="true" /> si el diseño es actual y válido; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68615-332"><see langword="true" /> if the layout is current and valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-333">Cuando sea necesario, las operaciones que dependen de un diseño válido (como el <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> método <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> método, y <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> propiedad) intenta automáticamente volver a generar un diseño válido antes de continuar con la operación.</span><span class="sxs-lookup"><span data-stu-id="68615-333">When necessary, operations that depend on a valid layout (such as the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> method, and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property) attempt to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="68615-334">Volver a generar un diseño puede ser una operación relativamente costosa.</span><span class="sxs-lookup"><span data-stu-id="68615-334">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="68615-335">Utilice esta propiedad para comprobar un diseño válido antes de realizar las operaciones que se pueden regenerar el diseño.</span><span class="sxs-lookup"><span data-stu-id="68615-335">Use this property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="68615-336">Para obtener más información, vea [Diseño](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="68615-336">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertLineBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertLineBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertLineBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertLineBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertLineBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertLineBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertLineBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68615-337">Inserta un salto de línea en la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-337">Inserts a line break at the current position.</span></span></summary>
        <returns><span data-ttu-id="68615-338"><see cref="T:System.Windows.Documents.TextPointer" /> colocado inmediatamente después del elemento <see cref="T:System.Windows.Documents.LineBreak" /> insertado por este método.</span><span class="sxs-lookup"><span data-stu-id="68615-338">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertParagraphBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertParagraphBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertParagraphBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertParagraphBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertParagraphBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertParagraphBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68615-339">Inserta un salto de párrafo en la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-339">Inserts a paragraph break at the current position.</span></span></summary>
        <returns><span data-ttu-id="68615-340"><see cref="T:System.Windows.Documents.TextPointer" /> al principio (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) del nuevo párrafo.</span><span class="sxs-lookup"><span data-stu-id="68615-340">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-341">Si se llama a este método cuando la posición actual está dentro de una existente <xref:System.Windows.Documents.Paragraph> elemento, el párrafo existente y cualquier contenido que contiene se dividen en dos párrafos en la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-341">If this method is called when the current position is inside of an existing <xref:System.Windows.Documents.Paragraph> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.</span></span>  <span data-ttu-id="68615-342">Si se llama a este método cuando la posición actual no está dentro de un párrafo existente, se inserta un párrafo nuevo y vacío.</span><span class="sxs-lookup"><span data-stu-id="68615-342">If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.</span></span>  <span data-ttu-id="68615-343">Si se llama a este método en una posición no es adecuado para dividir o insertar un párrafo (por ejemplo, si la posición actual está dentro de un <xref:System.Windows.Documents.Hyperlink> elemento), se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="68615-343">If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <xref:System.Windows.Documents.Hyperlink> element), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68615-344">Se llama a este método en una posición que no se puede dividir para alojar un nuevo párrafo, como en el ámbito de <see cref="T:System.Windows.Documents.Hyperlink" /> o <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span><span class="sxs-lookup"><span data-stu-id="68615-344">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InsertTextInRun">
      <MemberSignature Language="C#" Value="public void InsertTextInRun (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertTextInRun(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertTextInRun (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertTextInRun(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="member this.InsertTextInRun : string -&gt; unit" Usage="textPointer.InsertTextInRun textData" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.InsertTextInRun(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData"><span data-ttu-id="68615-345">Texto que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="68615-345">The text to insert.</span></span></param>
        <summary><span data-ttu-id="68615-346">Inserta el texto especificado en el <see cref="T:System.Windows.Documents.Run" /> del texto en la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-346">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-347">Si el <xref:System.Windows.Documents.TextPointer> no está dirigida por un <xref:System.Windows.Documents.Run> elemento, un <xref:System.Windows.Documents.Run> se inserta junto con el `textData`.</span><span class="sxs-lookup"><span data-stu-id="68615-347">If the <xref:System.Windows.Documents.TextPointer> is not scoped by a <xref:System.Windows.Documents.Run> element, a <xref:System.Windows.Documents.Run> is inserted along with the `textData`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68615-348">La posición actual no está dentro de un elemento <see cref="T:System.Windows.Documents.Run" />.</span><span class="sxs-lookup"><span data-stu-id="68615-348">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68615-349">El valor de <paramref name="textData" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68615-349"><paramref name="textData" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAtInsertionPosition">
      <MemberSignature Language="C#" Value="public bool IsAtInsertionPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtInsertionPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtInsertionPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtInsertionPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtInsertionPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.IsAtInsertionPosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68615-350">Obtiene un valor que indica si la posición actual es una posición de inserción.</span><span class="sxs-lookup"><span data-stu-id="68615-350">Gets a value that indicates whether the current position is an insertion position.</span></span></summary>
        <value><span data-ttu-id="68615-351"><see langword="true" /> si la posición actual es una posición de inserción; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68615-351"><see langword="true" /> if the current position is an insertion position; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-352">Una posición de inserción es una posición donde se puede agregar contenido nuevo sin romper ninguna regla semántica para el contenido asociado.</span><span class="sxs-lookup"><span data-stu-id="68615-352">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="68615-353">En la práctica, una posición de inserción está en cualquier lugar en donde se puede colocar un símbolo de intercalación de contenido.</span><span class="sxs-lookup"><span data-stu-id="68615-353">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="68615-354">Un ejemplo de válido <xref:System.Windows.Documents.TextPointer> posición que no es una posición de inserción es la posición entre dos adyacentes <xref:System.Windows.Documents.Paragraph> etiquetas (es decir, entre la etiqueta de cierre del párrafo anterior y la etiqueta de apertura del párrafo siguiente).</span><span class="sxs-lookup"><span data-stu-id="68615-354">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="IsAtLineStartPosition">
      <MemberSignature Language="C#" Value="public bool IsAtLineStartPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtLineStartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtLineStartPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtLineStartPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtLineStartPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68615-355">Obtiene un valor que indica si la posición actual está al principio de una línea.</span><span class="sxs-lookup"><span data-stu-id="68615-355">Gets a value that indicates whether the current position is at the beginning of a line.</span></span></summary>
        <value><span data-ttu-id="68615-356"><see langword="true" /> si la posición actual está al principio de una línea; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68615-356"><see langword="true" /> if the current position is at the beginning of a line; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-357">Si el <xref:System.Windows.Documents.TextPointer> apunta a una posición ambigua, por ejemplo, entre las dos líneas, la línea en la dirección especificada por el <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> propiedad está seleccionada como la línea inicial relativa.</span><span class="sxs-lookup"><span data-stu-id="68615-357">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="68615-358">La operación realizada por esta propiedad depende de un diseño válido.</span><span class="sxs-lookup"><span data-stu-id="68615-358">The operation performed by this property depends on a valid layout.</span></span>  <span data-ttu-id="68615-359">Cuando sea necesario, este método intenta automáticamente volver a generar un diseño válido antes de continuar con la operación.</span><span class="sxs-lookup"><span data-stu-id="68615-359">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="68615-360">Volver a generar un diseño puede ser una operación relativamente costosa.</span><span class="sxs-lookup"><span data-stu-id="68615-360">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="68615-361">Use el <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> propiedad para comprobar un diseño válido antes de realizar las operaciones que se pueden regenerar el diseño.</span><span class="sxs-lookup"><span data-stu-id="68615-361">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="68615-362">Para obtener más información, vea [Diseño](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="68615-362">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="IsInSameDocument">
      <MemberSignature Language="C#" Value="public bool IsInSameDocument (System.Windows.Documents.TextPointer textPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInSameDocument(class System.Windows.Documents.TextPointer textPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInSameDocument (textPosition As TextPointer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInSameDocument(System::Windows::Documents::TextPointer ^ textPosition);" />
      <MemberSignature Language="F#" Value="member this.IsInSameDocument : System.Windows.Documents.TextPointer -&gt; bool" Usage="textPointer.IsInSameDocument textPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="textPosition"><span data-ttu-id="68615-363"><see cref="T:System.Windows.Documents.TextPointer" /> que especifica una posición para comparar a la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-363">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span></span></param>
        <summary><span data-ttu-id="68615-364">Indica si la posición especificada está en el mismo contenedor de texto que la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-364">Indicates whether the specified position is in the same text container as the current position.</span></span></summary>
        <returns><span data-ttu-id="68615-365"><see langword="true" /> si <paramref name="textPosition" /> indica una posición que está en el mismo contenedor de texto que la posición actual; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68615-365"><see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-366">La mayoría de las operaciones que implican varios <xref:System.Windows.Documents.TextPointer> instancias solo son válidas si las instancias en cuestión indican posiciones que se encuentran en el mismo ámbito contenedor de texto.</span><span class="sxs-lookup"><span data-stu-id="68615-366">Most operations that involve multiple <xref:System.Windows.Documents.TextPointer> instances are only valid if the instances in question indicate positions that are in the same text container scope.</span></span>  <span data-ttu-id="68615-367">Por ejemplo el <xref:System.Windows.Documents.TextPointer.CompareTo%2A> y <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> métodos no se puede usar con un <xref:System.Windows.Documents.TextPointer> a una posición fuera del contenedor de texto asociado a la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-367">For example the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> and <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> methods cannot be used with a <xref:System.Windows.Documents.TextPointer> to a position outside of the text container associated with the current position.</span></span>  <span data-ttu-id="68615-368">Use este método para comprobar que un determinado <xref:System.Windows.Documents.TextPointer> es compatible con la posición actual para estas operaciones.</span><span class="sxs-lookup"><span data-stu-id="68615-368">Use this method to verify that a specified <xref:System.Windows.Documents.TextPointer> is compatible with the current position for such operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68615-369">El ejemplo siguiente muestra un uso de este método.</span><span class="sxs-lookup"><span data-stu-id="68615-369">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="68615-370">El ejemplo se usa el <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> método para comprobar si un <xref:System.Windows.Documents.TextPointer> se sitúa entre dos otros especificado <xref:System.Windows.Documents.TextPointer> instancias en una situación cuando no hay ninguna garantía de que las tres posiciones pertenezcan al mismo contenedor de texto.</span><span class="sxs-lookup"><span data-stu-id="68615-370">The example uses the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method to check whether a specified <xref:System.Windows.Documents.TextPointer> is positioned between two other specified <xref:System.Windows.Documents.TextPointer> instances in a situation when there is no guarantee that all three positions belong to the same text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_isinsamedocument)]
 [!code-vb[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_isinsamedocument)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68615-371">El valor de <paramref name="textPosition" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68615-371"><paramref name="textPosition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LogicalDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.LogicalDirection LogicalDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Documents.LogicalDirection LogicalDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalDirection As LogicalDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::LogicalDirection LogicalDirection { System::Windows::Documents::LogicalDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalDirection : System.Windows.Documents.LogicalDirection" Usage="System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.LogicalDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LogicalDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68615-372">Obtiene la dirección lógica asociada a la posición actual que se utiliza para eliminar la ambigüedad del contenido asociado a la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-372">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span></span></summary>
        <value><span data-ttu-id="68615-373">El valor <see cref="T:System.Windows.Documents.LogicalDirection" /> que se asocia a la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-373">The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68615-374">Como ejemplo de cómo se usa esta propiedad, el <xref:System.Windows.Documents.LogicalDirection> de la <xref:System.Windows.Documents.TextPointer> devuelto por una prueba de posicionamiento método ofrece un impacto en el que se encuentra entre dos caracteres de texto.</span><span class="sxs-lookup"><span data-stu-id="68615-374">As an example of how this property is used, the <xref:System.Windows.Documents.LogicalDirection> of the <xref:System.Windows.Documents.TextPointer> returned by a hit test method gives a hit that is between two characters of text.</span></span> <span data-ttu-id="68615-375">La dirección lógica especifica cuál de los dos caracteres fue realmente - la izquierda o a la derecha.</span><span class="sxs-lookup"><span data-stu-id="68615-375">The logical direction specifies which of the two characters was actually hit - the left or the right.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraph">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Paragraph Paragraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Paragraph Paragraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Paragraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraph As Paragraph" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Paragraph ^ Paragraph { System::Windows::Documents::Paragraph ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Paragraph : System.Windows.Documents.Paragraph" Usage="System.Windows.Documents.TextPointer.Paragraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Paragraph</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68615-376">Obtiene el párrafo que establece el ámbito de la posición actual, si lo hay.</span><span class="sxs-lookup"><span data-stu-id="68615-376">Gets the paragraph that scopes the current position, if any.</span></span></summary>
        <value><span data-ttu-id="68615-377">El <see cref="T:System.Windows.Documents.Paragraph" /> que establece el ámbito de la posición actual, o <see langword="null" /> si no existe ningún párrafo de este tipo.</span><span class="sxs-lookup"><span data-stu-id="68615-377">The <see cref="T:System.Windows.Documents.Paragraph" /> that scopes the current position, or <see langword="null" /> if no such paragraph exists.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.DependencyObject" Usage="System.Windows.Documents.TextPointer.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68615-378">Obtiene el elemento primario lógico que establece el ámbito de la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-378">Gets the logical parent that scopes the current position.</span></span></summary>
        <value><span data-ttu-id="68615-379">El elemento primario lógico que establece el ámbito de la posición actual.</span><span class="sxs-lookup"><span data-stu-id="68615-379">The logical parent that scopes the current position.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Paragraph" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="textPointer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68615-380">Este tipo o miembro es compatible con la infraestructura [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] y no está pensado para ser usado directamente desde su código.</span><span class="sxs-lookup"><span data-stu-id="68615-380">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="68615-381">Cadena que representa el objeto.</span><span class="sxs-lookup"><span data-stu-id="68615-381">The string that represents the object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
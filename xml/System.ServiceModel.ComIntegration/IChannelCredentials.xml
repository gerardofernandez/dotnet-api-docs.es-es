<Type Name="IChannelCredentials" FullName="System.ServiceModel.ComIntegration.IChannelCredentials">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b9e4d3c57dbb1fc04c19b3768b3c1add9446cd89" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48764424" /></Metadata><TypeSignature Language="C#" Value="public interface IChannelCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelCredentials" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ComIntegration.IChannelCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelCredentials" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannelCredentials" />
  <TypeSignature Language="F#" Value="type IChannelCredentials = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("181b448c-c17c-4b17-ac6d-06699b93198f")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="885e4-101">Una interfaz que permite la configuración de ciertas características de seguridad en un proxy del servicio.</span><span class="sxs-lookup"><span data-stu-id="885e4-101">An interface that allows the setting of certain security features on a service proxy.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="885e4-102">Los clientes administrados utilizan el moniker del "servicio" para tener acceso a servicios de Windows Communication Foundation (WCF).</span><span class="sxs-lookup"><span data-stu-id="885e4-102">Unmanaged clients use the "service" moniker to access Windows Communication Foundation (WCF) services.</span></span> <span data-ttu-id="885e4-103">Estos clientes están sujetos al modelo de seguridad WCF en lugar del modelo de seguridad de COM.</span><span class="sxs-lookup"><span data-stu-id="885e4-103">These clients are subject to the WCF security model rather than the COM security model.</span></span> <span data-ttu-id="885e4-104">La interfaz <xref:System.ServiceModel.ComIntegration.IChannelCredentials> se proporciona para especificar las credenciales del canal.</span><span class="sxs-lookup"><span data-stu-id="885e4-104">The <xref:System.ServiceModel.ComIntegration.IChannelCredentials> interface is provided to specify channel credentials.</span></span> <span data-ttu-id="885e4-105">Esto es necesario porque el moniker COM no puede tener acceso el modelo de objetos de seguridad administrado de WCF.</span><span class="sxs-lookup"><span data-stu-id="885e4-105">This is required because the COM moniker cannot access the managed WCF security object model.</span></span>  
  
 <span data-ttu-id="885e4-106">No es legal llamar métodos en la interfaz `IChannelCredentials` una vez creado el canal.</span><span class="sxs-lookup"><span data-stu-id="885e4-106">It is not legal to call methods on the `IChannelCredentials` interface after the channel is created.</span></span> <span data-ttu-id="885e4-107">Esto es porque Windows Communication Foundation (WCF) no admite cambiar la configuración de seguridad en un canal ya abierto.</span><span class="sxs-lookup"><span data-stu-id="885e4-107">This is because Windows Communication Foundation (WCF) does not support changing security settings on an already opened channel.</span></span> <span data-ttu-id="885e4-108">Cuando el cliente de moniker de servicio obtiene un proxy, el canal no está todavía creado.</span><span class="sxs-lookup"><span data-stu-id="885e4-108">When the service moniker client obtains a proxy, the channel is not yet created.</span></span> <span data-ttu-id="885e4-109">De este modo, el cliente debe llamar a los métodos `IChannelCredentials` antes de invocar el método de servicio.</span><span class="sxs-lookup"><span data-stu-id="885e4-109">Thus, the client must call `IChannelCredentials` methods prior to invoking the service method.</span></span> <span data-ttu-id="885e4-110">Si el cliente llama a un método `IChannelCredentials` una vez invocado el método de servicio, se produce la excepción RPC_E_TOO_LATE.</span><span class="sxs-lookup"><span data-stu-id="885e4-110">If the client calls an `IChannelCredentials` method after the service method is invoked, the exception RPC_E_TOO_LATE is thrown.</span></span>  
  
   
  
## Examples  
  
```  
monString = "service:mexAddress=http://localhost:8000/ServiceModelSamples/Service?wsdl"  
    monString = monString + ", address=http://localhost:8000/ServiceModelSamples/Service"  
    monString = monString + ", binding=BasicHttpBinding_ICalculator, bindingNamespace=http://Microsoft.ServiceModel.Samples"  
    monString = monString + ", contract=ICalculator, contractNamespace=http://Microsoft.ServiceModel.Samples"  
  
    Set monikerProxy = GetObject(monString)  
  
    'Set the Service Certificate.  
    monikerProxy.ChannelCredentials.SetServiceCertificateAuthentication "CurrentUser", "NoCheck", "PeerOrChainTrust"  
    monikerProxy.ChannelCredentials.SetDefaultServiceCertificateFromStore "CurrentUser", "TrustedPeople", "FindBySubjectName", "localhost"  
  
    'Set the Client Certificate.  
    monikerProxy.ChannelCredentials.SetClientCertificateFromStoreByName "CN=client.com", "CurrentUser", "My"  
    MsgBox monikerProxy.Add(3, 4)  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetClientCertificateFromFile">
      <MemberSignature Language="C#" Value="public void SetClientCertificateFromFile (string fileName, string password, string keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientCertificateFromFile(string fileName, string password, string keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClientCertificateFromFile (fileName As String, password As String, keyStorageFlags As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClientCertificateFromFile(System::String ^ fileName, System::String ^ password, System::String ^ keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member SetClientCertificateFromFile : string * string * string -&gt; unit" Usage="iChannelCredentials.SetClientCertificateFromFile (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="885e4-111">Nombre del archivo que contiene el certificado.</span><span class="sxs-lookup"><span data-stu-id="885e4-111">File name that contains the certificate.</span></span></param>
        <param name="password"><span data-ttu-id="885e4-112">Contraseña necesaria para el archivo.</span><span class="sxs-lookup"><span data-stu-id="885e4-112">Password required for the file.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="885e4-113">Marcas de almacenamiento para el certificado.</span><span class="sxs-lookup"><span data-stu-id="885e4-113">Storage flags for the certificate.</span></span></param>
        <summary><span data-ttu-id="885e4-114">Recupera un certificado desde un archivo y lo agrega a las credenciales del cliente.</span><span class="sxs-lookup"><span data-stu-id="885e4-114">Retrieves a certificate from a file and adds it to the client credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="885e4-115">Cuando `keyStorageFlags` está definido como una cadena vacía o nula, se utilizan las marcas de almacenamiento predeterminadas.</span><span class="sxs-lookup"><span data-stu-id="885e4-115">When `keyStorageFlags` is set to null or an empty string, the default storage flags are used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClientCertificateFromStore">
      <MemberSignature Language="C#" Value="public void SetClientCertificateFromStore (string storeLocation, string storeName, string findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientCertificateFromStore(string storeLocation, string storeName, string findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStore(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClientCertificateFromStore (storeLocation As String, storeName As String, findType As String, findValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClientCertificateFromStore(System::String ^ storeLocation, System::String ^ storeName, System::String ^ findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="abstract member SetClientCertificateFromStore : string * string * string * obj -&gt; unit" Usage="iChannelCredentials.SetClientCertificateFromStore (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
        <Parameter Name="findType" Type="System.String" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation"><span data-ttu-id="885e4-116">Ubicación del almacén de certificados.</span><span class="sxs-lookup"><span data-stu-id="885e4-116">Certificate store location.</span></span></param>
        <param name="storeName"><span data-ttu-id="885e4-117">Nombre del almacén de certificados.</span><span class="sxs-lookup"><span data-stu-id="885e4-117">Certificate store name.</span></span></param>
        <param name="findType"><span data-ttu-id="885e4-118">Tipo de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="885e4-118">Search type.</span></span></param>
        <param name="findValue"><span data-ttu-id="885e4-119">Valor de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="885e4-119">Search value.</span></span></param>
        <summary><span data-ttu-id="885e4-120">Recupera un certificado desde un almacén de certificados y lo agrega a las credenciales del cliente.</span><span class="sxs-lookup"><span data-stu-id="885e4-120">Retrieves a certificate from a certificate store and adds it to the client credentials.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClientCertificateFromStoreByName">
      <MemberSignature Language="C#" Value="public void SetClientCertificateFromStoreByName (string subjectName, string storeLocation, string storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientCertificateFromStoreByName(string subjectName, string storeLocation, string storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStoreByName(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClientCertificateFromStoreByName (subjectName As String, storeLocation As String, storeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClientCertificateFromStoreByName(System::String ^ subjectName, System::String ^ storeLocation, System::String ^ storeName);" />
      <MemberSignature Language="F#" Value="abstract member SetClientCertificateFromStoreByName : string * string * string -&gt; unit" Usage="iChannelCredentials.SetClientCertificateFromStoreByName (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subjectName"><span data-ttu-id="885e4-121">Nombre del sujeto de certificados.</span><span class="sxs-lookup"><span data-stu-id="885e4-121">Certificate subject name.</span></span></param>
        <param name="storeLocation"><span data-ttu-id="885e4-122">Ubicación del almacén de certificados.</span><span class="sxs-lookup"><span data-stu-id="885e4-122">Certificate store location.</span></span></param>
        <param name="storeName"><span data-ttu-id="885e4-123">Nombre del almacén de certificados.</span><span class="sxs-lookup"><span data-stu-id="885e4-123">Certificate store name.</span></span></param>
        <summary><span data-ttu-id="885e4-124">Recupera un certificado desde un almacén de certificados por nombre y lo agrega a las credenciales del cliente.</span><span class="sxs-lookup"><span data-stu-id="885e4-124">Retrieves a certificate from a certificate store by name and adds it to the client credentials.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultServiceCertificateFromFile">
      <MemberSignature Language="C#" Value="public void SetDefaultServiceCertificateFromFile (string fileName, string password, string keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultServiceCertificateFromFile(string fileName, string password, string keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultServiceCertificateFromFile (fileName As String, password As String, keyStorageFlags As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultServiceCertificateFromFile(System::String ^ fileName, System::String ^ password, System::String ^ keyStorageFlags);" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultServiceCertificateFromFile : string * string * string -&gt; unit" Usage="iChannelCredentials.SetDefaultServiceCertificateFromFile (fileName, password, keyStorageFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="885e4-125">Nombre del archivo de certificados.</span><span class="sxs-lookup"><span data-stu-id="885e4-125">Certificate file name.</span></span></param>
        <param name="password"><span data-ttu-id="885e4-126">Contraseña para el archivo de certificados.</span><span class="sxs-lookup"><span data-stu-id="885e4-126">Password for certificate file.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="885e4-127">Marcas de almacenamiento para el certificado.</span><span class="sxs-lookup"><span data-stu-id="885e4-127">Storage flags for certificate.</span></span></param>
        <summary><span data-ttu-id="885e4-128">Recupera un certificado de un archivo y lo agrega a las credenciales de servicio como el certificado predeterminado.</span><span class="sxs-lookup"><span data-stu-id="885e4-128">Retrieves a certificate from a file and adds it to the service credentials as the default certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="885e4-129">Cuando `keyStorageFlags` está definido como una cadena vacía o nula, se utilizan las marcas de almacenamiento predeterminadas.</span><span class="sxs-lookup"><span data-stu-id="885e4-129">When `keyStorageFlags` is set to null or an empty string, the default storage flags are used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultServiceCertificateFromStore">
      <MemberSignature Language="C#" Value="public void SetDefaultServiceCertificateFromStore (string storeLocation, string storeName, string findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultServiceCertificateFromStore(string storeLocation, string storeName, string findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStore(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultServiceCertificateFromStore (storeLocation As String, storeName As String, findType As String, findValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultServiceCertificateFromStore(System::String ^ storeLocation, System::String ^ storeName, System::String ^ findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultServiceCertificateFromStore : string * string * string * obj -&gt; unit" Usage="iChannelCredentials.SetDefaultServiceCertificateFromStore (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
        <Parameter Name="findType" Type="System.String" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation"><span data-ttu-id="885e4-130">Ubicación del almacén de certificados.</span><span class="sxs-lookup"><span data-stu-id="885e4-130">Certificate store location.</span></span></param>
        <param name="storeName"><span data-ttu-id="885e4-131">Nombre del almacén de certificados.</span><span class="sxs-lookup"><span data-stu-id="885e4-131">Certificate store name.</span></span></param>
        <param name="findType"><span data-ttu-id="885e4-132">Tipo de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="885e4-132">Search type.</span></span></param>
        <param name="findValue"><span data-ttu-id="885e4-133">Valor de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="885e4-133">Search value.</span></span></param>
        <summary><span data-ttu-id="885e4-134">Recupera un certificado de un almacén de certificados y lo agrega a las credenciales de servicio como el certificado predeterminado.</span><span class="sxs-lookup"><span data-stu-id="885e4-134">Retrieves a certificate from a certificate store and adds it to the service credentials as the default certificate.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultServiceCertificateFromStoreByName">
      <MemberSignature Language="C#" Value="public void SetDefaultServiceCertificateFromStoreByName (string subjectName, string storeLocation, string storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultServiceCertificateFromStoreByName(string subjectName, string storeLocation, string storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStoreByName(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultServiceCertificateFromStoreByName (subjectName As String, storeLocation As String, storeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultServiceCertificateFromStoreByName(System::String ^ subjectName, System::String ^ storeLocation, System::String ^ storeName);" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultServiceCertificateFromStoreByName : string * string * string -&gt; unit" Usage="iChannelCredentials.SetDefaultServiceCertificateFromStoreByName (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="storeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subjectName"><span data-ttu-id="885e4-135">Nombre del sujeto de certificados.</span><span class="sxs-lookup"><span data-stu-id="885e4-135">Certificate subject name.</span></span></param>
        <param name="storeLocation"><span data-ttu-id="885e4-136">Ubicación del almacén de certificados.</span><span class="sxs-lookup"><span data-stu-id="885e4-136">Certificate store location.</span></span></param>
        <param name="storeName"><span data-ttu-id="885e4-137">Nombre del almacén de certificados.</span><span class="sxs-lookup"><span data-stu-id="885e4-137">Certificate store name.</span></span></param>
        <summary><span data-ttu-id="885e4-138">Recupera un certificado de un almacén de certificados por nombre y lo agrega a las credenciales de servicio como el certificado predeterminado.</span><span class="sxs-lookup"><span data-stu-id="885e4-138">Retrieves a certificate from a certificate store by name and adds it to the service credentials as the default certificate</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIssuedToken">
      <MemberSignature Language="C#" Value="public void SetIssuedToken (string localIssuerAddres, string localIssuerBindingType, string localIssuerBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIssuedToken(string localIssuerAddres, string localIssuerBindingType, string localIssuerBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIssuedToken (localIssuerAddres As String, localIssuerBindingType As String, localIssuerBinding As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIssuedToken(System::String ^ localIssuerAddres, System::String ^ localIssuerBindingType, System::String ^ localIssuerBinding);" />
      <MemberSignature Language="F#" Value="abstract member SetIssuedToken : string * string * string -&gt; unit" Usage="iChannelCredentials.SetIssuedToken (localIssuerAddres, localIssuerBindingType, localIssuerBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localIssuerAddres" Type="System.String" />
        <Parameter Name="localIssuerBindingType" Type="System.String" />
        <Parameter Name="localIssuerBinding" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localIssuerAddres"><span data-ttu-id="885e4-139">Dirección del punto de conexión.</span><span class="sxs-lookup"><span data-stu-id="885e4-139">Endpoint address.</span></span></param>
        <param name="localIssuerBindingType"><span data-ttu-id="885e4-140">Tipo de enlace.</span><span class="sxs-lookup"><span data-stu-id="885e4-140">Binding type.</span></span></param>
        <param name="localIssuerBinding"><span data-ttu-id="885e4-141">Nombre de enlace.</span><span class="sxs-lookup"><span data-stu-id="885e4-141">Binding name.</span></span></param>
        <summary><span data-ttu-id="885e4-142">Configura los parámetros para el token emitido.</span><span class="sxs-lookup"><span data-stu-id="885e4-142">Sets parameters for the issued token.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetServiceCertificateAuthentication">
      <MemberSignature Language="C#" Value="public void SetServiceCertificateAuthentication (string storeLocation, string revocationMode, string certificationValidationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetServiceCertificateAuthentication(string storeLocation, string revocationMode, string certificationValidationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetServiceCertificateAuthentication(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetServiceCertificateAuthentication (storeLocation As String, revocationMode As String, certificationValidationMode As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetServiceCertificateAuthentication(System::String ^ storeLocation, System::String ^ revocationMode, System::String ^ certificationValidationMode);" />
      <MemberSignature Language="F#" Value="abstract member SetServiceCertificateAuthentication : string * string * string -&gt; unit" Usage="iChannelCredentials.SetServiceCertificateAuthentication (storeLocation, revocationMode, certificationValidationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.String" />
        <Parameter Name="revocationMode" Type="System.String" />
        <Parameter Name="certificationValidationMode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeLocation"><span data-ttu-id="885e4-143">Ubicación del almacén.</span><span class="sxs-lookup"><span data-stu-id="885e4-143">Store location.</span></span></param>
        <param name="revocationMode"><span data-ttu-id="885e4-144">Modo de revocación.</span><span class="sxs-lookup"><span data-stu-id="885e4-144">Revocation mode.</span></span></param>
        <param name="certificationValidationMode"><span data-ttu-id="885e4-145">Modo de validación de la certificación.</span><span class="sxs-lookup"><span data-stu-id="885e4-145">Certification validation mode.</span></span></param>
        <summary><span data-ttu-id="885e4-146">Configura los parámetros de autenticación del certificado de servicio.</span><span class="sxs-lookup"><span data-stu-id="885e4-146">Sets the service certificate authentication parameters.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserNameCredential">
      <MemberSignature Language="C#" Value="public void SetUserNameCredential (string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUserNameCredential(string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetUserNameCredential(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUserNameCredential (userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUserNameCredential(System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="abstract member SetUserNameCredential : string * string -&gt; unit" Usage="iChannelCredentials.SetUserNameCredential (userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName"><span data-ttu-id="885e4-147">Nombre de usuario.</span><span class="sxs-lookup"><span data-stu-id="885e4-147">User name.</span></span></param>
        <param name="password"><span data-ttu-id="885e4-148">Contraseña.</span><span class="sxs-lookup"><span data-stu-id="885e4-148">Password.</span></span></param>
        <summary><span data-ttu-id="885e4-149">Configura las credenciales del nombre de usuario.</span><span class="sxs-lookup"><span data-stu-id="885e4-149">Sets the user name credentials.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWindowsCredential">
      <MemberSignature Language="C#" Value="public void SetWindowsCredential (string domain, string userName, string password, int impersonationLevel, bool allowNtlm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindowsCredential(string domain, string userName, string password, int32 impersonationLevel, bool allowNtlm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ComIntegration.IChannelCredentials.SetWindowsCredential(System.String,System.String,System.String,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWindowsCredential (domain As String, userName As String, password As String, impersonationLevel As Integer, allowNtlm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWindowsCredential(System::String ^ domain, System::String ^ userName, System::String ^ password, int impersonationLevel, bool allowNtlm);" />
      <MemberSignature Language="F#" Value="abstract member SetWindowsCredential : string * string * string * int * bool -&gt; unit" Usage="iChannelCredentials.SetWindowsCredential (domain, userName, password, impersonationLevel, allowNtlm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="impersonationLevel" Type="System.Int32" />
        <Parameter Name="allowNtlm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="885e4-150">Dominio.</span><span class="sxs-lookup"><span data-stu-id="885e4-150">Domain.</span></span></param>
        <param name="userName"><span data-ttu-id="885e4-151">Nombre de usuario.</span><span class="sxs-lookup"><span data-stu-id="885e4-151">User name.</span></span></param>
        <param name="password"><span data-ttu-id="885e4-152">Contraseña.</span><span class="sxs-lookup"><span data-stu-id="885e4-152">Password.</span></span></param>
        <param name="impersonationLevel"><span data-ttu-id="885e4-153">Nivel de suplantación.</span><span class="sxs-lookup"><span data-stu-id="885e4-153">Impersonation level.</span></span></param>
        <param name="allowNtlm"><span data-ttu-id="885e4-154">Permitir el esquema de autenticación NTLM.</span><span class="sxs-lookup"><span data-stu-id="885e4-154">Allow NTLM authentication scheme.</span></span></param>
        <summary><span data-ttu-id="885e4-155">Configura las credenciales de Windows.</span><span class="sxs-lookup"><span data-stu-id="885e4-155">Sets the Windows credentials.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
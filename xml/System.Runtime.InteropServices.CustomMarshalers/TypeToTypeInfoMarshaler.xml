<Type Name="TypeToTypeInfoMarshaler" FullName="System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="561fbedcdb3bd7817e16a9c48f8abff0ddfb5a3f" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52736910" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeToTypeInfoMarshaler : System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeToTypeInfoMarshaler extends System.Object implements class System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeToTypeInfoMarshaler&#xA;Implements ICustomMarshaler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeToTypeInfoMarshaler : System::Runtime::InteropServices::ICustomMarshaler" />
  <TypeSignature Language="F#" Value="type TypeToTypeInfoMarshaler = class&#xA;    interface ICustomMarshaler" />
  <AssemblyInfo>
    <AssemblyName>CustomMarshalers</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ICustomMarshaler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e678e-101">Calcula las referencias de la interfaz <see langword="ITypeInfo" /> no administrada a la clase <see cref="T:System.Type" /> administrada y de la clase <see cref="T:System.Type" /> administrada a la interfaz <see langword="ITypeInfo" /> no administrada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e678e-101">Marshals the unmanaged <see langword="ITypeInfo" /> interface to the managed <see cref="T:System.Type" /> class, and marshals the managed <see cref="T:System.Type" /> class to the unmanaged <see langword="ITypeInfo" /> interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e678e-102">El `ITypeInfo` interfaz expuesta para un tipo de .NET se basa en los metadatos que podrían aparecer en una biblioteca de tipos exportada.</span><span class="sxs-lookup"><span data-stu-id="e678e-102">The `ITypeInfo` interface exposed for a .NET type is based on the metadata that would appear in an exported type library.</span></span> <span data-ttu-id="e678e-103">Del mismo modo, el <xref:System.Type> exponer la instancia para una `ITypeInfo` interfaz se basa en los metadatos que aparecerían en un ensamblado importado.</span><span class="sxs-lookup"><span data-stu-id="e678e-103">Likewise, the <xref:System.Type> instance exposed for an `ITypeInfo` interface is based on the metadata that would appear in an imported assembly.</span></span>  
  
 <span data-ttu-id="e678e-104">Las marcas de importador de biblioteca de tipos (Tlbimp.exe) `ITypeInfo` parámetros con los valores adecuados <xref:System.Runtime.InteropServices.MarshalAsAttribute> con el <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler> miembro de enumeración al convertir las firmas que utilizan `ITypeInfo` parámetros para las firmas que utilizan <xref:System.Type> parámetros.</span><span class="sxs-lookup"><span data-stu-id="e678e-104">The Type Library Importer (Tlbimp.exe) marks `ITypeInfo` parameters with the appropriate <xref:System.Runtime.InteropServices.MarshalAsAttribute> with the <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler> enumeration member when converting signatures that use `ITypeInfo` parameters to signatures that use <xref:System.Type> parameters.</span></span>  
  
 <span data-ttu-id="e678e-105">La misma funcionalidad de conversión puede realizarse sin el contador de referencias personalizado mediante una llamada a <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> y <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A>.</span><span class="sxs-lookup"><span data-stu-id="e678e-105">The same conversion functionality can be accomplished without the custom marshaler, by calling <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> and <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".cctor">
      <MemberSignature Language="C#" Value="public TypeToTypeInfoMarshaler ();" />
      <MemberSignature Language="ILAsm" Value=".method public static specialname rtspecialname void .cctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.#cctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeToTypeInfoMarshaler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e678e-106">Proporciona el constructor de clases estático.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-106">Provides the static class constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="e678e-107">Este miembro se quitará en la versión 2.0 de .NET Framework y versiones posteriores.</span><span class="sxs-lookup"><span data-stu-id="e678e-107">This member is removed in the .NET Framework version 2.0 and subsequent versions.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpManagedData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpManagedData (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpManagedData(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpManagedData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpManagedData (pManagedObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpManagedData(System::Object ^ pManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpManagedData : obj -&gt; unit&#xA;override this.CleanUpManagedData : obj -&gt; unit" Usage="typeToTypeInfoMarshaler.CleanUpManagedData pManagedObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj">
          <span data-ttu-id="e678e-108">Objeto administrado que se va a destruir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-108">The managed object to be destroyed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e678e-109">Realiza la limpieza necesaria en los datos administrados cuando ya no es necesario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-109">Performs necessary cleanup of the managed data when it is no longer needed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e678e-110">CLR llama a este método para limpiar los datos administrados asignados en el <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e678e-110">The CLR calls this method to clean up managed data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpNativeData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpNativeData (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpNativeData(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpNativeData(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpNativeData (pNativeData As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpNativeData(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpNativeData : nativeint -&gt; unit&#xA;override this.CleanUpNativeData : nativeint -&gt; unit" Usage="typeToTypeInfoMarshaler.CleanUpNativeData pNativeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData">
          <span data-ttu-id="e678e-111">Puntero a los datos no administrados que se van a destruir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-111">A pointer to the unmanaged data to be destroyed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e678e-112">Realiza la limpieza necesaria en los datos no administrados cuando ya no es necesario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-112">Performs necessary cleanup of the unmanaged data when it is no longer needed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e678e-113">CLR llama a este método para limpiar los datos no administrados que se asignan en el <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e678e-113">The CLR calls this method to clean up the unmanaged data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.ICustomMarshaler GetInstance (string pstrCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.ICustomMarshaler GetInstance(string pstrCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (pstrCookie As String) As ICustomMarshaler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::ICustomMarshaler ^ GetInstance(System::String ^ pstrCookie);" />
      <MemberSignature Language="F#" Value="static member GetInstance : string -&gt; System.Runtime.InteropServices.ICustomMarshaler" Usage="System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance pstrCookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ICustomMarshaler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstrCookie" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pstrCookie">
          <span data-ttu-id="e678e-114">Parámetro "cookie" de cadena que puede usar el contador de referencias personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-114">String "cookie" parameter that can be used by the custom marshaler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e678e-115">Devuelve una instancia del contador de referencias personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-115">Returns an instance of the custom marshaler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e678e-116">Una instancia del contador de referencias personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-116">An instance of the custom marshaler.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e678e-117">Todos los contadores de referencias personalizados deben implementar este método, aunque no es parte de la <xref:System.Runtime.InteropServices.ICustomMarshaler> definición de interfaz.</span><span class="sxs-lookup"><span data-stu-id="e678e-117">All custom marshalers must implement this method, although it is not part of the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeDataSize">
      <MemberSignature Language="C#" Value="public virtual int GetNativeDataSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNativeDataSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetNativeDataSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNativeDataSize () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetNativeDataSize();" />
      <MemberSignature Language="F#" Value="abstract member GetNativeDataSize : unit -&gt; int&#xA;override this.GetNativeDataSize : unit -&gt; int" Usage="typeToTypeInfoMarshaler.GetNativeDataSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e678e-118">Devuelve el tamaño en bytes de los datos no administrados de los que se van a calcular las referencias.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-118">Returns the size in bytes of the unmanaged data to be marshaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e678e-119">-1 para indicar que el tipo que controla este contador de referencias no es un tipo de valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-119">-1 to indicate the type this marshaler handles is not a value type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e678e-120">Dado que el cálculo de referencias personalizado de tipos de valor no se admite en .NET Framework, este método siempre devuelve -1.</span><span class="sxs-lookup"><span data-stu-id="e678e-120">Because custom marshaling of value types is not supported in the .NET Framework, this method always returns -1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalManagedToNative">
      <MemberSignature Language="C#" Value="public virtual IntPtr MarshalManagedToNative (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int MarshalManagedToNative(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalManagedToNative (pManagedObj As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr MarshalManagedToNative(System::Object ^ pManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member MarshalManagedToNative : obj -&gt; nativeint&#xA;override this.MarshalManagedToNative : obj -&gt; nativeint" Usage="typeToTypeInfoMarshaler.MarshalManagedToNative pManagedObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj">
          <span data-ttu-id="e678e-121">Objeto administrado que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-121">The managed object to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e678e-122">Calcula las referencias de un objeto de código administrado respecto al no administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-122">Marshals an object from managed code to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e678e-123">Un puntero al objeto no administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-123">A pointer to the unmanaged object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e678e-124">CLR llama a este método con la instancia especificada de un objeto administrado que se va a convertir ese objeto de código administrado a código no administrado, y devuelve un puntero al objeto no administrado adecuado, que representa la vista COM de ese objeto.</span><span class="sxs-lookup"><span data-stu-id="e678e-124">The CLR calls this method with the specified instance of a managed object to convert that object from managed code to unmanaged code, and it returns a pointer to the appropriate unmanaged object, representing the COM view of that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e678e-125">El valor de <paramref name="pManagedObj" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-125">
              <paramref name="pManagedObj" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MarshalNativeToManaged">
      <MemberSignature Language="C#" Value="public virtual object MarshalNativeToManaged (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MarshalNativeToManaged(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalNativeToManaged (pNativeData As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ MarshalNativeToManaged(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member MarshalNativeToManaged : nativeint -&gt; obj&#xA;override this.MarshalNativeToManaged : nativeint -&gt; obj" Usage="typeToTypeInfoMarshaler.MarshalNativeToManaged pNativeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData">
          <span data-ttu-id="e678e-126">Un puntero al objeto no administrado que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-126">A pointer to the unmanaged object to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e678e-127">Calcula las referencias de un objeto de código no administrado respecto al administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-127">Marshals an object from unmanaged code to managed code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e678e-128">Un objeto administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-128">A managed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e678e-129">CLR llama a este método con el puntero especificado a un objeto no administrado para convertir ese objeto de código no administrado a código administrado y devuelve un objeto administrado que representa la vista administrada de los datos no administrados.</span><span class="sxs-lookup"><span data-stu-id="e678e-129">The CLR calls this method with the specified pointer to an unmanaged object to convert that object from unmanaged code to managed code, and returns a managed object representing the managed view of the unmanaged data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e678e-130">El valor de <paramref name="pNativeData" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e678e-130">
              <paramref name="pNativeData" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="Choices" FullName="System.Speech.Recognition.Choices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="451bf9dafb2e50595cabe66bb83ee0cb52efc4c5" /><Meta Name="ms.sourcegitcommit" Value="6089a30c0522e6f43256523e82e94b2ccedfb55b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/04/2019" /><Meta Name="ms.locfileid" Value="59017023" /></Metadata><TypeSignature Language="C#" Value="public class Choices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Choices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.Choices" />
  <TypeSignature Language="VB.NET" Value="Public Class Choices" />
  <TypeSignature Language="C++ CLI" Value="public ref class Choices" />
  <TypeSignature Language="F#" Value="type Choices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_oneOf.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cc5f4-101">Representa un conjunto de alternativas en las restricciones de una gramática de reconocimiento de voz.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-101">Represents a set of alternatives in the constraints of a speech recognition grammar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc5f4-102">Un <xref:System.Speech.Recognition.Choices> objeto representa un componente de una frase que puede tener uno de varios valores.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-102">A <xref:System.Speech.Recognition.Choices> object represents a component of a phrase that can have one of several values.</span></span> <span data-ttu-id="cc5f4-103">Utilice esta clase al crear una gramática de reconocimiento de voz de un <xref:System.Speech.Recognition.GrammarBuilder> objeto.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-103">Use this class when creating a speech recognition grammar from a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 <span data-ttu-id="cc5f4-104">Por ejemplo, un <xref:System.Speech.Recognition.Choices> objeto podría representar el componente *colorChoice* de la frase, "cambiar el color a *colorChoice*", donde los valores aceptables para *colorChoice* son "rojo" o "verde" o "blue".</span><span class="sxs-lookup"><span data-stu-id="cc5f4-104">For example, a <xref:System.Speech.Recognition.Choices> object could represent the component *colorChoice* in the phrase, "Change the color to *colorChoice*", where acceptable values for *colorChoice* are "red", or "green", or "blue".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc5f4-105">Para usar un <xref:System.Speech.Recognition.Choices> como un componente opcional en una frase, cree el <xref:System.Speech.Recognition.Choices> y agregarlo a un <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> objeto con `minRepeat` y `maxRepeat` establecido en 0 y 1, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-105">To use a <xref:System.Speech.Recognition.Choices> object as an optional component in a phrase, create the <xref:System.Speech.Recognition.Choices> object and add it to a <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> object with `minRepeat` and `maxRepeat` set to 0 and 1, respectively.</span></span> <span data-ttu-id="cc5f4-106">Frases que contienen los componentes opcionales se pueden reconocer o no se habla el componente opcional.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-106">Phrases containing optional components can be recognized whether or not the optional component is spoken.</span></span>  
  
 <span data-ttu-id="cc5f4-107">El <xref:System.Speech.Recognition.Choices> clase realiza las mismas funciones como la `one-of` elemento XML definido por el [especificación de gramática de reconocimiento de voz (SRGS) versión 1.0](https://www.w3.org/TR/speech-grammar/) y es similar a la <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> clase en el <xref:System.Speech.Recognition.SrgsGrammar> espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-107">The <xref:System.Speech.Recognition.Choices> class serves the same function as the `one-of` XML element defined by the [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://www.w3.org/TR/speech-grammar/) and is similar to the <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> class in the <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span></span>  
  
 <span data-ttu-id="cc5f4-108">Para obtener más información acerca de cómo definir una gramática de reconocimiento de voz, consulte [el reconocimiento de voz](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) y [crear GrammarBuilder gramáticas](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="cc5f4-108">For more information about defining a speech recognition grammar, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc5f4-109">En el ejemplo siguiente se crea una gramática de reconocimiento de voz para la frase, "establecido en segundo plano en *colorChoice*", donde *colorChoice* puede ser uno de los colores definidos.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-109">The following example creates a speech recognition grammar for the phrase, "Set background to *colorChoice*", where *colorChoice* can be one of the defined colors.</span></span> <span data-ttu-id="cc5f4-110">El <xref:System.Speech.Recognition.GrammarBuilder> se utiliza para definir las restricciones de la gramática.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-110">The <xref:System.Speech.Recognition.GrammarBuilder> is used to define the constraints for the grammar.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a Choices object that contains a set of alternative colors.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  colorChoice.Add(new string[] {"cyan", "yellow", "magenta"});  
  
  // Construct the phrase.  
  GrammarBuilder builder = new GrammarBuilder("Set background to");  
  builder.Append(colorChoice);  
  
  // Create a grammar for the phrase.  
  Grammar colorGrammar = new Grammar(builder);  
  colorGrammar.Name = "SetBackground";  
  
  return colorGrammar;  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143"><span data-ttu-id="cc5f4-111">Especificación de gramática de reconocimiento de voz (SRGS)</span><span class="sxs-lookup"><span data-stu-id="cc5f4-111">Speech Recognition Grammar Specification (SRGS)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc5f4-112">Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-112">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc5f4-113">Puede construir un <xref:System.Speech.Recognition.Choices> objeto utilizando un constructor predeterminado (que devuelve un objeto vacío) de un grupo de <xref:System.String> objetos, o un conjunto de <xref:System.Speech.Recognition.GrammarBuilder> objetos.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-113">You can construct a <xref:System.Speech.Recognition.Choices> object using a default constructor (which returns an empty object), from a group of <xref:System.String> objects, or a from set of <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
 <span data-ttu-id="cc5f4-114">Dado que el <xref:System.Speech.Recognition.GrammarBuilder> objeto admite la conversión implícita de <xref:System.Speech.Recognition.SemanticResultValue> y <xref:System.Speech.Recognition.SemanticResultKey>, un <xref:System.Speech.Recognition.Choices> pueden construirse a partir de una matriz de estos objetos mediante una conversión.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-114">Because the <xref:System.Speech.Recognition.GrammarBuilder> object supports implicit conversion from <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>, a <xref:System.Speech.Recognition.Choices> can be constructed from an array of these objects using a cast.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc5f4-115">En el ejemplo siguiente se usa <xref:System.Speech.Recognition.Choices> objetos para crear dos listas de alternativas.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-115">The following example uses <xref:System.Speech.Recognition.Choices> objects to create two lists of alternatives.</span></span>  
  
 <span data-ttu-id="cc5f4-116">La primera <xref:System.Speech.Recognition.Choices> objeto se construye a partir de una matriz de <xref:System.String> objetos.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-116">The first <xref:System.Speech.Recognition.Choices> object is constructed from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="cc5f4-117">El otro <xref:System.Speech.Recognition.Choices> objeto se construye a partir de una matriz de <xref:System.Speech.Recognition.GrammarBuilder> objetos que se han convertido implícitamente mediante una conversión.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-117">The other <xref:System.Speech.Recognition.Choices> object is constructed from an array of <xref:System.Speech.Recognition.GrammarBuilder> objects which have been implicitly converted by a cast.</span></span>  
  
 <span data-ttu-id="cc5f4-118">El ejemplo se usa un <xref:System.Speech.Recognition.GrammarBuilder> objeto para ensamblar una frase, mediante el <xref:System.Speech.Recognition.Choices> objetos y dos cadenas adicionales, que pueden usarse para reconocer la voz de entrada en forma de "Call [contactlList] en [phoneType] teléfono", por ejemplo "Juana de llamada de teléfono móvil".</span><span class="sxs-lookup"><span data-stu-id="cc5f4-118">The example uses a <xref:System.Speech.Recognition.GrammarBuilder> object to assemble a phrase, using the <xref:System.Speech.Recognition.Choices> objects and two additional strings, that can be used to recognize speech input in the form of "Call [contactlList] on [phoneType] phone" , for example "Call Jane on cell phone".</span></span>  
  
```csharp
public GrammarBuilder ChoicesConstructor2 ()  
{  
    GrammarBuilder gb = new GrammarBuilder ();  
    Choices phoneType = new Choices (new string[] {"cell", "home", "work"});  
    Choices contactList = new Choices (new GrammarBuilder[] {(GrammarBuilder) "Mark", (GrammarBuilder) "Jane", (GrammarBuilder) "Frank"});  
    gb.Append ("Call");  
    gb.Append (contactList);  
    gb.Append ("on");  
    gb.Append (phoneType);  
    gb.Append ("phone");  
    return gb;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc5f4-119">Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.Choices" /> que contiene un conjunto vacío de alternativas.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-119">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class that contains an empty set of alternatives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc5f4-120">Este constructor devuelve un conjunto de vacío válido, de alternativas.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-120">This constructor returns a valid, empty set of alternatives.</span></span> <span data-ttu-id="cc5f4-121">Puede agregar alternativas mediante cualquiera de los <xref:System.Speech.Recognition.Choices.Add%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-121">You can add alternatives using any of the <xref:System.Speech.Recognition.Choices.Add%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc5f4-122">En el ejemplo siguiente se usa <xref:System.Speech.Recognition.Choices> y <xref:System.Speech.Recognition.GrammarBuilder> objetos para crear una frase que se puede usar para reconocer la entrada de voz, como "Anne llamada en su celda" y "Jaime llamada en su teléfono de trabajo".</span><span class="sxs-lookup"><span data-stu-id="cc5f4-122">The following example uses <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects to create a phrase that can be used to recognize speech input such as "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="cc5f4-123">El ejemplo usa conversiones implícitas del <xref:System.Speech.Recognition.Choices> y <xref:System.String> a <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-123">The example uses implicit casts from <xref:System.Speech.Recognition.Choices> and <xref:System.String> to <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices (params System.Speech.Recognition.GrammarBuilder[] alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder[] alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray alternateChoices As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices(... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Choices : System.Speech.Recognition.GrammarBuilder[] -&gt; System.Speech.Recognition.Choices" Usage="new System.Speech.Recognition.Choices alternateChoices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="alternateChoices"><span data-ttu-id="cc5f4-124">Una matriz que contiene el conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-124">An array containing the set of alternatives.</span></span></param>
        <summary><span data-ttu-id="cc5f4-125">Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.Choices" /> desde una matriz que contiene uno o más objetos <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-125">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class from an array containing one or more <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc5f4-126">Cada <xref:System.Speech.Recognition.GrammarBuilder> en `alternateChoices` define una alternativa.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-126">Each <xref:System.Speech.Recognition.GrammarBuilder> in `alternateChoices` defines one alternative.</span></span> <span data-ttu-id="cc5f4-127">Si `alternateChoices` es una matriz vacía, el constructor devuelve un conjunto vacío de alternativas.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-127">If `alternateChoices` is an empty array, the constructor returns an empty set of alternatives.</span></span> <span data-ttu-id="cc5f4-128">Puede agregar alternativas mediante cualquiera de los <xref:System.Speech.Recognition.Choices.Add%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-128">You can add alternatives using any of the <xref:System.Speech.Recognition.Choices.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="cc5f4-129">El constructor produce una <xref:System.ArgumentNullException> cuando `alternateChoices` es `null` o cuando cualquiera de los elementos de matriz son `null`.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-129">The constructor throws an <xref:System.ArgumentNullException> when `alternateChoices` is `null` or when any of the array elements are `null`.</span></span>  
  
 <span data-ttu-id="cc5f4-130">Dado que el <xref:System.Speech.Recognition.GrammarBuilder> proporciona compatibilidad para la conversión implícita de <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultValue>, y <xref:System.Speech.Recognition.SemanticResultKey> objetos a <xref:System.Speech.Recognition.GrammarBuilder> instancias, correctamente utilizando las conversiones, este constructor también se puede utilizar para crear un <xref:System.Speech.Recognition.Choices> objeto de una lista de cualquier combinación de estos objetos.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-130">Because the <xref:System.Speech.Recognition.GrammarBuilder> class provides support for implicit conversion of <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.SemanticResultKey> objects to <xref:System.Speech.Recognition.GrammarBuilder> instances, by properly using casts, this constructor can also be used to create a <xref:System.Speech.Recognition.Choices> object from a list of any combination of these objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc5f4-131">En el ejemplo siguiente se usa `Choices` y <xref:System.Speech.Recognition.GrammarBuilder> objetos para crear un <xref:System.Speech.Recognition.Grammar> frases como "Anne llamada en su celda" y "Jaime llamada en su teléfono de trabajo".</span><span class="sxs-lookup"><span data-stu-id="cc5f4-131">The following example uses `Choices` and <xref:System.Speech.Recognition.GrammarBuilder> objects to create a <xref:System.Speech.Recognition.Grammar> for phrases such as, "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="cc5f4-132">El ejemplo usa conversiones implícitas del `Choices` y <xref:System.String> a <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-132">The example uses implicit casts from `Choices` and <xref:System.String> to <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices (params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices(... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Choices : string[] -&gt; System.Speech.Recognition.Choices" Usage="new System.Speech.Recognition.Choices phrases" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="phrases"><span data-ttu-id="cc5f4-133">Una matriz que contiene el conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-133">An array containing the set of alternatives.</span></span></param>
        <summary><span data-ttu-id="cc5f4-134">Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Recognition.Choices" /> desde una matriz que contiene uno o más objetos <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-134">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class from an array containing one or more <see cref="T:System.String" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc5f4-135">Cada <xref:System.String> en `phrases` define una alternativa.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-135">Each <xref:System.String> in `phrases` defines one alternative.</span></span> <span data-ttu-id="cc5f4-136">El motor de reconocimiento de voz puede utilizar cualquiera de los elementos de la matriz de cadena para que coincida con la entrada de voz.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-136">The speech recognition engine can use any one of the items in the string array to match speech input.</span></span> <span data-ttu-id="cc5f4-137">Si `phrases` es una matriz vacía, el constructor devuelve un conjunto vacío de alternativas.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-137">If `phrases` is an empty array, the constructor returns an empty set of alternatives.</span></span> <span data-ttu-id="cc5f4-138">Puede agregar alternativas mediante cualquiera de los <xref:System.Speech.Recognition.Choices.Add%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-138">You can add alternatives using any of the <xref:System.Speech.Recognition.Choices.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="cc5f4-139">El constructor produce una <xref:System.ArgumentNullException> cuando `phrases` es `null` o cualquiera de los elementos de matriz son `null`.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-139">The constructor throws an <xref:System.ArgumentNullException> when `phrases` is `null` or any of the array elements are `null`.</span></span> <span data-ttu-id="cc5f4-140">El constructor produce una <xref:System.ArgumentException> si cualquier elemento de la matriz es una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="cc5f4-140">The constructor throws an <xref:System.ArgumentException> if any element in the array is an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc5f4-141">En el ejemplo siguiente se usa <xref:System.Speech.Recognition.Choices> y <xref:System.Speech.Recognition.GrammarBuilder> objetos para crear un <xref:System.Speech.Recognition.Grammar> para las frases como "Anne llamada en su celda" y "Jaime llamada en su teléfono de trabajo".</span><span class="sxs-lookup"><span data-stu-id="cc5f4-141">The following example uses <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects to create a <xref:System.Speech.Recognition.Grammar> for the phrases such as, "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="cc5f4-142">El ejemplo usa conversiones implícitas del `Choices` y <xref:System.String> a <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-142">The example uses implicit casts from `Choices` and <xref:System.String> to <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc5f4-143">Agrega elementos al conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-143">Adds items to the set of alternatives.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (params System.Speech.Recognition.GrammarBuilder[] alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Speech.Recognition.GrammarBuilder[] alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (ParamArray alternateChoices As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Speech.Recognition.GrammarBuilder[] -&gt; unit" Usage="choices.Add alternateChoices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="alternateChoices"><span data-ttu-id="cc5f4-144">Objetos <see cref="T:System.Speech.Recognition.GrammarBuilder" /> que se van a agregar a este objeto <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-144">The <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects to add to this <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></param>
        <summary><span data-ttu-id="cc5f4-145">Agrega una matriz que contiene uno o más objetos <see cref="T:System.Speech.Recognition.GrammarBuilder" /> al conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-145">Adds an array containing one or more <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects to the set of alternatives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc5f4-146">Debido a la compatibilidad para la conversión implícita de <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, y <xref:System.Speech.Recognition.SemanticResultValue> objetos a <xref:System.Speech.Recognition.GrammarBuilder>, estas clases se pueden agregar a un <xref:System.Speech.Recognition.Choices> también la instancia.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-146">Because of support for implicit conversion from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects to <xref:System.Speech.Recognition.GrammarBuilder>, these three classes may be added to a <xref:System.Speech.Recognition.Choices> instance as well.</span></span>  
  
 <span data-ttu-id="cc5f4-147">Si `alternateChoices` es una matriz vacía, este método no actualiza el conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-147">If `alternateChoices` is an empty array, this method does not update the set of alternatives.</span></span>  
  
 <span data-ttu-id="cc5f4-148">Las aplicaciones pueden usar ambos <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> y <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> agregar alternativas a un <xref:System.Speech.Recognition.Choices> objeto.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-148">Applications can use both <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> and <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> to add alternatives to a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
 <span data-ttu-id="cc5f4-149">Este método produce una <xref:System.ArgumentNullException> cuando `alternateChoices` es `null` o cualquiera de los elementos de matriz son `null`.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-149">This method throws an <xref:System.ArgumentNullException> when `alternateChoices` is `null` or any of the array elements are `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc5f4-150">El ejemplo siguiente crea una gramática de reconocimiento de voz para frases como "Anne llamada en su celda" y "Jaime llamada en su teléfono de trabajo".</span><span class="sxs-lookup"><span data-stu-id="cc5f4-150">The following example creates a speech recognition grammar for phrases such as "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="cc5f4-151">El ejemplo utiliza ambas sobrecargas de los <xref:System.Speech.Recognition.Choices.Add%2A> método de generación de la gramática.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-151">The example uses both overloads of the <xref:System.Speech.Recognition.Choices.Add%2A> method to build the grammar.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.Add(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberSignature Language="F#" Value="member this.Add : string[] -&gt; unit" Usage="choices.Add phrases" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="phrases"><span data-ttu-id="cc5f4-152">Las cadenas para agregar a este objeto <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-152">The strings to add to this <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></param>
        <summary><span data-ttu-id="cc5f4-153">Agrega una matriz que contiene uno o más objetos <see cref="T:System.String" /> al conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-153">Adds an array containing one or more <see cref="T:System.String" /> objects to the set of alternatives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc5f4-154">Las aplicaciones pueden usar ambos <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> y <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> agregar alternativas a un <xref:System.Speech.Recognition.Choices> objeto.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-154">Applications can use both <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> and <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> to add alternatives to a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
 <span data-ttu-id="cc5f4-155">Si `phrases` es una matriz vacía, este método no actualiza el conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-155">If `phrases` is an empty array, this method does not update the set of alternates.</span></span>  
  
 <span data-ttu-id="cc5f4-156">Este método produce una <xref:System.ArgumentNullException> cuando `phrases` es `null` o cualquiera de los elementos de matriz son `null`.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-156">This method throws an <xref:System.ArgumentNullException> when `phrases` is `null` or any of the array elements are `null`.</span></span> <span data-ttu-id="cc5f4-157">Este método produce una <xref:System.ArgumentException> si cualquier elemento de la matriz es una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="cc5f4-157">This method throws an <xref:System.ArgumentException> if any element in the array is the empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc5f4-158">El ejemplo siguiente crea una gramática de reconocimiento de voz para frases similar a "Anne llamada en su celda" y "Jaime llamada en su teléfono de trabajo".</span><span class="sxs-lookup"><span data-stu-id="cc5f4-158">The following example creates a speech recognition grammar for phrases similar to "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="cc5f4-159">El ejemplo utiliza ambas sobrecargas de los <xref:System.Speech.Recognition.Choices.Add%2A> método de generación de la gramática.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-159">The example uses both overloads of the <xref:System.Speech.Recognition.Choices.Add%2A> method to build the grammar.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="choices.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc5f4-160">Devuelve un objeto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> desde este objeto <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-160">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object from this <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></summary>
        <returns><span data-ttu-id="cc5f4-161">Valor <see cref="T:System.Speech.Recognition.GrammarBuilder" /> que coincide con este objeto <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-161">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that matches this <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc5f4-162">El <xref:System.Speech.Recognition.GrammarBuilder> devuelto por este método es equivalente a uno devuelto por cualquiera de las siguientes.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-162">The <xref:System.Speech.Recognition.GrammarBuilder> returned by this method is equivalent to one returned by either of the following.</span></span>  
  
-   <span data-ttu-id="cc5f4-163">Una llamada a la <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> constructor con este objeto como parámetro.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-163">Calling the <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> constructor with this object as the parameter.</span></span>  
  
-   <span data-ttu-id="cc5f4-164">Uso implícito o explícito convertir de este objeto en un <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-164">Using the implicit or explicit cast of this object to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc5f4-165">El ejemplo siguiente crea una gramática de reconocimiento de voz para cambiar el color de fondo.</span><span class="sxs-lookup"><span data-stu-id="cc5f4-165">The following example creates a speech recognition grammar for changing the background color.</span></span>  
  
```csharp  
  
private Grammar CreateColorChoice()  
{  
  
  // Create a Choices object that contains a set of alternative colors.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append(new Choices(new string[] {"Set", "Change"}));  
  gb.Append("background to");  
  gb.Append(colorChoice.ToGrammarBuilder());  
  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "modify background color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>
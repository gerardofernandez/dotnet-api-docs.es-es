<Type Name="SemanticResultKey" FullName="System.Speech.Recognition.SemanticResultKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6aad3d88a430bcf8a58450a9babf36a233a056ce" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55399063" /></Metadata><TypeSignature Language="C#" Value="public class SemanticResultKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultKey" />
  <TypeSignature Language="F#" Value="type SemanticResultKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_semanticKey.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="23383-101">Asocia una cadena de clave a valores <see cref="T:System.Speech.Recognition.SemanticResultValue" /> para definir objetos <see cref="T:System.Speech.Recognition.SemanticValue" />.</span><span class="sxs-lookup"><span data-stu-id="23383-101">Associates a key string with <see cref="T:System.Speech.Recognition.SemanticResultValue" /> values to define <see cref="T:System.Speech.Recognition.SemanticValue" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23383-102">Es la unidad básica de expresión semántico en System.Speech el <xref:System.Speech.Recognition.SemanticValue>, que es un par clave/valor.</span><span class="sxs-lookup"><span data-stu-id="23383-102">The basic unit of semantic expression in System.Speech is the <xref:System.Speech.Recognition.SemanticValue>, which is a key/value pair.</span></span>  
  
 <span data-ttu-id="23383-103">Mediante <xref:System.Speech.Recognition.SemanticResultKey> objetos, etiqueta <xref:System.Speech.Recognition.SemanticResultValue> las instancias contenidas en <xref:System.Speech.Recognition.GrammarBuilder> objetos y cadenas de modo que los valores pueden obtenerse fácilmente desde <xref:System.Speech.Recognition.SemanticValue> instancias en el reconocimiento.</span><span class="sxs-lookup"><span data-stu-id="23383-103">Using <xref:System.Speech.Recognition.SemanticResultKey> objects, you tag <xref:System.Speech.Recognition.SemanticResultValue> instances contained in <xref:System.Speech.Recognition.GrammarBuilder> objects and strings so that the values may readily be accessed from <xref:System.Speech.Recognition.SemanticValue> instances on recognition.</span></span>  
  
 <span data-ttu-id="23383-104">Puede usar <xref:System.Speech.Recognition.SemanticResultValue> y <xref:System.Speech.Recognition.SemanticResultKey> objetos, junto con <xref:System.Speech.Recognition.GrammarBuilder> y <xref:System.Speech.Recognition.Choices> objetos para definir la estructura de la semántica de una gramática de reconocimiento de voz.</span><span class="sxs-lookup"><span data-stu-id="23383-104">You can use <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects, to define the semantic structure for a speech recognition grammar.</span></span> <span data-ttu-id="23383-105">Para obtener acceso a la información semántica en un resultado de reconocimiento, obtener una instancia de <xref:System.Speech.Recognition.SemanticValue> a través de la <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> propiedad <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="23383-105">To access the semantic information in a recognition result, obtain an instance of <xref:System.Speech.Recognition.SemanticValue> through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
  
## Examples  
 <span data-ttu-id="23383-106">En el ejemplo siguiente se crea un <xref:System.Speech.Recognition.Grammar> para reconocer la entrada de contraseña del formulario "mi contraseña es...", donde la entrada real coincide con un carácter comodín.</span><span class="sxs-lookup"><span data-stu-id="23383-106">The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form "My password is …", where the actual input is matched with a wildcard.</span></span>  
  
 <span data-ttu-id="23383-107">El carácter comodín se etiqueta con una clave semántica y el <xref:System.Speech.Recognition.Grammar.SpeechRecognized> controlador comprueba la presencia de esta etiqueta para comprobar que se ha producido una entrada de contraseña.</span><span class="sxs-lookup"><span data-stu-id="23383-107">The wildcard is tagged with a semantic key, and the <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag to verify that a password input has occurred.</span></span>  
  
```csharp  
private void pwdGrammar()   
{  
  GrammarBuilder pwdBuilder = new GrammarBuilder("My Password is");  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey wildcardKey= new SemanticResultKey("Password", wildcardBuilder);  
  pwdBuilder+=wildcardKey;  
  Grammar grammar = new Grammar(pwdBuilder);  
  grammar.Name = "Password input";  
  
  grammar.SpeechRecognized += delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
  {  
    SemanticValue semantics = eventArgs.Result.Semantics;  
    RecognitionResult result=eventArgs.Result;  
  
    if (!semantics.ContainsKey("Password"))   
    {  
      SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
    }  
    else   
    {  
      RecognizedAudio pwdAudio = result.GetAudioForWordRange(result.Words[3], result.Words[result.Words.Count - 1]);  
      MemoryStream pwdMemoryStream = new MemoryStream();  
      pwdAudio.WriteToAudioStream(pwdMemoryStream);  
      if (!IsValidPwd(pwdMemoryStream))   
      {  
        string badPwd = System.IO.Path.GetTempPath() + "BadPwd" + (new Random()).Next().ToString() + ".wav";  
        FileStream waveStream = new FileStream(badPwd, FileMode.Create);  
        pwdAudio.WriteToWaveStream(waveStream);  
        waveStream.Flush();  
        waveStream.Close();  
        SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);  
  
      }  
    }  
  };  
  grammar.Enabled = true;  
  _recognizer.LoadGrammar(grammar);  
  UpdateGrammarTree(_grammarTreeView, _recognizer);  
  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.SemanticValue" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361587(v%3doffice.14)"><span data-ttu-id="23383-108">Uso de un SemanticResultKey para extraer un SemanticResultValue</span><span class="sxs-lookup"><span data-stu-id="23383-108">Using a SemanticResultKey to Extract a SemanticResultValue</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="23383-109">Crea una instancia de <see cref="T:System.Speech.Recognition.SemanticResultKey" /> y asocia la clave a los componentes de gramática.</span><span class="sxs-lookup"><span data-stu-id="23383-109">Constructs an instance of <see cref="T:System.Speech.Recognition.SemanticResultKey" /> and associates the key with grammar components.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23383-110">Los constructores para <xref:System.Speech.Recognition.SemanticResultKey> especificar una etiqueta de texto (la clave semántica) y un conjunto de componentes de gramática para agregar a una gramática de reconocimiento de voz.</span><span class="sxs-lookup"><span data-stu-id="23383-110">The constructors for <xref:System.Speech.Recognition.SemanticResultKey> specify a text tag (the semantic key) and a set of grammar components to add to a speech recognition grammar.</span></span>  
  
 <span data-ttu-id="23383-111">La gramática de componentes se pueden especifica como una matriz de <xref:System.Speech.Recognition.GrammarBuilder> objetos, o como una matriz de <xref:System.String> instancias.</span><span class="sxs-lookup"><span data-stu-id="23383-111">The grammar components can be specified either as an array of <xref:System.Speech.Recognition.GrammarBuilder> objects, or as an array of <xref:System.String> instances.</span></span>  
  
 <span data-ttu-id="23383-112">Si se usan los componentes de gramática de reconocimiento, puede tener acceso el valor devuelto <xref:System.Speech.Recognition.SemanticValue> mediante la etiqueta de texto proporcionada al constructor de <xref:System.Speech.Recognition.SemanticResultKey> como clave semántica.</span><span class="sxs-lookup"><span data-stu-id="23383-112">If the grammar components are used in recognition, you can access the returned <xref:System.Speech.Recognition.SemanticValue> using the text tag provided to the constructor of <xref:System.Speech.Recognition.SemanticResultKey> as a semantic key.</span></span> <span data-ttu-id="23383-113">El <xref:System.Speech.Recognition.SemanticValue.Value%2A> propiedad de la <xref:System.Speech.Recognition.SemanticValue> instancia vendrá determinada por los componentes de gramática que se utilizan en la definición de <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="23383-113">The <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> instance will be determined by the grammar components used in the definition of <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultKey (string semanticResultKey, params System.Speech.Recognition.GrammarBuilder[] builders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string semanticResultKey, class System.Speech.Recognition.GrammarBuilder[] builders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (semanticResultKey As String, ParamArray builders As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultKey(System::String ^ semanticResultKey, ... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ builders);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultKey : string * System.Speech.Recognition.GrammarBuilder[] -&gt; System.Speech.Recognition.SemanticResultKey" Usage="new System.Speech.Recognition.SemanticResultKey (semanticResultKey, builders)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="semanticResultKey" Type="System.String" />
        <Parameter Name="builders" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="semanticResultKey"><span data-ttu-id="23383-114">La etiqueta que se usará como clave semántica para tener acceso a la instancia de <see cref="T:System.Speech.Recognition.SemanticValue" /> asociada a los objetos <see cref="T:System.Speech.Recognition.GrammarBuilder" /> especificados por el argumento <paramref name="builders" />.</span><span class="sxs-lookup"><span data-stu-id="23383-114">The tag to be used as a semantic key to access the <see cref="T:System.Speech.Recognition.SemanticValue" /> instance associated with the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects specified by the <paramref name="builders" /> argument.</span></span></param>
        <param name="builders"><span data-ttu-id="23383-115">Matriz de componentes de gramática que se asociarán a un objeto <see cref="T:System.Speech.Recognition.SemanticValue" /> accesible mediante la etiqueta definida en <paramref name="semanticResultKey" />.</span><span class="sxs-lookup"><span data-stu-id="23383-115">An array of grammar components that will be associated with a <see cref="T:System.Speech.Recognition.SemanticValue" /> object accessible with the tag defined in <paramref name="semanticResultKey" />.</span></span></param>
        <summary><span data-ttu-id="23383-116">Asigna una clave semántica a uno o más objetos <see cref="T:System.Speech.Recognition.GrammarBuilder" /> usados para crear una gramática de reconocimiento de voz.</span><span class="sxs-lookup"><span data-stu-id="23383-116">Assigns a semantic key to one or more <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects used to create a speech recognition grammar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23383-117">Debido a conversiones implícitas, la `builders` argumento admite <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, y <xref:System.String> también objetos.</span><span class="sxs-lookup"><span data-stu-id="23383-117">Because of implicit conversions, the `builders` argument supports <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, and <xref:System.String> objects as well.</span></span> <span data-ttu-id="23383-118">Para obtener más información sobre las conversiones implícitas, vea <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.</span><span class="sxs-lookup"><span data-stu-id="23383-118">For more information on implicit conversions, see <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.</span></span>  
  
 <span data-ttu-id="23383-119">Al realizar una operación de reconocimiento, la <xref:System.Speech.Recognition.GrammarBuilder> objetos proporcionados en el `builders` argumento se tratan como secuencial.</span><span class="sxs-lookup"><span data-stu-id="23383-119">When performing a recognition operation, the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` argument are treated as sequential.</span></span> <span data-ttu-id="23383-120">Por ejemplo, si la siguiente <xref:System.Speech.Recognition.SemanticResultValue> se usa para construir un <xref:System.Speech.Recognition.Grammar>, entrada para el motor de reconocimiento debe contener las palabras "el veloz murciélago" en la secuencia que se reconozcan.</span><span class="sxs-lookup"><span data-stu-id="23383-120">For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words "the quick brown fox" in sequence to be recognized.</span></span>  
  
```csharp  
SemanticResultKey stringTest=new SemanticResultKey(  
    "stringTest", new GrammarBuilder[] {  
    new GrammarBuilder("the"),  
    new GrammarBuilder("quick"),  
    new GrammarBuilder("brown"),  
    new GrammarBuilder("fox")});  
```  
  
 <span data-ttu-id="23383-121">El `semanticResultKey` argumento contiene la etiqueta utilizada para tener acceso a la <xref:System.Speech.Recognition.SemanticValue> que se podría devolver.</span><span class="sxs-lookup"><span data-stu-id="23383-121">The `semanticResultKey` argument contains the tag used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.</span></span>  
  
 <span data-ttu-id="23383-122">El <xref:System.Speech.Recognition.SemanticValue.Value%2A> de la <xref:System.Speech.Recognition.SemanticValue> viene determinada por la <xref:System.Speech.Recognition.GrammarBuilder> instancias proporcionadas por el `builders` parámetro.</span><span class="sxs-lookup"><span data-stu-id="23383-122">The <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> is determined by the <xref:System.Speech.Recognition.GrammarBuilder> instances provided by the `builders` parameter.</span></span>  
  
 <span data-ttu-id="23383-123">Si el <xref:System.Speech.Recognition.GrammarBuilder> objetos no contienen ninguna instancia de definición de <xref:System.Speech.Recognition.SemanticResultValue>, el valor de la <xref:System.Speech.Recognition.SemanticValue> es `null`.</span><span class="sxs-lookup"><span data-stu-id="23383-123">If the <xref:System.Speech.Recognition.GrammarBuilder> objects contain no defining instances of <xref:System.Speech.Recognition.SemanticResultValue>, the value of the <xref:System.Speech.Recognition.SemanticValue> is `null`.</span></span>  
  
 <span data-ttu-id="23383-124">Si el <xref:System.Speech.Recognition.GrammarBuilder> objetos proporcionados en el `builders` parámetro proporcionar un etiquetado (no está asociado con un <xref:System.Speech.Recognition.SemanticResultKey> objeto) <xref:System.Speech.Recognition.SemanticResultValue> instancia que utiliza la lógica de reconocimiento, esa instancia de <xref:System.Speech.Recognition.SemanticResultValue> definirá el <xref:System.Speech.Recognition.SemanticValue.Value%2A>propiedad de la <xref:System.Speech.Recognition.SemanticValue> que se genera.</span><span class="sxs-lookup"><span data-stu-id="23383-124">If the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` parameter provide an untagged (not associated with a <xref:System.Speech.Recognition.SemanticResultKey> object) <xref:System.Speech.Recognition.SemanticResultValue> instance that is used by the recognition logic, that instance of <xref:System.Speech.Recognition.SemanticResultValue> will define the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> that is produced.</span></span>  
  
 <span data-ttu-id="23383-125">Debería haber uno y solo uno, no etiquetado <xref:System.Speech.Recognition.SemanticResultValue> de instancia en el <xref:System.Speech.Recognition.GrammarBuilder> objetos especificados por el `builders` parámetro.</span><span class="sxs-lookup"><span data-stu-id="23383-125">There should be one, and only one, untagged <xref:System.Speech.Recognition.SemanticResultValue> instance in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter.</span></span> <span data-ttu-id="23383-126">Si no etiquetado varias instancias de <xref:System.Speech.Recognition.SemanticResultValue> están asociadas con el <xref:System.Speech.Recognition.SemanticResultKey>, cada uno intentará el conjunto el valor de la <xref:System.Speech.Recognition.SemanticValue> producidos en el resultado de reconocimiento.</span><span class="sxs-lookup"><span data-stu-id="23383-126">If multiple instances of untagged <xref:System.Speech.Recognition.SemanticResultValue> are associated with the <xref:System.Speech.Recognition.SemanticResultKey>, each will attempt to the set the value of the <xref:System.Speech.Recognition.SemanticValue> produced in the recognition result.</span></span> <span data-ttu-id="23383-127">Esto no está permitido y el reconocedor, generará una excepción cuando intenta usar un <xref:System.Speech.Recognition.Grammar> siguieron como un <xref:System.Speech.Recognition.SemanticResultKey> instancia.</span><span class="sxs-lookup"><span data-stu-id="23383-127">This is not permitted, and the recognizer will generate an exception when it attempts to use a <xref:System.Speech.Recognition.Grammar> created using such a <xref:System.Speech.Recognition.SemanticResultKey> instance.</span></span>  
  
 <span data-ttu-id="23383-128">Las instancias de <xref:System.Speech.Recognition.SemanticResultValue> contenidos en el <xref:System.Speech.Recognition.GrammarBuilder> objetos especificados por el `builders` parámetro y ya está asociada a otro <xref:System.Speech.Recognition.SemanticResultKey> no tienen ningún efecto en la actual <xref:System.Speech.Recognition.SemanticResultKey> instancia.</span><span class="sxs-lookup"><span data-stu-id="23383-128">Instances of <xref:System.Speech.Recognition.SemanticResultValue> contained in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter and already associated with another <xref:System.Speech.Recognition.SemanticResultKey> have no effect on the current <xref:System.Speech.Recognition.SemanticResultKey> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23383-129">En el ejemplo siguiente se crea un <xref:System.Speech.Recognition.Grammar> para reconocer la entrada de contraseña del formulario "mi contraseña es...", donde la entrada real coincide con un carácter comodín.</span><span class="sxs-lookup"><span data-stu-id="23383-129">The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form "My password is …", where the actual input is matched with a wildcard.</span></span>  
  
 <span data-ttu-id="23383-130">El carácter comodín se etiqueta por un <xref:System.Speech.Recognition.SpeechRecognizer> cuyo valor de clave es "Password".</span><span class="sxs-lookup"><span data-stu-id="23383-130">The wildcard is tagged by a <xref:System.Speech.Recognition.SpeechRecognizer> whose key value is "Password".</span></span> <span data-ttu-id="23383-131">El <xref:System.Speech.Recognition.Grammar.SpeechRecognized> controlador comprueba la presencia de esta etiqueta, obtiene la entrada de audio de la contraseña y comprueba la contraseña.</span><span class="sxs-lookup"><span data-stu-id="23383-131">The <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag, obtains the audio input of the password, and verifies the password.</span></span>  
  
```csharp  
private void pwdGrammar()   
{  
  GrammarBuilder pwdBuilder = new GrammarBuilder("My Password is");  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey wildcardKey= new SemanticResultKey("Password", wildcardBuilder);  
  pwdBuilder+=wildcardKey;  
  Grammar grammar = new Grammar(pwdBuilder);  
  grammar.Name = "Password input";  
  
  grammar.SpeechRecognized +=   
    delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
    {  
      SemanticValue semantics = eventArgs.Result.Semantics;  
      RecognitionResult result=eventArgs.Result;  
  
      if (!semantics.ContainsKey("Password"))   
      {  
        SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
      }  
      else   
      {  
        RecognizedAudio pwdAudio = result.GetAudioForWordRange(  
                  result.Words[3],  
                  result.Words[result.Words.Count - 1]);  
                  MemoryStream pwdMemoryStream = new MemoryStream();  
                  pwdAudio.WriteToAudioStream(pwdMemoryStream);  
        if (!IsValidPwd(pwdMemoryStream))   
        {  
          string badPwd = System.IO.Path.GetTempPath() + "BadPwd" + (new Random()).Next().ToString() + ".wav";  
          FileStream waveStream = new FileStream(badPwd, FileMode.Create);    
          pwdAudio.WriteToWaveStream(waveStream);  
          waveStream.Flush();  
          waveStream.Close();  
          SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);      
        }  
      }  
    };  
  
  grammar.Enabled = true;  
  _recognizer.LoadGrammar(grammar);  
  UpdateGrammarTree(_grammarTreeView, _recognizer);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultKey (string semanticResultKey, params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string semanticResultKey, string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (semanticResultKey As String, ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultKey(System::String ^ semanticResultKey, ... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultKey : string * string[] -&gt; System.Speech.Recognition.SemanticResultKey" Usage="new System.Speech.Recognition.SemanticResultKey (semanticResultKey, phrases)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="semanticResultKey" Type="System.String" />
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="semanticResultKey"><span data-ttu-id="23383-132">La etiqueta que se usará para acceder a la instancia de <see cref="T:System.Speech.Recognition.SemanticValue" /> asociada a los objetos <see cref="T:System.String" /> especificados por el argumento <paramref name="phrases" />.</span><span class="sxs-lookup"><span data-stu-id="23383-132">The tag to be used access the <see cref="T:System.Speech.Recognition.SemanticValue" /> instance associated with the <see cref="T:System.String" /> objects specified by the <paramref name="phrases" /> argument.</span></span></param>
        <param name="phrases"><span data-ttu-id="23383-133">Uno o más objetos <see cref="T:System.String" />, cuyo texto concatenado se asociará a un objeto <see cref="T:System.Speech.Recognition.SemanticValue" /> accesible con la etiqueta definida en <paramref name="semanticResultKey" />.</span><span class="sxs-lookup"><span data-stu-id="23383-133">One or more <see cref="T:System.String" /> objects, whose concatenated text will be associated with a <see cref="T:System.Speech.Recognition.SemanticValue" /> object accessible with the tag defined in <paramref name="semanticResultKey" />.</span></span></param>
        <summary><span data-ttu-id="23383-134">Asigna una clave semántica a una o más instancias de <see cref="T:System.String" /> usadas para crear una gramática de reconocimiento de voz.</span><span class="sxs-lookup"><span data-stu-id="23383-134">Assigns a semantic key to one or more <see cref="T:System.String" /> instances used to create a speech recognition grammar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23383-135">Al realizar una operación de reconocimiento, la <xref:System.String> objetos usados en el `phrases` parámetro se tratan como secuencial.</span><span class="sxs-lookup"><span data-stu-id="23383-135">When performing a recognition operation, the <xref:System.String> objects used in the `phrases` parameter are treated as sequential.</span></span> <span data-ttu-id="23383-136">Por ejemplo, si la siguiente <xref:System.Speech.Recognition.SemanticResultValue> se usa para construir un <xref:System.Speech.Recognition.Grammar>, entrada para el motor de reconocimiento debe contener las palabras "el veloz murciélago" en la secuencia que se reconozcan.</span><span class="sxs-lookup"><span data-stu-id="23383-136">For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words "the quick brown fox" in sequence to be recognized.</span></span>  
  
```csharp  
SemanticResultKey stringTest=new SemanticResultKey("stringTest",   
                                new string[] {  
                                               "the",  
                                               "quick",  
                                               "brown",  
                                               "fox"});  
```  
  
 <span data-ttu-id="23383-137">El `semanticResultKey` argumento determina la clave utilizada para tener acceso a la <xref:System.Speech.Recognition.SemanticValue> que se podría devolver.</span><span class="sxs-lookup"><span data-stu-id="23383-137">The `semanticResultKey` argument determines the key used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.</span></span>  
  
 <span data-ttu-id="23383-138">Si crea un <xref:System.Speech.Recognition.Grammar> mediante un <xref:System.Speech.Recognition.GrammarBuilder> objeto que contiene una clave semántica con una matriz de objetos de cadena, el <xref:System.Speech.Recognition.SemanticValue.Value%2A> de la <xref:System.Speech.Recognition.SemanticValue> generada por una operación de reconocimiento será la cadena utilizada en el reconocimiento.</span><span class="sxs-lookup"><span data-stu-id="23383-138">If you construct a <xref:System.Speech.Recognition.Grammar> using a <xref:System.Speech.Recognition.GrammarBuilder> object that contains a semantic key with an array of string objects,  the <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> produced by a recognition operation  will be the string used in recognition.</span></span> <span data-ttu-id="23383-139">En el ejemplo anterior, esto significa que <xref:System.Speech.Recognition.SemanticValue.Value%2A> sería "el veloz murciélago".</span><span class="sxs-lookup"><span data-stu-id="23383-139">In the preceding example, this means that <xref:System.Speech.Recognition.SemanticValue.Value%2A> would be "the quick brown fox".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23383-140">En el ejemplo siguiente se crea un <xref:System.Speech.Recognition.Grammar> desde un <xref:System.Speech.Recognition.GrammarBuilder> objeto que se utiliza un <xref:System.Speech.Recognition.SemanticResultKey>, que se define mediante una matriz de <xref:System.String> objetos.</span><span class="sxs-lookup"><span data-stu-id="23383-140">The following example creates a <xref:System.Speech.Recognition.Grammar> from a <xref:System.Speech.Recognition.GrammarBuilder> object that uses a <xref:System.Speech.Recognition.SemanticResultKey>, which is defined by an array of <xref:System.String> objects.</span></span>  
  
 <span data-ttu-id="23383-141">Un motor de reconocimiento usando el <xref:System.Speech.Recognition.Grammar> creado se reconoce la frase "de color rojo cero azul verde".</span><span class="sxs-lookup"><span data-stu-id="23383-141">A recognition engine using the <xref:System.Speech.Recognition.Grammar> created will recognize the phrase "color red green blue zero".</span></span> <span data-ttu-id="23383-142">La semántica de la <xref:System.Speech.Recognition.RecognizedPhrase> devuelto por reconocimiento contendrá un <xref:System.Speech.Recognition.SemanticValue> con un <xref:System.Speech.Recognition.SemanticValue.Value%2A> "rojo verde azul".</span><span class="sxs-lookup"><span data-stu-id="23383-142">The semantics of the <xref:System.Speech.Recognition.RecognizedPhrase> returned by recognition will contain a <xref:System.Speech.Recognition.SemanticValue> with a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of "red green blue".</span></span> <span data-ttu-id="23383-143">Puede tener acceso a la <xref:System.Speech.Recognition.SemanticValue> con la etiqueta "code".</span><span class="sxs-lookup"><span data-stu-id="23383-143">You can access the <xref:System.Speech.Recognition.SemanticValue> using the "code" tag.</span></span>  
  
 <span data-ttu-id="23383-144">Debido la `SemanticResultValue("zero", 5)` anexado a la <xref:System.Speech.Recognition.GrammarBuilder>, la raíz <xref:System.Speech.Recognition.SemanticValue> objeto en el <xref:System.Speech.Recognition.RecognizedPhrase> tendrá un valor de 5.</span><span class="sxs-lookup"><span data-stu-id="23383-144">Because of the `SemanticResultValue("zero", 5)` appended to the <xref:System.Speech.Recognition.GrammarBuilder>, the root <xref:System.Speech.Recognition.SemanticValue> object in the <xref:System.Speech.Recognition.RecognizedPhrase> will have a value of 5.</span></span>  
  
```csharp  
private void keyTest()   
{  
  // Say "color red green blue zero"  
  GrammarBuilder gb = new GrammarBuilder("color") +  
                        new SemanticResultKey("code",   
                          (new string[] {"red", "green", "blue"})) +  
                        new SemanticResultValue("zero", 5);  
  Grammar g = new Grammar(gb);  
  g.Name = "keyTest";  
  _recognizer.LoadGrammar(g);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="semanticResultKey.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23383-145">Devuelve una instancia de <see cref="T:System.Speech.Recognition.GrammarBuilder" /> construida a partir de la instancia de <see cref="T:System.Speech.Recognition.SemanticResultKey" /> actual.</span><span class="sxs-lookup"><span data-stu-id="23383-145">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultKey" /> instance.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23383-146">El uso de <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> equivale a usar el <xref:System.Speech.Recognition.GrammarBuilder> constructor que toma <xref:System.Speech.Recognition.SemanticResultKey> como un argumento (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).</span><span class="sxs-lookup"><span data-stu-id="23383-146">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor which takes <xref:System.Speech.Recognition.SemanticResultKey> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23383-147">En el ejemplo siguiente se crea un <xref:System.Speech.Recognition.Grammar> objeto que admite los comandos para cambiar el color de fondo.</span><span class="sxs-lookup"><span data-stu-id="23383-147">The following example creates a <xref:System.Speech.Recognition.Grammar> object that supports commands to change the background color.</span></span>  
  
 <span data-ttu-id="23383-148">Un <xref:System.Speech.Recognition.Choices> objeto (`colorChoice`) que contiene la lista de opciones para los colores de fondo se rellena mediante la <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> método con <xref:System.Speech.Recognition.GrammarBuilder> instancias.</span><span class="sxs-lookup"><span data-stu-id="23383-148">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances.</span></span> <span data-ttu-id="23383-149">El <xref:System.Speech.Recognition.GrammarBuilder> instancias se obtienen a través de la <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> método en el <xref:System.Speech.Recognition.SemanticResultValue> objetos creados a partir de las cadenas de color.</span><span class="sxs-lookup"><span data-stu-id="23383-149">The <xref:System.Speech.Recognition.GrammarBuilder> instances are obtained through the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the <xref:System.Speech.Recognition.SemanticResultValue> objects created from color strings.</span></span>  
  
 <span data-ttu-id="23383-150">Un <xref:System.Speech.Recognition.GrammarBuilder> , a continuación, se obtiene mediante una llamada a <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> en un <xref:System.Speech.Recognition.SemanticResultKey> instancia, que se usará para las opciones de semánticas en la clave `colorChoice`.</span><span class="sxs-lookup"><span data-stu-id="23383-150">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in `colorChoice`.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RGB.  
  // Choices constructors do not take SemanticResultValue parameters, so cast   
  // the SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
    SemanticResultValue colorValue=new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.  
    colorChoice.Add(colorValue.ToGrammarBuilder());      
  }  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with introductory phrase and the color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the Grammar object, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] {makeBackgroundBuilder, configureBackgroundBuilder}));  
  grammar.Name = "Make Background /Configure background as";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
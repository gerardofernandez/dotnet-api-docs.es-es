<Type Name="BindingOperations" FullName="System.Windows.Data.BindingOperations">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bd6c8d921090628de948182b18107a0340ae04db" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57935047" /></Metadata><TypeSignature Language="C#" Value="public static class BindingOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BindingOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingOperations" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingOperations abstract sealed" />
  <TypeSignature Language="F#" Value="type BindingOperations = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="42478-101">Proporciona métodos estáticos para manipular los enlaces, como los objetos <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" /> y <see cref="T:System.Windows.Data.PriorityBinding" />.</span><span class="sxs-lookup"><span data-stu-id="42478-101">Provides static methods to manipulate bindings, including <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42478-102">Esta clase expone un conjunto de métodos estáticos que actúan como operaciones auxiliares para los enlaces de datos.</span><span class="sxs-lookup"><span data-stu-id="42478-102">This class exposes a set of static methods that serve as helper operations for data bindings.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessCollection">
      <MemberSignature Language="C#" Value="public static void AccessCollection (System.Collections.IEnumerable collection, Action accessMethod, bool writeAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AccessCollection(class System.Collections.IEnumerable collection, class System.Action accessMethod, bool writeAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AccessCollection (collection As IEnumerable, accessMethod As Action, writeAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AccessCollection(System::Collections::IEnumerable ^ collection, Action ^ accessMethod, bool writeAccess);" />
      <MemberSignature Language="F#" Value="static member AccessCollection : System.Collections.IEnumerable * Action * bool -&gt; unit" Usage="System.Windows.Data.BindingOperations.AccessCollection (collection, accessMethod, writeAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="accessMethod" Type="System.Action" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="writeAccess" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="42478-103">Colección a la que se va a acceder.</span><span class="sxs-lookup"><span data-stu-id="42478-103">The collection to access.</span></span></param>
        <param name="accessMethod"><span data-ttu-id="42478-104">La acción para realizar en la colección.</span><span class="sxs-lookup"><span data-stu-id="42478-104">The action to perform on the collection.</span></span></param>
        <param name="writeAccess"><span data-ttu-id="42478-105"><see langword="true" /> si <paramref name="accessMethod" /> escribirá en la colección; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="42478-105"><see langword="true" /> if <paramref name="accessMethod" /> will write to the collection; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="42478-106">Proporciona acceso a una colección mediante el mecanismo de sincronización que la aplicación especificó al llamar a EnableCollectionSynchronization.</span><span class="sxs-lookup"><span data-stu-id="42478-106">Provides access to a collection by using the synchronization mechanism that the application specified when it called EnableCollectionSynchronization.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAllBindings">
      <MemberSignature Language="C#" Value="public static void ClearAllBindings (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllBindings(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllBindings (target As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllBindings(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member ClearAllBindings : System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Data.BindingOperations.ClearAllBindings target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="42478-107">Objeto del que se van a quitar los enlaces.</span><span class="sxs-lookup"><span data-stu-id="42478-107">The object from which to remove bindings.</span></span></param>
        <summary><span data-ttu-id="42478-108">Quita todos los enlaces, incluidos los enlaces de tipo <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" /> y <see cref="T:System.Windows.Data.PriorityBinding" />, del objeto <see cref="T:System.Windows.DependencyObject" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="42478-108">Removes all bindings, including bindings of type <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" />, from the specified <see cref="T:System.Windows.DependencyObject" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42478-109">Si el objeto especificado no está enlazado a datos, este método no tiene ningún efecto.</span><span class="sxs-lookup"><span data-stu-id="42478-109">If the specified object is not data-bound, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="42478-110">Si <paramref name="target" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="42478-110">If <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClearBinding">
      <MemberSignature Language="C#" Value="public static void ClearBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearBinding (target As DependencyObject, dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member ClearBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; unit" Usage="System.Windows.Data.BindingOperations.ClearBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="42478-111">Objeto del que se va a quitar el enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-111">The object from which to remove the binding.</span></span></param>
        <param name="dp"><span data-ttu-id="42478-112">Propiedad de dependencia de la que se va a quitar el enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-112">The dependency property from which to remove the binding.</span></span></param>
        <summary><span data-ttu-id="42478-113">Quita el enlace de una propiedad, si existe uno.</span><span class="sxs-lookup"><span data-stu-id="42478-113">Removes the binding from a property if there is one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42478-114">Si la propiedad especificada está enlazada a datos con un <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, o <xref:System.Windows.Data.MultiBinding>, este método quita la expresión de enlace y las restauraciones se estableció el valor de la propiedad que tenía antes de cualquier valor local a través del enlace correspondiente.</span><span class="sxs-lookup"><span data-stu-id="42478-114">If the given property is data-bound with a <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, or <xref:System.Windows.Data.MultiBinding>, this method removes the corresponding binding expression and restores the value of the property to what it was before any local value was set through the binding.</span></span>  
  
 <span data-ttu-id="42478-115">Si la propiedad especificada no está enlazado a datos, este método no tiene ningún efecto.</span><span class="sxs-lookup"><span data-stu-id="42478-115">If the given property is not data-bound, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="42478-116">Los parámetros <paramref name="target" /> y <paramref name="dp" /> no pueden ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="42478-116">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CollectionRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionRegistering As EventHandler(Of CollectionRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionRegisteringEventArgs ^&gt; ^ CollectionRegistering;" />
      <MemberSignature Language="F#" Value="member this.CollectionRegistering : EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; " Usage="member this.CollectionRegistering : System.EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42478-117">Se produce cuando el sistema de enlace de datos observa una colección.</span><span class="sxs-lookup"><span data-stu-id="42478-117">Occurs when the data-binding system notices a collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionViewRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionViewRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionViewRegistering As EventHandler(Of CollectionViewRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionViewRegisteringEventArgs ^&gt; ^ CollectionViewRegistering;" />
      <MemberSignature Language="F#" Value="member this.CollectionViewRegistering : EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; " Usage="member this.CollectionViewRegistering : System.EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42478-118">Se produce cuando el sistema de enlace de datos observa una vista de colección.</span><span class="sxs-lookup"><span data-stu-id="42478-118">Occurs when the data-binding system notices a collection view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void DisableCollectionSynchronization (System.Collections.IEnumerable collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableCollectionSynchronization(class System.Collections.IEnumerable collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableCollectionSynchronization (collection As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisableCollectionSynchronization(System::Collections::IEnumerable ^ collection);" />
      <MemberSignature Language="F#" Value="static member DisableCollectionSynchronization : System.Collections.IEnumerable -&gt; unit" Usage="System.Windows.Data.BindingOperations.DisableCollectionSynchronization collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="42478-119">Colección de la que se va a quitar el acceso sincronizado.</span><span class="sxs-lookup"><span data-stu-id="42478-119">The collection to remove synchronized access from.</span></span></param>
        <summary><span data-ttu-id="42478-120">Quite la sincronización registrada para la colección especificada.</span><span class="sxs-lookup"><span data-stu-id="42478-120">Remove the synchronization registered for the specified collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectedSource">
      <MemberSignature Language="C#" Value="public static object DisconnectedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object DisconnectedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingOperations.DisconnectedSource" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DisconnectedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ DisconnectedSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisconnectedSource : obj" Usage="System.Windows.Data.BindingOperations.DisconnectedSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42478-121">Obtiene un objeto que reemplaza la propiedad <see cref="P:System.Windows.FrameworkElement.DataContext" /> cuando un contenedor de elementos se quita del árbol visual.</span><span class="sxs-lookup"><span data-stu-id="42478-121">Gets an object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</span></span></summary>
        <value><span data-ttu-id="42478-122">Un objeto que reemplaza la propiedad <see cref="P:System.Windows.FrameworkElement.DataContext" /> cuando un contenedor de elemento se quita del árbol visual.</span><span class="sxs-lookup"><span data-stu-id="42478-122">An object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42478-123">Utilice esta propiedad si tiene que tratar con la <xref:System.Windows.FrameworkElement.DataContext%2A> de un contenedor de elementos.</span><span class="sxs-lookup"><span data-stu-id="42478-123">Use this property if you need to deal with the <xref:System.Windows.FrameworkElement.DataContext%2A> of an item container.</span></span>  <span data-ttu-id="42478-124">Un contenedor de elementos es el elemento de interfaz de usuario que se muestra un elemento en un <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="42478-124">An item container is the UI element that displays an item in an <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="42478-125">Cuando un <xref:System.Windows.Controls.ItemsControl> son datos enlazados a una colección, se genera un contenedor de elementos para cada elemento.</span><span class="sxs-lookup"><span data-stu-id="42478-125">When an <xref:System.Windows.Controls.ItemsControl> is data bound to a collection, an item container is generated for each item.</span></span>  <span data-ttu-id="42478-126">En algunos casos, los contenedores de elementos se quitan del árbol visual.</span><span class="sxs-lookup"><span data-stu-id="42478-126">In some cases, item containers are removed from the visual tree.</span></span>  <span data-ttu-id="42478-127">Dos casos típicos donde se quita un contenedor de elementos son cuando se quita un elemento de la colección subyacente y cuando está habilitada la virtualización en el <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="42478-127">Two typical cases where an item container is removed are when an item is removed from the underlying collection and when virtualization is enabled on the <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="42478-128">En estos casos, el <xref:System.Windows.FrameworkElement.DataContext%2A> se establecerá la propiedad del elemento contenedor en el <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> propiedad debe comprobar si el <xref:System.Windows.FrameworkElement.DataContext%2A> es igual a la <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> antes de acceder a la <xref:System.Windows.FrameworkElement.DataContext%2A> en el <xref:System.Windows.FrameworkElement.DataContextChanged> eventos para el elemento contenedores.</span><span class="sxs-lookup"><span data-stu-id="42478-128">In these cases, the <xref:System.Windows.FrameworkElement.DataContext%2A> property of the item container will be set to the <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> property  You should check whether the <xref:System.Windows.FrameworkElement.DataContext%2A> is equal to the <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> before accessing the <xref:System.Windows.FrameworkElement.DataContext%2A> in the <xref:System.Windows.FrameworkElement.DataContextChanged> event for item containers.</span></span> <span data-ttu-id="42478-129">Para obtener más información acerca de la virtualización y contenedores de elementos, vea los comentarios de la <xref:System.Windows.Controls.VirtualizingStackPanel> clase.</span><span class="sxs-lookup"><span data-stu-id="42478-129">For more information about item containers and virtualization, see the remarks in the <xref:System.Windows.Controls.VirtualizingStackPanel> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnableCollectionSynchronization">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="42478-130">Permite que un objeto <see cref="T:System.Windows.Data.CollectionView" /> participe en el acceso sincronizado a una colección que se usa en varios subprocesos.</span><span class="sxs-lookup"><span data-stu-id="42478-130">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection that is used on multiple threads.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="42478-131">Una aplicación de WPF puede mostrar una colección de datos mediante un <xref:System.Windows.Controls.ItemsControl> o uno de sus subclases (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etcetera.).</span><span class="sxs-lookup"><span data-stu-id="42478-131">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span><span data-ttu-id="42478-132"> WPF los canales de toda su acceso a la colección a través de una subclase de <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="42478-132"> WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span><span data-ttu-id="42478-133"> Tanto el <xref:System.Windows.Controls.ItemsControl> y el <xref:System.Windows.Data.CollectionView> tiene afinidad con el subproceso donde la <xref:System.Windows.Controls.ItemsControl> se creó, lo que significa que su uso en otro subproceso está prohibido y produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="42478-133"> Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span><span data-ttu-id="42478-134"> De hecho, esta restricción se aplica a la colección también.</span><span class="sxs-lookup"><span data-stu-id="42478-134"> In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="42478-135">Es posible que desee usar la colección en varios subprocesos.</span><span class="sxs-lookup"><span data-stu-id="42478-135">You may want to use the collection on multiple threads.</span></span><span data-ttu-id="42478-136">   Por ejemplo, desea actualizar la colección (Agregar o quitar elementos) en un subproceso "recopilación de datos", al mostrar los resultados en un subproceso de "interfaz de usuario", por lo que la interfaz de usuario sigue respondiendo mientras recopilación de datos se está realizando.</span><span class="sxs-lookup"><span data-stu-id="42478-136">   For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span><span data-ttu-id="42478-137"> En esta situación, usted es responsable de garantizar el acceso sincronizado de ("subprocesos") a la colección.</span><span class="sxs-lookup"><span data-stu-id="42478-137"> In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection.</span></span><span data-ttu-id="42478-138">   Esto se suele realizar mediante un mecanismo de bloqueo simple o un mecanismo de sincronización más elaborado, como semáforos, restablezca los eventos, etcetera.   Aunque se debe sincronizar el acceso de la aplicación a la colección, también debe garantizar que el acceso de WPF (específicamente desde <xref:System.Windows.Data.CollectionView>) participa en el mismo mecanismo de sincronización.</span><span class="sxs-lookup"><span data-stu-id="42478-138">   This is typically done using either a simple lock mechanism or a more elaborate synchronization mechanism such as semaphores, reset events, etc.   While you must synchronize your application's access to the collection, you must also guarantee that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span><span data-ttu-id="42478-139">  Puede hacerlo llamando al método <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>.</span><span class="sxs-lookup"><span data-stu-id="42478-139">  You do this by calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> method.</span></span>
 
<span data-ttu-id="42478-140">Para usar una colección en varios subprocesos, uno de los cuales es el subproceso de interfaz de usuario que posee el <xref:System.Windows.Controls.ItemsControl>, una aplicación tiene las siguientes responsabilidades:</span><span class="sxs-lookup"><span data-stu-id="42478-140">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, an application has the following responsibilities:</span></span>

1. <span data-ttu-id="42478-141">Elegir un mecanismo de sincronización.</span><span class="sxs-lookup"><span data-stu-id="42478-141">Choose a synchronization mechanism.</span></span>

1. <span data-ttu-id="42478-142">Sincronizar todo el acceso desde la aplicación a la colección utilizando ese mecanismo.</span><span class="sxs-lookup"><span data-stu-id="42478-142">Synchronize all access from the application to the collection using that mechanism.</span></span>

1. <span data-ttu-id="42478-143">Llame a <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> para informar a WPF del mecanismo.</span><span class="sxs-lookup"><span data-stu-id="42478-143">Call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> to inform WPF of the mechanism.</span></span>

   - <span data-ttu-id="42478-144">La llamada se debe producir en el subproceso de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="42478-144">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="42478-145">La llamada debe producirse antes de usar la colección en un subproceso diferente, o antes de adjuntar la colección a la <xref:System.Windows.Controls.ItemsControl>, lo que sea posterior.</span><span class="sxs-lookup"><span data-stu-id="42478-145">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

   - <span data-ttu-id="42478-146">Llame a la <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> sobrecarga si usa un mecanismo de bloqueo simple; la llamada la <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> sobrecarga si utiliza un mecanismo más elaborado.</span><span class="sxs-lookup"><span data-stu-id="42478-146">Call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> overload if using a simple lock mechanism; call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> overload if using a more elaborate mechanism.</span></span>

1. <span data-ttu-id="42478-147">Asegúrese de que un cambio en la colección y la notificación de cambio (a través de <xref:System.Collections.Specialized.INotifyCollectionChanged>) son atómica; no puede intervenir acceso desde otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="42478-147">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span><span data-ttu-id="42478-148">  (Esto es suele ser gratis.</span><span class="sxs-lookup"><span data-stu-id="42478-148">  (This is usually free.</span></span> <span data-ttu-id="42478-149">For Instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> garantiza, siempre que todos los cambios están protegidos mediante la sincronización.)</span><span class="sxs-lookup"><span data-stu-id="42478-149">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="42478-150">Si se llama a <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, que la llamada también debe producirse en el subproceso de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="42478-150">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="42478-151">Si desea usar la misma colección en varios subprocesos de interfaz de usuario, debe llamar a <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (y <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, si es necesario) por separado en cada subproceso de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="42478-151">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="42478-152">Evitar un interbloqueo.</span><span class="sxs-lookup"><span data-stu-id="42478-152">Avoid deadlock.</span></span><span data-ttu-id="42478-153">  Esto ya está responsabilidad de la aplicación una vez que decide utilizar la sincronización, pero también debe tener en la participación de WPF de la cuenta en la sincronización, como se describe en el párrafo siguiente.</span><span class="sxs-lookup"><span data-stu-id="42478-153">  This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization, as discussed in the following paragraph.</span></span>

<span data-ttu-id="42478-154">En cambio, WPF proporciona el comportamiento siguiente:</span><span class="sxs-lookup"><span data-stu-id="42478-154">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="42478-155">El <xref:System.Windows.Data.CollectionView> tiene acceso a la colección utilizando el mecanismo de sincronización especificado.</span><span class="sxs-lookup"><span data-stu-id="42478-155">The <xref:System.Windows.Data.CollectionView> accesses the collection using the given synchronization mechanism.</span></span>

- <span data-ttu-id="42478-156">El <xref:System.Windows.Data.CollectionView> mantiene una "instantánea" de la colección para su uso en el subproceso de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="42478-156">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="42478-157"><xref:System.Windows.Data.CollectionView.CollectionChanged> los eventos se ponen en cola como lleguen (en cualquier subproceso).</span><span class="sxs-lookup"><span data-stu-id="42478-157"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="42478-158">Eventos pendientes se aplican a las instantáneas de forma asincrónica en el subproceso de interfaz de usuario cuando tiene la oportunidad de hacerlo.</span><span class="sxs-lookup"><span data-stu-id="42478-158">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="42478-159">El <xref:System.Windows.Data.CollectionView> no utilizan directamente a cualquier otro mecanismo de sincronización visible para la aplicación.</span><span class="sxs-lookup"><span data-stu-id="42478-159">The <xref:System.Windows.Data.CollectionView> won't directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="42478-160">Esta es manera de WPF para ayudar a evitar un interbloqueo (consulte el artículo anterior 7).</span><span class="sxs-lookup"><span data-stu-id="42478-160">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="42478-161">El efecto neto es que puede cambiar la colección en cualquier subproceso y, finalmente, esos cambios aparecerán en el <xref:System.Windows.Controls.ItemsControl> cuando el subproceso de interfaz de usuario tiene tiempo para "detectar".</span><span class="sxs-lookup"><span data-stu-id="42478-161">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span><span data-ttu-id="42478-162">  La implementación se ha ajustado para limitar la tasa de flujo de los cambios en el subproceso de interfaz de usuario para mantener en segundo plano de subprocesos de saturar el subproceso de UI y privar a la respuesta a la entrada de usuario normal.</span><span class="sxs-lookup"><span data-stu-id="42478-162">  The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object lockObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object lockObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, lockObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ lockObject);" />
      <MemberSignature Language="F#" Value="static member EnableCollectionSynchronization : System.Collections.IEnumerable * obj -&gt; unit" Usage="System.Windows.Data.BindingOperations.EnableCollectionSynchronization (collection, lockObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="lockObject" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="42478-163">Colección que necesita obtener acceso sincronizado.</span><span class="sxs-lookup"><span data-stu-id="42478-163">The collection that needs synchronized access.</span></span></param>
        <param name="lockObject"><span data-ttu-id="42478-164">Objeto que se va a bloquear al acceder a la colección.</span><span class="sxs-lookup"><span data-stu-id="42478-164">The object to lock when accessing the collection.</span></span></param>
        <summary><span data-ttu-id="42478-165">Permite que un objeto <see cref="T:System.Windows.Data.CollectionView" /> participe en el acceso sincronizado a una colección que se usa en varios subprocesos mediante un mecanismo sencillo de bloqueo.</span><span class="sxs-lookup"><span data-stu-id="42478-165">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a simple locking mechanism.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="42478-166">Una aplicación de WPF puede mostrar una colección de datos mediante un <xref:System.Windows.Controls.ItemsControl> o uno de sus subclases (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etcetera.).</span><span class="sxs-lookup"><span data-stu-id="42478-166">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span><span data-ttu-id="42478-167"> WPF los canales de toda su acceso a la colección a través de una subclase de <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="42478-167"> WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span><span data-ttu-id="42478-168"> Tanto el <xref:System.Windows.Controls.ItemsControl> y el <xref:System.Windows.Data.CollectionView> tiene afinidad con el subproceso donde la <xref:System.Windows.Controls.ItemsControl> se creó, lo que significa que su uso en otro subproceso está prohibido y produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="42478-168"> Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span><span data-ttu-id="42478-169"> De hecho, esta restricción se aplica a la colección también.</span><span class="sxs-lookup"><span data-stu-id="42478-169"> In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="42478-170">Es posible que desee usar la colección en varios subprocesos.</span><span class="sxs-lookup"><span data-stu-id="42478-170">You may want to use the collection on multiple threads.</span></span><span data-ttu-id="42478-171">   Por ejemplo, desea actualizar la colección (Agregar o quitar elementos) en un subproceso "recopilación de datos", al mostrar los resultados en un subproceso de "interfaz de usuario", por lo que la interfaz de usuario sigue respondiendo mientras recopilación de datos se está realizando.</span><span class="sxs-lookup"><span data-stu-id="42478-171">   For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span><span data-ttu-id="42478-172"> En esta situación, es responsable de garantizar sincronizado ("") acceso seguro a la colección y para garantizar que el acceso de WPF (específicamente desde <xref:System.Windows.Data.CollectionView>) participa en el mismo mecanismo de sincronización.</span><span class="sxs-lookup"><span data-stu-id="42478-172"> In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span><span data-ttu-id="42478-173"> Mediante una llamada a la <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> método, puede hacerlo mediante un mecanismo de bloqueo simple.</span><span class="sxs-lookup"><span data-stu-id="42478-173"> By calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> method, you can do this by using a simple lock mechanism.</span></span> 
 
<span data-ttu-id="42478-174">Para usar una colección en varios subprocesos, uno de los cuales es el subproceso de interfaz de usuario que posee el <xref:System.Windows.Controls.ItemsControl>, debe hacer lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="42478-174">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, you must do the following:</span></span>

1. <span data-ttu-id="42478-175">Crear una instancia de un objeto para bloquear al acceder a la colección.</span><span class="sxs-lookup"><span data-stu-id="42478-175">Instantiate an object to lock when accessing the collection.</span></span>

1. <span data-ttu-id="42478-176">Sincronizar todo el acceso desde la aplicación a la colección mediante el bloqueo de ese objeto.</span><span class="sxs-lookup"><span data-stu-id="42478-176">Synchronize all access from the application to the collection by locking that object.</span></span>

1. <span data-ttu-id="42478-177">Llame a <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> para informar a WPF que usa un mecanismo de bloqueo simple.</span><span class="sxs-lookup"><span data-stu-id="42478-177">Call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> to inform WPF that you are using a simple lock mechanism.</span></span>

   - <span data-ttu-id="42478-178">La llamada se debe producir en el subproceso de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="42478-178">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="42478-179">La llamada debe producirse antes de usar la colección en un subproceso diferente, o antes de adjuntar la colección a la <xref:System.Windows.Controls.ItemsControl>, lo que sea posterior.</span><span class="sxs-lookup"><span data-stu-id="42478-179">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

1. <span data-ttu-id="42478-180">Asegúrese de que un cambio en la colección y la notificación de cambio (a través de <xref:System.Collections.Specialized.INotifyCollectionChanged>) son atómica; no puede intervenir acceso desde otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="42478-180">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span><span data-ttu-id="42478-181">  (Esto es suele ser gratis.</span><span class="sxs-lookup"><span data-stu-id="42478-181">  (This is usually free.</span></span> <span data-ttu-id="42478-182">For Instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> garantiza, siempre que todos los cambios están protegidos mediante la sincronización.)</span><span class="sxs-lookup"><span data-stu-id="42478-182">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="42478-183">Si se llama a <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, que la llamada también debe producirse en el subproceso de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="42478-183">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="42478-184">Si desea usar la misma colección en varios subprocesos de interfaz de usuario, debe llamar a <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (y <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, si es necesario) por separado en cada subproceso de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="42478-184">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="42478-185">Evitar un interbloqueo.</span><span class="sxs-lookup"><span data-stu-id="42478-185">Avoid deadlock.</span></span><span data-ttu-id="42478-186">  Esto ya es responsabilidad de la aplicación una vez que decide utilizar la sincronización, pero también debe tener en cuenta la participación de WPF en la sincronización.</span><span class="sxs-lookup"><span data-stu-id="42478-186">  This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</span></span><span data-ttu-id="42478-187"> (Vea más, a continuación).</span><span class="sxs-lookup"><span data-stu-id="42478-187"> (See more, below.)</span></span>

<span data-ttu-id="42478-188">En cambio, WPF proporciona el comportamiento siguiente:</span><span class="sxs-lookup"><span data-stu-id="42478-188">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="42478-189">El <xref:System.Windows.Data.CollectionView> tiene acceso a la colección utilizando el mecanismo de bloqueo.</span><span class="sxs-lookup"><span data-stu-id="42478-189">The <xref:System.Windows.Data.CollectionView> accesses the collection using the locking mechanism.</span></span>

- <span data-ttu-id="42478-190">El <xref:System.Windows.Data.CollectionView> mantiene una "instantánea" de la colección para su uso en el subproceso de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="42478-190">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="42478-191"><xref:System.Windows.Data.CollectionView.CollectionChanged> los eventos se ponen en cola como lleguen (en cualquier subproceso).</span><span class="sxs-lookup"><span data-stu-id="42478-191"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="42478-192">Eventos pendientes se aplican a las instantáneas de forma asincrónica en el subproceso de interfaz de usuario cuando tiene la oportunidad de hacerlo.</span><span class="sxs-lookup"><span data-stu-id="42478-192">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="42478-193">El <xref:System.Windows.Data.CollectionView> directamente no usará cualquier otro mecanismo de sincronización visible para la aplicación.</span><span class="sxs-lookup"><span data-stu-id="42478-193">The <xref:System.Windows.Data.CollectionView> will not directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="42478-194">Esta es manera de WPF para ayudar a evitar un interbloqueo (consulte el artículo anterior 7).</span><span class="sxs-lookup"><span data-stu-id="42478-194">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="42478-195">El efecto neto es que puede cambiar la colección en cualquier subproceso y, finalmente, esos cambios aparecerán en el <xref:System.Windows.Controls.ItemsControl> cuando el subproceso de interfaz de usuario tiene tiempo para "detectar".</span><span class="sxs-lookup"><span data-stu-id="42478-195">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span><span data-ttu-id="42478-196">  La implementación se ha ajustado para limitar la tasa de flujo de los cambios en el subproceso de interfaz de usuario para mantener en segundo plano de subprocesos de saturar el subproceso de UI y privar a la respuesta a la entrada de usuario normal.</span><span class="sxs-lookup"><span data-stu-id="42478-196">  The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object context, System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object context, class System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, context As Object, synchronizationCallback As CollectionSynchronizationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ context, System::Windows::Data::CollectionSynchronizationCallback ^ synchronizationCallback);" />
      <MemberSignature Language="F#" Value="static member EnableCollectionSynchronization : System.Collections.IEnumerable * obj * System.Windows.Data.CollectionSynchronizationCallback -&gt; unit" Usage="System.Windows.Data.BindingOperations.EnableCollectionSynchronization (collection, context, synchronizationCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="synchronizationCallback" Type="System.Windows.Data.CollectionSynchronizationCallback" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="42478-197">Colección que necesita obtener acceso sincronizado.</span><span class="sxs-lookup"><span data-stu-id="42478-197">The collection that needs synchronized access.</span></span></param>
        <param name="context"><span data-ttu-id="42478-198">Objeto que se pasa a la devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="42478-198">An object that is passed to the callback.</span></span></param>
        <param name="synchronizationCallback"><span data-ttu-id="42478-199">Devolución de llamada que se invoca cuando se requiere acceso a la colección.</span><span class="sxs-lookup"><span data-stu-id="42478-199">The callback that is invoked whenever access to the collection is required.</span></span> <span data-ttu-id="42478-200">Puede usarla para asegurarse de que los subprocesos accedan a la colección de uno en uno.</span><span class="sxs-lookup"><span data-stu-id="42478-200">You can use it to ensure that the collection is accessed by one thread at a time.</span></span></param>
        <summary><span data-ttu-id="42478-201">Permite que un objeto <see cref="T:System.Windows.Data.CollectionView" /> participe en el acceso sincronizado a una colección usada en varios subprocesos mediante un mecanismo distinto a un bloqueo sencillo.</span><span class="sxs-lookup"><span data-stu-id="42478-201">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a mechanism other than a simple lock.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="42478-202">Una aplicación de WPF puede mostrar una colección de datos mediante un <xref:System.Windows.Controls.ItemsControl> o uno de sus subclases (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etcetera.).</span><span class="sxs-lookup"><span data-stu-id="42478-202">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span><span data-ttu-id="42478-203"> WPF los canales de toda su acceso a la colección a través de una subclase de <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="42478-203"> WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span><span data-ttu-id="42478-204"> Tanto el <xref:System.Windows.Controls.ItemsControl> y el <xref:System.Windows.Data.CollectionView> tiene afinidad con el subproceso donde la <xref:System.Windows.Controls.ItemsControl> se creó, lo que significa que su uso en otro subproceso está prohibido y produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="42478-204"> Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span><span data-ttu-id="42478-205"> De hecho, esta restricción se aplica a la colección también.</span><span class="sxs-lookup"><span data-stu-id="42478-205"> In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="42478-206">Es posible que desee usar la colección en varios subprocesos.</span><span class="sxs-lookup"><span data-stu-id="42478-206">You may want to use the collection on multiple threads.</span></span><span data-ttu-id="42478-207">   Por ejemplo, desea actualizar la colección (Agregar o quitar elementos) en un subproceso "recopilación de datos", al mostrar los resultados en un subproceso de "interfaz de usuario", por lo que la interfaz de usuario sigue respondiendo mientras recopilación de datos se está realizando.</span><span class="sxs-lookup"><span data-stu-id="42478-207">   For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span><span data-ttu-id="42478-208"> En esta situación, es responsable de garantizar sincronizado ("") acceso seguro a la colección y para garantizar que el acceso de WPF (específicamente desde <xref:System.Windows.Data.CollectionView>) participa en el mismo mecanismo de sincronización.</span><span class="sxs-lookup"><span data-stu-id="42478-208"> In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span> <span data-ttu-id="42478-209">Mediante una llamada a la <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> método, puede hacerlo mediante un mecanismo de sincronización, como un semáforos, un evento de restablecimiento, etcetera.   Para usar una colección en varios subprocesos, uno de los cuales es el subproceso de interfaz de usuario que posee el <xref:System.Windows.Controls.ItemsControl>, debe hacer lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="42478-209">By calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> method, you can do this by using a synchronization mechanism such as a semaphores, a reset event, etc.   To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, you must do the following:</span></span>

1. <span data-ttu-id="42478-210">Elegir un mecanismo de sincronización.</span><span class="sxs-lookup"><span data-stu-id="42478-210">Choose a synchronization mechanism.</span></span>

1. <span data-ttu-id="42478-211">Sincronizar todo el acceso desde la aplicación a la colección utilizando ese mecanismo.</span><span class="sxs-lookup"><span data-stu-id="42478-211">Synchronize all access from the application to the collection using that mechanism.</span></span>

1. <span data-ttu-id="42478-212">Llame a la <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> sobrecarga para informar a WPF que usa un mecanismo distinto del bloqueo simple.</span><span class="sxs-lookup"><span data-stu-id="42478-212">Call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> overload to inform WPF that you are using a mechanism other than simple locking.</span></span>

   - <span data-ttu-id="42478-213">La llamada se debe producir en el subproceso de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="42478-213">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="42478-214">La llamada debe producirse antes de usar la colección en un subproceso diferente, o antes de adjuntar la colección a la <xref:System.Windows.Controls.ItemsControl>, lo que sea posterior.</span><span class="sxs-lookup"><span data-stu-id="42478-214">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

1. <span data-ttu-id="42478-215">Asegúrese de que un cambio en la colección y la notificación de cambio (a través de <xref:System.Collections.Specialized.INotifyCollectionChanged>) son atómica; no puede intervenir acceso desde otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="42478-215">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span><span data-ttu-id="42478-216">  (Esto es suele ser gratis.</span><span class="sxs-lookup"><span data-stu-id="42478-216">  (This is usually free.</span></span> <span data-ttu-id="42478-217">For Instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> garantiza, siempre que todos los cambios están protegidos mediante la sincronización.)</span><span class="sxs-lookup"><span data-stu-id="42478-217">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="42478-218">Si se llama a <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, que la llamada también debe producirse en el subproceso de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="42478-218">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="42478-219">Si desea usar la misma colección en varios subprocesos de interfaz de usuario, debe llamar a <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (y <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, si es necesario) por separado en cada subproceso de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="42478-219">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="42478-220">Evitar un interbloqueo.</span><span class="sxs-lookup"><span data-stu-id="42478-220">Avoid deadlock.</span></span><span data-ttu-id="42478-221">  Esto ya es responsabilidad de la aplicación una vez que decide utilizar la sincronización, pero también debe tener en cuenta la participación de WPF en la sincronización.</span><span class="sxs-lookup"><span data-stu-id="42478-221">  This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</span></span><span data-ttu-id="42478-222"> (Vea más, a continuación).</span><span class="sxs-lookup"><span data-stu-id="42478-222"> (See more, below.)</span></span>

<span data-ttu-id="42478-223">En cambio, WPF proporciona el comportamiento siguiente:</span><span class="sxs-lookup"><span data-stu-id="42478-223">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="42478-224">El <xref:System.Windows.Data.CollectionView> tiene acceso a la colección mediante una llamada a registrado <xref:System.Windows.Data.CollectionSynchronizationCallback> con los argumentos siguientes:</span><span class="sxs-lookup"><span data-stu-id="42478-224">The <xref:System.Windows.Data.CollectionView> accesses the collection by calling the registered <xref:System.Windows.Data.CollectionSynchronizationCallback> with the following arguments:</span></span>

   - <span data-ttu-id="42478-225">`collection`: la colección de interés.</span><span class="sxs-lookup"><span data-stu-id="42478-225">`collection`: the collection of interest.</span></span>
   - <span data-ttu-id="42478-226">`context`: el objeto de contexto registrado.</span><span class="sxs-lookup"><span data-stu-id="42478-226">`context`: the registered context object.</span></span>
   - <span data-ttu-id="42478-227">`accessMethod`: un delegado que realiza el acceso real.</span><span class="sxs-lookup"><span data-stu-id="42478-227">`accessMethod`: a delegate that performs the actual access.</span></span>
   - <span data-ttu-id="42478-228">`writeAccess`: `true` si el delegado va a modificar la colección; `false` en caso contrario.</span><span class="sxs-lookup"><span data-stu-id="42478-228">`writeAccess`: `true` if the delegate will modify the collection; `false` otherwise.</span></span>

   <span data-ttu-id="42478-229">Su <xref:System.Windows.Data.CollectionSynchronizationCallback> debe establecer la sincronización en la colección (mediante el `context` objeto y el `writeAccess` valor, según corresponda), llame a la `accessMethod`, a continuación, suelte la sincronización.</span><span class="sxs-lookup"><span data-stu-id="42478-229">Your <xref:System.Windows.Data.CollectionSynchronizationCallback> should establish synchronization on the collection (using the `context` object and the `writeAccess` value, as appropriate), call the `accessMethod`, then release synchronization.</span></span>

- <span data-ttu-id="42478-230">El <xref:System.Windows.Data.CollectionView> mantiene una "instantánea" de la colección para su uso en el subproceso de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="42478-230">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="42478-231"><xref:System.Windows.Data.CollectionView.CollectionChanged> los eventos se ponen en cola como lleguen (en cualquier subproceso).</span><span class="sxs-lookup"><span data-stu-id="42478-231"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="42478-232">Eventos pendientes se aplican a las instantáneas de forma asincrónica en el subproceso de interfaz de usuario cuando tiene la oportunidad de hacerlo.</span><span class="sxs-lookup"><span data-stu-id="42478-232">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="42478-233">El <xref:System.Windows.Data.CollectionView> directamente no usará cualquier otro mecanismo de sincronización visible para la aplicación.</span><span class="sxs-lookup"><span data-stu-id="42478-233">The <xref:System.Windows.Data.CollectionView> will not directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="42478-234">Esta es manera de WPF para ayudar a evitar un interbloqueo (consulte el artículo anterior 7).</span><span class="sxs-lookup"><span data-stu-id="42478-234">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="42478-235">El efecto neto es que puede cambiar la colección en cualquier subproceso y, finalmente, esos cambios aparecerán en el <xref:System.Windows.Controls.ItemsControl> cuando el subproceso de interfaz de usuario tiene tiempo para "detectar".</span><span class="sxs-lookup"><span data-stu-id="42478-235">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span><span data-ttu-id="42478-236">  La implementación se ha ajustado para limitar la tasa de flujo de los cambios en el subproceso de interfaz de usuario para mantener en segundo plano de subprocesos de saturar el subproceso de UI y privar a la respuesta a la entrada de usuario normal.</span><span class="sxs-lookup"><span data-stu-id="42478-236">  The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>

 <span data-ttu-id="42478-237">El `context` parámetro es un objeto arbitrario que se pasa a la `callback`.</span><span class="sxs-lookup"><span data-stu-id="42478-237">The `context` parameter is an arbitrary object that is passed to the `callback`.</span></span> <span data-ttu-id="42478-238">Puede usar para determinar el mecanismo de sincronización utilizado para controlar el acceso a `collection`.</span><span class="sxs-lookup"><span data-stu-id="42478-238">You can use it to determine the synchronization mechanism used to control access to `collection`.</span></span> <span data-ttu-id="42478-239">`Context` puede ser `null`.</span><span class="sxs-lookup"><span data-stu-id="42478-239">`Context` can be `null`.</span></span>  
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.Binding GetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.Binding GetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBinding (target As DependencyObject, dp As DependencyProperty) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::Binding ^ GetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.Binding" Usage="System.Windows.Data.BindingOperations.GetBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="42478-240">Objeto en el que se encuentra <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="42478-240">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="42478-241">Propiedad del destino de enlace desde la que se va a recuperar el enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-241">The binding target property from which to retrieve the binding.</span></span></param>
        <summary><span data-ttu-id="42478-242">Recupera el objeto <see cref="T:System.Windows.Data.Binding" /> establecido en la propiedad especificada.</span><span class="sxs-lookup"><span data-stu-id="42478-242">Retrieves the <see cref="T:System.Windows.Data.Binding" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="42478-243">Objeto <see cref="T:System.Windows.Data.Binding" /> establecido en la propiedad especificada o <see langword="null" /> si no se ha establecido ningún objeto <see cref="T:System.Windows.Data.Binding" />.</span><span class="sxs-lookup"><span data-stu-id="42478-243">The <see cref="T:System.Windows.Data.Binding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.Binding" /> object has been set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="42478-244">El valor de los parámetros <paramref name="target" /> y <paramref name="dp" /> no puede ser null.</span><span class="sxs-lookup"><span data-stu-id="42478-244">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingBase GetBindingBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingBase GetBindingBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingBase (target As DependencyObject, dp As DependencyProperty) As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingBase ^ GetBindingBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingBase : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingBase" Usage="System.Windows.Data.BindingOperations.GetBindingBase (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="42478-245">Objeto en el que se encuentra <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="42478-245">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="42478-246">Propiedad de destino de enlace a partir de la cual recuperar el objeto <see cref="T:System.Windows.Data.BindingBase" />.</span><span class="sxs-lookup"><span data-stu-id="42478-246">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingBase" /> object.</span></span></param>
        <summary><span data-ttu-id="42478-247">Recupera el objeto <see cref="T:System.Windows.Data.BindingBase" /> establecido en la propiedad especificada.</span><span class="sxs-lookup"><span data-stu-id="42478-247">Retrieves the <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="42478-248">Objeto <see cref="T:System.Windows.Data.BindingBase" /> establecido en la propiedad especificada o <see langword="null" /> si no se ha establecido ningún objeto de enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-248">The <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42478-249">El <xref:System.Windows.Data.BindingBase> clase es la clase base común para la <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, y <xref:System.Windows.Data.MultiBinding> clases.</span><span class="sxs-lookup"><span data-stu-id="42478-249">The <xref:System.Windows.Data.BindingBase> class is the common base class for the <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, and <xref:System.Windows.Data.MultiBinding> classes.</span></span> <span data-ttu-id="42478-250">Puede usar el <xref:System.Windows.Data.BindingOperations.GetBinding%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>, y <xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A> métodos si sabe de antemano el tipo de enlace que es establecen en la propiedad.</span><span class="sxs-lookup"><span data-stu-id="42478-250">You can use the <xref:System.Windows.Data.BindingOperations.GetBinding%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>, and <xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A> methods if you know in advance the type of binding that is set on the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="42478-251">Los parámetros <paramref name="target" /> y <paramref name="dp" /> no pueden ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="42478-251">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpression GetBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpression (target As DependencyObject, dp As DependencyProperty) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpression ^ GetBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingExpression" Usage="System.Windows.Data.BindingOperations.GetBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="42478-252">Objeto de destino de enlace en el que se encuentra <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="42478-252">The binding target object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="42478-253">Propiedad de destino de enlace a partir de la cual recuperar el objeto <see cref="T:System.Windows.Data.BindingExpression" />.</span><span class="sxs-lookup"><span data-stu-id="42478-253">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpression" /> object.</span></span></param>
        <summary><span data-ttu-id="42478-254">Devuelve el objeto <see cref="T:System.Windows.Data.BindingExpression" /> asociado a la propiedad de destino de enlace especificada en el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="42478-254">Returns the <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the specified binding target property on the specified object.</span></span></summary>
        <returns><span data-ttu-id="42478-255">Objeto <see cref="T:System.Windows.Data.BindingExpression" /> asociado a la propiedad especificada o <see langword="null" /> si no existe ninguno.</span><span class="sxs-lookup"><span data-stu-id="42478-255">The <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span></span> <span data-ttu-id="42478-256">Si un objeto <see cref="T:System.Windows.Data.PriorityBindingExpression" /> se establece en la propiedad, se devuelve <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" />.</span><span class="sxs-lookup"><span data-stu-id="42478-256">If a <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object is set on the property, the <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42478-257">La <xref:System.Windows.Data.BindingExpression> objeto mantiene la conexión entre el origen de enlace y el destino de enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-257">The <xref:System.Windows.Data.BindingExpression> object maintains the connection between the binding source and the binding target.</span></span> <span data-ttu-id="42478-258">Puede obtener el <xref:System.Windows.Data.BindingExpression> objeto mediante una llamada a este método estático o mediante una llamada a la <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> método en un enlace de datos <xref:System.Windows.FrameworkElement> o <xref:System.Windows.FrameworkContentElement> objeto.</span><span class="sxs-lookup"><span data-stu-id="42478-258">You can obtain the <xref:System.Windows.Data.BindingExpression> object by calling this static method or by calling the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42478-259">El ejemplo siguiente muestra la implementación de un <xref:System.Windows.Controls.Primitives.ButtonBase.Click> controlador de eventos que usa el <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> método para obtener el <xref:System.Windows.Data.BindingExpression> y, a continuación, llama a la <xref:System.Windows.Data.BindingExpression.DataItem%2A> propiedad para tener acceso al objeto de origen de enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-259">The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the <xref:System.Windows.Data.BindingExpression.DataItem%2A> property to access the binding source object.</span></span>  
  
 <span data-ttu-id="42478-260">El <xref:System.Windows.Controls.TextBlock> `SavingsText` es el objeto de destino de enlace y <xref:System.Windows.Controls.TextBlock.Text%2A> es la propiedad de destino de enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-260">The <xref:System.Windows.Controls.TextBlock>`SavingsText` is the binding target object and <xref:System.Windows.Controls.TextBlock.Text%2A> is the binding target property.</span></span>  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="42478-261">Los parámetros <paramref name="target" /> y <paramref name="dp" /> no pueden ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="42478-261">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpressionBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase GetBindingExpressionBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase GetBindingExpressionBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpressionBase (target As DependencyObject, dp As DependencyProperty) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ GetBindingExpressionBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingExpressionBase : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingExpressionBase" Usage="System.Windows.Data.BindingOperations.GetBindingExpressionBase (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="42478-262">Objeto en el que se encuentra <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="42478-262">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="42478-263">Propiedad de destino de enlace a partir de la cual recuperar el objeto <see cref="T:System.Windows.Data.BindingExpressionBase" />.</span><span class="sxs-lookup"><span data-stu-id="42478-263">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object.</span></span></param>
        <summary><span data-ttu-id="42478-264">Recupera el objeto <see cref="T:System.Windows.Data.BindingExpressionBase" /> establecido en la propiedad especificada.</span><span class="sxs-lookup"><span data-stu-id="42478-264">Retrieves the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="42478-265">Objeto <see cref="T:System.Windows.Data.BindingExpressionBase" /> establecido en la propiedad especificada o <see langword="null" /> si no se ha establecido ningún objeto de enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-265">The <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42478-266">El <xref:System.Windows.Data.BindingExpressionBase> clase es la clase base común para la <xref:System.Windows.Data.BindingExpression>, <xref:System.Windows.Data.PriorityBindingExpression>, y <xref:System.Windows.Data.MultiBindingExpression> clases.</span><span class="sxs-lookup"><span data-stu-id="42478-266">The <xref:System.Windows.Data.BindingExpressionBase> class is the common base class for the <xref:System.Windows.Data.BindingExpression>, <xref:System.Windows.Data.PriorityBindingExpression>, and <xref:System.Windows.Data.MultiBindingExpression> classes.</span></span> <span data-ttu-id="42478-267">Puede usar el <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>, y <xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A> métodos si sabe de antemano el tipo de enlace que se establece en la propiedad.</span><span class="sxs-lookup"><span data-stu-id="42478-267">You can use the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>, and <xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A> methods if you know in advance type of binding that is set on the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="42478-268">El valor de los parámetros <paramref name="target" /> y <paramref name="dp" /> no puede ser null.</span><span class="sxs-lookup"><span data-stu-id="42478-268">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBinding GetMultiBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBinding GetMultiBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBinding (target As DependencyObject, dp As DependencyProperty) As MultiBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBinding ^ GetMultiBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetMultiBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.MultiBinding" Usage="System.Windows.Data.BindingOperations.GetMultiBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="42478-269">Objeto en el que se encuentra <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="42478-269">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="42478-270">Propiedad del destino de enlace desde la que se va a recuperar el enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-270">The binding target property from which to retrieve the binding.</span></span></param>
        <summary><span data-ttu-id="42478-271">Recupera el objeto <see cref="T:System.Windows.Data.MultiBinding" /> establecido en la propiedad especificada.</span><span class="sxs-lookup"><span data-stu-id="42478-271">Retrieves the <see cref="T:System.Windows.Data.MultiBinding" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="42478-272">Objeto <see cref="T:System.Windows.Data.MultiBinding" /> establecido en la propiedad especificada o <see langword="null" /> si no se ha establecido ningún objeto <see cref="T:System.Windows.Data.MultiBinding" />.</span><span class="sxs-lookup"><span data-stu-id="42478-272">The <see cref="T:System.Windows.Data.MultiBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.MultiBinding" /> object has been set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="42478-273">El valor de los parámetros <paramref name="target" /> y <paramref name="dp" /> no puede ser null.</span><span class="sxs-lookup"><span data-stu-id="42478-273">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBindingExpression GetMultiBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBindingExpression GetMultiBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBindingExpression (target As DependencyObject, dp As DependencyProperty) As MultiBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBindingExpression ^ GetMultiBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetMultiBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.MultiBindingExpression" Usage="System.Windows.Data.BindingOperations.GetMultiBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="42478-274">Objeto de destino de enlace en el que se encuentra <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="42478-274">The binding target object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="42478-275">Propiedad de destino de enlace a partir de la cual recuperar el objeto <see cref="T:System.Windows.Data.MultiBindingExpression" />.</span><span class="sxs-lookup"><span data-stu-id="42478-275">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object.</span></span></param>
        <summary><span data-ttu-id="42478-276">Devuelve el objeto <see cref="T:System.Windows.Data.MultiBindingExpression" /> asociado a la propiedad de destino de enlace especificada en el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="42478-276">Returns the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the specified binding target property on the specified object.</span></span></summary>
        <returns><span data-ttu-id="42478-277">Objeto <see cref="T:System.Windows.Data.MultiBindingExpression" /> asociado a la propiedad especificada o <see langword="null" /> si no existe ninguno.</span><span class="sxs-lookup"><span data-stu-id="42478-277">The <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42478-278">Objeto <xref:System.Windows.Data.MultiBindingExpression> asociado a la propiedad especificada o `null` si no existe ninguno.</span><span class="sxs-lookup"><span data-stu-id="42478-278">The <xref:System.Windows.Data.MultiBindingExpression> object associated with the given property or `null` if none exists.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="42478-279">Los parámetros <paramref name="target" /> y <paramref name="dp" /> no pueden ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="42478-279">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBinding GetPriorityBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBinding GetPriorityBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBinding (target As DependencyObject, dp As DependencyProperty) As PriorityBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBinding ^ GetPriorityBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetPriorityBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.PriorityBinding" Usage="System.Windows.Data.BindingOperations.GetPriorityBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="42478-280">Objeto en el que se encuentra <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="42478-280">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="42478-281">Propiedad del destino de enlace desde la que se va a recuperar el enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-281">The binding target property from which to retrieve the binding.</span></span></param>
        <summary><span data-ttu-id="42478-282">Recupera el objeto <see cref="T:System.Windows.Data.PriorityBinding" /> establecido en la propiedad especificada.</span><span class="sxs-lookup"><span data-stu-id="42478-282">Retrieves the <see cref="T:System.Windows.Data.PriorityBinding" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="42478-283">Objeto <see cref="T:System.Windows.Data.PriorityBinding" /> establecido en la propiedad especificada o <see langword="null" /> si no se ha establecido ningún objeto <see cref="T:System.Windows.Data.PriorityBinding" />.</span><span class="sxs-lookup"><span data-stu-id="42478-283">The <see cref="T:System.Windows.Data.PriorityBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.PriorityBinding" /> object has been set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="42478-284">El valor de los parámetros <paramref name="target" /> y <paramref name="dp" /> no puede ser null.</span><span class="sxs-lookup"><span data-stu-id="42478-284">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBindingExpression (target As DependencyObject, dp As DependencyProperty) As PriorityBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBindingExpression ^ GetPriorityBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetPriorityBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.PriorityBindingExpression" Usage="System.Windows.Data.BindingOperations.GetPriorityBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="42478-285">Objeto de destino de enlace en el que se encuentra <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="42478-285">The binding target object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="42478-286">Propiedad de destino de enlace a partir de la cual recuperar el objeto <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</span><span class="sxs-lookup"><span data-stu-id="42478-286">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object.</span></span></param>
        <summary><span data-ttu-id="42478-287">Devuelve el objeto <see cref="T:System.Windows.Data.PriorityBindingExpression" /> asociado a la propiedad de destino de enlace especificada en el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="42478-287">Returns the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the specified binding target property on the specified object.</span></span></summary>
        <returns><span data-ttu-id="42478-288">Objeto <see cref="T:System.Windows.Data.PriorityBindingExpression" /> asociado a la propiedad especificada o <see langword="null" /> si no existe ninguno.</span><span class="sxs-lookup"><span data-stu-id="42478-288">The <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="42478-289">Los parámetros <paramref name="target" /> y <paramref name="dp" /> no pueden ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="42478-289">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindingGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindingGroups (root As DependencyObject) As ReadOnlyCollection(Of BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingGroup ^&gt; ^ GetSourceUpdatingBindingGroups(System::Windows::DependencyObject ^ root);" />
      <MemberSignature Language="F#" Value="static member GetSourceUpdatingBindingGroups : System.Windows.DependencyObject -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt;" Usage="System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="root"><span data-ttu-id="42478-290"><see cref="T:System.Windows.UIElement" /> raíz para obtener grupos de enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-290">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.</span></span>  <span data-ttu-id="42478-291">Este método devuelve los objetos <see cref="T:System.Windows.Data.BindingGroup" /> que están asociados a este elemento o sus elementos descendientes.</span><span class="sxs-lookup"><span data-stu-id="42478-291">This method returns <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with this element or its descendant elements.</span></span></param>
        <summary><span data-ttu-id="42478-292">Obtiene todos los objetos <see cref="T:System.Windows.Data.BindingGroup" /> que tienen valores no válidos o valores de destino que no se han actualizado en el origen.</span><span class="sxs-lookup"><span data-stu-id="42478-292">Gets all <see cref="T:System.Windows.Data.BindingGroup" /> objects that have invalid values or target values have not been updated the source.</span></span></summary>
        <returns><span data-ttu-id="42478-293">Colección de objetos <see cref="T:System.Windows.Data.BindingGroup" /> que son asociados al elemento especificado y tienen valores no válidos o valores de destino que no han sido actualizados en el origen.</span><span class="sxs-lookup"><span data-stu-id="42478-293">A collection of <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42478-294">Si `root` es `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A> todos los devuelve <xref:System.Windows.Data.BindingGroup> objetos que no son válidas o no se han actualizado.</span><span class="sxs-lookup"><span data-stu-id="42478-294">If `root` is `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A> returns all <xref:System.Windows.Data.BindingGroup> objects that are invalid or have not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindings">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindings (root As DependencyObject) As ReadOnlyCollection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ GetSourceUpdatingBindings(System::Windows::DependencyObject ^ root);" />
      <MemberSignature Language="F#" Value="static member GetSourceUpdatingBindings : System.Windows.DependencyObject -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingOperations.GetSourceUpdatingBindings root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="root"><span data-ttu-id="42478-295"><see cref="T:System.Windows.UIElement" /> raíz para obtener grupos de enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-295">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.</span></span>  <span data-ttu-id="42478-296">Este método devuelve los objetos <see cref="T:System.Windows.Data.BindingExpressionBase" /> que están asociados a este elemento o sus elementos descendientes.</span><span class="sxs-lookup"><span data-stu-id="42478-296">This method returns <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with this element or its descendant elements.</span></span></param>
        <summary><span data-ttu-id="42478-297">Obtiene todos los objetos <see cref="T:System.Windows.Data.BindingExpressionBase" /> que tienen valores no válidos o valores de destino que no se han actualizado en el origen.</span><span class="sxs-lookup"><span data-stu-id="42478-297">Gets all <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that have invalid values or target values have not been updated the source.</span></span></summary>
        <returns><span data-ttu-id="42478-298">Colección de objetos <see cref="T:System.Windows.Data.BindingExpressionBase" /> que son asociados al elemento especificado y tienen valores no válidos o valores de destino que no han sido actualizados en el origen.</span><span class="sxs-lookup"><span data-stu-id="42478-298">A collection of <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42478-299">Si `root` es `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A> todos los devuelve <xref:System.Windows.Data.BindingExpressionBase> objetos que no son válidas o no se han actualizado.</span><span class="sxs-lookup"><span data-stu-id="42478-299">If `root` is `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A> returns all <xref:System.Windows.Data.BindingExpressionBase> objects that are invalid or have not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDataBound">
      <MemberSignature Language="C#" Value="public static bool IsDataBound (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDataBound(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDataBound (target As DependencyObject, dp As DependencyProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDataBound(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member IsDataBound : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; bool" Usage="System.Windows.Data.BindingOperations.IsDataBound (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="42478-300">Objeto en el que se encuentra <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="42478-300">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="42478-301">Propiedad de dependencia que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="42478-301">The dependency property to check.</span></span></param>
        <summary><span data-ttu-id="42478-302">Devuelve un valor que indica si la propiedad especificada está enlazada a datos actualmente.</span><span class="sxs-lookup"><span data-stu-id="42478-302">Returns a value that indicates whether the specified property is currently data-bound.</span></span></summary>
        <returns><span data-ttu-id="42478-303">Es <see langword="true" /> si la propiedad especificada está enlazada a datos; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="42478-303"><see langword="true" /> if the specified property is data-bound; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="42478-304">Si <paramref name="target" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="42478-304">If <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase SetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp, class System.Windows.Data.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetBinding (target As DependencyObject, dp As DependencyProperty, binding As BindingBase) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ SetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp, System::Windows::Data::BindingBase ^ binding);" />
      <MemberSignature Language="F#" Value="static member SetBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty * System.Windows.Data.BindingBase -&gt; System.Windows.Data.BindingExpressionBase" Usage="System.Windows.Data.BindingOperations.SetBinding (target, dp, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="42478-305">Destino de enlace del enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-305">The binding target of the binding.</span></span></param>
        <param name="dp"><span data-ttu-id="42478-306">Propiedad de destino del enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-306">The target property of the binding.</span></span></param>
        <param name="binding"><span data-ttu-id="42478-307">Objeto <see cref="T:System.Windows.Data.BindingBase" /> que describe el enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-307">The <see cref="T:System.Windows.Data.BindingBase" /> object that describes the binding.</span></span></param>
        <summary><span data-ttu-id="42478-308">Crea y asocia una nueva instancia de <see cref="T:System.Windows.Data.BindingExpressionBase" /> con la propiedad de destino de enlace especificada.</span><span class="sxs-lookup"><span data-stu-id="42478-308">Creates and associates a new instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> with the specified binding target property.</span></span></summary>
        <returns><span data-ttu-id="42478-309">Instancia de <see cref="T:System.Windows.Data.BindingExpressionBase" /> creada y asociada con la propiedad especificada.</span><span class="sxs-lookup"><span data-stu-id="42478-309">The instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> created for and associated with the specified property.</span></span> <span data-ttu-id="42478-310">La clase <see cref="T:System.Windows.Data.BindingExpressionBase" /> es la clase base de <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.MultiBindingExpression" /> y <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</span><span class="sxs-lookup"><span data-stu-id="42478-310">The <see cref="T:System.Windows.Data.BindingExpressionBase" /> class is the base class of <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.MultiBindingExpression" />, and <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42478-311">Este método crea una nueva instancia de un <xref:System.Windows.Data.BindingExpressionBase> y asocia la instancia a la propiedad de dependencia especificada del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="42478-311">This method creates a new instance of a <xref:System.Windows.Data.BindingExpressionBase> and associates the instance with the given dependency property of the given object.</span></span> <span data-ttu-id="42478-312">Este método es la manera de asociar un enlace a arbitrario <xref:System.Windows.DependencyObject> que no puede exponer su propio método SetBinding.</span><span class="sxs-lookup"><span data-stu-id="42478-312">This method is the way to attach a binding to an arbitrary <xref:System.Windows.DependencyObject> that may not expose its own SetBinding method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42478-313">El ejemplo siguiente muestra cómo usar este método para establecer un enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-313">The following example shows how to use this method to set a binding.</span></span> <span data-ttu-id="42478-314">En este ejemplo, `myNewBindDef` es un <xref:System.Windows.Data.Binding> objeto que describe el enlace.</span><span class="sxs-lookup"><span data-stu-id="42478-314">In this example, `myNewBindDef` is a <xref:System.Windows.Data.Binding> object that describes the binding.</span></span> <span data-ttu-id="42478-315">Es el destino de enlace `myDateText`, una instancia de la <xref:System.Windows.Controls.TextBlock> clase.</span><span class="sxs-lookup"><span data-stu-id="42478-315">The binding target is `myDateText`, an instance of the <xref:System.Windows.Controls.TextBlock> class.</span></span>  
  
 [!code-csharp[BindConversion#BOSetBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#bosetbinding)]
 [!code-vb[BindConversion#BOSetBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#bosetbinding)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="42478-316">El parámetro <paramref name="binding" /> no puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="42478-316">The <paramref name="binding" /> parameter cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="InertiaProcessor2D" FullName="System.Windows.Input.Manipulations.InertiaProcessor2D">
  <Metadata><Meta Name="ms.openlocfilehash" Value="03482f289859d5b233593730521b5b5d7a0f5938" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48636673" /></Metadata><TypeSignature Language="C#" Value="public class InertiaProcessor2D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InertiaProcessor2D extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulations.InertiaProcessor2D" />
  <TypeSignature Language="VB.NET" Value="Public Class InertiaProcessor2D" />
  <TypeSignature Language="C++ CLI" Value="public ref class InertiaProcessor2D" />
  <TypeSignature Language="F#" Value="type InertiaProcessor2D = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e4f85-101">Implementa la extrapolación de la posición, la orientación y el radio medio de una manipulación.</span><span class="sxs-lookup"><span data-stu-id="e4f85-101">Implements the extrapolation of a manipulation's position, orientation, and average radius.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f85-102">Un <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> objeto permite que la aplicación extrapolar la ubicación de un elemento, la orientación y otras propiedades simulando el comportamiento real.</span><span class="sxs-lookup"><span data-stu-id="e4f85-102">An <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> object enables your application to extrapolate an element's location, orientation, and other properties by simulating real-world behavior.</span></span>  
  
 <span data-ttu-id="e4f85-103">Por ejemplo, cuando un usuario mueve un elemento y, a continuación, lo libera, el elemento puede continuar el movimiento, reducir la velocidad y, a continuación, se irá deteniendo lentamente.</span><span class="sxs-lookup"><span data-stu-id="e4f85-103">For instance, when a user moves an element and then releases it, the element can continue moving, decelerate, and then slowly stop.</span></span> <span data-ttu-id="e4f85-104">Un procesador de inercia implementa este comportamiento haciendo que los valores de 2D afines (origen, escala, traducción y rotación) cambien durante un tiempo especificado a una velocidad de desaceleración especificada.</span><span class="sxs-lookup"><span data-stu-id="e4f85-104">An inertia processor implements this behavior by causing the affine 2-D values (origin, scale, translation, and rotation) to change over a specified time at a specified deceleration rate.</span></span>  
  
 <span data-ttu-id="e4f85-105">Un procesador de inercia por sí mismo no hace que un elemento mover y reducir la velocidad.</span><span class="sxs-lookup"><span data-stu-id="e4f85-105">An inertia processor by itself does not cause an element to move and decelerate.</span></span> <span data-ttu-id="e4f85-106">La aplicación recibe información de un procesador de inercia y aplica los valores según sea necesario para un elemento específico de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="e4f85-106">Your application receives information from an inertia processor and applies the values as needed to an application-specific element.</span></span> <span data-ttu-id="e4f85-107">Normalmente, una aplicación usa la información recibida de un procesador de inercia para cambiar la ubicación, el tamaño o la orientación de un elemento.</span><span class="sxs-lookup"><span data-stu-id="e4f85-107">Typically, an application uses the information received from an inertia processor to change the location, size or orientation of an element.</span></span>  
  
 <span data-ttu-id="e4f85-108">Procesamiento de inercia se usa normalmente junto con el procesamiento de la manipulación.</span><span class="sxs-lookup"><span data-stu-id="e4f85-108">Inertia processing is typically used in conjunction with manipulation processing.</span></span> <span data-ttu-id="e4f85-109">Para obtener más información, vea la clase <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D>.</span><span class="sxs-lookup"><span data-stu-id="e4f85-109">For more information, see the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InertiaProcessor2D ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InertiaProcessor2D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4f85-110">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.Manipulations.InertiaProcessor2D" />.</span><span class="sxs-lookup"><span data-stu-id="e4f85-110">Initializes a new instance of the <see cref="T:System.Windows.Input.Manipulations.InertiaProcessor2D" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete (long timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete(int64 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete (timestamp As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete(long timestamp);" />
      <MemberSignature Language="F#" Value="member this.Complete : int64 -&gt; unit" Usage="inertiaProcessor2D.Complete timestamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="timestamp"><span data-ttu-id="e4f85-111">Marca de tiempo para completar la extrapolación, en pasos de 100 nanosegundos.</span><span class="sxs-lookup"><span data-stu-id="e4f85-111">The timestamp to complete extrapolation, in 100-nanosecond ticks.</span></span></param>
        <summary><span data-ttu-id="e4f85-112">Completa la extrapolación final mediante la marca de tiempo especificada y genera el evento <see cref="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed" />.</span><span class="sxs-lookup"><span data-stu-id="e4f85-112">Completes final extrapolation by using the specified timestamp and raises the <see cref="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f85-113">Las marcas de tiempo están en unidades de 100 nanosegundos.</span><span class="sxs-lookup"><span data-stu-id="e4f85-113">Timestamps are in 100-nanosecond units.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f85-114">En el ejemplo siguiente, un controlador de eventos para el <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType> evento comprueba si el procesamiento de inercia se está ejecutando y si es así, lo detiene llamando el <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e4f85-114">In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType> event checks to see if inertia processing is running and if so, stops it by calling the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete%2A> method.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e4f85-115">El parámetro de marca de tiempo es menor que la marca de tiempo inicial o anterior.</span><span class="sxs-lookup"><span data-stu-id="e4f85-115">The timestamp parameter is less than the initial or previous timestamp.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Event Completed As EventHandler(Of Manipulation2DCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DCompletedEventArgs ^&gt; ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; " Usage="member this.Completed : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f85-116">Se produce cuando se ha completado la extrapolación.</span><span class="sxs-lookup"><span data-stu-id="e4f85-116">Occurs when extrapolation has completed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta" />
      <MemberSignature Language="VB.NET" Value="Public Event Delta As EventHandler(Of Manipulation2DDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DDeltaEventArgs ^&gt; ^ Delta;" />
      <MemberSignature Language="F#" Value="member this.Delta : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; " Usage="member this.Delta : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f85-117">Se produce cuando cambia el origen de extrapolación o cuando se produce una traslación, un ajuste de escala o una rotación.</span><span class="sxs-lookup"><span data-stu-id="e4f85-117">Occurs when the extrapolation origin has changed or when translation, scaling, or rotation have occurred.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f85-118">El <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType> eventos y el <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType> eventos son del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="e4f85-118">The <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType> event and the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType> event are the same type.</span></span> <span data-ttu-id="e4f85-119">Normalmente, puede usar el mismo controlador de eventos para ambos eventos.</span><span class="sxs-lookup"><span data-stu-id="e4f85-119">Typically, you can use the same event handler for both events.</span></span>  
  
   
  
## Examples  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpansionBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.InertiaExpansionBehavior2D ExpansionBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Manipulations.InertiaExpansionBehavior2D ExpansionBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpansionBehavior As InertiaExpansionBehavior2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::InertiaExpansionBehavior2D ^ ExpansionBehavior { System::Windows::Input::Manipulations::InertiaExpansionBehavior2D ^ get(); void set(System::Windows::Input::Manipulations::InertiaExpansionBehavior2D ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpansionBehavior : System.Windows.Input.Manipulations.InertiaExpansionBehavior2D with get, set" Usage="System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.InertiaExpansionBehavior2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f85-120">Obtiene o establece el comportamiento de expansión del procesador de inercia.</span><span class="sxs-lookup"><span data-stu-id="e4f85-120">Gets or sets the expansion behavior of the inertia processor.</span></span></summary>
        <value><span data-ttu-id="e4f85-121">Comportamiento de expansión del procesador de inercia.</span><span class="sxs-lookup"><span data-stu-id="e4f85-121">The expansion behavior of the inertia processor.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialOriginX">
      <MemberSignature Language="C#" Value="public float InitialOriginX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 InitialOriginX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialOriginX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float InitialOriginX { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.InitialOriginX : single with get, set" Usage="System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f85-122">Obtiene o establece la coordenada x del origen inicial, en unidades de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="e4f85-122">Gets or sets the x-coordinate for the initial origin, in coordinate units.</span></span></summary>
        <value><span data-ttu-id="e4f85-123">Coordenada x del origen inicial, en unidades de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="e4f85-123">The x-coordinate for the initial origin, in coordinate units.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f85-124">El punto de origen representado por la <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> y <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> propiedades es la posición media de todos los manipuladores asociado con un elemento.</span><span class="sxs-lookup"><span data-stu-id="e4f85-124">The origin point represented by the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> and <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> properties is the average position of all manipulators associated with an element.</span></span>  
  
 <span data-ttu-id="e4f85-125">Un valor válido para <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> es un número finito.</span><span class="sxs-lookup"><span data-stu-id="e4f85-125">A valid value for <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> is any finite number.</span></span> <span data-ttu-id="e4f85-126">El valor predeterminado es 0.0.</span><span class="sxs-lookup"><span data-stu-id="e4f85-126">The default value is 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialOriginY">
      <MemberSignature Language="C#" Value="public float InitialOriginY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 InitialOriginY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialOriginY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float InitialOriginY { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.InitialOriginY : single with get, set" Usage="System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f85-127">Obtiene o establece la coordenada y del origen inicial, en unidades de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="e4f85-127">Gets or sets the y-coordinate for the initial origin, in coordinate units.</span></span></summary>
        <value><span data-ttu-id="e4f85-128">Coordenada y del origen inicial, en unidades de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="e4f85-128">The y-coordinate for the initial origin, in coordinate units.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f85-129">El punto de origen representado por la <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> y <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> propiedades es la posición media de todos los manipuladores asociado con un elemento.</span><span class="sxs-lookup"><span data-stu-id="e4f85-129">The origin point represented by the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> and <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> properties is the average position of all manipulators associated with an element.</span></span>  
  
 <span data-ttu-id="e4f85-130">Un valor válido para <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> es un número finito.</span><span class="sxs-lookup"><span data-stu-id="e4f85-130">A valid value for <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> is any finite number.</span></span> <span data-ttu-id="e4f85-131">El valor predeterminado es 0.0.</span><span class="sxs-lookup"><span data-stu-id="e4f85-131">The default value is 0.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f85-132">Obtiene un valor que indica si la inercia está actualmente en curso.</span><span class="sxs-lookup"><span data-stu-id="e4f85-132">Gets whether inertia is currently in progress.</span></span></summary>
        <value><span data-ttu-id="e4f85-133">Valor booleano que indica si la inercia está actualmente en curso.</span><span class="sxs-lookup"><span data-stu-id="e4f85-133">A Boolean value indicating whether inertia is currently in progress.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4f85-134">En el ejemplo siguiente, un controlador de eventos para el <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType> evento comprueba si el procesamiento de inercia se está ejecutando y, si es así, detiene mediante una llamada a la <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed> método.</span><span class="sxs-lookup"><span data-stu-id="e4f85-134">In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=nameWithType> event checks to see if inertia processing is running and, if so, stops it by calling the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed> method.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public bool Process (long timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Process(int64 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Process (timestamp As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Process(long timestamp);" />
      <MemberSignature Language="F#" Value="member this.Process : int64 -&gt; bool" Usage="inertiaProcessor2D.Process timestamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="timestamp"><span data-ttu-id="e4f85-135">Marca de tiempo para realizar la extrapolación, en pasos de 100 nanosegundos.</span><span class="sxs-lookup"><span data-stu-id="e4f85-135">The timestamp to perform extrapolation, in 100-nanosecond ticks.</span></span></param>
        <summary><span data-ttu-id="e4f85-136">Extrapola la posición, orientación y radio medio de la manipulación en el momento especificado.</span><span class="sxs-lookup"><span data-stu-id="e4f85-136">Extrapolates the manipulation's position, orientation, and average radius at the specified time.</span></span></summary>
        <returns><span data-ttu-id="e4f85-137">Posición, orientación y radio medio de la manipulación en el momento especificado.</span><span class="sxs-lookup"><span data-stu-id="e4f85-137">The manipulation's position, orientation, and average radius at the specified time.</span></span> <span data-ttu-id="e4f85-138">Es <see langword="true" /> si la extrapolación está en curso; es <see langword="false" /> si la extrapolación se ha completado.</span><span class="sxs-lookup"><span data-stu-id="e4f85-138"><see langword="true" /> if extrapolation is in progress; otherwise, <see langword="false" /> if extrapolation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f85-139">Las marcas de tiempo están en unidades de 100 nanosegundos.</span><span class="sxs-lookup"><span data-stu-id="e4f85-139">Timestamps are in 100-nanosecond units.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e4f85-140">El parámetro de marca de tiempo es menor que la marca de tiempo inicial o anterior.</span><span class="sxs-lookup"><span data-stu-id="e4f85-140">The timestamp parameter is less than the initial or previous timestamp.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RotationBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.InertiaRotationBehavior2D RotationBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Manipulations.InertiaRotationBehavior2D RotationBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationBehavior As InertiaRotationBehavior2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::InertiaRotationBehavior2D ^ RotationBehavior { System::Windows::Input::Manipulations::InertiaRotationBehavior2D ^ get(); void set(System::Windows::Input::Manipulations::InertiaRotationBehavior2D ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RotationBehavior : System.Windows.Input.Manipulations.InertiaRotationBehavior2D with get, set" Usage="System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.InertiaRotationBehavior2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f85-141">Obtiene o establece el comportamiento de rotación del procesador de inercia.</span><span class="sxs-lookup"><span data-stu-id="e4f85-141">Gets or sets the rotation behavior of the inertia processor.</span></span></summary>
        <value><span data-ttu-id="e4f85-142">Comportamiento de rotación del procesador de inercia.</span><span class="sxs-lookup"><span data-stu-id="e4f85-142">The rotation behavior of the inertia processor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4f85-143">En el ejemplo siguiente, la <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> propiedad está establecida para habilitar el procesamiento de inercia girar un objeto tres-y-veces y Media desde su orientación inicial.</span><span class="sxs-lookup"><span data-stu-id="e4f85-143">In the following example, the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> property is set to enable inertia processing to rotate an object three-and-one-half times from its starting orientation.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_SetDesiredRotation](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_setdesiredrotation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (System.Windows.Input.Manipulations.InertiaParameters2D parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(class System.Windows.Input.Manipulations.InertiaParameters2D parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (parameters As InertiaParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::Windows::Input::Manipulations::InertiaParameters2D ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.SetParameters : System.Windows.Input.Manipulations.InertiaParameters2D -&gt; unit" Usage="inertiaProcessor2D.SetParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Windows.Input.Manipulations.InertiaParameters2D" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="e4f85-144">Parámetros que se van a establecer.</span><span class="sxs-lookup"><span data-stu-id="e4f85-144">Parameters to set.</span></span></param>
        <summary><span data-ttu-id="e4f85-145">Establece los parámetros en el procesador de inercia.</span><span class="sxs-lookup"><span data-stu-id="e4f85-145">Sets parameters on the inertia processor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.InertiaTranslationBehavior2D TranslationBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Manipulations.InertiaTranslationBehavior2D TranslationBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property TranslationBehavior As InertiaTranslationBehavior2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::InertiaTranslationBehavior2D ^ TranslationBehavior { System::Windows::Input::Manipulations::InertiaTranslationBehavior2D ^ get(); void set(System::Windows::Input::Manipulations::InertiaTranslationBehavior2D ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TranslationBehavior : System.Windows.Input.Manipulations.InertiaTranslationBehavior2D with get, set" Usage="System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.InertiaTranslationBehavior2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f85-146">Obtiene o establece el comportamiento de traslación del procesador de inercia.</span><span class="sxs-lookup"><span data-stu-id="e4f85-146">Gets or sets the translation behavior of the inertia processor.</span></span></summary>
        <value><span data-ttu-id="e4f85-147">Comportamiento de traslación del procesador de inercia.</span><span class="sxs-lookup"><span data-stu-id="e4f85-147">The translation behavior of the inertia processor.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>